{
    "manifests": {
        "20230829": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8503,
                "digest": "sha256:ffdac3504dfd94a8eb19258feda3098c768ed9084b785315328f7e409afd5b0d"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27351105,
                    "digest": "sha256:20274425734a05472f3772bae7ce7124a9832f5eb168456d6cb53e92d6e718a8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592232,
                    "digest": "sha256:559403e73a2bbbe7162790ab9a01b8821b245a167cf12febd64515b69bcc7ed4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12233453,
                    "digest": "sha256:6569082e05674e6a6d6cc5fe52df4e9c3deb80c8d5d410a4d72aa8d817565401"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473570,
                    "digest": "sha256:e73ef5703bf064811a78f54d90eb5641d5c97b9eb1b69d6f81f000acaedce9fb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1012,
                    "digest": "sha256:eb7aff4d75a007af2c9270dd6d93fa1b39e864ac39387faf1aa0b1f1451bf395"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 278,
                    "digest": "sha256:211af0a7a7edba81c694dfffed9fe48c8a6a5a2c3c8947cb9195070a86b37ad2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 679,
                    "digest": "sha256:edcb5a158d8fc9effb445cad897dcc7ed9d5fec602837b046818e02fe060bd89"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 464,
                    "digest": "sha256:7026cafb296c0c85d4460e3e95b5c881786f5790fd246dc05609a32b268d6799"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4353,
                    "digest": "sha256:b81e2439bdbed73367271521887f0ef12da86658103c7723b35f3f326acdfcce"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12224398,
                    "digest": "sha256:7a3aa46cd6f67b6f051dd1b921d4e42780fe69f7577d97a8c40a0803845b35a8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 468,
                    "digest": "sha256:600b3f8875c8cc140126ae794143cd325684d5b7d31952be116210604dcb2dae"
                }
            ]
        },
        "20230904": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8502,
                "digest": "sha256:46b6098e2806b33763e3bebbbece13575d55c511d8c444e7e391064622301841"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27351105,
                    "digest": "sha256:20274425734a05472f3772bae7ce7124a9832f5eb168456d6cb53e92d6e718a8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592233,
                    "digest": "sha256:ae6604f096cba3167cf802c2e3d5c3830f1f1b8390a942213ac4dcfdfea632e8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12233670,
                    "digest": "sha256:4b6e91f56148e91c5c3f09993b098eada2612ed836e6277c51636dbfeb37ca9b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473568,
                    "digest": "sha256:7b42ab3c40dc1b5d67d55828d1f26472e83d1c9c414d98175814b21e4a0b63c1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1014,
                    "digest": "sha256:7b527a3653c885d02412efd0580ca270845473e093fbc69099976cfd8c1baa65"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 278,
                    "digest": "sha256:d5c6c348a314616df2441a0ed19bbea283f14873cc4f20570862ca643d829be1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 680,
                    "digest": "sha256:402f85bc0e8d7b72d411d22bb4c13d09e8e970f6867e5c690e33dabcec804f82"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 465,
                    "digest": "sha256:d3e9368448a4effa5964fe1f8c74dab71aea3a9443693247448ec7c5234fe647"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4352,
                    "digest": "sha256:9f7ff0cb5103b62b8a3db8f0c00acad12868d9e070c3a3c384124e5323365906"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12224434,
                    "digest": "sha256:01ac6f7e4df93e1056bf15d57982d7708c90641d4458743da881ba428a27d7aa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 469,
                    "digest": "sha256:77727fa2c71bf8a49974d230eb96f1d8514ec6ad46936abea06de2659a473bc3"
                }
            ]
        },
        "20230911": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:97b9acf88fa0ac4871667652b5bf44497d78d3a42820d8777b7cbac0b9b5b960",
                "size": 7827
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:20274425734a05472f3772bae7ce7124a9832f5eb168456d6cb53e92d6e718a8",
                    "size": 27351105
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ae6604f096cba3167cf802c2e3d5c3830f1f1b8390a942213ac4dcfdfea632e8",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b6e91f56148e91c5c3f09993b098eada2612ed836e6277c51636dbfeb37ca9b",
                    "size": 12233670
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7b42ab3c40dc1b5d67d55828d1f26472e83d1c9c414d98175814b21e4a0b63c1",
                    "size": 473568
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7b527a3653c885d02412efd0580ca270845473e093fbc69099976cfd8c1baa65",
                    "size": 1014
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5c6c348a314616df2441a0ed19bbea283f14873cc4f20570862ca643d829be1",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:402f85bc0e8d7b72d411d22bb4c13d09e8e970f6867e5c690e33dabcec804f82",
                    "size": 680
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d3e9368448a4effa5964fe1f8c74dab71aea3a9443693247448ec7c5234fe647",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6e8a0c2405112feb737a2e4001427b61ce957c67da6b06dbda6b3255464247a1",
                    "size": 12221865
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e3750557176c40ce26609ef93a4430ba7d259884a09aaa8e95f56349d375d50f",
                    "size": 471
                }
            ]
        },
        "20231026": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:54cfec8d5eab040521420182ce3a1cee39b99bfb43ea932f379b799ef9b0dd73",
                "size": 7850
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bfbe77e41a78ee38147c5761aa8bc896d9f6e1e648b23468f294065ffe03c107",
                    "size": 27351048
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7d8e3a5ce2c7569141bab67dbad09ca35073e305cfe00382325fc63b448156f9",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:85b41a9a963de8053ce2b753e777313b55cc516d3a297e0663902f8179d60496",
                    "size": 12316184
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0945593605b189a6aef34e405731b4fdba340871249e0b759b6e6beaead3cb76",
                    "size": 473561
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e452cb5bd09d63c9f8f783a4f25643d1794b37199eb1f7ef9d4d3a5b29365e16",
                    "size": 1003
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:246f3a4d432fd9a259b0579f8c4d0bec180f2e5a73af63dab56fca45199fe4c7",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eec2960d0f7611d0a8f509226b0f256c11ee4289af338d0a3015013cb669563a",
                    "size": 671
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3042de505c0b156350c4aa451cc5da0be3620c026fe13fbd5da44b256dde96f1",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a7d0e900c5a8b9395b1d7456bef680196ed8266fd5c98dea90fd94bc8dac6b18",
                    "size": 12220896
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:505f9d5e55bcce922c1b14adf5338618cb32353a9da169164a34530e5498e2f8",
                    "size": 469
                }
            ]
        },
        "20231103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:50d36746518ee2ad05cc41950c170c390c9b46d1ef6a9d47ff6acab0ef85800d",
                "size": 7851
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bfbe77e41a78ee38147c5761aa8bc896d9f6e1e648b23468f294065ffe03c107",
                    "size": 27351048
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5a3af5ce777f2dd7ec2aaec6aa356e42e5a42f0d32a149e65a59b8729b1d7094",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7649e5ab76ccc98a5056f017191f42c54be18c3e003fcf3292698b328ea60cbc",
                    "size": 12316275
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a63d4a5e8479af96d464fd5787e27f0d48b463b6ae80efc19479cba025c3517",
                    "size": 473566
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0a429b17027c0d22d8906e581f5cb64f30bf0c2b8be2acd4973e2638a80226c1",
                    "size": 1005
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a5de09e3f4483dc0f854475347bb860f3cefdbf9b493bf3e12a23da46a7305a3",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bc89bb78903a175b6eaff7efb58a17e7a9690d7c7c608bc37bb86ba3b9379d52",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5ae094d17cf4cfda68a734a2d6f3164f17a5a38c65274ce0c74fc33daf45dacf",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:feab76570efd7fe591f40ddb48f944d73c8c493b584227d03d7a47bb4e6c45d0",
                    "size": 12220859
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fab6d2e621b9a66ad3ca0075a6fc7dc4abc08184ce3948dbe145fb0410e78565",
                    "size": 468
                }
            ]
        },
        "20240103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:366a6edb8f9d94a7ffc7e17d39951d7f703665b82745c2bfedd3ca570443b5dd",
                "size": 7849
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:005e2837585d0b391170fd9faf2e0c279d64ba0eb011cda8dedf28cb5839861e",
                    "size": 27358237
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9408f48a8910ea8dbacaab0bbba4ed1ddcbaa9fd0f39d1e832244a12aa84fe58",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7e06066982274a97e0cd7604312624913ba85de784880763df13ceed45bcb944",
                    "size": 12234166
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c0b1c1ca4c3b9caba461c91a6626d818414cfe5c697507e4c9184ddb72331ff9",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a53fcbd064252fb0e8a7ab29ccdf51f6bf40a09d144aa087e213c164dae25794",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eec2863e3cc73fcce4ec0a6a618e0d9efac1b68253c565e59b1f32dd4bb8af28",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fbbc495821203a386a2ce4861083dcfd8d59161671f36966b760e0f79f38f0c5",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:31c6fdc86cb96d13db495e65c21c4ccb25bfa6ce0e934c67cc270c3e19dfb221",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:82c6f8c047823652b579d0563f4496d543b39387ebd5ce87377bf732939f26f0",
                    "size": 12225952
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b4fcdfb8ffb08ca72e9c55b2772dcdfc94d08e2304deea02de8e65684338c55a",
                    "size": 467
                }
            ]
        },
        "20240105": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:1897b03d0a23c251ea2d4972ace5de526155072015d3e9a4563eb2daf5cb4167",
                "size": 7846
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:005e2837585d0b391170fd9faf2e0c279d64ba0eb011cda8dedf28cb5839861e",
                    "size": 27358237
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:946fc3325c089f36e15017c49befb3c508137015fb88007c742ed19006e40f86",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:100225a27beb4e67711e9cb9d48b451ad713a3150e654dfcb516b7597766030b",
                    "size": 12234166
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1939f20d12dbb914c8a5357384b364cc15c6e4ce3607823e1341fe28da073138",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bcf1bcafa383189abc3e0f283ce439dccc91e6b9f1592c306e38a520d645e801",
                    "size": 1005
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f96eeeec35dee0c7e24bab3f3e43312e1158a4e8fe6ba8b96c53fe185619cf4b",
                    "size": 271
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fac0bfa85c76994205d436d36203c1084b4945492f32bec33fa842d31a8a0ffa",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9cbd2eaea1c9b26427471a64959cc985ab10029f276e52bb7de9a25be24524a0",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1d4622ba6a3e56ac83c0b5a6bfa98f49df4694ead4c9e228c4da7020afdfad1f",
                    "size": 12225087
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d2e5d4caca6e6dc00742525f269f676394ca5fa34f214bf660d327dc48ed9720",
                    "size": 469
                }
            ]
        },
        "20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:ce7cd5b95c7c46548a5861f3f03691ca2a31c1e6f9fa7f05fecda381f44c81d4",
                "size": 7837
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f4bb4e8dca02be491b4f72d2ef2127a64ce49c48d0d9c0a0fcaffa625067679d",
                    "size": 27358724
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8ff11e77b26351277ff2a0f7f57de0e2fb9d02b5be092feeb05f226ceb6ba3b7",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3c694bb7c6e354d784246b814440da89d55ab53bb249fe04f4ca407b6bef8755",
                    "size": 12232965
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:846ad103b86fcfbb538630714a0fb8bd9f0fff97f12cf86395da6bb2a73887ac",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:18090be9c466318b3ea02cc6448f4df9e47a0d3d52f1ace7e9a568e37a5048b1",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2eabd6f86977cadfa4a0b81a4549c3c23b73f9d2065c284982af5ffcdb77197b",
                    "size": 275
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:84ef6d70e52d2cfe921008e502281995e4d0c18efadabed15bb11057d14a955f",
                    "size": 676
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fedc60b46a8c9d3ecaa5ebc92bac8212b64e81d6d578cea5d3d18d7a49eb754e",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a4509e321f0f31cfa06836dfd026fd2fef1346ca86326996b72f5e908fa31008",
                    "size": 12225038
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:da4ea0e91794582a40c3581cab3b9edc560f453bd0ef58f85fb8b513db05d21f",
                    "size": 469
                }
            ]
        },
        "20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:97b7697f705141dfb63207b766cdc9077c5e4537c54580b6fea6ce82af60958c",
                "size": 7837
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f4bb4e8dca02be491b4f72d2ef2127a64ce49c48d0d9c0a0fcaffa625067679d",
                    "size": 27358724
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:81057abc74d5de25182a92d640d3a1237f10256f98fe1e82d445b39778134a1d",
                    "size": 2592218
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:099b0f81922f80f716f12abbcf3bed657b817486040705b3c691b8cd09624fef",
                    "size": 12232968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b7650831ea69e17d63080487881b8fce883b0883307bf1daccd03dd4e4fa6371",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8941baf7a44298e644f522e0af80d3fcd1e34ed60e5c554e1341f9b36d9654d0",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cb329778bf8f72448034e258b232c88b697f8519b5d23f09211bcd858e073cd4",
                    "size": 276
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:71c1a139d3f8524a8ffdad442be7f314363fcb7c7af004c779bf830f9e95bd59",
                    "size": 676
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2233a8d3d5bfebeadb0df88dab38b780f332df712ae846bb8afda80ad41f22fd",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e661d13e715bb628df9bc6504230a0fd4ce3e1f2108f372a08279a940274e7ce",
                    "size": 12224423
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:39efea86dc1580c79c2cd8775841e9122062dd15fc67e54f3b4dfc34304d4060",
                    "size": 471
                }
            ]
        },
        "20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:44a1f0fdb5a7101957b18291df431b0bbba36eb4dac029368abb70574473e832",
                "size": 7836
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5a2ad729c09fbfdb259ae764f92188efc67a615ffde9bb34a46298d1edf3cd6",
                    "size": 27360530
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:89399c74a38da68191a3f2228d93a279ac592fdb8b032f45d7635589eb1f3f27",
                    "size": 2592225
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5e71911d1843b73d9940a8cfbbafd038bb11df4f7c76f94ababb1e5eb59dde98",
                    "size": 12233707
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:07d81f195fae90668bd7bd2ed99c3cb5c2df14a61d86dd6ae63e24db88e9780e",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cbae211fb5e96faba2a036f002e70760fa5b0a46fe1f1337ba8a9a1b19f85f7f",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fb981c3534828254334770cd368c2465968ad2b1aad8faa10f0abfc5dd89d9b9",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e12833949768d9e8cb41ce80e65cf1b5dbbaabc3c20865913db17f4a944cfe30",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c27fa31ed6b63aa8d7f935c6c8ce2aa270dfdda6fb91aef896978f168b5197bc",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4bb506c9fe910252d41ba190a2406ab3bfc904e60a006721e81396d53d69395a",
                    "size": 12224181
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7bc7e75a54169630919ca0d4eb24815f28381a7f5525d260effa3b9b6fe441af",
                    "size": 469
                }
            ]
        },
        "bionic": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:4ed2a4e1e964063d61c15098113024d4fd1687c19397d52c3709c54ff79b4fe7",
                "size": 7840
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:064a9bb4736de1b2446f528e4eb37335378392cf9b95043d3e9970e253861702",
                    "size": 22713516
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a0b305cc46093a80a6f40bf288429161a0212cc4ac913f4202d5b5e7a8953ad5",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b8247deee9cdacdde3e7a7f6c5b7baa6d7e6f6989ec7cd16778da899905c0b93",
                    "size": 12248924
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8785dc25316605872192bf562505444ca67005239aff61060a59fd9f9aec0240",
                    "size": 473571
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:41ea3f4ce63bd147c12c0ca4754a47ed6d7ea99638cd04da3a68188928e9895f",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f2fd70ceeef0d142f93958e4e067a727f2b9f88dc157b31dd7d3b65c026b3a1d",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4298eccc2265bc980edc2b8cc9347d5cb99d9f653c53f9132c8eddcb8a228ca7",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0052233b62cfffd832546e3e814318fc58dcb3f0dc7589376aa8b53a191c28f1",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b2f4f6c81a8d192bac518e914a24cf02793a6fac547c45283562eff544fdb516",
                    "size": 11183569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:da3ea3b7f935c89ed83f4c6548cdbb3c323ac6198db445274b820896783b69bd",
                    "size": 470
                }
            ]
        },
        "bionic-20230829": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8503,
                "digest": "sha256:ffa0abef64de08adbef787e8ef8006b7d1fcc669b23f2ada1e39415669697e08"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 22713516,
                    "digest": "sha256:064a9bb4736de1b2446f528e4eb37335378392cf9b95043d3e9970e253861702"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592233,
                    "digest": "sha256:4b1efa5abd0e81d11dbabcc592ef26adc4c2aad9705bec82002a7f833a53fc57"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12248839,
                    "digest": "sha256:a1933c7ef3edfa537b1fc36e738255dfd532657a637cdaa50be9ceff2ea70f9b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473570,
                    "digest": "sha256:e66684c4a1cd0b9adcbab257d18ed3cfc9435b8fcd148eaafd768429946e67f8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1013,
                    "digest": "sha256:9940ec8e0defc776dc8391aa12dc264edb1e95906392e59801fd8498832135e3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 278,
                    "digest": "sha256:a664730454bbc851c86eef59dab4f3c9f55ede77f919d18af7fcbeca694365e2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 681,
                    "digest": "sha256:d9c6af840df4b1bd2fc31e4b6bb31e893b0426c41171b568c26a5137c6c42208"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 465,
                    "digest": "sha256:65bbc7d9ae17b22a4408fc097a9d013e1fdfb6004f45d1fde0b9f0a802baafd2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4356,
                    "digest": "sha256:4ee209b28c601d604cddebb942c555e314d781936fdb6d56a4e4a6d5fb313689"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11187540,
                    "digest": "sha256:258dd340b8c8810d9f158772e90f703ac8bcd3405a43f336b1e003c089f7aa9b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 470,
                    "digest": "sha256:baeacfb647d435e7e300ac1edbe7c53236821ae18bf59b17fa6a128179c26863"
                }
            ]
        },
        "bionic-20230904": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8508,
                "digest": "sha256:1fd135248808f0b9164bfae658283f3cc87c9e1c1b7752d83fbd951481c890cb"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 22713516,
                    "digest": "sha256:064a9bb4736de1b2446f528e4eb37335378392cf9b95043d3e9970e253861702"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592232,
                    "digest": "sha256:103c35aa6b613a2f4cc1d9defb24fd25cb8bfba337fa3b033ea1e6ed2a4ccfdb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12248895,
                    "digest": "sha256:4487dc0552da49920a7ee4dc146aa9b4b6afad9aad44f55d2db4396d092d5c4a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473570,
                    "digest": "sha256:f57e8439afde29eea976fbc9bccdf6d2e83033e233bfc502e777e386a94f3954"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1014,
                    "digest": "sha256:028090ccd42aefd73b954d8f2dbfbf47533b03893f529b33c2c22e0572175254"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 279,
                    "digest": "sha256:2bc2db52ffd16f54466a11bbca5562060ec11e07054d2a4aedce48a67d86c1af"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 681,
                    "digest": "sha256:f2d46488b3149bb58dd2d2de1ce1488c2d22905a0d548b56d6d7ecc25ecf2db4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 465,
                    "digest": "sha256:b1f4b1e6358bc6c42898e3ac1aa4d1da3a8267339960681cc3d9db9e8fda1eb5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4357,
                    "digest": "sha256:46d6f8b7be6e95e86630dd35bcbc2e94df6687829cc9110c7def95c565316f18"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11187804,
                    "digest": "sha256:f2b9d85d024b5ad6e512513142e723aaeb2373f5672ea86f1a8ee68c2894bf91"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 470,
                    "digest": "sha256:80b2e50e3f35e06a14d7021a330cf820f4a7a2fe478cbb69633ee5d4528ed0d6"
                }
            ]
        },
        "bionic-20230911": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:653a1d3f5e62bec303bb8c067770c890302c2962d6a6a093ddc570ac94772e32",
                "size": 7840
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:064a9bb4736de1b2446f528e4eb37335378392cf9b95043d3e9970e253861702",
                    "size": 22713516
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:103c35aa6b613a2f4cc1d9defb24fd25cb8bfba337fa3b033ea1e6ed2a4ccfdb",
                    "size": 2592232
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4487dc0552da49920a7ee4dc146aa9b4b6afad9aad44f55d2db4396d092d5c4a",
                    "size": 12248895
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f57e8439afde29eea976fbc9bccdf6d2e83033e233bfc502e777e386a94f3954",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:028090ccd42aefd73b954d8f2dbfbf47533b03893f529b33c2c22e0572175254",
                    "size": 1014
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2bc2db52ffd16f54466a11bbca5562060ec11e07054d2a4aedce48a67d86c1af",
                    "size": 279
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f2d46488b3149bb58dd2d2de1ce1488c2d22905a0d548b56d6d7ecc25ecf2db4",
                    "size": 681
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1f4b1e6358bc6c42898e3ac1aa4d1da3a8267339960681cc3d9db9e8fda1eb5",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:18ded05be91a7ca3fc4ef5d66e0ca9f32bd2792dd0da13efa898d81e3a80b5e3",
                    "size": 11183327
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5786566332937b6ab15461b29e858a0735b7c8f6e60b6046d01d9d0b1c579cd",
                    "size": 471
                }
            ]
        },
        "bionic-20231026": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:af8b260d5fc336f38e531cad4ac76c7c2e998d66d0c71a8fd21d35b71cf21d99",
                "size": 7854
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:064a9bb4736de1b2446f528e4eb37335378392cf9b95043d3e9970e253861702",
                    "size": 22713516
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:062e8805b65978bfe2ee9c6ab704ad601acda403191f79ae78d82ceb2aea3d44",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1ec00e611d2e438eaa1a9d0b41e17c548b3dcafdc8ce9cb4ed2c76e09dbc2e32",
                    "size": 12248874
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f26798ec10dde05557088eb04eb76affeb4c50da5036cbf023fdebfe8d2de116",
                    "size": 473571
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6fff13c76df247db2acbbc7156c2f1bfafc702a6e8b8317080856952c4f1b8ee",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fb629060496edee3a65cca4bbe45658896e8ec6080c106b73d0a46bc5370c047",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9ffb1729e2f214727f433cbaa9de029598581f35e04946dd2127f42ee168c4a7",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7b72b15be541c9266d93d1f5606fe478bd7f3edb7a7c4c08e524b452e918dba5",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9d15bd45566b50de1ca7a8c015c52ee40df702a3588d1b5cc2cbd8d09876890f",
                    "size": 11183701
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5294b848d6cc38d65c207ed14d19c1db126c29dfbe493fffdcafa67a4ae32c8b",
                    "size": 470
                }
            ]
        },
        "bionic-20231103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:1d6f2b426afa8db89f925b02cd71823a8603f5f4165c1da7a1eb15a5698bce70",
                "size": 7855
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:064a9bb4736de1b2446f528e4eb37335378392cf9b95043d3e9970e253861702",
                    "size": 22713516
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dc3a39106982c7d41eb884809769c9a95776fbcdf22c70ccffd1a4c78c29f191",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a4609fd7196a529ec48167cc7a512fa27346e61003356e1f3035fcdf69dbb76a",
                    "size": 12248813
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a4cc8098d229118582960acc948cbc3751499ee168398a1d8810e432f78ce28",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:24ae1f94eef6422901198888594949a7610ed4ccace906959bec4b59976e503d",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:721b6c0d6bad9f93cf119663651fcf17a236cc7d7a8996ebcf3395d08ab5b1bf",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8700839622c3f21d733302d74ea2fa50bbed9134e862522cea68acff147da2bc",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a732c0e01b67253239c65b1f5eabcf37ac82c25dff6681330433d5dc14dd66cf",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6d6c99a4adb11898eaf3b54a460f54bd3b5a89ceb7ad2b0280cd4bc8de9919ba",
                    "size": 11183705
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7cb02c12c65a9ece0ee3a25e296d66bf6b65fb3d11fd325ec888204d11a04f79",
                    "size": 468
                }
            ]
        },
        "bionic-20240103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:766e34869dba6520568550c7245f4235b3b6ad2941993504cc6ede66d77b4997",
                "size": 7855
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:064a9bb4736de1b2446f528e4eb37335378392cf9b95043d3e9970e253861702",
                    "size": 22713516
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3e59d9b2692ae5ed8c9c861ffd854ca5eb0d201c60c7f2632eb0920ba59f2579",
                    "size": 2592225
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:911374063e1e6f2fff79632db7baf92725c4696446b107535d0e3ba3de0ce2a9",
                    "size": 12249004
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ff023d5d4b4658a19777aa9ffdf495448f6df48aebdc8a5678eb20e3b25d39d4",
                    "size": 473571
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:77ee7b5bb69a44b33b58095bb61a5ebafa5452f23b3088ff4a8443d608771ae1",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d233e0ab555e3a211cc27d06b58aea11f40d1af40130943fb737067254464c2b",
                    "size": 275
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5f57d4d230cfe4ab26c8972b5d7d1e9d37d7cdecc5742aae7c1f43d3264a4c2d",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ffcd939427a0f4174dccf15732d972680154bfa8a892cb68c9632a604c85eeef",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1b5031b1dbdf52d5f6eb279db738d8c6d2d9c37229bbb74bc932cca30de0a915",
                    "size": 11183506
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8e580cd27a3d418b2bfd94d5046b5495d29186e99153057ef9f3c477dfeb006a",
                    "size": 469
                }
            ]
        },
        "bionic-20240105": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:77cc72f8f661f15a99f1116e37ca628aa0df448f8bbd452b0412bb286358b8f5",
                "size": 7852
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:064a9bb4736de1b2446f528e4eb37335378392cf9b95043d3e9970e253861702",
                    "size": 22713516
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69ebfb0b3b34bcef9474f0bf978e969da1eed1091b540e655917b612f382ebef",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8d563d1ecd5fce36b69d8dbfa9c2458eed6acd5f408df5000609f19610e19c4c",
                    "size": 12248955
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:39ae6582d4904ee9da2562480f246747f5b620cf1fb8c2952abae1ba3c89edc9",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0fbf04fdd85e98d4cb4ca5972af156f9d636e5740720aff781389cd1f2381c2f",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8f2e14d5921c1ee1bf82374e7170570d4df0415ee4beb958dba1d80da35e8d90",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9bc7861740bec3eb53f5b41df0fb310b7a1ab6a210001d526a0446e7b49fad17",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1c9edb823c15f75134f147b1714226832188f2656176683635d61c77f13e2f5c",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4017a31c6aadb2149f48262eb7d87cf54f74bde8e9bcfe5bd0b5247ba4ca063c",
                    "size": 11183576
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:398ed308d0c9bd7c20eeae53b2582b6ece81b9273388b3c1a5c17755811fceec",
                    "size": 470
                }
            ]
        },
        "bionic-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:9ff5455dda86f0d7fc5490ab1d4d397a5669d7be48781d69efa8dc3836ef2bbf",
                "size": 7840
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:064a9bb4736de1b2446f528e4eb37335378392cf9b95043d3e9970e253861702",
                    "size": 22713516
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:308b58446ebe3de86369cf3e22fc5f66acefeeb814bc8c7111241b920a5c98b6",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c54bb8b10c32ee22ce79055629a76e0b7f5caef73f09e8bdd71f045749983cf3",
                    "size": 12248911
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ee68ebf232af3ca7fadfb09e728aa8f9b2efa3d7b325aaac6bbb2bc75aba1940",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5946f9dadfe198119111cff958abfb11c93445adb85c8c475e8c34122bd7147b",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:adfb42ebc5cefc3ad3c0edb6e45c24115b1738272cf695d1975fbd141172a43e",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9cb85271c2663c63453ffee6411563a67f016b45ccfa4aed2275062265b6c16e",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cc7bb5153168932468799b12586bdeb09637cfbb0f6d694499a884746434b14e",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c8bb433efe175fc33477092fa729a01b8f6b522df5c2fd156bf3855ea93841e7",
                    "size": 11183563
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:55a00926fac8c5e71f0f740dc698d7611cff034fb971e39317763b6745b7655b",
                    "size": 469
                }
            ]
        },
        "bionic-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:2e24664c01a589ca7df1936a9b464f21bc8fd556abbb834f38730bff98112b1a",
                "size": 7839
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:064a9bb4736de1b2446f528e4eb37335378392cf9b95043d3e9970e253861702",
                    "size": 22713516
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0c39d4f490df55aacbef9bd1acce9ea611bcc272d514d372ded74ff015f9a108",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dd018c1ed30263c2f30d1f3ad5fb0c79833ec9bc55344de0151b7afd8cef8b54",
                    "size": 12248972
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ee0114a69a01c12afb1839cbe49365db1d175bf431da473fa5b946a7bbd41ee2",
                    "size": 473571
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aeb4a57f8d026ca9496c41ac5a3cdd8e19fee1cde5d89f986dae4f77aead17c4",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0cd3635777ef14cccf31dda1e657d4b3d0b9e899733c827b90e73266d416791e",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2d531854d06a2e65f1a9e5dc9b86e10d022776a01b45efe3c6b0ba0fa7b11aad",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ff31c36712129bbc187170ec594a6b4aa2de5ee9df7d3324ae4475de78c2b509",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:15cb58a781f443a55f9e242577bdc0e68ac0dff492645ba5fc249d13e844bd95",
                    "size": 11183526
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8d597388e59a7c53040149c22e33c1df02e239c234313b2f3f2f537759447f39",
                    "size": 470
                }
            ]
        },
        "bionic-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:4ed2a4e1e964063d61c15098113024d4fd1687c19397d52c3709c54ff79b4fe7",
                "size": 7840
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:064a9bb4736de1b2446f528e4eb37335378392cf9b95043d3e9970e253861702",
                    "size": 22713516
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a0b305cc46093a80a6f40bf288429161a0212cc4ac913f4202d5b5e7a8953ad5",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b8247deee9cdacdde3e7a7f6c5b7baa6d7e6f6989ec7cd16778da899905c0b93",
                    "size": 12248924
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8785dc25316605872192bf562505444ca67005239aff61060a59fd9f9aec0240",
                    "size": 473571
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:41ea3f4ce63bd147c12c0ca4754a47ed6d7ea99638cd04da3a68188928e9895f",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f2fd70ceeef0d142f93958e4e067a727f2b9f88dc157b31dd7d3b65c026b3a1d",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4298eccc2265bc980edc2b8cc9347d5cb99d9f653c53f9132c8eddcb8a228ca7",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0052233b62cfffd832546e3e814318fc58dcb3f0dc7589376aa8b53a191c28f1",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b2f4f6c81a8d192bac518e914a24cf02793a6fac547c45283562eff544fdb516",
                    "size": 11183569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:da3ea3b7f935c89ed83f4c6548cdbb3c323ac6198db445274b820896783b69bd",
                    "size": 470
                }
            ]
        },
        "bionic-build": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:f8be13add3d977968d9d6a16b0314474c6ab6c7b7bda1a7fdc1e54a9475f7cf2",
                "size": 8759
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:064a9bb4736de1b2446f528e4eb37335378392cf9b95043d3e9970e253861702",
                    "size": 22713516
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:31043480564b2d4156ffa93b518e87b19481fd33466bea59c89909da577d0101",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:80b407cf38858b2865efe56780a50b18f39e55424069b872b56d398d98e8c84c",
                    "size": 12248819
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aea0026b0a5ddefd96684651a2611cff8913e7186361e8ce401cbff8b02d9c7b",
                    "size": 169372735
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9d41f0f0c990f2292ec02285c4873ebe3ef8220adbaf905bd8b00ac133280e9e",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ec0d1626af63d5222392bb7a82a45ddc231870ae62a82c874ca584f610c88bdf",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ae4c99d1e96dad365cf07cd7510919b389cf500fa8c8ebd41c5f2cad550d5f97",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:654163c599c55ba350f3bf325df9d475f9844246d32e234490f8b36927a77018",
                    "size": 676
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7f5ab7e13386e09c2a5f3b0e14ba37114b5ccf0ff775930676512770572b79d0",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:969036886ac2949e52b30abdb1004c68e3048e7ff3b0f623d0cdef455ce43e25",
                    "size": 1309343
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:25eb9808407ca4f120f2b51fa1c9e935b94f3fed76963b3b0eb6abc08af58b57",
                    "size": 466
                }
            ]
        },
        "bionic-build-20230829": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9427,
                "digest": "sha256:bb94430ba73cd659c2908fdf563dd90b745a4b0d57aee55f453ac423f7d5b95c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 22713516,
                    "digest": "sha256:064a9bb4736de1b2446f528e4eb37335378392cf9b95043d3e9970e253861702"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592233,
                    "digest": "sha256:4b1efa5abd0e81d11dbabcc592ef26adc4c2aad9705bec82002a7f833a53fc57"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12248839,
                    "digest": "sha256:a1933c7ef3edfa537b1fc36e738255dfd532657a637cdaa50be9ceff2ea70f9b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 169374220,
                    "digest": "sha256:4fe37683b5a763da35076a87c4af4c14f08977f91e56fa94702ff24bb9d7b10a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473570,
                    "digest": "sha256:956df5205c36c4d17d81eaa1207578fa7196c45d386df73b816dfacb8f1ec117"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1013,
                    "digest": "sha256:75f5f1d41b891d8f5cadc2e5449b90adf4cfda01f74c80bf8a7710c4210ffa4f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 278,
                    "digest": "sha256:a2ba99caf4e581e627c09bd333b2a5654ee05a5f00bf91883cb474624c62ab53"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 680,
                    "digest": "sha256:77f9a968c8f63cbd6a844890ab8c9b81b14de51d968ee31b36441fc92af34aeb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 463,
                    "digest": "sha256:8505b61ab13e8263c37fb5ad023a0f82a1b9dd64d94d37a96c19b83b856adfae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4355,
                    "digest": "sha256:03d9d2053540ea746fc571c7be382d9459a01321371dbca93943f3e3fb313d77"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1309415,
                    "digest": "sha256:c1d8b757c9bc2b8c6f3d753c7f0f203745b6ce2ff42e8475665b816d48d3d721"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 469,
                    "digest": "sha256:b3690d8150dcfeb9da0b475d22c267a8ae20c1eee68aab48795dab24d42e96be"
                }
            ]
        },
        "bionic-build-20230904": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9429,
                "digest": "sha256:3731048be304807118018d4fcedb4f4e56b63955d63a15717a3dc410a4daea6d"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 22713516,
                    "digest": "sha256:064a9bb4736de1b2446f528e4eb37335378392cf9b95043d3e9970e253861702"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592232,
                    "digest": "sha256:103c35aa6b613a2f4cc1d9defb24fd25cb8bfba337fa3b033ea1e6ed2a4ccfdb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12248895,
                    "digest": "sha256:4487dc0552da49920a7ee4dc146aa9b4b6afad9aad44f55d2db4396d092d5c4a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 169374242,
                    "digest": "sha256:72ff6717f3c3c0ecb0e305bcf80d988836464cf29b8242448b5c2cc374232a0b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473571,
                    "digest": "sha256:dd4beb432440ea3a97ac8a34b8b9deacf2f6db48c03949cc7841cfd540f1b39a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1013,
                    "digest": "sha256:90e61dd08ba405e6cf11b3bb7cc186d78b388543bef3ff8c0bece2083cb00e70"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 278,
                    "digest": "sha256:8eda7e14abaf84bb753ae5181d417db6a0fe7dd4b0133d4a6b69eb1fde509bd0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 679,
                    "digest": "sha256:a0a0467b976288887c6e9a4da3b49db45e497943a8ed6151b21174c912a08ffa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 464,
                    "digest": "sha256:60af147838bbb7a768e5e763f86529389ffeb2c7f1935823d839e8b6fb13140e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4352,
                    "digest": "sha256:aa7868729df1073f7a97ba9b9ce26a53b92ff124ed37b69c131fa5d085bb1d2a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1309411,
                    "digest": "sha256:98c8abac241925fd137d6aeeec7ec17d68817f6f5e64400cacca6e43c6364862"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 469,
                    "digest": "sha256:2601e8f731b124e3074ac2cac7762ffd888c856a3984ae9424766e4772a39ca1"
                }
            ]
        },
        "bionic-build-20230911": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:2953b69757620fd7f3d58bbf5e692d52b417c91d981d9644e1e1a41009e53a17",
                "size": 8760
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:064a9bb4736de1b2446f528e4eb37335378392cf9b95043d3e9970e253861702",
                    "size": 22713516
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:103c35aa6b613a2f4cc1d9defb24fd25cb8bfba337fa3b033ea1e6ed2a4ccfdb",
                    "size": 2592232
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4487dc0552da49920a7ee4dc146aa9b4b6afad9aad44f55d2db4396d092d5c4a",
                    "size": 12248895
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:72ff6717f3c3c0ecb0e305bcf80d988836464cf29b8242448b5c2cc374232a0b",
                    "size": 169374242
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dd4beb432440ea3a97ac8a34b8b9deacf2f6db48c03949cc7841cfd540f1b39a",
                    "size": 473571
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:90e61dd08ba405e6cf11b3bb7cc186d78b388543bef3ff8c0bece2083cb00e70",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8eda7e14abaf84bb753ae5181d417db6a0fe7dd4b0133d4a6b69eb1fde509bd0",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a0a0467b976288887c6e9a4da3b49db45e497943a8ed6151b21174c912a08ffa",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:60af147838bbb7a768e5e763f86529389ffeb2c7f1935823d839e8b6fb13140e",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:76dd8ec4134b30b42df68ee38d82fc5566a78d9ce86a61e3fec19808454e8c97",
                    "size": 1309482
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:880ea2b0f180a643509852e169dcfa228649221ba3832d504adeb20d9583944c",
                    "size": 471
                }
            ]
        },
        "bionic-build-20231026": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:c0696a45e6ac30c03b0a4d0df63c2e3b1cd186cf687c2e0d17ec5f070f68ca67",
                "size": 8775
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:064a9bb4736de1b2446f528e4eb37335378392cf9b95043d3e9970e253861702",
                    "size": 22713516
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1a978a0f338146593ffc8805ac9f059beedc2983a18b54a53826de8050c13aed",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:da482d1caa546ca65724d334e88863d387b4b25ad0b2a3bc1efeafb79e653fca",
                    "size": 12248774
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:894d81dd03f775a1bf712380c03c3709bbddec0b249271f091be7cbdce1dea43",
                    "size": 169373218
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:58cc4badd70068e45c191a2c47be947f778e1f644e46731d1d901b4beace7399",
                    "size": 473571
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:613ff0e17e1385edebd4e4dd9c3031ac57f1b637ed25cfe925ecac3acedf2ee5",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6ab3c7419ad8eafe23a9f44e07459f37cfa956701f7ae5af5b36c6224be92fb9",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e5e8dce9f992b5c5d6484b6db4f23f4f2d8cfebfb95455df94d505b9a8274192",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e09fee723d8c59ce4502c897a853faa24e7bdacff7580233132f556f86ffc84c",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0cc3ef62559666be630e98a67b1a54af361880a6ed3a6f3447a420b72e7a6daa",
                    "size": 1309513
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4ce2520f5deef28053cccaaf7cf505095baca6b6a7dbc4e042e9cd3e1f2016c2",
                    "size": 468
                }
            ]
        },
        "bionic-build-20231103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:38a32649e9a7ac04c580897aba3bf99baf17517f59c49c0c92af50605fbb99b7",
                "size": 8775
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:064a9bb4736de1b2446f528e4eb37335378392cf9b95043d3e9970e253861702",
                    "size": 22713516
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:48ebe489cdd1c1c03dc645d8c0f92b34218dd4b024d7cfd18047414f6aa1b6aa",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:db98bb4b5c6680ac2b1d2be39b7c3bf4b6f9137394d00f92b1a43babca8b0bbd",
                    "size": 12248785
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f74acd5d640f79afebbad6b9bdf6e34f7486c384d96f98c21ce82a42fff52c2d",
                    "size": 169371996
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1619a5897100a9cfd0f606f569153333297389441d626c45502e66aa893f9aad",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0cd32dfc33ff7ffd0112133d520d4e739b12de2a0fc0390559012dea37fc1648",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0e00de2ba696dd64e4ad87db1efa16a169beaab25ac336d59fb1f2b608330e5f",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2eda9e4e8f09f21f4eeb51ca94e0b3ead0826566c9d1f411cc1fa0a521525f09",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bf352fc03082544d5390a5e5e0b7a1ad53684eb7194f26dca14f50063b9bf894",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:01730247fcc3018d7f0ced653d47f368e128f2c3b0e074d569ec23eca9d90e7b",
                    "size": 1309338
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0fcb43f45f9dd6991462d533cf926c3be92b095d72145258d350bde07d10ebb9",
                    "size": 469
                }
            ]
        },
        "bionic-build-20240103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:b5a026cdd356f505ae98bda0d3aaa5e98a77eb4623cff15c9a2e9986b893ca84",
                "size": 8773
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:064a9bb4736de1b2446f528e4eb37335378392cf9b95043d3e9970e253861702",
                    "size": 22713516
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:880621db93da2533e314240a6f86be74b4ce327184a44d868788d7f4e074a6a0",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e612bcf9e88920ddc7e819198c0ea08c0d06d6e97dbdc861ca2ecf491a4ca7a1",
                    "size": 12248854
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0eee754ac9d8a73c2f53dcfb66d75d622c8f9d3edd9ef79efbf2e411928bc694",
                    "size": 169372840
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d6f05e00a0f1fa11d435d4eaa30ded6f0ad05ba82b1953ee3f4f77279a9fcc79",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eec4265f85c31f3b99f737baef97d312d50e8826511572453eaebd9cadfb602a",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8696343545fb0a6dd2af832fb5b3d231ca17cbb96753f199eca0c9dd1684daa0",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7107ab5f2899f5f56e2db0b1e1ac5a85393601584ca4690c2cb9e27e3d18c8d0",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f3053c5d8aa488e3eb4e7cf1965c6794de9f4b9abccbe19bdcce766240bc155c",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2c65f99dab5c35ae5caf5b48eac61d72ff393439642c6c49f94da3efb333d7fc",
                    "size": 1309348
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:28a288a650a4bea838c8ca73e66523c2b49a0d901b28bdbe63d43d7d5f84d530",
                    "size": 468
                }
            ]
        },
        "bionic-build-20240105": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:48bbfd6be3385f50adb48e3806fa53beda006efaadb0c816c71b347e9271ed66",
                "size": 8771
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:064a9bb4736de1b2446f528e4eb37335378392cf9b95043d3e9970e253861702",
                    "size": 22713516
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:deb809e1f5e819653eb061d87011aad801074f264c966e1db72979c305a40830",
                    "size": 2592226
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c35f5ff7d1cdf49dcf5a15d00c9fa4c9d3a11cc0428489cc669621bee80450b6",
                    "size": 12248920
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f425007548026a76d9d50d5f4444cd21a79224eda6ce2c6091154cf4d8b1cf6d",
                    "size": 169372315
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3191e0a740f17ec1ccac20973001d42a404665e6f2e6548e7387017827b41378",
                    "size": 473571
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d578b38ec06b311f794efd35341ff307e73231e2c278afebb8950cbd7123643c",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:958fc05585479fa323cd15ae18cb8609bffe533a1b05d0a8186779da744f6f19",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6733db480941d20296b66870932ce1a393a9ca92e615e58894bdf2e304450be1",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9569cb8daa6e3444f2a78c6191b47ed766a9fb66287abe5c14b783f3759468bd",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4c21fd401e32885f5e323809009d05b1c25a636f7e9f6959120e00db500b5e05",
                    "size": 1309381
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fa73f1fc9750acc71704f06b8aff2034f654447e0a3ba531c231cd1df5988614",
                    "size": 468
                }
            ]
        },
        "bionic-build-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:fe258af28174ed9a860dbc50da4796df7d90acab6bc4206e73744b38e797ad37",
                "size": 8760
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:064a9bb4736de1b2446f528e4eb37335378392cf9b95043d3e9970e253861702",
                    "size": 22713516
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f4dcba5fcc087ac75b25246981e0af2a2cd3d8647e2f5cd786c8b252375b2d4b",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4500ccef6042382b89b1985cb1dd7be14a571f87b6acaea527335768ee8d5135",
                    "size": 12248943
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:629c5dda2b4e3f1d24591c3bba73e98fe28ba99319072e0b665060f5b7e4a1fd",
                    "size": 169371912
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dd732a7901707ff87b5463c6f9a27233dd467e61e532c45d2495514938191153",
                    "size": 473571
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6c3ff0aa7207d7dc141e2df2552a3abcee00f1332784b2deb17e5e512933a4f1",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:58a3af7651e80725ed3fbc163435854dafe43c26d7737effac81515ea2ad8194",
                    "size": 275
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:183e1fb1a1f85e4b7aa360aac15a6be1d61dbe20b4668b114278c2f3969da7d1",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:26af0ab04c94b0a890af19d7ee13d00d0674543b14bcab5b5830f9788805f762",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6af60b75c5623337b16fb479a23f6ef7be0bf93ceb64cfb193a479775f6efe49",
                    "size": 1309280
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:75318d2b76ab2915e0ed33b491614057e0fa62b347d24605797a69cff675ad6d",
                    "size": 468
                }
            ]
        },
        "bionic-build-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:fc2604f6bbcd3e7d3046f092d35ee4e1f08bf626ba11dff187e28d38d01711e6",
                "size": 8756
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:064a9bb4736de1b2446f528e4eb37335378392cf9b95043d3e9970e253861702",
                    "size": 22713516
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:26ef37aaff0bdc6e29c3adbd61e0c0396cf224166e4fdab20e5866c38f2ae779",
                    "size": 2592232
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c843cb736fbdb1693ea308f67bcb0af6535974cd910af9b6119388fb343092e2",
                    "size": 12248922
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c29a33ae08c7ef4ba43bc118a132122fff49950d4c5ae788ae08af1db6645eb8",
                    "size": 169372322
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fe9ccedf79ff20a471d42521f2e05780830614a32f001b5e4cc72291497dbb26",
                    "size": 473571
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:11f0dfadfe81a33514c0b36c765a673ffd83d0f2b58e25232246d4e8bad90ae5",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:352ed8ba74ae3dd5fb6e63f0797fcd88dc82bf179c63c807bbf618195a5a8fac",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:13bdf2ee511c23b90bbab0f113a229dda6c6ad2656af7c947d9e15e8637d541e",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bc326b9d9b8d13d324e62e8ed239b147e3d66ad46fce0924f9f2ab5b46eacba8",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:edac06ee947f75fc212cca9000bb4c9e8e0eb59e4b9b99f56b2838590899c5f3",
                    "size": 1309324
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:850c73b44c0f21d1ea20cc97eff40b906ec0ebe8d8ce94617b81df5c3f220934",
                    "size": 470
                }
            ]
        },
        "bionic-build-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:f8be13add3d977968d9d6a16b0314474c6ab6c7b7bda1a7fdc1e54a9475f7cf2",
                "size": 8759
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:064a9bb4736de1b2446f528e4eb37335378392cf9b95043d3e9970e253861702",
                    "size": 22713516
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:31043480564b2d4156ffa93b518e87b19481fd33466bea59c89909da577d0101",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:80b407cf38858b2865efe56780a50b18f39e55424069b872b56d398d98e8c84c",
                    "size": 12248819
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aea0026b0a5ddefd96684651a2611cff8913e7186361e8ce401cbff8b02d9c7b",
                    "size": 169372735
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9d41f0f0c990f2292ec02285c4873ebe3ef8220adbaf905bd8b00ac133280e9e",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ec0d1626af63d5222392bb7a82a45ddc231870ae62a82c874ca584f610c88bdf",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ae4c99d1e96dad365cf07cd7510919b389cf500fa8c8ebd41c5f2cad550d5f97",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:654163c599c55ba350f3bf325df9d475f9844246d32e234490f8b36927a77018",
                    "size": 676
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7f5ab7e13386e09c2a5f3b0e14ba37114b5ccf0ff775930676512770572b79d0",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:969036886ac2949e52b30abdb1004c68e3048e7ff3b0f623d0cdef455ce43e25",
                    "size": 1309343
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:25eb9808407ca4f120f2b51fa1c9e935b94f3fed76963b3b0eb6abc08af58b57",
                    "size": 466
                }
            ]
        },
        "bionic-run": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:4ed2a4e1e964063d61c15098113024d4fd1687c19397d52c3709c54ff79b4fe7",
                "size": 7840
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:064a9bb4736de1b2446f528e4eb37335378392cf9b95043d3e9970e253861702",
                    "size": 22713516
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a0b305cc46093a80a6f40bf288429161a0212cc4ac913f4202d5b5e7a8953ad5",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b8247deee9cdacdde3e7a7f6c5b7baa6d7e6f6989ec7cd16778da899905c0b93",
                    "size": 12248924
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8785dc25316605872192bf562505444ca67005239aff61060a59fd9f9aec0240",
                    "size": 473571
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:41ea3f4ce63bd147c12c0ca4754a47ed6d7ea99638cd04da3a68188928e9895f",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f2fd70ceeef0d142f93958e4e067a727f2b9f88dc157b31dd7d3b65c026b3a1d",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4298eccc2265bc980edc2b8cc9347d5cb99d9f653c53f9132c8eddcb8a228ca7",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0052233b62cfffd832546e3e814318fc58dcb3f0dc7589376aa8b53a191c28f1",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b2f4f6c81a8d192bac518e914a24cf02793a6fac547c45283562eff544fdb516",
                    "size": 11183569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:da3ea3b7f935c89ed83f4c6548cdbb3c323ac6198db445274b820896783b69bd",
                    "size": 470
                }
            ]
        },
        "bionic-run-20230829": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8503,
                "digest": "sha256:ffa0abef64de08adbef787e8ef8006b7d1fcc669b23f2ada1e39415669697e08"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 22713516,
                    "digest": "sha256:064a9bb4736de1b2446f528e4eb37335378392cf9b95043d3e9970e253861702"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592233,
                    "digest": "sha256:4b1efa5abd0e81d11dbabcc592ef26adc4c2aad9705bec82002a7f833a53fc57"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12248839,
                    "digest": "sha256:a1933c7ef3edfa537b1fc36e738255dfd532657a637cdaa50be9ceff2ea70f9b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473570,
                    "digest": "sha256:e66684c4a1cd0b9adcbab257d18ed3cfc9435b8fcd148eaafd768429946e67f8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1013,
                    "digest": "sha256:9940ec8e0defc776dc8391aa12dc264edb1e95906392e59801fd8498832135e3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 278,
                    "digest": "sha256:a664730454bbc851c86eef59dab4f3c9f55ede77f919d18af7fcbeca694365e2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 681,
                    "digest": "sha256:d9c6af840df4b1bd2fc31e4b6bb31e893b0426c41171b568c26a5137c6c42208"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 465,
                    "digest": "sha256:65bbc7d9ae17b22a4408fc097a9d013e1fdfb6004f45d1fde0b9f0a802baafd2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4356,
                    "digest": "sha256:4ee209b28c601d604cddebb942c555e314d781936fdb6d56a4e4a6d5fb313689"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11187540,
                    "digest": "sha256:258dd340b8c8810d9f158772e90f703ac8bcd3405a43f336b1e003c089f7aa9b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 470,
                    "digest": "sha256:baeacfb647d435e7e300ac1edbe7c53236821ae18bf59b17fa6a128179c26863"
                }
            ]
        },
        "bionic-run-20230904": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8508,
                "digest": "sha256:1fd135248808f0b9164bfae658283f3cc87c9e1c1b7752d83fbd951481c890cb"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 22713516,
                    "digest": "sha256:064a9bb4736de1b2446f528e4eb37335378392cf9b95043d3e9970e253861702"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592232,
                    "digest": "sha256:103c35aa6b613a2f4cc1d9defb24fd25cb8bfba337fa3b033ea1e6ed2a4ccfdb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12248895,
                    "digest": "sha256:4487dc0552da49920a7ee4dc146aa9b4b6afad9aad44f55d2db4396d092d5c4a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473570,
                    "digest": "sha256:f57e8439afde29eea976fbc9bccdf6d2e83033e233bfc502e777e386a94f3954"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1014,
                    "digest": "sha256:028090ccd42aefd73b954d8f2dbfbf47533b03893f529b33c2c22e0572175254"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 279,
                    "digest": "sha256:2bc2db52ffd16f54466a11bbca5562060ec11e07054d2a4aedce48a67d86c1af"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 681,
                    "digest": "sha256:f2d46488b3149bb58dd2d2de1ce1488c2d22905a0d548b56d6d7ecc25ecf2db4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 465,
                    "digest": "sha256:b1f4b1e6358bc6c42898e3ac1aa4d1da3a8267339960681cc3d9db9e8fda1eb5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4357,
                    "digest": "sha256:46d6f8b7be6e95e86630dd35bcbc2e94df6687829cc9110c7def95c565316f18"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11187804,
                    "digest": "sha256:f2b9d85d024b5ad6e512513142e723aaeb2373f5672ea86f1a8ee68c2894bf91"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 470,
                    "digest": "sha256:80b2e50e3f35e06a14d7021a330cf820f4a7a2fe478cbb69633ee5d4528ed0d6"
                }
            ]
        },
        "bionic-run-20230911": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:653a1d3f5e62bec303bb8c067770c890302c2962d6a6a093ddc570ac94772e32",
                "size": 7840
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:064a9bb4736de1b2446f528e4eb37335378392cf9b95043d3e9970e253861702",
                    "size": 22713516
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:103c35aa6b613a2f4cc1d9defb24fd25cb8bfba337fa3b033ea1e6ed2a4ccfdb",
                    "size": 2592232
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4487dc0552da49920a7ee4dc146aa9b4b6afad9aad44f55d2db4396d092d5c4a",
                    "size": 12248895
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f57e8439afde29eea976fbc9bccdf6d2e83033e233bfc502e777e386a94f3954",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:028090ccd42aefd73b954d8f2dbfbf47533b03893f529b33c2c22e0572175254",
                    "size": 1014
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2bc2db52ffd16f54466a11bbca5562060ec11e07054d2a4aedce48a67d86c1af",
                    "size": 279
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f2d46488b3149bb58dd2d2de1ce1488c2d22905a0d548b56d6d7ecc25ecf2db4",
                    "size": 681
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1f4b1e6358bc6c42898e3ac1aa4d1da3a8267339960681cc3d9db9e8fda1eb5",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:18ded05be91a7ca3fc4ef5d66e0ca9f32bd2792dd0da13efa898d81e3a80b5e3",
                    "size": 11183327
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5786566332937b6ab15461b29e858a0735b7c8f6e60b6046d01d9d0b1c579cd",
                    "size": 471
                }
            ]
        },
        "bionic-run-20231026": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:af8b260d5fc336f38e531cad4ac76c7c2e998d66d0c71a8fd21d35b71cf21d99",
                "size": 7854
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:064a9bb4736de1b2446f528e4eb37335378392cf9b95043d3e9970e253861702",
                    "size": 22713516
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:062e8805b65978bfe2ee9c6ab704ad601acda403191f79ae78d82ceb2aea3d44",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1ec00e611d2e438eaa1a9d0b41e17c548b3dcafdc8ce9cb4ed2c76e09dbc2e32",
                    "size": 12248874
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f26798ec10dde05557088eb04eb76affeb4c50da5036cbf023fdebfe8d2de116",
                    "size": 473571
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6fff13c76df247db2acbbc7156c2f1bfafc702a6e8b8317080856952c4f1b8ee",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fb629060496edee3a65cca4bbe45658896e8ec6080c106b73d0a46bc5370c047",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9ffb1729e2f214727f433cbaa9de029598581f35e04946dd2127f42ee168c4a7",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7b72b15be541c9266d93d1f5606fe478bd7f3edb7a7c4c08e524b452e918dba5",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9d15bd45566b50de1ca7a8c015c52ee40df702a3588d1b5cc2cbd8d09876890f",
                    "size": 11183701
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5294b848d6cc38d65c207ed14d19c1db126c29dfbe493fffdcafa67a4ae32c8b",
                    "size": 470
                }
            ]
        },
        "bionic-run-20231103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:1d6f2b426afa8db89f925b02cd71823a8603f5f4165c1da7a1eb15a5698bce70",
                "size": 7855
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:064a9bb4736de1b2446f528e4eb37335378392cf9b95043d3e9970e253861702",
                    "size": 22713516
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dc3a39106982c7d41eb884809769c9a95776fbcdf22c70ccffd1a4c78c29f191",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a4609fd7196a529ec48167cc7a512fa27346e61003356e1f3035fcdf69dbb76a",
                    "size": 12248813
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a4cc8098d229118582960acc948cbc3751499ee168398a1d8810e432f78ce28",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:24ae1f94eef6422901198888594949a7610ed4ccace906959bec4b59976e503d",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:721b6c0d6bad9f93cf119663651fcf17a236cc7d7a8996ebcf3395d08ab5b1bf",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8700839622c3f21d733302d74ea2fa50bbed9134e862522cea68acff147da2bc",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a732c0e01b67253239c65b1f5eabcf37ac82c25dff6681330433d5dc14dd66cf",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6d6c99a4adb11898eaf3b54a460f54bd3b5a89ceb7ad2b0280cd4bc8de9919ba",
                    "size": 11183705
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7cb02c12c65a9ece0ee3a25e296d66bf6b65fb3d11fd325ec888204d11a04f79",
                    "size": 468
                }
            ]
        },
        "bionic-run-20240103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:766e34869dba6520568550c7245f4235b3b6ad2941993504cc6ede66d77b4997",
                "size": 7855
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:064a9bb4736de1b2446f528e4eb37335378392cf9b95043d3e9970e253861702",
                    "size": 22713516
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3e59d9b2692ae5ed8c9c861ffd854ca5eb0d201c60c7f2632eb0920ba59f2579",
                    "size": 2592225
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:911374063e1e6f2fff79632db7baf92725c4696446b107535d0e3ba3de0ce2a9",
                    "size": 12249004
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ff023d5d4b4658a19777aa9ffdf495448f6df48aebdc8a5678eb20e3b25d39d4",
                    "size": 473571
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:77ee7b5bb69a44b33b58095bb61a5ebafa5452f23b3088ff4a8443d608771ae1",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d233e0ab555e3a211cc27d06b58aea11f40d1af40130943fb737067254464c2b",
                    "size": 275
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5f57d4d230cfe4ab26c8972b5d7d1e9d37d7cdecc5742aae7c1f43d3264a4c2d",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ffcd939427a0f4174dccf15732d972680154bfa8a892cb68c9632a604c85eeef",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1b5031b1dbdf52d5f6eb279db738d8c6d2d9c37229bbb74bc932cca30de0a915",
                    "size": 11183506
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8e580cd27a3d418b2bfd94d5046b5495d29186e99153057ef9f3c477dfeb006a",
                    "size": 469
                }
            ]
        },
        "bionic-run-20240105": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:77cc72f8f661f15a99f1116e37ca628aa0df448f8bbd452b0412bb286358b8f5",
                "size": 7852
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:064a9bb4736de1b2446f528e4eb37335378392cf9b95043d3e9970e253861702",
                    "size": 22713516
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69ebfb0b3b34bcef9474f0bf978e969da1eed1091b540e655917b612f382ebef",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8d563d1ecd5fce36b69d8dbfa9c2458eed6acd5f408df5000609f19610e19c4c",
                    "size": 12248955
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:39ae6582d4904ee9da2562480f246747f5b620cf1fb8c2952abae1ba3c89edc9",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0fbf04fdd85e98d4cb4ca5972af156f9d636e5740720aff781389cd1f2381c2f",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8f2e14d5921c1ee1bf82374e7170570d4df0415ee4beb958dba1d80da35e8d90",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9bc7861740bec3eb53f5b41df0fb310b7a1ab6a210001d526a0446e7b49fad17",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1c9edb823c15f75134f147b1714226832188f2656176683635d61c77f13e2f5c",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4017a31c6aadb2149f48262eb7d87cf54f74bde8e9bcfe5bd0b5247ba4ca063c",
                    "size": 11183576
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:398ed308d0c9bd7c20eeae53b2582b6ece81b9273388b3c1a5c17755811fceec",
                    "size": 470
                }
            ]
        },
        "bionic-run-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:9ff5455dda86f0d7fc5490ab1d4d397a5669d7be48781d69efa8dc3836ef2bbf",
                "size": 7840
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:064a9bb4736de1b2446f528e4eb37335378392cf9b95043d3e9970e253861702",
                    "size": 22713516
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:308b58446ebe3de86369cf3e22fc5f66acefeeb814bc8c7111241b920a5c98b6",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c54bb8b10c32ee22ce79055629a76e0b7f5caef73f09e8bdd71f045749983cf3",
                    "size": 12248911
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ee68ebf232af3ca7fadfb09e728aa8f9b2efa3d7b325aaac6bbb2bc75aba1940",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5946f9dadfe198119111cff958abfb11c93445adb85c8c475e8c34122bd7147b",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:adfb42ebc5cefc3ad3c0edb6e45c24115b1738272cf695d1975fbd141172a43e",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9cb85271c2663c63453ffee6411563a67f016b45ccfa4aed2275062265b6c16e",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cc7bb5153168932468799b12586bdeb09637cfbb0f6d694499a884746434b14e",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c8bb433efe175fc33477092fa729a01b8f6b522df5c2fd156bf3855ea93841e7",
                    "size": 11183563
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:55a00926fac8c5e71f0f740dc698d7611cff034fb971e39317763b6745b7655b",
                    "size": 469
                }
            ]
        },
        "bionic-run-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:2e24664c01a589ca7df1936a9b464f21bc8fd556abbb834f38730bff98112b1a",
                "size": 7839
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:064a9bb4736de1b2446f528e4eb37335378392cf9b95043d3e9970e253861702",
                    "size": 22713516
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0c39d4f490df55aacbef9bd1acce9ea611bcc272d514d372ded74ff015f9a108",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dd018c1ed30263c2f30d1f3ad5fb0c79833ec9bc55344de0151b7afd8cef8b54",
                    "size": 12248972
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ee0114a69a01c12afb1839cbe49365db1d175bf431da473fa5b946a7bbd41ee2",
                    "size": 473571
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aeb4a57f8d026ca9496c41ac5a3cdd8e19fee1cde5d89f986dae4f77aead17c4",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0cd3635777ef14cccf31dda1e657d4b3d0b9e899733c827b90e73266d416791e",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2d531854d06a2e65f1a9e5dc9b86e10d022776a01b45efe3c6b0ba0fa7b11aad",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ff31c36712129bbc187170ec594a6b4aa2de5ee9df7d3324ae4475de78c2b509",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:15cb58a781f443a55f9e242577bdc0e68ac0dff492645ba5fc249d13e844bd95",
                    "size": 11183526
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8d597388e59a7c53040149c22e33c1df02e239c234313b2f3f2f537759447f39",
                    "size": 470
                }
            ]
        },
        "bionic-run-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:4ed2a4e1e964063d61c15098113024d4fd1687c19397d52c3709c54ff79b4fe7",
                "size": 7840
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:064a9bb4736de1b2446f528e4eb37335378392cf9b95043d3e9970e253861702",
                    "size": 22713516
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a0b305cc46093a80a6f40bf288429161a0212cc4ac913f4202d5b5e7a8953ad5",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b8247deee9cdacdde3e7a7f6c5b7baa6d7e6f6989ec7cd16778da899905c0b93",
                    "size": 12248924
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8785dc25316605872192bf562505444ca67005239aff61060a59fd9f9aec0240",
                    "size": 473571
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:41ea3f4ce63bd147c12c0ca4754a47ed6d7ea99638cd04da3a68188928e9895f",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f2fd70ceeef0d142f93958e4e067a727f2b9f88dc157b31dd7d3b65c026b3a1d",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4298eccc2265bc980edc2b8cc9347d5cb99d9f653c53f9132c8eddcb8a228ca7",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0052233b62cfffd832546e3e814318fc58dcb3f0dc7589376aa8b53a191c28f1",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b2f4f6c81a8d192bac518e914a24cf02793a6fac547c45283562eff544fdb516",
                    "size": 11183569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:da3ea3b7f935c89ed83f4c6548cdbb3c323ac6198db445274b820896783b69bd",
                    "size": 470
                }
            ]
        },
        "build": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:99bc89a385a3a26700417f6edda73199f0b9d4ad08813b113b59c7494d7cdf98",
                "size": 8749
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5a2ad729c09fbfdb259ae764f92188efc67a615ffde9bb34a46298d1edf3cd6",
                    "size": 27360530
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ffcc4a9fde21d6c766d4614f1204ee212dc39473d283dc3238d8092ea0f1e537",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eeb8d5e311d2049c666f7e84e3932d1f1622e4c2a497c75ab7106b54be4832b4",
                    "size": 12233838
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:618bf1f3968aa3c0d2d9c99dba25f2906c8a7c988223a31e7575f316acc878bd",
                    "size": 209438089
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1c211d8397e4b621d909da22a5a5db94a403d073d6d17baaebfc85960f29d204",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:32e378487a9664364b9ba9e11696f7c609fb138faffd1fdfa1789a51de709177",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:54f1b7a79afc7306861badcb2a0a97de00a680a97285ef6b7aaee32d0415c78f",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:415366c9f05101573ec8ca723889c19948876ef160b7d6eef1c150938f8cd869",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:342ec12cab4c82acb1e51aa85f822d54d69550880da306ea735cfec955a24ecd",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cf6b61c21f40a1cd6f6d7d5237ac7536e67a628bf7b605740099423137fd5cee",
                    "size": 1168067
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c402a7c8db79e62b6560d5bf8e5e3f46d5e31c1b7df8cc6d7983a3213a2d86e3",
                    "size": 468
                }
            ]
        },
        "build-20230829": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9427,
                "digest": "sha256:b00bd8110eb0456405ee78e03c528bf924c59f280b53bcd2515af3dcb952abc0"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27351105,
                    "digest": "sha256:20274425734a05472f3772bae7ce7124a9832f5eb168456d6cb53e92d6e718a8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592232,
                    "digest": "sha256:559403e73a2bbbe7162790ab9a01b8821b245a167cf12febd64515b69bcc7ed4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12233453,
                    "digest": "sha256:6569082e05674e6a6d6cc5fe52df4e9c3deb80c8d5d410a4d72aa8d817565401"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 209392921,
                    "digest": "sha256:10ccd6e6e6b9946104eb0b8aba8dcd4a3dff321c151abac13433aff1e6428f92"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473570,
                    "digest": "sha256:651140d45e4d61dabab3134a40d7c1c1e4eaf3d9af240d133ced9ea1e3cc9298"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1015,
                    "digest": "sha256:4dcd738299fdc52ec868b03d76fa91372f4a0a4c2805faa22f7a7e05dda7aabe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 279,
                    "digest": "sha256:bbb6e071f1ce2d01dcc837c65736bcb100ee7c9e89aa513eb9c81663d9771320"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 680,
                    "digest": "sha256:eaf3b9bf654c8e61d0ae7cd21b221dc82e69319a1387164d3961abfcf5ed5dc0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 462,
                    "digest": "sha256:d4be53b9be303694eaf8687c3d9a88ea6bc7cebd9de108dabdeb7de18fef6216"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4352,
                    "digest": "sha256:fa943d7f36bb54cd65821a7640f4a8d3aafbcf467807ff3fc8a186287138973c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1169802,
                    "digest": "sha256:db98773ad01b3d8e07b21339dfd69cdb71c773fa27a1ba79181867df38ddc3ad"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 468,
                    "digest": "sha256:0b9dd62c54f059356aa94aad174ce6123a444b07ca4aa2baf025f73ca7ac4e7a"
                }
            ]
        },
        "build-20230904": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9416,
                "digest": "sha256:3df52c77831b490a38c3ac46297ad4c6df334363280465282a3590fddf800bfc"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27351105,
                    "digest": "sha256:20274425734a05472f3772bae7ce7124a9832f5eb168456d6cb53e92d6e718a8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592233,
                    "digest": "sha256:ae6604f096cba3167cf802c2e3d5c3830f1f1b8390a942213ac4dcfdfea632e8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12233670,
                    "digest": "sha256:4b6e91f56148e91c5c3f09993b098eada2612ed836e6277c51636dbfeb37ca9b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 209404460,
                    "digest": "sha256:829e68b52046c801853ed63b26834b3b59c3c1e27a4d1bc78b5ad38d86ee8c9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473568,
                    "digest": "sha256:4ab797161b47112bb753b983ed970e1976db36cd3f47d91d3f422db5a18d615b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1013,
                    "digest": "sha256:09cab4d2377eb385d7b48510de6c9ee4e50b07ff797e23b09e32daa7dc6a2f62"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 278,
                    "digest": "sha256:b534cb7ade1cb4b93e518242c98e01091c63bf7fd1059e9eafd80ed9c27118f9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 679,
                    "digest": "sha256:f8a00ddbfdc0f0197674d29024223766d13fdc4325827bf917426c00367a212b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 461,
                    "digest": "sha256:c285b30fbd904d73633972f5c2ce65b869683b4d1781644268cb95376d8cc064"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4356,
                    "digest": "sha256:538028453b5c71197d5e134d16d99f449ec78a70e087506eef46e0e3a0f03cc7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1169854,
                    "digest": "sha256:ba3ac31a3a215f6c25b0391c4b8b6b0d9bd33c64a8744871113d00ae6a2bcadd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 468,
                    "digest": "sha256:40633e851999bc560ccd7cbcdaee9a7edc13716b170d08b06d6f025b2d7350e5"
                }
            ]
        },
        "build-20230911": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:2416a7b54cb2cc22bccd296511d515a023a51eee759ee2bdd638e4e861a3a25a",
                "size": 8749
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:20274425734a05472f3772bae7ce7124a9832f5eb168456d6cb53e92d6e718a8",
                    "size": 27351105
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ae6604f096cba3167cf802c2e3d5c3830f1f1b8390a942213ac4dcfdfea632e8",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b6e91f56148e91c5c3f09993b098eada2612ed836e6277c51636dbfeb37ca9b",
                    "size": 12233670
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:829e68b52046c801853ed63b26834b3b59c3c1e27a4d1bc78b5ad38d86ee8c9d",
                    "size": 209404460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4ab797161b47112bb753b983ed970e1976db36cd3f47d91d3f422db5a18d615b",
                    "size": 473568
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:09cab4d2377eb385d7b48510de6c9ee4e50b07ff797e23b09e32daa7dc6a2f62",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b534cb7ade1cb4b93e518242c98e01091c63bf7fd1059e9eafd80ed9c27118f9",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f8a00ddbfdc0f0197674d29024223766d13fdc4325827bf917426c00367a212b",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c285b30fbd904d73633972f5c2ce65b869683b4d1781644268cb95376d8cc064",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:20135fc0d35b23557decdb4642bb6135d644ad9b45b6d1c1a3715b5b89ee55a6",
                    "size": 1169801
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:af9c0fc6e7f8db0b864b97a3a4711b6f2eca8c298ae9d495caa2810711e96b79",
                    "size": 469
                }
            ]
        },
        "build-20231026": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:7e69cddd836c8ca200278365b7ea46dffe425ac2b835ca0eb7095a86978ed39d",
                "size": 8773
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bfbe77e41a78ee38147c5761aa8bc896d9f6e1e648b23468f294065ffe03c107",
                    "size": 27351048
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:983849fdd0d32db99ba92313e6459f27b5e87245502736464071eed20c189cf3",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ba7cf299b555ec48dac88dfef8a4a93b1f0c2f4311ef904a8aec8688830a0031",
                    "size": 12316512
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:df596b7ca387834cb8e196bc1bd422b40dc0ce59171d4580f66e8ea1acc90ae0",
                    "size": 211524802
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:62183ef724fe461b0b7c8dde45a2b19a096a8dbae78468e0309e92d499ec5f2e",
                    "size": 473565
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bf9c3b7406a77f9357642a2a9f996fd12e9fd754d7a8118afed9be2031822e2b",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:309012611a8f14930781977092d4f8b7f138faf7d099c284f3d5d5142a2a98b2",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:27a97117875eaecc663cb5630ce233fb0e6f9058dc69b69de9134a49558d0823",
                    "size": 671
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:358770c2fb7a303bd34b9814c06894f6999892984d97d83c577ee9a5d1b4b5ac",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:18e8050a19b004b6f646c1602f1228787191a27704e01c776efb5f39f13d1ce5",
                    "size": 1169087
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c998da0551d88b4179bc6a5f9a1db1448c92b0aa5a9ba6278274219b5a86010d",
                    "size": 469
                }
            ]
        },
        "build-20231103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:b7c61bf2acd1d31043457fac02a82a13bae45932d96b123d9e0a4227c9e70374",
                "size": 8772
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bfbe77e41a78ee38147c5761aa8bc896d9f6e1e648b23468f294065ffe03c107",
                    "size": 27351048
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:60f0904a2184826d9f5378b89e94f1177de536073ed282aea0ce2397eea4b395",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:953a40b0fd784a6ef3c950bf1eacd6d17e38b1992941012f9bee1a5a01298738",
                    "size": 12316466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0d90dccbcda573719aabf8fef2ba92fa78bcd0222a1b8b338cf88e0cfd2a12ff",
                    "size": 211523518
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d193d37aa3e76ae6862490576e729cf64b34e3542722f1b09ebb21722233f2bb",
                    "size": 473565
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:296a47dde0f9f91fd3cfddb7a2523fb7358c7fae586fa11a9c6273e8b6d50607",
                    "size": 1005
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bfb89f38eed8d15d5668a142670e8bbbaedbe24cb7e77c59f173aaeb1317094d",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:173c145f898ecf995a1bf900c629fc8bc288630971ae0b16dedac06a1d547bf7",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8b2c82e627f8c6b70aeb154ace7dfc262ac06d7d02df7e5e05e33147b510f2b2",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eeeee8e567d1516f95b304a274de434e574a11955514031345168b152a32e9d7",
                    "size": 1169008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:931c70e2f742c85c6ff32048e107ee3b06ee1500177fec23e1020682f7db2585",
                    "size": 468
                }
            ]
        },
        "build-20240103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:77d8e7a4e46d804d13271f4f71b97f297d9914e9122663b567b0800bda4ed8a5",
                "size": 8765
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:005e2837585d0b391170fd9faf2e0c279d64ba0eb011cda8dedf28cb5839861e",
                    "size": 27358237
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ba341ec610b866d122f16208fbcaab1e0ddbe177fc7b0f15f02d1ebc4fc153f4",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:58930074dffb08d66dfa32b05d765446d45e7a1defb0797137e8572519cbd890",
                    "size": 12234184
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:665253528d0edd388818c5d32391cb6156ffb1354d48f61058991feb23d70110",
                    "size": 209404084
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b422717a017df8c57965b89961f3c0541143958c404ec2d8036b6f13835267ae",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4c3ad0d39c79f4ed5a7a631380bf5a6b5b2231296028bea0f08e59d75b05d0c7",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3e8649948ec13f2486a140cf0c4b6a873a4d5bb6d9a135410d7a1cdfcf902616",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1f14d05b37ab6e1918f415f14baa9ff9e302fd5ba256f3cbe9c9dbad0ff4b93a",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5777707be83ccba3c7d029f630efc77b41efaefd9c2f1268bdc594364a1713dd",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:42cfa237d1733bf327244226f3a08da7476fe466496b7aa01c03943506db2efe",
                    "size": 1169030
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8c65f4ec4475348d795cc2433ac7ab930ba23ae0f34ff300bc3eb9acc88f2ba6",
                    "size": 467
                }
            ]
        },
        "build-20240105": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:810335cc406e71b072ac1190ee2a0d52861bcdf29f4c0ae99656e8870d34bce5",
                "size": 8773
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:005e2837585d0b391170fd9faf2e0c279d64ba0eb011cda8dedf28cb5839861e",
                    "size": 27358237
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:946fc3325c089f36e15017c49befb3c508137015fb88007c742ed19006e40f86",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c78eb8be1b639617ca48917473081a33f590bd03a4131b6ef121b529e44b3527",
                    "size": 12234149
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:580237ad53f9ef46eb52bf1f07af7fd07505dc5e3f8f2c23cb62d7101b5f1fa0",
                    "size": 209403863
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:297d2c507dcb389cc78636570ef737cfb471eedf17b35bc048e1622724e0bb81",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:de8cddbffdfd299912b83c1361f9aeb1fa4c8990240ad1e2b0ccbb22a92ca20c",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4af862feb4ab4ef3faf94e014730c3ae016b589fdb3affa91275416b9b37c151",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a08e4eb00bca2f83b9f5fd3886e5d1720517bd78372b0679da84af93f3f80a4f",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:512809eaf207f23d2700472eb5857ca0dae01799b2e5056ab0977e14b4e1330a",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e50d03541637f46865f86172bf5d25408a7d9e82f58af098225675bdb47d0505",
                    "size": 1169011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:542c67530863f0ef35094435ecd2689a1f1ed04f7fc18a8f31a04a1e21d5425b",
                    "size": 468
                }
            ]
        },
        "build-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:7a418086a7b21474b1752d0a337fddb842da70f7c937f2442f1ec79926f5a971",
                "size": 8757
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f4bb4e8dca02be491b4f72d2ef2127a64ce49c48d0d9c0a0fcaffa625067679d",
                    "size": 27358724
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d486b997b63cf5ab7b4f8f25bb359b18d64d252b2dba1ce466fea20ae5be5ffe",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:63c3c339ddc8f0eb4b7821231267543340656cf54809a1102ee8cf5dec19edc0",
                    "size": 12232984
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7e201aa4774daa79e0b7988b74a3a023cad6d0568bd9eba7d10de972ba95bb84",
                    "size": 209679621
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c4f665c58e06851286223d5df3d909cc2ba82c691de9ddd2e03194596d560619",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a2d905b17d1f94225fd87a16acf86a3c61b64f067d784bb30d37c21a56a80ba4",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2d043d1337f747594226839bf38665a3a8ff35537e021b2759356ebad99dee21",
                    "size": 275
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:643a5640e3f0402209f14047d7db46f681a3c6b5812afb7ce5643011c37496d3",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:33892d478ed86e565b9b774ea0b905bedeff281e83f60d8c9066857c73a4869a",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d9fae4f41a88f9224f3666209f357f69fbfb76f57bab173c98aee9e5ecfc2535",
                    "size": 1168285
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ca2d45911f5c0eba95004e7f724006e5c5b2f6e0e5e7f8c89d390fd374be1a22",
                    "size": 468
                }
            ]
        },
        "build-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:8831fb21eb8d7804b7c5eee34d1062abf0f3435becc2b280d556ea48ecc68ab4",
                "size": 8756
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f4bb4e8dca02be491b4f72d2ef2127a64ce49c48d0d9c0a0fcaffa625067679d",
                    "size": 27358724
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:922cc27cf100e7b8f82425bf84218e58f4c88a6c541ad76c0987c83146093d4f",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d9afc71124142ab0317bd2cff0036215507c648a0a621029ac350a9c9a6af328",
                    "size": 12232990
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:89b7e7eccf7af01181272bf8b9b0801d6bb5f772eb521b86af74d1d3be764819",
                    "size": 209697792
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bc582be6adcf434d82beb5fb94520b48470bf90270817b4d4e0a548054e048f3",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:554d0b3b6bb761d178bfc7d903817912a14c04519d25184298010ee81e06f27d",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8a424cb7a4f4fc4232cec0e2dc4ff5ac5e58db5529ff4f1313e85bb38b9f36a4",
                    "size": 275
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8bde0378c01a2e0bffc58824b60a39be15aae513de5d7521c1535ba95c6f971f",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8f7860879e77107f99347fdd64ecd5856a9a20978da014f5892d9d7f6ae01ec9",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:054cd3332a9ab25e59c1e1e70c60d7e0728fc27913275de313305a64321c8a07",
                    "size": 1168226
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2c4f6c6ba7576035b9a50d9dbe1ba07a2dc724227c9835e7e450aec7deac90dc",
                    "size": 469
                }
            ]
        },
        "build-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:99bc89a385a3a26700417f6edda73199f0b9d4ad08813b113b59c7494d7cdf98",
                "size": 8749
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5a2ad729c09fbfdb259ae764f92188efc67a615ffde9bb34a46298d1edf3cd6",
                    "size": 27360530
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ffcc4a9fde21d6c766d4614f1204ee212dc39473d283dc3238d8092ea0f1e537",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eeb8d5e311d2049c666f7e84e3932d1f1622e4c2a497c75ab7106b54be4832b4",
                    "size": 12233838
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:618bf1f3968aa3c0d2d9c99dba25f2906c8a7c988223a31e7575f316acc878bd",
                    "size": 209438089
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1c211d8397e4b621d909da22a5a5db94a403d073d6d17baaebfc85960f29d204",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:32e378487a9664364b9ba9e11696f7c609fb138faffd1fdfa1789a51de709177",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:54f1b7a79afc7306861badcb2a0a97de00a680a97285ef6b7aaee32d0415c78f",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:415366c9f05101573ec8ca723889c19948876ef160b7d6eef1c150938f8cd869",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:342ec12cab4c82acb1e51aa85f822d54d69550880da306ea735cfec955a24ecd",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cf6b61c21f40a1cd6f6d7d5237ac7536e67a628bf7b605740099423137fd5cee",
                    "size": 1168067
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c402a7c8db79e62b6560d5bf8e5e3f46d5e31c1b7df8cc6d7983a3213a2d86e3",
                    "size": 468
                }
            ]
        },
        "focal": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:5c05ce758d74573323ab166cff8001d891a69d8609218f2b9a81b902d7c2b418",
                "size": 7836
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d7044108e6d4d8b24ea68c7ee675f78cb56d959d0878b78c97e8ca7c6b5fa2cc",
                    "size": 25975500
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d17beb03bdd0716bbf311eeb45ec073518d8fed3ae948af1793903de4366c8f0",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e8a8077f016100579c7a99e2e45a64703994e456d6642a58f8c8f7910a07d456",
                    "size": 15553068
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:de799621475893efb8feb0b149d6954c0b7d28a05770e0e907812d1de6c6ccda",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fb3ea79bd6f1d6b1020febe4de723d923b9b6cf2a1d32155efac8050d41b58d4",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4d5e6044c41369f887a2dd5be5e71859fca44f021773dc807a867070fb348cbd",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fc73cc8002b9f8baa22cb1767e3631fa050a798bd62b4407dc28774ede18cb73",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5c3406d8c477158b42624889ee1d6ba81a0689c2d6b0411df7b9860a9dc40b40",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3e95097edafe8273aef2ffe518660405737e90348c8cdc5ca302043f237528ba",
                    "size": 12136610
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cdaf9ecf861e0537fec9df26a00e77019f116df9d38e2f131cf466de9e0fff2f",
                    "size": 469
                }
            ]
        },
        "focal-20230829": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8505,
                "digest": "sha256:b6fee40904672a46f0e602f88c89c97feafda634462a51908aa51c8c6f77b537"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 25974619,
                    "digest": "sha256:82d728d38b98752cba7d2d7af8ee1cfe67ccdc5915814420650e78def5d1cebc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592234,
                    "digest": "sha256:410d6ebed3b4648a8cb3b10b46b809bf35c7e69bceff57fa73db256bd4db018f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15547426,
                    "digest": "sha256:d69a7f1df28b7ca4ae4a22e011d0d47cb6d52d9165b4bb8d648ec6dd4d6de2a0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473568,
                    "digest": "sha256:490be1eda8bb9edf569dc18addb8592392fab33ba48b80dcf9124635e9e21276"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1014,
                    "digest": "sha256:0cb42e1efdc177eda95636b2080728b0e9b52c5f2a7e96cd1c3486fa5f01298b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 280,
                    "digest": "sha256:d86b74130de2bddecce44ed13f88030c9fcc9113d56e8747ec6c537f7524cb06"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 679,
                    "digest": "sha256:b2166074a9a538cc1c801aff859938dad617bd10650f910eb01c08ce528f9a30"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 464,
                    "digest": "sha256:962077ead32d1e2846aa184efe52278abaaa5795e7becfe69b5524d31258fc88"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4351,
                    "digest": "sha256:57a1036a66b02c83150c839cb18541d62b3adeb5a7354a9d9d74704786a8ba2b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12142030,
                    "digest": "sha256:fc89f751be3dd1e2902cbb5adebd3d6c79c632d7f62fefa6f5bdf04d48a7ae12"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 467,
                    "digest": "sha256:659400f22ac44ad9c79e98b3dcc09d8a7353e94f6d841863c005354ec78c0a02"
                }
            ]
        },
        "focal-20230904": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8504,
                "digest": "sha256:7e7343b2227a5d52dc6f6b16ada83f6e45e80f841ebe1dc5e11f4d01e1407db5"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 25974619,
                    "digest": "sha256:82d728d38b98752cba7d2d7af8ee1cfe67ccdc5915814420650e78def5d1cebc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592234,
                    "digest": "sha256:6dfb5c61cc0897d04de46fbf65cde1b37bc9d5362f527054a3508c0c09af1538"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15547555,
                    "digest": "sha256:af232c471aeb5b7eefd1f903c1a8ded0577108ddeba77ba10a6e1e1eaeb0a3e7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473564,
                    "digest": "sha256:33c7723c1c0dcc0eaeaab9a701c14652a836e0954a7370a6f88631d75bf32ef7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1012,
                    "digest": "sha256:b8f3bc42f1f078dae6c95132b71c2dedef200bfc9ad0b8a0ccfb9f12c2022677"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 276,
                    "digest": "sha256:981fbfac0de5f3c86b62bc96a3b25d45080bb5a89b5860b3dbd3c4b46cf71d01"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 677,
                    "digest": "sha256:f8284a7a28a7b6670af3abce99bba197bf7b3ab03fe269b7fb2112abb994493b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 462,
                    "digest": "sha256:58621d143f229d731d5d9bba69296777a3920db202152be8603e4ea13337ccb7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4354,
                    "digest": "sha256:8fd55e1717b5652750253fec071ce8ddfe1e64292e4e1aef0a0d35dcfc1c94b8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12142031,
                    "digest": "sha256:330198c356fb406a00b40c31c6666282ddceae53b2f621514b3b0d48f60d4a4d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 467,
                    "digest": "sha256:a2086aefd17c97673993ebb8498c27f7789349e1613cb47674d421f1a29d9b18"
                }
            ]
        },
        "focal-20230911": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:43a77a062b828b3e1c8f60bc2d82baee15506d5016f258930d0a04a63c0af29c",
                "size": 7835
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:82d728d38b98752cba7d2d7af8ee1cfe67ccdc5915814420650e78def5d1cebc",
                    "size": 25974619
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6dfb5c61cc0897d04de46fbf65cde1b37bc9d5362f527054a3508c0c09af1538",
                    "size": 2592234
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:af232c471aeb5b7eefd1f903c1a8ded0577108ddeba77ba10a6e1e1eaeb0a3e7",
                    "size": 15547555
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:33c7723c1c0dcc0eaeaab9a701c14652a836e0954a7370a6f88631d75bf32ef7",
                    "size": 473564
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b8f3bc42f1f078dae6c95132b71c2dedef200bfc9ad0b8a0ccfb9f12c2022677",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:981fbfac0de5f3c86b62bc96a3b25d45080bb5a89b5860b3dbd3c4b46cf71d01",
                    "size": 276
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f8284a7a28a7b6670af3abce99bba197bf7b3ab03fe269b7fb2112abb994493b",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:58621d143f229d731d5d9bba69296777a3920db202152be8603e4ea13337ccb7",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:faccd2344a9ca98c504c91481b1c0a507c5ac89d208927c37424d69bf29f5be9",
                    "size": 12138405
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:61190bf59dd8ea8604912c7554626573851dfc14147ddc8f441d73d2a78724c4",
                    "size": 471
                }
            ]
        },
        "focal-20231026": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:7abb9f27b001cad7c2d1e275bdcfbecde406bec3ee7314fe3b4baed63957a044",
                "size": 7848
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:915eebb74587f0e5d3919cb77720c143be9a85a8d2d5cd44675d84c8c3a2b74a",
                    "size": 25973940
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c2af00a58d01e89271ab922b8387273a51e9789aa36bf6e6618d16e58f09e74f",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:52cdec91789691ae33f8a65492449ca0eb295544c52832a57cde681b0af79b25",
                    "size": 15546321
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6492ad84f1d1bd13cbe392617030e60a4a885a7ae531af8d7a137510b4d4add4",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1d07b2497fc95abf9f55962a44c0ca4f0a94a52679bc03abef6830943e6892e5",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1b8529f16a2b87faff917fd552dbafc022c472b335204d18ae045fb47a09ec12",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:24fa3f863c5e9e958088fee69d531b8a4302ee95ddd76859a4a526fbffe1a0bb",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:79103de35290bb92be10674e7fb4a52714c8ebf787e2052fd76a75347d7e1112",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:873eb78e014c724b9f803efa365d8868b6743d9693982e2e4db4cebf16736c04",
                    "size": 12137993
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fc46f679feee6ee7dee6122ab40112dc5f7d393dc8ff9f028b4e7987a2765984",
                    "size": 466
                }
            ]
        },
        "focal-20231103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:64facdc60960679ba6eed0fdabab19a2f59c264c93bc8ce22319a0724464e8d3",
                "size": 7850
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:915eebb74587f0e5d3919cb77720c143be9a85a8d2d5cd44675d84c8c3a2b74a",
                    "size": 25973940
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9ba1eebf789890f299d3c47134cec5198dc5263dca7d30152de49c30f6293b37",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5f94ea34ca72e2c80cf7c4b327697b011a1b64d59c7c4b2f6f0ed0ae3b9f14ee",
                    "size": 15546334
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:02a00e3b0ee22bbc34e4ec7b17f67767ab92dd30de039f69650ec93d9a4dd166",
                    "size": 473568
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e35c423b273fb686b8bbb2e4f3ae8b651d8ec759ad3e131a88eb3ebaee967554",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e1290ed797c02635a39b3ac31b0bb8b495f76526bc81279a13f12d8a430042fc",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:da583ca61e70bf339bc9905694399fd80ddaee57314520795c7c82836fc89e70",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:456a2fa294e282e01640e8aa2125752793bddd5d607e787ce126719e839854c5",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ce6b91af903d74417fbe4cffc70e4d835b227e51d6b54404dac070829b25db8a",
                    "size": 12137936
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1a578ad78091fb578834b0907b7749d3d9456004412afb87b4be7dffe70d6df2",
                    "size": 467
                }
            ]
        },
        "focal-20240103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:808fc1308ba5df4eaec6bf1260b044a7b667e7ee763f2214761e0c56ad060570",
                "size": 7843
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d519a3a2a796a075e4e40e5c4a1513aa8db8f8fdf009662bf6858f0149143b28",
                    "size": 25974768
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ee797e59d90e35d215f9a8b603e1f24e0c4bd705a7edf8ea89615d51adebc35a",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f3db87c26a3241c45f96dc9dfd76a2d3fad4d3c5d8039a562c5c71046283eeb4",
                    "size": 15547192
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:56c929e353ea28aa5668472fd7d60edb268025a744d98c025826021b60c1598b",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:849292c2b57a48a52676714ee67d2e1ce4f8acf9172a1ce5511dc306d24bd98e",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:232e41124d5139aef0623d938676a758ea76b44751469e907c4002d54c0145d8",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:106d74e785eb67430019b6285a0357451457ab141278b72eb5770f81bc19aad6",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6801cc821bd0cdc1b78465f2cbd7591a921b75269d45c4947b42ed66f6cd5a6d",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c796b2cf91b0fc3145ab3d033ad035217c8a664d40acec00505351036f0442ce",
                    "size": 12136731
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:14624e1f4209e2aa3530e310635b67c15af794d68199a4efe142beae2cf82b3f",
                    "size": 469
                }
            ]
        },
        "focal-20240105": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:f4eb75e61f4f20b0d6713c206ca9d66eb33d30de965bc9748050690d9265a9ed",
                "size": 7846
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d519a3a2a796a075e4e40e5c4a1513aa8db8f8fdf009662bf6858f0149143b28",
                    "size": 25974768
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:443f93ae3e9bd4bbbc67845168362cba41f54d28378fcb996e694a29d06dd6bb",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1800c9a777ec072f5d3f0e2e4ad9e029063e11c117b3a257f237341fd680d52f",
                    "size": 15547199
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8d2710854f926d7d2a88024455a2ecb3bb64ecf1c252981cc2721ea382cef88c",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5d7f1bb3b452ed120a58de532701de5fd91b9a87dc2f754ed8e726eb816fd8f0",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8ed0ef3b38b4ba4b5a37f520a90ff0b0d4f6821f318dab68de13dd5e8ddee755",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d6c5f11debe435fe9d306c6abcfc8e3d2b1cecf25f64b49ca2280464f01b74aa",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:843ffcdd76940ab05e1ab187f0e104738e76b70bf78ae5d9171de457f1ccb780",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2e049acee55ba47da227cfbb069b06ae2625fc87415515868112a1edc4e61b44",
                    "size": 12136771
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4e111a982a5a6de1ee7e8bc12e19c5e56d07b6a372c77dee6aac328daac43eea",
                    "size": 466
                }
            ]
        },
        "focal-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:4b407026da141ce4671de5d185c726c59690b75121c0ff6184122a9700520117",
                "size": 7837
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6aae4cfdd5a10a8b0554e75c4c14ae38022a0c8f08dc5d769a735c705670cab7",
                    "size": 25974391
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:603fa79a3b217012e8804ef22bd89746c621c248a7b90d9e9eb4d2180f357a28",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cbeae2deb6e333bb89047592af408a09b3e037fa2760d195df3cc6b93a320039",
                    "size": 15552265
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d549421d50e2e2727415e82fe2f0d91f616f607a82be0814c8a81ecad54e2552",
                    "size": 473571
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1229a72631fb7e23cc47a0b86fa8ae821309b3df301de6eff867f829bca0c7e8",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:886dbbd2d2e55a9cdae9c13cb73fb35923ebf0608a8d56eb4bcacd558f136fc6",
                    "size": 275
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1f9ede45d3d4f2b4030d84190871f5508ee21616f0f9d08b4817ab99117bc878",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e07ea3ba8b43cbfcc0a490f3d704ee2c2f6af0a44ef95526c713d1e46607a3c2",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d3bebe41e87bcfa86913fdda81d63d0a86e2c9b2bc0054b2d65f7e059703a527",
                    "size": 12135616
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:205eba5e119c0630fc2205e7f1310da6915a94a286935a268079f02a3b123770",
                    "size": 469
                }
            ]
        },
        "focal-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:c983c094f4be8fb5324e9f3e6653b508372b0b66e46321f77fec8097502ea8a2",
                "size": 7831
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6aae4cfdd5a10a8b0554e75c4c14ae38022a0c8f08dc5d769a735c705670cab7",
                    "size": 25974391
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b20538e17efdafc8737c7c251c3efcdd6009fb0e3fcdc71d900c8aa98a0417a6",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:368e7fcf45aab11c7b4cccc0e26aff8f935e7bb9791a3878a8f13ea422771e76",
                    "size": 15552255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fd4854619240029b03a4c0cc5444a23437f5cdc3c7372a32adc45c7ea217c4f3",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:faf76eeed624487da7d38ec96cd3570c165b3a160c04e33be1d8b86bad2aa5d0",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1183ff7e6360e4cca0dc6633b184ef05eb32c530eac64b305a2e5518e19f833d",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:caccec972859b315a6cefb3388e25adc200ab884919bf2eaa172c406c29e536c",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:81976525fffd3c71cfec50cec06422d475062e83a259b0522421b2a1a42c7181",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a0336fe6bd596f69319a6b733a2ceb993292dc2ee29a88aac94e0eb36084b977",
                    "size": 12135668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d99b22e76803e3c25744803f5a01de3eb017dc3f2b64f8dd43f465ebcec27fb8",
                    "size": 469
                }
            ]
        },
        "focal-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:5c05ce758d74573323ab166cff8001d891a69d8609218f2b9a81b902d7c2b418",
                "size": 7836
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d7044108e6d4d8b24ea68c7ee675f78cb56d959d0878b78c97e8ca7c6b5fa2cc",
                    "size": 25975500
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d17beb03bdd0716bbf311eeb45ec073518d8fed3ae948af1793903de4366c8f0",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e8a8077f016100579c7a99e2e45a64703994e456d6642a58f8c8f7910a07d456",
                    "size": 15553068
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:de799621475893efb8feb0b149d6954c0b7d28a05770e0e907812d1de6c6ccda",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fb3ea79bd6f1d6b1020febe4de723d923b9b6cf2a1d32155efac8050d41b58d4",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4d5e6044c41369f887a2dd5be5e71859fca44f021773dc807a867070fb348cbd",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fc73cc8002b9f8baa22cb1767e3631fa050a798bd62b4407dc28774ede18cb73",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5c3406d8c477158b42624889ee1d6ba81a0689c2d6b0411df7b9860a9dc40b40",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3e95097edafe8273aef2ffe518660405737e90348c8cdc5ca302043f237528ba",
                    "size": 12136610
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cdaf9ecf861e0537fec9df26a00e77019f116df9d38e2f131cf466de9e0fff2f",
                    "size": 469
                }
            ]
        },
        "focal-build": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:1132a6c2e719dcab78e9d39d88b09a6b9512c1165c371b1a69003f545bc6558b",
                "size": 8758
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d7044108e6d4d8b24ea68c7ee675f78cb56d959d0878b78c97e8ca7c6b5fa2cc",
                    "size": 25975500
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a8e390dc72e51f5c8b68019e5eb6e750ce1a6137eb473a3e6fa2cc3d50e1ca7b",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1452761e1891e47e0770db87220566c554a2b5c98a71364407e8f14bfe7b21c5",
                    "size": 15553038
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1ded9a37d7842b2e8e0b5a56a6490fa832ac828f6b85894d14c79b4b547bc517",
                    "size": 195392717
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7a5a450af50aceef52574cee1aa81f2c522c6ed1b4d8de49a2dd7bac6de6bb4c",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:76ceeab00e8cab22661d17b4306971339b8986417e8bc65c63cd434986f10431",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1cc798a83e4122964d4d399dcc50a865348f552a6bdface692b4d4af03230447",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:490ad50010932e76a669412a4d33bf8988ee8c1af36f6b20bb2b37a0060f6c0d",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3d0f4132df6f7551ce35301d9a3f52039a750faef218f9f3324deaba03b1a479",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:84b075669a5bb4877e9b0b256d4995f45a16aec3e1839244f3cd0f0aaac7e2a6",
                    "size": 1406253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9e0ae63f7708d3b21bdd397111fc3fe7360b51a0a0cd9cf773e9536a307fd55a",
                    "size": 466
                }
            ]
        },
        "focal-build-20230829": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9427,
                "digest": "sha256:dce37d36d941bc910cc61dcf624d52d1e4c8db10374307f22a9b2c93db7bb3b7"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 25974619,
                    "digest": "sha256:82d728d38b98752cba7d2d7af8ee1cfe67ccdc5915814420650e78def5d1cebc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592234,
                    "digest": "sha256:410d6ebed3b4648a8cb3b10b46b809bf35c7e69bceff57fa73db256bd4db018f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15547426,
                    "digest": "sha256:d69a7f1df28b7ca4ae4a22e011d0d47cb6d52d9165b4bb8d648ec6dd4d6de2a0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 195328300,
                    "digest": "sha256:e35ef934576eafca68a00af06b82cea6ba43d78cff2a498dc09894dbce3e8f0c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473568,
                    "digest": "sha256:4aa59475379940ea11be5497d5c9c3411c31f8f0188426c2fb2098cb1a7ae598"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1014,
                    "digest": "sha256:74fa050f86f1c43800d3dc4618474d7b4d5543bd8805a1c8b2e6e626ce52676f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 280,
                    "digest": "sha256:da89bdd691bcf7a0524b2cb4f76fed949979cb4efd40d96b33c613d8f2ea5c40"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 679,
                    "digest": "sha256:3478ff5bd559e4808fe88f93220d08882c01d95df741b3ccb4e0d3c4059bad1c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 463,
                    "digest": "sha256:a3317a8af41033e5b3a3f8c80fa4f623416d26fc5ec6ffba7915b52b887cd6ad"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4351,
                    "digest": "sha256:21981b9ad6643a414eb6d75c987bbbf1d7a09aa3a03287cbd241d69d324c0a09"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1407933,
                    "digest": "sha256:625b12988b7a8b466cb614f7205d235b544cfa90d7e163de66b6a1ab9907aef5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 467,
                    "digest": "sha256:c7c6d9fbbfa579471085b9efd546592e81055388b44e7c69b1d774e65a26f176"
                }
            ]
        },
        "focal-build-20230904": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9423,
                "digest": "sha256:e1c890bd5ae1be3f2e489cfdf691fa912447b25574d64d5e3ac9e5709ed0b7f8"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 25974619,
                    "digest": "sha256:82d728d38b98752cba7d2d7af8ee1cfe67ccdc5915814420650e78def5d1cebc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592234,
                    "digest": "sha256:6dfb5c61cc0897d04de46fbf65cde1b37bc9d5362f527054a3508c0c09af1538"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15547555,
                    "digest": "sha256:af232c471aeb5b7eefd1f903c1a8ded0577108ddeba77ba10a6e1e1eaeb0a3e7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 195340456,
                    "digest": "sha256:28a8dd690aed0d3808337f69580823265f426cfe2ed39601eb4e8df8bd3db7f8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473568,
                    "digest": "sha256:2bd9a0cddab90fe47e4f714ec0522cd8958fa224099719eaaf19239a52d3b088"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1012,
                    "digest": "sha256:1565d76481706d50bd33717d5757ed190dad40883324302d076bef904d49e1f4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 278,
                    "digest": "sha256:8f15a48feeb041a2f45c316135944587d0c01445abe739f77b51dc8759bc80c3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 679,
                    "digest": "sha256:94c8aa8fe950ee99a7ae216fd4b68ce8d511260a499d5bba034def233b6d39a6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 461,
                    "digest": "sha256:895bc62729898db91c7991aea60ca9f6ed1dea5bcbbdc9dea6712bb8baf164a4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4353,
                    "digest": "sha256:51e0a3dce2903338affdfb8ce38e430e0097218bd2b92ef38a3f1e90c06d7a08"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1407979,
                    "digest": "sha256:7af7e4ab04e35e7db7f94a3f516aaf5a43229c8d9b79610ac789558066623a49"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 467,
                    "digest": "sha256:2b86b4e64d80e9fe7cb2ea69a645a52e5a5ce41270a3685ed17faefdebc2df1b"
                }
            ]
        },
        "focal-build-20230911": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:bcdd555686c95cf96eb2a67b2e1af7e284de83aff18001157b8f300ea23fa184",
                "size": 8754
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:82d728d38b98752cba7d2d7af8ee1cfe67ccdc5915814420650e78def5d1cebc",
                    "size": 25974619
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6dfb5c61cc0897d04de46fbf65cde1b37bc9d5362f527054a3508c0c09af1538",
                    "size": 2592234
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:af232c471aeb5b7eefd1f903c1a8ded0577108ddeba77ba10a6e1e1eaeb0a3e7",
                    "size": 15547555
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:28a8dd690aed0d3808337f69580823265f426cfe2ed39601eb4e8df8bd3db7f8",
                    "size": 195340456
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2bd9a0cddab90fe47e4f714ec0522cd8958fa224099719eaaf19239a52d3b088",
                    "size": 473568
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1565d76481706d50bd33717d5757ed190dad40883324302d076bef904d49e1f4",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8f15a48feeb041a2f45c316135944587d0c01445abe739f77b51dc8759bc80c3",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:94c8aa8fe950ee99a7ae216fd4b68ce8d511260a499d5bba034def233b6d39a6",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:895bc62729898db91c7991aea60ca9f6ed1dea5bcbbdc9dea6712bb8baf164a4",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:80719e4ef987f7904f74edfad2644432ee5322c765f47d49c7661c2fdfa32fd6",
                    "size": 1407901
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1b44aae049cd4eaa9ec36a65a82cf6fba876db46b381aa9c80f65cc72d58f677",
                    "size": 470
                }
            ]
        },
        "focal-build-20231026": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:8c37d5b62038108da98c12e0ff3cec52a12639d1e1b8c559e12426bcd7d27982",
                "size": 8771
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:915eebb74587f0e5d3919cb77720c143be9a85a8d2d5cd44675d84c8c3a2b74a",
                    "size": 25973940
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:15926b9c9d693f7581ec89a9496e0b859d7a1d22cd61c9d59b311d99d408788d",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f73c14c07e138f02441498cb3bae293b85168df35d966281d4bd1fc0b70be7ea",
                    "size": 15546464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ce8b9e6503f3824388aff3ca7e8da5e195403c311d32b120fa3090d9e13b7d63",
                    "size": 195347691
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1ec80b31b93d20ba33e19a3718d723eb533c4e5326fa395257e9f9dae97067d",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7fd634328c4259a216c290cb8144dce2c2c595424e06fe619adddb79785d0d66",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4aad962fa150cd2ee8988bbc031311158d7223273660605a22c37a50b529b6f3",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7fead198068bd874f6983c565cc932775b5311d4fdf3c49823baa4ffdc231b9e",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:811d2876479326447f9aa5b65c4418bddcf980cb88b3501abd0bb416125fdeda",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b68c515f1afecd29ff62c80e4f48b39133a6b2662b0b1ea742f10c72652c037a",
                    "size": 1407257
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cccaea5a861d283b7337b7c235fa9e7c5b80106a1ea8bc0583610d30c6eca50c",
                    "size": 468
                }
            ]
        },
        "focal-build-20231103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:7f58050b1da264b0a1dceec2d4e4214591f17fa96d568eaeea3b9a8abfe714b0",
                "size": 8767
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:915eebb74587f0e5d3919cb77720c143be9a85a8d2d5cd44675d84c8c3a2b74a",
                    "size": 25973940
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:82128709103c3abb74020bed7551cd57f5b0675954634dd1114ec4cae4560023",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b5c907219212f5747fcfb18515c1e40107145b4ca6fc09d08982a4293a1dc172",
                    "size": 15546114
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:10a4b8e474eb5c82dcc295f73eba17b7ea9cfebd15683b70bda53ec7200743d5",
                    "size": 195346923
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f4951c8a8e7555798b3db8b058f5885faa9ec36cbe362d42b1b1c296ec286d48",
                    "size": 473568
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8014ae9882123d5403d91d48da40503abad34a4d1f81cd725c2d80437ce67e7e",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:15666beed4498eb8476f1745c70a50afcff522a9905163fa6337ba4547f096ce",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bc76e04a03aa7152964c7017d3964da9f2e8b05be8320725b34cc2def073d6a8",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0321943f6f2b5c41ebeb0d1a85e9bfddb39df5ac082d39d7ea59aa326cd5b778",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:99d1f695112c01d955533dd3550a4ec35a71a1c36827e58d82c3d87f09f26695",
                    "size": 1407171
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:18e7d7ac106dc19e00f99479752164ff913e7dac9c90c42aa8060dfd40286615",
                    "size": 468
                }
            ]
        },
        "focal-build-20240103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:3a24cdf6705947c25c6d016cc4ca27f00bd0e4a76a8b4d526f53c5f52d760354",
                "size": 8771
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d519a3a2a796a075e4e40e5c4a1513aa8db8f8fdf009662bf6858f0149143b28",
                    "size": 25974768
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aa9521f9f7d6fbf06d3e9a936056bb539937b19c50ebdcfba2f0a51b5b181dba",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c5bd399898d22a1e4cb65c1d472aee2a521dc9148a3488454adf8d3e8176bf0b",
                    "size": 15547105
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7edf06f641deca7c779246c6b33bc30e64145d6cfc4da5daf1fceb1318e8fcda",
                    "size": 195338315
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:30f744448909aea097baee8f6b927d05d3464b3b1f88a6cf6df251f20ec21516",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1c3449c13a770f04e51c78cb5c0ae8cb32c6ac318b597a937f420db5fa9f8fed",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b18181ba4a6ff80e15940f9fb0c43d84dac66d5b5a201906b607c030bd022254",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8b1989c121e2ac58fa81a6cead364e75784ea3d126512338bc87a2a0560eceab",
                    "size": 676
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aa6f05c87e421e37c407ef91b82fc6d44528dd0fdad6571a3852e294a883b7ec",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cc2d0a353cf3af6a6c350e074ab87e2a6c8998506a152649340dbfe826730f6d",
                    "size": 1406592
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:56055129501d4939c075bbae5158746425ccd1aab039424ae908d82723ea4661",
                    "size": 466
                }
            ]
        },
        "focal-build-20240105": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:34d5be9a4dadebae85b01534bc7d59a3632688ac4251c33cd48bd67110757002",
                "size": 8772
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d519a3a2a796a075e4e40e5c4a1513aa8db8f8fdf009662bf6858f0149143b28",
                    "size": 25974768
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e4b825bec1543e154bd574190a41879e94535502120cabb474960a98bac04361",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e5ff755ed444e4a2278a1e36f5f23e75908416368fddd9ce7c98c0c32344806a",
                    "size": 15547119
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:89d100e5a1bdec22f1841f8ab14b44dcc51e9c6fe48e7a83c5b383cd2382b002",
                    "size": 195338295
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1ab4153936e90e930b2bf4eb60fc9eebe1be22e4476b43cd476a9c66a455220c",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3c4d4297e27483d13db51c048acd3abb878d4bda33777e61ce0efa998c514f8e",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f9d7278a27618548025d99bcc0a1003e31f4b9eac21afff4262197ef648ad2c7",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a6cd72bd0cbe525bced9fe20b5a284954847f233f35ab8e6029b012742d3c37",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f24affb8af6c13cb1e2fc0cb9a7a417f9162105f3d5d0ef37d81833c15e8b6ae",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:35dc304e3502f50cb7355ddec1b9d051ce3bbb4da3dded1643b3db02c63b3a09",
                    "size": 1406586
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d923460304766a52e5fce708110ca6384c2868111242d7d05722e540e3200598",
                    "size": 468
                }
            ]
        },
        "focal-build-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:79b200008ec4587ab0043d265e5f5f0401121b5801c6f9938e7a8db689f6ca80",
                "size": 8756
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6aae4cfdd5a10a8b0554e75c4c14ae38022a0c8f08dc5d769a735c705670cab7",
                    "size": 25974391
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5d7b38baf77eec3a4fb1f596ddeaa315aac1a077fc230c8fd4f33abf33e661e0",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:807c7ce325f79381e5e68079ef9d4f207c0c182b14f930ba54552ab3ee4e03bf",
                    "size": 15552301
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4fe70b8e7a056d29054dbdff436176e1417e79dd15b3279949c863e894a9bd6f",
                    "size": 195759480
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f152efd02a8652d722087fd90f7579ce770bea7a3578e5ab5db38905bbf7a5c7",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b57779d97469523ea1afd470d95044056a34f92c2e940b5b1f2cd65427ad0738",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d96882a2c6a498e1f75d17327d603056e7a68e87cc97f6b3ac724574d31e72f7",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4524f4534119bcce8312d88b365b565752d0bf0fc6502dd9741f96b72dbaa988",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0a9f668c943f724815eb9f9863ee177461386c72c3d6af700023b69676daffde",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b7f45c2f17590b501993c0b79db919ccb4f6574cb80faeb9abe82a4908c8c62d",
                    "size": 1405873
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:198db5b68b8444edfda1733e99f1e55d6bdc47ca46f4a601b8cacb48389fbd04",
                    "size": 468
                }
            ]
        },
        "focal-build-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:47cfb09752ad17ccc83c40eb8f24bcdb95f2760f70e770c7664e7033d258ef82",
                "size": 8757
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6aae4cfdd5a10a8b0554e75c4c14ae38022a0c8f08dc5d769a735c705670cab7",
                    "size": 25974391
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:251433892e5503ce2a7af8e4605bc4729be70203c46c6e19efed5da66290b5da",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:042a6c58465ff73d6e276ad2c60f4219cbfd98f311565e1acd3ebcd61b8c3f9c",
                    "size": 15552249
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fc0ba8e351c42b8fb1b8abf15f43951ac27f4f6c193b1b0ea1ced01f85d20edf",
                    "size": 195751423
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0c210391b433629ded5f9c2be7473450a2257baca8efcd2ffac67782a60d3a9d",
                    "size": 473571
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:29203c196379c73ba9706b2337edc2c68e73a69215b41abc6fb8404589678cd2",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:474170cea88d05b75fcc70b8ee1a31de1ec46cc536dc79a90b7a17405617f6a8",
                    "size": 275
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5c84fed19c20d7e03a4da0207cc0c0307ce17ae0e31dda7f32b118ef528b8434",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7d5e60bae58f8f4cf16dea055462b9aab0dddf85f8a2757d2544e713304f0893",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c33d42e6fb86bdf18d974ff181ace6c652960bb7db455e73188f50c71a505a9e",
                    "size": 1405869
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:02a05ef4f1da43ff3745502da977d2feaa2b6507b4ff1bb7bc06cad0136fba7d",
                    "size": 469
                }
            ]
        },
        "focal-build-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:1132a6c2e719dcab78e9d39d88b09a6b9512c1165c371b1a69003f545bc6558b",
                "size": 8758
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d7044108e6d4d8b24ea68c7ee675f78cb56d959d0878b78c97e8ca7c6b5fa2cc",
                    "size": 25975500
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a8e390dc72e51f5c8b68019e5eb6e750ce1a6137eb473a3e6fa2cc3d50e1ca7b",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1452761e1891e47e0770db87220566c554a2b5c98a71364407e8f14bfe7b21c5",
                    "size": 15553038
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1ded9a37d7842b2e8e0b5a56a6490fa832ac828f6b85894d14c79b4b547bc517",
                    "size": 195392717
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7a5a450af50aceef52574cee1aa81f2c522c6ed1b4d8de49a2dd7bac6de6bb4c",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:76ceeab00e8cab22661d17b4306971339b8986417e8bc65c63cd434986f10431",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1cc798a83e4122964d4d399dcc50a865348f552a6bdface692b4d4af03230447",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:490ad50010932e76a669412a4d33bf8988ee8c1af36f6b20bb2b37a0060f6c0d",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3d0f4132df6f7551ce35301d9a3f52039a750faef218f9f3324deaba03b1a479",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:84b075669a5bb4877e9b0b256d4995f45a16aec3e1839244f3cd0f0aaac7e2a6",
                    "size": 1406253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9e0ae63f7708d3b21bdd397111fc3fe7360b51a0a0cd9cf773e9536a307fd55a",
                    "size": 466
                }
            ]
        },
        "focal-run": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:5c05ce758d74573323ab166cff8001d891a69d8609218f2b9a81b902d7c2b418",
                "size": 7836
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d7044108e6d4d8b24ea68c7ee675f78cb56d959d0878b78c97e8ca7c6b5fa2cc",
                    "size": 25975500
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d17beb03bdd0716bbf311eeb45ec073518d8fed3ae948af1793903de4366c8f0",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e8a8077f016100579c7a99e2e45a64703994e456d6642a58f8c8f7910a07d456",
                    "size": 15553068
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:de799621475893efb8feb0b149d6954c0b7d28a05770e0e907812d1de6c6ccda",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fb3ea79bd6f1d6b1020febe4de723d923b9b6cf2a1d32155efac8050d41b58d4",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4d5e6044c41369f887a2dd5be5e71859fca44f021773dc807a867070fb348cbd",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fc73cc8002b9f8baa22cb1767e3631fa050a798bd62b4407dc28774ede18cb73",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5c3406d8c477158b42624889ee1d6ba81a0689c2d6b0411df7b9860a9dc40b40",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3e95097edafe8273aef2ffe518660405737e90348c8cdc5ca302043f237528ba",
                    "size": 12136610
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cdaf9ecf861e0537fec9df26a00e77019f116df9d38e2f131cf466de9e0fff2f",
                    "size": 469
                }
            ]
        },
        "focal-run-20230829": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8505,
                "digest": "sha256:b6fee40904672a46f0e602f88c89c97feafda634462a51908aa51c8c6f77b537"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 25974619,
                    "digest": "sha256:82d728d38b98752cba7d2d7af8ee1cfe67ccdc5915814420650e78def5d1cebc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592234,
                    "digest": "sha256:410d6ebed3b4648a8cb3b10b46b809bf35c7e69bceff57fa73db256bd4db018f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15547426,
                    "digest": "sha256:d69a7f1df28b7ca4ae4a22e011d0d47cb6d52d9165b4bb8d648ec6dd4d6de2a0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473568,
                    "digest": "sha256:490be1eda8bb9edf569dc18addb8592392fab33ba48b80dcf9124635e9e21276"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1014,
                    "digest": "sha256:0cb42e1efdc177eda95636b2080728b0e9b52c5f2a7e96cd1c3486fa5f01298b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 280,
                    "digest": "sha256:d86b74130de2bddecce44ed13f88030c9fcc9113d56e8747ec6c537f7524cb06"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 679,
                    "digest": "sha256:b2166074a9a538cc1c801aff859938dad617bd10650f910eb01c08ce528f9a30"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 464,
                    "digest": "sha256:962077ead32d1e2846aa184efe52278abaaa5795e7becfe69b5524d31258fc88"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4351,
                    "digest": "sha256:57a1036a66b02c83150c839cb18541d62b3adeb5a7354a9d9d74704786a8ba2b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12142030,
                    "digest": "sha256:fc89f751be3dd1e2902cbb5adebd3d6c79c632d7f62fefa6f5bdf04d48a7ae12"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 467,
                    "digest": "sha256:659400f22ac44ad9c79e98b3dcc09d8a7353e94f6d841863c005354ec78c0a02"
                }
            ]
        },
        "focal-run-20230904": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8504,
                "digest": "sha256:7e7343b2227a5d52dc6f6b16ada83f6e45e80f841ebe1dc5e11f4d01e1407db5"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 25974619,
                    "digest": "sha256:82d728d38b98752cba7d2d7af8ee1cfe67ccdc5915814420650e78def5d1cebc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592234,
                    "digest": "sha256:6dfb5c61cc0897d04de46fbf65cde1b37bc9d5362f527054a3508c0c09af1538"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15547555,
                    "digest": "sha256:af232c471aeb5b7eefd1f903c1a8ded0577108ddeba77ba10a6e1e1eaeb0a3e7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473564,
                    "digest": "sha256:33c7723c1c0dcc0eaeaab9a701c14652a836e0954a7370a6f88631d75bf32ef7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1012,
                    "digest": "sha256:b8f3bc42f1f078dae6c95132b71c2dedef200bfc9ad0b8a0ccfb9f12c2022677"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 276,
                    "digest": "sha256:981fbfac0de5f3c86b62bc96a3b25d45080bb5a89b5860b3dbd3c4b46cf71d01"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 677,
                    "digest": "sha256:f8284a7a28a7b6670af3abce99bba197bf7b3ab03fe269b7fb2112abb994493b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 462,
                    "digest": "sha256:58621d143f229d731d5d9bba69296777a3920db202152be8603e4ea13337ccb7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4354,
                    "digest": "sha256:8fd55e1717b5652750253fec071ce8ddfe1e64292e4e1aef0a0d35dcfc1c94b8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12142031,
                    "digest": "sha256:330198c356fb406a00b40c31c6666282ddceae53b2f621514b3b0d48f60d4a4d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 467,
                    "digest": "sha256:a2086aefd17c97673993ebb8498c27f7789349e1613cb47674d421f1a29d9b18"
                }
            ]
        },
        "focal-run-20230911": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:43a77a062b828b3e1c8f60bc2d82baee15506d5016f258930d0a04a63c0af29c",
                "size": 7835
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:82d728d38b98752cba7d2d7af8ee1cfe67ccdc5915814420650e78def5d1cebc",
                    "size": 25974619
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6dfb5c61cc0897d04de46fbf65cde1b37bc9d5362f527054a3508c0c09af1538",
                    "size": 2592234
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:af232c471aeb5b7eefd1f903c1a8ded0577108ddeba77ba10a6e1e1eaeb0a3e7",
                    "size": 15547555
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:33c7723c1c0dcc0eaeaab9a701c14652a836e0954a7370a6f88631d75bf32ef7",
                    "size": 473564
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b8f3bc42f1f078dae6c95132b71c2dedef200bfc9ad0b8a0ccfb9f12c2022677",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:981fbfac0de5f3c86b62bc96a3b25d45080bb5a89b5860b3dbd3c4b46cf71d01",
                    "size": 276
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f8284a7a28a7b6670af3abce99bba197bf7b3ab03fe269b7fb2112abb994493b",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:58621d143f229d731d5d9bba69296777a3920db202152be8603e4ea13337ccb7",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:faccd2344a9ca98c504c91481b1c0a507c5ac89d208927c37424d69bf29f5be9",
                    "size": 12138405
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:61190bf59dd8ea8604912c7554626573851dfc14147ddc8f441d73d2a78724c4",
                    "size": 471
                }
            ]
        },
        "focal-run-20231026": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:7abb9f27b001cad7c2d1e275bdcfbecde406bec3ee7314fe3b4baed63957a044",
                "size": 7848
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:915eebb74587f0e5d3919cb77720c143be9a85a8d2d5cd44675d84c8c3a2b74a",
                    "size": 25973940
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c2af00a58d01e89271ab922b8387273a51e9789aa36bf6e6618d16e58f09e74f",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:52cdec91789691ae33f8a65492449ca0eb295544c52832a57cde681b0af79b25",
                    "size": 15546321
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6492ad84f1d1bd13cbe392617030e60a4a885a7ae531af8d7a137510b4d4add4",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1d07b2497fc95abf9f55962a44c0ca4f0a94a52679bc03abef6830943e6892e5",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1b8529f16a2b87faff917fd552dbafc022c472b335204d18ae045fb47a09ec12",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:24fa3f863c5e9e958088fee69d531b8a4302ee95ddd76859a4a526fbffe1a0bb",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:79103de35290bb92be10674e7fb4a52714c8ebf787e2052fd76a75347d7e1112",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:873eb78e014c724b9f803efa365d8868b6743d9693982e2e4db4cebf16736c04",
                    "size": 12137993
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fc46f679feee6ee7dee6122ab40112dc5f7d393dc8ff9f028b4e7987a2765984",
                    "size": 466
                }
            ]
        },
        "focal-run-20231103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:64facdc60960679ba6eed0fdabab19a2f59c264c93bc8ce22319a0724464e8d3",
                "size": 7850
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:915eebb74587f0e5d3919cb77720c143be9a85a8d2d5cd44675d84c8c3a2b74a",
                    "size": 25973940
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9ba1eebf789890f299d3c47134cec5198dc5263dca7d30152de49c30f6293b37",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5f94ea34ca72e2c80cf7c4b327697b011a1b64d59c7c4b2f6f0ed0ae3b9f14ee",
                    "size": 15546334
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:02a00e3b0ee22bbc34e4ec7b17f67767ab92dd30de039f69650ec93d9a4dd166",
                    "size": 473568
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e35c423b273fb686b8bbb2e4f3ae8b651d8ec759ad3e131a88eb3ebaee967554",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e1290ed797c02635a39b3ac31b0bb8b495f76526bc81279a13f12d8a430042fc",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:da583ca61e70bf339bc9905694399fd80ddaee57314520795c7c82836fc89e70",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:456a2fa294e282e01640e8aa2125752793bddd5d607e787ce126719e839854c5",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ce6b91af903d74417fbe4cffc70e4d835b227e51d6b54404dac070829b25db8a",
                    "size": 12137936
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1a578ad78091fb578834b0907b7749d3d9456004412afb87b4be7dffe70d6df2",
                    "size": 467
                }
            ]
        },
        "focal-run-20240103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:808fc1308ba5df4eaec6bf1260b044a7b667e7ee763f2214761e0c56ad060570",
                "size": 7843
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d519a3a2a796a075e4e40e5c4a1513aa8db8f8fdf009662bf6858f0149143b28",
                    "size": 25974768
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ee797e59d90e35d215f9a8b603e1f24e0c4bd705a7edf8ea89615d51adebc35a",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f3db87c26a3241c45f96dc9dfd76a2d3fad4d3c5d8039a562c5c71046283eeb4",
                    "size": 15547192
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:56c929e353ea28aa5668472fd7d60edb268025a744d98c025826021b60c1598b",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:849292c2b57a48a52676714ee67d2e1ce4f8acf9172a1ce5511dc306d24bd98e",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:232e41124d5139aef0623d938676a758ea76b44751469e907c4002d54c0145d8",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:106d74e785eb67430019b6285a0357451457ab141278b72eb5770f81bc19aad6",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6801cc821bd0cdc1b78465f2cbd7591a921b75269d45c4947b42ed66f6cd5a6d",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c796b2cf91b0fc3145ab3d033ad035217c8a664d40acec00505351036f0442ce",
                    "size": 12136731
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:14624e1f4209e2aa3530e310635b67c15af794d68199a4efe142beae2cf82b3f",
                    "size": 469
                }
            ]
        },
        "focal-run-20240105": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:f4eb75e61f4f20b0d6713c206ca9d66eb33d30de965bc9748050690d9265a9ed",
                "size": 7846
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d519a3a2a796a075e4e40e5c4a1513aa8db8f8fdf009662bf6858f0149143b28",
                    "size": 25974768
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:443f93ae3e9bd4bbbc67845168362cba41f54d28378fcb996e694a29d06dd6bb",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1800c9a777ec072f5d3f0e2e4ad9e029063e11c117b3a257f237341fd680d52f",
                    "size": 15547199
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8d2710854f926d7d2a88024455a2ecb3bb64ecf1c252981cc2721ea382cef88c",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5d7f1bb3b452ed120a58de532701de5fd91b9a87dc2f754ed8e726eb816fd8f0",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8ed0ef3b38b4ba4b5a37f520a90ff0b0d4f6821f318dab68de13dd5e8ddee755",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d6c5f11debe435fe9d306c6abcfc8e3d2b1cecf25f64b49ca2280464f01b74aa",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:843ffcdd76940ab05e1ab187f0e104738e76b70bf78ae5d9171de457f1ccb780",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2e049acee55ba47da227cfbb069b06ae2625fc87415515868112a1edc4e61b44",
                    "size": 12136771
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4e111a982a5a6de1ee7e8bc12e19c5e56d07b6a372c77dee6aac328daac43eea",
                    "size": 466
                }
            ]
        },
        "focal-run-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:4b407026da141ce4671de5d185c726c59690b75121c0ff6184122a9700520117",
                "size": 7837
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6aae4cfdd5a10a8b0554e75c4c14ae38022a0c8f08dc5d769a735c705670cab7",
                    "size": 25974391
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:603fa79a3b217012e8804ef22bd89746c621c248a7b90d9e9eb4d2180f357a28",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cbeae2deb6e333bb89047592af408a09b3e037fa2760d195df3cc6b93a320039",
                    "size": 15552265
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d549421d50e2e2727415e82fe2f0d91f616f607a82be0814c8a81ecad54e2552",
                    "size": 473571
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1229a72631fb7e23cc47a0b86fa8ae821309b3df301de6eff867f829bca0c7e8",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:886dbbd2d2e55a9cdae9c13cb73fb35923ebf0608a8d56eb4bcacd558f136fc6",
                    "size": 275
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1f9ede45d3d4f2b4030d84190871f5508ee21616f0f9d08b4817ab99117bc878",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e07ea3ba8b43cbfcc0a490f3d704ee2c2f6af0a44ef95526c713d1e46607a3c2",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d3bebe41e87bcfa86913fdda81d63d0a86e2c9b2bc0054b2d65f7e059703a527",
                    "size": 12135616
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:205eba5e119c0630fc2205e7f1310da6915a94a286935a268079f02a3b123770",
                    "size": 469
                }
            ]
        },
        "focal-run-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:c983c094f4be8fb5324e9f3e6653b508372b0b66e46321f77fec8097502ea8a2",
                "size": 7831
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6aae4cfdd5a10a8b0554e75c4c14ae38022a0c8f08dc5d769a735c705670cab7",
                    "size": 25974391
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b20538e17efdafc8737c7c251c3efcdd6009fb0e3fcdc71d900c8aa98a0417a6",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:368e7fcf45aab11c7b4cccc0e26aff8f935e7bb9791a3878a8f13ea422771e76",
                    "size": 15552255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fd4854619240029b03a4c0cc5444a23437f5cdc3c7372a32adc45c7ea217c4f3",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:faf76eeed624487da7d38ec96cd3570c165b3a160c04e33be1d8b86bad2aa5d0",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1183ff7e6360e4cca0dc6633b184ef05eb32c530eac64b305a2e5518e19f833d",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:caccec972859b315a6cefb3388e25adc200ab884919bf2eaa172c406c29e536c",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:81976525fffd3c71cfec50cec06422d475062e83a259b0522421b2a1a42c7181",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a0336fe6bd596f69319a6b733a2ceb993292dc2ee29a88aac94e0eb36084b977",
                    "size": 12135668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d99b22e76803e3c25744803f5a01de3eb017dc3f2b64f8dd43f465ebcec27fb8",
                    "size": 469
                }
            ]
        },
        "focal-run-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:5c05ce758d74573323ab166cff8001d891a69d8609218f2b9a81b902d7c2b418",
                "size": 7836
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d7044108e6d4d8b24ea68c7ee675f78cb56d959d0878b78c97e8ca7c6b5fa2cc",
                    "size": 25975500
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d17beb03bdd0716bbf311eeb45ec073518d8fed3ae948af1793903de4366c8f0",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e8a8077f016100579c7a99e2e45a64703994e456d6642a58f8c8f7910a07d456",
                    "size": 15553068
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:de799621475893efb8feb0b149d6954c0b7d28a05770e0e907812d1de6c6ccda",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fb3ea79bd6f1d6b1020febe4de723d923b9b6cf2a1d32155efac8050d41b58d4",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4d5e6044c41369f887a2dd5be5e71859fca44f021773dc807a867070fb348cbd",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fc73cc8002b9f8baa22cb1767e3631fa050a798bd62b4407dc28774ede18cb73",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5c3406d8c477158b42624889ee1d6ba81a0689c2d6b0411df7b9860a9dc40b40",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3e95097edafe8273aef2ffe518660405737e90348c8cdc5ca302043f237528ba",
                    "size": 12136610
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cdaf9ecf861e0537fec9df26a00e77019f116df9d38e2f131cf466de9e0fff2f",
                    "size": 469
                }
            ]
        },
        "jammy": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:44a1f0fdb5a7101957b18291df431b0bbba36eb4dac029368abb70574473e832",
                "size": 7836
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5a2ad729c09fbfdb259ae764f92188efc67a615ffde9bb34a46298d1edf3cd6",
                    "size": 27360530
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:89399c74a38da68191a3f2228d93a279ac592fdb8b032f45d7635589eb1f3f27",
                    "size": 2592225
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5e71911d1843b73d9940a8cfbbafd038bb11df4f7c76f94ababb1e5eb59dde98",
                    "size": 12233707
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:07d81f195fae90668bd7bd2ed99c3cb5c2df14a61d86dd6ae63e24db88e9780e",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cbae211fb5e96faba2a036f002e70760fa5b0a46fe1f1337ba8a9a1b19f85f7f",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fb981c3534828254334770cd368c2465968ad2b1aad8faa10f0abfc5dd89d9b9",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e12833949768d9e8cb41ce80e65cf1b5dbbaabc3c20865913db17f4a944cfe30",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c27fa31ed6b63aa8d7f935c6c8ce2aa270dfdda6fb91aef896978f168b5197bc",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4bb506c9fe910252d41ba190a2406ab3bfc904e60a006721e81396d53d69395a",
                    "size": 12224181
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7bc7e75a54169630919ca0d4eb24815f28381a7f5525d260effa3b9b6fe441af",
                    "size": 469
                }
            ]
        },
        "jammy-20230829": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8503,
                "digest": "sha256:ffdac3504dfd94a8eb19258feda3098c768ed9084b785315328f7e409afd5b0d"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27351105,
                    "digest": "sha256:20274425734a05472f3772bae7ce7124a9832f5eb168456d6cb53e92d6e718a8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592232,
                    "digest": "sha256:559403e73a2bbbe7162790ab9a01b8821b245a167cf12febd64515b69bcc7ed4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12233453,
                    "digest": "sha256:6569082e05674e6a6d6cc5fe52df4e9c3deb80c8d5d410a4d72aa8d817565401"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473570,
                    "digest": "sha256:e73ef5703bf064811a78f54d90eb5641d5c97b9eb1b69d6f81f000acaedce9fb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1012,
                    "digest": "sha256:eb7aff4d75a007af2c9270dd6d93fa1b39e864ac39387faf1aa0b1f1451bf395"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 278,
                    "digest": "sha256:211af0a7a7edba81c694dfffed9fe48c8a6a5a2c3c8947cb9195070a86b37ad2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 679,
                    "digest": "sha256:edcb5a158d8fc9effb445cad897dcc7ed9d5fec602837b046818e02fe060bd89"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 464,
                    "digest": "sha256:7026cafb296c0c85d4460e3e95b5c881786f5790fd246dc05609a32b268d6799"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4353,
                    "digest": "sha256:b81e2439bdbed73367271521887f0ef12da86658103c7723b35f3f326acdfcce"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12224398,
                    "digest": "sha256:7a3aa46cd6f67b6f051dd1b921d4e42780fe69f7577d97a8c40a0803845b35a8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 468,
                    "digest": "sha256:600b3f8875c8cc140126ae794143cd325684d5b7d31952be116210604dcb2dae"
                }
            ]
        },
        "jammy-20230904": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8502,
                "digest": "sha256:46b6098e2806b33763e3bebbbece13575d55c511d8c444e7e391064622301841"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27351105,
                    "digest": "sha256:20274425734a05472f3772bae7ce7124a9832f5eb168456d6cb53e92d6e718a8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592233,
                    "digest": "sha256:ae6604f096cba3167cf802c2e3d5c3830f1f1b8390a942213ac4dcfdfea632e8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12233670,
                    "digest": "sha256:4b6e91f56148e91c5c3f09993b098eada2612ed836e6277c51636dbfeb37ca9b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473568,
                    "digest": "sha256:7b42ab3c40dc1b5d67d55828d1f26472e83d1c9c414d98175814b21e4a0b63c1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1014,
                    "digest": "sha256:7b527a3653c885d02412efd0580ca270845473e093fbc69099976cfd8c1baa65"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 278,
                    "digest": "sha256:d5c6c348a314616df2441a0ed19bbea283f14873cc4f20570862ca643d829be1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 680,
                    "digest": "sha256:402f85bc0e8d7b72d411d22bb4c13d09e8e970f6867e5c690e33dabcec804f82"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 465,
                    "digest": "sha256:d3e9368448a4effa5964fe1f8c74dab71aea3a9443693247448ec7c5234fe647"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4352,
                    "digest": "sha256:9f7ff0cb5103b62b8a3db8f0c00acad12868d9e070c3a3c384124e5323365906"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12224434,
                    "digest": "sha256:01ac6f7e4df93e1056bf15d57982d7708c90641d4458743da881ba428a27d7aa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 469,
                    "digest": "sha256:77727fa2c71bf8a49974d230eb96f1d8514ec6ad46936abea06de2659a473bc3"
                }
            ]
        },
        "jammy-20230911": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:97b9acf88fa0ac4871667652b5bf44497d78d3a42820d8777b7cbac0b9b5b960",
                "size": 7827
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:20274425734a05472f3772bae7ce7124a9832f5eb168456d6cb53e92d6e718a8",
                    "size": 27351105
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ae6604f096cba3167cf802c2e3d5c3830f1f1b8390a942213ac4dcfdfea632e8",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b6e91f56148e91c5c3f09993b098eada2612ed836e6277c51636dbfeb37ca9b",
                    "size": 12233670
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7b42ab3c40dc1b5d67d55828d1f26472e83d1c9c414d98175814b21e4a0b63c1",
                    "size": 473568
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7b527a3653c885d02412efd0580ca270845473e093fbc69099976cfd8c1baa65",
                    "size": 1014
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5c6c348a314616df2441a0ed19bbea283f14873cc4f20570862ca643d829be1",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:402f85bc0e8d7b72d411d22bb4c13d09e8e970f6867e5c690e33dabcec804f82",
                    "size": 680
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d3e9368448a4effa5964fe1f8c74dab71aea3a9443693247448ec7c5234fe647",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6e8a0c2405112feb737a2e4001427b61ce957c67da6b06dbda6b3255464247a1",
                    "size": 12221865
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e3750557176c40ce26609ef93a4430ba7d259884a09aaa8e95f56349d375d50f",
                    "size": 471
                }
            ]
        },
        "jammy-20231026": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:54cfec8d5eab040521420182ce3a1cee39b99bfb43ea932f379b799ef9b0dd73",
                "size": 7850
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bfbe77e41a78ee38147c5761aa8bc896d9f6e1e648b23468f294065ffe03c107",
                    "size": 27351048
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7d8e3a5ce2c7569141bab67dbad09ca35073e305cfe00382325fc63b448156f9",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:85b41a9a963de8053ce2b753e777313b55cc516d3a297e0663902f8179d60496",
                    "size": 12316184
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0945593605b189a6aef34e405731b4fdba340871249e0b759b6e6beaead3cb76",
                    "size": 473561
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e452cb5bd09d63c9f8f783a4f25643d1794b37199eb1f7ef9d4d3a5b29365e16",
                    "size": 1003
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:246f3a4d432fd9a259b0579f8c4d0bec180f2e5a73af63dab56fca45199fe4c7",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eec2960d0f7611d0a8f509226b0f256c11ee4289af338d0a3015013cb669563a",
                    "size": 671
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3042de505c0b156350c4aa451cc5da0be3620c026fe13fbd5da44b256dde96f1",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a7d0e900c5a8b9395b1d7456bef680196ed8266fd5c98dea90fd94bc8dac6b18",
                    "size": 12220896
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:505f9d5e55bcce922c1b14adf5338618cb32353a9da169164a34530e5498e2f8",
                    "size": 469
                }
            ]
        },
        "jammy-20231103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:50d36746518ee2ad05cc41950c170c390c9b46d1ef6a9d47ff6acab0ef85800d",
                "size": 7851
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bfbe77e41a78ee38147c5761aa8bc896d9f6e1e648b23468f294065ffe03c107",
                    "size": 27351048
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5a3af5ce777f2dd7ec2aaec6aa356e42e5a42f0d32a149e65a59b8729b1d7094",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7649e5ab76ccc98a5056f017191f42c54be18c3e003fcf3292698b328ea60cbc",
                    "size": 12316275
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a63d4a5e8479af96d464fd5787e27f0d48b463b6ae80efc19479cba025c3517",
                    "size": 473566
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0a429b17027c0d22d8906e581f5cb64f30bf0c2b8be2acd4973e2638a80226c1",
                    "size": 1005
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a5de09e3f4483dc0f854475347bb860f3cefdbf9b493bf3e12a23da46a7305a3",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bc89bb78903a175b6eaff7efb58a17e7a9690d7c7c608bc37bb86ba3b9379d52",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5ae094d17cf4cfda68a734a2d6f3164f17a5a38c65274ce0c74fc33daf45dacf",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:feab76570efd7fe591f40ddb48f944d73c8c493b584227d03d7a47bb4e6c45d0",
                    "size": 12220859
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fab6d2e621b9a66ad3ca0075a6fc7dc4abc08184ce3948dbe145fb0410e78565",
                    "size": 468
                }
            ]
        },
        "jammy-20240103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:366a6edb8f9d94a7ffc7e17d39951d7f703665b82745c2bfedd3ca570443b5dd",
                "size": 7849
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:005e2837585d0b391170fd9faf2e0c279d64ba0eb011cda8dedf28cb5839861e",
                    "size": 27358237
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9408f48a8910ea8dbacaab0bbba4ed1ddcbaa9fd0f39d1e832244a12aa84fe58",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7e06066982274a97e0cd7604312624913ba85de784880763df13ceed45bcb944",
                    "size": 12234166
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c0b1c1ca4c3b9caba461c91a6626d818414cfe5c697507e4c9184ddb72331ff9",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a53fcbd064252fb0e8a7ab29ccdf51f6bf40a09d144aa087e213c164dae25794",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eec2863e3cc73fcce4ec0a6a618e0d9efac1b68253c565e59b1f32dd4bb8af28",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fbbc495821203a386a2ce4861083dcfd8d59161671f36966b760e0f79f38f0c5",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:31c6fdc86cb96d13db495e65c21c4ccb25bfa6ce0e934c67cc270c3e19dfb221",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:82c6f8c047823652b579d0563f4496d543b39387ebd5ce87377bf732939f26f0",
                    "size": 12225952
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b4fcdfb8ffb08ca72e9c55b2772dcdfc94d08e2304deea02de8e65684338c55a",
                    "size": 467
                }
            ]
        },
        "jammy-20240105": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:1897b03d0a23c251ea2d4972ace5de526155072015d3e9a4563eb2daf5cb4167",
                "size": 7846
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:005e2837585d0b391170fd9faf2e0c279d64ba0eb011cda8dedf28cb5839861e",
                    "size": 27358237
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:946fc3325c089f36e15017c49befb3c508137015fb88007c742ed19006e40f86",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:100225a27beb4e67711e9cb9d48b451ad713a3150e654dfcb516b7597766030b",
                    "size": 12234166
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1939f20d12dbb914c8a5357384b364cc15c6e4ce3607823e1341fe28da073138",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bcf1bcafa383189abc3e0f283ce439dccc91e6b9f1592c306e38a520d645e801",
                    "size": 1005
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f96eeeec35dee0c7e24bab3f3e43312e1158a4e8fe6ba8b96c53fe185619cf4b",
                    "size": 271
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fac0bfa85c76994205d436d36203c1084b4945492f32bec33fa842d31a8a0ffa",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9cbd2eaea1c9b26427471a64959cc985ab10029f276e52bb7de9a25be24524a0",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1d4622ba6a3e56ac83c0b5a6bfa98f49df4694ead4c9e228c4da7020afdfad1f",
                    "size": 12225087
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d2e5d4caca6e6dc00742525f269f676394ca5fa34f214bf660d327dc48ed9720",
                    "size": 469
                }
            ]
        },
        "jammy-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:ce7cd5b95c7c46548a5861f3f03691ca2a31c1e6f9fa7f05fecda381f44c81d4",
                "size": 7837
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f4bb4e8dca02be491b4f72d2ef2127a64ce49c48d0d9c0a0fcaffa625067679d",
                    "size": 27358724
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8ff11e77b26351277ff2a0f7f57de0e2fb9d02b5be092feeb05f226ceb6ba3b7",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3c694bb7c6e354d784246b814440da89d55ab53bb249fe04f4ca407b6bef8755",
                    "size": 12232965
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:846ad103b86fcfbb538630714a0fb8bd9f0fff97f12cf86395da6bb2a73887ac",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:18090be9c466318b3ea02cc6448f4df9e47a0d3d52f1ace7e9a568e37a5048b1",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2eabd6f86977cadfa4a0b81a4549c3c23b73f9d2065c284982af5ffcdb77197b",
                    "size": 275
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:84ef6d70e52d2cfe921008e502281995e4d0c18efadabed15bb11057d14a955f",
                    "size": 676
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fedc60b46a8c9d3ecaa5ebc92bac8212b64e81d6d578cea5d3d18d7a49eb754e",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a4509e321f0f31cfa06836dfd026fd2fef1346ca86326996b72f5e908fa31008",
                    "size": 12225038
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:da4ea0e91794582a40c3581cab3b9edc560f453bd0ef58f85fb8b513db05d21f",
                    "size": 469
                }
            ]
        },
        "jammy-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:97b7697f705141dfb63207b766cdc9077c5e4537c54580b6fea6ce82af60958c",
                "size": 7837
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f4bb4e8dca02be491b4f72d2ef2127a64ce49c48d0d9c0a0fcaffa625067679d",
                    "size": 27358724
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:81057abc74d5de25182a92d640d3a1237f10256f98fe1e82d445b39778134a1d",
                    "size": 2592218
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:099b0f81922f80f716f12abbcf3bed657b817486040705b3c691b8cd09624fef",
                    "size": 12232968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b7650831ea69e17d63080487881b8fce883b0883307bf1daccd03dd4e4fa6371",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8941baf7a44298e644f522e0af80d3fcd1e34ed60e5c554e1341f9b36d9654d0",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cb329778bf8f72448034e258b232c88b697f8519b5d23f09211bcd858e073cd4",
                    "size": 276
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:71c1a139d3f8524a8ffdad442be7f314363fcb7c7af004c779bf830f9e95bd59",
                    "size": 676
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2233a8d3d5bfebeadb0df88dab38b780f332df712ae846bb8afda80ad41f22fd",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e661d13e715bb628df9bc6504230a0fd4ce3e1f2108f372a08279a940274e7ce",
                    "size": 12224423
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:39efea86dc1580c79c2cd8775841e9122062dd15fc67e54f3b4dfc34304d4060",
                    "size": 471
                }
            ]
        },
        "jammy-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:44a1f0fdb5a7101957b18291df431b0bbba36eb4dac029368abb70574473e832",
                "size": 7836
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5a2ad729c09fbfdb259ae764f92188efc67a615ffde9bb34a46298d1edf3cd6",
                    "size": 27360530
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:89399c74a38da68191a3f2228d93a279ac592fdb8b032f45d7635589eb1f3f27",
                    "size": 2592225
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5e71911d1843b73d9940a8cfbbafd038bb11df4f7c76f94ababb1e5eb59dde98",
                    "size": 12233707
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:07d81f195fae90668bd7bd2ed99c3cb5c2df14a61d86dd6ae63e24db88e9780e",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cbae211fb5e96faba2a036f002e70760fa5b0a46fe1f1337ba8a9a1b19f85f7f",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fb981c3534828254334770cd368c2465968ad2b1aad8faa10f0abfc5dd89d9b9",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e12833949768d9e8cb41ce80e65cf1b5dbbaabc3c20865913db17f4a944cfe30",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c27fa31ed6b63aa8d7f935c6c8ce2aa270dfdda6fb91aef896978f168b5197bc",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4bb506c9fe910252d41ba190a2406ab3bfc904e60a006721e81396d53d69395a",
                    "size": 12224181
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7bc7e75a54169630919ca0d4eb24815f28381a7f5525d260effa3b9b6fe441af",
                    "size": 469
                }
            ]
        },
        "jammy-build": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:99bc89a385a3a26700417f6edda73199f0b9d4ad08813b113b59c7494d7cdf98",
                "size": 8749
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5a2ad729c09fbfdb259ae764f92188efc67a615ffde9bb34a46298d1edf3cd6",
                    "size": 27360530
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ffcc4a9fde21d6c766d4614f1204ee212dc39473d283dc3238d8092ea0f1e537",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eeb8d5e311d2049c666f7e84e3932d1f1622e4c2a497c75ab7106b54be4832b4",
                    "size": 12233838
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:618bf1f3968aa3c0d2d9c99dba25f2906c8a7c988223a31e7575f316acc878bd",
                    "size": 209438089
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1c211d8397e4b621d909da22a5a5db94a403d073d6d17baaebfc85960f29d204",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:32e378487a9664364b9ba9e11696f7c609fb138faffd1fdfa1789a51de709177",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:54f1b7a79afc7306861badcb2a0a97de00a680a97285ef6b7aaee32d0415c78f",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:415366c9f05101573ec8ca723889c19948876ef160b7d6eef1c150938f8cd869",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:342ec12cab4c82acb1e51aa85f822d54d69550880da306ea735cfec955a24ecd",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cf6b61c21f40a1cd6f6d7d5237ac7536e67a628bf7b605740099423137fd5cee",
                    "size": 1168067
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c402a7c8db79e62b6560d5bf8e5e3f46d5e31c1b7df8cc6d7983a3213a2d86e3",
                    "size": 468
                }
            ]
        },
        "jammy-build-20230829": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9427,
                "digest": "sha256:b00bd8110eb0456405ee78e03c528bf924c59f280b53bcd2515af3dcb952abc0"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27351105,
                    "digest": "sha256:20274425734a05472f3772bae7ce7124a9832f5eb168456d6cb53e92d6e718a8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592232,
                    "digest": "sha256:559403e73a2bbbe7162790ab9a01b8821b245a167cf12febd64515b69bcc7ed4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12233453,
                    "digest": "sha256:6569082e05674e6a6d6cc5fe52df4e9c3deb80c8d5d410a4d72aa8d817565401"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 209392921,
                    "digest": "sha256:10ccd6e6e6b9946104eb0b8aba8dcd4a3dff321c151abac13433aff1e6428f92"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473570,
                    "digest": "sha256:651140d45e4d61dabab3134a40d7c1c1e4eaf3d9af240d133ced9ea1e3cc9298"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1015,
                    "digest": "sha256:4dcd738299fdc52ec868b03d76fa91372f4a0a4c2805faa22f7a7e05dda7aabe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 279,
                    "digest": "sha256:bbb6e071f1ce2d01dcc837c65736bcb100ee7c9e89aa513eb9c81663d9771320"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 680,
                    "digest": "sha256:eaf3b9bf654c8e61d0ae7cd21b221dc82e69319a1387164d3961abfcf5ed5dc0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 462,
                    "digest": "sha256:d4be53b9be303694eaf8687c3d9a88ea6bc7cebd9de108dabdeb7de18fef6216"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4352,
                    "digest": "sha256:fa943d7f36bb54cd65821a7640f4a8d3aafbcf467807ff3fc8a186287138973c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1169802,
                    "digest": "sha256:db98773ad01b3d8e07b21339dfd69cdb71c773fa27a1ba79181867df38ddc3ad"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 468,
                    "digest": "sha256:0b9dd62c54f059356aa94aad174ce6123a444b07ca4aa2baf025f73ca7ac4e7a"
                }
            ]
        },
        "jammy-build-20230904": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9416,
                "digest": "sha256:3df52c77831b490a38c3ac46297ad4c6df334363280465282a3590fddf800bfc"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27351105,
                    "digest": "sha256:20274425734a05472f3772bae7ce7124a9832f5eb168456d6cb53e92d6e718a8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592233,
                    "digest": "sha256:ae6604f096cba3167cf802c2e3d5c3830f1f1b8390a942213ac4dcfdfea632e8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12233670,
                    "digest": "sha256:4b6e91f56148e91c5c3f09993b098eada2612ed836e6277c51636dbfeb37ca9b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 209404460,
                    "digest": "sha256:829e68b52046c801853ed63b26834b3b59c3c1e27a4d1bc78b5ad38d86ee8c9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473568,
                    "digest": "sha256:4ab797161b47112bb753b983ed970e1976db36cd3f47d91d3f422db5a18d615b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1013,
                    "digest": "sha256:09cab4d2377eb385d7b48510de6c9ee4e50b07ff797e23b09e32daa7dc6a2f62"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 278,
                    "digest": "sha256:b534cb7ade1cb4b93e518242c98e01091c63bf7fd1059e9eafd80ed9c27118f9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 679,
                    "digest": "sha256:f8a00ddbfdc0f0197674d29024223766d13fdc4325827bf917426c00367a212b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 461,
                    "digest": "sha256:c285b30fbd904d73633972f5c2ce65b869683b4d1781644268cb95376d8cc064"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4356,
                    "digest": "sha256:538028453b5c71197d5e134d16d99f449ec78a70e087506eef46e0e3a0f03cc7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1169854,
                    "digest": "sha256:ba3ac31a3a215f6c25b0391c4b8b6b0d9bd33c64a8744871113d00ae6a2bcadd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 468,
                    "digest": "sha256:40633e851999bc560ccd7cbcdaee9a7edc13716b170d08b06d6f025b2d7350e5"
                }
            ]
        },
        "jammy-build-20230911": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:2416a7b54cb2cc22bccd296511d515a023a51eee759ee2bdd638e4e861a3a25a",
                "size": 8749
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:20274425734a05472f3772bae7ce7124a9832f5eb168456d6cb53e92d6e718a8",
                    "size": 27351105
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ae6604f096cba3167cf802c2e3d5c3830f1f1b8390a942213ac4dcfdfea632e8",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b6e91f56148e91c5c3f09993b098eada2612ed836e6277c51636dbfeb37ca9b",
                    "size": 12233670
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:829e68b52046c801853ed63b26834b3b59c3c1e27a4d1bc78b5ad38d86ee8c9d",
                    "size": 209404460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4ab797161b47112bb753b983ed970e1976db36cd3f47d91d3f422db5a18d615b",
                    "size": 473568
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:09cab4d2377eb385d7b48510de6c9ee4e50b07ff797e23b09e32daa7dc6a2f62",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b534cb7ade1cb4b93e518242c98e01091c63bf7fd1059e9eafd80ed9c27118f9",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f8a00ddbfdc0f0197674d29024223766d13fdc4325827bf917426c00367a212b",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c285b30fbd904d73633972f5c2ce65b869683b4d1781644268cb95376d8cc064",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:20135fc0d35b23557decdb4642bb6135d644ad9b45b6d1c1a3715b5b89ee55a6",
                    "size": 1169801
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:af9c0fc6e7f8db0b864b97a3a4711b6f2eca8c298ae9d495caa2810711e96b79",
                    "size": 469
                }
            ]
        },
        "jammy-build-20231026": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:7e69cddd836c8ca200278365b7ea46dffe425ac2b835ca0eb7095a86978ed39d",
                "size": 8773
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bfbe77e41a78ee38147c5761aa8bc896d9f6e1e648b23468f294065ffe03c107",
                    "size": 27351048
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:983849fdd0d32db99ba92313e6459f27b5e87245502736464071eed20c189cf3",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ba7cf299b555ec48dac88dfef8a4a93b1f0c2f4311ef904a8aec8688830a0031",
                    "size": 12316512
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:df596b7ca387834cb8e196bc1bd422b40dc0ce59171d4580f66e8ea1acc90ae0",
                    "size": 211524802
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:62183ef724fe461b0b7c8dde45a2b19a096a8dbae78468e0309e92d499ec5f2e",
                    "size": 473565
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bf9c3b7406a77f9357642a2a9f996fd12e9fd754d7a8118afed9be2031822e2b",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:309012611a8f14930781977092d4f8b7f138faf7d099c284f3d5d5142a2a98b2",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:27a97117875eaecc663cb5630ce233fb0e6f9058dc69b69de9134a49558d0823",
                    "size": 671
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:358770c2fb7a303bd34b9814c06894f6999892984d97d83c577ee9a5d1b4b5ac",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:18e8050a19b004b6f646c1602f1228787191a27704e01c776efb5f39f13d1ce5",
                    "size": 1169087
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c998da0551d88b4179bc6a5f9a1db1448c92b0aa5a9ba6278274219b5a86010d",
                    "size": 469
                }
            ]
        },
        "jammy-build-20231103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:b7c61bf2acd1d31043457fac02a82a13bae45932d96b123d9e0a4227c9e70374",
                "size": 8772
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bfbe77e41a78ee38147c5761aa8bc896d9f6e1e648b23468f294065ffe03c107",
                    "size": 27351048
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:60f0904a2184826d9f5378b89e94f1177de536073ed282aea0ce2397eea4b395",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:953a40b0fd784a6ef3c950bf1eacd6d17e38b1992941012f9bee1a5a01298738",
                    "size": 12316466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0d90dccbcda573719aabf8fef2ba92fa78bcd0222a1b8b338cf88e0cfd2a12ff",
                    "size": 211523518
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d193d37aa3e76ae6862490576e729cf64b34e3542722f1b09ebb21722233f2bb",
                    "size": 473565
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:296a47dde0f9f91fd3cfddb7a2523fb7358c7fae586fa11a9c6273e8b6d50607",
                    "size": 1005
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bfb89f38eed8d15d5668a142670e8bbbaedbe24cb7e77c59f173aaeb1317094d",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:173c145f898ecf995a1bf900c629fc8bc288630971ae0b16dedac06a1d547bf7",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8b2c82e627f8c6b70aeb154ace7dfc262ac06d7d02df7e5e05e33147b510f2b2",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eeeee8e567d1516f95b304a274de434e574a11955514031345168b152a32e9d7",
                    "size": 1169008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:931c70e2f742c85c6ff32048e107ee3b06ee1500177fec23e1020682f7db2585",
                    "size": 468
                }
            ]
        },
        "jammy-build-20240103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:77d8e7a4e46d804d13271f4f71b97f297d9914e9122663b567b0800bda4ed8a5",
                "size": 8765
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:005e2837585d0b391170fd9faf2e0c279d64ba0eb011cda8dedf28cb5839861e",
                    "size": 27358237
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ba341ec610b866d122f16208fbcaab1e0ddbe177fc7b0f15f02d1ebc4fc153f4",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:58930074dffb08d66dfa32b05d765446d45e7a1defb0797137e8572519cbd890",
                    "size": 12234184
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:665253528d0edd388818c5d32391cb6156ffb1354d48f61058991feb23d70110",
                    "size": 209404084
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b422717a017df8c57965b89961f3c0541143958c404ec2d8036b6f13835267ae",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4c3ad0d39c79f4ed5a7a631380bf5a6b5b2231296028bea0f08e59d75b05d0c7",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3e8649948ec13f2486a140cf0c4b6a873a4d5bb6d9a135410d7a1cdfcf902616",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1f14d05b37ab6e1918f415f14baa9ff9e302fd5ba256f3cbe9c9dbad0ff4b93a",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5777707be83ccba3c7d029f630efc77b41efaefd9c2f1268bdc594364a1713dd",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:42cfa237d1733bf327244226f3a08da7476fe466496b7aa01c03943506db2efe",
                    "size": 1169030
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8c65f4ec4475348d795cc2433ac7ab930ba23ae0f34ff300bc3eb9acc88f2ba6",
                    "size": 467
                }
            ]
        },
        "jammy-build-20240105": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:810335cc406e71b072ac1190ee2a0d52861bcdf29f4c0ae99656e8870d34bce5",
                "size": 8773
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:005e2837585d0b391170fd9faf2e0c279d64ba0eb011cda8dedf28cb5839861e",
                    "size": 27358237
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:946fc3325c089f36e15017c49befb3c508137015fb88007c742ed19006e40f86",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c78eb8be1b639617ca48917473081a33f590bd03a4131b6ef121b529e44b3527",
                    "size": 12234149
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:580237ad53f9ef46eb52bf1f07af7fd07505dc5e3f8f2c23cb62d7101b5f1fa0",
                    "size": 209403863
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:297d2c507dcb389cc78636570ef737cfb471eedf17b35bc048e1622724e0bb81",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:de8cddbffdfd299912b83c1361f9aeb1fa4c8990240ad1e2b0ccbb22a92ca20c",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4af862feb4ab4ef3faf94e014730c3ae016b589fdb3affa91275416b9b37c151",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a08e4eb00bca2f83b9f5fd3886e5d1720517bd78372b0679da84af93f3f80a4f",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:512809eaf207f23d2700472eb5857ca0dae01799b2e5056ab0977e14b4e1330a",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e50d03541637f46865f86172bf5d25408a7d9e82f58af098225675bdb47d0505",
                    "size": 1169011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:542c67530863f0ef35094435ecd2689a1f1ed04f7fc18a8f31a04a1e21d5425b",
                    "size": 468
                }
            ]
        },
        "jammy-build-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:7a418086a7b21474b1752d0a337fddb842da70f7c937f2442f1ec79926f5a971",
                "size": 8757
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f4bb4e8dca02be491b4f72d2ef2127a64ce49c48d0d9c0a0fcaffa625067679d",
                    "size": 27358724
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d486b997b63cf5ab7b4f8f25bb359b18d64d252b2dba1ce466fea20ae5be5ffe",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:63c3c339ddc8f0eb4b7821231267543340656cf54809a1102ee8cf5dec19edc0",
                    "size": 12232984
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7e201aa4774daa79e0b7988b74a3a023cad6d0568bd9eba7d10de972ba95bb84",
                    "size": 209679621
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c4f665c58e06851286223d5df3d909cc2ba82c691de9ddd2e03194596d560619",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a2d905b17d1f94225fd87a16acf86a3c61b64f067d784bb30d37c21a56a80ba4",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2d043d1337f747594226839bf38665a3a8ff35537e021b2759356ebad99dee21",
                    "size": 275
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:643a5640e3f0402209f14047d7db46f681a3c6b5812afb7ce5643011c37496d3",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:33892d478ed86e565b9b774ea0b905bedeff281e83f60d8c9066857c73a4869a",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d9fae4f41a88f9224f3666209f357f69fbfb76f57bab173c98aee9e5ecfc2535",
                    "size": 1168285
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ca2d45911f5c0eba95004e7f724006e5c5b2f6e0e5e7f8c89d390fd374be1a22",
                    "size": 468
                }
            ]
        },
        "jammy-build-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:8831fb21eb8d7804b7c5eee34d1062abf0f3435becc2b280d556ea48ecc68ab4",
                "size": 8756
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f4bb4e8dca02be491b4f72d2ef2127a64ce49c48d0d9c0a0fcaffa625067679d",
                    "size": 27358724
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:922cc27cf100e7b8f82425bf84218e58f4c88a6c541ad76c0987c83146093d4f",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d9afc71124142ab0317bd2cff0036215507c648a0a621029ac350a9c9a6af328",
                    "size": 12232990
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:89b7e7eccf7af01181272bf8b9b0801d6bb5f772eb521b86af74d1d3be764819",
                    "size": 209697792
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bc582be6adcf434d82beb5fb94520b48470bf90270817b4d4e0a548054e048f3",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:554d0b3b6bb761d178bfc7d903817912a14c04519d25184298010ee81e06f27d",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8a424cb7a4f4fc4232cec0e2dc4ff5ac5e58db5529ff4f1313e85bb38b9f36a4",
                    "size": 275
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8bde0378c01a2e0bffc58824b60a39be15aae513de5d7521c1535ba95c6f971f",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8f7860879e77107f99347fdd64ecd5856a9a20978da014f5892d9d7f6ae01ec9",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:054cd3332a9ab25e59c1e1e70c60d7e0728fc27913275de313305a64321c8a07",
                    "size": 1168226
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2c4f6c6ba7576035b9a50d9dbe1ba07a2dc724227c9835e7e450aec7deac90dc",
                    "size": 469
                }
            ]
        },
        "jammy-build-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:99bc89a385a3a26700417f6edda73199f0b9d4ad08813b113b59c7494d7cdf98",
                "size": 8749
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5a2ad729c09fbfdb259ae764f92188efc67a615ffde9bb34a46298d1edf3cd6",
                    "size": 27360530
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ffcc4a9fde21d6c766d4614f1204ee212dc39473d283dc3238d8092ea0f1e537",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eeb8d5e311d2049c666f7e84e3932d1f1622e4c2a497c75ab7106b54be4832b4",
                    "size": 12233838
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:618bf1f3968aa3c0d2d9c99dba25f2906c8a7c988223a31e7575f316acc878bd",
                    "size": 209438089
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1c211d8397e4b621d909da22a5a5db94a403d073d6d17baaebfc85960f29d204",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:32e378487a9664364b9ba9e11696f7c609fb138faffd1fdfa1789a51de709177",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:54f1b7a79afc7306861badcb2a0a97de00a680a97285ef6b7aaee32d0415c78f",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:415366c9f05101573ec8ca723889c19948876ef160b7d6eef1c150938f8cd869",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:342ec12cab4c82acb1e51aa85f822d54d69550880da306ea735cfec955a24ecd",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cf6b61c21f40a1cd6f6d7d5237ac7536e67a628bf7b605740099423137fd5cee",
                    "size": 1168067
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c402a7c8db79e62b6560d5bf8e5e3f46d5e31c1b7df8cc6d7983a3213a2d86e3",
                    "size": 468
                }
            ]
        },
        "jammy-run": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:44a1f0fdb5a7101957b18291df431b0bbba36eb4dac029368abb70574473e832",
                "size": 7836
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5a2ad729c09fbfdb259ae764f92188efc67a615ffde9bb34a46298d1edf3cd6",
                    "size": 27360530
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:89399c74a38da68191a3f2228d93a279ac592fdb8b032f45d7635589eb1f3f27",
                    "size": 2592225
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5e71911d1843b73d9940a8cfbbafd038bb11df4f7c76f94ababb1e5eb59dde98",
                    "size": 12233707
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:07d81f195fae90668bd7bd2ed99c3cb5c2df14a61d86dd6ae63e24db88e9780e",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cbae211fb5e96faba2a036f002e70760fa5b0a46fe1f1337ba8a9a1b19f85f7f",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fb981c3534828254334770cd368c2465968ad2b1aad8faa10f0abfc5dd89d9b9",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e12833949768d9e8cb41ce80e65cf1b5dbbaabc3c20865913db17f4a944cfe30",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c27fa31ed6b63aa8d7f935c6c8ce2aa270dfdda6fb91aef896978f168b5197bc",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4bb506c9fe910252d41ba190a2406ab3bfc904e60a006721e81396d53d69395a",
                    "size": 12224181
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7bc7e75a54169630919ca0d4eb24815f28381a7f5525d260effa3b9b6fe441af",
                    "size": 469
                }
            ]
        },
        "jammy-run-20230829": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8503,
                "digest": "sha256:ffdac3504dfd94a8eb19258feda3098c768ed9084b785315328f7e409afd5b0d"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27351105,
                    "digest": "sha256:20274425734a05472f3772bae7ce7124a9832f5eb168456d6cb53e92d6e718a8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592232,
                    "digest": "sha256:559403e73a2bbbe7162790ab9a01b8821b245a167cf12febd64515b69bcc7ed4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12233453,
                    "digest": "sha256:6569082e05674e6a6d6cc5fe52df4e9c3deb80c8d5d410a4d72aa8d817565401"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473570,
                    "digest": "sha256:e73ef5703bf064811a78f54d90eb5641d5c97b9eb1b69d6f81f000acaedce9fb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1012,
                    "digest": "sha256:eb7aff4d75a007af2c9270dd6d93fa1b39e864ac39387faf1aa0b1f1451bf395"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 278,
                    "digest": "sha256:211af0a7a7edba81c694dfffed9fe48c8a6a5a2c3c8947cb9195070a86b37ad2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 679,
                    "digest": "sha256:edcb5a158d8fc9effb445cad897dcc7ed9d5fec602837b046818e02fe060bd89"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 464,
                    "digest": "sha256:7026cafb296c0c85d4460e3e95b5c881786f5790fd246dc05609a32b268d6799"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4353,
                    "digest": "sha256:b81e2439bdbed73367271521887f0ef12da86658103c7723b35f3f326acdfcce"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12224398,
                    "digest": "sha256:7a3aa46cd6f67b6f051dd1b921d4e42780fe69f7577d97a8c40a0803845b35a8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 468,
                    "digest": "sha256:600b3f8875c8cc140126ae794143cd325684d5b7d31952be116210604dcb2dae"
                }
            ]
        },
        "jammy-run-20230904": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8502,
                "digest": "sha256:46b6098e2806b33763e3bebbbece13575d55c511d8c444e7e391064622301841"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27351105,
                    "digest": "sha256:20274425734a05472f3772bae7ce7124a9832f5eb168456d6cb53e92d6e718a8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592233,
                    "digest": "sha256:ae6604f096cba3167cf802c2e3d5c3830f1f1b8390a942213ac4dcfdfea632e8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12233670,
                    "digest": "sha256:4b6e91f56148e91c5c3f09993b098eada2612ed836e6277c51636dbfeb37ca9b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473568,
                    "digest": "sha256:7b42ab3c40dc1b5d67d55828d1f26472e83d1c9c414d98175814b21e4a0b63c1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1014,
                    "digest": "sha256:7b527a3653c885d02412efd0580ca270845473e093fbc69099976cfd8c1baa65"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 278,
                    "digest": "sha256:d5c6c348a314616df2441a0ed19bbea283f14873cc4f20570862ca643d829be1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 680,
                    "digest": "sha256:402f85bc0e8d7b72d411d22bb4c13d09e8e970f6867e5c690e33dabcec804f82"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 465,
                    "digest": "sha256:d3e9368448a4effa5964fe1f8c74dab71aea3a9443693247448ec7c5234fe647"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4352,
                    "digest": "sha256:9f7ff0cb5103b62b8a3db8f0c00acad12868d9e070c3a3c384124e5323365906"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12224434,
                    "digest": "sha256:01ac6f7e4df93e1056bf15d57982d7708c90641d4458743da881ba428a27d7aa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 469,
                    "digest": "sha256:77727fa2c71bf8a49974d230eb96f1d8514ec6ad46936abea06de2659a473bc3"
                }
            ]
        },
        "jammy-run-20230911": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:97b9acf88fa0ac4871667652b5bf44497d78d3a42820d8777b7cbac0b9b5b960",
                "size": 7827
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:20274425734a05472f3772bae7ce7124a9832f5eb168456d6cb53e92d6e718a8",
                    "size": 27351105
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ae6604f096cba3167cf802c2e3d5c3830f1f1b8390a942213ac4dcfdfea632e8",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b6e91f56148e91c5c3f09993b098eada2612ed836e6277c51636dbfeb37ca9b",
                    "size": 12233670
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7b42ab3c40dc1b5d67d55828d1f26472e83d1c9c414d98175814b21e4a0b63c1",
                    "size": 473568
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7b527a3653c885d02412efd0580ca270845473e093fbc69099976cfd8c1baa65",
                    "size": 1014
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5c6c348a314616df2441a0ed19bbea283f14873cc4f20570862ca643d829be1",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:402f85bc0e8d7b72d411d22bb4c13d09e8e970f6867e5c690e33dabcec804f82",
                    "size": 680
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d3e9368448a4effa5964fe1f8c74dab71aea3a9443693247448ec7c5234fe647",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6e8a0c2405112feb737a2e4001427b61ce957c67da6b06dbda6b3255464247a1",
                    "size": 12221865
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e3750557176c40ce26609ef93a4430ba7d259884a09aaa8e95f56349d375d50f",
                    "size": 471
                }
            ]
        },
        "jammy-run-20231026": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:54cfec8d5eab040521420182ce3a1cee39b99bfb43ea932f379b799ef9b0dd73",
                "size": 7850
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bfbe77e41a78ee38147c5761aa8bc896d9f6e1e648b23468f294065ffe03c107",
                    "size": 27351048
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7d8e3a5ce2c7569141bab67dbad09ca35073e305cfe00382325fc63b448156f9",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:85b41a9a963de8053ce2b753e777313b55cc516d3a297e0663902f8179d60496",
                    "size": 12316184
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0945593605b189a6aef34e405731b4fdba340871249e0b759b6e6beaead3cb76",
                    "size": 473561
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e452cb5bd09d63c9f8f783a4f25643d1794b37199eb1f7ef9d4d3a5b29365e16",
                    "size": 1003
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:246f3a4d432fd9a259b0579f8c4d0bec180f2e5a73af63dab56fca45199fe4c7",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eec2960d0f7611d0a8f509226b0f256c11ee4289af338d0a3015013cb669563a",
                    "size": 671
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3042de505c0b156350c4aa451cc5da0be3620c026fe13fbd5da44b256dde96f1",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a7d0e900c5a8b9395b1d7456bef680196ed8266fd5c98dea90fd94bc8dac6b18",
                    "size": 12220896
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:505f9d5e55bcce922c1b14adf5338618cb32353a9da169164a34530e5498e2f8",
                    "size": 469
                }
            ]
        },
        "jammy-run-20231103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:50d36746518ee2ad05cc41950c170c390c9b46d1ef6a9d47ff6acab0ef85800d",
                "size": 7851
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bfbe77e41a78ee38147c5761aa8bc896d9f6e1e648b23468f294065ffe03c107",
                    "size": 27351048
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5a3af5ce777f2dd7ec2aaec6aa356e42e5a42f0d32a149e65a59b8729b1d7094",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7649e5ab76ccc98a5056f017191f42c54be18c3e003fcf3292698b328ea60cbc",
                    "size": 12316275
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a63d4a5e8479af96d464fd5787e27f0d48b463b6ae80efc19479cba025c3517",
                    "size": 473566
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0a429b17027c0d22d8906e581f5cb64f30bf0c2b8be2acd4973e2638a80226c1",
                    "size": 1005
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a5de09e3f4483dc0f854475347bb860f3cefdbf9b493bf3e12a23da46a7305a3",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bc89bb78903a175b6eaff7efb58a17e7a9690d7c7c608bc37bb86ba3b9379d52",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5ae094d17cf4cfda68a734a2d6f3164f17a5a38c65274ce0c74fc33daf45dacf",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:feab76570efd7fe591f40ddb48f944d73c8c493b584227d03d7a47bb4e6c45d0",
                    "size": 12220859
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fab6d2e621b9a66ad3ca0075a6fc7dc4abc08184ce3948dbe145fb0410e78565",
                    "size": 468
                }
            ]
        },
        "jammy-run-20240103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:366a6edb8f9d94a7ffc7e17d39951d7f703665b82745c2bfedd3ca570443b5dd",
                "size": 7849
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:005e2837585d0b391170fd9faf2e0c279d64ba0eb011cda8dedf28cb5839861e",
                    "size": 27358237
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9408f48a8910ea8dbacaab0bbba4ed1ddcbaa9fd0f39d1e832244a12aa84fe58",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7e06066982274a97e0cd7604312624913ba85de784880763df13ceed45bcb944",
                    "size": 12234166
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c0b1c1ca4c3b9caba461c91a6626d818414cfe5c697507e4c9184ddb72331ff9",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a53fcbd064252fb0e8a7ab29ccdf51f6bf40a09d144aa087e213c164dae25794",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eec2863e3cc73fcce4ec0a6a618e0d9efac1b68253c565e59b1f32dd4bb8af28",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fbbc495821203a386a2ce4861083dcfd8d59161671f36966b760e0f79f38f0c5",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:31c6fdc86cb96d13db495e65c21c4ccb25bfa6ce0e934c67cc270c3e19dfb221",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:82c6f8c047823652b579d0563f4496d543b39387ebd5ce87377bf732939f26f0",
                    "size": 12225952
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b4fcdfb8ffb08ca72e9c55b2772dcdfc94d08e2304deea02de8e65684338c55a",
                    "size": 467
                }
            ]
        },
        "jammy-run-20240105": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:1897b03d0a23c251ea2d4972ace5de526155072015d3e9a4563eb2daf5cb4167",
                "size": 7846
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:005e2837585d0b391170fd9faf2e0c279d64ba0eb011cda8dedf28cb5839861e",
                    "size": 27358237
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:946fc3325c089f36e15017c49befb3c508137015fb88007c742ed19006e40f86",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:100225a27beb4e67711e9cb9d48b451ad713a3150e654dfcb516b7597766030b",
                    "size": 12234166
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1939f20d12dbb914c8a5357384b364cc15c6e4ce3607823e1341fe28da073138",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bcf1bcafa383189abc3e0f283ce439dccc91e6b9f1592c306e38a520d645e801",
                    "size": 1005
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f96eeeec35dee0c7e24bab3f3e43312e1158a4e8fe6ba8b96c53fe185619cf4b",
                    "size": 271
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fac0bfa85c76994205d436d36203c1084b4945492f32bec33fa842d31a8a0ffa",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9cbd2eaea1c9b26427471a64959cc985ab10029f276e52bb7de9a25be24524a0",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1d4622ba6a3e56ac83c0b5a6bfa98f49df4694ead4c9e228c4da7020afdfad1f",
                    "size": 12225087
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d2e5d4caca6e6dc00742525f269f676394ca5fa34f214bf660d327dc48ed9720",
                    "size": 469
                }
            ]
        },
        "jammy-run-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:ce7cd5b95c7c46548a5861f3f03691ca2a31c1e6f9fa7f05fecda381f44c81d4",
                "size": 7837
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f4bb4e8dca02be491b4f72d2ef2127a64ce49c48d0d9c0a0fcaffa625067679d",
                    "size": 27358724
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8ff11e77b26351277ff2a0f7f57de0e2fb9d02b5be092feeb05f226ceb6ba3b7",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3c694bb7c6e354d784246b814440da89d55ab53bb249fe04f4ca407b6bef8755",
                    "size": 12232965
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:846ad103b86fcfbb538630714a0fb8bd9f0fff97f12cf86395da6bb2a73887ac",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:18090be9c466318b3ea02cc6448f4df9e47a0d3d52f1ace7e9a568e37a5048b1",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2eabd6f86977cadfa4a0b81a4549c3c23b73f9d2065c284982af5ffcdb77197b",
                    "size": 275
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:84ef6d70e52d2cfe921008e502281995e4d0c18efadabed15bb11057d14a955f",
                    "size": 676
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fedc60b46a8c9d3ecaa5ebc92bac8212b64e81d6d578cea5d3d18d7a49eb754e",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a4509e321f0f31cfa06836dfd026fd2fef1346ca86326996b72f5e908fa31008",
                    "size": 12225038
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:da4ea0e91794582a40c3581cab3b9edc560f453bd0ef58f85fb8b513db05d21f",
                    "size": 469
                }
            ]
        },
        "jammy-run-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:97b7697f705141dfb63207b766cdc9077c5e4537c54580b6fea6ce82af60958c",
                "size": 7837
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f4bb4e8dca02be491b4f72d2ef2127a64ce49c48d0d9c0a0fcaffa625067679d",
                    "size": 27358724
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:81057abc74d5de25182a92d640d3a1237f10256f98fe1e82d445b39778134a1d",
                    "size": 2592218
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:099b0f81922f80f716f12abbcf3bed657b817486040705b3c691b8cd09624fef",
                    "size": 12232968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b7650831ea69e17d63080487881b8fce883b0883307bf1daccd03dd4e4fa6371",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8941baf7a44298e644f522e0af80d3fcd1e34ed60e5c554e1341f9b36d9654d0",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cb329778bf8f72448034e258b232c88b697f8519b5d23f09211bcd858e073cd4",
                    "size": 276
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:71c1a139d3f8524a8ffdad442be7f314363fcb7c7af004c779bf830f9e95bd59",
                    "size": 676
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2233a8d3d5bfebeadb0df88dab38b780f332df712ae846bb8afda80ad41f22fd",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e661d13e715bb628df9bc6504230a0fd4ce3e1f2108f372a08279a940274e7ce",
                    "size": 12224423
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:39efea86dc1580c79c2cd8775841e9122062dd15fc67e54f3b4dfc34304d4060",
                    "size": 471
                }
            ]
        },
        "jammy-run-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:44a1f0fdb5a7101957b18291df431b0bbba36eb4dac029368abb70574473e832",
                "size": 7836
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5a2ad729c09fbfdb259ae764f92188efc67a615ffde9bb34a46298d1edf3cd6",
                    "size": 27360530
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:89399c74a38da68191a3f2228d93a279ac592fdb8b032f45d7635589eb1f3f27",
                    "size": 2592225
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5e71911d1843b73d9940a8cfbbafd038bb11df4f7c76f94ababb1e5eb59dde98",
                    "size": 12233707
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:07d81f195fae90668bd7bd2ed99c3cb5c2df14a61d86dd6ae63e24db88e9780e",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cbae211fb5e96faba2a036f002e70760fa5b0a46fe1f1337ba8a9a1b19f85f7f",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fb981c3534828254334770cd368c2465968ad2b1aad8faa10f0abfc5dd89d9b9",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e12833949768d9e8cb41ce80e65cf1b5dbbaabc3c20865913db17f4a944cfe30",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c27fa31ed6b63aa8d7f935c6c8ce2aa270dfdda6fb91aef896978f168b5197bc",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4bb506c9fe910252d41ba190a2406ab3bfc904e60a006721e81396d53d69395a",
                    "size": 12224181
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7bc7e75a54169630919ca0d4eb24815f28381a7f5525d260effa3b9b6fe441af",
                    "size": 469
                }
            ]
        },
        "latest": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:44a1f0fdb5a7101957b18291df431b0bbba36eb4dac029368abb70574473e832",
                "size": 7836
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5a2ad729c09fbfdb259ae764f92188efc67a615ffde9bb34a46298d1edf3cd6",
                    "size": 27360530
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:89399c74a38da68191a3f2228d93a279ac592fdb8b032f45d7635589eb1f3f27",
                    "size": 2592225
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5e71911d1843b73d9940a8cfbbafd038bb11df4f7c76f94ababb1e5eb59dde98",
                    "size": 12233707
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:07d81f195fae90668bd7bd2ed99c3cb5c2df14a61d86dd6ae63e24db88e9780e",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cbae211fb5e96faba2a036f002e70760fa5b0a46fe1f1337ba8a9a1b19f85f7f",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fb981c3534828254334770cd368c2465968ad2b1aad8faa10f0abfc5dd89d9b9",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e12833949768d9e8cb41ce80e65cf1b5dbbaabc3c20865913db17f4a944cfe30",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c27fa31ed6b63aa8d7f935c6c8ce2aa270dfdda6fb91aef896978f168b5197bc",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4bb506c9fe910252d41ba190a2406ab3bfc904e60a006721e81396d53d69395a",
                    "size": 12224181
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7bc7e75a54169630919ca0d4eb24815f28381a7f5525d260effa3b9b6fe441af",
                    "size": 469
                }
            ]
        },
        "latest-20230829": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8503,
                "digest": "sha256:ffdac3504dfd94a8eb19258feda3098c768ed9084b785315328f7e409afd5b0d"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27351105,
                    "digest": "sha256:20274425734a05472f3772bae7ce7124a9832f5eb168456d6cb53e92d6e718a8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592232,
                    "digest": "sha256:559403e73a2bbbe7162790ab9a01b8821b245a167cf12febd64515b69bcc7ed4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12233453,
                    "digest": "sha256:6569082e05674e6a6d6cc5fe52df4e9c3deb80c8d5d410a4d72aa8d817565401"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473570,
                    "digest": "sha256:e73ef5703bf064811a78f54d90eb5641d5c97b9eb1b69d6f81f000acaedce9fb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1012,
                    "digest": "sha256:eb7aff4d75a007af2c9270dd6d93fa1b39e864ac39387faf1aa0b1f1451bf395"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 278,
                    "digest": "sha256:211af0a7a7edba81c694dfffed9fe48c8a6a5a2c3c8947cb9195070a86b37ad2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 679,
                    "digest": "sha256:edcb5a158d8fc9effb445cad897dcc7ed9d5fec602837b046818e02fe060bd89"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 464,
                    "digest": "sha256:7026cafb296c0c85d4460e3e95b5c881786f5790fd246dc05609a32b268d6799"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4353,
                    "digest": "sha256:b81e2439bdbed73367271521887f0ef12da86658103c7723b35f3f326acdfcce"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12224398,
                    "digest": "sha256:7a3aa46cd6f67b6f051dd1b921d4e42780fe69f7577d97a8c40a0803845b35a8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 468,
                    "digest": "sha256:600b3f8875c8cc140126ae794143cd325684d5b7d31952be116210604dcb2dae"
                }
            ]
        },
        "latest-20230904": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8502,
                "digest": "sha256:46b6098e2806b33763e3bebbbece13575d55c511d8c444e7e391064622301841"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27351105,
                    "digest": "sha256:20274425734a05472f3772bae7ce7124a9832f5eb168456d6cb53e92d6e718a8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592233,
                    "digest": "sha256:ae6604f096cba3167cf802c2e3d5c3830f1f1b8390a942213ac4dcfdfea632e8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12233670,
                    "digest": "sha256:4b6e91f56148e91c5c3f09993b098eada2612ed836e6277c51636dbfeb37ca9b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473568,
                    "digest": "sha256:7b42ab3c40dc1b5d67d55828d1f26472e83d1c9c414d98175814b21e4a0b63c1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1014,
                    "digest": "sha256:7b527a3653c885d02412efd0580ca270845473e093fbc69099976cfd8c1baa65"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 278,
                    "digest": "sha256:d5c6c348a314616df2441a0ed19bbea283f14873cc4f20570862ca643d829be1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 680,
                    "digest": "sha256:402f85bc0e8d7b72d411d22bb4c13d09e8e970f6867e5c690e33dabcec804f82"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 465,
                    "digest": "sha256:d3e9368448a4effa5964fe1f8c74dab71aea3a9443693247448ec7c5234fe647"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4352,
                    "digest": "sha256:9f7ff0cb5103b62b8a3db8f0c00acad12868d9e070c3a3c384124e5323365906"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12224434,
                    "digest": "sha256:01ac6f7e4df93e1056bf15d57982d7708c90641d4458743da881ba428a27d7aa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 469,
                    "digest": "sha256:77727fa2c71bf8a49974d230eb96f1d8514ec6ad46936abea06de2659a473bc3"
                }
            ]
        },
        "latest-20230911": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:97b9acf88fa0ac4871667652b5bf44497d78d3a42820d8777b7cbac0b9b5b960",
                "size": 7827
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:20274425734a05472f3772bae7ce7124a9832f5eb168456d6cb53e92d6e718a8",
                    "size": 27351105
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ae6604f096cba3167cf802c2e3d5c3830f1f1b8390a942213ac4dcfdfea632e8",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b6e91f56148e91c5c3f09993b098eada2612ed836e6277c51636dbfeb37ca9b",
                    "size": 12233670
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7b42ab3c40dc1b5d67d55828d1f26472e83d1c9c414d98175814b21e4a0b63c1",
                    "size": 473568
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7b527a3653c885d02412efd0580ca270845473e093fbc69099976cfd8c1baa65",
                    "size": 1014
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5c6c348a314616df2441a0ed19bbea283f14873cc4f20570862ca643d829be1",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:402f85bc0e8d7b72d411d22bb4c13d09e8e970f6867e5c690e33dabcec804f82",
                    "size": 680
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d3e9368448a4effa5964fe1f8c74dab71aea3a9443693247448ec7c5234fe647",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6e8a0c2405112feb737a2e4001427b61ce957c67da6b06dbda6b3255464247a1",
                    "size": 12221865
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e3750557176c40ce26609ef93a4430ba7d259884a09aaa8e95f56349d375d50f",
                    "size": 471
                }
            ]
        },
        "latest-20231026": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:54cfec8d5eab040521420182ce3a1cee39b99bfb43ea932f379b799ef9b0dd73",
                "size": 7850
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bfbe77e41a78ee38147c5761aa8bc896d9f6e1e648b23468f294065ffe03c107",
                    "size": 27351048
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7d8e3a5ce2c7569141bab67dbad09ca35073e305cfe00382325fc63b448156f9",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:85b41a9a963de8053ce2b753e777313b55cc516d3a297e0663902f8179d60496",
                    "size": 12316184
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0945593605b189a6aef34e405731b4fdba340871249e0b759b6e6beaead3cb76",
                    "size": 473561
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e452cb5bd09d63c9f8f783a4f25643d1794b37199eb1f7ef9d4d3a5b29365e16",
                    "size": 1003
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:246f3a4d432fd9a259b0579f8c4d0bec180f2e5a73af63dab56fca45199fe4c7",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eec2960d0f7611d0a8f509226b0f256c11ee4289af338d0a3015013cb669563a",
                    "size": 671
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3042de505c0b156350c4aa451cc5da0be3620c026fe13fbd5da44b256dde96f1",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a7d0e900c5a8b9395b1d7456bef680196ed8266fd5c98dea90fd94bc8dac6b18",
                    "size": 12220896
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:505f9d5e55bcce922c1b14adf5338618cb32353a9da169164a34530e5498e2f8",
                    "size": 469
                }
            ]
        },
        "latest-20231103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:50d36746518ee2ad05cc41950c170c390c9b46d1ef6a9d47ff6acab0ef85800d",
                "size": 7851
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bfbe77e41a78ee38147c5761aa8bc896d9f6e1e648b23468f294065ffe03c107",
                    "size": 27351048
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5a3af5ce777f2dd7ec2aaec6aa356e42e5a42f0d32a149e65a59b8729b1d7094",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7649e5ab76ccc98a5056f017191f42c54be18c3e003fcf3292698b328ea60cbc",
                    "size": 12316275
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a63d4a5e8479af96d464fd5787e27f0d48b463b6ae80efc19479cba025c3517",
                    "size": 473566
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0a429b17027c0d22d8906e581f5cb64f30bf0c2b8be2acd4973e2638a80226c1",
                    "size": 1005
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a5de09e3f4483dc0f854475347bb860f3cefdbf9b493bf3e12a23da46a7305a3",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bc89bb78903a175b6eaff7efb58a17e7a9690d7c7c608bc37bb86ba3b9379d52",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5ae094d17cf4cfda68a734a2d6f3164f17a5a38c65274ce0c74fc33daf45dacf",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:feab76570efd7fe591f40ddb48f944d73c8c493b584227d03d7a47bb4e6c45d0",
                    "size": 12220859
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fab6d2e621b9a66ad3ca0075a6fc7dc4abc08184ce3948dbe145fb0410e78565",
                    "size": 468
                }
            ]
        },
        "latest-20240103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:366a6edb8f9d94a7ffc7e17d39951d7f703665b82745c2bfedd3ca570443b5dd",
                "size": 7849
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:005e2837585d0b391170fd9faf2e0c279d64ba0eb011cda8dedf28cb5839861e",
                    "size": 27358237
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9408f48a8910ea8dbacaab0bbba4ed1ddcbaa9fd0f39d1e832244a12aa84fe58",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7e06066982274a97e0cd7604312624913ba85de784880763df13ceed45bcb944",
                    "size": 12234166
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c0b1c1ca4c3b9caba461c91a6626d818414cfe5c697507e4c9184ddb72331ff9",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a53fcbd064252fb0e8a7ab29ccdf51f6bf40a09d144aa087e213c164dae25794",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eec2863e3cc73fcce4ec0a6a618e0d9efac1b68253c565e59b1f32dd4bb8af28",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fbbc495821203a386a2ce4861083dcfd8d59161671f36966b760e0f79f38f0c5",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:31c6fdc86cb96d13db495e65c21c4ccb25bfa6ce0e934c67cc270c3e19dfb221",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:82c6f8c047823652b579d0563f4496d543b39387ebd5ce87377bf732939f26f0",
                    "size": 12225952
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b4fcdfb8ffb08ca72e9c55b2772dcdfc94d08e2304deea02de8e65684338c55a",
                    "size": 467
                }
            ]
        },
        "latest-20240105": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:1897b03d0a23c251ea2d4972ace5de526155072015d3e9a4563eb2daf5cb4167",
                "size": 7846
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:005e2837585d0b391170fd9faf2e0c279d64ba0eb011cda8dedf28cb5839861e",
                    "size": 27358237
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:946fc3325c089f36e15017c49befb3c508137015fb88007c742ed19006e40f86",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:100225a27beb4e67711e9cb9d48b451ad713a3150e654dfcb516b7597766030b",
                    "size": 12234166
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1939f20d12dbb914c8a5357384b364cc15c6e4ce3607823e1341fe28da073138",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bcf1bcafa383189abc3e0f283ce439dccc91e6b9f1592c306e38a520d645e801",
                    "size": 1005
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f96eeeec35dee0c7e24bab3f3e43312e1158a4e8fe6ba8b96c53fe185619cf4b",
                    "size": 271
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fac0bfa85c76994205d436d36203c1084b4945492f32bec33fa842d31a8a0ffa",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9cbd2eaea1c9b26427471a64959cc985ab10029f276e52bb7de9a25be24524a0",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1d4622ba6a3e56ac83c0b5a6bfa98f49df4694ead4c9e228c4da7020afdfad1f",
                    "size": 12225087
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d2e5d4caca6e6dc00742525f269f676394ca5fa34f214bf660d327dc48ed9720",
                    "size": 469
                }
            ]
        },
        "latest-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:ce7cd5b95c7c46548a5861f3f03691ca2a31c1e6f9fa7f05fecda381f44c81d4",
                "size": 7837
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f4bb4e8dca02be491b4f72d2ef2127a64ce49c48d0d9c0a0fcaffa625067679d",
                    "size": 27358724
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8ff11e77b26351277ff2a0f7f57de0e2fb9d02b5be092feeb05f226ceb6ba3b7",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3c694bb7c6e354d784246b814440da89d55ab53bb249fe04f4ca407b6bef8755",
                    "size": 12232965
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:846ad103b86fcfbb538630714a0fb8bd9f0fff97f12cf86395da6bb2a73887ac",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:18090be9c466318b3ea02cc6448f4df9e47a0d3d52f1ace7e9a568e37a5048b1",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2eabd6f86977cadfa4a0b81a4549c3c23b73f9d2065c284982af5ffcdb77197b",
                    "size": 275
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:84ef6d70e52d2cfe921008e502281995e4d0c18efadabed15bb11057d14a955f",
                    "size": 676
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fedc60b46a8c9d3ecaa5ebc92bac8212b64e81d6d578cea5d3d18d7a49eb754e",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a4509e321f0f31cfa06836dfd026fd2fef1346ca86326996b72f5e908fa31008",
                    "size": 12225038
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:da4ea0e91794582a40c3581cab3b9edc560f453bd0ef58f85fb8b513db05d21f",
                    "size": 469
                }
            ]
        },
        "latest-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:97b7697f705141dfb63207b766cdc9077c5e4537c54580b6fea6ce82af60958c",
                "size": 7837
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f4bb4e8dca02be491b4f72d2ef2127a64ce49c48d0d9c0a0fcaffa625067679d",
                    "size": 27358724
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:81057abc74d5de25182a92d640d3a1237f10256f98fe1e82d445b39778134a1d",
                    "size": 2592218
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:099b0f81922f80f716f12abbcf3bed657b817486040705b3c691b8cd09624fef",
                    "size": 12232968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b7650831ea69e17d63080487881b8fce883b0883307bf1daccd03dd4e4fa6371",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8941baf7a44298e644f522e0af80d3fcd1e34ed60e5c554e1341f9b36d9654d0",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cb329778bf8f72448034e258b232c88b697f8519b5d23f09211bcd858e073cd4",
                    "size": 276
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:71c1a139d3f8524a8ffdad442be7f314363fcb7c7af004c779bf830f9e95bd59",
                    "size": 676
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2233a8d3d5bfebeadb0df88dab38b780f332df712ae846bb8afda80ad41f22fd",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e661d13e715bb628df9bc6504230a0fd4ce3e1f2108f372a08279a940274e7ce",
                    "size": 12224423
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:39efea86dc1580c79c2cd8775841e9122062dd15fc67e54f3b4dfc34304d4060",
                    "size": 471
                }
            ]
        },
        "latest-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:44a1f0fdb5a7101957b18291df431b0bbba36eb4dac029368abb70574473e832",
                "size": 7836
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5a2ad729c09fbfdb259ae764f92188efc67a615ffde9bb34a46298d1edf3cd6",
                    "size": 27360530
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:89399c74a38da68191a3f2228d93a279ac592fdb8b032f45d7635589eb1f3f27",
                    "size": 2592225
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5e71911d1843b73d9940a8cfbbafd038bb11df4f7c76f94ababb1e5eb59dde98",
                    "size": 12233707
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:07d81f195fae90668bd7bd2ed99c3cb5c2df14a61d86dd6ae63e24db88e9780e",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cbae211fb5e96faba2a036f002e70760fa5b0a46fe1f1337ba8a9a1b19f85f7f",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fb981c3534828254334770cd368c2465968ad2b1aad8faa10f0abfc5dd89d9b9",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e12833949768d9e8cb41ce80e65cf1b5dbbaabc3c20865913db17f4a944cfe30",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c27fa31ed6b63aa8d7f935c6c8ce2aa270dfdda6fb91aef896978f168b5197bc",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4bb506c9fe910252d41ba190a2406ab3bfc904e60a006721e81396d53d69395a",
                    "size": 12224181
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7bc7e75a54169630919ca0d4eb24815f28381a7f5525d260effa3b9b6fe441af",
                    "size": 469
                }
            ]
        },
        "latest-build": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:99bc89a385a3a26700417f6edda73199f0b9d4ad08813b113b59c7494d7cdf98",
                "size": 8749
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5a2ad729c09fbfdb259ae764f92188efc67a615ffde9bb34a46298d1edf3cd6",
                    "size": 27360530
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ffcc4a9fde21d6c766d4614f1204ee212dc39473d283dc3238d8092ea0f1e537",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eeb8d5e311d2049c666f7e84e3932d1f1622e4c2a497c75ab7106b54be4832b4",
                    "size": 12233838
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:618bf1f3968aa3c0d2d9c99dba25f2906c8a7c988223a31e7575f316acc878bd",
                    "size": 209438089
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1c211d8397e4b621d909da22a5a5db94a403d073d6d17baaebfc85960f29d204",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:32e378487a9664364b9ba9e11696f7c609fb138faffd1fdfa1789a51de709177",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:54f1b7a79afc7306861badcb2a0a97de00a680a97285ef6b7aaee32d0415c78f",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:415366c9f05101573ec8ca723889c19948876ef160b7d6eef1c150938f8cd869",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:342ec12cab4c82acb1e51aa85f822d54d69550880da306ea735cfec955a24ecd",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cf6b61c21f40a1cd6f6d7d5237ac7536e67a628bf7b605740099423137fd5cee",
                    "size": 1168067
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c402a7c8db79e62b6560d5bf8e5e3f46d5e31c1b7df8cc6d7983a3213a2d86e3",
                    "size": 468
                }
            ]
        },
        "latest-build-20230829": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9427,
                "digest": "sha256:b00bd8110eb0456405ee78e03c528bf924c59f280b53bcd2515af3dcb952abc0"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27351105,
                    "digest": "sha256:20274425734a05472f3772bae7ce7124a9832f5eb168456d6cb53e92d6e718a8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592232,
                    "digest": "sha256:559403e73a2bbbe7162790ab9a01b8821b245a167cf12febd64515b69bcc7ed4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12233453,
                    "digest": "sha256:6569082e05674e6a6d6cc5fe52df4e9c3deb80c8d5d410a4d72aa8d817565401"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 209392921,
                    "digest": "sha256:10ccd6e6e6b9946104eb0b8aba8dcd4a3dff321c151abac13433aff1e6428f92"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473570,
                    "digest": "sha256:651140d45e4d61dabab3134a40d7c1c1e4eaf3d9af240d133ced9ea1e3cc9298"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1015,
                    "digest": "sha256:4dcd738299fdc52ec868b03d76fa91372f4a0a4c2805faa22f7a7e05dda7aabe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 279,
                    "digest": "sha256:bbb6e071f1ce2d01dcc837c65736bcb100ee7c9e89aa513eb9c81663d9771320"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 680,
                    "digest": "sha256:eaf3b9bf654c8e61d0ae7cd21b221dc82e69319a1387164d3961abfcf5ed5dc0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 462,
                    "digest": "sha256:d4be53b9be303694eaf8687c3d9a88ea6bc7cebd9de108dabdeb7de18fef6216"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4352,
                    "digest": "sha256:fa943d7f36bb54cd65821a7640f4a8d3aafbcf467807ff3fc8a186287138973c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1169802,
                    "digest": "sha256:db98773ad01b3d8e07b21339dfd69cdb71c773fa27a1ba79181867df38ddc3ad"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 468,
                    "digest": "sha256:0b9dd62c54f059356aa94aad174ce6123a444b07ca4aa2baf025f73ca7ac4e7a"
                }
            ]
        },
        "latest-build-20230904": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9416,
                "digest": "sha256:3df52c77831b490a38c3ac46297ad4c6df334363280465282a3590fddf800bfc"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27351105,
                    "digest": "sha256:20274425734a05472f3772bae7ce7124a9832f5eb168456d6cb53e92d6e718a8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592233,
                    "digest": "sha256:ae6604f096cba3167cf802c2e3d5c3830f1f1b8390a942213ac4dcfdfea632e8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12233670,
                    "digest": "sha256:4b6e91f56148e91c5c3f09993b098eada2612ed836e6277c51636dbfeb37ca9b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 209404460,
                    "digest": "sha256:829e68b52046c801853ed63b26834b3b59c3c1e27a4d1bc78b5ad38d86ee8c9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473568,
                    "digest": "sha256:4ab797161b47112bb753b983ed970e1976db36cd3f47d91d3f422db5a18d615b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1013,
                    "digest": "sha256:09cab4d2377eb385d7b48510de6c9ee4e50b07ff797e23b09e32daa7dc6a2f62"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 278,
                    "digest": "sha256:b534cb7ade1cb4b93e518242c98e01091c63bf7fd1059e9eafd80ed9c27118f9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 679,
                    "digest": "sha256:f8a00ddbfdc0f0197674d29024223766d13fdc4325827bf917426c00367a212b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 461,
                    "digest": "sha256:c285b30fbd904d73633972f5c2ce65b869683b4d1781644268cb95376d8cc064"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4356,
                    "digest": "sha256:538028453b5c71197d5e134d16d99f449ec78a70e087506eef46e0e3a0f03cc7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1169854,
                    "digest": "sha256:ba3ac31a3a215f6c25b0391c4b8b6b0d9bd33c64a8744871113d00ae6a2bcadd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 468,
                    "digest": "sha256:40633e851999bc560ccd7cbcdaee9a7edc13716b170d08b06d6f025b2d7350e5"
                }
            ]
        },
        "latest-build-20230911": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:2416a7b54cb2cc22bccd296511d515a023a51eee759ee2bdd638e4e861a3a25a",
                "size": 8749
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:20274425734a05472f3772bae7ce7124a9832f5eb168456d6cb53e92d6e718a8",
                    "size": 27351105
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ae6604f096cba3167cf802c2e3d5c3830f1f1b8390a942213ac4dcfdfea632e8",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b6e91f56148e91c5c3f09993b098eada2612ed836e6277c51636dbfeb37ca9b",
                    "size": 12233670
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:829e68b52046c801853ed63b26834b3b59c3c1e27a4d1bc78b5ad38d86ee8c9d",
                    "size": 209404460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4ab797161b47112bb753b983ed970e1976db36cd3f47d91d3f422db5a18d615b",
                    "size": 473568
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:09cab4d2377eb385d7b48510de6c9ee4e50b07ff797e23b09e32daa7dc6a2f62",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b534cb7ade1cb4b93e518242c98e01091c63bf7fd1059e9eafd80ed9c27118f9",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f8a00ddbfdc0f0197674d29024223766d13fdc4325827bf917426c00367a212b",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c285b30fbd904d73633972f5c2ce65b869683b4d1781644268cb95376d8cc064",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:20135fc0d35b23557decdb4642bb6135d644ad9b45b6d1c1a3715b5b89ee55a6",
                    "size": 1169801
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:af9c0fc6e7f8db0b864b97a3a4711b6f2eca8c298ae9d495caa2810711e96b79",
                    "size": 469
                }
            ]
        },
        "latest-build-20231026": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:7e69cddd836c8ca200278365b7ea46dffe425ac2b835ca0eb7095a86978ed39d",
                "size": 8773
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bfbe77e41a78ee38147c5761aa8bc896d9f6e1e648b23468f294065ffe03c107",
                    "size": 27351048
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:983849fdd0d32db99ba92313e6459f27b5e87245502736464071eed20c189cf3",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ba7cf299b555ec48dac88dfef8a4a93b1f0c2f4311ef904a8aec8688830a0031",
                    "size": 12316512
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:df596b7ca387834cb8e196bc1bd422b40dc0ce59171d4580f66e8ea1acc90ae0",
                    "size": 211524802
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:62183ef724fe461b0b7c8dde45a2b19a096a8dbae78468e0309e92d499ec5f2e",
                    "size": 473565
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bf9c3b7406a77f9357642a2a9f996fd12e9fd754d7a8118afed9be2031822e2b",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:309012611a8f14930781977092d4f8b7f138faf7d099c284f3d5d5142a2a98b2",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:27a97117875eaecc663cb5630ce233fb0e6f9058dc69b69de9134a49558d0823",
                    "size": 671
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:358770c2fb7a303bd34b9814c06894f6999892984d97d83c577ee9a5d1b4b5ac",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:18e8050a19b004b6f646c1602f1228787191a27704e01c776efb5f39f13d1ce5",
                    "size": 1169087
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c998da0551d88b4179bc6a5f9a1db1448c92b0aa5a9ba6278274219b5a86010d",
                    "size": 469
                }
            ]
        },
        "latest-build-20231103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:b7c61bf2acd1d31043457fac02a82a13bae45932d96b123d9e0a4227c9e70374",
                "size": 8772
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bfbe77e41a78ee38147c5761aa8bc896d9f6e1e648b23468f294065ffe03c107",
                    "size": 27351048
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:60f0904a2184826d9f5378b89e94f1177de536073ed282aea0ce2397eea4b395",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:953a40b0fd784a6ef3c950bf1eacd6d17e38b1992941012f9bee1a5a01298738",
                    "size": 12316466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0d90dccbcda573719aabf8fef2ba92fa78bcd0222a1b8b338cf88e0cfd2a12ff",
                    "size": 211523518
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d193d37aa3e76ae6862490576e729cf64b34e3542722f1b09ebb21722233f2bb",
                    "size": 473565
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:296a47dde0f9f91fd3cfddb7a2523fb7358c7fae586fa11a9c6273e8b6d50607",
                    "size": 1005
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bfb89f38eed8d15d5668a142670e8bbbaedbe24cb7e77c59f173aaeb1317094d",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:173c145f898ecf995a1bf900c629fc8bc288630971ae0b16dedac06a1d547bf7",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8b2c82e627f8c6b70aeb154ace7dfc262ac06d7d02df7e5e05e33147b510f2b2",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eeeee8e567d1516f95b304a274de434e574a11955514031345168b152a32e9d7",
                    "size": 1169008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:931c70e2f742c85c6ff32048e107ee3b06ee1500177fec23e1020682f7db2585",
                    "size": 468
                }
            ]
        },
        "latest-build-20240103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:77d8e7a4e46d804d13271f4f71b97f297d9914e9122663b567b0800bda4ed8a5",
                "size": 8765
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:005e2837585d0b391170fd9faf2e0c279d64ba0eb011cda8dedf28cb5839861e",
                    "size": 27358237
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ba341ec610b866d122f16208fbcaab1e0ddbe177fc7b0f15f02d1ebc4fc153f4",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:58930074dffb08d66dfa32b05d765446d45e7a1defb0797137e8572519cbd890",
                    "size": 12234184
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:665253528d0edd388818c5d32391cb6156ffb1354d48f61058991feb23d70110",
                    "size": 209404084
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b422717a017df8c57965b89961f3c0541143958c404ec2d8036b6f13835267ae",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4c3ad0d39c79f4ed5a7a631380bf5a6b5b2231296028bea0f08e59d75b05d0c7",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3e8649948ec13f2486a140cf0c4b6a873a4d5bb6d9a135410d7a1cdfcf902616",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1f14d05b37ab6e1918f415f14baa9ff9e302fd5ba256f3cbe9c9dbad0ff4b93a",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5777707be83ccba3c7d029f630efc77b41efaefd9c2f1268bdc594364a1713dd",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:42cfa237d1733bf327244226f3a08da7476fe466496b7aa01c03943506db2efe",
                    "size": 1169030
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8c65f4ec4475348d795cc2433ac7ab930ba23ae0f34ff300bc3eb9acc88f2ba6",
                    "size": 467
                }
            ]
        },
        "latest-build-20240105": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:810335cc406e71b072ac1190ee2a0d52861bcdf29f4c0ae99656e8870d34bce5",
                "size": 8773
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:005e2837585d0b391170fd9faf2e0c279d64ba0eb011cda8dedf28cb5839861e",
                    "size": 27358237
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:946fc3325c089f36e15017c49befb3c508137015fb88007c742ed19006e40f86",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c78eb8be1b639617ca48917473081a33f590bd03a4131b6ef121b529e44b3527",
                    "size": 12234149
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:580237ad53f9ef46eb52bf1f07af7fd07505dc5e3f8f2c23cb62d7101b5f1fa0",
                    "size": 209403863
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:297d2c507dcb389cc78636570ef737cfb471eedf17b35bc048e1622724e0bb81",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:de8cddbffdfd299912b83c1361f9aeb1fa4c8990240ad1e2b0ccbb22a92ca20c",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4af862feb4ab4ef3faf94e014730c3ae016b589fdb3affa91275416b9b37c151",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a08e4eb00bca2f83b9f5fd3886e5d1720517bd78372b0679da84af93f3f80a4f",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:512809eaf207f23d2700472eb5857ca0dae01799b2e5056ab0977e14b4e1330a",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e50d03541637f46865f86172bf5d25408a7d9e82f58af098225675bdb47d0505",
                    "size": 1169011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:542c67530863f0ef35094435ecd2689a1f1ed04f7fc18a8f31a04a1e21d5425b",
                    "size": 468
                }
            ]
        },
        "latest-build-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:7a418086a7b21474b1752d0a337fddb842da70f7c937f2442f1ec79926f5a971",
                "size": 8757
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f4bb4e8dca02be491b4f72d2ef2127a64ce49c48d0d9c0a0fcaffa625067679d",
                    "size": 27358724
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d486b997b63cf5ab7b4f8f25bb359b18d64d252b2dba1ce466fea20ae5be5ffe",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:63c3c339ddc8f0eb4b7821231267543340656cf54809a1102ee8cf5dec19edc0",
                    "size": 12232984
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7e201aa4774daa79e0b7988b74a3a023cad6d0568bd9eba7d10de972ba95bb84",
                    "size": 209679621
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c4f665c58e06851286223d5df3d909cc2ba82c691de9ddd2e03194596d560619",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a2d905b17d1f94225fd87a16acf86a3c61b64f067d784bb30d37c21a56a80ba4",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2d043d1337f747594226839bf38665a3a8ff35537e021b2759356ebad99dee21",
                    "size": 275
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:643a5640e3f0402209f14047d7db46f681a3c6b5812afb7ce5643011c37496d3",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:33892d478ed86e565b9b774ea0b905bedeff281e83f60d8c9066857c73a4869a",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d9fae4f41a88f9224f3666209f357f69fbfb76f57bab173c98aee9e5ecfc2535",
                    "size": 1168285
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ca2d45911f5c0eba95004e7f724006e5c5b2f6e0e5e7f8c89d390fd374be1a22",
                    "size": 468
                }
            ]
        },
        "latest-build-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:8831fb21eb8d7804b7c5eee34d1062abf0f3435becc2b280d556ea48ecc68ab4",
                "size": 8756
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f4bb4e8dca02be491b4f72d2ef2127a64ce49c48d0d9c0a0fcaffa625067679d",
                    "size": 27358724
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:922cc27cf100e7b8f82425bf84218e58f4c88a6c541ad76c0987c83146093d4f",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d9afc71124142ab0317bd2cff0036215507c648a0a621029ac350a9c9a6af328",
                    "size": 12232990
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:89b7e7eccf7af01181272bf8b9b0801d6bb5f772eb521b86af74d1d3be764819",
                    "size": 209697792
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bc582be6adcf434d82beb5fb94520b48470bf90270817b4d4e0a548054e048f3",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:554d0b3b6bb761d178bfc7d903817912a14c04519d25184298010ee81e06f27d",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8a424cb7a4f4fc4232cec0e2dc4ff5ac5e58db5529ff4f1313e85bb38b9f36a4",
                    "size": 275
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8bde0378c01a2e0bffc58824b60a39be15aae513de5d7521c1535ba95c6f971f",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8f7860879e77107f99347fdd64ecd5856a9a20978da014f5892d9d7f6ae01ec9",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:054cd3332a9ab25e59c1e1e70c60d7e0728fc27913275de313305a64321c8a07",
                    "size": 1168226
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2c4f6c6ba7576035b9a50d9dbe1ba07a2dc724227c9835e7e450aec7deac90dc",
                    "size": 469
                }
            ]
        },
        "latest-build-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:99bc89a385a3a26700417f6edda73199f0b9d4ad08813b113b59c7494d7cdf98",
                "size": 8749
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5a2ad729c09fbfdb259ae764f92188efc67a615ffde9bb34a46298d1edf3cd6",
                    "size": 27360530
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ffcc4a9fde21d6c766d4614f1204ee212dc39473d283dc3238d8092ea0f1e537",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eeb8d5e311d2049c666f7e84e3932d1f1622e4c2a497c75ab7106b54be4832b4",
                    "size": 12233838
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:618bf1f3968aa3c0d2d9c99dba25f2906c8a7c988223a31e7575f316acc878bd",
                    "size": 209438089
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1c211d8397e4b621d909da22a5a5db94a403d073d6d17baaebfc85960f29d204",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:32e378487a9664364b9ba9e11696f7c609fb138faffd1fdfa1789a51de709177",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:54f1b7a79afc7306861badcb2a0a97de00a680a97285ef6b7aaee32d0415c78f",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:415366c9f05101573ec8ca723889c19948876ef160b7d6eef1c150938f8cd869",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:342ec12cab4c82acb1e51aa85f822d54d69550880da306ea735cfec955a24ecd",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cf6b61c21f40a1cd6f6d7d5237ac7536e67a628bf7b605740099423137fd5cee",
                    "size": 1168067
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c402a7c8db79e62b6560d5bf8e5e3f46d5e31c1b7df8cc6d7983a3213a2d86e3",
                    "size": 468
                }
            ]
        },
        "latest-run": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:44a1f0fdb5a7101957b18291df431b0bbba36eb4dac029368abb70574473e832",
                "size": 7836
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5a2ad729c09fbfdb259ae764f92188efc67a615ffde9bb34a46298d1edf3cd6",
                    "size": 27360530
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:89399c74a38da68191a3f2228d93a279ac592fdb8b032f45d7635589eb1f3f27",
                    "size": 2592225
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5e71911d1843b73d9940a8cfbbafd038bb11df4f7c76f94ababb1e5eb59dde98",
                    "size": 12233707
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:07d81f195fae90668bd7bd2ed99c3cb5c2df14a61d86dd6ae63e24db88e9780e",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cbae211fb5e96faba2a036f002e70760fa5b0a46fe1f1337ba8a9a1b19f85f7f",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fb981c3534828254334770cd368c2465968ad2b1aad8faa10f0abfc5dd89d9b9",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e12833949768d9e8cb41ce80e65cf1b5dbbaabc3c20865913db17f4a944cfe30",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c27fa31ed6b63aa8d7f935c6c8ce2aa270dfdda6fb91aef896978f168b5197bc",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4bb506c9fe910252d41ba190a2406ab3bfc904e60a006721e81396d53d69395a",
                    "size": 12224181
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7bc7e75a54169630919ca0d4eb24815f28381a7f5525d260effa3b9b6fe441af",
                    "size": 469
                }
            ]
        },
        "latest-run-20230829": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8503,
                "digest": "sha256:ffdac3504dfd94a8eb19258feda3098c768ed9084b785315328f7e409afd5b0d"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27351105,
                    "digest": "sha256:20274425734a05472f3772bae7ce7124a9832f5eb168456d6cb53e92d6e718a8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592232,
                    "digest": "sha256:559403e73a2bbbe7162790ab9a01b8821b245a167cf12febd64515b69bcc7ed4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12233453,
                    "digest": "sha256:6569082e05674e6a6d6cc5fe52df4e9c3deb80c8d5d410a4d72aa8d817565401"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473570,
                    "digest": "sha256:e73ef5703bf064811a78f54d90eb5641d5c97b9eb1b69d6f81f000acaedce9fb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1012,
                    "digest": "sha256:eb7aff4d75a007af2c9270dd6d93fa1b39e864ac39387faf1aa0b1f1451bf395"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 278,
                    "digest": "sha256:211af0a7a7edba81c694dfffed9fe48c8a6a5a2c3c8947cb9195070a86b37ad2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 679,
                    "digest": "sha256:edcb5a158d8fc9effb445cad897dcc7ed9d5fec602837b046818e02fe060bd89"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 464,
                    "digest": "sha256:7026cafb296c0c85d4460e3e95b5c881786f5790fd246dc05609a32b268d6799"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4353,
                    "digest": "sha256:b81e2439bdbed73367271521887f0ef12da86658103c7723b35f3f326acdfcce"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12224398,
                    "digest": "sha256:7a3aa46cd6f67b6f051dd1b921d4e42780fe69f7577d97a8c40a0803845b35a8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 468,
                    "digest": "sha256:600b3f8875c8cc140126ae794143cd325684d5b7d31952be116210604dcb2dae"
                }
            ]
        },
        "latest-run-20230904": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8502,
                "digest": "sha256:46b6098e2806b33763e3bebbbece13575d55c511d8c444e7e391064622301841"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27351105,
                    "digest": "sha256:20274425734a05472f3772bae7ce7124a9832f5eb168456d6cb53e92d6e718a8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592233,
                    "digest": "sha256:ae6604f096cba3167cf802c2e3d5c3830f1f1b8390a942213ac4dcfdfea632e8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12233670,
                    "digest": "sha256:4b6e91f56148e91c5c3f09993b098eada2612ed836e6277c51636dbfeb37ca9b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473568,
                    "digest": "sha256:7b42ab3c40dc1b5d67d55828d1f26472e83d1c9c414d98175814b21e4a0b63c1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1014,
                    "digest": "sha256:7b527a3653c885d02412efd0580ca270845473e093fbc69099976cfd8c1baa65"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 278,
                    "digest": "sha256:d5c6c348a314616df2441a0ed19bbea283f14873cc4f20570862ca643d829be1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 680,
                    "digest": "sha256:402f85bc0e8d7b72d411d22bb4c13d09e8e970f6867e5c690e33dabcec804f82"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 465,
                    "digest": "sha256:d3e9368448a4effa5964fe1f8c74dab71aea3a9443693247448ec7c5234fe647"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4352,
                    "digest": "sha256:9f7ff0cb5103b62b8a3db8f0c00acad12868d9e070c3a3c384124e5323365906"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12224434,
                    "digest": "sha256:01ac6f7e4df93e1056bf15d57982d7708c90641d4458743da881ba428a27d7aa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 469,
                    "digest": "sha256:77727fa2c71bf8a49974d230eb96f1d8514ec6ad46936abea06de2659a473bc3"
                }
            ]
        },
        "latest-run-20230911": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:97b9acf88fa0ac4871667652b5bf44497d78d3a42820d8777b7cbac0b9b5b960",
                "size": 7827
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:20274425734a05472f3772bae7ce7124a9832f5eb168456d6cb53e92d6e718a8",
                    "size": 27351105
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ae6604f096cba3167cf802c2e3d5c3830f1f1b8390a942213ac4dcfdfea632e8",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b6e91f56148e91c5c3f09993b098eada2612ed836e6277c51636dbfeb37ca9b",
                    "size": 12233670
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7b42ab3c40dc1b5d67d55828d1f26472e83d1c9c414d98175814b21e4a0b63c1",
                    "size": 473568
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7b527a3653c885d02412efd0580ca270845473e093fbc69099976cfd8c1baa65",
                    "size": 1014
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5c6c348a314616df2441a0ed19bbea283f14873cc4f20570862ca643d829be1",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:402f85bc0e8d7b72d411d22bb4c13d09e8e970f6867e5c690e33dabcec804f82",
                    "size": 680
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d3e9368448a4effa5964fe1f8c74dab71aea3a9443693247448ec7c5234fe647",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6e8a0c2405112feb737a2e4001427b61ce957c67da6b06dbda6b3255464247a1",
                    "size": 12221865
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e3750557176c40ce26609ef93a4430ba7d259884a09aaa8e95f56349d375d50f",
                    "size": 471
                }
            ]
        },
        "latest-run-20231026": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:54cfec8d5eab040521420182ce3a1cee39b99bfb43ea932f379b799ef9b0dd73",
                "size": 7850
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bfbe77e41a78ee38147c5761aa8bc896d9f6e1e648b23468f294065ffe03c107",
                    "size": 27351048
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7d8e3a5ce2c7569141bab67dbad09ca35073e305cfe00382325fc63b448156f9",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:85b41a9a963de8053ce2b753e777313b55cc516d3a297e0663902f8179d60496",
                    "size": 12316184
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0945593605b189a6aef34e405731b4fdba340871249e0b759b6e6beaead3cb76",
                    "size": 473561
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e452cb5bd09d63c9f8f783a4f25643d1794b37199eb1f7ef9d4d3a5b29365e16",
                    "size": 1003
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:246f3a4d432fd9a259b0579f8c4d0bec180f2e5a73af63dab56fca45199fe4c7",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eec2960d0f7611d0a8f509226b0f256c11ee4289af338d0a3015013cb669563a",
                    "size": 671
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3042de505c0b156350c4aa451cc5da0be3620c026fe13fbd5da44b256dde96f1",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a7d0e900c5a8b9395b1d7456bef680196ed8266fd5c98dea90fd94bc8dac6b18",
                    "size": 12220896
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:505f9d5e55bcce922c1b14adf5338618cb32353a9da169164a34530e5498e2f8",
                    "size": 469
                }
            ]
        },
        "latest-run-20231103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:50d36746518ee2ad05cc41950c170c390c9b46d1ef6a9d47ff6acab0ef85800d",
                "size": 7851
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bfbe77e41a78ee38147c5761aa8bc896d9f6e1e648b23468f294065ffe03c107",
                    "size": 27351048
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5a3af5ce777f2dd7ec2aaec6aa356e42e5a42f0d32a149e65a59b8729b1d7094",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7649e5ab76ccc98a5056f017191f42c54be18c3e003fcf3292698b328ea60cbc",
                    "size": 12316275
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a63d4a5e8479af96d464fd5787e27f0d48b463b6ae80efc19479cba025c3517",
                    "size": 473566
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0a429b17027c0d22d8906e581f5cb64f30bf0c2b8be2acd4973e2638a80226c1",
                    "size": 1005
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a5de09e3f4483dc0f854475347bb860f3cefdbf9b493bf3e12a23da46a7305a3",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bc89bb78903a175b6eaff7efb58a17e7a9690d7c7c608bc37bb86ba3b9379d52",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5ae094d17cf4cfda68a734a2d6f3164f17a5a38c65274ce0c74fc33daf45dacf",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:feab76570efd7fe591f40ddb48f944d73c8c493b584227d03d7a47bb4e6c45d0",
                    "size": 12220859
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fab6d2e621b9a66ad3ca0075a6fc7dc4abc08184ce3948dbe145fb0410e78565",
                    "size": 468
                }
            ]
        },
        "latest-run-20240103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:366a6edb8f9d94a7ffc7e17d39951d7f703665b82745c2bfedd3ca570443b5dd",
                "size": 7849
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:005e2837585d0b391170fd9faf2e0c279d64ba0eb011cda8dedf28cb5839861e",
                    "size": 27358237
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9408f48a8910ea8dbacaab0bbba4ed1ddcbaa9fd0f39d1e832244a12aa84fe58",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7e06066982274a97e0cd7604312624913ba85de784880763df13ceed45bcb944",
                    "size": 12234166
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c0b1c1ca4c3b9caba461c91a6626d818414cfe5c697507e4c9184ddb72331ff9",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a53fcbd064252fb0e8a7ab29ccdf51f6bf40a09d144aa087e213c164dae25794",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eec2863e3cc73fcce4ec0a6a618e0d9efac1b68253c565e59b1f32dd4bb8af28",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fbbc495821203a386a2ce4861083dcfd8d59161671f36966b760e0f79f38f0c5",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:31c6fdc86cb96d13db495e65c21c4ccb25bfa6ce0e934c67cc270c3e19dfb221",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:82c6f8c047823652b579d0563f4496d543b39387ebd5ce87377bf732939f26f0",
                    "size": 12225952
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b4fcdfb8ffb08ca72e9c55b2772dcdfc94d08e2304deea02de8e65684338c55a",
                    "size": 467
                }
            ]
        },
        "latest-run-20240105": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:1897b03d0a23c251ea2d4972ace5de526155072015d3e9a4563eb2daf5cb4167",
                "size": 7846
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:005e2837585d0b391170fd9faf2e0c279d64ba0eb011cda8dedf28cb5839861e",
                    "size": 27358237
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:946fc3325c089f36e15017c49befb3c508137015fb88007c742ed19006e40f86",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:100225a27beb4e67711e9cb9d48b451ad713a3150e654dfcb516b7597766030b",
                    "size": 12234166
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1939f20d12dbb914c8a5357384b364cc15c6e4ce3607823e1341fe28da073138",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bcf1bcafa383189abc3e0f283ce439dccc91e6b9f1592c306e38a520d645e801",
                    "size": 1005
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f96eeeec35dee0c7e24bab3f3e43312e1158a4e8fe6ba8b96c53fe185619cf4b",
                    "size": 271
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fac0bfa85c76994205d436d36203c1084b4945492f32bec33fa842d31a8a0ffa",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9cbd2eaea1c9b26427471a64959cc985ab10029f276e52bb7de9a25be24524a0",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1d4622ba6a3e56ac83c0b5a6bfa98f49df4694ead4c9e228c4da7020afdfad1f",
                    "size": 12225087
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d2e5d4caca6e6dc00742525f269f676394ca5fa34f214bf660d327dc48ed9720",
                    "size": 469
                }
            ]
        },
        "latest-run-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:ce7cd5b95c7c46548a5861f3f03691ca2a31c1e6f9fa7f05fecda381f44c81d4",
                "size": 7837
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f4bb4e8dca02be491b4f72d2ef2127a64ce49c48d0d9c0a0fcaffa625067679d",
                    "size": 27358724
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8ff11e77b26351277ff2a0f7f57de0e2fb9d02b5be092feeb05f226ceb6ba3b7",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3c694bb7c6e354d784246b814440da89d55ab53bb249fe04f4ca407b6bef8755",
                    "size": 12232965
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:846ad103b86fcfbb538630714a0fb8bd9f0fff97f12cf86395da6bb2a73887ac",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:18090be9c466318b3ea02cc6448f4df9e47a0d3d52f1ace7e9a568e37a5048b1",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2eabd6f86977cadfa4a0b81a4549c3c23b73f9d2065c284982af5ffcdb77197b",
                    "size": 275
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:84ef6d70e52d2cfe921008e502281995e4d0c18efadabed15bb11057d14a955f",
                    "size": 676
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fedc60b46a8c9d3ecaa5ebc92bac8212b64e81d6d578cea5d3d18d7a49eb754e",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a4509e321f0f31cfa06836dfd026fd2fef1346ca86326996b72f5e908fa31008",
                    "size": 12225038
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:da4ea0e91794582a40c3581cab3b9edc560f453bd0ef58f85fb8b513db05d21f",
                    "size": 469
                }
            ]
        },
        "latest-run-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:97b7697f705141dfb63207b766cdc9077c5e4537c54580b6fea6ce82af60958c",
                "size": 7837
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f4bb4e8dca02be491b4f72d2ef2127a64ce49c48d0d9c0a0fcaffa625067679d",
                    "size": 27358724
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:81057abc74d5de25182a92d640d3a1237f10256f98fe1e82d445b39778134a1d",
                    "size": 2592218
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:099b0f81922f80f716f12abbcf3bed657b817486040705b3c691b8cd09624fef",
                    "size": 12232968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b7650831ea69e17d63080487881b8fce883b0883307bf1daccd03dd4e4fa6371",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8941baf7a44298e644f522e0af80d3fcd1e34ed60e5c554e1341f9b36d9654d0",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cb329778bf8f72448034e258b232c88b697f8519b5d23f09211bcd858e073cd4",
                    "size": 276
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:71c1a139d3f8524a8ffdad442be7f314363fcb7c7af004c779bf830f9e95bd59",
                    "size": 676
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2233a8d3d5bfebeadb0df88dab38b780f332df712ae846bb8afda80ad41f22fd",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e661d13e715bb628df9bc6504230a0fd4ce3e1f2108f372a08279a940274e7ce",
                    "size": 12224423
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:39efea86dc1580c79c2cd8775841e9122062dd15fc67e54f3b4dfc34304d4060",
                    "size": 471
                }
            ]
        },
        "latest-run-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:44a1f0fdb5a7101957b18291df431b0bbba36eb4dac029368abb70574473e832",
                "size": 7836
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5a2ad729c09fbfdb259ae764f92188efc67a615ffde9bb34a46298d1edf3cd6",
                    "size": 27360530
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:89399c74a38da68191a3f2228d93a279ac592fdb8b032f45d7635589eb1f3f27",
                    "size": 2592225
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5e71911d1843b73d9940a8cfbbafd038bb11df4f7c76f94ababb1e5eb59dde98",
                    "size": 12233707
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:07d81f195fae90668bd7bd2ed99c3cb5c2df14a61d86dd6ae63e24db88e9780e",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cbae211fb5e96faba2a036f002e70760fa5b0a46fe1f1337ba8a9a1b19f85f7f",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fb981c3534828254334770cd368c2465968ad2b1aad8faa10f0abfc5dd89d9b9",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e12833949768d9e8cb41ce80e65cf1b5dbbaabc3c20865913db17f4a944cfe30",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c27fa31ed6b63aa8d7f935c6c8ce2aa270dfdda6fb91aef896978f168b5197bc",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4bb506c9fe910252d41ba190a2406ab3bfc904e60a006721e81396d53d69395a",
                    "size": 12224181
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7bc7e75a54169630919ca0d4eb24815f28381a7f5525d260effa3b9b6fe441af",
                    "size": 469
                }
            ]
        },
        "lunar": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:1196a636075bed1558575e1d19c60b588872260a33e76b566f9945d91205401c",
                "size": 7838
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d8df4a5e885db4891759c9d9cfc2e43aee3f9aabf9527d938bb46d115e03e8da",
                    "size": 26079900
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7aba2d9f41705273e70ac64f42bf30b5a1a700aa22a3ee7e0cad2e3f645b7291",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4913979ff2adf3346618f76af4102c02a13254407039e5d08e31140ed4879442",
                    "size": 15772377
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:baf167c1fbd9e2a03b10fb0af0287796c72dd680fa3025cd6d113158f6f050d7",
                    "size": 473571
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:914b8868939772378d2e7a4b846cea8a9d4ae676cb4ad46f62e743907654c8ed",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:af57af5c268ebf49a61f9c54707391a8a416905905e02365ddf2966d8d21cec4",
                    "size": 276
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cc2bcda8c226918d72c9df186d9b6d186e3c5e4a8db5b4330938514b19cc43f5",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:449a82498fb07e1213749e3d5a9cb04fca344eb051b4cef25cc588304e3cef17",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8a6e44dbce5532f3e918dc74061fdd9b7551fcfda2c14a72d047444a48ad11cc",
                    "size": 12455986
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:74152a85d008aa0bb5d748d0cbeaa32b7bda33cfc4c7031ca3d8879fa7eddc2d",
                    "size": 470
                }
            ]
        },
        "lunar-20230829": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8506,
                "digest": "sha256:4cf479b240392aad0d842d2c93c5d86533c60aea82c71b596fcf9d778a0bfdda"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26064545,
                    "digest": "sha256:2b2d15932a31f0857b9499cc218b8777708cb1d73ae6ef680f624ca7d4342763"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592231,
                    "digest": "sha256:6e0e1d02b8f66de60e8b27762415064b111d657a8d10a1902bc7faab1cd4e905"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15764762,
                    "digest": "sha256:c4bd3e2678d33159235cf136997d4d64ac221241fbab101f34ad2c33c4949c48"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473567,
                    "digest": "sha256:7ea231ffb3ff2e6a33aa6492f2e4ad931b0e9b4b7e51a8c8bb615eef430d1740"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1012,
                    "digest": "sha256:b1c20b85dbac12c40ec5fb1f8dac39ce1b24e31e488af20291830b720ffe15ff"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 277,
                    "digest": "sha256:8afdfce58114c3a876d7ee7c3282b74aa5a9898ebfd680af6df31fab208b81d2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 677,
                    "digest": "sha256:804827dc4d34de2572777ed2ebbca3a8c1a72038f72e957c897999fe6faa6ca8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 464,
                    "digest": "sha256:1d6b354636564814a89f8bb8d333a70b1216196de84b45ebf2dd36d6a22b64f6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4351,
                    "digest": "sha256:cdb90d482d5496e7fb10e0b26fda5c29c6ed879edff12175cc01bbd236b89fe2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12454847,
                    "digest": "sha256:8c20ab10d36409062e21d2373f76c0f5831a7dcec3b22d42680fcaa4b09373b6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 469,
                    "digest": "sha256:9593320313915631e218a27411f05c6c4add1732e8c158f07bb99aa2bc54dadc"
                }
            ]
        },
        "lunar-20230904": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8504,
                "digest": "sha256:35fcf652bedeffa9351bb6ce11ffcc9e6484f9682f5f37a69728145fa598fc73"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26064545,
                    "digest": "sha256:2b2d15932a31f0857b9499cc218b8777708cb1d73ae6ef680f624ca7d4342763"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592232,
                    "digest": "sha256:cbd1d3f136f33a3563bf957f4e115fbba29c3af151472759b025c1e4abc9360f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15764692,
                    "digest": "sha256:08d60056acd0a4e9e44cadad378a459d1bf0820a85ab4cfc7b4c3519c623dd50"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473573,
                    "digest": "sha256:4595741c4575acc5ea7f64f7286303fbb6beeb1276ec5ecc24b3f814d895d1d4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1010,
                    "digest": "sha256:4a3f0755bcefc5bc4f5df5219cc813a02a3ea8476d493b34d3a9fc2da55f192f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 278,
                    "digest": "sha256:3d25460db0438325b2295756fc261729a9f535e85bc479d4b480b119ad674a62"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 676,
                    "digest": "sha256:20e9268d01461d6aaee1579b46535ba71d54434fdbd6d5d58e0d4144edbfbb35"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 466,
                    "digest": "sha256:7eaa42a1bac9c8fdf81a6c8b3481b790f28181b880da68a33c59f83d6a84d98e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4357,
                    "digest": "sha256:21424cc3c1cd7febdcba6318074597f65b57c007b0b95b18db2ef69539c71e19"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12454831,
                    "digest": "sha256:d671720e42e0c381974d4f29d28f38914b8af9c54aa5816cfeee1a171f388ed6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 470,
                    "digest": "sha256:d258314c3c434daf710ae9ec90cd9d3f60a1de83fc2974c0ddef9ff7d5aff19a"
                }
            ]
        },
        "lunar-20230911": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:6fb36555a480695084272af1a778bef24a3abc51017e8a1593bc95220ecfb4ff",
                "size": 7837
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2b2d15932a31f0857b9499cc218b8777708cb1d73ae6ef680f624ca7d4342763",
                    "size": 26064545
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cbd1d3f136f33a3563bf957f4e115fbba29c3af151472759b025c1e4abc9360f",
                    "size": 2592232
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:08d60056acd0a4e9e44cadad378a459d1bf0820a85ab4cfc7b4c3519c623dd50",
                    "size": 15764692
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4595741c4575acc5ea7f64f7286303fbb6beeb1276ec5ecc24b3f814d895d1d4",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4a3f0755bcefc5bc4f5df5219cc813a02a3ea8476d493b34d3a9fc2da55f192f",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3d25460db0438325b2295756fc261729a9f535e85bc479d4b480b119ad674a62",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:20e9268d01461d6aaee1579b46535ba71d54434fdbd6d5d58e0d4144edbfbb35",
                    "size": 676
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7eaa42a1bac9c8fdf81a6c8b3481b790f28181b880da68a33c59f83d6a84d98e",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f1837c9822ec6d1d4f2f2d9cae531919b9049011c20cd8ddfe8f2abe8b12b8a0",
                    "size": 12451429
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6da17277390ae72cfe80c2ce0c101e18356c35bf0967b717a586304e461529d4",
                    "size": 472
                }
            ]
        },
        "lunar-20231026": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:15a2d2164cb9768479e7d3a1d71eefb19b464a244b76f368145bdf226a4a1a37",
                "size": 7850
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:89e6336dd9e04a0993754adca328bf88d988540bb95cff284667037dd50f79eb",
                    "size": 26065969
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:52df21757019027c43479a0adfa66bf3e4e6dc8884bdf0284e1bee6413bfd443",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ab9597dadb19442d8e3b2db179fdc074643925367b41e3005f8b6425b3e18af1",
                    "size": 16359248
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:141ed4c8a80e8eb81b7a053c13f06c90cd03bda872c491abcb3c2f5b71eb07d1",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5194f933137e7d80a3165296c0aabd419038e01f2c31cbc31260bf705f472be8",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b2d38b1a70fb242fbd1e70c2447ae7906c5c716f93c80b8ab51570018769f858",
                    "size": 275
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d8493983b4672ef7a7e6bf32f75549164d539e720e3beea032a04957c1ff607a",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4137c246367f5524e2beaecded6ea5f188234be17b4391bbf35c1d1fcee4b712",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:adffd2b07f9632ed2205a531676af0d378fa422312c1ee3fadad473537d9c6cb",
                    "size": 12452368
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:740a252e816401d91c8b0da2368a50d9b8f0d245e95a453f5217dc06abe1594b",
                    "size": 468
                }
            ]
        },
        "lunar-20231103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:43b341f6a5e20167bc62b8a57717805fcad4d0d4d32dfea6594a73e6ac0522f3",
                "size": 7851
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:89e6336dd9e04a0993754adca328bf88d988540bb95cff284667037dd50f79eb",
                    "size": 26065969
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d35ef2b7ce00e8968d6abbfa65965d1e40edd929ab904671397a2ca631d3624a",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9176f3d7cd269ffca88fbe4236005d707a4da1e8182d4357d3391906ad09cad5",
                    "size": 16359297
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:00506b0a9528c47059760fb02ce166f651738003f375e8bf6368a84db2909601",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6d696bde04a3efa77f8a5daa8cd87d285da38868b62e4c62a17a1abac0000462",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:30d343c3c03c21ebfbe58c9e4c24f15bea77e1bbe4493f198b85e2cde41d5251",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b7cf3c08dce39ed6dc164275302e4e907e0e3269bb654db9faebdb1212f6c39b",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a4e92ebd248be0292442344f72cb5fdc05303f9770169c96849f6652c983027",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d41defb8c215f382f01bc8c4eeb7ecfab6d8c924fa2f047052bb0b652d7fcc31",
                    "size": 12452429
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:afaeaad47b0fdc8ec79d9c690b49c891722140ba5e349e31b21048085ec99d95",
                    "size": 467
                }
            ]
        },
        "lunar-20240103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:79d266980dd1a18ab94b41651741726db49e4097f1ff4008faff08753a19f287",
                "size": 7853
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d8df4a5e885db4891759c9d9cfc2e43aee3f9aabf9527d938bb46d115e03e8da",
                    "size": 26079900
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8336ce36a7ce9f57ba5702433aadcfb6e81ce4563a9b5dcf7e644919b98586b8",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a8d93b2efaebff6e03937ea5b11a53244efa42310753e56bbed1bbd7c00d0560",
                    "size": 15772257
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:948cda8ac6b1aa33a709598dffcf2e6b32e0b5d969cb7e5a8a61fcdb15cbefe3",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d6e138fa27a09f5bc02461507aafc5ae120eae0fee9e6c13e1113f5af8d6cdbc",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f4191e2bfa95a37cd8f7a954ce8ca3c72f1e551074eca259fc88f93312b98585",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:85b56e44f243d54a0e886c7370f883144aa1dfbaedda79c5dfb688424387e2c4",
                    "size": 676
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ee94874623e25d689d1fc989dd30792764f0247f889b266ff5f9d6d602f9c006",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:38a7571a06b9441273e0bc64b0e9987f19ac789b9598d074da92ac36678d32cf",
                    "size": 12455750
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:57fa1ae86219ffef11156defd777582eccd90ec7abc9f880abb69cefb029c6df",
                    "size": 468
                }
            ]
        },
        "lunar-20240105": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:cf2d163577aec8c6744e6369c8483373973076102f4ecee96cd9fafd5dfbd3c9",
                "size": 7851
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d8df4a5e885db4891759c9d9cfc2e43aee3f9aabf9527d938bb46d115e03e8da",
                    "size": 26079900
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7632dbe5537a3478021d4db23d108c94875308f43d8d3c68fa2724a59e705968",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9359b37f2b343a2fd00deab4a5f2a289529bda6b822be9c12a8fcdd723b35c3b",
                    "size": 15772218
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3cfa8c6d58bcf71207acaac7f6cb99f1016e3d9da94a4921453582370fa8de90",
                    "size": 473562
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:71dcaf8f70e7079ce03ead4afa3d1619a36ee14342b9553d7819ca4093248c85",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c1955028138986ec2c33c66fc8ec2590887095619aa835429ef15cd5f5a5b4a7",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d18999797e31a1875487f16b6026b5a18eba41f55cfbb988d67013ca30f829dc",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ad88327836be6208e4bcd3f4df8ff7a12041ea8099e2aba40745c81cee46e514",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ddb5e431d2293a819784fbfd874d8cc3d7e42d40b306f06eae9a49204c9b9191",
                    "size": 12455336
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a17b983d74955b1b918069ec4e532d0a79f046079692c146b978102804931c3e",
                    "size": 468
                }
            ]
        },
        "lunar-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:c7c889fd203d86c610d1ee0014d00c6f3c195ce847a511793d31c95dba9f81f6",
                "size": 7838
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d8df4a5e885db4891759c9d9cfc2e43aee3f9aabf9527d938bb46d115e03e8da",
                    "size": 26079900
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:41dc5e0ea3d1d8b3a0ce85178e2ab32e29d294af24f0add59304fe16ab7c3a3c",
                    "size": 2592226
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:045036d4b29ca6f8aa8a458bf58f28a2c7d8a36c2cf43bed22953c142147bdad",
                    "size": 15772400
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3b752fd04f10130d83d59669eb224d71539ccf4262b8d20dc7bde2bd2e7bf783",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eb2104c8f24b0efc068d2cd235b6e44a63311d05a8c62363226999cf321559b5",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:65a446528aed61898c07b759728d78c7539ed5c548635b7d8e806e736f0374a7",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1c61e7b4ab4703cf2bc6a228a74929e5c985d3d3f8c606c6bba8d8ff87820a31",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6092060a2971cdf5172f9fa3b2c79f26a8e4356e32f75be71cddb698a312952",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:061d64626c392a449a40fdf68a92da0b577e67d2f61d52312f488543f9c1e033",
                    "size": 12456088
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:829eae52d7257ce23cb87388a53690aed70b6c8e658b01ba15b4e7bc0960e4fc",
                    "size": 469
                }
            ]
        },
        "lunar-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:1196a636075bed1558575e1d19c60b588872260a33e76b566f9945d91205401c",
                "size": 7838
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d8df4a5e885db4891759c9d9cfc2e43aee3f9aabf9527d938bb46d115e03e8da",
                    "size": 26079900
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7aba2d9f41705273e70ac64f42bf30b5a1a700aa22a3ee7e0cad2e3f645b7291",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4913979ff2adf3346618f76af4102c02a13254407039e5d08e31140ed4879442",
                    "size": 15772377
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:baf167c1fbd9e2a03b10fb0af0287796c72dd680fa3025cd6d113158f6f050d7",
                    "size": 473571
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:914b8868939772378d2e7a4b846cea8a9d4ae676cb4ad46f62e743907654c8ed",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:af57af5c268ebf49a61f9c54707391a8a416905905e02365ddf2966d8d21cec4",
                    "size": 276
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cc2bcda8c226918d72c9df186d9b6d186e3c5e4a8db5b4330938514b19cc43f5",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:449a82498fb07e1213749e3d5a9cb04fca344eb051b4cef25cc588304e3cef17",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8a6e44dbce5532f3e918dc74061fdd9b7551fcfda2c14a72d047444a48ad11cc",
                    "size": 12455986
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:74152a85d008aa0bb5d748d0cbeaa32b7bda33cfc4c7031ca3d8879fa7eddc2d",
                    "size": 470
                }
            ]
        },
        "lunar-build": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:3c5c1a15c17f6c71a1deed29d9ad5c25df35d7e4dbd01c22edcf9ffd883c048a",
                "size": 8754
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d8df4a5e885db4891759c9d9cfc2e43aee3f9aabf9527d938bb46d115e03e8da",
                    "size": 26079900
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1dea42ee86da1f2987a96a08bc03ec01552d1f1bf8b665329ce30f2e5e53355c",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f055f68bb785c14279fffe42bd707a8f8db5178ddf61b0372caaefba21ec9e9e",
                    "size": 15772386
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1c6efdda40095231be50d2c8b04a9eec32e771db42f27ae23d6eade508607b31",
                    "size": 233170305
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d967152b9ed8ba496a2c0fa243857ba5896c9b5d3dbc2810f51185575084f1a9",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d16dfddd5fd7f951042f1be34d52491835449ff434f1536992e241804f45f627",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fb38b0f6aa1bc6983d777fc6fc2187e9e129bf08c1b1f042544b6c8e310e7718",
                    "size": 276
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a0e5bf3184e4a2d9d2a36378de47c9494ed641a2db702c79c590c038cc8a8e0c",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:98dd795c29ffc54ece4aba54a6200471525d19827d867d92f3afa87fedf31765",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b5ed8e308c83814e9d1eaf0ad69b728c2c4ebcd567029c165e6b27371e76f2c3",
                    "size": 1195689
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bb85bd64f9e790d769190c5204e83363f775e85d893bf61edfc53c11ca91255d",
                    "size": 469
                }
            ]
        },
        "lunar-build-20230829": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9421,
                "digest": "sha256:ab59a0576ce07f98b1908945f882cce9a3ef9456cef88ae86ff69af786833404"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26064545,
                    "digest": "sha256:2b2d15932a31f0857b9499cc218b8777708cb1d73ae6ef680f624ca7d4342763"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592231,
                    "digest": "sha256:6e0e1d02b8f66de60e8b27762415064b111d657a8d10a1902bc7faab1cd4e905"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15764762,
                    "digest": "sha256:c4bd3e2678d33159235cf136997d4d64ac221241fbab101f34ad2c33c4949c48"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 227243514,
                    "digest": "sha256:9c3bc98ac74d5ea93c0f005883871a4658d30a729b23661daaf37e498e570dfa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473563,
                    "digest": "sha256:ff562b28259329420bf63631d7113174a96754d0199f43104a17a62a28a6a53b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1010,
                    "digest": "sha256:d87b5310441570c48bc99aff2609d360f5df906334cdbb0a4713a0ee3bed20d3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 276,
                    "digest": "sha256:418d4ee1a870c4a811a293d27235ad6d83a9c0432ffcc0cf626317572884c668"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 675,
                    "digest": "sha256:75ad7306e179e2d20ceb24b688d5b8a4aa85d52dde21b2e15fb3012824b3fae3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 461,
                    "digest": "sha256:cd1594f610423dcea290ee133938ae028550b0f8b9f603484c6a8ab1935df149"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4353,
                    "digest": "sha256:7209b14b8f8e694a1677f9da128850652e030a98f64cee58d7144176b407a9a2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1194844,
                    "digest": "sha256:eb20a4951443203d1a11e9c9b06a5f2bca1ee31c7cefdf600d63f1f28d2180aa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 468,
                    "digest": "sha256:abe294d3cc355a8c6371c0cf7ff05040b98dc9a126055165a59b348bd5d1c1e3"
                }
            ]
        },
        "lunar-build-20230904": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9426,
                "digest": "sha256:4bfefa3e2cc1e86e19899caea92e3234f9b3ed9ebe36acc22093e9d23cf64d44"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26064545,
                    "digest": "sha256:2b2d15932a31f0857b9499cc218b8777708cb1d73ae6ef680f624ca7d4342763"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592232,
                    "digest": "sha256:cbd1d3f136f33a3563bf957f4e115fbba29c3af151472759b025c1e4abc9360f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15764692,
                    "digest": "sha256:08d60056acd0a4e9e44cadad378a459d1bf0820a85ab4cfc7b4c3519c623dd50"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 227266276,
                    "digest": "sha256:b701788bb20c5d09a9939daaf7c6d456b5c0a0e2bdca7ce2060a0ea00a9ad5dc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473567,
                    "digest": "sha256:1fcf0c7285c520eca1a0641fe29fbdb0336fe7d014e374b0611666d9a0ff7cb1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1011,
                    "digest": "sha256:9f85aa0d9699f849f04cb577c728e7a5f14a27af4b47bea9b5f67b10acb557e4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 277,
                    "digest": "sha256:318596fcddacf9b108b0a1d2b99016b2d1cc4fbbec8872d7dc91dcbcf8ce8617"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 678,
                    "digest": "sha256:7624522837d18c429a3f7d0d09d95b539625a65436cf69d438d9a1dab1afa61e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 461,
                    "digest": "sha256:cb65a5e53770bd529c93a581eb9ae6d64fd11e5387546a8d292586e12f07f7ec"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4354,
                    "digest": "sha256:48e538f96a8df27c108fc37fe8f25b7cfc13b968e71489246ea4a810bcf7c3d8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1194856,
                    "digest": "sha256:2b72aa9f0e26edefd27087dd6fdac75432feff12b04c8048f432c6f79ce3e3ff"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 467,
                    "digest": "sha256:9d67069a69c24d982870e63d7f8a4a07de40d65186e33bc3c87267235d635156"
                }
            ]
        },
        "lunar-build-20230911": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:9e574613de7093ad51b4c07032281e0c30f999401cec71404acbff6ac490e423",
                "size": 8757
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2b2d15932a31f0857b9499cc218b8777708cb1d73ae6ef680f624ca7d4342763",
                    "size": 26064545
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cbd1d3f136f33a3563bf957f4e115fbba29c3af151472759b025c1e4abc9360f",
                    "size": 2592232
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:08d60056acd0a4e9e44cadad378a459d1bf0820a85ab4cfc7b4c3519c623dd50",
                    "size": 15764692
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b701788bb20c5d09a9939daaf7c6d456b5c0a0e2bdca7ce2060a0ea00a9ad5dc",
                    "size": 227266276
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1fcf0c7285c520eca1a0641fe29fbdb0336fe7d014e374b0611666d9a0ff7cb1",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9f85aa0d9699f849f04cb577c728e7a5f14a27af4b47bea9b5f67b10acb557e4",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:318596fcddacf9b108b0a1d2b99016b2d1cc4fbbec8872d7dc91dcbcf8ce8617",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7624522837d18c429a3f7d0d09d95b539625a65436cf69d438d9a1dab1afa61e",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cb65a5e53770bd529c93a581eb9ae6d64fd11e5387546a8d292586e12f07f7ec",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7e2b184a3c1db4a974b67c72ed8ccfd9ccc17f6075d7bbf518e412c3a8abf4bd",
                    "size": 1194874
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:44a7532be367c93d4d99b79e299d9560bb7e03ce5c1eef2589fd29580e697280",
                    "size": 470
                }
            ]
        },
        "lunar-build-20231026": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:2ed36520b3cdc0f2e321eaab6f42dd261dfd7fa04f64b4e768cdc6a4bfb67324",
                "size": 8769
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:89e6336dd9e04a0993754adca328bf88d988540bb95cff284667037dd50f79eb",
                    "size": 26065969
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8079a0ac1d485d2bd76ad45687ce62ea91af19727320adb658afaa2ed98a42aa",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:57e660887d0ef295309d9d1bed9d9d7c999dee9f3cfc35d4dbc3277611b336dd",
                    "size": 16359247
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8e85f2ab2ec7eb4b5be71e92d05be127f63eb6ccc751cc3542093ec6dbdd171c",
                    "size": 227328207
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fc2540ba934789e02350072c77eb4b68c16d1646e11ebaf588c552b6e28b50fe",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5c571e256be8f7e432dcefb930fb33fcceca5d6b55fa723786bc2d2d614c6cbf",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c82f77baafcc926efc9cc0fd4df71f640dbc73524d0a6abcf22e7bc423cfbb72",
                    "size": 275
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:616b2304cc211416361e72dbae830b7bb60a8a3bb978cfd9779dc702f3fd9b94",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7a15c88e5e8115d017dd48e63d72bb6bbc11a1a1c16b43b90e4415276fafaef2",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:847d3230c8786cf809bba361faf1ac6a7708f8c4c1493ebb20b98eb7069eb728",
                    "size": 1195426
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:387544dc2f7affb99c92e5c03185f49dcd32c917ed07775c017aad8fb56d5382",
                    "size": 469
                }
            ]
        },
        "lunar-build-20231103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:ada4c02b6aaf0fc9383b8fb1c02f1f194d93419cdfeda32633ef38242cf8af76",
                "size": 8768
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:89e6336dd9e04a0993754adca328bf88d988540bb95cff284667037dd50f79eb",
                    "size": 26065969
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:860f2faf8077a4e95245095385be1dcef65d036f3d431a26026c26114f794607",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6596f2420b78b353cd00bafa939503b494bf0b527f32b1da5775190a2d8a9297",
                    "size": 16359154
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:008438bd6b4df01ceb57e6c7cf02ef135c70f83d75ddf2fad84aad35cb5701cf",
                    "size": 227328234
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:46f36279c701e660aaf388a8a7004b09f53c8efe72333e3942f1378a30800d71",
                    "size": 473568
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5776e12ce674f549eb113a986301d28d173efe7abd238a1931e9d4acefa9d9e0",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5fd138267eccb4ba12fe65918cec71b81e72d45a8072038827ca0cf9e587d19a",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7ab4e43495458e3b3ebb1d99c409f71aeee42a4e84286031970b5b5c41f395de",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6f195791a07946b7f8d59244de37f41ebaa7013820bbc1e7fb19956b327117a",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aa2042edbfaaad3d90f19ac12c95d5e700cb9f97574d15413770deef1e3fa631",
                    "size": 1195316
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aa398e77b1397963fb2bf5d935103f6267f2fa0349dc8540eea00e9298b7911",
                    "size": 468
                }
            ]
        },
        "lunar-build-20240103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:64e335d81ae2baca6499edfdb938924c6a157e6f38d01963a12c06533a91a33d",
                "size": 8773
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d8df4a5e885db4891759c9d9cfc2e43aee3f9aabf9527d938bb46d115e03e8da",
                    "size": 26079900
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a8d3ddd73a14c373fd39507365eebc93ac3032f9958cd4303f15d86d942367c6",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6da30be6a282a4e43c4e97747b2edbd530a9dc55fffcd8f5e15b26626b07cee5",
                    "size": 15772249
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ba4f472c14160f26c96c1e09ab2fc200ff2c50189b62ff24a2ea54883fa405f6",
                    "size": 233170037
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5ddeaf619869c26ebbccba80556c573c3eab7c005899a3dc071463db895bf5a7",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6fbcb08f4bb1e1fa5a01e207992db98bd53836598a62c720a9ae8b4f7d5d12a4",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8a9b23e13ff78fbd28b77deeb129127951e54995a00936a4765f41af802dde96",
                    "size": 275
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:61d79d726bacbd42c689470e1670e4bbb97571e17a794026fdfa94c87b61eee7",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2dc5999479d130dc5dc61d40bf6313e6c5bcd1a6b80c129a1e0093338f110a02",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:250e7028d78b69ceb825d013148948e2e723303053855926c694e81903d15aa3",
                    "size": 1195665
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5651b75caeea006e46c2df06f1550d9b004eb8d51309bb6e7bcfc4aa3b82d8af",
                    "size": 466
                }
            ]
        },
        "lunar-build-20240105": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0a525aad2668542e915b09a1202ee373d0202f12a3f3712eef4e6bff6da3e2aa",
                "size": 8773
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d8df4a5e885db4891759c9d9cfc2e43aee3f9aabf9527d938bb46d115e03e8da",
                    "size": 26079900
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7632dbe5537a3478021d4db23d108c94875308f43d8d3c68fa2724a59e705968",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c7691be7bedf9deda9dab1817762400ac9cb526593b6281e2dd19f26d163a33b",
                    "size": 15772215
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c87a4655a21d3bb65882d9dd89a4aba6737a100a89b2f56bc3fed42a35744a60",
                    "size": 233167380
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e73d8f92e2e1479cad5dffdfc517a3aa4ece93fc1dca0c4b3b83a90570986aa3",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:657c0cb72b05ce4f3b11b5f39ed4b605d53bd9bcd1da775de635a2169a4dee0b",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6db6b4c481c70cac75498a0b78ca271d6e08411cb65e920cc73debf3355ac8c5",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:077bee281f2b2c66a3a5d604486e6789f3b6e1444a588cd9d127c292c72e68b9",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1ef60b5c0f8c98b8ce024d0c695fabf917d07a6fb939807db1ff804b42c9af26",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ff5736e9ffdc1fedd013d894dcd39b32030d3038f188ea3ad0d9f15a55a573ea",
                    "size": 1195639
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cb65eb1abf8bf6e7839496a453ba21cfc8e8ea1c762abd4402aad8b20636b6bf",
                    "size": 468
                }
            ]
        },
        "lunar-build-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:d7f3a1bd7d8c797a90678022fc3b69a7b9f93869a7ca75e9c98556e036df74d3",
                "size": 8756
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d8df4a5e885db4891759c9d9cfc2e43aee3f9aabf9527d938bb46d115e03e8da",
                    "size": 26079900
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:419a8891f1a76d011996ef672b45747605cf04598f0ff7d25d3e9d28ee324652",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:42592dd758d63927456e07c8a084801682013cbf3ce80d85335f4f2f2e1e3c76",
                    "size": 15772377
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:696b3af6d83a044ce656f9eda6aacdacfd6cb29b6b81312ea46444f9a468310e",
                    "size": 233170474
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e6a9074a7025549ae93cb152c53cc7ef7f0fd2a67d873d01b00375c5a41f8bc7",
                    "size": 473571
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2d0bae4b181d2a5f7141dcb906fd683994ee421799e7c7942958377cb25c0acb",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fb9bfc05105ad4799530c5cf0dad5e95bdd4603ee0164237ce8bda56a6a76baa",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2b5dc64edea55225f23c9fdf358b16e09740b220a0380c0ec84470734629a59d",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3dcd0a1fbb74944d83fe1e958c63864419e97b6915e51f1ec9a9b974bef2d08c",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e00c4a20fc0341ee22988970a02a895902a7f1c83bda9b7cb878de8e7ac489e6",
                    "size": 1195680
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:99252c127817f016532bf6bfa5b6292e411a09f31e703180651a3ea36b920ca2",
                    "size": 468
                }
            ]
        },
        "lunar-build-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:3c5c1a15c17f6c71a1deed29d9ad5c25df35d7e4dbd01c22edcf9ffd883c048a",
                "size": 8754
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d8df4a5e885db4891759c9d9cfc2e43aee3f9aabf9527d938bb46d115e03e8da",
                    "size": 26079900
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1dea42ee86da1f2987a96a08bc03ec01552d1f1bf8b665329ce30f2e5e53355c",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f055f68bb785c14279fffe42bd707a8f8db5178ddf61b0372caaefba21ec9e9e",
                    "size": 15772386
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1c6efdda40095231be50d2c8b04a9eec32e771db42f27ae23d6eade508607b31",
                    "size": 233170305
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d967152b9ed8ba496a2c0fa243857ba5896c9b5d3dbc2810f51185575084f1a9",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d16dfddd5fd7f951042f1be34d52491835449ff434f1536992e241804f45f627",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fb38b0f6aa1bc6983d777fc6fc2187e9e129bf08c1b1f042544b6c8e310e7718",
                    "size": 276
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a0e5bf3184e4a2d9d2a36378de47c9494ed641a2db702c79c590c038cc8a8e0c",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:98dd795c29ffc54ece4aba54a6200471525d19827d867d92f3afa87fedf31765",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b5ed8e308c83814e9d1eaf0ad69b728c2c4ebcd567029c165e6b27371e76f2c3",
                    "size": 1195689
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bb85bd64f9e790d769190c5204e83363f775e85d893bf61edfc53c11ca91255d",
                    "size": 469
                }
            ]
        },
        "lunar-run": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:1196a636075bed1558575e1d19c60b588872260a33e76b566f9945d91205401c",
                "size": 7838
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d8df4a5e885db4891759c9d9cfc2e43aee3f9aabf9527d938bb46d115e03e8da",
                    "size": 26079900
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7aba2d9f41705273e70ac64f42bf30b5a1a700aa22a3ee7e0cad2e3f645b7291",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4913979ff2adf3346618f76af4102c02a13254407039e5d08e31140ed4879442",
                    "size": 15772377
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:baf167c1fbd9e2a03b10fb0af0287796c72dd680fa3025cd6d113158f6f050d7",
                    "size": 473571
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:914b8868939772378d2e7a4b846cea8a9d4ae676cb4ad46f62e743907654c8ed",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:af57af5c268ebf49a61f9c54707391a8a416905905e02365ddf2966d8d21cec4",
                    "size": 276
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cc2bcda8c226918d72c9df186d9b6d186e3c5e4a8db5b4330938514b19cc43f5",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:449a82498fb07e1213749e3d5a9cb04fca344eb051b4cef25cc588304e3cef17",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8a6e44dbce5532f3e918dc74061fdd9b7551fcfda2c14a72d047444a48ad11cc",
                    "size": 12455986
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:74152a85d008aa0bb5d748d0cbeaa32b7bda33cfc4c7031ca3d8879fa7eddc2d",
                    "size": 470
                }
            ]
        },
        "lunar-run-20230829": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8506,
                "digest": "sha256:4cf479b240392aad0d842d2c93c5d86533c60aea82c71b596fcf9d778a0bfdda"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26064545,
                    "digest": "sha256:2b2d15932a31f0857b9499cc218b8777708cb1d73ae6ef680f624ca7d4342763"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592231,
                    "digest": "sha256:6e0e1d02b8f66de60e8b27762415064b111d657a8d10a1902bc7faab1cd4e905"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15764762,
                    "digest": "sha256:c4bd3e2678d33159235cf136997d4d64ac221241fbab101f34ad2c33c4949c48"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473567,
                    "digest": "sha256:7ea231ffb3ff2e6a33aa6492f2e4ad931b0e9b4b7e51a8c8bb615eef430d1740"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1012,
                    "digest": "sha256:b1c20b85dbac12c40ec5fb1f8dac39ce1b24e31e488af20291830b720ffe15ff"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 277,
                    "digest": "sha256:8afdfce58114c3a876d7ee7c3282b74aa5a9898ebfd680af6df31fab208b81d2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 677,
                    "digest": "sha256:804827dc4d34de2572777ed2ebbca3a8c1a72038f72e957c897999fe6faa6ca8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 464,
                    "digest": "sha256:1d6b354636564814a89f8bb8d333a70b1216196de84b45ebf2dd36d6a22b64f6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4351,
                    "digest": "sha256:cdb90d482d5496e7fb10e0b26fda5c29c6ed879edff12175cc01bbd236b89fe2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12454847,
                    "digest": "sha256:8c20ab10d36409062e21d2373f76c0f5831a7dcec3b22d42680fcaa4b09373b6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 469,
                    "digest": "sha256:9593320313915631e218a27411f05c6c4add1732e8c158f07bb99aa2bc54dadc"
                }
            ]
        },
        "lunar-run-20230904": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8504,
                "digest": "sha256:35fcf652bedeffa9351bb6ce11ffcc9e6484f9682f5f37a69728145fa598fc73"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26064545,
                    "digest": "sha256:2b2d15932a31f0857b9499cc218b8777708cb1d73ae6ef680f624ca7d4342763"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592232,
                    "digest": "sha256:cbd1d3f136f33a3563bf957f4e115fbba29c3af151472759b025c1e4abc9360f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15764692,
                    "digest": "sha256:08d60056acd0a4e9e44cadad378a459d1bf0820a85ab4cfc7b4c3519c623dd50"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473573,
                    "digest": "sha256:4595741c4575acc5ea7f64f7286303fbb6beeb1276ec5ecc24b3f814d895d1d4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1010,
                    "digest": "sha256:4a3f0755bcefc5bc4f5df5219cc813a02a3ea8476d493b34d3a9fc2da55f192f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 278,
                    "digest": "sha256:3d25460db0438325b2295756fc261729a9f535e85bc479d4b480b119ad674a62"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 676,
                    "digest": "sha256:20e9268d01461d6aaee1579b46535ba71d54434fdbd6d5d58e0d4144edbfbb35"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 466,
                    "digest": "sha256:7eaa42a1bac9c8fdf81a6c8b3481b790f28181b880da68a33c59f83d6a84d98e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4357,
                    "digest": "sha256:21424cc3c1cd7febdcba6318074597f65b57c007b0b95b18db2ef69539c71e19"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12454831,
                    "digest": "sha256:d671720e42e0c381974d4f29d28f38914b8af9c54aa5816cfeee1a171f388ed6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 470,
                    "digest": "sha256:d258314c3c434daf710ae9ec90cd9d3f60a1de83fc2974c0ddef9ff7d5aff19a"
                }
            ]
        },
        "lunar-run-20230911": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:6fb36555a480695084272af1a778bef24a3abc51017e8a1593bc95220ecfb4ff",
                "size": 7837
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2b2d15932a31f0857b9499cc218b8777708cb1d73ae6ef680f624ca7d4342763",
                    "size": 26064545
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cbd1d3f136f33a3563bf957f4e115fbba29c3af151472759b025c1e4abc9360f",
                    "size": 2592232
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:08d60056acd0a4e9e44cadad378a459d1bf0820a85ab4cfc7b4c3519c623dd50",
                    "size": 15764692
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4595741c4575acc5ea7f64f7286303fbb6beeb1276ec5ecc24b3f814d895d1d4",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4a3f0755bcefc5bc4f5df5219cc813a02a3ea8476d493b34d3a9fc2da55f192f",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3d25460db0438325b2295756fc261729a9f535e85bc479d4b480b119ad674a62",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:20e9268d01461d6aaee1579b46535ba71d54434fdbd6d5d58e0d4144edbfbb35",
                    "size": 676
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7eaa42a1bac9c8fdf81a6c8b3481b790f28181b880da68a33c59f83d6a84d98e",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f1837c9822ec6d1d4f2f2d9cae531919b9049011c20cd8ddfe8f2abe8b12b8a0",
                    "size": 12451429
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6da17277390ae72cfe80c2ce0c101e18356c35bf0967b717a586304e461529d4",
                    "size": 472
                }
            ]
        },
        "lunar-run-20231026": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:15a2d2164cb9768479e7d3a1d71eefb19b464a244b76f368145bdf226a4a1a37",
                "size": 7850
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:89e6336dd9e04a0993754adca328bf88d988540bb95cff284667037dd50f79eb",
                    "size": 26065969
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:52df21757019027c43479a0adfa66bf3e4e6dc8884bdf0284e1bee6413bfd443",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ab9597dadb19442d8e3b2db179fdc074643925367b41e3005f8b6425b3e18af1",
                    "size": 16359248
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:141ed4c8a80e8eb81b7a053c13f06c90cd03bda872c491abcb3c2f5b71eb07d1",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5194f933137e7d80a3165296c0aabd419038e01f2c31cbc31260bf705f472be8",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b2d38b1a70fb242fbd1e70c2447ae7906c5c716f93c80b8ab51570018769f858",
                    "size": 275
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d8493983b4672ef7a7e6bf32f75549164d539e720e3beea032a04957c1ff607a",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4137c246367f5524e2beaecded6ea5f188234be17b4391bbf35c1d1fcee4b712",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:adffd2b07f9632ed2205a531676af0d378fa422312c1ee3fadad473537d9c6cb",
                    "size": 12452368
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:740a252e816401d91c8b0da2368a50d9b8f0d245e95a453f5217dc06abe1594b",
                    "size": 468
                }
            ]
        },
        "lunar-run-20231103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:43b341f6a5e20167bc62b8a57717805fcad4d0d4d32dfea6594a73e6ac0522f3",
                "size": 7851
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:89e6336dd9e04a0993754adca328bf88d988540bb95cff284667037dd50f79eb",
                    "size": 26065969
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d35ef2b7ce00e8968d6abbfa65965d1e40edd929ab904671397a2ca631d3624a",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9176f3d7cd269ffca88fbe4236005d707a4da1e8182d4357d3391906ad09cad5",
                    "size": 16359297
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:00506b0a9528c47059760fb02ce166f651738003f375e8bf6368a84db2909601",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6d696bde04a3efa77f8a5daa8cd87d285da38868b62e4c62a17a1abac0000462",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:30d343c3c03c21ebfbe58c9e4c24f15bea77e1bbe4493f198b85e2cde41d5251",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b7cf3c08dce39ed6dc164275302e4e907e0e3269bb654db9faebdb1212f6c39b",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a4e92ebd248be0292442344f72cb5fdc05303f9770169c96849f6652c983027",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d41defb8c215f382f01bc8c4eeb7ecfab6d8c924fa2f047052bb0b652d7fcc31",
                    "size": 12452429
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:afaeaad47b0fdc8ec79d9c690b49c891722140ba5e349e31b21048085ec99d95",
                    "size": 467
                }
            ]
        },
        "lunar-run-20240103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:79d266980dd1a18ab94b41651741726db49e4097f1ff4008faff08753a19f287",
                "size": 7853
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d8df4a5e885db4891759c9d9cfc2e43aee3f9aabf9527d938bb46d115e03e8da",
                    "size": 26079900
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8336ce36a7ce9f57ba5702433aadcfb6e81ce4563a9b5dcf7e644919b98586b8",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a8d93b2efaebff6e03937ea5b11a53244efa42310753e56bbed1bbd7c00d0560",
                    "size": 15772257
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:948cda8ac6b1aa33a709598dffcf2e6b32e0b5d969cb7e5a8a61fcdb15cbefe3",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d6e138fa27a09f5bc02461507aafc5ae120eae0fee9e6c13e1113f5af8d6cdbc",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f4191e2bfa95a37cd8f7a954ce8ca3c72f1e551074eca259fc88f93312b98585",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:85b56e44f243d54a0e886c7370f883144aa1dfbaedda79c5dfb688424387e2c4",
                    "size": 676
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ee94874623e25d689d1fc989dd30792764f0247f889b266ff5f9d6d602f9c006",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:38a7571a06b9441273e0bc64b0e9987f19ac789b9598d074da92ac36678d32cf",
                    "size": 12455750
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:57fa1ae86219ffef11156defd777582eccd90ec7abc9f880abb69cefb029c6df",
                    "size": 468
                }
            ]
        },
        "lunar-run-20240105": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:cf2d163577aec8c6744e6369c8483373973076102f4ecee96cd9fafd5dfbd3c9",
                "size": 7851
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d8df4a5e885db4891759c9d9cfc2e43aee3f9aabf9527d938bb46d115e03e8da",
                    "size": 26079900
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7632dbe5537a3478021d4db23d108c94875308f43d8d3c68fa2724a59e705968",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9359b37f2b343a2fd00deab4a5f2a289529bda6b822be9c12a8fcdd723b35c3b",
                    "size": 15772218
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3cfa8c6d58bcf71207acaac7f6cb99f1016e3d9da94a4921453582370fa8de90",
                    "size": 473562
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:71dcaf8f70e7079ce03ead4afa3d1619a36ee14342b9553d7819ca4093248c85",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c1955028138986ec2c33c66fc8ec2590887095619aa835429ef15cd5f5a5b4a7",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d18999797e31a1875487f16b6026b5a18eba41f55cfbb988d67013ca30f829dc",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ad88327836be6208e4bcd3f4df8ff7a12041ea8099e2aba40745c81cee46e514",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ddb5e431d2293a819784fbfd874d8cc3d7e42d40b306f06eae9a49204c9b9191",
                    "size": 12455336
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a17b983d74955b1b918069ec4e532d0a79f046079692c146b978102804931c3e",
                    "size": 468
                }
            ]
        },
        "lunar-run-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:c7c889fd203d86c610d1ee0014d00c6f3c195ce847a511793d31c95dba9f81f6",
                "size": 7838
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d8df4a5e885db4891759c9d9cfc2e43aee3f9aabf9527d938bb46d115e03e8da",
                    "size": 26079900
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:41dc5e0ea3d1d8b3a0ce85178e2ab32e29d294af24f0add59304fe16ab7c3a3c",
                    "size": 2592226
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:045036d4b29ca6f8aa8a458bf58f28a2c7d8a36c2cf43bed22953c142147bdad",
                    "size": 15772400
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3b752fd04f10130d83d59669eb224d71539ccf4262b8d20dc7bde2bd2e7bf783",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eb2104c8f24b0efc068d2cd235b6e44a63311d05a8c62363226999cf321559b5",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:65a446528aed61898c07b759728d78c7539ed5c548635b7d8e806e736f0374a7",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1c61e7b4ab4703cf2bc6a228a74929e5c985d3d3f8c606c6bba8d8ff87820a31",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6092060a2971cdf5172f9fa3b2c79f26a8e4356e32f75be71cddb698a312952",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:061d64626c392a449a40fdf68a92da0b577e67d2f61d52312f488543f9c1e033",
                    "size": 12456088
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:829eae52d7257ce23cb87388a53690aed70b6c8e658b01ba15b4e7bc0960e4fc",
                    "size": 469
                }
            ]
        },
        "lunar-run-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:1196a636075bed1558575e1d19c60b588872260a33e76b566f9945d91205401c",
                "size": 7838
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d8df4a5e885db4891759c9d9cfc2e43aee3f9aabf9527d938bb46d115e03e8da",
                    "size": 26079900
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7aba2d9f41705273e70ac64f42bf30b5a1a700aa22a3ee7e0cad2e3f645b7291",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4913979ff2adf3346618f76af4102c02a13254407039e5d08e31140ed4879442",
                    "size": 15772377
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:baf167c1fbd9e2a03b10fb0af0287796c72dd680fa3025cd6d113158f6f050d7",
                    "size": 473571
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:914b8868939772378d2e7a4b846cea8a9d4ae676cb4ad46f62e743907654c8ed",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:af57af5c268ebf49a61f9c54707391a8a416905905e02365ddf2966d8d21cec4",
                    "size": 276
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cc2bcda8c226918d72c9df186d9b6d186e3c5e4a8db5b4330938514b19cc43f5",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:449a82498fb07e1213749e3d5a9cb04fca344eb051b4cef25cc588304e3cef17",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8a6e44dbce5532f3e918dc74061fdd9b7551fcfda2c14a72d047444a48ad11cc",
                    "size": 12455986
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:74152a85d008aa0bb5d748d0cbeaa32b7bda33cfc4c7031ca3d8879fa7eddc2d",
                    "size": 470
                }
            ]
        },
        "run": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:44a1f0fdb5a7101957b18291df431b0bbba36eb4dac029368abb70574473e832",
                "size": 7836
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5a2ad729c09fbfdb259ae764f92188efc67a615ffde9bb34a46298d1edf3cd6",
                    "size": 27360530
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:89399c74a38da68191a3f2228d93a279ac592fdb8b032f45d7635589eb1f3f27",
                    "size": 2592225
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5e71911d1843b73d9940a8cfbbafd038bb11df4f7c76f94ababb1e5eb59dde98",
                    "size": 12233707
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:07d81f195fae90668bd7bd2ed99c3cb5c2df14a61d86dd6ae63e24db88e9780e",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cbae211fb5e96faba2a036f002e70760fa5b0a46fe1f1337ba8a9a1b19f85f7f",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fb981c3534828254334770cd368c2465968ad2b1aad8faa10f0abfc5dd89d9b9",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e12833949768d9e8cb41ce80e65cf1b5dbbaabc3c20865913db17f4a944cfe30",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c27fa31ed6b63aa8d7f935c6c8ce2aa270dfdda6fb91aef896978f168b5197bc",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4bb506c9fe910252d41ba190a2406ab3bfc904e60a006721e81396d53d69395a",
                    "size": 12224181
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7bc7e75a54169630919ca0d4eb24815f28381a7f5525d260effa3b9b6fe441af",
                    "size": 469
                }
            ]
        },
        "run-20230829": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8503,
                "digest": "sha256:ffdac3504dfd94a8eb19258feda3098c768ed9084b785315328f7e409afd5b0d"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27351105,
                    "digest": "sha256:20274425734a05472f3772bae7ce7124a9832f5eb168456d6cb53e92d6e718a8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592232,
                    "digest": "sha256:559403e73a2bbbe7162790ab9a01b8821b245a167cf12febd64515b69bcc7ed4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12233453,
                    "digest": "sha256:6569082e05674e6a6d6cc5fe52df4e9c3deb80c8d5d410a4d72aa8d817565401"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473570,
                    "digest": "sha256:e73ef5703bf064811a78f54d90eb5641d5c97b9eb1b69d6f81f000acaedce9fb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1012,
                    "digest": "sha256:eb7aff4d75a007af2c9270dd6d93fa1b39e864ac39387faf1aa0b1f1451bf395"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 278,
                    "digest": "sha256:211af0a7a7edba81c694dfffed9fe48c8a6a5a2c3c8947cb9195070a86b37ad2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 679,
                    "digest": "sha256:edcb5a158d8fc9effb445cad897dcc7ed9d5fec602837b046818e02fe060bd89"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 464,
                    "digest": "sha256:7026cafb296c0c85d4460e3e95b5c881786f5790fd246dc05609a32b268d6799"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4353,
                    "digest": "sha256:b81e2439bdbed73367271521887f0ef12da86658103c7723b35f3f326acdfcce"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12224398,
                    "digest": "sha256:7a3aa46cd6f67b6f051dd1b921d4e42780fe69f7577d97a8c40a0803845b35a8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 468,
                    "digest": "sha256:600b3f8875c8cc140126ae794143cd325684d5b7d31952be116210604dcb2dae"
                }
            ]
        },
        "run-20230904": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8502,
                "digest": "sha256:46b6098e2806b33763e3bebbbece13575d55c511d8c444e7e391064622301841"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27351105,
                    "digest": "sha256:20274425734a05472f3772bae7ce7124a9832f5eb168456d6cb53e92d6e718a8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592233,
                    "digest": "sha256:ae6604f096cba3167cf802c2e3d5c3830f1f1b8390a942213ac4dcfdfea632e8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12233670,
                    "digest": "sha256:4b6e91f56148e91c5c3f09993b098eada2612ed836e6277c51636dbfeb37ca9b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473568,
                    "digest": "sha256:7b42ab3c40dc1b5d67d55828d1f26472e83d1c9c414d98175814b21e4a0b63c1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1014,
                    "digest": "sha256:7b527a3653c885d02412efd0580ca270845473e093fbc69099976cfd8c1baa65"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 278,
                    "digest": "sha256:d5c6c348a314616df2441a0ed19bbea283f14873cc4f20570862ca643d829be1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 680,
                    "digest": "sha256:402f85bc0e8d7b72d411d22bb4c13d09e8e970f6867e5c690e33dabcec804f82"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 465,
                    "digest": "sha256:d3e9368448a4effa5964fe1f8c74dab71aea3a9443693247448ec7c5234fe647"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4352,
                    "digest": "sha256:9f7ff0cb5103b62b8a3db8f0c00acad12868d9e070c3a3c384124e5323365906"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12224434,
                    "digest": "sha256:01ac6f7e4df93e1056bf15d57982d7708c90641d4458743da881ba428a27d7aa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 469,
                    "digest": "sha256:77727fa2c71bf8a49974d230eb96f1d8514ec6ad46936abea06de2659a473bc3"
                }
            ]
        },
        "run-20230911": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:97b9acf88fa0ac4871667652b5bf44497d78d3a42820d8777b7cbac0b9b5b960",
                "size": 7827
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:20274425734a05472f3772bae7ce7124a9832f5eb168456d6cb53e92d6e718a8",
                    "size": 27351105
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ae6604f096cba3167cf802c2e3d5c3830f1f1b8390a942213ac4dcfdfea632e8",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b6e91f56148e91c5c3f09993b098eada2612ed836e6277c51636dbfeb37ca9b",
                    "size": 12233670
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7b42ab3c40dc1b5d67d55828d1f26472e83d1c9c414d98175814b21e4a0b63c1",
                    "size": 473568
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7b527a3653c885d02412efd0580ca270845473e093fbc69099976cfd8c1baa65",
                    "size": 1014
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5c6c348a314616df2441a0ed19bbea283f14873cc4f20570862ca643d829be1",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:402f85bc0e8d7b72d411d22bb4c13d09e8e970f6867e5c690e33dabcec804f82",
                    "size": 680
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d3e9368448a4effa5964fe1f8c74dab71aea3a9443693247448ec7c5234fe647",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6e8a0c2405112feb737a2e4001427b61ce957c67da6b06dbda6b3255464247a1",
                    "size": 12221865
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e3750557176c40ce26609ef93a4430ba7d259884a09aaa8e95f56349d375d50f",
                    "size": 471
                }
            ]
        },
        "run-20231026": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:54cfec8d5eab040521420182ce3a1cee39b99bfb43ea932f379b799ef9b0dd73",
                "size": 7850
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bfbe77e41a78ee38147c5761aa8bc896d9f6e1e648b23468f294065ffe03c107",
                    "size": 27351048
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7d8e3a5ce2c7569141bab67dbad09ca35073e305cfe00382325fc63b448156f9",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:85b41a9a963de8053ce2b753e777313b55cc516d3a297e0663902f8179d60496",
                    "size": 12316184
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0945593605b189a6aef34e405731b4fdba340871249e0b759b6e6beaead3cb76",
                    "size": 473561
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e452cb5bd09d63c9f8f783a4f25643d1794b37199eb1f7ef9d4d3a5b29365e16",
                    "size": 1003
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:246f3a4d432fd9a259b0579f8c4d0bec180f2e5a73af63dab56fca45199fe4c7",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eec2960d0f7611d0a8f509226b0f256c11ee4289af338d0a3015013cb669563a",
                    "size": 671
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3042de505c0b156350c4aa451cc5da0be3620c026fe13fbd5da44b256dde96f1",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a7d0e900c5a8b9395b1d7456bef680196ed8266fd5c98dea90fd94bc8dac6b18",
                    "size": 12220896
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:505f9d5e55bcce922c1b14adf5338618cb32353a9da169164a34530e5498e2f8",
                    "size": 469
                }
            ]
        },
        "run-20231103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:50d36746518ee2ad05cc41950c170c390c9b46d1ef6a9d47ff6acab0ef85800d",
                "size": 7851
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bfbe77e41a78ee38147c5761aa8bc896d9f6e1e648b23468f294065ffe03c107",
                    "size": 27351048
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5a3af5ce777f2dd7ec2aaec6aa356e42e5a42f0d32a149e65a59b8729b1d7094",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7649e5ab76ccc98a5056f017191f42c54be18c3e003fcf3292698b328ea60cbc",
                    "size": 12316275
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a63d4a5e8479af96d464fd5787e27f0d48b463b6ae80efc19479cba025c3517",
                    "size": 473566
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0a429b17027c0d22d8906e581f5cb64f30bf0c2b8be2acd4973e2638a80226c1",
                    "size": 1005
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a5de09e3f4483dc0f854475347bb860f3cefdbf9b493bf3e12a23da46a7305a3",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bc89bb78903a175b6eaff7efb58a17e7a9690d7c7c608bc37bb86ba3b9379d52",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5ae094d17cf4cfda68a734a2d6f3164f17a5a38c65274ce0c74fc33daf45dacf",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:feab76570efd7fe591f40ddb48f944d73c8c493b584227d03d7a47bb4e6c45d0",
                    "size": 12220859
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fab6d2e621b9a66ad3ca0075a6fc7dc4abc08184ce3948dbe145fb0410e78565",
                    "size": 468
                }
            ]
        },
        "run-20240103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:366a6edb8f9d94a7ffc7e17d39951d7f703665b82745c2bfedd3ca570443b5dd",
                "size": 7849
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:005e2837585d0b391170fd9faf2e0c279d64ba0eb011cda8dedf28cb5839861e",
                    "size": 27358237
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9408f48a8910ea8dbacaab0bbba4ed1ddcbaa9fd0f39d1e832244a12aa84fe58",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7e06066982274a97e0cd7604312624913ba85de784880763df13ceed45bcb944",
                    "size": 12234166
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c0b1c1ca4c3b9caba461c91a6626d818414cfe5c697507e4c9184ddb72331ff9",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a53fcbd064252fb0e8a7ab29ccdf51f6bf40a09d144aa087e213c164dae25794",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eec2863e3cc73fcce4ec0a6a618e0d9efac1b68253c565e59b1f32dd4bb8af28",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fbbc495821203a386a2ce4861083dcfd8d59161671f36966b760e0f79f38f0c5",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:31c6fdc86cb96d13db495e65c21c4ccb25bfa6ce0e934c67cc270c3e19dfb221",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:82c6f8c047823652b579d0563f4496d543b39387ebd5ce87377bf732939f26f0",
                    "size": 12225952
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b4fcdfb8ffb08ca72e9c55b2772dcdfc94d08e2304deea02de8e65684338c55a",
                    "size": 467
                }
            ]
        },
        "run-20240105": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:1897b03d0a23c251ea2d4972ace5de526155072015d3e9a4563eb2daf5cb4167",
                "size": 7846
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:005e2837585d0b391170fd9faf2e0c279d64ba0eb011cda8dedf28cb5839861e",
                    "size": 27358237
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:946fc3325c089f36e15017c49befb3c508137015fb88007c742ed19006e40f86",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:100225a27beb4e67711e9cb9d48b451ad713a3150e654dfcb516b7597766030b",
                    "size": 12234166
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1939f20d12dbb914c8a5357384b364cc15c6e4ce3607823e1341fe28da073138",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bcf1bcafa383189abc3e0f283ce439dccc91e6b9f1592c306e38a520d645e801",
                    "size": 1005
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f96eeeec35dee0c7e24bab3f3e43312e1158a4e8fe6ba8b96c53fe185619cf4b",
                    "size": 271
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fac0bfa85c76994205d436d36203c1084b4945492f32bec33fa842d31a8a0ffa",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9cbd2eaea1c9b26427471a64959cc985ab10029f276e52bb7de9a25be24524a0",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1d4622ba6a3e56ac83c0b5a6bfa98f49df4694ead4c9e228c4da7020afdfad1f",
                    "size": 12225087
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d2e5d4caca6e6dc00742525f269f676394ca5fa34f214bf660d327dc48ed9720",
                    "size": 469
                }
            ]
        },
        "run-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:ce7cd5b95c7c46548a5861f3f03691ca2a31c1e6f9fa7f05fecda381f44c81d4",
                "size": 7837
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f4bb4e8dca02be491b4f72d2ef2127a64ce49c48d0d9c0a0fcaffa625067679d",
                    "size": 27358724
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8ff11e77b26351277ff2a0f7f57de0e2fb9d02b5be092feeb05f226ceb6ba3b7",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3c694bb7c6e354d784246b814440da89d55ab53bb249fe04f4ca407b6bef8755",
                    "size": 12232965
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:846ad103b86fcfbb538630714a0fb8bd9f0fff97f12cf86395da6bb2a73887ac",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:18090be9c466318b3ea02cc6448f4df9e47a0d3d52f1ace7e9a568e37a5048b1",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2eabd6f86977cadfa4a0b81a4549c3c23b73f9d2065c284982af5ffcdb77197b",
                    "size": 275
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:84ef6d70e52d2cfe921008e502281995e4d0c18efadabed15bb11057d14a955f",
                    "size": 676
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fedc60b46a8c9d3ecaa5ebc92bac8212b64e81d6d578cea5d3d18d7a49eb754e",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a4509e321f0f31cfa06836dfd026fd2fef1346ca86326996b72f5e908fa31008",
                    "size": 12225038
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:da4ea0e91794582a40c3581cab3b9edc560f453bd0ef58f85fb8b513db05d21f",
                    "size": 469
                }
            ]
        },
        "run-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:97b7697f705141dfb63207b766cdc9077c5e4537c54580b6fea6ce82af60958c",
                "size": 7837
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f4bb4e8dca02be491b4f72d2ef2127a64ce49c48d0d9c0a0fcaffa625067679d",
                    "size": 27358724
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:81057abc74d5de25182a92d640d3a1237f10256f98fe1e82d445b39778134a1d",
                    "size": 2592218
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:099b0f81922f80f716f12abbcf3bed657b817486040705b3c691b8cd09624fef",
                    "size": 12232968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b7650831ea69e17d63080487881b8fce883b0883307bf1daccd03dd4e4fa6371",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8941baf7a44298e644f522e0af80d3fcd1e34ed60e5c554e1341f9b36d9654d0",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cb329778bf8f72448034e258b232c88b697f8519b5d23f09211bcd858e073cd4",
                    "size": 276
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:71c1a139d3f8524a8ffdad442be7f314363fcb7c7af004c779bf830f9e95bd59",
                    "size": 676
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2233a8d3d5bfebeadb0df88dab38b780f332df712ae846bb8afda80ad41f22fd",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e661d13e715bb628df9bc6504230a0fd4ce3e1f2108f372a08279a940274e7ce",
                    "size": 12224423
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:39efea86dc1580c79c2cd8775841e9122062dd15fc67e54f3b4dfc34304d4060",
                    "size": 471
                }
            ]
        },
        "run-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:44a1f0fdb5a7101957b18291df431b0bbba36eb4dac029368abb70574473e832",
                "size": 7836
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5a2ad729c09fbfdb259ae764f92188efc67a615ffde9bb34a46298d1edf3cd6",
                    "size": 27360530
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:89399c74a38da68191a3f2228d93a279ac592fdb8b032f45d7635589eb1f3f27",
                    "size": 2592225
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5e71911d1843b73d9940a8cfbbafd038bb11df4f7c76f94ababb1e5eb59dde98",
                    "size": 12233707
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:07d81f195fae90668bd7bd2ed99c3cb5c2df14a61d86dd6ae63e24db88e9780e",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cbae211fb5e96faba2a036f002e70760fa5b0a46fe1f1337ba8a9a1b19f85f7f",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fb981c3534828254334770cd368c2465968ad2b1aad8faa10f0abfc5dd89d9b9",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e12833949768d9e8cb41ce80e65cf1b5dbbaabc3c20865913db17f4a944cfe30",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c27fa31ed6b63aa8d7f935c6c8ce2aa270dfdda6fb91aef896978f168b5197bc",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4bb506c9fe910252d41ba190a2406ab3bfc904e60a006721e81396d53d69395a",
                    "size": 12224181
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7bc7e75a54169630919ca0d4eb24815f28381a7f5525d260effa3b9b6fe441af",
                    "size": 469
                }
            ]
        },
        "xenial": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:bb4b1fd744fbb2299587ee8bf8c8a3be069043a59a87e26fe1d2d9e650d75134",
                "size": 9117
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:828b35a09f0b2f3d1dead43aa2468ff5eba6c463423b3fff7ee6d150f6fd1b6b",
                    "size": 41239253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:66927c6d1d3d2e9321c4893f7f2105b7cd23dfb082853d97ec08f188e271e612",
                    "size": 854
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:000560be91651dcbf476ebacb8bf1f1339694a3327f8e6da2519e0b29b33eb5d",
                    "size": 479
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6225a0253717abdc2ee23ea211c1c439c93b84231ec0a4f1c74762a205ba7234",
                    "size": 173
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:360a81165402e3f145b4ce3c81978299fe8cd175ab4511076c10110eda6937c4",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7da85b795c15c137931168c5f60ae0345533a20a463b64472f250e50673c134c",
                    "size": 10401716
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:94e45c611031d6436edb54dba77ac0eac303c5dc01c9b31e3654bbe1cc11706a",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d31febf5a092bc81971851c7dab4f00411eb594eef0935d625242689b9858fd5",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f58876b493391c7de8c805b4ea7b1c98c172ba142b43690235a23e7816f08fd9",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:694d2410a1f142f44bb0327681203c259e054f839cd92dd1d989254ebd33d801",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7961bb7162329a53c4bdabc47d55841e83e2ddcd9b55ef2bd1ffadc408b9e085",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:acf5a21ce3f4dff0c8d9e67f64bf0ae611cb0ecebc5e2477d1245e6e40c738ca",
                    "size": 10436796
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:036b87b153ba13052f564fcd755efd95aa89a988c8025765f2dc7814363e967e",
                    "size": 469
                }
            ]
        },
        "xenial-20230911": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:c5b51cc2fc5055b91c97f9612debb0185aa934180e3e2e34ea5456763d35e076",
                "size": 9117
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:828b35a09f0b2f3d1dead43aa2468ff5eba6c463423b3fff7ee6d150f6fd1b6b",
                    "size": 41239253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:66927c6d1d3d2e9321c4893f7f2105b7cd23dfb082853d97ec08f188e271e612",
                    "size": 854
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:000560be91651dcbf476ebacb8bf1f1339694a3327f8e6da2519e0b29b33eb5d",
                    "size": 479
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6225a0253717abdc2ee23ea211c1c439c93b84231ec0a4f1c74762a205ba7234",
                    "size": 173
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:93e52b0c0598f0c3e1d0c3e67ba5d618b2ed1092e3f97d76a8abc531031c1626",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7267aece0f795d4bb50f8f3418222540d95ca56bc150521fbf2dd9bd2b5b0ba9",
                    "size": 10401597
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fe3c517ce4221299c45ebe6101d92d5ea48d133c657bebdcd4edd8d42a4471e4",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a988f84e73ac94b818c1f334ec3aab2edf6845a0a3a4241da66b3b868bcb6b7d",
                    "size": 1014
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5288a99c512295c690d8eff3e42d9e30a0e9bc0771f1219b98423c6f51b66f57",
                    "size": 279
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aa726400668d1e6f1fbf837b3733c9af6c0866a3df1fbf72532baee3f4d07d1d",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:508162e77cb0ade629fa434be892d12c97a4b11bf26ef99abd8bf2eb6cb77df2",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bbad0832eaa57962d6c8870c50c6687566d1611f316b490ee92e93263a29ae24",
                    "size": 10436816
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dcdb47f2515f3bfe7e29a35c0cb88206b802b5a8f5d7c445ea6443a66809fa89",
                    "size": 470
                }
            ]
        },
        "xenial-20231026": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:70eb8c00bb1d5b15623c8a5210f2715925fdea2a5169e4bb7ca68b67f9e2d123",
                "size": 9130
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:828b35a09f0b2f3d1dead43aa2468ff5eba6c463423b3fff7ee6d150f6fd1b6b",
                    "size": 41239253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:66927c6d1d3d2e9321c4893f7f2105b7cd23dfb082853d97ec08f188e271e612",
                    "size": 854
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:000560be91651dcbf476ebacb8bf1f1339694a3327f8e6da2519e0b29b33eb5d",
                    "size": 479
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6225a0253717abdc2ee23ea211c1c439c93b84231ec0a4f1c74762a205ba7234",
                    "size": 173
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b96e64059b97e533c3fe302c641574b8288eee000fea2c0f763ba36b5cdf080e",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f5857ed56335f3263d1616793ad85022cf4ee8195e4b7f742f717be540a6ae3f",
                    "size": 10401639
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a3820aef67542f343c26a5f2e2440476e4eb66da1adb33721176a5cfdaccfcbf",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:60255982e58b6e92160e03c48c2af8f71333d20874f4dd9b1a61ddc3da8f4900",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:55f90282dac2ad6a056ea5ef98cd9a0387d4af291d390f93e537c5936016b9e2",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6593d91c55ec0abcc6fb5b603089000fbc13340602693ec37feead321a74220d",
                    "size": 676
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0b70ae7575aaa78fd00e5e222c3518d5023be1a0f3244c78962cda0151a9e5c8",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:22b742e4ebc7aeac04528347e336a197ada16bf07ca87a9e3e127d36c80267cf",
                    "size": 10436755
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1d43aadd4e18615cc524518f9eb7a8c20deaf2c39cf9f85b61db9313ace11d8b",
                    "size": 469
                }
            ]
        },
        "xenial-20231103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:cc8683f007c13c6639219ce51f25772e994b40f5ea94d10d20c0a87e2980325b",
                "size": 9132
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:828b35a09f0b2f3d1dead43aa2468ff5eba6c463423b3fff7ee6d150f6fd1b6b",
                    "size": 41239253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:66927c6d1d3d2e9321c4893f7f2105b7cd23dfb082853d97ec08f188e271e612",
                    "size": 854
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:000560be91651dcbf476ebacb8bf1f1339694a3327f8e6da2519e0b29b33eb5d",
                    "size": 479
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6225a0253717abdc2ee23ea211c1c439c93b84231ec0a4f1c74762a205ba7234",
                    "size": 173
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:231707ec57ddbf493675e9f65950aa7ca22141877bb43a476053431a8a08dcd3",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6161589d01b2707b85894d1f019ceab7a9f381e3a4422d87a58b41b9bad063d8",
                    "size": 10401723
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4d8117799a1b7ab33aad0f7dfe2321e061997916578528607f91c7981d0f2073",
                    "size": 473576
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:77280eecd6ef52643519560b88e0f4c43b2e33fc9e2ce6a223338379ac2ad374",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:802524e8dd7bbc41330e76164608eecaa5824ff3a3ae02cb2e0c9895aae5443c",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3ee3b1b450b782dcdf73d24d45f7d98d59b00d7c0adbca3b39f62e8720b3dff5",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ae256dcb6204ffdfc6304f3771116a83269c1ad03f39b204bdaa4705ce8497c1",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e282f6e11264942791f34883e390644b477f567fd0e418b55ba9216973081d64",
                    "size": 10436843
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e7e7b1d13f2c1f4d11574ded52aff7aebbf7ec818cf4e9e44e952659e207d4f4",
                    "size": 466
                }
            ]
        },
        "xenial-20240103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:d3f8626c2eba5dabdef5c6a93c40a935b0cc0b3fd354dc079aa0e5aefa646b7b",
                "size": 9131
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:828b35a09f0b2f3d1dead43aa2468ff5eba6c463423b3fff7ee6d150f6fd1b6b",
                    "size": 41239253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:66927c6d1d3d2e9321c4893f7f2105b7cd23dfb082853d97ec08f188e271e612",
                    "size": 854
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:000560be91651dcbf476ebacb8bf1f1339694a3327f8e6da2519e0b29b33eb5d",
                    "size": 479
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6225a0253717abdc2ee23ea211c1c439c93b84231ec0a4f1c74762a205ba7234",
                    "size": 173
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4d6d080a689e43bd179f138bf36c7d3b73653c68925b6f7c7c209ae5291865f0",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dabea3e4ad1f5b16edbd01af9a0c5d60fb3689f755b6ff092cabd74eab91afc1",
                    "size": 10401670
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eb87f7bdc8ce4ba0fd57c836c1bb9e4a53ae733619b617f21bd6f8d80323e606",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e3da157eb4b6d5db4764911778151474b9acb211dcba742e9808232e314ad75d",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:17eb30ccd1441b18766ad529954b453eef22d5972d6b546f26172a90a681b481",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:263030d2e338672a58025d4df1834dd98e9ddaed85f29bc8a64c045d82eb21f5",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:815ad3389cd9d135b19c160123f9d9db79c73f7cc57a0372ec68e0bb0c9f17e8",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:547709b9e34ae03daee16f949e580f4c3f2d7370813d216a9541cf238de65c54",
                    "size": 10436764
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:50a88b03f668d5b97bf0da3010c881a15f576020cbc45995318227f41e7187cd",
                    "size": 469
                }
            ]
        },
        "xenial-20240105": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:5be4f9ebf9599922b5ac6520f86286b87fa91ea2b3b56551daee90492b7f3ad5",
                "size": 9131
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:828b35a09f0b2f3d1dead43aa2468ff5eba6c463423b3fff7ee6d150f6fd1b6b",
                    "size": 41239253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:66927c6d1d3d2e9321c4893f7f2105b7cd23dfb082853d97ec08f188e271e612",
                    "size": 854
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:000560be91651dcbf476ebacb8bf1f1339694a3327f8e6da2519e0b29b33eb5d",
                    "size": 479
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6225a0253717abdc2ee23ea211c1c439c93b84231ec0a4f1c74762a205ba7234",
                    "size": 173
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ec91cf1bf0baf7d370dfcbcbc902543398fe087931b6648938db662233cf5cb9",
                    "size": 2592226
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dc32359cf9245fb0f71f10a8c57a79c877781140faf7b96f11e9653d6149e091",
                    "size": 10401722
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7d41fd97aaea7e54760c9a430ddc52108a71283ff86dea5209cac8fec307be4b",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:609b88ceb27b3a7e28e59fbd818dfabe3fbae78a505de2e25e4afb2ccf81022b",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bcd17aafab38e19e95577d4a769a393c6d85636314e0ea3e80da606c5ddeab8c",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b6474d06c3b16bcdf93729ad9011f33690f40cadcd1baa1626a69a2c57fcfe5",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a6edab566cb45ef5cf588798fa07e85c36c0da80747baa1cdc9d57eeed7e5ff2",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f614caf18019d5d795b17a25ace56c0202c26d8fa7d3d2636e41a521fa0e420b",
                    "size": 10436824
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3144ff11f175b15b05ac1c1a03b14a028f3def21e24731a3ab3066c339854dee",
                    "size": 468
                }
            ]
        },
        "xenial-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:94902277ebb3d4a3f113ed62c4380a3dff88af6e0698a734530e0dc7298e7b03",
                "size": 9116
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:828b35a09f0b2f3d1dead43aa2468ff5eba6c463423b3fff7ee6d150f6fd1b6b",
                    "size": 41239253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:66927c6d1d3d2e9321c4893f7f2105b7cd23dfb082853d97ec08f188e271e612",
                    "size": 854
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:000560be91651dcbf476ebacb8bf1f1339694a3327f8e6da2519e0b29b33eb5d",
                    "size": 479
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6225a0253717abdc2ee23ea211c1c439c93b84231ec0a4f1c74762a205ba7234",
                    "size": 173
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2d432cba7a88aa7213f2a6a298f211c01a72cf05dcb32d4aa89f6807c7243876",
                    "size": 2592226
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7bba5c0f2e058c22fa4abe0817fb7ba38e8abc1584b003989cb47678703a1f7a",
                    "size": 10401702
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:91b66371d0dd13645524f21cf037579b3d018657ee21ea00425f16e0d49bb8d6",
                    "size": 473568
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:00cba3268bc2abbd60f653075e3eacfb083e087e72984dc1728e5401e25ce5a0",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f7c63af3f6855a061e78115e74bd01c5a8d8202f1617b1a1e7e21b250c601bfa",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:26db1c8a194f6f8de6172e419ae7b706c66a6ce519e2459a8708989c3507febf",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:58089be47f1b779dc3f0c7dc5fa625dd63c66cd02b0bb546be790f922fa63b34",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bcbb05efa77a55d587b0a1151df9d4a54687008ece48cf9c49dd1ba51fa31fca",
                    "size": 10436797
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c8a88e83b4edd1803eeb2e6f0a88e1d39094db145b5746ee6a94f021172466d8",
                    "size": 469
                }
            ]
        },
        "xenial-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:4b15cf093ad02ad2c0e81a8d95b19023ae3cc30be12eea9a01a08c1b034fc593",
                "size": 9115
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:828b35a09f0b2f3d1dead43aa2468ff5eba6c463423b3fff7ee6d150f6fd1b6b",
                    "size": 41239253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:66927c6d1d3d2e9321c4893f7f2105b7cd23dfb082853d97ec08f188e271e612",
                    "size": 854
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:000560be91651dcbf476ebacb8bf1f1339694a3327f8e6da2519e0b29b33eb5d",
                    "size": 479
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6225a0253717abdc2ee23ea211c1c439c93b84231ec0a4f1c74762a205ba7234",
                    "size": 173
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:618e4bc2eb1dcc8a0bf040b2f9de41802e04980e3f8010b818ab47474619c352",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ff4f778a2bffc9a46dec212955fc23ff04a6a8a724a1b756710b59ccbc79c321",
                    "size": 10401667
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1ae0303a4b066df0b123a9a81fe4bddc589f95de552f85aeb180c2af65be8d98",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f222ca38197c91411ec05a374a8fca41ff45cb7504da3207f9394cd656fe27a9",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a0770f57604d91407238f342bdb0dca551901c13a3a17ce8b13ff253f2407806",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ce65d3544c790d71e247c0093e77fd1fcb39a3186baaae4fce8037e94af644ce",
                    "size": 676
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f1a4c3f22e1a07c6690aa32964541064083bee8562b13e0138c1ecf238b26b54",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dff10f732ca63d8ff834141a52ffec3e0278ec79e1aacae1899f74f6d3718029",
                    "size": 10436739
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1edc9522433eb845ded23f8f41b26b7e968610d7d085e059452eb267f40fdfe2",
                    "size": 470
                }
            ]
        },
        "xenial-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:bb4b1fd744fbb2299587ee8bf8c8a3be069043a59a87e26fe1d2d9e650d75134",
                "size": 9117
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:828b35a09f0b2f3d1dead43aa2468ff5eba6c463423b3fff7ee6d150f6fd1b6b",
                    "size": 41239253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:66927c6d1d3d2e9321c4893f7f2105b7cd23dfb082853d97ec08f188e271e612",
                    "size": 854
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:000560be91651dcbf476ebacb8bf1f1339694a3327f8e6da2519e0b29b33eb5d",
                    "size": 479
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6225a0253717abdc2ee23ea211c1c439c93b84231ec0a4f1c74762a205ba7234",
                    "size": 173
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:360a81165402e3f145b4ce3c81978299fe8cd175ab4511076c10110eda6937c4",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7da85b795c15c137931168c5f60ae0345533a20a463b64472f250e50673c134c",
                    "size": 10401716
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:94e45c611031d6436edb54dba77ac0eac303c5dc01c9b31e3654bbe1cc11706a",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d31febf5a092bc81971851c7dab4f00411eb594eef0935d625242689b9858fd5",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f58876b493391c7de8c805b4ea7b1c98c172ba142b43690235a23e7816f08fd9",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:694d2410a1f142f44bb0327681203c259e054f839cd92dd1d989254ebd33d801",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7961bb7162329a53c4bdabc47d55841e83e2ddcd9b55ef2bd1ffadc408b9e085",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:acf5a21ce3f4dff0c8d9e67f64bf0ae611cb0ecebc5e2477d1245e6e40c738ca",
                    "size": 10436796
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:036b87b153ba13052f564fcd755efd95aa89a988c8025765f2dc7814363e967e",
                    "size": 469
                }
            ]
        },
        "xenial-build": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:c457da31ced492ee292c8b54a4d86e1d391b3c2683641189a3f17ce63f571c9b",
                "size": 10031
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:828b35a09f0b2f3d1dead43aa2468ff5eba6c463423b3fff7ee6d150f6fd1b6b",
                    "size": 41239253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:66927c6d1d3d2e9321c4893f7f2105b7cd23dfb082853d97ec08f188e271e612",
                    "size": 854
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:000560be91651dcbf476ebacb8bf1f1339694a3327f8e6da2519e0b29b33eb5d",
                    "size": 479
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6225a0253717abdc2ee23ea211c1c439c93b84231ec0a4f1c74762a205ba7234",
                    "size": 173
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6b0cd637536e7234ddf5804c88c38e1241c510c4848b3623e275b41050c9a48",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4d01955b37a231a2ad458cd3054e1f8d29af5c7cb9e542079434acb8f0ee031d",
                    "size": 10401686
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7d2b5ac10dc1a042a8c8476b8c4e3b8073fe102421ff5d8aaef2b9c40715af9f",
                    "size": 158400748
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0a18590e9f276abf0fcccc3583b7d091329c28353bfe2c4d8027506b30ec0157",
                    "size": 473566
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:da32e069de6f2f914bd8f94776e495a5ae932dbcdf58a4adfc7abf31cd506f61",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6ba1e1a37104a894ca405eb17f80a8c6b601ad9f4d21e148a025eefa56d9ab4e",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e45e92dd37f33ccbc743124bada215eea2d899ff73295befeebf4366532d6f5d",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:20e474f4b38e7834f3a4bc377878e95477e47723a1d385626da55a90b310e540",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8acb62314db905d9f57a2dff5c6e1e71c33ffde483b6f0618e1fad0c97a635eb",
                    "size": 1428202
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b5f2c1666694ed5da844d564862a69c3867720b2a70ffab3797457a2af3489d3",
                    "size": 468
                }
            ]
        },
        "xenial-build-20230911": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:a4b8aa5a46b9752baf3924ecea502db096451fa3a1479520152ac452b827f375",
                "size": 10034
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:828b35a09f0b2f3d1dead43aa2468ff5eba6c463423b3fff7ee6d150f6fd1b6b",
                    "size": 41239253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:66927c6d1d3d2e9321c4893f7f2105b7cd23dfb082853d97ec08f188e271e612",
                    "size": 854
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:000560be91651dcbf476ebacb8bf1f1339694a3327f8e6da2519e0b29b33eb5d",
                    "size": 479
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6225a0253717abdc2ee23ea211c1c439c93b84231ec0a4f1c74762a205ba7234",
                    "size": 173
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:93e52b0c0598f0c3e1d0c3e67ba5d618b2ed1092e3f97d76a8abc531031c1626",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7267aece0f795d4bb50f8f3418222540d95ca56bc150521fbf2dd9bd2b5b0ba9",
                    "size": 10401597
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ea7fff474a82f579ef41a1a0360e2a30db20634dc3274a320eec8f6c09970387",
                    "size": 158412696
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9282d4b89a927c9bbdc843bd49995e62c4337724c0b0b3d1b3077130ccdfa118",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:56fcaa38cff268d411cb10635454f5b63475e538117ef4a6f4ed7aca575c1e6e",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:08b5208ead8ebe07245d9aa3dfd2d575a789e8605382b3cbfa439a63bb426414",
                    "size": 279
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f985344973338bfaa60f46ba5e1dc21ca22a3abfc80ec5eb851d99815bae74e3",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2fe32c10a6bb67a9d94b383d3e1df358fdbad058f47d341bd91214de5a53a4d9",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4e550df74c5bcdb1b74150788c6e214744eeb7a1326c5065db32756e5a26a497",
                    "size": 1428230
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0b206c0a3278e217921d719eb157875127c5946103061cd22153450f334c389d",
                    "size": 470
                }
            ]
        },
        "xenial-build-20231026": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:d53d8ac249d0963e82bdaedbf51b45a2f97f78d2795d4487ecd65cf99f9e3c70",
                "size": 10052
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:828b35a09f0b2f3d1dead43aa2468ff5eba6c463423b3fff7ee6d150f6fd1b6b",
                    "size": 41239253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:66927c6d1d3d2e9321c4893f7f2105b7cd23dfb082853d97ec08f188e271e612",
                    "size": 854
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:000560be91651dcbf476ebacb8bf1f1339694a3327f8e6da2519e0b29b33eb5d",
                    "size": 479
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6225a0253717abdc2ee23ea211c1c439c93b84231ec0a4f1c74762a205ba7234",
                    "size": 173
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e5c90503fdd145d2da659706932c54ee41449f9063769f052684b096a541411a",
                    "size": 2592226
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6d2819143bdd2c37e994fb3a1b906871960a6d56aadbe673c54358d6ada281e7",
                    "size": 10401717
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3d4577f4c4ae91930b5110ca48a3f804debb0ca5d09a088bf18ea948dfcca35d",
                    "size": 158401394
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c4922bb7a9e9ba15beadc34ce5b120db0f7af96edd8b74c1861c694479413c34",
                    "size": 473571
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0db7d3ecf033f912f53e9fab93d49a40593259bb1cf689781a80c2bc762d98f4",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:28be0529668b174560b7670a910fde18e4d2f789fdc4c73ca4c2e7d8415228f6",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9274cb20761a30485c80b4018aadca7fa62e21185347032143571e29cc08076a",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f1feaa565aa34a57bd3a61c10752e235da3d9cd53d832648a9ecde4acf4290d3",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a0826331d0ecf64fe1e56e38cf7424f606a1a1e0295db644028eb765a7a45d1d",
                    "size": 1428348
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a4ae78756e2147d67ecdbcc3c00e6c456328918a4b272c6d673dfde02aaba41c",
                    "size": 467
                }
            ]
        },
        "xenial-build-20231103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:e4e3e83e78659006020d18dda08a2d8baa2b35d884450cb7f6ee95c0d5ee1629",
                "size": 10042
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:828b35a09f0b2f3d1dead43aa2468ff5eba6c463423b3fff7ee6d150f6fd1b6b",
                    "size": 41239253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:66927c6d1d3d2e9321c4893f7f2105b7cd23dfb082853d97ec08f188e271e612",
                    "size": 854
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:000560be91651dcbf476ebacb8bf1f1339694a3327f8e6da2519e0b29b33eb5d",
                    "size": 479
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6225a0253717abdc2ee23ea211c1c439c93b84231ec0a4f1c74762a205ba7234",
                    "size": 173
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e649d248074a12eb9706ade7353b84338837b8c4e292493ee451e0e7840b6b74",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1100141bd1846d0b7dddc6f88af902fc4c7ddd2a776eba322263de039e12c46",
                    "size": 10401708
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:641492deaa8b96a6c54c91b98d30170fe18b59d3168cb231bb4cb798b186d456",
                    "size": 158399411
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:71917e0a79448bed2f6e270e0ccf152c07987959d044cac2b5af2ddbdc87312d",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a3b23f64ebf90eefc74aa543a8a26434a46e074eb81127807c05e4a12345b2d7",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c206aedc58d1f41d8e12d01c930d034a1eb5b84ce68e64ee23a5aba04f8dfa32",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2796e27a77882b0512de3cd54b0386aede7cc74d510bb4b7a6648d463befbd53",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:001b5d5813c5ff9f8172645d6085b091fb5207cd18db23123b66d8c69d2c83e7",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d1cb71bd377297c6338e893948fbfb7bf331c147eb832c3f6445095ce9dcfaa2",
                    "size": 1428176
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:03ff165d0f1531a2a8f7649fdd01b3f28f7edb75cc69beeaa79ceb6fae77731b",
                    "size": 468
                }
            ]
        },
        "xenial-build-20240103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:b8c0de1c6b392a52755e817abdd1b72d59ad024c47b55c7f11ba2cc44b52620c",
                "size": 10051
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:828b35a09f0b2f3d1dead43aa2468ff5eba6c463423b3fff7ee6d150f6fd1b6b",
                    "size": 41239253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:66927c6d1d3d2e9321c4893f7f2105b7cd23dfb082853d97ec08f188e271e612",
                    "size": 854
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:000560be91651dcbf476ebacb8bf1f1339694a3327f8e6da2519e0b29b33eb5d",
                    "size": 479
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6225a0253717abdc2ee23ea211c1c439c93b84231ec0a4f1c74762a205ba7234",
                    "size": 173
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4d6d080a689e43bd179f138bf36c7d3b73653c68925b6f7c7c209ae5291865f0",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:96ca97dd4a9d8d2121b61ee757f36af7d37146503abab83e376bdaef77e0aac6",
                    "size": 10401646
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ff53c957c84783ff361ce29fd4293506104f95c264b68df2aa9d7c74e01af56e",
                    "size": 158399972
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0c0bdf54a89b7cfd3c51c4e0aaf8a06cbea57098eb5bf826aec29e6e16a47fde",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:76b11fd04e3c8917eacce18aa6ae5872190dd0af9fc97ee8db89872bd4372cad",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9174cd4a6aaa3a9b21b9be644bd080e1fc7961b2ced18863a319b07939373434",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5f260620584ebdb00e0caa17275444acd4c4b9f01a54dc4e13e6eba57a79e685",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:22d595d73f62ce863c8529bdb5135ea8a9ffbddf0a8b2f2ae703205f5d8e1fda",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7b23f05b45d9b550796805618f64e42be29e5d71f149c105244a85cab5ac9258",
                    "size": 1428137
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:79fb01f0c5c6e57fc52fbbb1c0ba2c91ba56213f8fa90789a5706e5d0711b1af",
                    "size": 468
                }
            ]
        },
        "xenial-build-20240105": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:5347e98027a568ed2afd1c6108f50c9de305ed2be78354a655a2a48ddef04106",
                "size": 10048
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:828b35a09f0b2f3d1dead43aa2468ff5eba6c463423b3fff7ee6d150f6fd1b6b",
                    "size": 41239253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:66927c6d1d3d2e9321c4893f7f2105b7cd23dfb082853d97ec08f188e271e612",
                    "size": 854
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:000560be91651dcbf476ebacb8bf1f1339694a3327f8e6da2519e0b29b33eb5d",
                    "size": 479
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6225a0253717abdc2ee23ea211c1c439c93b84231ec0a4f1c74762a205ba7234",
                    "size": 173
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:55931064af3de131f44cf028c5debc02aef393b9cd42ec407720ca069042a7ec",
                    "size": 2592226
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8600c795ab3a21eb7243156a34e69676e4753a4414edfab39ccfec90ad1a32a2",
                    "size": 10401593
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3fa8822d28fe24e22a62973d9811ee4d96e8af6d1f9f874d1476715d0a27cd37",
                    "size": 158399600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3854ea8b756f9f0372c0731e7d47903792b6cee3174a5fc49ea89d811829cc62",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:43493bb11414f31deb88e4a716facab47b7c8b570cb0e1b74eac433d9619b2e0",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ca953173f74574f42a3ede4291d5965a60e45a3307b8f52ce3858f99a881ab74",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d3108b7daa48c5105d62d1e5fb551f8989251660ec4a9b6521e11dc078a03743",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fa0d7e23aeba15b7c47d251af29468670348b4ee95173a3ba0af2e5829425d4f",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5403a8fdd0652bdf96a1ae281aaa3b966f0021064e6935c2c6d84bad273e0b2c",
                    "size": 1428113
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:87372312498843d5e799793b37c9d632bb3c5b26d215364a4e6c64fce8a0b4e1",
                    "size": 468
                }
            ]
        },
        "xenial-build-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:6897f9bbd600c2a6496c8eb05ded3c7dc49a5fb9497bf066e86b774d240e6c40",
                "size": 10035
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:828b35a09f0b2f3d1dead43aa2468ff5eba6c463423b3fff7ee6d150f6fd1b6b",
                    "size": 41239253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:66927c6d1d3d2e9321c4893f7f2105b7cd23dfb082853d97ec08f188e271e612",
                    "size": 854
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:000560be91651dcbf476ebacb8bf1f1339694a3327f8e6da2519e0b29b33eb5d",
                    "size": 479
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6225a0253717abdc2ee23ea211c1c439c93b84231ec0a4f1c74762a205ba7234",
                    "size": 173
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:675bb80b6d2eb3f15849023e773eaa36dc927be38fc7b86047f27ed09fd71e83",
                    "size": 2592226
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ae40c03bf5640136266cf662b151e2f4981aee3f7c32b37401a39c5e8c925965",
                    "size": 10401672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:08583499f3631d389045575dafa1e93799c6b8e65d6e3c1ccd93caad9fe21da9",
                    "size": 158400376
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3fd8de5c6d0411371639b29a61c28fd6be06990202c4afb87824228000beb34a",
                    "size": 473578
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e4b0c42083a31eb3003b4538e3b5cb0316a1f7db858cecfa5f0981073ddea6ef",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:64366b90a11015e3e6d8ed1af3b8de4915c96b9ad6376f8034ad289108f4df42",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:589599d477cb293cd56f9ae4fdb1c4a74a1ab46666cc2e6c5fe709b8bcf745c6",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4e82a14e32885e195229bd39fa368c02e9b2bdb4fe3a86682830bf7b9831050d",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fba77c56ecbdd14f80b57b774cd507fc6b75a44eefc40fc2b66cf33a6ca55c5e",
                    "size": 1428144
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:33f92c897739003b5d97ee7c0a72239b74b0f4dd7abad52d9940049a9afb9c25",
                    "size": 468
                }
            ]
        },
        "xenial-build-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:b357e4f4762892c1aff741b33dac4b2911677aa8e344a46ab4365b5a2fdf8447",
                "size": 10034
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:828b35a09f0b2f3d1dead43aa2468ff5eba6c463423b3fff7ee6d150f6fd1b6b",
                    "size": 41239253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:66927c6d1d3d2e9321c4893f7f2105b7cd23dfb082853d97ec08f188e271e612",
                    "size": 854
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:000560be91651dcbf476ebacb8bf1f1339694a3327f8e6da2519e0b29b33eb5d",
                    "size": 479
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6225a0253717abdc2ee23ea211c1c439c93b84231ec0a4f1c74762a205ba7234",
                    "size": 173
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:618e4bc2eb1dcc8a0bf040b2f9de41802e04980e3f8010b818ab47474619c352",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:292fff3f93205a224c492f057667580495a65289dca7db06dd4b8866cdcf4c5c",
                    "size": 10401700
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:faf4f9180a006aa0653c73803b7ce24ce0545213fef56a75c17c18d27064ef6d",
                    "size": 158399817
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:17206025dd97fd0497e9872040f8868be056027e9373ec18e044801faaea230b",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:407ba286b331ebec1d98cbd0bfe067add65d59caa7f4e6a847aeb9d6ea629f2e",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a44bc9392c6341aabb69e8d6f2c653063b50c5c06f736cc4b0ac0d192ac36561",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:de7099f296212ebb1a525f4f54e886fb1c23de230cd56ce7dc1fdabe71ef2230",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9c8a889ed37053b900d50a606e5d96bc4414d1bd50b4936e1fe9c93cb0a56b41",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:74e2a4bb0d51a78960051bbb270f736c1a6193df20c90278fd3e9b2b3d3e5e09",
                    "size": 1428164
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bf70d1c106c81e550f63639a948f11ae3865064083ce71d9ea240801d1d691d5",
                    "size": 469
                }
            ]
        },
        "xenial-build-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:c457da31ced492ee292c8b54a4d86e1d391b3c2683641189a3f17ce63f571c9b",
                "size": 10031
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:828b35a09f0b2f3d1dead43aa2468ff5eba6c463423b3fff7ee6d150f6fd1b6b",
                    "size": 41239253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:66927c6d1d3d2e9321c4893f7f2105b7cd23dfb082853d97ec08f188e271e612",
                    "size": 854
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:000560be91651dcbf476ebacb8bf1f1339694a3327f8e6da2519e0b29b33eb5d",
                    "size": 479
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6225a0253717abdc2ee23ea211c1c439c93b84231ec0a4f1c74762a205ba7234",
                    "size": 173
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6b0cd637536e7234ddf5804c88c38e1241c510c4848b3623e275b41050c9a48",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4d01955b37a231a2ad458cd3054e1f8d29af5c7cb9e542079434acb8f0ee031d",
                    "size": 10401686
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7d2b5ac10dc1a042a8c8476b8c4e3b8073fe102421ff5d8aaef2b9c40715af9f",
                    "size": 158400748
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0a18590e9f276abf0fcccc3583b7d091329c28353bfe2c4d8027506b30ec0157",
                    "size": 473566
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:da32e069de6f2f914bd8f94776e495a5ae932dbcdf58a4adfc7abf31cd506f61",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6ba1e1a37104a894ca405eb17f80a8c6b601ad9f4d21e148a025eefa56d9ab4e",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e45e92dd37f33ccbc743124bada215eea2d899ff73295befeebf4366532d6f5d",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:20e474f4b38e7834f3a4bc377878e95477e47723a1d385626da55a90b310e540",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8acb62314db905d9f57a2dff5c6e1e71c33ffde483b6f0618e1fad0c97a635eb",
                    "size": 1428202
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b5f2c1666694ed5da844d564862a69c3867720b2a70ffab3797457a2af3489d3",
                    "size": 468
                }
            ]
        },
        "xenial-run": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:bb4b1fd744fbb2299587ee8bf8c8a3be069043a59a87e26fe1d2d9e650d75134",
                "size": 9117
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:828b35a09f0b2f3d1dead43aa2468ff5eba6c463423b3fff7ee6d150f6fd1b6b",
                    "size": 41239253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:66927c6d1d3d2e9321c4893f7f2105b7cd23dfb082853d97ec08f188e271e612",
                    "size": 854
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:000560be91651dcbf476ebacb8bf1f1339694a3327f8e6da2519e0b29b33eb5d",
                    "size": 479
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6225a0253717abdc2ee23ea211c1c439c93b84231ec0a4f1c74762a205ba7234",
                    "size": 173
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:360a81165402e3f145b4ce3c81978299fe8cd175ab4511076c10110eda6937c4",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7da85b795c15c137931168c5f60ae0345533a20a463b64472f250e50673c134c",
                    "size": 10401716
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:94e45c611031d6436edb54dba77ac0eac303c5dc01c9b31e3654bbe1cc11706a",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d31febf5a092bc81971851c7dab4f00411eb594eef0935d625242689b9858fd5",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f58876b493391c7de8c805b4ea7b1c98c172ba142b43690235a23e7816f08fd9",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:694d2410a1f142f44bb0327681203c259e054f839cd92dd1d989254ebd33d801",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7961bb7162329a53c4bdabc47d55841e83e2ddcd9b55ef2bd1ffadc408b9e085",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:acf5a21ce3f4dff0c8d9e67f64bf0ae611cb0ecebc5e2477d1245e6e40c738ca",
                    "size": 10436796
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:036b87b153ba13052f564fcd755efd95aa89a988c8025765f2dc7814363e967e",
                    "size": 469
                }
            ]
        },
        "xenial-run-20230911": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:c5b51cc2fc5055b91c97f9612debb0185aa934180e3e2e34ea5456763d35e076",
                "size": 9117
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:828b35a09f0b2f3d1dead43aa2468ff5eba6c463423b3fff7ee6d150f6fd1b6b",
                    "size": 41239253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:66927c6d1d3d2e9321c4893f7f2105b7cd23dfb082853d97ec08f188e271e612",
                    "size": 854
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:000560be91651dcbf476ebacb8bf1f1339694a3327f8e6da2519e0b29b33eb5d",
                    "size": 479
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6225a0253717abdc2ee23ea211c1c439c93b84231ec0a4f1c74762a205ba7234",
                    "size": 173
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:93e52b0c0598f0c3e1d0c3e67ba5d618b2ed1092e3f97d76a8abc531031c1626",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7267aece0f795d4bb50f8f3418222540d95ca56bc150521fbf2dd9bd2b5b0ba9",
                    "size": 10401597
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fe3c517ce4221299c45ebe6101d92d5ea48d133c657bebdcd4edd8d42a4471e4",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a988f84e73ac94b818c1f334ec3aab2edf6845a0a3a4241da66b3b868bcb6b7d",
                    "size": 1014
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5288a99c512295c690d8eff3e42d9e30a0e9bc0771f1219b98423c6f51b66f57",
                    "size": 279
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aa726400668d1e6f1fbf837b3733c9af6c0866a3df1fbf72532baee3f4d07d1d",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:508162e77cb0ade629fa434be892d12c97a4b11bf26ef99abd8bf2eb6cb77df2",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bbad0832eaa57962d6c8870c50c6687566d1611f316b490ee92e93263a29ae24",
                    "size": 10436816
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dcdb47f2515f3bfe7e29a35c0cb88206b802b5a8f5d7c445ea6443a66809fa89",
                    "size": 470
                }
            ]
        },
        "xenial-run-20231026": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:70eb8c00bb1d5b15623c8a5210f2715925fdea2a5169e4bb7ca68b67f9e2d123",
                "size": 9130
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:828b35a09f0b2f3d1dead43aa2468ff5eba6c463423b3fff7ee6d150f6fd1b6b",
                    "size": 41239253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:66927c6d1d3d2e9321c4893f7f2105b7cd23dfb082853d97ec08f188e271e612",
                    "size": 854
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:000560be91651dcbf476ebacb8bf1f1339694a3327f8e6da2519e0b29b33eb5d",
                    "size": 479
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6225a0253717abdc2ee23ea211c1c439c93b84231ec0a4f1c74762a205ba7234",
                    "size": 173
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b96e64059b97e533c3fe302c641574b8288eee000fea2c0f763ba36b5cdf080e",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f5857ed56335f3263d1616793ad85022cf4ee8195e4b7f742f717be540a6ae3f",
                    "size": 10401639
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a3820aef67542f343c26a5f2e2440476e4eb66da1adb33721176a5cfdaccfcbf",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:60255982e58b6e92160e03c48c2af8f71333d20874f4dd9b1a61ddc3da8f4900",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:55f90282dac2ad6a056ea5ef98cd9a0387d4af291d390f93e537c5936016b9e2",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6593d91c55ec0abcc6fb5b603089000fbc13340602693ec37feead321a74220d",
                    "size": 676
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0b70ae7575aaa78fd00e5e222c3518d5023be1a0f3244c78962cda0151a9e5c8",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:22b742e4ebc7aeac04528347e336a197ada16bf07ca87a9e3e127d36c80267cf",
                    "size": 10436755
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1d43aadd4e18615cc524518f9eb7a8c20deaf2c39cf9f85b61db9313ace11d8b",
                    "size": 469
                }
            ]
        },
        "xenial-run-20231103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:cc8683f007c13c6639219ce51f25772e994b40f5ea94d10d20c0a87e2980325b",
                "size": 9132
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:828b35a09f0b2f3d1dead43aa2468ff5eba6c463423b3fff7ee6d150f6fd1b6b",
                    "size": 41239253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:66927c6d1d3d2e9321c4893f7f2105b7cd23dfb082853d97ec08f188e271e612",
                    "size": 854
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:000560be91651dcbf476ebacb8bf1f1339694a3327f8e6da2519e0b29b33eb5d",
                    "size": 479
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6225a0253717abdc2ee23ea211c1c439c93b84231ec0a4f1c74762a205ba7234",
                    "size": 173
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:231707ec57ddbf493675e9f65950aa7ca22141877bb43a476053431a8a08dcd3",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6161589d01b2707b85894d1f019ceab7a9f381e3a4422d87a58b41b9bad063d8",
                    "size": 10401723
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4d8117799a1b7ab33aad0f7dfe2321e061997916578528607f91c7981d0f2073",
                    "size": 473576
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:77280eecd6ef52643519560b88e0f4c43b2e33fc9e2ce6a223338379ac2ad374",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:802524e8dd7bbc41330e76164608eecaa5824ff3a3ae02cb2e0c9895aae5443c",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3ee3b1b450b782dcdf73d24d45f7d98d59b00d7c0adbca3b39f62e8720b3dff5",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ae256dcb6204ffdfc6304f3771116a83269c1ad03f39b204bdaa4705ce8497c1",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e282f6e11264942791f34883e390644b477f567fd0e418b55ba9216973081d64",
                    "size": 10436843
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e7e7b1d13f2c1f4d11574ded52aff7aebbf7ec818cf4e9e44e952659e207d4f4",
                    "size": 466
                }
            ]
        },
        "xenial-run-20240103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:d3f8626c2eba5dabdef5c6a93c40a935b0cc0b3fd354dc079aa0e5aefa646b7b",
                "size": 9131
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:828b35a09f0b2f3d1dead43aa2468ff5eba6c463423b3fff7ee6d150f6fd1b6b",
                    "size": 41239253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:66927c6d1d3d2e9321c4893f7f2105b7cd23dfb082853d97ec08f188e271e612",
                    "size": 854
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:000560be91651dcbf476ebacb8bf1f1339694a3327f8e6da2519e0b29b33eb5d",
                    "size": 479
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6225a0253717abdc2ee23ea211c1c439c93b84231ec0a4f1c74762a205ba7234",
                    "size": 173
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4d6d080a689e43bd179f138bf36c7d3b73653c68925b6f7c7c209ae5291865f0",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dabea3e4ad1f5b16edbd01af9a0c5d60fb3689f755b6ff092cabd74eab91afc1",
                    "size": 10401670
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eb87f7bdc8ce4ba0fd57c836c1bb9e4a53ae733619b617f21bd6f8d80323e606",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e3da157eb4b6d5db4764911778151474b9acb211dcba742e9808232e314ad75d",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:17eb30ccd1441b18766ad529954b453eef22d5972d6b546f26172a90a681b481",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:263030d2e338672a58025d4df1834dd98e9ddaed85f29bc8a64c045d82eb21f5",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:815ad3389cd9d135b19c160123f9d9db79c73f7cc57a0372ec68e0bb0c9f17e8",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:547709b9e34ae03daee16f949e580f4c3f2d7370813d216a9541cf238de65c54",
                    "size": 10436764
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:50a88b03f668d5b97bf0da3010c881a15f576020cbc45995318227f41e7187cd",
                    "size": 469
                }
            ]
        },
        "xenial-run-20240105": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:5be4f9ebf9599922b5ac6520f86286b87fa91ea2b3b56551daee90492b7f3ad5",
                "size": 9131
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:828b35a09f0b2f3d1dead43aa2468ff5eba6c463423b3fff7ee6d150f6fd1b6b",
                    "size": 41239253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:66927c6d1d3d2e9321c4893f7f2105b7cd23dfb082853d97ec08f188e271e612",
                    "size": 854
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:000560be91651dcbf476ebacb8bf1f1339694a3327f8e6da2519e0b29b33eb5d",
                    "size": 479
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6225a0253717abdc2ee23ea211c1c439c93b84231ec0a4f1c74762a205ba7234",
                    "size": 173
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ec91cf1bf0baf7d370dfcbcbc902543398fe087931b6648938db662233cf5cb9",
                    "size": 2592226
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dc32359cf9245fb0f71f10a8c57a79c877781140faf7b96f11e9653d6149e091",
                    "size": 10401722
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7d41fd97aaea7e54760c9a430ddc52108a71283ff86dea5209cac8fec307be4b",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:609b88ceb27b3a7e28e59fbd818dfabe3fbae78a505de2e25e4afb2ccf81022b",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bcd17aafab38e19e95577d4a769a393c6d85636314e0ea3e80da606c5ddeab8c",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b6474d06c3b16bcdf93729ad9011f33690f40cadcd1baa1626a69a2c57fcfe5",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a6edab566cb45ef5cf588798fa07e85c36c0da80747baa1cdc9d57eeed7e5ff2",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f614caf18019d5d795b17a25ace56c0202c26d8fa7d3d2636e41a521fa0e420b",
                    "size": 10436824
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3144ff11f175b15b05ac1c1a03b14a028f3def21e24731a3ab3066c339854dee",
                    "size": 468
                }
            ]
        },
        "xenial-run-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:94902277ebb3d4a3f113ed62c4380a3dff88af6e0698a734530e0dc7298e7b03",
                "size": 9116
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:828b35a09f0b2f3d1dead43aa2468ff5eba6c463423b3fff7ee6d150f6fd1b6b",
                    "size": 41239253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:66927c6d1d3d2e9321c4893f7f2105b7cd23dfb082853d97ec08f188e271e612",
                    "size": 854
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:000560be91651dcbf476ebacb8bf1f1339694a3327f8e6da2519e0b29b33eb5d",
                    "size": 479
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6225a0253717abdc2ee23ea211c1c439c93b84231ec0a4f1c74762a205ba7234",
                    "size": 173
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2d432cba7a88aa7213f2a6a298f211c01a72cf05dcb32d4aa89f6807c7243876",
                    "size": 2592226
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7bba5c0f2e058c22fa4abe0817fb7ba38e8abc1584b003989cb47678703a1f7a",
                    "size": 10401702
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:91b66371d0dd13645524f21cf037579b3d018657ee21ea00425f16e0d49bb8d6",
                    "size": 473568
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:00cba3268bc2abbd60f653075e3eacfb083e087e72984dc1728e5401e25ce5a0",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f7c63af3f6855a061e78115e74bd01c5a8d8202f1617b1a1e7e21b250c601bfa",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:26db1c8a194f6f8de6172e419ae7b706c66a6ce519e2459a8708989c3507febf",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:58089be47f1b779dc3f0c7dc5fa625dd63c66cd02b0bb546be790f922fa63b34",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bcbb05efa77a55d587b0a1151df9d4a54687008ece48cf9c49dd1ba51fa31fca",
                    "size": 10436797
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c8a88e83b4edd1803eeb2e6f0a88e1d39094db145b5746ee6a94f021172466d8",
                    "size": 469
                }
            ]
        },
        "xenial-run-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:4b15cf093ad02ad2c0e81a8d95b19023ae3cc30be12eea9a01a08c1b034fc593",
                "size": 9115
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:828b35a09f0b2f3d1dead43aa2468ff5eba6c463423b3fff7ee6d150f6fd1b6b",
                    "size": 41239253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:66927c6d1d3d2e9321c4893f7f2105b7cd23dfb082853d97ec08f188e271e612",
                    "size": 854
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:000560be91651dcbf476ebacb8bf1f1339694a3327f8e6da2519e0b29b33eb5d",
                    "size": 479
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6225a0253717abdc2ee23ea211c1c439c93b84231ec0a4f1c74762a205ba7234",
                    "size": 173
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:618e4bc2eb1dcc8a0bf040b2f9de41802e04980e3f8010b818ab47474619c352",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ff4f778a2bffc9a46dec212955fc23ff04a6a8a724a1b756710b59ccbc79c321",
                    "size": 10401667
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1ae0303a4b066df0b123a9a81fe4bddc589f95de552f85aeb180c2af65be8d98",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f222ca38197c91411ec05a374a8fca41ff45cb7504da3207f9394cd656fe27a9",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a0770f57604d91407238f342bdb0dca551901c13a3a17ce8b13ff253f2407806",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ce65d3544c790d71e247c0093e77fd1fcb39a3186baaae4fce8037e94af644ce",
                    "size": 676
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f1a4c3f22e1a07c6690aa32964541064083bee8562b13e0138c1ecf238b26b54",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dff10f732ca63d8ff834141a52ffec3e0278ec79e1aacae1899f74f6d3718029",
                    "size": 10436739
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1edc9522433eb845ded23f8f41b26b7e968610d7d085e059452eb267f40fdfe2",
                    "size": 470
                }
            ]
        },
        "xenial-run-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:bb4b1fd744fbb2299587ee8bf8c8a3be069043a59a87e26fe1d2d9e650d75134",
                "size": 9117
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:828b35a09f0b2f3d1dead43aa2468ff5eba6c463423b3fff7ee6d150f6fd1b6b",
                    "size": 41239253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:66927c6d1d3d2e9321c4893f7f2105b7cd23dfb082853d97ec08f188e271e612",
                    "size": 854
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:000560be91651dcbf476ebacb8bf1f1339694a3327f8e6da2519e0b29b33eb5d",
                    "size": 479
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6225a0253717abdc2ee23ea211c1c439c93b84231ec0a4f1c74762a205ba7234",
                    "size": 173
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:360a81165402e3f145b4ce3c81978299fe8cd175ab4511076c10110eda6937c4",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7da85b795c15c137931168c5f60ae0345533a20a463b64472f250e50673c134c",
                    "size": 10401716
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:94e45c611031d6436edb54dba77ac0eac303c5dc01c9b31e3654bbe1cc11706a",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d31febf5a092bc81971851c7dab4f00411eb594eef0935d625242689b9858fd5",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f58876b493391c7de8c805b4ea7b1c98c172ba142b43690235a23e7816f08fd9",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:694d2410a1f142f44bb0327681203c259e054f839cd92dd1d989254ebd33d801",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7961bb7162329a53c4bdabc47d55841e83e2ddcd9b55ef2bd1ffadc408b9e085",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:acf5a21ce3f4dff0c8d9e67f64bf0ae611cb0ecebc5e2477d1245e6e40c738ca",
                    "size": 10436796
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:036b87b153ba13052f564fcd755efd95aa89a988c8025765f2dc7814363e967e",
                    "size": 469
                }
            ]
        }
    },
    "tags": [
        "20230829",
        "20230904",
        "20230911",
        "20231026",
        "20231103",
        "20240103",
        "20240105",
        "20240401",
        "20240408",
        "20240429",
        "bionic",
        "bionic-20230829",
        "bionic-20230904",
        "bionic-20230911",
        "bionic-20231026",
        "bionic-20231103",
        "bionic-20240103",
        "bionic-20240105",
        "bionic-20240401",
        "bionic-20240408",
        "bionic-20240429",
        "bionic-build",
        "bionic-build-20230829",
        "bionic-build-20230904",
        "bionic-build-20230911",
        "bionic-build-20231026",
        "bionic-build-20231103",
        "bionic-build-20240103",
        "bionic-build-20240105",
        "bionic-build-20240401",
        "bionic-build-20240408",
        "bionic-build-20240429",
        "bionic-run",
        "bionic-run-20230829",
        "bionic-run-20230904",
        "bionic-run-20230911",
        "bionic-run-20231026",
        "bionic-run-20231103",
        "bionic-run-20240103",
        "bionic-run-20240105",
        "bionic-run-20240401",
        "bionic-run-20240408",
        "bionic-run-20240429",
        "build",
        "build-20230829",
        "build-20230904",
        "build-20230911",
        "build-20231026",
        "build-20231103",
        "build-20240103",
        "build-20240105",
        "build-20240401",
        "build-20240408",
        "build-20240429",
        "focal",
        "focal-20230829",
        "focal-20230904",
        "focal-20230911",
        "focal-20231026",
        "focal-20231103",
        "focal-20240103",
        "focal-20240105",
        "focal-20240401",
        "focal-20240408",
        "focal-20240429",
        "focal-build",
        "focal-build-20230829",
        "focal-build-20230904",
        "focal-build-20230911",
        "focal-build-20231026",
        "focal-build-20231103",
        "focal-build-20240103",
        "focal-build-20240105",
        "focal-build-20240401",
        "focal-build-20240408",
        "focal-build-20240429",
        "focal-run",
        "focal-run-20230829",
        "focal-run-20230904",
        "focal-run-20230911",
        "focal-run-20231026",
        "focal-run-20231103",
        "focal-run-20240103",
        "focal-run-20240105",
        "focal-run-20240401",
        "focal-run-20240408",
        "focal-run-20240429",
        "jammy",
        "jammy-20230829",
        "jammy-20230904",
        "jammy-20230911",
        "jammy-20231026",
        "jammy-20231103",
        "jammy-20240103",
        "jammy-20240105",
        "jammy-20240401",
        "jammy-20240408",
        "jammy-20240429",
        "jammy-build",
        "jammy-build-20230829",
        "jammy-build-20230904",
        "jammy-build-20230911",
        "jammy-build-20231026",
        "jammy-build-20231103",
        "jammy-build-20240103",
        "jammy-build-20240105",
        "jammy-build-20240401",
        "jammy-build-20240408",
        "jammy-build-20240429",
        "jammy-run",
        "jammy-run-20230829",
        "jammy-run-20230904",
        "jammy-run-20230911",
        "jammy-run-20231026",
        "jammy-run-20231103",
        "jammy-run-20240103",
        "jammy-run-20240105",
        "jammy-run-20240401",
        "jammy-run-20240408",
        "jammy-run-20240429",
        "latest",
        "latest-20230829",
        "latest-20230904",
        "latest-20230911",
        "latest-20231026",
        "latest-20231103",
        "latest-20240103",
        "latest-20240105",
        "latest-20240401",
        "latest-20240408",
        "latest-20240429",
        "latest-build",
        "latest-build-20230829",
        "latest-build-20230904",
        "latest-build-20230911",
        "latest-build-20231026",
        "latest-build-20231103",
        "latest-build-20240103",
        "latest-build-20240105",
        "latest-build-20240401",
        "latest-build-20240408",
        "latest-build-20240429",
        "latest-run",
        "latest-run-20230829",
        "latest-run-20230904",
        "latest-run-20230911",
        "latest-run-20231026",
        "latest-run-20231103",
        "latest-run-20240103",
        "latest-run-20240105",
        "latest-run-20240401",
        "latest-run-20240408",
        "latest-run-20240429",
        "lunar",
        "lunar-20230829",
        "lunar-20230904",
        "lunar-20230911",
        "lunar-20231026",
        "lunar-20231103",
        "lunar-20240103",
        "lunar-20240105",
        "lunar-20240401",
        "lunar-20240408",
        "lunar-build",
        "lunar-build-20230829",
        "lunar-build-20230904",
        "lunar-build-20230911",
        "lunar-build-20231026",
        "lunar-build-20231103",
        "lunar-build-20240103",
        "lunar-build-20240105",
        "lunar-build-20240401",
        "lunar-build-20240408",
        "lunar-run",
        "lunar-run-20230829",
        "lunar-run-20230904",
        "lunar-run-20230911",
        "lunar-run-20231026",
        "lunar-run-20231103",
        "lunar-run-20240103",
        "lunar-run-20240105",
        "lunar-run-20240401",
        "lunar-run-20240408",
        "run",
        "run-20230829",
        "run-20230904",
        "run-20230911",
        "run-20231026",
        "run-20231103",
        "run-20240103",
        "run-20240105",
        "run-20240401",
        "run-20240408",
        "run-20240429",
        "xenial",
        "xenial-20230911",
        "xenial-20231026",
        "xenial-20231103",
        "xenial-20240103",
        "xenial-20240105",
        "xenial-20240401",
        "xenial-20240408",
        "xenial-20240429",
        "xenial-build",
        "xenial-build-20230911",
        "xenial-build-20231026",
        "xenial-build-20231103",
        "xenial-build-20240103",
        "xenial-build-20240105",
        "xenial-build-20240401",
        "xenial-build-20240408",
        "xenial-build-20240429",
        "xenial-run",
        "xenial-run-20230911",
        "xenial-run-20231026",
        "xenial-run-20231103",
        "xenial-run-20240103",
        "xenial-run-20240105",
        "xenial-run-20240401",
        "xenial-run-20240408",
        "xenial-run-20240429"
    ],
    "configs": {
        "20230829": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                },
                "OnBuild": null
            },
            "created": "2023-09-02T04:38:26.679554608Z",
            "history": [
                {
                    "created": "2023-08-16T06:19:52.511034945Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:52.678880469Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:52.846527092Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:53.017052303Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:59.127120216Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3fcf00866c55150f1ea0a5ef7b8473c39275c1fdbf6aba0acd84cacb83d0c564 in / "
                },
                {
                    "created": "2023-08-16T06:19:59.851781663Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:00:23.873526242Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:00:23.873526242Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:00:23.873526242Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:02:54.845294161Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:02:55.74234964Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:02:55.74234964Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:02:55.74234964Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:02:56.156853799Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:02:56.172046311Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:02:56.180539674Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:02:56.187494225Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:02:56.187494225Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:02:57.826653521Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:02:58.213618576Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:37:36.551201041Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:37:36.551201041Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r32.7 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t186 r32.7 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:38:26.47007244Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:38:26.679554608Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:61bbeda53374249345217a09cd78040f124ef8bc07a1612a1a186d2468f67d54",
                    "sha256:92270994fafef678580dc83e4325fa2f4ae8f3223934c22243dfe7309162be07",
                    "sha256:88be2f314b58b7c97d88f89fe1a9d2589c6951703c29dbcdee1370a38fb0eb73",
                    "sha256:4cd26e8abc8ea4578f5fd18bd7c88e1752f63a6ba2b47a2748829da6533c515e",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:dd4425b585e6ef6909b4e401069d605f63794d541cdb42bb06807d560388e5d1",
                    "sha256:ab02b38642445743fcea5363e3e2e2c152645db64fb26bf7b56d0b4b2662547f",
                    "sha256:b5bde6de6d78cc309610ed44aff8af02dc24903bd4636c9abb2e4615858e8d24",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ac15c28c9f71649b95fa1383d44e822cc7424b12c2f75d369058eb9a421a26fb",
                    "sha256:840e79a410397ef2c89aa6bbc0d269397467a0ccac93eaae377dc5f1ac017576",
                    "sha256:4753bcd57f51dfa0de52a8f29ebd5cd26d197100d81e81d34eee7f20da928c43",
                    "sha256:72eb1b1b4477f23b490cf4fb49b82965605ee90bed7b3580b38d5356823e6b78"
                ]
            }
        },
        "20230904": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                },
                "OnBuild": null
            },
            "created": "2023-09-09T04:35:32.847209484Z",
            "history": [
                {
                    "created": "2023-08-16T06:19:52.511034945Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:52.678880469Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:52.846527092Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:53.017052303Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:59.127120216Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3fcf00866c55150f1ea0a5ef7b8473c39275c1fdbf6aba0acd84cacb83d0c564 in / "
                },
                {
                    "created": "2023-08-16T06:19:59.851781663Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:46.93114918Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:46.93114918Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:46.93114918Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:18.952261606Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:19.761223709Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:19.761223709Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:02:19.761223709Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:02:20.194221163Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:20.21180478Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:20.222393011Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:20.247807525Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:20.247807525Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:02:21.899364646Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:22.17951671Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:34:39.875937997Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:34:39.875937997Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r32.7 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t186 r32.7 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:35:32.515089708Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:35:32.847209484Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:61bbeda53374249345217a09cd78040f124ef8bc07a1612a1a186d2468f67d54",
                    "sha256:73eb566cd0436219bfde4ac6950bfa86846113f3c3c13e59f1f7259b9fde4798",
                    "sha256:f4f141ccf9b2ed89c1994bab50acd51e197800b7914b79c9a5766edeb1e6264c",
                    "sha256:b8f42e3e6876f69f9fd6f1b2655f542d668078b48b309426774345ff5b2fa1fd",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:65a6d302256cb6db51bbd0d59145a3c145a08912581711a4b8c50fee03ee7954",
                    "sha256:aa50ec027cafedf6cfa9d5b7b797297902c54bc818224ffc5ad46c700b1f1a18",
                    "sha256:118f8ef44e94351e31e425e81210209b5d911b92a8a47eb5f456d1de5097e136",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ebee8221a712caf18485002c7e6312a65efa63454430c6e40be097c2da96770d",
                    "sha256:700852db6c013bb086661c8fac7220c7c879c0a4b5fa4221568ef8804dd5bd3f",
                    "sha256:3ab1eee539c0fc9b8c74d9ef9d398b94eb84fb663984b00a662bf0f0013d2a44",
                    "sha256:66af3d0aa2bad03237d458b7e588803cb2e3b22d46eb305fdeeb02a553899fd9"
                ]
            }
        },
        "20230911": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                },
                "OnBuild": null
            },
            "created": "2023-09-11T23:11:29.355189118Z",
            "history": [
                {
                    "created": "2023-08-16T06:19:52.511034945Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:52.678880469Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:52.846527092Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:53.017052303Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:59.127120216Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3fcf00866c55150f1ea0a5ef7b8473c39275c1fdbf6aba0acd84cacb83d0c564 in / "
                },
                {
                    "created": "2023-08-16T06:19:59.851781663Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:46.93114918Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:46.93114918Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:46.93114918Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:18.952261606Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:19.761223709Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:19.761223709Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:02:19.761223709Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:02:20.194221163Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:20.21180478Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:20.222393011Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:20.247807525Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:20.247807525Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:02:21.899364646Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:22.17951671Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T23:11:29.250286Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-11T23:11:29.250286Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T23:11:29.355189118Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:61bbeda53374249345217a09cd78040f124ef8bc07a1612a1a186d2468f67d54",
                    "sha256:73eb566cd0436219bfde4ac6950bfa86846113f3c3c13e59f1f7259b9fde4798",
                    "sha256:f4f141ccf9b2ed89c1994bab50acd51e197800b7914b79c9a5766edeb1e6264c",
                    "sha256:b8f42e3e6876f69f9fd6f1b2655f542d668078b48b309426774345ff5b2fa1fd",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:65a6d302256cb6db51bbd0d59145a3c145a08912581711a4b8c50fee03ee7954",
                    "sha256:aa50ec027cafedf6cfa9d5b7b797297902c54bc818224ffc5ad46c700b1f1a18",
                    "sha256:118f8ef44e94351e31e425e81210209b5d911b92a8a47eb5f456d1de5097e136",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ebee8221a712caf18485002c7e6312a65efa63454430c6e40be097c2da96770d",
                    "sha256:e4277096ad7051f93b36723b91a5664995e4910f530500f85dc819be543be5a5",
                    "sha256:ed2c4d9a482f2a4ac9b8a365762d1ac090db181531b17d3f53835a96a71b83be"
                ]
            }
        },
        "20231026": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                },
                "OnBuild": null
            },
            "created": "2023-11-02T15:45:01.662929295Z",
            "history": [
                {
                    "created": "2023-10-05T07:32:20.951880606Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T07:32:21.015770292Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T07:32:21.080364699Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T07:32:21.153596992Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T07:32:22.639154667Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f8594e26831508c318e42c8dfd9942041031087b8de1bf3fec11fd75b8b30fd4 in / "
                },
                {
                    "created": "2023-10-05T07:32:22.848629339Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:17:36.98530637Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:17:36.98530637Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:17:36.98530637Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:19:30.038036758Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:19:30.590211839Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:19:30.590211839Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:19:30.590211839Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:19:30.727463187Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:19:30.737278712Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:19:30.746163163Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:19:30.755855653Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:19:30.755855653Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:19:31.864611691Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:19:31.989038864Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:45:01.512720457Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:45:01.512720457Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:45:01.662929295Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d2d3127fc3d362a0516c53fcb8fb983ebb9d1ea2dfbd63b69967a0084f0d45a3",
                    "sha256:c243b6ba49361914e3fe9a5b150d45bb20ad99e1ee88a0b770b7d4f9f72379a9",
                    "sha256:78a2eaa1c40786ba98d4ddac8dda4a7fe3fa8784ec9d199c07bd4e06dd347b1b",
                    "sha256:abe9e87e67a428d547cfd1863fd6138073f87abb61f909e5dc88d063f811aa64",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8613ffa14109f531902ca2af59ffd55b23ce83905ee8fa46273b23cebc081816",
                    "sha256:cbf495cb182bd008ae474b08be37c1d8dc1758e42bd6ac3132f5431193c4f960",
                    "sha256:3d8d8f656c49302ea76def530da05ad3de05e09b6750296a55f8452569fa332b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1545d6d669cd3e2c6f9e758aae9bbafb3ce5d769394bde3fa61b4ee7787e7fbe",
                    "sha256:fde2d01656b6e0a7be7e899d237c95269da9697e5e1c90e061d39682c0a309d4",
                    "sha256:0203de8b3984581bfcd33b7b6c71182d8f93752a50dffc033a0c016d02dd3cc8"
                ]
            },
            "variant": "v8"
        },
        "20231103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                },
                "OnBuild": null
            },
            "created": "2023-11-06T01:05:40.231993362Z",
            "history": [
                {
                    "created": "2023-10-05T07:32:20.951880606Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T07:32:21.015770292Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T07:32:21.080364699Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T07:32:21.153596992Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T07:32:22.639154667Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f8594e26831508c318e42c8dfd9942041031087b8de1bf3fec11fd75b8b30fd4 in / "
                },
                {
                    "created": "2023-10-05T07:32:22.848629339Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:42:26.099059735Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:42:26.099059735Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:42:26.099059735Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:45:34.259078886Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:45:35.342603498Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:45:35.342603498Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:45:35.342603498Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:45:35.54098196Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:45:35.568397242Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:45:35.588929428Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:45:35.606804938Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:45:35.606804938Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:45:37.38438037Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:45:37.560859106Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T01:05:40.127404642Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T01:05:40.127404642Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T01:05:40.231993362Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d2d3127fc3d362a0516c53fcb8fb983ebb9d1ea2dfbd63b69967a0084f0d45a3",
                    "sha256:10d443a89e642fe0b654249aeaf8bab4bcaaff359469729746bcf8c3241a97a9",
                    "sha256:f12d1c92fcdedc951a85ecbdc9d891651c9b03345450ff58f4f6ed3d1e875529",
                    "sha256:32a3d52ec67454977739f6e7a73f3e5c5986448701054fc6c5fa301b3506febb",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5404be9f26b2de792e3a835a087e9fc32d210318c0cac541ec39560fbc37fa09",
                    "sha256:62cc72e6e0b17dc250f4fb916acec294669629b1bb227e42d4898bc3f1ceb65f",
                    "sha256:3b39c17b1c6d3d260b788455c8c91a74d07191d21680dc48ff42f49ced28ac0b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:15af4a4eddbf67d577754196c8e9c1b01d0ff122deb12c53608acde408929328",
                    "sha256:c7c9a0a8349b22dd0f136ea938ee49bd0f4051f5ea066b96afdbe914efc5de99",
                    "sha256:0ae0d71f7f9017192df1dea1f564518812b189f9dd845329ddc90f269d3c90f4"
                ]
            },
            "variant": "v8"
        },
        "20240103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                },
                "OnBuild": null
            },
            "created": "2024-01-05T12:02:53.118433161Z",
            "history": [
                {
                    "created": "2023-12-12T11:41:50.758603714Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:41:50.869361588Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:41:50.981745008Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:41:51.093819154Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:41:54.146264118Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50f947da69b3b6c63695be9c49eee16f7a7dcdecdceb51e5bee1609b845bf483 in / "
                },
                {
                    "created": "2023-12-12T11:41:54.521050543Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:44:32.928365316Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:44:32.928365316Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:44:32.928365316Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:31.817746676Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:32.78934311Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:32.78934311Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:46:32.78934311Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:46:32.932763963Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:32.98071649Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:32.991085243Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:33.000875247Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:33.000875247Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:46:34.094944699Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:34.213393498Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T12:02:53.012607201Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T12:02:53.012607201Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T12:02:53.118433161Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3e798a66607c97d027570dbbc112c32956981fbcc244bb2d4d1fddbce4cda84c",
                    "sha256:2e80ca486da4411dd0fec1cb0259ef173c62232fbbe60840b5545c69c0fb586f",
                    "sha256:acf9093499d05e7ea73879d4c847e171497cb3bf2cb28024c73387b604202842",
                    "sha256:ad39e05fd4bbe30d5a56af6ff638c51ab486a6d35bd68a230cb50ea30744dfb3",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:308d9a7b689b399750c10022e08a49643987885d64d68a3d172159361029b865",
                    "sha256:c91850d3827f25311e2ab8770645f4d7353e5b945060f7d9eb64b5e37e47cdb3",
                    "sha256:8fbef8bff8fa00578568f3fc095176b16bfef7cc768a375bf314e031ef82eb57",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f2cfb4098741be87d1c2f5a4af897292332eac7285b71af5e2e68f83c10d547f",
                    "sha256:a846361021ce8a43ef1823d57a8d92eef1bf740934c97c3d27a11548a2965415",
                    "sha256:2a0434d0a39a5006671e7d244fef0ca84743f03dea0adc607e6f3c8a73cd8398"
                ]
            },
            "variant": "v8"
        },
        "20240105": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                },
                "OnBuild": null
            },
            "created": "2024-01-06T07:55:35.98119432Z",
            "history": [
                {
                    "created": "2023-12-12T11:41:50.758603714Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:41:50.869361588Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:41:50.981745008Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:41:51.093819154Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:41:54.146264118Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50f947da69b3b6c63695be9c49eee16f7a7dcdecdceb51e5bee1609b845bf483 in / "
                },
                {
                    "created": "2023-12-12T11:41:54.521050543Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:37:52.719890317Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:37:52.719890317Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:37:52.719890317Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:44.68383672Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:45.24617781Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:45.24617781Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:39:45.24617781Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:39:45.393470696Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:45.445245009Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:45.454514748Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:45.464356521Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:45.464356521Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:39:46.694653805Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:46.80732869Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:55:35.876752162Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:55:35.876752162Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:55:35.98119432Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3e798a66607c97d027570dbbc112c32956981fbcc244bb2d4d1fddbce4cda84c",
                    "sha256:06f199958bd4bf23fdd093651f2fded886cfd510f924b035e3778a6b3ced8d02",
                    "sha256:c98bc4703039eb0431773191cecc6af09b53b8f99ee046ba4dfd112763f7de42",
                    "sha256:d64970f18b174ccdc31d58582f24b0401663e973e81699d978e77a6a3dd90f19",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ac14ba889ceb708b209faf5e1feb12af78c8d094462a61fc691d0b0aac610e64",
                    "sha256:7ea7282951c60a62d47abc4a180fc3fdc8e85b96fa9ce9ccf26e086a9d9fed23",
                    "sha256:9bc1e596ac05cea9597de16d9d793a37966b4da0b57b9306cb6f4eab4da3dbc0",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:615998ebaa076cb1f7ed838a1a6164c074b4979e566706ca6d5862ce6b727c33",
                    "sha256:6f884b55abc68468e2c919dd9c19eb298af72bbdec42c9477ad6d34cf2824ae8",
                    "sha256:f7c671bf97f1df35894ae6f6fe4f8833ee513bd4db9385792a76fcd1ace2afbe"
                ]
            },
            "variant": "v8"
        },
        "20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                }
            },
            "created": "2024-04-06T13:38:44.879767741Z",
            "history": [
                {
                    "created": "2024-02-27T18:53:22.490310908Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T18:53:22.539283006Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T18:53:22.59951827Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T18:53:22.648922452Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T18:53:25.140932403Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:07cdbabf782942af04487c9da03de50a611a51e69d8bac1f593acb73a3ba3a46 in / "
                },
                {
                    "created": "2024-02-27T18:53:25.397886996Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:20:52.447123568Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:20:52.447123568Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:20:52.447123568Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:46.136639138Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:46.672812142Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:46.672812142Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:22:46.672812142Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:22:46.789043867Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:46.801794101Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:46.837911774Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:46.848970589Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:46.848970589Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:22:47.737012242Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:47.874181626Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:38:44.767427419Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:38:44.767427419Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:38:44.879767741Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a510ae0f066c65d73f523d5821fe048a6858e53360ecb8d39b7b931162f11479",
                    "sha256:43c1435efbd6a805475b6a69ed2afea4421be979091a971f530b219a1ce24cd9",
                    "sha256:e37f3ca660bcc311e960bcea5d2c9df82900567c09cd643d5f1d4daa39c810e7",
                    "sha256:3839ee8dd9a6dc7cbb4afc83940c3b88151d70ba57d3886ee1296b5db7da0ae7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:77504a1f2690cadb7b6b7aae94be4d28f9f58dcf3c8c6c7bee7b23c0c30e7582",
                    "sha256:9459da29ee9ac2f7e12d595eafca0d2d1f0637d68f6b071fe101f1b64b632585",
                    "sha256:cb0901504bd0e19c9232086b08b0e4835bc7c8a76691405b1dc830adee2ed6d5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:18821c7845f9f0aa9381d55d092efcc647571f926ba8e8198fe6a5ac352260df",
                    "sha256:f9ecea3f3853e467055455b994bf74116f94d38d7b5fbabaa0536a94e146bb4e",
                    "sha256:50db4c8cdcf855056432aecf4ccdf80bc0e15409dbdbad6098f7e3c02466e307"
                ]
            },
            "variant": "v8"
        },
        "20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                }
            },
            "created": "2024-04-09T18:52:59.102361258Z",
            "history": [
                {
                    "created": "2024-02-27T18:53:22.490310908Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T18:53:22.539283006Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T18:53:22.59951827Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T18:53:22.648922452Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T18:53:25.140932403Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:07cdbabf782942af04487c9da03de50a611a51e69d8bac1f593acb73a3ba3a46 in / "
                },
                {
                    "created": "2024-02-27T18:53:25.397886996Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:47.461373506Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:47.461373506Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:47.461373506Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:43.100120348Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:43.649843389Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:43.649843389Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:43.649843389Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:43.766584201Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:43.776851848Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:43.785956822Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:43.795637979Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:43.795637979Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:44.705220102Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:44.823651141Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T18:52:58.997668861Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T18:52:58.997668861Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T18:52:59.102361258Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a510ae0f066c65d73f523d5821fe048a6858e53360ecb8d39b7b931162f11479",
                    "sha256:755a5181e5cf3dc59d0d45df350e621f8f70fba87a9e128453149fdde7d6ec13",
                    "sha256:bc3eb4fdfc82ec2711ae80e36e01fcf5f44d6be01e59e0101cdf79da46b187a5",
                    "sha256:02854098a3656cb8daac9692ef973e560528ede1eb6752702f15dec8702afba2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a70167e146c331d507a4700240a8dad7047ffbda396a3d152fb55b91ec179808",
                    "sha256:9c02956fcc7d415d1f3bd2340c6905be7b40a107e3852ced3bf12842ccd8c502",
                    "sha256:15cacaf774edf7d6221e2d6014bb5ac3604f5912c908450cd10bd6324cfba332",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f7bd9f5560827cd12577ee9ed4e229cedcd48ed2e4d45a53df473eb210efde01",
                    "sha256:5a88d24cf58ed32b1cb1ee0fd6f16414ca862e09411f7bf6038ffd08be255508",
                    "sha256:9436603e67f8ef0a8cf6af8fd08185ff7696ff4b8b70f4425f9c1066d459603a"
                ]
            },
            "variant": "v8"
        },
        "20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                }
            },
            "created": "2024-05-02T02:40:02.09133632Z",
            "history": [
                {
                    "created": "2024-04-27T14:32:22.643440355Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:32:22.768221855Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:32:22.922781285Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:32:23.070247637Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:32:33.475488206Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:18035d0a8c59e3306bad4219c71a52b03397fc8f231baf7f676287c73024d85c in / "
                },
                {
                    "created": "2024-04-27T14:32:33.989941961Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:18.216101982Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:18.216101982Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:18.216101982Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:21.912464985Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:22.625610903Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:22.625610903Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:24:22.625610903Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:24:22.739350403Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:22.750532225Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:22.759557887Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:22.792378776Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:22.792378776Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:24:23.712437353Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:23.834897531Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:40:01.977748969Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:40:01.977748969Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:40:02.09133632Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:842bef16b8fb80459504b4621523ac3d78faf7e01d6d9fa7076ed6d4a8f49830",
                    "sha256:0640e720188f6528f7c748e336f11a09d9d00729e4c36eb2bbe129f8a763d070",
                    "sha256:da00f81eef79ae72a2a6e39658ba370fdc81df4c094e54e6a589f711e7c05f0d",
                    "sha256:16497e63f0b712dabe742045e338b44077718e77481804d3a7724223446a164b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:aabd4e14de0df6a5f9f1a6579c3040ed27fca9cd89f3657928a4b239e2e86e75",
                    "sha256:5f6d921eddb8660b20b548ace680919f1b42147cf88460f36aa40005e1aa336a",
                    "sha256:c56d8196358aa702245257319ec5bdcbf5176851d7fef2e97a20cd495170743e",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3817267cec6b73a0e47e08025ef532290d5f261f3fbf1a42ed49176789c09b27",
                    "sha256:070b1a3316674d91b65504d1eb226dfd4fd381c8bb452d8dd49156030aa90fc2",
                    "sha256:85e6e6342cb0f9b27b344a63573bdaad71104c22aa6f59ee24fb6af673be4617"
                ]
            },
            "variant": "v8"
        },
        "bionic": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "18.04"
                }
            },
            "created": "2024-05-02T02:40:21.162313055Z",
            "history": [
                {
                    "created": "2023-05-30T09:39:04.161612881Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.331275317Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.50735389Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.680942141Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=18.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:09.908769645Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f56078e320535ad36864a2a30efa5b760ae65dd324cea9d75f01388b17e1183c in / "
                },
                {
                    "created": "2023-05-30T09:39:10.501607889Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:12.213324334Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:12.213324334Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:12.213324334Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:23:58.012083418Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:23:58.633450684Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:23:58.633450684Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:23:58.633450684Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:23:58.744138799Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:23:58.754894535Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:23:58.766424431Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:23:58.800872971Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:23:58.800872971Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:23:59.533029218Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu bionic   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:23:59.656584666Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu bionic \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:40:21.063157685Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:40:21.063157685Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:40:21.162313055Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu bionic \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c09969dbc5e84ea45848232c61ee613e2283d20a03d72bb98bc819d2fbeb3218",
                    "sha256:aa708c06019f5034e4131da7063172912bd4874d878256d92c0192d735071a08",
                    "sha256:114226a0550176afd6ef736d7f12a6e10929be0418884a3c877933b634c7738c",
                    "sha256:ce8cc178cc2a69249686f32c5fa3c1dce5d7c9de7a18b13fcfcc64c778a6c269",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:778755de9d5c42a1057666e508c3f83a5054567cc744ed41355807f0f8462d01",
                    "sha256:80469d10c45766815276b3485f235521e828011c7eb399b93d0e2b48bdb7e5fc",
                    "sha256:e1c7658ccac6d65bd644cea14bdb713bddb29794732c314b0a7a5340df611726",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e0ccf12687e5b53bb3415ff297e0034766c5370bbb211ef961751c159623b33c",
                    "sha256:da20e86a9581d4f67644b96836a273d8f376886edf93291a16f62c76de12684e",
                    "sha256:7611e5f562833d098749cd6f7bc53877c3d579e2e57031cd32d98a8faa23478b"
                ]
            },
            "variant": "v8"
        },
        "bionic-20230829": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "18.04"
                },
                "OnBuild": null
            },
            "created": "2023-09-02T04:44:22.9351984Z",
            "history": [
                {
                    "created": "2023-05-30T09:39:04.161612881Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.331275317Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.50735389Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.680942141Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=18.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:09.908769645Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f56078e320535ad36864a2a30efa5b760ae65dd324cea9d75f01388b17e1183c in / "
                },
                {
                    "created": "2023-05-30T09:39:10.501607889Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:22:01.415037775Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:22:01.415037775Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:22:01.415037775Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:24:23.016804737Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:30:16.213216639Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:30:16.213216639Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:30:16.213216639Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:30:16.589421228Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:30:16.607140529Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:30:16.614820259Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:30:16.643785851Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:30:16.643785851Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:30:17.52443118Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu bionic   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:30:17.809724429Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu bionic \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:43:27.519670338Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:43:27.519670338Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r32.7 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t186 r32.7 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:44:22.62617655Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:44:22.9351984Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu bionic \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c09969dbc5e84ea45848232c61ee613e2283d20a03d72bb98bc819d2fbeb3218",
                    "sha256:f1a10c431917e6c6370b512801924d50f1924d50cf6b15511da14e714ed997f7",
                    "sha256:fe4c82b89080ac39c650a5fb46b555cdb8921e70a02876fa214dc5208252197f",
                    "sha256:7f7b1ee69ab694b2165de0b3bf2cdd62ca4d1c57044fcaf2f4dfa5bfa31154b7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:62dd8f2013a8b54221f71421a1d7210822b97d63f1090e544794609ea15b77db",
                    "sha256:9c650c364c636bc46b97b59bc78f8fdea7f24a21253dcf9b92a19e38543f2b59",
                    "sha256:a7933e9a83310d79c9d35d96408a68e76a1a38af004c13c54862c689c88c60f5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8f794ad74cae2804f549c20278e6a06073ecbad98b0f6cee0eba24e24ad875fd",
                    "sha256:111bd9917f76b1777f461e374f893ece5a79331a5a3ba5f05874c4a96e10a1f8",
                    "sha256:443c08fc204ca83b8dde705cf9c8fb6ba2c3d00a5111a6ca4411db87c991c66f",
                    "sha256:f4cfb504832522f2748bf3cccbf2b2c8c47b5a4cd6316bb1ec341d3ccff71863"
                ]
            }
        },
        "bionic-20230904": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "18.04"
                },
                "OnBuild": null
            },
            "created": "2023-09-09T04:42:53.683344387Z",
            "history": [
                {
                    "created": "2023-05-30T09:39:04.161612881Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.331275317Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.50735389Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.680942141Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=18.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:09.908769645Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f56078e320535ad36864a2a30efa5b760ae65dd324cea9d75f01388b17e1183c in / "
                },
                {
                    "created": "2023-05-30T09:39:10.501607889Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:21:26.228871438Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:21:26.228871438Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:21:26.228871438Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:23:44.826985205Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:23:45.739903088Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:23:45.739903088Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:23:45.739903088Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:23:46.063097432Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:23:46.079409477Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:23:46.088462513Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:23:46.113059181Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:23:46.113059181Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:23:47.046052766Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu bionic   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:23:47.458332141Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu bionic \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:41:55.499778497Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:41:55.499778497Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r32.7 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t186 r32.7 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:42:53.29925511Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:42:53.683344387Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu bionic \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c09969dbc5e84ea45848232c61ee613e2283d20a03d72bb98bc819d2fbeb3218",
                    "sha256:74741d2285d0004ff64245daee54ca9b0d0222bb5cd5c734b038ed1e2abf2e71",
                    "sha256:6d8e57b7d7b2ba8e9a4fec735fe5c2bc51ca05029ffeb0ccd20c824243e4bc40",
                    "sha256:ba59f92dac4e7ba0029737f0f3ae5660f5ea4981e5a1b19c229c88f177dbf43b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a1158dacc700f844f596ff8ae0ede8382b07b5aebfe850e2f61b75b1a52320d2",
                    "sha256:5947b9e9ed961ab70f973d7450f42ec5f03ee2165c85ffc489b982a50866989c",
                    "sha256:98f4f2f234d36a36e2b7d7ba8cdf5c65bfb95df9cad7ca6215f69929542220fc",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7ecc10df17853620d6330dc8bf7b7e7aa1dc2ed14d61bc1aa798d1cb20a6387a",
                    "sha256:d5368389be61cf36891e0c78802c452764ba32819db2ea2a834f5f0fe8b2ee1b",
                    "sha256:489de00f5eab63ed60aa4c9f8cfbd4e91c0c70abe7e87673df7a023aa715690f",
                    "sha256:f02e77676263cbf4015ff38d510d5e238401bf0ee65aedc90f55bf2f649f40de"
                ]
            }
        },
        "bionic-20230911": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "18.04"
                },
                "OnBuild": null
            },
            "created": "2023-09-11T23:11:59.363029243Z",
            "history": [
                {
                    "created": "2023-05-30T09:39:04.161612881Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.331275317Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.50735389Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.680942141Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=18.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:09.908769645Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f56078e320535ad36864a2a30efa5b760ae65dd324cea9d75f01388b17e1183c in / "
                },
                {
                    "created": "2023-05-30T09:39:10.501607889Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:21:26.228871438Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:21:26.228871438Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:21:26.228871438Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:23:44.826985205Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:23:45.739903088Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:23:45.739903088Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:23:45.739903088Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:23:46.063097432Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:23:46.079409477Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:23:46.088462513Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:23:46.113059181Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:23:46.113059181Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:23:47.046052766Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu bionic   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:23:47.458332141Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu bionic \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T23:11:59.223540553Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-11T23:11:59.223540553Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T23:11:59.363029243Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu bionic \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c09969dbc5e84ea45848232c61ee613e2283d20a03d72bb98bc819d2fbeb3218",
                    "sha256:74741d2285d0004ff64245daee54ca9b0d0222bb5cd5c734b038ed1e2abf2e71",
                    "sha256:6d8e57b7d7b2ba8e9a4fec735fe5c2bc51ca05029ffeb0ccd20c824243e4bc40",
                    "sha256:ba59f92dac4e7ba0029737f0f3ae5660f5ea4981e5a1b19c229c88f177dbf43b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a1158dacc700f844f596ff8ae0ede8382b07b5aebfe850e2f61b75b1a52320d2",
                    "sha256:5947b9e9ed961ab70f973d7450f42ec5f03ee2165c85ffc489b982a50866989c",
                    "sha256:98f4f2f234d36a36e2b7d7ba8cdf5c65bfb95df9cad7ca6215f69929542220fc",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7ecc10df17853620d6330dc8bf7b7e7aa1dc2ed14d61bc1aa798d1cb20a6387a",
                    "sha256:e3cb2c12eceefc177a8247cb2d37e0b3941d443c3a6d7834fc51b9cdca609336",
                    "sha256:886e49ac02c85e3ff41b583e53c5840e6366087b7181e70bffe76e5de48a4fd4"
                ]
            }
        },
        "bionic-20231026": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "18.04"
                },
                "OnBuild": null
            },
            "created": "2023-11-02T15:45:27.733482881Z",
            "history": [
                {
                    "created": "2023-05-30T09:39:04.161612881Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.331275317Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.50735389Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.680942141Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=18.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:09.908769645Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f56078e320535ad36864a2a30efa5b760ae65dd324cea9d75f01388b17e1183c in / "
                },
                {
                    "created": "2023-05-30T09:39:10.501607889Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:17:33.983177909Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:17:33.983177909Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:17:33.983177909Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:19:17.76907953Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:19:18.378774326Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:19:18.378774326Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:19:18.378774326Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:19:18.492038312Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:19:18.503499287Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:19:18.514485503Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:19:18.526499983Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:19:18.526499983Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:19:19.116824408Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu bionic   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:19:19.242395316Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu bionic \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:45:27.567588399Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:45:27.567588399Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:45:27.733482881Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu bionic \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c09969dbc5e84ea45848232c61ee613e2283d20a03d72bb98bc819d2fbeb3218",
                    "sha256:15fa1823713cbef83d0983c99cf4979675b91b8e7ad384d345e89e8f91d88eef",
                    "sha256:04db0d1268f94d93c56dff32409e99ddc8fd066b2ef9c2ca2d102466475c7d6f",
                    "sha256:5bf2dd3cb90001ae0b2c4f3dec7bb328815055ccaf55bcd27a3be031e81eaa6d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:567216fb55a65cac65b28b469a589e7f4ce631e49fed5edf38565830952c2253",
                    "sha256:67a42c1d9eebc4ad53774e678855fdf77af7355d2b2176ef472a8afcdd6014a8",
                    "sha256:1b1f256daf90b545ef6e5c68487c0269fb2f9cdc045c025929f52a737b4bc293",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d07dfd1de7ab67445c1ca447b32164b9e273293a551e7d7e5f548bb5ef2bc46c",
                    "sha256:44bf84482fe47ecde0c434d0648b4f834bb112a062b361b2412e6ac8ee3855f5",
                    "sha256:2c2e29b9ad9bf525281437dfa793d4c362a3181e280ab780f85ef0f9ca11a24b"
                ]
            },
            "variant": "v8"
        },
        "bionic-20231103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "18.04"
                },
                "OnBuild": null
            },
            "created": "2023-11-06T01:06:15.884562119Z",
            "history": [
                {
                    "created": "2023-05-30T09:39:04.161612881Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.331275317Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.50735389Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.680942141Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=18.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:09.908769645Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f56078e320535ad36864a2a30efa5b760ae65dd324cea9d75f01388b17e1183c in / "
                },
                {
                    "created": "2023-05-30T09:39:10.501607889Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:41:59.011861299Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:41:59.011861299Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:41:59.011861299Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:44:19.212259882Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:44:20.019310877Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:44:20.019310877Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:44:20.019310877Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:44:20.171747661Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:44:20.182806154Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:44:20.192946339Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:44:20.214848124Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:44:20.214848124Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:44:21.085160452Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu bionic   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:44:21.253810272Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu bionic \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T01:06:15.717022143Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T01:06:15.717022143Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T01:06:15.884562119Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu bionic \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c09969dbc5e84ea45848232c61ee613e2283d20a03d72bb98bc819d2fbeb3218",
                    "sha256:2fa782c4e3180e88086cd6234c60193acedcc4bb672bd1220126d6ee7ea102b6",
                    "sha256:eebc2370948d8e8447f3a271794fd65e4d220763d054b5b36e709b909dbb8182",
                    "sha256:baee408f9ce1233b2a38722d79abae8aa857accd86ef5df121e14626124a6fa8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7823c1da0168b36b647f4daa7af638f2c2571aea41ddd80a152c2436c1e972b5",
                    "sha256:c7e0b1568f42a0cd5c0396de2d51dd288ad4711d5c7ea319e1ed0cb4c786d651",
                    "sha256:20df023600e89200d546ee869e9647dfd0b0dcf2a7ac9fa56a4cb931b55b126b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:691b2f87518d19c6f1e452863e8ebd9904874c85511277be391485084a7735c6",
                    "sha256:954cca235e13c97d0e13cd223638d603dfcab322daa6828540c24103b07b6e74",
                    "sha256:9afac2450b4b3c720e2a4500cef44bd60683a08a8a0abef003bf95daea9ce474"
                ]
            },
            "variant": "v8"
        },
        "bionic-20240103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "18.04"
                },
                "OnBuild": null
            },
            "created": "2024-01-05T12:03:00.835434126Z",
            "history": [
                {
                    "created": "2023-05-30T09:39:04.161612881Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.331275317Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.50735389Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.680942141Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=18.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:09.908769645Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f56078e320535ad36864a2a30efa5b760ae65dd324cea9d75f01388b17e1183c in / "
                },
                {
                    "created": "2023-05-30T09:39:10.501607889Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:44:24.755342736Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:44:24.755342736Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:44:24.755342736Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:09.234309008Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:09.979513094Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:09.979513094Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:46:09.979513094Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:46:10.094674381Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:10.106925154Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:10.115986829Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:10.145582231Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:10.145582231Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:46:10.735536971Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu bionic   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:10.855181408Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu bionic \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T12:03:00.730883682Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T12:03:00.730883682Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T12:03:00.835434126Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu bionic \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c09969dbc5e84ea45848232c61ee613e2283d20a03d72bb98bc819d2fbeb3218",
                    "sha256:052d3b440a066abb5317e6e1af2f1f9894d81d5e87dc7fcd7605e73f72c2a0df",
                    "sha256:d81ae3b8ba0239d9df4ea0b00db306d96a9fd6020d52da0453819406d44c144f",
                    "sha256:060d8a555f45c135b06cc13260bc4b216cfe628374e9c353679d9ef22456bdbd",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b68b1c27af50ccabe70936c993e6f1d855d408ed1d8dc4501b39863be5f7d66e",
                    "sha256:6d61194ec900717559d0d3dc2b27f7d90c2d7c0f12445f3082e2bf35ddc81385",
                    "sha256:2c0cb52663343703697d703d95cf2dabab8185e3cfa9ee632f78eac6bfad09e1",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b5eb153ac0f7f0b753e5e5ec518e500dd9d2202019200eba2f155fe9fc18211d",
                    "sha256:04eb6fa13be928cadc7d0543c04621356c88bff562b8a50ffd8733846ceaf045",
                    "sha256:28a1d64810967c3f52d5899888dbb668e22b6ca24aec668cfcbbe39f5d768f30"
                ]
            },
            "variant": "v8"
        },
        "bionic-20240105": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "18.04"
                },
                "OnBuild": null
            },
            "created": "2024-01-06T07:55:39.59651136Z",
            "history": [
                {
                    "created": "2023-05-30T09:39:04.161612881Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.331275317Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.50735389Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.680942141Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=18.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:09.908769645Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f56078e320535ad36864a2a30efa5b760ae65dd324cea9d75f01388b17e1183c in / "
                },
                {
                    "created": "2023-05-30T09:39:10.501607889Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:37:55.179749018Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:37:55.179749018Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:37:55.179749018Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:38.863600272Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:39.605999705Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:39.605999705Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:39:39.605999705Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:39:39.72579217Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:39.735337908Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:39.744524144Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:39.779187492Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:39.779187492Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:39:40.555663271Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu bionic   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:40.666345092Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu bionic \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:55:39.496144081Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:55:39.496144081Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:55:39.59651136Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu bionic \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c09969dbc5e84ea45848232c61ee613e2283d20a03d72bb98bc819d2fbeb3218",
                    "sha256:f402c23ed6fb3078d0a4d77065f10d1c1d053c223b49857776b7288aaccc241d",
                    "sha256:dcd853bb691693104ec73506105f9605df40b82fb2f3030cd0c9e022cbfdf4d8",
                    "sha256:02f0b6252a10990bd81dc4eeb72c27f919ebdc72f3e5dfe628d2be8fadd2d58e",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:abac51bcd82e69be4b3a153fe2ce5c4b9e6f6de61046b4c8b3eafc8081d65e78",
                    "sha256:1beb55097296a06c33a9802243b42afa162e6c2c9f3ea1378323d29f00e362a5",
                    "sha256:3de707268f20f539ddb383cc5cd30965b0b644ac6c3fb02fba8988b61a3d3798",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2a57a81883ea3af6913c8ea6044eb1766627a864822d9fef0097f9fa6aa116a5",
                    "sha256:52acc391629876402b0e4a76a6e215e9da6e0c01005a96890235ceb8ea63de4c",
                    "sha256:eb781e0b3315f95d85baeaa4d172419aec82d41aa265c5094d1ec1b61b6dff68"
                ]
            },
            "variant": "v8"
        },
        "bionic-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "18.04"
                }
            },
            "created": "2024-04-06T13:38:46.565108167Z",
            "history": [
                {
                    "created": "2023-05-30T09:39:04.161612881Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.331275317Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.50735389Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.680942141Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=18.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:09.908769645Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f56078e320535ad36864a2a30efa5b760ae65dd324cea9d75f01388b17e1183c in / "
                },
                {
                    "created": "2023-05-30T09:39:10.501607889Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:20:44.098358362Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:20:44.098358362Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:20:44.098358362Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:25.982103376Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:26.724076166Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:26.724076166Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:22:26.724076166Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:22:26.836666929Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:26.845271311Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:26.853174427Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:26.883345187Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:26.883345187Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:22:27.534846963Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu bionic   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:27.683295089Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu bionic \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:38:46.464835352Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:38:46.464835352Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:38:46.565108167Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu bionic \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c09969dbc5e84ea45848232c61ee613e2283d20a03d72bb98bc819d2fbeb3218",
                    "sha256:f7cea31e9442b91a1604deba7db57ebea221b53145407166934e3ea30e4cfa77",
                    "sha256:667f52d5b7abc72729c4065a53309ff739cae1cdd76bcda4721a33dfe0c6257e",
                    "sha256:2a6224ed2f3cede5e8376655fa909bed14119304bd7bfbbdb0d7d4ab6e668b65",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0b72a0d4345bc2393c81a710f832f3ac13f3283df3eb680e23e0f4b8c4c509f3",
                    "sha256:d9e9b4e34cc9cc41a8eebfb615a0f39a6e3960c876760162d7728c3dcad1d566",
                    "sha256:47e9a459ba82543e9c543825ce1347f42cf6b0c80de6e4fa2d2461dcb62f82df",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:522f66093ed872fa6332754b58b93e058016e3bb27550d65f56a27192f7160f7",
                    "sha256:d5b5ffb0064cac0c36bf0168e552d44ee515a95f54414ae2f333f050d04e58cd",
                    "sha256:5d3cdcc759a483f104a54cf363c58114f8efd516215dc6ab5612d29f7d0d62b4"
                ]
            },
            "variant": "v8"
        },
        "bionic-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "18.04"
                }
            },
            "created": "2024-04-09T18:52:38.457591733Z",
            "history": [
                {
                    "created": "2023-05-30T09:39:04.161612881Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.331275317Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.50735389Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.680942141Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=18.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:09.908769645Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f56078e320535ad36864a2a30efa5b760ae65dd324cea9d75f01388b17e1183c in / "
                },
                {
                    "created": "2023-05-30T09:39:10.501607889Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:53.713674969Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:53.713674969Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:53.713674969Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:39.999958906Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:40.919014888Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:40.919014888Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:40.919014888Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:41.038260975Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:41.068694561Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:41.120502789Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:41.134720118Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:41.134720118Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:41.72031434Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu bionic   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:41.835243328Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu bionic \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T18:52:38.355302767Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T18:52:38.355302767Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T18:52:38.457591733Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu bionic \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c09969dbc5e84ea45848232c61ee613e2283d20a03d72bb98bc819d2fbeb3218",
                    "sha256:75cb56b0f42fde53732a98b50c0aff89649fa9149df56d4f776ee98af17f7bd1",
                    "sha256:8b5b362a46c4720938363fdd6ef7a83a2b8778f967e779680f79ad9705bfd43d",
                    "sha256:c0c3eb874bd490c71b8027379f50fc6470568a80021dd24224bad08a03881c43",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c0f7d04a830d533baf6885021fe5161e9503d4b53c4ddd0123a2a7628a8cf863",
                    "sha256:30e72e6da9708b13924b7aeb8ca3912fba7632e00a8dfb6f01ee3a0e013d415e",
                    "sha256:810425e6c002e4ec98f437fb1fc588ea41a347f564e3b0cda7bf2f09dc215048",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d0b0d68e9b944cb785c9a04d23f41405bdff4ef5703fdc1d840285ba03b3da14",
                    "sha256:7409e84d36d9f942811a57c6fcd91a398782cb4aa29f4bceb9ea7d881d3b1dbf",
                    "sha256:5f0f2307896a700d032adc1eb17f1a1c53d455c2c59fdb9df1e13549d9be0655"
                ]
            },
            "variant": "v8"
        },
        "bionic-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "18.04"
                }
            },
            "created": "2024-05-02T02:40:21.162313055Z",
            "history": [
                {
                    "created": "2023-05-30T09:39:04.161612881Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.331275317Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.50735389Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.680942141Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=18.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:09.908769645Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f56078e320535ad36864a2a30efa5b760ae65dd324cea9d75f01388b17e1183c in / "
                },
                {
                    "created": "2023-05-30T09:39:10.501607889Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:12.213324334Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:12.213324334Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:12.213324334Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:23:58.012083418Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:23:58.633450684Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:23:58.633450684Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:23:58.633450684Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:23:58.744138799Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:23:58.754894535Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:23:58.766424431Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:23:58.800872971Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:23:58.800872971Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:23:59.533029218Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu bionic   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:23:59.656584666Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu bionic \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:40:21.063157685Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:40:21.063157685Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:40:21.162313055Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu bionic \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c09969dbc5e84ea45848232c61ee613e2283d20a03d72bb98bc819d2fbeb3218",
                    "sha256:aa708c06019f5034e4131da7063172912bd4874d878256d92c0192d735071a08",
                    "sha256:114226a0550176afd6ef736d7f12a6e10929be0418884a3c877933b634c7738c",
                    "sha256:ce8cc178cc2a69249686f32c5fa3c1dce5d7c9de7a18b13fcfcc64c778a6c269",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:778755de9d5c42a1057666e508c3f83a5054567cc744ed41355807f0f8462d01",
                    "sha256:80469d10c45766815276b3485f235521e828011c7eb399b93d0e2b48bdb7e5fc",
                    "sha256:e1c7658ccac6d65bd644cea14bdb713bddb29794732c314b0a7a5340df611726",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e0ccf12687e5b53bb3415ff297e0034766c5370bbb211ef961751c159623b33c",
                    "sha256:da20e86a9581d4f67644b96836a273d8f376886edf93291a16f62c76de12684e",
                    "sha256:7611e5f562833d098749cd6f7bc53877c3d579e2e57031cd32d98a8faa23478b"
                ]
            },
            "variant": "v8"
        },
        "bionic-build": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "18.04"
                }
            },
            "created": "2024-05-02T02:40:07.887937761Z",
            "history": [
                {
                    "created": "2023-05-30T09:39:04.161612881Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.331275317Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.50735389Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.680942141Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=18.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:09.908769645Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f56078e320535ad36864a2a30efa5b760ae65dd324cea9d75f01388b17e1183c in / "
                },
                {
                    "created": "2023-05-30T09:39:10.501607889Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:15.104206178Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:15.104206178Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:15.104206178Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:05.05351136Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:27:42.047457173Z",
                    "created_by": "RUN /bin/sh -c install_packages \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:27:42.837881352Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:27:42.837881352Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:27:42.837881352Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:27:42.959730991Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:27:42.970028487Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:27:43.004524982Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:27:43.014820648Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:27:43.014820648Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:27:43.612975648Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu bionic   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:27:43.728969999Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu bionic \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:40:07.795538773Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:40:07.795538773Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:40:07.887937761Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu bionic \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c09969dbc5e84ea45848232c61ee613e2283d20a03d72bb98bc819d2fbeb3218",
                    "sha256:90a4bd66b8215dbcfa23ee60d59593f93c634f43d01b41707ba29295fbc73e49",
                    "sha256:3bf73ae36d61f8a30231edcee5be0e572149657fda8a92b2867d2f8ed5359c69",
                    "sha256:98e146754600c1edbd21c9ab3c708f6fbe8e85be1f587bf0f2992c5fa2480ed6",
                    "sha256:62537c8dd5d3bfcedaa73dcc26f79c1cadd1ab9a951664f407ded1401af9ca27",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ecfb8601ac3c652dfeebee5e7c670eb13d815c3d08a64510f37787d5c6322a90",
                    "sha256:ebf246ad74ccddb851bc2b082d77c449185eaffc7eb2abad480bb45fcf9bd78c",
                    "sha256:66a72102057a354a17575411871cdeb53c6faf6d35a4327402bcfa73ba9ef8e3",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:79d6180492c0284af9838b5c8f06bcd5346f059002258f12c73eb40f880bf30a",
                    "sha256:1f849637721f51280b2ee9d84497e023374bae9cd2a8514d0bd7a2f43980d76a",
                    "sha256:53b1d1c65ddc85840e6f4ebe02e8d91808aa6f9c984953a4f91a513827cbb435"
                ]
            },
            "variant": "v8"
        },
        "bionic-build-20230829": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "18.04"
                },
                "OnBuild": null
            },
            "created": "2023-09-02T04:43:07.900714288Z",
            "history": [
                {
                    "created": "2023-05-30T09:39:04.161612881Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.331275317Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.50735389Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.680942141Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=18.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:09.908769645Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f56078e320535ad36864a2a30efa5b760ae65dd324cea9d75f01388b17e1183c in / "
                },
                {
                    "created": "2023-05-30T09:39:10.501607889Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:22:01.415037775Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:22:01.415037775Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:22:01.415037775Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:24:23.016804737Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:29:35.579976437Z",
                    "created_by": "RUN /bin/sh -c install_packages \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:29:36.542861908Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:29:36.542861908Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:29:36.542861908Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:29:36.897356545Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:29:36.914819981Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:29:36.945037764Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:29:36.961295678Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:29:36.961295678Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:29:37.880015849Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu bionic   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:29:38.318199336Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu bionic \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:42:17.39668355Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:42:17.39668355Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r32.7 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t186 r32.7 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:43:07.639938935Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:43:07.900714288Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu bionic \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c09969dbc5e84ea45848232c61ee613e2283d20a03d72bb98bc819d2fbeb3218",
                    "sha256:f1a10c431917e6c6370b512801924d50f1924d50cf6b15511da14e714ed997f7",
                    "sha256:fe4c82b89080ac39c650a5fb46b555cdb8921e70a02876fa214dc5208252197f",
                    "sha256:98c7685dc7f4a03d0dda0ea5fada687b32ccfa53145ce015fb7f7d97fe59d7d7",
                    "sha256:d979472d1eef1a2ee1097753faf531b7b28bb3cc933d1d709905df77374e185e",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5f66f529a900d605787c3a765f71326c7c2c183d5375be058f2f95b340f153f2",
                    "sha256:7cf29292528484548a674988a7844467a2ba789440fd26aba89ac6c91906f307",
                    "sha256:47195aa84b75d13ce723e7fb942f7957a952852e2de8c7e44e7720071bf458c3",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5b0edd3844f3e183f1b9bc296db190155c9526558fc55ce8ccbb79221d1d0de6",
                    "sha256:9f17471c3f80f24d4e8b4e1311809e2b4482580d74adced14c64daddceb09835",
                    "sha256:67088a3670a0fa3c71bd90253b2fa8d9a6a23008b53e51af73e3125f0b0c4c9f",
                    "sha256:dc837f97b0305c6c24bff88a2a5c4f9b347792b73a751879e6e5f2a99727ee72"
                ]
            }
        },
        "bionic-build-20230904": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "18.04"
                },
                "OnBuild": null
            },
            "created": "2023-09-09T04:41:34.956942178Z",
            "history": [
                {
                    "created": "2023-05-30T09:39:04.161612881Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.331275317Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.50735389Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.680942141Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=18.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:09.908769645Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f56078e320535ad36864a2a30efa5b760ae65dd324cea9d75f01388b17e1183c in / "
                },
                {
                    "created": "2023-05-30T09:39:10.501607889Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:21:26.228871438Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:21:26.228871438Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:21:26.228871438Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:23:44.826985205Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:27:45.938348262Z",
                    "created_by": "RUN /bin/sh -c install_packages \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:27:46.788423973Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:27:46.788423973Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:27:46.788423973Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:27:47.222854273Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:27:47.239027222Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:27:47.270733211Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:27:47.296465108Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:27:47.296465108Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:27:48.156319083Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu bionic   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:27:48.566278761Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu bionic \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:40:41.741749826Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:40:41.741749826Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r32.7 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t186 r32.7 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:41:34.688481644Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:41:34.956942178Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu bionic \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c09969dbc5e84ea45848232c61ee613e2283d20a03d72bb98bc819d2fbeb3218",
                    "sha256:74741d2285d0004ff64245daee54ca9b0d0222bb5cd5c734b038ed1e2abf2e71",
                    "sha256:6d8e57b7d7b2ba8e9a4fec735fe5c2bc51ca05029ffeb0ccd20c824243e4bc40",
                    "sha256:ee26a0af6ee0f92809047cf69c5b291cc313df19609ba2ffb3df2d5c1db94903",
                    "sha256:28a11f00ad3c6e124cbb30c93b88aee5ac2d485a0be774819f720aab92cc8d87",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:00d794a91aea50b65a5e39e1f070f0f70a3d57cc673fae5c0f86e664e019253e",
                    "sha256:c6d0ea43de0af73803142e7a85051a43d6d896e40a4af589869b7fcc9bde2557",
                    "sha256:231cc3ea0153e9dbfd781f71c01ae1ad71897935f827d5ae433d9cce52a39d9d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f08281132d7c73846bb69e84d2bba3ab60cec24dddcf318878313c1700a59e6f",
                    "sha256:6fb2a3a75481267ed56c73db0bd1a4bd344b8b2c0bc0f243680037bd5202b4cd",
                    "sha256:6edf7b5bb0b73b1876e58941acd22fb4017b779775d0aa2948c675e0e1759cfd",
                    "sha256:0f325b0e3da66477fc8f4d053301c792da6984c824fde9c1a2fb5b9123767086"
                ]
            }
        },
        "bionic-build-20230911": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "18.04"
                },
                "OnBuild": null
            },
            "created": "2023-09-11T23:11:34.939155311Z",
            "history": [
                {
                    "created": "2023-05-30T09:39:04.161612881Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.331275317Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.50735389Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.680942141Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=18.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:09.908769645Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f56078e320535ad36864a2a30efa5b760ae65dd324cea9d75f01388b17e1183c in / "
                },
                {
                    "created": "2023-05-30T09:39:10.501607889Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:21:26.228871438Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:21:26.228871438Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:21:26.228871438Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:23:44.826985205Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:27:45.938348262Z",
                    "created_by": "RUN /bin/sh -c install_packages \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:27:46.788423973Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:27:46.788423973Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:27:46.788423973Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:27:47.222854273Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:27:47.239027222Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:27:47.270733211Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:27:47.296465108Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:27:47.296465108Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:27:48.156319083Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu bionic   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:27:48.566278761Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu bionic \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T23:11:34.860278997Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-11T23:11:34.860278997Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T23:11:34.939155311Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu bionic \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c09969dbc5e84ea45848232c61ee613e2283d20a03d72bb98bc819d2fbeb3218",
                    "sha256:74741d2285d0004ff64245daee54ca9b0d0222bb5cd5c734b038ed1e2abf2e71",
                    "sha256:6d8e57b7d7b2ba8e9a4fec735fe5c2bc51ca05029ffeb0ccd20c824243e4bc40",
                    "sha256:ee26a0af6ee0f92809047cf69c5b291cc313df19609ba2ffb3df2d5c1db94903",
                    "sha256:28a11f00ad3c6e124cbb30c93b88aee5ac2d485a0be774819f720aab92cc8d87",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:00d794a91aea50b65a5e39e1f070f0f70a3d57cc673fae5c0f86e664e019253e",
                    "sha256:c6d0ea43de0af73803142e7a85051a43d6d896e40a4af589869b7fcc9bde2557",
                    "sha256:231cc3ea0153e9dbfd781f71c01ae1ad71897935f827d5ae433d9cce52a39d9d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f08281132d7c73846bb69e84d2bba3ab60cec24dddcf318878313c1700a59e6f",
                    "sha256:533853a712efaf503f90402f0ce00f1de348e1de1a20a8a8a04910d25bd83049",
                    "sha256:b1a35c7ff1c15f5d43dc2ab380b39d068417ac257f5b09730b845e3b10b172b6"
                ]
            }
        },
        "bionic-build-20231026": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "18.04"
                },
                "OnBuild": null
            },
            "created": "2023-11-02T15:45:05.144992177Z",
            "history": [
                {
                    "created": "2023-05-30T09:39:04.161612881Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.331275317Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.50735389Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.680942141Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=18.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:09.908769645Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f56078e320535ad36864a2a30efa5b760ae65dd324cea9d75f01388b17e1183c in / "
                },
                {
                    "created": "2023-05-30T09:39:10.501607889Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:17:44.696135035Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:17:44.696135035Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:17:44.696135035Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:20:37.913739686Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:25:20.863936729Z",
                    "created_by": "RUN /bin/sh -c install_packages \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:25:22.105165015Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:25:22.105165015Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:25:22.105165015Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:25:22.276128919Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:25:22.291746184Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:25:22.318417737Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:25:22.332450976Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:25:22.332450976Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:25:23.315671478Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu bionic   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:25:23.512530222Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu bionic \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:45:05.049995764Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:45:05.049995764Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:45:05.144992177Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu bionic \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c09969dbc5e84ea45848232c61ee613e2283d20a03d72bb98bc819d2fbeb3218",
                    "sha256:40c631ba3a8bc8262decf8e5169fe5a67d01fd4f44c33cb92a822ceeb7e7d1c6",
                    "sha256:88504245c714696783cc45204fbb9e2a07a6e618967ee67292c20db732fff3e2",
                    "sha256:03312a13091af6a71b0ca184f3cf474370522aee0fa2058c72ef3bccf09b63d6",
                    "sha256:3fe9268c96fa5801c8c5d45028a76f24eefbea5018a97c4a4cb1965436cbbc2e",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:4a00df1fa7aa607b93649e3618c86b99019a7423ef3b02146788967a177d25de",
                    "sha256:6256a9123e875b99968ebe1eebc177ba677b1c6aa62c2fadb3baa82ac65503b3",
                    "sha256:645047427e89faca377ba144930733467e4118d738ba4bb5bf2520e2ac00094e",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e518fa01bc2f3fcbfdf5eae17c47bcf55bce5eefd2282420317c60742a41d493",
                    "sha256:a191d87650a5ef8de67079a18e30ebede881aadb6a4a7ad1134358e0f4573f22",
                    "sha256:98e42af10a4ae759ca47a54d65f80d675b6d217b4d1b0343fdcbb9cab7a146cb"
                ]
            },
            "variant": "v8"
        },
        "bionic-build-20231103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "18.04"
                },
                "OnBuild": null
            },
            "created": "2023-11-06T01:06:00.818799732Z",
            "history": [
                {
                    "created": "2023-05-30T09:39:04.161612881Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.331275317Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.50735389Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.680942141Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=18.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:09.908769645Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f56078e320535ad36864a2a30efa5b760ae65dd324cea9d75f01388b17e1183c in / "
                },
                {
                    "created": "2023-05-30T09:39:10.501607889Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:42:06.215391876Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:42:06.215391876Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:42:06.215391876Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:43:52.789276667Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:47:06.553972783Z",
                    "created_by": "RUN /bin/sh -c install_packages \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:47:07.680536911Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:47:07.680536911Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:47:07.680536911Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:47:07.823790904Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:47:07.833939075Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:47:07.843322275Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:47:07.855816643Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:47:07.855816643Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:47:08.437108614Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu bionic   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:47:08.596199176Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu bionic \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T01:06:00.716766002Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T01:06:00.716766002Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T01:06:00.818799732Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu bionic \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c09969dbc5e84ea45848232c61ee613e2283d20a03d72bb98bc819d2fbeb3218",
                    "sha256:60a352b9e67caf23ba08abbd3b4a0e040489bf92ebb623afa21a442caee88d8a",
                    "sha256:24390be52d12232df92ec39795f793bd55710e788879e0d707670a204abb334f",
                    "sha256:88ba93f27a296be3aa725123d4dbe2d7f9bf967210f5595ff5f8a68419111ddb",
                    "sha256:71020f3561582bcb01689840272690b0a81400be4e1f4ceadca8930a004584f7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:70d1f50b5cb73bdf3b78a1fd7b8f324d553b54c4871eb18253555b32439a56ce",
                    "sha256:679f8fd813b8a0d7e8ed403af536d6037beb8c3796842a5306183d234dd61bd2",
                    "sha256:a174ee053139b2bc022f6e7399b8cdfd474ae3461833b1e44e1a442ce6e9e365",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:18f79280806747992d8b1a396280148e3e0c557c58e65aed8d74a6a16853883d",
                    "sha256:1ea8654c0e7446e909028bc6b12406d9bec9c4978ac3de760e287f822a4b05b2",
                    "sha256:25c044c0f3ebebbb1f7c668d18e6c0e725b0fe8f3607e35ec34abba8d89f043f"
                ]
            },
            "variant": "v8"
        },
        "bionic-build-20240103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "18.04"
                },
                "OnBuild": null
            },
            "created": "2024-01-05T12:03:02.516574839Z",
            "history": [
                {
                    "created": "2023-05-30T09:39:04.161612881Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.331275317Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.50735389Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.680942141Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=18.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:09.908769645Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f56078e320535ad36864a2a30efa5b760ae65dd324cea9d75f01388b17e1183c in / "
                },
                {
                    "created": "2023-05-30T09:39:10.501607889Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:44:23.706294992Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:44:23.706294992Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:44:23.706294992Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:07.446101401Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:49:07.348262763Z",
                    "created_by": "RUN /bin/sh -c install_packages \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:49:08.133024549Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:49:08.133024549Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:49:08.133024549Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:49:08.252185827Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:49:08.263671849Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:49:08.273157426Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:49:08.30922244Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:49:08.30922244Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:49:08.866137239Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu bionic   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:49:08.989505931Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu bionic \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T12:03:02.437289074Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T12:03:02.437289074Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T12:03:02.516574839Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu bionic \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c09969dbc5e84ea45848232c61ee613e2283d20a03d72bb98bc819d2fbeb3218",
                    "sha256:57c3212c77dfd97a22fd679a7aadb9799a5812265e877002208e621ad05b9360",
                    "sha256:5d9e044eaa893e8d6ca598a4f547c811b904ce8fcf851c9a550c0970e837a77c",
                    "sha256:b194f20c7948b86b763622a7bc7f25baaff2573ac112f43cb75c6955c957fb6a",
                    "sha256:826fb8e863ce7c8e1853e743214a308b28e141fe0cca2443491eb45516a15da6",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c2c5cfb58a2a5c94b058bdb0f2175d8c7d62a3207925243fa858dc4d2c2cff3d",
                    "sha256:fd4e3a9ff34c22a32026afc5dd4b3c13416737776f59141bab4dd09cbc5961cc",
                    "sha256:39815bba4e670492ce7874836da3556cb69e74a11b3f0f250dff52924260dae2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9dd5c0161cb20fb97f66b5e9a0eafa313daed99e093108a362204492f9071c2d",
                    "sha256:98bf55b167e79df137948b150adce0e0da8c3fe93bda7860680baa707ab7fc8d",
                    "sha256:d8ff1e5846cd05089136b38cb8bc8df6a4b8fa31d3a7adcec1bdd22500ece050"
                ]
            },
            "variant": "v8"
        },
        "bionic-build-20240105": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "18.04"
                },
                "OnBuild": null
            },
            "created": "2024-01-06T07:55:41.845230254Z",
            "history": [
                {
                    "created": "2023-05-30T09:39:04.161612881Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.331275317Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.50735389Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.680942141Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=18.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:09.908769645Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f56078e320535ad36864a2a30efa5b760ae65dd324cea9d75f01388b17e1183c in / "
                },
                {
                    "created": "2023-05-30T09:39:10.501607889Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:37:55.467904283Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:37:55.467904283Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:37:55.467904283Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:41.654398504Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:42:53.317536529Z",
                    "created_by": "RUN /bin/sh -c install_packages \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:42:54.37824441Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:42:54.37824441Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:42:54.37824441Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:42:54.500192787Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:42:54.512516845Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:42:54.521824242Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:42:54.562319651Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:42:54.562319651Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:42:55.309949146Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu bionic   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:42:55.42805883Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu bionic \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:55:41.758276213Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:55:41.758276213Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:55:41.845230254Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu bionic \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c09969dbc5e84ea45848232c61ee613e2283d20a03d72bb98bc819d2fbeb3218",
                    "sha256:f3850ccf0dfcf0d958184570d79a4fda6f94dd8be41933e1751dfa148cf638d2",
                    "sha256:39a424f1aeb171f652b01a7f58876d799f4d9654a94d6c763f7e588144628d18",
                    "sha256:c42a5c303773b73e765f79f590ae461e09fbd0b509fe0c20f269119b063dcbb9",
                    "sha256:9020cf73ec35fe24f77b5de1ae0f96fe084f92864cbe41bd66dc68d8c959b60e",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a81bbe4545de9b5430cc8bec7749b57ca039b8092a33b2e158646d6387fa6240",
                    "sha256:de09b69271df81b91fcdbbf4d90acc87ba5a90841fe6e7ebd74339d94d7620e9",
                    "sha256:52f6101b26819c737f350886d06490d12c3d5b71cfc027c157e27d98634148a0",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ce6a5fc60785998f53b193bfcbdae2349c18ea6f22c3a7a58005a25f4426f95f",
                    "sha256:4be4f1d7a5c72f96601461df2eb744ebab958d4cdb178a576935d5b08554e491",
                    "sha256:1ae61cb53909aa484ae8d1cb3785d20065deace17663427d9107a016ec791996"
                ]
            },
            "variant": "v8"
        },
        "bionic-build-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "18.04"
                }
            },
            "created": "2024-04-06T13:38:53.412638739Z",
            "history": [
                {
                    "created": "2023-05-30T09:39:04.161612881Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.331275317Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.50735389Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.680942141Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=18.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:09.908769645Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f56078e320535ad36864a2a30efa5b760ae65dd324cea9d75f01388b17e1183c in / "
                },
                {
                    "created": "2023-05-30T09:39:10.501607889Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:20:49.529027937Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:20:49.529027937Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:20:49.529027937Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:36.247426151Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:25:48.880778474Z",
                    "created_by": "RUN /bin/sh -c install_packages \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:25:49.972845956Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:25:49.972845956Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:25:49.972845956Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:25:50.101582255Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:25:50.111697868Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:25:50.150306178Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:25:50.186219597Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:25:50.186219597Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:25:50.903920188Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu bionic   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:25:51.016605829Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu bionic \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:38:53.317657863Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:38:53.317657863Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:38:53.412638739Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu bionic \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c09969dbc5e84ea45848232c61ee613e2283d20a03d72bb98bc819d2fbeb3218",
                    "sha256:72fd1a688876607549b747a5481455224066d371453cff6adb3a109990c9db72",
                    "sha256:2a502a7b0585dd25785f636510966074e4f0c32328e8b7e68547d1b43b9412e5",
                    "sha256:cdeecab2db6e2ce7e21fc08762c341f49f996ac012d40ee14e59b6756a922f67",
                    "sha256:3cd8351bb120393eec2db3fd6057ef1588a5fffea925907d69aa96ca1a438929",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e1ab395a6fd5bcb968cc7632d0df31cd1f728d17889260a002ec2ec94a5b25d9",
                    "sha256:482ee4bb78e9b8efb1f23d5bd408b39d2b1422641bc47d14a76f38b49a7084fb",
                    "sha256:4eda195c5a1bf45c204cad09ebd88b17a1fbb1c676321b7d72ef66703603b8fe",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:898d08912cbfef0b89f75c7799e25d8423cca485101495b1e40c031f7a57cf55",
                    "sha256:caf961ffb5aaeaf2d537c26e2c3958631f2edb8a0f8f8f662be2e13c223f5f9d",
                    "sha256:7b41385110c0a94b4704f3e78c38110b02d26c1d20015dc17bd6f9ab819b1f62"
                ]
            },
            "variant": "v8"
        },
        "bionic-build-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "18.04"
                }
            },
            "created": "2024-04-09T18:53:10.320154989Z",
            "history": [
                {
                    "created": "2023-05-30T09:39:04.161612881Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.331275317Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.50735389Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.680942141Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=18.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:09.908769645Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f56078e320535ad36864a2a30efa5b760ae65dd324cea9d75f01388b17e1183c in / "
                },
                {
                    "created": "2023-05-30T09:39:10.501607889Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:57.475818731Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:57.475818731Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:57.475818731Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:45.995584977Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:40:07.126510286Z",
                    "created_by": "RUN /bin/sh -c install_packages \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:40:09.195877197Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:40:09.195877197Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:40:09.195877197Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:40:09.317102948Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:40:09.327466992Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:40:09.367461412Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:40:09.376680703Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:40:09.376680703Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:40:09.93826843Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu bionic   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:40:10.06226169Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu bionic \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T18:53:10.23725276Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T18:53:10.23725276Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T18:53:10.320154989Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu bionic \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c09969dbc5e84ea45848232c61ee613e2283d20a03d72bb98bc819d2fbeb3218",
                    "sha256:44fe1c648a7191c5ded57c3928e4e73dfa522893d4a42d465d778d2e054542c7",
                    "sha256:f33696f40c397de2114d2881c39c16ccbb1a84f338190f9f4bd4212688b1f0ba",
                    "sha256:a7d0f34832057399944b0377a9ad87c922d49fe4c3de41da308575a2e35e883c",
                    "sha256:cadddae7e61fa0d57749e886abda7891633bf72431e5e6c15f799b009ece8bb0",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3e5a70b92863c0d9fd749967859433ce1fcde1d8bf000d30874ad37b97a781de",
                    "sha256:df3e97c3cb8b8f03d0e684898c5a9b8978b8d3982a70b19f7a8ee1da6045a9cd",
                    "sha256:d190ec244e9dd1820ad9024c630c4eb6f60982005f028faa0d36433e1cd90d94",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:54f70c508654a7dba3c219ad68816ddfb0d13facd149a92b98e5e563818c034d",
                    "sha256:4d37bdfd0ca68134908f1d86bd98aed8c0e7748adefbdd10e6451a2e4cb7b925",
                    "sha256:8dd01a8faa1a4afff3f578049993026f1af2763d01fc72b15ada4cc4e48604ff"
                ]
            },
            "variant": "v8"
        },
        "bionic-build-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "18.04"
                }
            },
            "created": "2024-05-02T02:40:07.887937761Z",
            "history": [
                {
                    "created": "2023-05-30T09:39:04.161612881Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.331275317Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.50735389Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.680942141Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=18.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:09.908769645Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f56078e320535ad36864a2a30efa5b760ae65dd324cea9d75f01388b17e1183c in / "
                },
                {
                    "created": "2023-05-30T09:39:10.501607889Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:15.104206178Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:15.104206178Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:15.104206178Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:05.05351136Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:27:42.047457173Z",
                    "created_by": "RUN /bin/sh -c install_packages \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:27:42.837881352Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:27:42.837881352Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:27:42.837881352Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:27:42.959730991Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:27:42.970028487Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:27:43.004524982Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:27:43.014820648Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:27:43.014820648Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:27:43.612975648Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu bionic   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:27:43.728969999Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu bionic \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:40:07.795538773Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:40:07.795538773Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:40:07.887937761Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu bionic \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c09969dbc5e84ea45848232c61ee613e2283d20a03d72bb98bc819d2fbeb3218",
                    "sha256:90a4bd66b8215dbcfa23ee60d59593f93c634f43d01b41707ba29295fbc73e49",
                    "sha256:3bf73ae36d61f8a30231edcee5be0e572149657fda8a92b2867d2f8ed5359c69",
                    "sha256:98e146754600c1edbd21c9ab3c708f6fbe8e85be1f587bf0f2992c5fa2480ed6",
                    "sha256:62537c8dd5d3bfcedaa73dcc26f79c1cadd1ab9a951664f407ded1401af9ca27",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ecfb8601ac3c652dfeebee5e7c670eb13d815c3d08a64510f37787d5c6322a90",
                    "sha256:ebf246ad74ccddb851bc2b082d77c449185eaffc7eb2abad480bb45fcf9bd78c",
                    "sha256:66a72102057a354a17575411871cdeb53c6faf6d35a4327402bcfa73ba9ef8e3",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:79d6180492c0284af9838b5c8f06bcd5346f059002258f12c73eb40f880bf30a",
                    "sha256:1f849637721f51280b2ee9d84497e023374bae9cd2a8514d0bd7a2f43980d76a",
                    "sha256:53b1d1c65ddc85840e6f4ebe02e8d91808aa6f9c984953a4f91a513827cbb435"
                ]
            },
            "variant": "v8"
        },
        "bionic-run": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "18.04"
                }
            },
            "created": "2024-05-02T02:40:21.162313055Z",
            "history": [
                {
                    "created": "2023-05-30T09:39:04.161612881Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.331275317Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.50735389Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.680942141Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=18.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:09.908769645Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f56078e320535ad36864a2a30efa5b760ae65dd324cea9d75f01388b17e1183c in / "
                },
                {
                    "created": "2023-05-30T09:39:10.501607889Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:12.213324334Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:12.213324334Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:12.213324334Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:23:58.012083418Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:23:58.633450684Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:23:58.633450684Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:23:58.633450684Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:23:58.744138799Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:23:58.754894535Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:23:58.766424431Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:23:58.800872971Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:23:58.800872971Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:23:59.533029218Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu bionic   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:23:59.656584666Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu bionic \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:40:21.063157685Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:40:21.063157685Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:40:21.162313055Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu bionic \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c09969dbc5e84ea45848232c61ee613e2283d20a03d72bb98bc819d2fbeb3218",
                    "sha256:aa708c06019f5034e4131da7063172912bd4874d878256d92c0192d735071a08",
                    "sha256:114226a0550176afd6ef736d7f12a6e10929be0418884a3c877933b634c7738c",
                    "sha256:ce8cc178cc2a69249686f32c5fa3c1dce5d7c9de7a18b13fcfcc64c778a6c269",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:778755de9d5c42a1057666e508c3f83a5054567cc744ed41355807f0f8462d01",
                    "sha256:80469d10c45766815276b3485f235521e828011c7eb399b93d0e2b48bdb7e5fc",
                    "sha256:e1c7658ccac6d65bd644cea14bdb713bddb29794732c314b0a7a5340df611726",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e0ccf12687e5b53bb3415ff297e0034766c5370bbb211ef961751c159623b33c",
                    "sha256:da20e86a9581d4f67644b96836a273d8f376886edf93291a16f62c76de12684e",
                    "sha256:7611e5f562833d098749cd6f7bc53877c3d579e2e57031cd32d98a8faa23478b"
                ]
            },
            "variant": "v8"
        },
        "bionic-run-20230829": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "18.04"
                },
                "OnBuild": null
            },
            "created": "2023-09-02T04:44:22.9351984Z",
            "history": [
                {
                    "created": "2023-05-30T09:39:04.161612881Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.331275317Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.50735389Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.680942141Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=18.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:09.908769645Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f56078e320535ad36864a2a30efa5b760ae65dd324cea9d75f01388b17e1183c in / "
                },
                {
                    "created": "2023-05-30T09:39:10.501607889Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:22:01.415037775Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:22:01.415037775Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:22:01.415037775Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:24:23.016804737Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:30:16.213216639Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:30:16.213216639Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:30:16.213216639Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:30:16.589421228Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:30:16.607140529Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:30:16.614820259Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:30:16.643785851Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:30:16.643785851Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:30:17.52443118Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu bionic   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:30:17.809724429Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu bionic \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:43:27.519670338Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:43:27.519670338Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r32.7 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t186 r32.7 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:44:22.62617655Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:44:22.9351984Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu bionic \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c09969dbc5e84ea45848232c61ee613e2283d20a03d72bb98bc819d2fbeb3218",
                    "sha256:f1a10c431917e6c6370b512801924d50f1924d50cf6b15511da14e714ed997f7",
                    "sha256:fe4c82b89080ac39c650a5fb46b555cdb8921e70a02876fa214dc5208252197f",
                    "sha256:7f7b1ee69ab694b2165de0b3bf2cdd62ca4d1c57044fcaf2f4dfa5bfa31154b7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:62dd8f2013a8b54221f71421a1d7210822b97d63f1090e544794609ea15b77db",
                    "sha256:9c650c364c636bc46b97b59bc78f8fdea7f24a21253dcf9b92a19e38543f2b59",
                    "sha256:a7933e9a83310d79c9d35d96408a68e76a1a38af004c13c54862c689c88c60f5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8f794ad74cae2804f549c20278e6a06073ecbad98b0f6cee0eba24e24ad875fd",
                    "sha256:111bd9917f76b1777f461e374f893ece5a79331a5a3ba5f05874c4a96e10a1f8",
                    "sha256:443c08fc204ca83b8dde705cf9c8fb6ba2c3d00a5111a6ca4411db87c991c66f",
                    "sha256:f4cfb504832522f2748bf3cccbf2b2c8c47b5a4cd6316bb1ec341d3ccff71863"
                ]
            }
        },
        "bionic-run-20230904": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "18.04"
                },
                "OnBuild": null
            },
            "created": "2023-09-09T04:42:53.683344387Z",
            "history": [
                {
                    "created": "2023-05-30T09:39:04.161612881Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.331275317Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.50735389Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.680942141Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=18.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:09.908769645Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f56078e320535ad36864a2a30efa5b760ae65dd324cea9d75f01388b17e1183c in / "
                },
                {
                    "created": "2023-05-30T09:39:10.501607889Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:21:26.228871438Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:21:26.228871438Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:21:26.228871438Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:23:44.826985205Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:23:45.739903088Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:23:45.739903088Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:23:45.739903088Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:23:46.063097432Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:23:46.079409477Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:23:46.088462513Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:23:46.113059181Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:23:46.113059181Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:23:47.046052766Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu bionic   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:23:47.458332141Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu bionic \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:41:55.499778497Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:41:55.499778497Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r32.7 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t186 r32.7 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:42:53.29925511Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:42:53.683344387Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu bionic \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c09969dbc5e84ea45848232c61ee613e2283d20a03d72bb98bc819d2fbeb3218",
                    "sha256:74741d2285d0004ff64245daee54ca9b0d0222bb5cd5c734b038ed1e2abf2e71",
                    "sha256:6d8e57b7d7b2ba8e9a4fec735fe5c2bc51ca05029ffeb0ccd20c824243e4bc40",
                    "sha256:ba59f92dac4e7ba0029737f0f3ae5660f5ea4981e5a1b19c229c88f177dbf43b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a1158dacc700f844f596ff8ae0ede8382b07b5aebfe850e2f61b75b1a52320d2",
                    "sha256:5947b9e9ed961ab70f973d7450f42ec5f03ee2165c85ffc489b982a50866989c",
                    "sha256:98f4f2f234d36a36e2b7d7ba8cdf5c65bfb95df9cad7ca6215f69929542220fc",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7ecc10df17853620d6330dc8bf7b7e7aa1dc2ed14d61bc1aa798d1cb20a6387a",
                    "sha256:d5368389be61cf36891e0c78802c452764ba32819db2ea2a834f5f0fe8b2ee1b",
                    "sha256:489de00f5eab63ed60aa4c9f8cfbd4e91c0c70abe7e87673df7a023aa715690f",
                    "sha256:f02e77676263cbf4015ff38d510d5e238401bf0ee65aedc90f55bf2f649f40de"
                ]
            }
        },
        "bionic-run-20230911": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "18.04"
                },
                "OnBuild": null
            },
            "created": "2023-09-11T23:11:59.363029243Z",
            "history": [
                {
                    "created": "2023-05-30T09:39:04.161612881Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.331275317Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.50735389Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.680942141Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=18.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:09.908769645Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f56078e320535ad36864a2a30efa5b760ae65dd324cea9d75f01388b17e1183c in / "
                },
                {
                    "created": "2023-05-30T09:39:10.501607889Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:21:26.228871438Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:21:26.228871438Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:21:26.228871438Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:23:44.826985205Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:23:45.739903088Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:23:45.739903088Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:23:45.739903088Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:23:46.063097432Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:23:46.079409477Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:23:46.088462513Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:23:46.113059181Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:23:46.113059181Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:23:47.046052766Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu bionic   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:23:47.458332141Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu bionic \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T23:11:59.223540553Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-11T23:11:59.223540553Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T23:11:59.363029243Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu bionic \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c09969dbc5e84ea45848232c61ee613e2283d20a03d72bb98bc819d2fbeb3218",
                    "sha256:74741d2285d0004ff64245daee54ca9b0d0222bb5cd5c734b038ed1e2abf2e71",
                    "sha256:6d8e57b7d7b2ba8e9a4fec735fe5c2bc51ca05029ffeb0ccd20c824243e4bc40",
                    "sha256:ba59f92dac4e7ba0029737f0f3ae5660f5ea4981e5a1b19c229c88f177dbf43b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a1158dacc700f844f596ff8ae0ede8382b07b5aebfe850e2f61b75b1a52320d2",
                    "sha256:5947b9e9ed961ab70f973d7450f42ec5f03ee2165c85ffc489b982a50866989c",
                    "sha256:98f4f2f234d36a36e2b7d7ba8cdf5c65bfb95df9cad7ca6215f69929542220fc",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7ecc10df17853620d6330dc8bf7b7e7aa1dc2ed14d61bc1aa798d1cb20a6387a",
                    "sha256:e3cb2c12eceefc177a8247cb2d37e0b3941d443c3a6d7834fc51b9cdca609336",
                    "sha256:886e49ac02c85e3ff41b583e53c5840e6366087b7181e70bffe76e5de48a4fd4"
                ]
            }
        },
        "bionic-run-20231026": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "18.04"
                },
                "OnBuild": null
            },
            "created": "2023-11-02T15:45:27.733482881Z",
            "history": [
                {
                    "created": "2023-05-30T09:39:04.161612881Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.331275317Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.50735389Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.680942141Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=18.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:09.908769645Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f56078e320535ad36864a2a30efa5b760ae65dd324cea9d75f01388b17e1183c in / "
                },
                {
                    "created": "2023-05-30T09:39:10.501607889Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:17:33.983177909Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:17:33.983177909Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:17:33.983177909Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:19:17.76907953Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:19:18.378774326Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:19:18.378774326Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:19:18.378774326Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:19:18.492038312Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:19:18.503499287Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:19:18.514485503Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:19:18.526499983Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:19:18.526499983Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:19:19.116824408Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu bionic   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:19:19.242395316Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu bionic \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:45:27.567588399Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:45:27.567588399Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:45:27.733482881Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu bionic \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c09969dbc5e84ea45848232c61ee613e2283d20a03d72bb98bc819d2fbeb3218",
                    "sha256:15fa1823713cbef83d0983c99cf4979675b91b8e7ad384d345e89e8f91d88eef",
                    "sha256:04db0d1268f94d93c56dff32409e99ddc8fd066b2ef9c2ca2d102466475c7d6f",
                    "sha256:5bf2dd3cb90001ae0b2c4f3dec7bb328815055ccaf55bcd27a3be031e81eaa6d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:567216fb55a65cac65b28b469a589e7f4ce631e49fed5edf38565830952c2253",
                    "sha256:67a42c1d9eebc4ad53774e678855fdf77af7355d2b2176ef472a8afcdd6014a8",
                    "sha256:1b1f256daf90b545ef6e5c68487c0269fb2f9cdc045c025929f52a737b4bc293",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d07dfd1de7ab67445c1ca447b32164b9e273293a551e7d7e5f548bb5ef2bc46c",
                    "sha256:44bf84482fe47ecde0c434d0648b4f834bb112a062b361b2412e6ac8ee3855f5",
                    "sha256:2c2e29b9ad9bf525281437dfa793d4c362a3181e280ab780f85ef0f9ca11a24b"
                ]
            },
            "variant": "v8"
        },
        "bionic-run-20231103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "18.04"
                },
                "OnBuild": null
            },
            "created": "2023-11-06T01:06:15.884562119Z",
            "history": [
                {
                    "created": "2023-05-30T09:39:04.161612881Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.331275317Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.50735389Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.680942141Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=18.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:09.908769645Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f56078e320535ad36864a2a30efa5b760ae65dd324cea9d75f01388b17e1183c in / "
                },
                {
                    "created": "2023-05-30T09:39:10.501607889Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:41:59.011861299Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:41:59.011861299Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:41:59.011861299Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:44:19.212259882Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:44:20.019310877Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:44:20.019310877Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:44:20.019310877Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:44:20.171747661Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:44:20.182806154Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:44:20.192946339Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:44:20.214848124Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:44:20.214848124Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:44:21.085160452Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu bionic   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:44:21.253810272Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu bionic \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T01:06:15.717022143Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T01:06:15.717022143Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T01:06:15.884562119Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu bionic \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c09969dbc5e84ea45848232c61ee613e2283d20a03d72bb98bc819d2fbeb3218",
                    "sha256:2fa782c4e3180e88086cd6234c60193acedcc4bb672bd1220126d6ee7ea102b6",
                    "sha256:eebc2370948d8e8447f3a271794fd65e4d220763d054b5b36e709b909dbb8182",
                    "sha256:baee408f9ce1233b2a38722d79abae8aa857accd86ef5df121e14626124a6fa8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7823c1da0168b36b647f4daa7af638f2c2571aea41ddd80a152c2436c1e972b5",
                    "sha256:c7e0b1568f42a0cd5c0396de2d51dd288ad4711d5c7ea319e1ed0cb4c786d651",
                    "sha256:20df023600e89200d546ee869e9647dfd0b0dcf2a7ac9fa56a4cb931b55b126b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:691b2f87518d19c6f1e452863e8ebd9904874c85511277be391485084a7735c6",
                    "sha256:954cca235e13c97d0e13cd223638d603dfcab322daa6828540c24103b07b6e74",
                    "sha256:9afac2450b4b3c720e2a4500cef44bd60683a08a8a0abef003bf95daea9ce474"
                ]
            },
            "variant": "v8"
        },
        "bionic-run-20240103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "18.04"
                },
                "OnBuild": null
            },
            "created": "2024-01-05T12:03:00.835434126Z",
            "history": [
                {
                    "created": "2023-05-30T09:39:04.161612881Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.331275317Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.50735389Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.680942141Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=18.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:09.908769645Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f56078e320535ad36864a2a30efa5b760ae65dd324cea9d75f01388b17e1183c in / "
                },
                {
                    "created": "2023-05-30T09:39:10.501607889Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:44:24.755342736Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:44:24.755342736Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:44:24.755342736Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:09.234309008Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:09.979513094Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:09.979513094Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:46:09.979513094Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:46:10.094674381Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:10.106925154Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:10.115986829Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:10.145582231Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:10.145582231Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:46:10.735536971Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu bionic   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:10.855181408Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu bionic \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T12:03:00.730883682Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T12:03:00.730883682Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T12:03:00.835434126Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu bionic \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c09969dbc5e84ea45848232c61ee613e2283d20a03d72bb98bc819d2fbeb3218",
                    "sha256:052d3b440a066abb5317e6e1af2f1f9894d81d5e87dc7fcd7605e73f72c2a0df",
                    "sha256:d81ae3b8ba0239d9df4ea0b00db306d96a9fd6020d52da0453819406d44c144f",
                    "sha256:060d8a555f45c135b06cc13260bc4b216cfe628374e9c353679d9ef22456bdbd",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b68b1c27af50ccabe70936c993e6f1d855d408ed1d8dc4501b39863be5f7d66e",
                    "sha256:6d61194ec900717559d0d3dc2b27f7d90c2d7c0f12445f3082e2bf35ddc81385",
                    "sha256:2c0cb52663343703697d703d95cf2dabab8185e3cfa9ee632f78eac6bfad09e1",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b5eb153ac0f7f0b753e5e5ec518e500dd9d2202019200eba2f155fe9fc18211d",
                    "sha256:04eb6fa13be928cadc7d0543c04621356c88bff562b8a50ffd8733846ceaf045",
                    "sha256:28a1d64810967c3f52d5899888dbb668e22b6ca24aec668cfcbbe39f5d768f30"
                ]
            },
            "variant": "v8"
        },
        "bionic-run-20240105": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "18.04"
                },
                "OnBuild": null
            },
            "created": "2024-01-06T07:55:39.59651136Z",
            "history": [
                {
                    "created": "2023-05-30T09:39:04.161612881Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.331275317Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.50735389Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.680942141Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=18.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:09.908769645Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f56078e320535ad36864a2a30efa5b760ae65dd324cea9d75f01388b17e1183c in / "
                },
                {
                    "created": "2023-05-30T09:39:10.501607889Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:37:55.179749018Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:37:55.179749018Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:37:55.179749018Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:38.863600272Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:39.605999705Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:39.605999705Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:39:39.605999705Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:39:39.72579217Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:39.735337908Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:39.744524144Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:39.779187492Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:39.779187492Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:39:40.555663271Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu bionic   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:40.666345092Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu bionic \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:55:39.496144081Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:55:39.496144081Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:55:39.59651136Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu bionic \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c09969dbc5e84ea45848232c61ee613e2283d20a03d72bb98bc819d2fbeb3218",
                    "sha256:f402c23ed6fb3078d0a4d77065f10d1c1d053c223b49857776b7288aaccc241d",
                    "sha256:dcd853bb691693104ec73506105f9605df40b82fb2f3030cd0c9e022cbfdf4d8",
                    "sha256:02f0b6252a10990bd81dc4eeb72c27f919ebdc72f3e5dfe628d2be8fadd2d58e",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:abac51bcd82e69be4b3a153fe2ce5c4b9e6f6de61046b4c8b3eafc8081d65e78",
                    "sha256:1beb55097296a06c33a9802243b42afa162e6c2c9f3ea1378323d29f00e362a5",
                    "sha256:3de707268f20f539ddb383cc5cd30965b0b644ac6c3fb02fba8988b61a3d3798",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2a57a81883ea3af6913c8ea6044eb1766627a864822d9fef0097f9fa6aa116a5",
                    "sha256:52acc391629876402b0e4a76a6e215e9da6e0c01005a96890235ceb8ea63de4c",
                    "sha256:eb781e0b3315f95d85baeaa4d172419aec82d41aa265c5094d1ec1b61b6dff68"
                ]
            },
            "variant": "v8"
        },
        "bionic-run-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "18.04"
                }
            },
            "created": "2024-04-06T13:38:46.565108167Z",
            "history": [
                {
                    "created": "2023-05-30T09:39:04.161612881Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.331275317Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.50735389Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.680942141Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=18.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:09.908769645Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f56078e320535ad36864a2a30efa5b760ae65dd324cea9d75f01388b17e1183c in / "
                },
                {
                    "created": "2023-05-30T09:39:10.501607889Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:20:44.098358362Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:20:44.098358362Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:20:44.098358362Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:25.982103376Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:26.724076166Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:26.724076166Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:22:26.724076166Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:22:26.836666929Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:26.845271311Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:26.853174427Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:26.883345187Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:26.883345187Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:22:27.534846963Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu bionic   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:27.683295089Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu bionic \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:38:46.464835352Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:38:46.464835352Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:38:46.565108167Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu bionic \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c09969dbc5e84ea45848232c61ee613e2283d20a03d72bb98bc819d2fbeb3218",
                    "sha256:f7cea31e9442b91a1604deba7db57ebea221b53145407166934e3ea30e4cfa77",
                    "sha256:667f52d5b7abc72729c4065a53309ff739cae1cdd76bcda4721a33dfe0c6257e",
                    "sha256:2a6224ed2f3cede5e8376655fa909bed14119304bd7bfbbdb0d7d4ab6e668b65",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0b72a0d4345bc2393c81a710f832f3ac13f3283df3eb680e23e0f4b8c4c509f3",
                    "sha256:d9e9b4e34cc9cc41a8eebfb615a0f39a6e3960c876760162d7728c3dcad1d566",
                    "sha256:47e9a459ba82543e9c543825ce1347f42cf6b0c80de6e4fa2d2461dcb62f82df",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:522f66093ed872fa6332754b58b93e058016e3bb27550d65f56a27192f7160f7",
                    "sha256:d5b5ffb0064cac0c36bf0168e552d44ee515a95f54414ae2f333f050d04e58cd",
                    "sha256:5d3cdcc759a483f104a54cf363c58114f8efd516215dc6ab5612d29f7d0d62b4"
                ]
            },
            "variant": "v8"
        },
        "bionic-run-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "18.04"
                }
            },
            "created": "2024-04-09T18:52:38.457591733Z",
            "history": [
                {
                    "created": "2023-05-30T09:39:04.161612881Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.331275317Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.50735389Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.680942141Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=18.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:09.908769645Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f56078e320535ad36864a2a30efa5b760ae65dd324cea9d75f01388b17e1183c in / "
                },
                {
                    "created": "2023-05-30T09:39:10.501607889Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:53.713674969Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:53.713674969Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:53.713674969Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:39.999958906Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:40.919014888Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:40.919014888Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:40.919014888Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:41.038260975Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:41.068694561Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:41.120502789Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:41.134720118Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:41.134720118Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:41.72031434Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu bionic   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:41.835243328Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu bionic \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T18:52:38.355302767Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T18:52:38.355302767Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T18:52:38.457591733Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu bionic \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c09969dbc5e84ea45848232c61ee613e2283d20a03d72bb98bc819d2fbeb3218",
                    "sha256:75cb56b0f42fde53732a98b50c0aff89649fa9149df56d4f776ee98af17f7bd1",
                    "sha256:8b5b362a46c4720938363fdd6ef7a83a2b8778f967e779680f79ad9705bfd43d",
                    "sha256:c0c3eb874bd490c71b8027379f50fc6470568a80021dd24224bad08a03881c43",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c0f7d04a830d533baf6885021fe5161e9503d4b53c4ddd0123a2a7628a8cf863",
                    "sha256:30e72e6da9708b13924b7aeb8ca3912fba7632e00a8dfb6f01ee3a0e013d415e",
                    "sha256:810425e6c002e4ec98f437fb1fc588ea41a347f564e3b0cda7bf2f09dc215048",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d0b0d68e9b944cb785c9a04d23f41405bdff4ef5703fdc1d840285ba03b3da14",
                    "sha256:7409e84d36d9f942811a57c6fcd91a398782cb4aa29f4bceb9ea7d881d3b1dbf",
                    "sha256:5f0f2307896a700d032adc1eb17f1a1c53d455c2c59fdb9df1e13549d9be0655"
                ]
            },
            "variant": "v8"
        },
        "bionic-run-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "18.04"
                }
            },
            "created": "2024-05-02T02:40:21.162313055Z",
            "history": [
                {
                    "created": "2023-05-30T09:39:04.161612881Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.331275317Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.50735389Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:04.680942141Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=18.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:39:09.908769645Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f56078e320535ad36864a2a30efa5b760ae65dd324cea9d75f01388b17e1183c in / "
                },
                {
                    "created": "2023-05-30T09:39:10.501607889Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:12.213324334Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:12.213324334Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:12.213324334Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:23:58.012083418Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:23:58.633450684Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:23:58.633450684Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:23:58.633450684Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:23:58.744138799Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:23:58.754894535Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:23:58.766424431Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:23:58.800872971Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:23:58.800872971Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:23:59.533029218Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu bionic   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:23:59.656584666Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu bionic \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:40:21.063157685Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:40:21.063157685Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:40:21.162313055Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu bionic \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c09969dbc5e84ea45848232c61ee613e2283d20a03d72bb98bc819d2fbeb3218",
                    "sha256:aa708c06019f5034e4131da7063172912bd4874d878256d92c0192d735071a08",
                    "sha256:114226a0550176afd6ef736d7f12a6e10929be0418884a3c877933b634c7738c",
                    "sha256:ce8cc178cc2a69249686f32c5fa3c1dce5d7c9de7a18b13fcfcc64c778a6c269",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:778755de9d5c42a1057666e508c3f83a5054567cc744ed41355807f0f8462d01",
                    "sha256:80469d10c45766815276b3485f235521e828011c7eb399b93d0e2b48bdb7e5fc",
                    "sha256:e1c7658ccac6d65bd644cea14bdb713bddb29794732c314b0a7a5340df611726",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e0ccf12687e5b53bb3415ff297e0034766c5370bbb211ef961751c159623b33c",
                    "sha256:da20e86a9581d4f67644b96836a273d8f376886edf93291a16f62c76de12684e",
                    "sha256:7611e5f562833d098749cd6f7bc53877c3d579e2e57031cd32d98a8faa23478b"
                ]
            },
            "variant": "v8"
        },
        "build": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                }
            },
            "created": "2024-05-02T02:40:03.973438666Z",
            "history": [
                {
                    "created": "2024-04-27T14:32:22.643440355Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:32:22.768221855Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:32:22.922781285Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:32:23.070247637Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:32:33.475488206Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:18035d0a8c59e3306bad4219c71a52b03397fc8f231baf7f676287c73024d85c in / "
                },
                {
                    "created": "2024-04-27T14:32:33.989941961Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:11.45435502Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:11.45435502Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:11.45435502Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:32.219701867Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:28:20.556751422Z",
                    "created_by": "RUN /bin/sh -c install_packages \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:28:21.170108759Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:28:21.170108759Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:28:21.170108759Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:28:21.288842708Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:28:21.299317535Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:28:21.308861982Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:28:21.35408794Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:28:21.35408794Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:28:22.274748769Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:28:22.395535238Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:40:03.8848073Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:40:03.8848073Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:40:03.973438666Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:842bef16b8fb80459504b4621523ac3d78faf7e01d6d9fa7076ed6d4a8f49830",
                    "sha256:5f36a177078485a2d99a5ab825ad3673c88cf3c33aa985e4c71ff4407e8745c3",
                    "sha256:59e8c92f5618d3c40623d0b51147a9fa34173826f787ee4b5b3d3f941c810758",
                    "sha256:8c077cab623f02bd821f5daf97abcbaf2eec47d7cba5e3bdac606a28cf3864cf",
                    "sha256:3617838ef85e313ca7428cf601a6352bf9c9b30a94ea687c8db63c883ab64b58",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b71bb935752deacef677163932ef67131e6130d319f31ac680c7719de4c9a92b",
                    "sha256:6c964c391bd1f7c4eebe899d34623958a4b54135b55dfb05367a8ae8a765bfb8",
                    "sha256:d4181efba17b04bbbd6411558f7fa24d4dbc59a105ede3adb6bddb8b46a5aedf",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:4add95593e9ba7737e2464bf1def73e4d27227b1eee6cf1934b5f73fc2e3fd85",
                    "sha256:efe8a8d81bf0084babf2f5ad813420c49efaf92339ff6278270d1020e68c32e7",
                    "sha256:8db20f21d5b24210d3f8c21332e8eb550f788db6e973bc0e1744e0c8b271cf6d"
                ]
            },
            "variant": "v8"
        },
        "build-20230829": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                },
                "OnBuild": null
            },
            "created": "2023-09-02T04:37:13.189259628Z",
            "history": [
                {
                    "created": "2023-08-16T06:19:52.511034945Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:52.678880469Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:52.846527092Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:53.017052303Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:59.127120216Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3fcf00866c55150f1ea0a5ef7b8473c39275c1fdbf6aba0acd84cacb83d0c564 in / "
                },
                {
                    "created": "2023-08-16T06:19:59.851781663Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:00:23.873526242Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:00:23.873526242Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:00:23.873526242Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:02:54.845294161Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:06:56.671621547Z",
                    "created_by": "RUN /bin/sh -c install_packages \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:06:57.575369175Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:06:57.575369175Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:06:57.575369175Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:06:57.988122767Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:06:58.002972646Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:06:58.016232207Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:06:58.024609308Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:06:58.024609308Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:06:59.683832772Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:07:00.001901719Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:36:25.853300687Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:36:25.853300687Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r32.7 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t186 r32.7 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:37:12.800336493Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:37:13.189259628Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:61bbeda53374249345217a09cd78040f124ef8bc07a1612a1a186d2468f67d54",
                    "sha256:92270994fafef678580dc83e4325fa2f4ae8f3223934c22243dfe7309162be07",
                    "sha256:88be2f314b58b7c97d88f89fe1a9d2589c6951703c29dbcdee1370a38fb0eb73",
                    "sha256:2da7b05b9b2c066da95e684aa433f904559d59953f63b7a4805e780f85a6a419",
                    "sha256:a59f32fea489f5b480c7c7b352486d643961b2106e7734d014e5a9f9e7597073",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:afab8e08d891f236dabee477f49cc1b21c8b40b4297b7edfdf4a06281eec9792",
                    "sha256:1a4202f18e8f7056cd11e6f2fcf89076f970e128cfd63160360adf3b34c20751",
                    "sha256:59bbb1f6c67c3fb01458e76e34f400ceb0ae004ff972800836a680053593001b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:90da16b7d2f1a9171d174743774b329ab0b231d3b7ca646ea377109eab1dd4fc",
                    "sha256:d19cb61d0aad8a26931cc4eaa795db3d2e4458d3b9684bb24c814c4db36cf2d7",
                    "sha256:7288f327175f44b8b032601053f6e94ac0af3b9418bef01df4c17998ff6a2a35",
                    "sha256:3bb6b2f97424a2ac255c13484519b07fb505a025d06eca4cb78cfed3bd7b337c"
                ]
            }
        },
        "build-20230904": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                },
                "OnBuild": null
            },
            "created": "2023-09-09T04:37:02.644699864Z",
            "history": [
                {
                    "created": "2023-08-16T06:19:52.511034945Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:52.678880469Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:52.846527092Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:53.017052303Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:59.127120216Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3fcf00866c55150f1ea0a5ef7b8473c39275c1fdbf6aba0acd84cacb83d0c564 in / "
                },
                {
                    "created": "2023-08-16T06:19:59.851781663Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:46.93114918Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:46.93114918Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:46.93114918Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:18.952261606Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:06:18.916842861Z",
                    "created_by": "RUN /bin/sh -c install_packages \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:06:19.822747165Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:06:19.822747165Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:06:19.822747165Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:06:20.1313966Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:06:20.145175206Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:06:20.159556922Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:06:20.170772691Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:06:20.170772691Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:06:21.7829426Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:06:22.117698827Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:36:12.9252513Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:36:12.9252513Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r32.7 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t186 r32.7 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:37:02.267928447Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:37:02.644699864Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:61bbeda53374249345217a09cd78040f124ef8bc07a1612a1a186d2468f67d54",
                    "sha256:73eb566cd0436219bfde4ac6950bfa86846113f3c3c13e59f1f7259b9fde4798",
                    "sha256:f4f141ccf9b2ed89c1994bab50acd51e197800b7914b79c9a5766edeb1e6264c",
                    "sha256:2dbf04c5b97d4074854481aee89b30c68ea38d43c1bb545a10af3ed8a760398f",
                    "sha256:c362cf0c7daa3e62fddd2b352472dd935de7482d4f5af2a3e973e8d862b9f3cb",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:954735b0918bccbfba80319849757daac5ed795ba26379fa8831f28a251293ee",
                    "sha256:3d0810f1e4df268339bdd893a8666af85a08616ad9081f577a0c54049b55d796",
                    "sha256:7b616e65ebf965ddc313798b109bfbb9e8d9629cf7243252a455838c5b4622ca",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8b2f650f85eb9017436088d130f701ffbd8055a17d2e33b933d4008fac14a588",
                    "sha256:566e187176993fb5787d0a342bbc05a7ab383eeab0972261003689ce08871f8e",
                    "sha256:ca1b222753e7c38b3d1463a09d876df538b494f8f6cf9f0f2566eefa4f080e63",
                    "sha256:58a8eb27a84244b6d685087475c1631c6f5d5af492079eac853a42f1330e069f"
                ]
            }
        },
        "build-20230911": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                },
                "OnBuild": null
            },
            "created": "2023-09-11T23:11:30.251378408Z",
            "history": [
                {
                    "created": "2023-08-16T06:19:52.511034945Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:52.678880469Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:52.846527092Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:53.017052303Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:59.127120216Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3fcf00866c55150f1ea0a5ef7b8473c39275c1fdbf6aba0acd84cacb83d0c564 in / "
                },
                {
                    "created": "2023-08-16T06:19:59.851781663Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:46.93114918Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:46.93114918Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:46.93114918Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:18.952261606Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:06:18.916842861Z",
                    "created_by": "RUN /bin/sh -c install_packages \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:06:19.822747165Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:06:19.822747165Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:06:19.822747165Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:06:20.1313966Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:06:20.145175206Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:06:20.159556922Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:06:20.170772691Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:06:20.170772691Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:06:21.7829426Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:06:22.117698827Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T23:11:30.16729001Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-11T23:11:30.16729001Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T23:11:30.251378408Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:61bbeda53374249345217a09cd78040f124ef8bc07a1612a1a186d2468f67d54",
                    "sha256:73eb566cd0436219bfde4ac6950bfa86846113f3c3c13e59f1f7259b9fde4798",
                    "sha256:f4f141ccf9b2ed89c1994bab50acd51e197800b7914b79c9a5766edeb1e6264c",
                    "sha256:2dbf04c5b97d4074854481aee89b30c68ea38d43c1bb545a10af3ed8a760398f",
                    "sha256:c362cf0c7daa3e62fddd2b352472dd935de7482d4f5af2a3e973e8d862b9f3cb",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:954735b0918bccbfba80319849757daac5ed795ba26379fa8831f28a251293ee",
                    "sha256:3d0810f1e4df268339bdd893a8666af85a08616ad9081f577a0c54049b55d796",
                    "sha256:7b616e65ebf965ddc313798b109bfbb9e8d9629cf7243252a455838c5b4622ca",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8b2f650f85eb9017436088d130f701ffbd8055a17d2e33b933d4008fac14a588",
                    "sha256:664b61042036644d1d8f9beab6f73fb200bf0c2ecfde0ceb7d77570df6f89f9f",
                    "sha256:57873a632c9edf9f387dd1f2091281aec19e81c6c0ebb0bb9936a2f925927c4e"
                ]
            }
        },
        "build-20231026": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                },
                "OnBuild": null
            },
            "created": "2023-11-02T15:44:46.624152344Z",
            "history": [
                {
                    "created": "2023-10-05T07:32:20.951880606Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T07:32:21.015770292Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T07:32:21.080364699Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T07:32:21.153596992Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T07:32:22.639154667Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f8594e26831508c318e42c8dfd9942041031087b8de1bf3fec11fd75b8b30fd4 in / "
                },
                {
                    "created": "2023-10-05T07:32:22.848629339Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:17:46.551397961Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:17:46.551397961Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:17:46.551397961Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:20:55.594585694Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:25:58.788644714Z",
                    "created_by": "RUN /bin/sh -c install_packages \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:25:59.777479211Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:25:59.777479211Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:25:59.777479211Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:25:59.971253403Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:25:59.988656899Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:26:00.016494171Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:26:00.032809249Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:26:00.032809249Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:26:01.945876045Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:26:02.147154564Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:44:46.520721649Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:44:46.520721649Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:44:46.624152344Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d2d3127fc3d362a0516c53fcb8fb983ebb9d1ea2dfbd63b69967a0084f0d45a3",
                    "sha256:d937fd4f39f8d6d8fa66189a698fc34fb90b66da2e15f10fdbfdc7593f42df91",
                    "sha256:956c5c6e99fa84110b6e9d4178d71d4205caa0e6d924acf2c5fcfc1617331b44",
                    "sha256:08907614ebe4533457ae767f5f9d69b84ba18fa61d33df04dedfa8fd08da0734",
                    "sha256:98d6aba74b43f855acb6fda99e2e66f1f9fa09c7026398a0b1b92cdf673bd6a7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:cd46a2751e654ab11312127888271dc039f37345a83cd5d2766a409ce6e91e7e",
                    "sha256:f7a58c7e49b96c5deae6c4ff9a57370c5c659721d934669678da155f971b9257",
                    "sha256:0791cb338c36231e94997723600c7cd2f5898ed5821f945fe2e4a7c49fdde699",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:54c03e0706975ed9ab93c7e2f03371347c3567eb04d8b49e826d98297bfcdf7f",
                    "sha256:bc607c3738429c703efc094230c17d25fa0300f88d4ed9504dd7e0c8dfd2c1e1",
                    "sha256:9dc78aef223df6accf9f8588849c12ae376e9c7715417b460ed3651b15fddf38"
                ]
            },
            "variant": "v8"
        },
        "build-20231103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                },
                "OnBuild": null
            },
            "created": "2023-11-06T01:05:42.915816504Z",
            "history": [
                {
                    "created": "2023-10-05T07:32:20.951880606Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T07:32:21.015770292Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T07:32:21.080364699Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T07:32:21.153596992Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T07:32:22.639154667Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f8594e26831508c318e42c8dfd9942041031087b8de1bf3fec11fd75b8b30fd4 in / "
                },
                {
                    "created": "2023-10-05T07:32:22.848629339Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:42:33.384072497Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:42:33.384072497Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:42:33.384072497Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:45:43.424768722Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:50:08.72359182Z",
                    "created_by": "RUN /bin/sh -c install_packages \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:50:09.753791442Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:50:09.753791442Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:50:09.753791442Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:50:09.940255924Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:50:09.955143145Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:50:09.967457989Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:50:09.994541746Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:50:09.994541746Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:50:11.967989529Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:50:12.162140239Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T01:05:42.812685206Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T01:05:42.812685206Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T01:05:42.915816504Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d2d3127fc3d362a0516c53fcb8fb983ebb9d1ea2dfbd63b69967a0084f0d45a3",
                    "sha256:e9bb0efa2ab3a789b04db6a56a3353576f1d4d73a064284a19e78c7aa34f8171",
                    "sha256:c56259aad21ea29c93e9984feb17efd26854eecc6db6f8996fbbf8eb4a52467e",
                    "sha256:6f7cecaf6268a288ef4c24bbb2ce8b8c9cd85479c76539b01408a382c6f8b354",
                    "sha256:1c7327879edba47b3ebb9f9ecdb2a6a06152f2c9e07bb9a28772e55f91f5d8ab",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d5b44f8648436428c6f54e2db494e864460a7c29b91f237b1c26fbe21cb32940",
                    "sha256:66bead3ffb9e57fda29d4fb62915d7a399f87a6ac18a5124ad442bc12a8c9d8e",
                    "sha256:2a2a006abd37372972386762c4f6bdea57f432f082034c35915b0ecaf258b1e2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a043e97a8c734a925e82774007a25ec52d6322ab7bb8f1dec91f22d619298e74",
                    "sha256:500d818f46ca8caa29c1d94d05dc2d32c9815557e47854b57767f3795e443bd0",
                    "sha256:729de28c17006255f2bacfda9f8d489900dc5c73e715fad70fb31473088ef455"
                ]
            },
            "variant": "v8"
        },
        "build-20240103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                },
                "OnBuild": null
            },
            "created": "2024-01-05T12:02:51.7579565Z",
            "history": [
                {
                    "created": "2023-12-12T11:41:50.758603714Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:41:50.869361588Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:41:50.981745008Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:41:51.093819154Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:41:54.146264118Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50f947da69b3b6c63695be9c49eee16f7a7dcdecdceb51e5bee1609b845bf483 in / "
                },
                {
                    "created": "2023-12-12T11:41:54.521050543Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:44:23.80523853Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:44:23.80523853Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:44:23.80523853Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:16.530288342Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:49:07.69993695Z",
                    "created_by": "RUN /bin/sh -c install_packages \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:49:08.361719057Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:49:08.361719057Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:49:08.361719057Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:49:08.482600668Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:49:08.493958094Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:49:08.522342035Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:49:08.582371017Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:49:08.582371017Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:49:09.697772738Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:49:09.826156112Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T12:02:51.666798047Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T12:02:51.666798047Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T12:02:51.7579565Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3e798a66607c97d027570dbbc112c32956981fbcc244bb2d4d1fddbce4cda84c",
                    "sha256:c1e86ee534e30a9e0ad856246a626e5fa9539cafc86144a8c4573248b88181b2",
                    "sha256:b2eeb0d1f805de23711eb1c6ca37601cebdf84cace0dd3b0c38d1d3959051724",
                    "sha256:8cd990ff3b8e3ec7a8d0d86c40c52e5a05ffaa301beae01843ba1a552c3571a4",
                    "sha256:8f0cf1a5608e0fa478b064528ee9648f6bcad1ef3c4aae2364aa74b12a12e921",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5bec2384b45ead647d90486f3702d429f17ed62117311a5e48822d154204f417",
                    "sha256:bcdbb997ad2dce37f5087ddfacc3e73a500f9055bc61d3453f7702668daf7f54",
                    "sha256:a1356bb6786e6600d4fea415a8c0173073a54657073ec726aabe102d65e62e6f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ffbc6a139b9a719e9432e8e5fbdc025c02dc25e929bbd03a4bab325340679796",
                    "sha256:8236f69dc61480f05539b3cf1af103783f99ce656bf7ba203375214c3820cb2e",
                    "sha256:3b44b9ce9ac539ef1b1b77d8c56086c7dbd556b58a3cb946cc619abbd4487199"
                ]
            },
            "variant": "v8"
        },
        "build-20240105": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                },
                "OnBuild": null
            },
            "created": "2024-01-06T07:55:38.874965676Z",
            "history": [
                {
                    "created": "2023-12-12T11:41:50.758603714Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:41:50.869361588Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:41:50.981745008Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:41:51.093819154Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:41:54.146264118Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50f947da69b3b6c63695be9c49eee16f7a7dcdecdceb51e5bee1609b845bf483 in / "
                },
                {
                    "created": "2023-12-12T11:41:54.521050543Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:37:52.813781715Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:37:52.813781715Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:37:52.813781715Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:43.993820601Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:42:31.232186017Z",
                    "created_by": "RUN /bin/sh -c install_packages \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:42:31.882663014Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:42:31.882663014Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:42:31.882663014Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:42:31.989683312Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:42:31.998924165Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:42:32.026512553Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:42:32.034924287Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:42:32.034924287Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:42:33.142090623Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:42:33.256212935Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:55:38.787847215Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:55:38.787847215Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:55:38.874965676Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3e798a66607c97d027570dbbc112c32956981fbcc244bb2d4d1fddbce4cda84c",
                    "sha256:06f199958bd4bf23fdd093651f2fded886cfd510f924b035e3778a6b3ced8d02",
                    "sha256:9dda24e904d2b3c9e54055d245b52abe928c1db24ce767f0f6ddfebac46bbfc7",
                    "sha256:fa335fe17616bfac8d811e0fe819ead0db30b2b7e26791b16307fbfec406279e",
                    "sha256:b79c64de067344d7d96cf6c7afac2c3ae92487269248f3aadce485e1753f8933",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:69f9e2c95c5be2e22f57abba46e80551b15f85c6e7cbcadc2e90e5f88142626e",
                    "sha256:3aacc0a96ceeff43c753b9b8bea3a4fa81c486152d5c57d583090173b2dc7da8",
                    "sha256:d2db4c66f99cb8e6091a9f357f0349c80120b5da28e4c89b345c58a0b8108b17",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:71679a21859486e78c2d1e5d4afa6975f590caf738374e7873daef93216425c4",
                    "sha256:dfa3eb293f1f62e0817a970ccd3e88c21f6a242ca5109684131684e753f6fa95",
                    "sha256:9d039f1d6b2ce317955a547cd93bc08136d3d24be72c2157557a301c9117b314"
                ]
            },
            "variant": "v8"
        },
        "build-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                }
            },
            "created": "2024-04-06T13:38:47.024937223Z",
            "history": [
                {
                    "created": "2024-02-27T18:53:22.490310908Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T18:53:22.539283006Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T18:53:22.59951827Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T18:53:22.648922452Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T18:53:25.140932403Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:07cdbabf782942af04487c9da03de50a611a51e69d8bac1f593acb73a3ba3a46 in / "
                },
                {
                    "created": "2024-02-27T18:53:25.397886996Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:20:51.393191159Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:20:51.393191159Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:20:51.393191159Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:47.797239004Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:25:38.577235073Z",
                    "created_by": "RUN /bin/sh -c install_packages \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:25:39.213053342Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:25:39.213053342Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:25:39.213053342Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:25:39.331592868Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:25:39.340661154Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:25:39.403893277Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:25:39.412744453Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:25:39.412744453Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:25:40.306296791Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:25:40.420279392Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:38:46.922625924Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:38:46.922625924Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:38:47.024937223Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a510ae0f066c65d73f523d5821fe048a6858e53360ecb8d39b7b931162f11479",
                    "sha256:ec185f876921da799d9608c39de6b845f6c7eb86ab6ec6e520bb6a95c1d6ee4c",
                    "sha256:4ab72ba8653a058f5a9589625d7cf003daa11429046529f6f6792008be9f5479",
                    "sha256:3d3bde061fb1e7a1f080f45dd9eedda19852971dbd17189048f7d723c04dbd3b",
                    "sha256:d5ea2f5da88703e48a630a5ab16972391cc6a89e0615988386f7dcfefdd9c716",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2c98ebe3e32d69f8d99bfb1fe11b8a94f83f7287dc3e71d6f802609aa9b62e7f",
                    "sha256:734aae1dfed6515c3c602b991e94df2dbec51ed0849f9e42eacb14a9958c6949",
                    "sha256:a6e60c30838dd19c92f090cc6ea05ea28051ca64071db90fcd4541d3a97f84bc",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:6d4bd7401dae4c4f490f9cbf9552fdc09f76bb996ba6d1a03fe2f0624e3cfaf3",
                    "sha256:ac0709f98a9d5b2f6a774ea5d79d4f558cec9d4147cca9eb0127b8d9b0544edd",
                    "sha256:0fdfc5fd60545f3dc30d718ab31a56bacc2f058f2b613a2f61299c4123c69692"
                ]
            },
            "variant": "v8"
        },
        "build-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                }
            },
            "created": "2024-04-09T18:52:50.273135599Z",
            "history": [
                {
                    "created": "2024-02-27T18:53:22.490310908Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T18:53:22.539283006Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T18:53:22.59951827Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T18:53:22.648922452Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T18:53:25.140932403Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:07cdbabf782942af04487c9da03de50a611a51e69d8bac1f593acb73a3ba3a46 in / "
                },
                {
                    "created": "2024-02-27T18:53:25.397886996Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:51.407413005Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:51.407413005Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:51.407413005Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:47.450905518Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:57.13494818Z",
                    "created_by": "RUN /bin/sh -c install_packages \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:58.601001321Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:58.601001321Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:39:58.601001321Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:39:58.710795143Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:58.721447105Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:58.730824015Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:58.740399134Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:58.740399134Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:39:59.637994019Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:59.774665814Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T18:52:50.176104355Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T18:52:50.176104355Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T18:52:50.273135599Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a510ae0f066c65d73f523d5821fe048a6858e53360ecb8d39b7b931162f11479",
                    "sha256:76f2671633393717d6786e355ff86136cdb8202fe1b8036aa7c25ad53137d784",
                    "sha256:deba24ccaf880416c44e3db98896b13bd8a207c85f246320ba4d360e19a5b185",
                    "sha256:79f554e61b8a7b19026d9a33f174405f3bbf55539959d2f4a2ebb028eaa7e42b",
                    "sha256:bdefd7c646d02f1e1fd35152f4fc0bcfbd50599a9c1c0b61b47d07828145c978",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a93bbeaaa69ce1acb3e03eaf4e13382e9fe5dd1098e72c1fc2e9e4c795f52301",
                    "sha256:a9888dd2f5c877653f07882b6fb111c0c2d7133b76e4c3473f3fda599e8a6ecd",
                    "sha256:28161e217913d7e2429ea6f26f8f0d7640a6373fc424d0c23b3c0912d4d19d12",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b6c04fdfc177fe957618bd1a895e83b2bfa0d4670b4fc47fd4f0661a206d17a4",
                    "sha256:5937493d2010ba584e964561216f20727176a7716f18e1e6ddea9311cb42805d",
                    "sha256:785b2a30f156564e2eba3a92df9cf04d81857589b5a4ea758d34004b17c58fc0"
                ]
            },
            "variant": "v8"
        },
        "build-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                }
            },
            "created": "2024-05-02T02:40:03.973438666Z",
            "history": [
                {
                    "created": "2024-04-27T14:32:22.643440355Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:32:22.768221855Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:32:22.922781285Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:32:23.070247637Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:32:33.475488206Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:18035d0a8c59e3306bad4219c71a52b03397fc8f231baf7f676287c73024d85c in / "
                },
                {
                    "created": "2024-04-27T14:32:33.989941961Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:11.45435502Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:11.45435502Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:11.45435502Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:32.219701867Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:28:20.556751422Z",
                    "created_by": "RUN /bin/sh -c install_packages \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:28:21.170108759Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:28:21.170108759Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:28:21.170108759Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:28:21.288842708Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:28:21.299317535Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:28:21.308861982Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:28:21.35408794Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:28:21.35408794Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:28:22.274748769Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:28:22.395535238Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:40:03.8848073Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:40:03.8848073Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:40:03.973438666Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:842bef16b8fb80459504b4621523ac3d78faf7e01d6d9fa7076ed6d4a8f49830",
                    "sha256:5f36a177078485a2d99a5ab825ad3673c88cf3c33aa985e4c71ff4407e8745c3",
                    "sha256:59e8c92f5618d3c40623d0b51147a9fa34173826f787ee4b5b3d3f941c810758",
                    "sha256:8c077cab623f02bd821f5daf97abcbaf2eec47d7cba5e3bdac606a28cf3864cf",
                    "sha256:3617838ef85e313ca7428cf601a6352bf9c9b30a94ea687c8db63c883ab64b58",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b71bb935752deacef677163932ef67131e6130d319f31ac680c7719de4c9a92b",
                    "sha256:6c964c391bd1f7c4eebe899d34623958a4b54135b55dfb05367a8ae8a765bfb8",
                    "sha256:d4181efba17b04bbbd6411558f7fa24d4dbc59a105ede3adb6bddb8b46a5aedf",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:4add95593e9ba7737e2464bf1def73e4d27227b1eee6cf1934b5f73fc2e3fd85",
                    "sha256:efe8a8d81bf0084babf2f5ad813420c49efaf92339ff6278270d1020e68c32e7",
                    "sha256:8db20f21d5b24210d3f8c21332e8eb550f788db6e973bc0e1744e0c8b271cf6d"
                ]
            },
            "variant": "v8"
        },
        "focal": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "20.04"
                }
            },
            "created": "2024-05-02T02:40:02.446046258Z",
            "history": [
                {
                    "created": "2024-04-27T14:42:15.114110355Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:42:15.194158109Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:42:15.269776303Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:42:15.335774549Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=20.04",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:42:24.343171441Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d1a4a31f5a3aea1e130c7e173da2ed506ba19e91be74ab9700d398774d0ace22 in / "
                },
                {
                    "created": "2024-04-27T14:42:24.923228587Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:13.885062202Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:13.885062202Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:13.885062202Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:06.064490518Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:06.618737946Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:06.618737946Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:24:06.618737946Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:24:06.724279359Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:06.751006523Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:06.786964422Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:06.796250326Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:06.796250326Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:24:07.364724387Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu focal   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:07.488038717Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu focal \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:40:02.34516972Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:40:02.34516972Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:40:02.446046258Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu focal \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:048ad3e8492c4c225edc3ea8002df2c1efe22cafe3a23c56dbe485caec750069",
                    "sha256:b500cc65b4d85262106af88178662c0de5a5da63381c490a6d6ff229fae89106",
                    "sha256:e003e8ea436283af8e55fea6ce6a825296328932f0dda605bcba3890b73df75b",
                    "sha256:c15828703037fec76c3fb203089cbce19753ea61c3b1ec76f2e3a45b83ef6e21",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:01a5d49a05b4461215d4ad4bd2997f38f2d967e9f68b9ce3a198b43f250a319a",
                    "sha256:5032819b5b74d3306137302ae250bd957ca997e96406a101b0e1126f5397bb17",
                    "sha256:23e5e3f181da0e9fccc84e84d4b6df606940bc28485e717cb893e08f2bb8729a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:baf5bd477debee42aa54cc1e6cf04f174638aacb854ece1199c4ca0d60e918ae",
                    "sha256:cca0c16a33111df804cc9fe06b1992bcc19740aad05d2f5a60c0c35fd8eb88c0",
                    "sha256:9f0f3cb50293ad4c534164d6fd3173a086c11b2a17d8b24bd817ef5435335022"
                ]
            },
            "variant": "v8"
        },
        "focal-20230829": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "20.04"
                },
                "OnBuild": null
            },
            "created": "2023-09-02T04:41:12.614394283Z",
            "history": [
                {
                    "created": "2023-08-01T06:20:56.471540798Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-01T06:20:56.647541471Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-01T06:20:56.830272535Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-01T06:20:57.007362006Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=20.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-01T06:21:03.057259954Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ef6e767091d76c1461d099d5bc7a18c526ec80834cf87280803ab6480192f766 in / "
                },
                {
                    "created": "2023-08-01T06:21:03.811297319Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:07:45.421667717Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:07:45.421667717Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:07:45.421667717Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:10:13.819814155Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:10:14.755228072Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:10:14.755228072Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:10:14.755228072Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:10:15.065147328Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:10:15.080375224Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:10:15.090114178Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:10:15.099891932Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:10:15.099891932Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:10:16.030725762Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu focal   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:10:16.470781712Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu focal \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:40:20.88155806Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:40:20.88155806Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r32.7 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t186 r32.7 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:41:12.385276968Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:41:12.614394283Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu focal \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:66376f73404c2bef0f4cb8d77e0e3696bb974fc08cf68c7bb3587d71f6e9c446",
                    "sha256:bc8226a4d88aa43bd80a013e4fa1fd47b5565eefebe3b7cfc0066237675c78db",
                    "sha256:68c9d54ae45cc0f5a446b1b249ff71d7bb784973ef404152a89a87a8ca68116a",
                    "sha256:e874555ea57ee596e162fe59fa5fdc04f35587c34199309a9fb3a240f4d1013d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:991943bde209f6b9315a0a9e74a0b63460ab36b6476bf5b066edc58fef564db3",
                    "sha256:24d0d008755f6d2c9bb90ad9ae9d451bd86bb979fea8fac5a1d638518c097d8d",
                    "sha256:61268c115e64a5f1a29abcf4d846866dfd01e047d4705b1df024cdddf209ec0b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e8ca2d138c118e2aa46772c5acac29daf9f90e5193b39dfe4c037f4c363a26f0",
                    "sha256:eca9acbbf960282ed4465cef2031fb6cea18056032a925899a6d79c0990e0d5d",
                    "sha256:0d5fd6bf18acd068f1f7e2491e549eb5dbad8bda0b1007af28a2f9d1385afb38",
                    "sha256:38cc17fe18845416b10a752488c1ffc3acebf938c0b1e318294a1eaba4f364e1"
                ]
            }
        },
        "focal-20230904": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "20.04"
                },
                "OnBuild": null
            },
            "created": "2023-09-09T04:39:42.429328214Z",
            "history": [
                {
                    "created": "2023-08-01T06:20:56.471540798Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-01T06:20:56.647541471Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-01T06:20:56.830272535Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-01T06:20:57.007362006Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=20.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-01T06:21:03.057259954Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ef6e767091d76c1461d099d5bc7a18c526ec80834cf87280803ab6480192f766 in / "
                },
                {
                    "created": "2023-08-01T06:21:03.811297319Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:07:17.55526867Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:07:17.55526867Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:07:17.55526867Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:09:46.524636715Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:09:47.390873648Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:09:47.390873648Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:09:47.390873648Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:09:47.809345323Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:09:47.824048465Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:09:47.837805991Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:09:47.857013306Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:09:47.857013306Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:09:48.730428756Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu focal   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:09:49.159894812Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu focal \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:38:47.940525356Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:38:47.940525356Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r32.7 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t186 r32.7 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:39:42.173330795Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:39:42.429328214Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu focal \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:66376f73404c2bef0f4cb8d77e0e3696bb974fc08cf68c7bb3587d71f6e9c446",
                    "sha256:eea6a66bfa5c3c4d368f87b8e7d49de12303d813aa3577f3d27a962f9598abfe",
                    "sha256:06ac68fec754a6640700b58380e7dab7d5760deda8e4fa4750fd471d4ae1fac2",
                    "sha256:479ffc6d1120f270f95c0d162fc18a5c9adff00c2ecdb88076cb13bb4925325c",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:17cfa8930f5890d226440bdb5432bf0b3044fc04428d33cb52cb885740b120d2",
                    "sha256:e4388073db018a0cd6c720ee6891725f7123812fbce97750a8fa2f6853c5a9e3",
                    "sha256:bba45f83c147fad27ca0630f4a3bab27309ad893f120767cc34dd165fd7efa31",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:36d7cb159b315ca178db7f3812d64787ff245a03aca53d64858879668eafffa2",
                    "sha256:762a1d28c2806418b6104c26b7331eda32a23b1efc3524555c0c171fc1e95852",
                    "sha256:5b138cd01ed252c33781494182d2940b4e02e2d239dd42fa79885b0bb20f3001",
                    "sha256:14edf82484804910c48a4d97338be809c7624b3d9e2da66d9cd385ccb6d2902b"
                ]
            }
        },
        "focal-20230911": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "20.04"
                },
                "OnBuild": null
            },
            "created": "2023-09-11T23:11:35.557039351Z",
            "history": [
                {
                    "created": "2023-08-01T06:20:56.471540798Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-01T06:20:56.647541471Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-01T06:20:56.830272535Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-01T06:20:57.007362006Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=20.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-01T06:21:03.057259954Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ef6e767091d76c1461d099d5bc7a18c526ec80834cf87280803ab6480192f766 in / "
                },
                {
                    "created": "2023-08-01T06:21:03.811297319Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:07:17.55526867Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:07:17.55526867Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:07:17.55526867Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:09:46.524636715Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:09:47.390873648Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:09:47.390873648Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:09:47.390873648Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:09:47.809345323Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:09:47.824048465Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:09:47.837805991Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:09:47.857013306Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:09:47.857013306Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:09:48.730428756Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu focal   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:09:49.159894812Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu focal \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T23:11:35.447151715Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-11T23:11:35.447151715Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T23:11:35.557039351Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu focal \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:66376f73404c2bef0f4cb8d77e0e3696bb974fc08cf68c7bb3587d71f6e9c446",
                    "sha256:eea6a66bfa5c3c4d368f87b8e7d49de12303d813aa3577f3d27a962f9598abfe",
                    "sha256:06ac68fec754a6640700b58380e7dab7d5760deda8e4fa4750fd471d4ae1fac2",
                    "sha256:479ffc6d1120f270f95c0d162fc18a5c9adff00c2ecdb88076cb13bb4925325c",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:17cfa8930f5890d226440bdb5432bf0b3044fc04428d33cb52cb885740b120d2",
                    "sha256:e4388073db018a0cd6c720ee6891725f7123812fbce97750a8fa2f6853c5a9e3",
                    "sha256:bba45f83c147fad27ca0630f4a3bab27309ad893f120767cc34dd165fd7efa31",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:36d7cb159b315ca178db7f3812d64787ff245a03aca53d64858879668eafffa2",
                    "sha256:808e07b63d035cf05c26b257492031951f4cd4bcc8600438e272c2f853a66c1a",
                    "sha256:51bcc5bd2a50feb7c169982411b6cdb720f124fcc4d475d3d5f717b99502c7b5"
                ]
            }
        },
        "focal-20231026": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "20.04"
                },
                "OnBuild": null
            },
            "created": "2023-11-02T15:45:04.486380867Z",
            "history": [
                {
                    "created": "2023-10-03T11:04:09.542312368Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-03T11:04:09.753698714Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-03T11:04:09.989411754Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-03T11:04:10.229896279Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=20.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-03T11:04:16.578143714Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f70cc2610ea8fcd25e6e9ae727eb9345d5b7198102f6a6d8e458ab8f99efefc3 in / "
                },
                {
                    "created": "2023-10-03T11:04:17.364970797Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:17:39.982288927Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:17:39.982288927Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:17:39.982288927Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:20:09.874014149Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:20:10.58707027Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:20:10.58707027Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:20:10.58707027Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:20:10.75866994Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:20:10.768318156Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:20:10.786502684Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:20:10.795503898Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:20:10.795503898Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:20:11.575106224Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu focal   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:20:11.73124637Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu focal \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:45:04.325362982Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:45:04.325362982Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:45:04.486380867Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu focal \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:701ccb11c0525a289459678e1ef3e9269b62737fafb033db91061ae53a0e9c1e",
                    "sha256:6b37dc883be7a1883ef1d802323d1975ceb13118c58b0484202c08cee8ca7b96",
                    "sha256:2fd7b4d7e062c7c6b0c213d59bb405d09fa7479d2c9a13dfe2a568ea7d17c223",
                    "sha256:c21570b8332c9b873d51b34174dd0e092b9f9c4e7c4ebacf2a14d641bd94ff73",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3240e2d23cc2b1de66fd805fe4cf39d943300e6203cd82817ff2c0d914969bd3",
                    "sha256:98aa438a48211c1023799fea7e240bf6798717da179c42e575bcf2513f1b92e8",
                    "sha256:5f4130360a4346b7f85a05f0129374af63a76331c9a10d4662ea388a29351660",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:aa791a2bd608d7ea49319db166c74fca7b779b57f5f7e0817fdd681946afdccf",
                    "sha256:eecb49f79c569b815f3176b6f0135cbb799aa76731ade4d6bdbb361f61351869",
                    "sha256:8398ef3f6633c31d1f57fc7ee2fbc3dbdfaaee677039fe8cf0f830a509093687"
                ]
            },
            "variant": "v8"
        },
        "focal-20231103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "20.04"
                },
                "OnBuild": null
            },
            "created": "2023-11-06T01:05:38.547053506Z",
            "history": [
                {
                    "created": "2023-10-03T11:04:09.542312368Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-03T11:04:09.753698714Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-03T11:04:09.989411754Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-03T11:04:10.229896279Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=20.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-03T11:04:16.578143714Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f70cc2610ea8fcd25e6e9ae727eb9345d5b7198102f6a6d8e458ab8f99efefc3 in / "
                },
                {
                    "created": "2023-10-03T11:04:17.364970797Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:41:59.769919497Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:41:59.769919497Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:41:59.769919497Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:44:27.213984163Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:44:27.937568015Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:44:27.937568015Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:44:27.937568015Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:44:28.106733945Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:44:28.115266238Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:44:28.122994438Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:44:28.13306621Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:44:28.13306621Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:44:28.940339461Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu focal   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:44:29.08488162Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu focal \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T01:05:38.410847693Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T01:05:38.410847693Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T01:05:38.547053506Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu focal \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:701ccb11c0525a289459678e1ef3e9269b62737fafb033db91061ae53a0e9c1e",
                    "sha256:768dbfd477842ec9f7bb5a3b2b55113aa7c179cec31560f4ca0b1db12252304a",
                    "sha256:e5de7977c908c1f8b0a455daddbc21511c79d7e6eb32675654b9428404fd5974",
                    "sha256:bd5db75286e73bac986d288f98b9925391d86fbdccb4df5f313c97ed4e5d531b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:36e3b3b1501fb9dafa2a0c7dfde98a073ab68beba1bd1660f2a73b2a9892aef2",
                    "sha256:6a1b2633c5d0b61665c65b3d87f7394dadefa54b4c2defaff2b8384de92a7cd8",
                    "sha256:308139b13ddce9c4772f9f501a0f61274a55ba25b83daa231f5ba03cc630fda2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c2e60b6f055b6925a5af0606f68a72465394cd9386961c9864ec3d4ecfc67740",
                    "sha256:ba633dd071d5ecd6a66401099fde1056fc03b2aba768f56cd557b06ec41ef98b",
                    "sha256:9faf84af690c3e5d1273766d02d46dd83a1a920b5d865a7dd5867425b71a5816"
                ]
            },
            "variant": "v8"
        },
        "focal-20240103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "20.04"
                },
                "OnBuild": null
            },
            "created": "2024-01-05T12:03:01.167015435Z",
            "history": [
                {
                    "created": "2023-12-13T10:29:33.646906729Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-13T10:29:33.834618616Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-13T10:29:34.000353947Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-13T10:29:34.191082281Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=20.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-13T10:29:41.411360125Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9ec8b7bbb2fbc8c90f1f24e19ab22130e03be1cc4727459e1265d2ed652377a1 in / "
                },
                {
                    "created": "2023-12-13T10:29:42.088758092Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:44:28.31557935Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:44:28.31557935Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:44:28.31557935Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:24.527129Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:25.51675026Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:25.51675026Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:46:25.51675026Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:46:25.634970811Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:25.646472707Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:25.683227289Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:25.692829425Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:25.692829425Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:46:26.30615206Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu focal   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:26.440687064Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu focal \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T12:03:01.060665486Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T12:03:01.060665486Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T12:03:01.167015435Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu focal \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b1099d79a48ef6b9eaf12e0083d6510f9d9a5f9085465344247ca2822a9687f0",
                    "sha256:a8c8ef8c84d4ecb2efa62199ac3c251abcfedc3b4f341ec0411956b020b9fc8a",
                    "sha256:832a74c119ea0194cd7d96779c3c0e8ca5fef067e58483d8225ff6e7f49d7204",
                    "sha256:76ea883df1090b524d26d225f19b0502d3c395bedb422acf58bcd772305519ec",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:eb2bdbdb0da775e1f289d47f157fdadb4a5427afaa1005c0e2534cac1ad61818",
                    "sha256:7aa28b51aaea060da81b80bf509eb80f5f604e5902da6e071b4d9ff0caf45f90",
                    "sha256:acc1151c0994cc881196b406e2b9ae53eb33bc818f5568c8ab812ca5796ca139",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:13bad18dde3faad15a01f450cbc13f8df1aeb88af725bad9f6a2636fd5b07ab5",
                    "sha256:8e9d32e15125ef1f3328e9e08ffa65e33bfe65ccbb11e3ce804abada623e7183",
                    "sha256:1791873cc4d43570bb5bec549a1d93924e0757808da9f02970829c07ad7282fb"
                ]
            },
            "variant": "v8"
        },
        "focal-20240105": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "20.04"
                },
                "OnBuild": null
            },
            "created": "2024-01-06T07:55:47.630019157Z",
            "history": [
                {
                    "created": "2023-12-13T10:29:33.646906729Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-13T10:29:33.834618616Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-13T10:29:34.000353947Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-13T10:29:34.191082281Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=20.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-13T10:29:41.411360125Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9ec8b7bbb2fbc8c90f1f24e19ab22130e03be1cc4727459e1265d2ed652377a1 in / "
                },
                {
                    "created": "2023-12-13T10:29:42.088758092Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:37:53.341836734Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:37:53.341836734Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:37:53.341836734Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:45.683556995Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:46.3249336Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:46.3249336Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:39:46.3249336Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:39:46.450956994Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:46.46183102Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:46.471306795Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:46.500144559Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:46.500144559Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:39:47.068417778Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu focal   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:47.191168942Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu focal \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:55:47.523367409Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:55:47.523367409Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:55:47.630019157Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu focal \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b1099d79a48ef6b9eaf12e0083d6510f9d9a5f9085465344247ca2822a9687f0",
                    "sha256:44c1f13d4c9a37f95eb2b21de83c258751b7b754fd5f88180cbe28e14f5fc608",
                    "sha256:14482c1bea8993e8082ebfc2ce5ef5bd26f5b9528777986b74abda51a3e493c1",
                    "sha256:0da8e1493a48e3ea205f68bb8d289504be726618fef762f1d79ef0478f6086a8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5023e3def3a4b1fcc2ed81bf2c6cf4803d4b379fd5b6a3a716a8a906a5af3c14",
                    "sha256:96b729048352b331294d179ace51fb886a80724fc8aebe5ea719e7c97bf4cc06",
                    "sha256:19520d951c916bb4365ed90a6a7a0de1efe45c6932049556d0d846d6968cf699",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:bb2e9816e80ad1e985065f9d9531de420469b3dacc244e2144dcf2b36c0ab551",
                    "sha256:f00c8685650e44872cc2e8abe26a357f7c759dd52273689a3db53a64fb02268f",
                    "sha256:8a07d34b6eb25bd9c5ac9eb3ebc9ec4b5f2930a97dd2e05beb7c0b8e76a907d5"
                ]
            },
            "variant": "v8"
        },
        "focal-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "20.04"
                }
            },
            "created": "2024-04-06T13:38:42.124321559Z",
            "history": [
                {
                    "created": "2024-02-16T19:15:01.809472513Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-16T19:15:01.87560193Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-16T19:15:01.925728358Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-16T19:15:01.986685819Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=20.04",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-16T19:15:06.579602793Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a8303c80b47ec165c276111aa6f98ee877e4da60ddafa00b7547032a3de7935d in / "
                },
                {
                    "created": "2024-02-16T19:15:06.976721553Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:20:40.651205949Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:20:40.651205949Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:20:40.651205949Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:31.132338871Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:31.674759503Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:31.674759503Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:22:31.674759503Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:22:31.789526214Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:31.798780672Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:31.807229159Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:31.842820076Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:31.842820076Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:22:32.547684037Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu focal   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:32.690982858Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu focal \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:38:42.024955461Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:38:42.024955461Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:38:42.124321559Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu focal \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:346e7b163cb7be905cf1201cbcbe474e96c1ceb2d102520cc15bf34ece763dbf",
                    "sha256:caaef2321813a309585380ae9717848c8e472a9b7d492e2e7641c50b95702e48",
                    "sha256:0662f7f4f1477774faded42eb2a9c6234038c1fcdec8ef6bff8eb138fe39831f",
                    "sha256:c570fbdfd7e3915b2a42cda6ecdf0307338190b0f36d22f2305eb87f0cec7332",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:4baecfc53d7fb355cd78d27ac9e98585b2952e660e73e05de1e5035ff7a3a0b0",
                    "sha256:8b60728ddb9f779e054e749b88c65bbc769883479e1887633c8a49c49d92c69f",
                    "sha256:53c11fa4f176d2836ba0b80531b5b8b732a05900ef0d46f52a69ce45f508997f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:08df0fafdc69064ed48fe0bf14aed69f4ee2b7b73e6f5d897b048a49bba334aa",
                    "sha256:c4873ecb463e2f0f276894018ea3e2b221b3a8a3c280684a5ed2d7d805c5d1a8",
                    "sha256:b552fff6a54e58573cc39d1f11dd2d345f32ba13e6351302ce2066d11b48ca61"
                ]
            },
            "variant": "v8"
        },
        "focal-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "20.04"
                }
            },
            "created": "2024-04-09T18:53:08.15708842Z",
            "history": [
                {
                    "created": "2024-02-16T19:15:01.809472513Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-16T19:15:01.87560193Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-16T19:15:01.925728358Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-16T19:15:01.986685819Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=20.04",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-16T19:15:06.579602793Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a8303c80b47ec165c276111aa6f98ee877e4da60ddafa00b7547032a3de7935d in / "
                },
                {
                    "created": "2024-02-16T19:15:06.976721553Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:55.881941771Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:55.881941771Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:55.881941771Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:50.9992458Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:51.964961136Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:51.964961136Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:51.964961136Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:52.09693069Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:52.10830268Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:52.118949066Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:52.155315014Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:52.155315014Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:52.711957536Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu focal   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:52.817029661Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu focal \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T18:53:08.059984766Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T18:53:08.059984766Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T18:53:08.15708842Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu focal \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:346e7b163cb7be905cf1201cbcbe474e96c1ceb2d102520cc15bf34ece763dbf",
                    "sha256:cdeee499ac5cf4b10499a17c93a884a048166961152fe6e3823266ae93eafabd",
                    "sha256:d10c84af8f3b88abb8fc52d1da7419ba40ea32c853560fe840eba929469b6344",
                    "sha256:8782a487b42b57fb2e0bbd0db05c0b9351bb49d565d181a27566437573e30502",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9bb87abc5a9cf96a24d51714046d4339452535fbc3b3369595288dfba763cc14",
                    "sha256:d42f5e8ed01a1c4ae098d971ab90ff9c8a05bc8a92069ff84b93972877c0936d",
                    "sha256:e2f00ea7ab5887a20ab52dd352394e9ed0472064ea404c00195d01c90d7dec5a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b2ee56f369a011da907f0a6b20094382be92145512fa8c0ff413ea3faefa08f9",
                    "sha256:81bddd29c05c2c5b5e6b61b98b92948aee639da29e9d89b1e3a9d3093b84d9a6",
                    "sha256:cd6e07edaa19dc702ee401a4ae1d4e8bc08b4f390ca9c20b47509b18ac0f2024"
                ]
            },
            "variant": "v8"
        },
        "focal-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "20.04"
                }
            },
            "created": "2024-05-02T02:40:02.446046258Z",
            "history": [
                {
                    "created": "2024-04-27T14:42:15.114110355Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:42:15.194158109Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:42:15.269776303Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:42:15.335774549Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=20.04",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:42:24.343171441Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d1a4a31f5a3aea1e130c7e173da2ed506ba19e91be74ab9700d398774d0ace22 in / "
                },
                {
                    "created": "2024-04-27T14:42:24.923228587Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:13.885062202Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:13.885062202Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:13.885062202Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:06.064490518Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:06.618737946Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:06.618737946Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:24:06.618737946Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:24:06.724279359Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:06.751006523Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:06.786964422Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:06.796250326Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:06.796250326Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:24:07.364724387Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu focal   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:07.488038717Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu focal \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:40:02.34516972Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:40:02.34516972Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:40:02.446046258Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu focal \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:048ad3e8492c4c225edc3ea8002df2c1efe22cafe3a23c56dbe485caec750069",
                    "sha256:b500cc65b4d85262106af88178662c0de5a5da63381c490a6d6ff229fae89106",
                    "sha256:e003e8ea436283af8e55fea6ce6a825296328932f0dda605bcba3890b73df75b",
                    "sha256:c15828703037fec76c3fb203089cbce19753ea61c3b1ec76f2e3a45b83ef6e21",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:01a5d49a05b4461215d4ad4bd2997f38f2d967e9f68b9ce3a198b43f250a319a",
                    "sha256:5032819b5b74d3306137302ae250bd957ca997e96406a101b0e1126f5397bb17",
                    "sha256:23e5e3f181da0e9fccc84e84d4b6df606940bc28485e717cb893e08f2bb8729a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:baf5bd477debee42aa54cc1e6cf04f174638aacb854ece1199c4ca0d60e918ae",
                    "sha256:cca0c16a33111df804cc9fe06b1992bcc19740aad05d2f5a60c0c35fd8eb88c0",
                    "sha256:9f0f3cb50293ad4c534164d6fd3173a086c11b2a17d8b24bd817ef5435335022"
                ]
            },
            "variant": "v8"
        },
        "focal-build": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "20.04"
                }
            },
            "created": "2024-05-02T02:40:05.908400422Z",
            "history": [
                {
                    "created": "2024-04-27T14:42:15.114110355Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:42:15.194158109Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:42:15.269776303Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:42:15.335774549Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=20.04",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:42:24.343171441Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d1a4a31f5a3aea1e130c7e173da2ed506ba19e91be74ab9700d398774d0ace22 in / "
                },
                {
                    "created": "2024-04-27T14:42:24.923228587Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:22.038966156Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:22.038966156Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:22.038966156Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:34.451623874Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:28:11.314460708Z",
                    "created_by": "RUN /bin/sh -c install_packages \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:28:12.133575655Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:28:12.133575655Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:28:12.133575655Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:28:12.252317542Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:28:12.261476678Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:28:12.298179239Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:28:12.307414049Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:28:12.307414049Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:28:12.866212208Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu focal   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:28:12.983593378Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu focal \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:40:05.816323956Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:40:05.816323956Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:40:05.908400422Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu focal \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:048ad3e8492c4c225edc3ea8002df2c1efe22cafe3a23c56dbe485caec750069",
                    "sha256:d8f14e936f822782c42580b2b0a8550a5fa3358c5772e6ea0745c321b09d5753",
                    "sha256:78a965ebd5d56b6d7e040bfaf5eaaf5425fa1dc92862d366e568555c0acdabff",
                    "sha256:1503e8763945e1e2f37ca32b4e3116c37410a4773af379bbdb72cb4425bcbd36",
                    "sha256:b5d52ff12b726cf0b2aece803051f26ca3db80aa6812778a3af4dded01270a8b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:79d49e879872fc9a41355e0396effc88ac856fc5318fea857058b7fb98e773e2",
                    "sha256:e0beb44b20f2cf9d1284f3817085479b644ff6b872e8526a0f61ff2fc1da3df3",
                    "sha256:a5d3367c4086155181e28e37cd75b12bbd4e88060d245e128271e50e793d43c7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c474d78da49e1a681c34d9621c6dcabad27bc75e2a97a9708002db9b5035d1bd",
                    "sha256:f0a84c95b9f6cece5f750058290f661d4bcc6dd7277609b909dfbb69808a5127",
                    "sha256:b78e10d89bec3426ed3c5d304fdaabf03bf536febbacb8c822c4ecbe8a3a3f0c"
                ]
            },
            "variant": "v8"
        },
        "focal-build-20230829": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "20.04"
                },
                "OnBuild": null
            },
            "created": "2023-09-02T04:40:01.409309202Z",
            "history": [
                {
                    "created": "2023-08-01T06:20:56.471540798Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-01T06:20:56.647541471Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-01T06:20:56.830272535Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-01T06:20:57.007362006Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=20.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-01T06:21:03.057259954Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ef6e767091d76c1461d099d5bc7a18c526ec80834cf87280803ab6480192f766 in / "
                },
                {
                    "created": "2023-08-01T06:21:03.811297319Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:07:45.421667717Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:07:45.421667717Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:07:45.421667717Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:10:13.819814155Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:14:43.126714974Z",
                    "created_by": "RUN /bin/sh -c install_packages \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:14:44.069723137Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:14:44.069723137Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:14:44.069723137Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:14:44.430117932Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:14:44.445312877Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:14:44.483197386Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:14:44.499302345Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:14:44.499302345Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:14:45.403718587Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu focal   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:14:45.810734732Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu focal \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:39:14.708787475Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:39:14.708787475Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r32.7 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t186 r32.7 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:40:01.032279392Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:40:01.409309202Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu focal \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:66376f73404c2bef0f4cb8d77e0e3696bb974fc08cf68c7bb3587d71f6e9c446",
                    "sha256:bc8226a4d88aa43bd80a013e4fa1fd47b5565eefebe3b7cfc0066237675c78db",
                    "sha256:68c9d54ae45cc0f5a446b1b249ff71d7bb784973ef404152a89a87a8ca68116a",
                    "sha256:5b1c0b6b320ee28c0bcce9d38e1f77bd0fee6fe5726d7111b8e9c721b80f16b4",
                    "sha256:b6a76c013424a605ca917e3767e735ab4c1f1a0dd299e15513cc60a37de88021",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:4c639161b5940f3ca1a30f96768697bf0a9660f911be0ef2971efff220687605",
                    "sha256:0d602e8a7d0c3412ff56b2a45c2c7fb9aebfeb9dcc98e3788aa03925ca106b02",
                    "sha256:39f438d632523595efe08f85dfccfa1522da194b4e7b36dec6cb88e036ea65b7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8f86ef4a72f6e4b7c9cc3cebe8e780715ca88d2ab9d83edd6bdc47bb5729230a",
                    "sha256:d2501269ceb824058ac07b63dcdaec306e8ab10e5770c6f418e0c93f78c58b38",
                    "sha256:636b7529bedd07bd98940318c68e0e714ceddbce38d4821fe6ca93ad9dee79e1",
                    "sha256:84d30615de3e8883d217ce914c31e13571be2650f98d527c6cf1de5d2241c8b5"
                ]
            }
        },
        "focal-build-20230904": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "20.04"
                },
                "OnBuild": null
            },
            "created": "2023-09-09T04:38:29.336959887Z",
            "history": [
                {
                    "created": "2023-08-01T06:20:56.471540798Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-01T06:20:56.647541471Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-01T06:20:56.830272535Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-01T06:20:57.007362006Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=20.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-01T06:21:03.057259954Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ef6e767091d76c1461d099d5bc7a18c526ec80834cf87280803ab6480192f766 in / "
                },
                {
                    "created": "2023-08-01T06:21:03.811297319Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:07:17.55526867Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:07:17.55526867Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:07:17.55526867Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:09:46.524636715Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:14:09.929658201Z",
                    "created_by": "RUN /bin/sh -c install_packages \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:14:10.822037784Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:14:10.822037784Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:14:10.822037784Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:14:11.139263708Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:14:11.15485733Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:14:11.164514868Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:14:11.172148377Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:14:11.172148377Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:14:12.051332413Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu focal   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:14:12.446046942Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu focal \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:37:39.829788427Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:37:39.829788427Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r32.7 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t186 r32.7 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:38:28.960009154Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:38:29.336959887Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu focal \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:66376f73404c2bef0f4cb8d77e0e3696bb974fc08cf68c7bb3587d71f6e9c446",
                    "sha256:eea6a66bfa5c3c4d368f87b8e7d49de12303d813aa3577f3d27a962f9598abfe",
                    "sha256:06ac68fec754a6640700b58380e7dab7d5760deda8e4fa4750fd471d4ae1fac2",
                    "sha256:630377cd8f342fe44a376d8a0921713652a6167279f958789d0bf4342f8be0fc",
                    "sha256:99c924d591725d6964b0a6899292c3c99cbab945cc0e463dce09b9c5cbfda5c5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0803122ce171ffaa2b8022ef79f66b4d7efaa79c30e502122d8323c9d20c9c7a",
                    "sha256:8849c3cad95c6463abc842964739163904dfdc175c28993114b795ea4ec6ccc5",
                    "sha256:52a645b9dd4faf05f8717e327b1d580511c6a49e4be1f3286c24488712a81571",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8a951b749aa5c698bcc8674e5fff6b606b5aa3e363d12d72edfa713558d5aae2",
                    "sha256:b7e27eedcb22511f0af6632e5cf6d73c6a4d624e7672e5ffebe013a28a101b44",
                    "sha256:fb17f2c772670efde692560273d04cebb77379e64098d7eed127c210650152e7",
                    "sha256:2b22d0dcfe372ae4283f901988ef207dcb4ed4c96262157666ecbccb35b8e8e9"
                ]
            }
        },
        "focal-build-20230911": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "20.04"
                },
                "OnBuild": null
            },
            "created": "2023-09-11T23:11:31.949760761Z",
            "history": [
                {
                    "created": "2023-08-01T06:20:56.471540798Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-01T06:20:56.647541471Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-01T06:20:56.830272535Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-01T06:20:57.007362006Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=20.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-01T06:21:03.057259954Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ef6e767091d76c1461d099d5bc7a18c526ec80834cf87280803ab6480192f766 in / "
                },
                {
                    "created": "2023-08-01T06:21:03.811297319Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:07:17.55526867Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:07:17.55526867Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:07:17.55526867Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:09:46.524636715Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:14:09.929658201Z",
                    "created_by": "RUN /bin/sh -c install_packages \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:14:10.822037784Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:14:10.822037784Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:14:10.822037784Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:14:11.139263708Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:14:11.15485733Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:14:11.164514868Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:14:11.172148377Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:14:11.172148377Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:14:12.051332413Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu focal   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:14:12.446046942Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu focal \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T23:11:31.871654816Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-11T23:11:31.871654816Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T23:11:31.949760761Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu focal \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:66376f73404c2bef0f4cb8d77e0e3696bb974fc08cf68c7bb3587d71f6e9c446",
                    "sha256:eea6a66bfa5c3c4d368f87b8e7d49de12303d813aa3577f3d27a962f9598abfe",
                    "sha256:06ac68fec754a6640700b58380e7dab7d5760deda8e4fa4750fd471d4ae1fac2",
                    "sha256:630377cd8f342fe44a376d8a0921713652a6167279f958789d0bf4342f8be0fc",
                    "sha256:99c924d591725d6964b0a6899292c3c99cbab945cc0e463dce09b9c5cbfda5c5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0803122ce171ffaa2b8022ef79f66b4d7efaa79c30e502122d8323c9d20c9c7a",
                    "sha256:8849c3cad95c6463abc842964739163904dfdc175c28993114b795ea4ec6ccc5",
                    "sha256:52a645b9dd4faf05f8717e327b1d580511c6a49e4be1f3286c24488712a81571",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8a951b749aa5c698bcc8674e5fff6b606b5aa3e363d12d72edfa713558d5aae2",
                    "sha256:cd25165fd142c831f2a6b2a02558960e4f16f8645ad016d787fe2f7739c3a715",
                    "sha256:b57669ca041cc670d9b33d45e7a788af61b8ae86064e1a21c5a212e16b4d2f53"
                ]
            }
        },
        "focal-build-20231026": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "20.04"
                },
                "OnBuild": null
            },
            "created": "2023-11-02T15:44:57.71986438Z",
            "history": [
                {
                    "created": "2023-10-03T11:04:09.542312368Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-03T11:04:09.753698714Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-03T11:04:09.989411754Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-03T11:04:10.229896279Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=20.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-03T11:04:16.578143714Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f70cc2610ea8fcd25e6e9ae727eb9345d5b7198102f6a6d8e458ab8f99efefc3 in / "
                },
                {
                    "created": "2023-10-03T11:04:17.364970797Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:17:47.277414173Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:17:47.277414173Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:17:47.277414173Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:20:51.114206332Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:25:59.571247895Z",
                    "created_by": "RUN /bin/sh -c install_packages \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:26:00.766351013Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:26:00.766351013Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:26:00.766351013Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:26:00.930357912Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:26:00.947961597Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:26:00.976440036Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:26:00.995917331Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:26:00.995917331Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:26:01.880408537Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu focal   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:26:02.052058873Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu focal \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:44:57.605532189Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:44:57.605532189Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:44:57.71986438Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu focal \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:701ccb11c0525a289459678e1ef3e9269b62737fafb033db91061ae53a0e9c1e",
                    "sha256:e914d51610aeb45a2d7f396dd577bfa3484329981a16037c397abe89e394a722",
                    "sha256:d1fe67096f9e100217f4101b783e125ab59291dbcce7712250906ed4a0bdfdb0",
                    "sha256:2fad709c39fe7dd46a5fff0416b6312a97f469a2f3507869fc0fb6d0407ccc5a",
                    "sha256:c5a1a15230df6a3c5114a371687681fb922a3602fe513e4c531f2f8f278252ea",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a397c6b6aa5b88312e2e16b4277623f50bfb32850947a44fa1742adef12f5fb9",
                    "sha256:1455e82744175f0a1eae3af2acc0d35867ab88adf9136b703a6d829c5cc7ca92",
                    "sha256:e9dcf48cf1bd4bb9ba029795f86fa61a6b5d78a3f3ee5089e878630b0051a051",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:683e1c57b642b698fe6e41131c56d4c84af4fb7d666feeaa6a17de86c47ffd73",
                    "sha256:4b9ee00d2cf6a4e8f3e74a6f3f8745b0fb15ac007edf3dc5a104d5ebcc02eab0",
                    "sha256:6e6ae8737b9bb6d2e8bcd67af06891206cdfa76a2fda8fcc5530b8396cbf0a13"
                ]
            },
            "variant": "v8"
        },
        "focal-build-20231103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "20.04"
                },
                "OnBuild": null
            },
            "created": "2023-11-06T01:06:31.001904599Z",
            "history": [
                {
                    "created": "2023-10-03T11:04:09.542312368Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-03T11:04:09.753698714Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-03T11:04:09.989411754Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-03T11:04:10.229896279Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=20.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-03T11:04:16.578143714Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f70cc2610ea8fcd25e6e9ae727eb9345d5b7198102f6a6d8e458ab8f99efefc3 in / "
                },
                {
                    "created": "2023-10-03T11:04:17.364970797Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:41:57.219553119Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:41:57.219553119Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:41:57.219553119Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:43:49.502562579Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:47:06.8887814Z",
                    "created_by": "RUN /bin/sh -c install_packages \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:47:07.601760074Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:47:07.601760074Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:47:07.601760074Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:47:07.737983765Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:47:07.752019524Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:47:07.765204965Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:47:07.809269783Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:47:07.809269783Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:47:08.431311978Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu focal   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:47:08.572738021Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu focal \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T01:06:30.8807269Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T01:06:30.8807269Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T01:06:31.001904599Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu focal \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:701ccb11c0525a289459678e1ef3e9269b62737fafb033db91061ae53a0e9c1e",
                    "sha256:12dff3f88f761b2b1e8c5e13b3290f1d10ea39c357199fab3c9f7783f1ca4c9e",
                    "sha256:743402e35aaf672a346f10f2475feabf5658aa2f914da5e51a55271ab53e729f",
                    "sha256:66db9424d6083ca1902eba46dca2dd17a4fa388e264d0c7806178beb52ea9718",
                    "sha256:4c5a15b8395223c6c2bdb1c410a991fb99bf92dfeefdd76e9443eca9ac651849",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3a16dd6adda5030517c189a5bfcb240aa660101e417b159be3329c552ad20ccd",
                    "sha256:8caedfaa2d171c791260b1f1487e514ec92d933441369f2accf8eee9fc3cd5b6",
                    "sha256:b6dcd467680e78e83b26c088445b9a9181d65400dda4e1fa42722b109f4cffe5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e35de88363f81517f82f93d7894a495f138cf82af10fbfd0877ad747509d3529",
                    "sha256:8c8dd76914dc58d4abf78a35621e0d922ec69378360bd907c32d54dd7da01a37",
                    "sha256:24c7cd4396433a60ef6c2a9c6295ea1f99bdc94212a657b8849d4048bb57fff4"
                ]
            },
            "variant": "v8"
        },
        "focal-build-20240103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "20.04"
                },
                "OnBuild": null
            },
            "created": "2024-01-05T12:02:53.202873263Z",
            "history": [
                {
                    "created": "2023-12-13T10:29:33.646906729Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-13T10:29:33.834618616Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-13T10:29:34.000353947Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-13T10:29:34.191082281Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=20.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-13T10:29:41.411360125Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9ec8b7bbb2fbc8c90f1f24e19ab22130e03be1cc4727459e1265d2ed652377a1 in / "
                },
                {
                    "created": "2023-12-13T10:29:42.088758092Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:44:21.276439849Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:44:21.276439849Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:44:21.276439849Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:11.7240341Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:49:34.903069203Z",
                    "created_by": "RUN /bin/sh -c install_packages \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:49:35.541846258Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:49:35.541846258Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:49:35.541846258Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:49:35.663818486Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:49:35.674567104Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:49:35.711997356Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:49:35.723648482Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:49:35.723648482Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:49:36.313308053Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu focal   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:49:36.442575177Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu focal \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T12:02:53.114832546Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T12:02:53.114832546Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T12:02:53.202873263Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu focal \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b1099d79a48ef6b9eaf12e0083d6510f9d9a5f9085465344247ca2822a9687f0",
                    "sha256:e49284afbd12b571b49fcfb1d0e55a55f7a0aaad7cec03ad697b3fde4109eb22",
                    "sha256:15f45e139fe1a36c4ccec412954a2d4014b1a1c3afcea9fc62429dc6c1483c2a",
                    "sha256:0e34b5507cbce6bddb4ad15c220d3590114dad4fe42cf4eaf5e6ba4b187b933f",
                    "sha256:8b3ad4f1c0354951cf720968a34c2c8a9c43a79972ef7a1c8790eca8b3de1999",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8827e61425d4e70006a9c693baa712bcb98794a0912055da75c5ebdbacde4450",
                    "sha256:6a73c6f8243e02155f5f238e25d4edaa983db6c56ea637f74d025b50b41a64a8",
                    "sha256:5d18d0a998380831ad53cf98b3ce6d6dd249b3fed6ca5d67a0b88c3036782366",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:10a83a38b444333833359c2d0364fa72c2a4cea6d4cc3a9917c2f3d30a9a4b07",
                    "sha256:34ccc91586d3d0b99a7c629aa064f59d7a0b291398065ad0104385571b421d38",
                    "sha256:b3880b566d88e919dfec3e3fef5023aab5f8cbeb8f2b31e95ca509a918998aa9"
                ]
            },
            "variant": "v8"
        },
        "focal-build-20240105": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "20.04"
                },
                "OnBuild": null
            },
            "created": "2024-01-06T07:55:40.384912739Z",
            "history": [
                {
                    "created": "2023-12-13T10:29:33.646906729Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-13T10:29:33.834618616Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-13T10:29:34.000353947Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-13T10:29:34.191082281Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=20.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-13T10:29:41.411360125Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9ec8b7bbb2fbc8c90f1f24e19ab22130e03be1cc4727459e1265d2ed652377a1 in / "
                },
                {
                    "created": "2023-12-13T10:29:42.088758092Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:37:54.760219596Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:37:54.760219596Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:37:54.760219596Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:38.676453414Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:42:44.473046449Z",
                    "created_by": "RUN /bin/sh -c install_packages \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:42:45.197197096Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:42:45.197197096Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:42:45.197197096Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:42:45.312166639Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:42:45.320275297Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:42:45.349071049Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:42:45.358480598Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:42:45.358480598Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:42:45.86738168Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu focal   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:42:45.986989565Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu focal \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:55:40.297984548Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:55:40.297984548Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:55:40.384912739Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu focal \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b1099d79a48ef6b9eaf12e0083d6510f9d9a5f9085465344247ca2822a9687f0",
                    "sha256:5ef08f30ef5a41a52f534e52ff4367b19ab6c5e3c2959320c6082f38869e4232",
                    "sha256:8ab4cb20a886b783ed38f05de855180829909b1191851e9cfb9122aa7c3ae77c",
                    "sha256:652983a5ec618e7f05f06b9eddcee13f837002db8f9bef029b0ec336485da37f",
                    "sha256:f67419da627f5d9565a959b253acfe9a8fb07a7851a106a2dcaea670a4b77466",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8e9ab044e4e037ae2ac82ccbcff345053b0c7ca5c8357f43fddec9bb35e5f492",
                    "sha256:b9c68f760fcade33edfeb959c2d78fc5df929b7684a474366c082e3ea8789cf0",
                    "sha256:39c2e249d6932ee9f6a5719934cd3c15cf2c31931fb09ea73d940f8f2adbe295",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7e63b8155cdc9859f4a7ee4834cf20526c36b7bb01b05b06316db5cb6e7cff77",
                    "sha256:2fbd0f16dd40f2a89bbc355580d5be9c0bbd99fa297e706b0070ad27f4b8dd1c",
                    "sha256:d1e68fca420024c954f88c7081e7f38348ec832fa4d10259025b42e47df3bca7"
                ]
            },
            "variant": "v8"
        },
        "focal-build-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "20.04"
                }
            },
            "created": "2024-04-06T13:38:49.759994957Z",
            "history": [
                {
                    "created": "2024-02-16T19:15:01.809472513Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-16T19:15:01.87560193Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-16T19:15:01.925728358Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-16T19:15:01.986685819Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=20.04",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-16T19:15:06.579602793Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a8303c80b47ec165c276111aa6f98ee877e4da60ddafa00b7547032a3de7935d in / "
                },
                {
                    "created": "2024-02-16T19:15:06.976721553Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:20:52.342508683Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:20:52.342508683Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:20:52.342508683Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:50.114433605Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:26:24.648315749Z",
                    "created_by": "RUN /bin/sh -c install_packages \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:26:25.750641193Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:26:25.750641193Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:26:25.750641193Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:26:25.86035616Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:26:25.872982558Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:26:25.901464878Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:26:25.911712834Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:26:25.911712834Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:26:26.470458176Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu focal   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:26:26.588427293Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu focal \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:38:49.667658065Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:38:49.667658065Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:38:49.759994957Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu focal \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:346e7b163cb7be905cf1201cbcbe474e96c1ceb2d102520cc15bf34ece763dbf",
                    "sha256:d652fe8aec6e78393890a8dcbe0000c4dc95cc4b9fb06b2c3efb83330047c047",
                    "sha256:a3dff8cf027b6758a96fb2f1ce9eed605290ff419a1a34afb64e5c5b800333ee",
                    "sha256:34f4b364a16034b92b8c4fc2897637feda83a42c0cd7e8ae7044f9d46b2e3620",
                    "sha256:926eab5ded47365d7f6c199760622e5512a6e3065e3a8fa7291d99a85aa7303a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:841a36d4b695a3d45a5a4237d8196f649463af336233fb55b23efe2d758d3cd9",
                    "sha256:0dd139782f7ddd86f8787ab4423c597173d8880cbe3a278b1cf6cb09734bac12",
                    "sha256:2dda18ad09ee62a665780c1c91b5e679e7a2147f0a46c8cb9b14db38e2e38ca1",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8f8976b135c8352a0d9fa618ec8a12f2d587a9defb7765d4c5a1cc13c4b0afdc",
                    "sha256:588e8b7e2cea49d8b0824416f0b6b72503c8f3b0945f519d77cc9f052ed306f1",
                    "sha256:75e5f7742a9693f9673a6f4ae29fd2ce2868a3524bd152cf308db9d6351963c6"
                ]
            },
            "variant": "v8"
        },
        "focal-build-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "20.04"
                }
            },
            "created": "2024-04-09T18:53:00.007182017Z",
            "history": [
                {
                    "created": "2024-02-16T19:15:01.809472513Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-16T19:15:01.87560193Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-16T19:15:01.925728358Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-16T19:15:01.986685819Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=20.04",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-16T19:15:06.579602793Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a8303c80b47ec165c276111aa6f98ee877e4da60ddafa00b7547032a3de7935d in / "
                },
                {
                    "created": "2024-02-16T19:15:06.976721553Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:51.474108335Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:51.474108335Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:51.474108335Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:43.643295241Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:59.093391698Z",
                    "created_by": "RUN /bin/sh -c install_packages \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:59.750844757Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:59.750844757Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:39:59.750844757Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:39:59.853077472Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:59.864935528Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:59.874990586Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:59.902179647Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:59.902179647Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:40:00.551336795Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu focal   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:40:00.673001334Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu focal \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T18:52:59.919987182Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T18:52:59.919987182Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T18:53:00.007182017Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu focal \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:346e7b163cb7be905cf1201cbcbe474e96c1ceb2d102520cc15bf34ece763dbf",
                    "sha256:6ce8966bb2acacb55ad2bc583713d438ba207ed2bcb9194819f27019dda4796a",
                    "sha256:b6a0524feaed5d356c2e29178a6c5acd8112d908be4e1e6974298e9a3aeee385",
                    "sha256:fe6baae93055b6c9f0acc01ab08fe04b37375c27a6343531647f109bd5e6d4d8",
                    "sha256:4b36d2f7870c1e14353998a07e51dbb9aa746a2a5e515b17a9c904cf466859ec",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ad990813d28cad471327ae82d68d9e0b5d8bba13e2ffddec8baac225963b9f27",
                    "sha256:1fdeb111b27b618ccd02ab9062513be49aeb7f7f9a1c3af9904096f94b8bff15",
                    "sha256:122ffa19026c6417d4fc6fb7a5556eaae66c3282bfbba1a4d9def5fbc31f0c21",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:687f44fb6db04371f0176e4036bb29fcd60f71d3ea17c6f59fe73f5e458d68e2",
                    "sha256:d6bc902710fd89134cbf66cd095b4539e8fbc25c7bc6129504581ddb9be5afe0",
                    "sha256:c3f1ba86eca57a549811d4fc2fc7ba758e128b6ebd6343b2c25a818d734fe6df"
                ]
            },
            "variant": "v8"
        },
        "focal-build-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "20.04"
                }
            },
            "created": "2024-05-02T02:40:05.908400422Z",
            "history": [
                {
                    "created": "2024-04-27T14:42:15.114110355Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:42:15.194158109Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:42:15.269776303Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:42:15.335774549Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=20.04",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:42:24.343171441Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d1a4a31f5a3aea1e130c7e173da2ed506ba19e91be74ab9700d398774d0ace22 in / "
                },
                {
                    "created": "2024-04-27T14:42:24.923228587Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:22.038966156Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:22.038966156Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:22.038966156Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:34.451623874Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:28:11.314460708Z",
                    "created_by": "RUN /bin/sh -c install_packages \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:28:12.133575655Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:28:12.133575655Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:28:12.133575655Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:28:12.252317542Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:28:12.261476678Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:28:12.298179239Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:28:12.307414049Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:28:12.307414049Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:28:12.866212208Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu focal   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:28:12.983593378Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu focal \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:40:05.816323956Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:40:05.816323956Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:40:05.908400422Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu focal \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:048ad3e8492c4c225edc3ea8002df2c1efe22cafe3a23c56dbe485caec750069",
                    "sha256:d8f14e936f822782c42580b2b0a8550a5fa3358c5772e6ea0745c321b09d5753",
                    "sha256:78a965ebd5d56b6d7e040bfaf5eaaf5425fa1dc92862d366e568555c0acdabff",
                    "sha256:1503e8763945e1e2f37ca32b4e3116c37410a4773af379bbdb72cb4425bcbd36",
                    "sha256:b5d52ff12b726cf0b2aece803051f26ca3db80aa6812778a3af4dded01270a8b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:79d49e879872fc9a41355e0396effc88ac856fc5318fea857058b7fb98e773e2",
                    "sha256:e0beb44b20f2cf9d1284f3817085479b644ff6b872e8526a0f61ff2fc1da3df3",
                    "sha256:a5d3367c4086155181e28e37cd75b12bbd4e88060d245e128271e50e793d43c7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c474d78da49e1a681c34d9621c6dcabad27bc75e2a97a9708002db9b5035d1bd",
                    "sha256:f0a84c95b9f6cece5f750058290f661d4bcc6dd7277609b909dfbb69808a5127",
                    "sha256:b78e10d89bec3426ed3c5d304fdaabf03bf536febbacb8c822c4ecbe8a3a3f0c"
                ]
            },
            "variant": "v8"
        },
        "focal-run": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "20.04"
                }
            },
            "created": "2024-05-02T02:40:02.446046258Z",
            "history": [
                {
                    "created": "2024-04-27T14:42:15.114110355Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:42:15.194158109Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:42:15.269776303Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:42:15.335774549Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=20.04",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:42:24.343171441Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d1a4a31f5a3aea1e130c7e173da2ed506ba19e91be74ab9700d398774d0ace22 in / "
                },
                {
                    "created": "2024-04-27T14:42:24.923228587Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:13.885062202Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:13.885062202Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:13.885062202Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:06.064490518Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:06.618737946Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:06.618737946Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:24:06.618737946Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:24:06.724279359Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:06.751006523Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:06.786964422Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:06.796250326Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:06.796250326Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:24:07.364724387Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu focal   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:07.488038717Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu focal \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:40:02.34516972Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:40:02.34516972Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:40:02.446046258Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu focal \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:048ad3e8492c4c225edc3ea8002df2c1efe22cafe3a23c56dbe485caec750069",
                    "sha256:b500cc65b4d85262106af88178662c0de5a5da63381c490a6d6ff229fae89106",
                    "sha256:e003e8ea436283af8e55fea6ce6a825296328932f0dda605bcba3890b73df75b",
                    "sha256:c15828703037fec76c3fb203089cbce19753ea61c3b1ec76f2e3a45b83ef6e21",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:01a5d49a05b4461215d4ad4bd2997f38f2d967e9f68b9ce3a198b43f250a319a",
                    "sha256:5032819b5b74d3306137302ae250bd957ca997e96406a101b0e1126f5397bb17",
                    "sha256:23e5e3f181da0e9fccc84e84d4b6df606940bc28485e717cb893e08f2bb8729a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:baf5bd477debee42aa54cc1e6cf04f174638aacb854ece1199c4ca0d60e918ae",
                    "sha256:cca0c16a33111df804cc9fe06b1992bcc19740aad05d2f5a60c0c35fd8eb88c0",
                    "sha256:9f0f3cb50293ad4c534164d6fd3173a086c11b2a17d8b24bd817ef5435335022"
                ]
            },
            "variant": "v8"
        },
        "focal-run-20230829": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "20.04"
                },
                "OnBuild": null
            },
            "created": "2023-09-02T04:41:12.614394283Z",
            "history": [
                {
                    "created": "2023-08-01T06:20:56.471540798Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-01T06:20:56.647541471Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-01T06:20:56.830272535Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-01T06:20:57.007362006Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=20.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-01T06:21:03.057259954Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ef6e767091d76c1461d099d5bc7a18c526ec80834cf87280803ab6480192f766 in / "
                },
                {
                    "created": "2023-08-01T06:21:03.811297319Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:07:45.421667717Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:07:45.421667717Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:07:45.421667717Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:10:13.819814155Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:10:14.755228072Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:10:14.755228072Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:10:14.755228072Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:10:15.065147328Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:10:15.080375224Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:10:15.090114178Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:10:15.099891932Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:10:15.099891932Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:10:16.030725762Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu focal   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:10:16.470781712Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu focal \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:40:20.88155806Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:40:20.88155806Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r32.7 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t186 r32.7 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:41:12.385276968Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:41:12.614394283Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu focal \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:66376f73404c2bef0f4cb8d77e0e3696bb974fc08cf68c7bb3587d71f6e9c446",
                    "sha256:bc8226a4d88aa43bd80a013e4fa1fd47b5565eefebe3b7cfc0066237675c78db",
                    "sha256:68c9d54ae45cc0f5a446b1b249ff71d7bb784973ef404152a89a87a8ca68116a",
                    "sha256:e874555ea57ee596e162fe59fa5fdc04f35587c34199309a9fb3a240f4d1013d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:991943bde209f6b9315a0a9e74a0b63460ab36b6476bf5b066edc58fef564db3",
                    "sha256:24d0d008755f6d2c9bb90ad9ae9d451bd86bb979fea8fac5a1d638518c097d8d",
                    "sha256:61268c115e64a5f1a29abcf4d846866dfd01e047d4705b1df024cdddf209ec0b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e8ca2d138c118e2aa46772c5acac29daf9f90e5193b39dfe4c037f4c363a26f0",
                    "sha256:eca9acbbf960282ed4465cef2031fb6cea18056032a925899a6d79c0990e0d5d",
                    "sha256:0d5fd6bf18acd068f1f7e2491e549eb5dbad8bda0b1007af28a2f9d1385afb38",
                    "sha256:38cc17fe18845416b10a752488c1ffc3acebf938c0b1e318294a1eaba4f364e1"
                ]
            }
        },
        "focal-run-20230904": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "20.04"
                },
                "OnBuild": null
            },
            "created": "2023-09-09T04:39:42.429328214Z",
            "history": [
                {
                    "created": "2023-08-01T06:20:56.471540798Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-01T06:20:56.647541471Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-01T06:20:56.830272535Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-01T06:20:57.007362006Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=20.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-01T06:21:03.057259954Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ef6e767091d76c1461d099d5bc7a18c526ec80834cf87280803ab6480192f766 in / "
                },
                {
                    "created": "2023-08-01T06:21:03.811297319Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:07:17.55526867Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:07:17.55526867Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:07:17.55526867Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:09:46.524636715Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:09:47.390873648Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:09:47.390873648Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:09:47.390873648Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:09:47.809345323Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:09:47.824048465Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:09:47.837805991Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:09:47.857013306Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:09:47.857013306Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:09:48.730428756Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu focal   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:09:49.159894812Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu focal \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:38:47.940525356Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:38:47.940525356Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r32.7 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t186 r32.7 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:39:42.173330795Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:39:42.429328214Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu focal \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:66376f73404c2bef0f4cb8d77e0e3696bb974fc08cf68c7bb3587d71f6e9c446",
                    "sha256:eea6a66bfa5c3c4d368f87b8e7d49de12303d813aa3577f3d27a962f9598abfe",
                    "sha256:06ac68fec754a6640700b58380e7dab7d5760deda8e4fa4750fd471d4ae1fac2",
                    "sha256:479ffc6d1120f270f95c0d162fc18a5c9adff00c2ecdb88076cb13bb4925325c",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:17cfa8930f5890d226440bdb5432bf0b3044fc04428d33cb52cb885740b120d2",
                    "sha256:e4388073db018a0cd6c720ee6891725f7123812fbce97750a8fa2f6853c5a9e3",
                    "sha256:bba45f83c147fad27ca0630f4a3bab27309ad893f120767cc34dd165fd7efa31",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:36d7cb159b315ca178db7f3812d64787ff245a03aca53d64858879668eafffa2",
                    "sha256:762a1d28c2806418b6104c26b7331eda32a23b1efc3524555c0c171fc1e95852",
                    "sha256:5b138cd01ed252c33781494182d2940b4e02e2d239dd42fa79885b0bb20f3001",
                    "sha256:14edf82484804910c48a4d97338be809c7624b3d9e2da66d9cd385ccb6d2902b"
                ]
            }
        },
        "focal-run-20230911": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "20.04"
                },
                "OnBuild": null
            },
            "created": "2023-09-11T23:11:35.557039351Z",
            "history": [
                {
                    "created": "2023-08-01T06:20:56.471540798Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-01T06:20:56.647541471Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-01T06:20:56.830272535Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-01T06:20:57.007362006Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=20.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-01T06:21:03.057259954Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ef6e767091d76c1461d099d5bc7a18c526ec80834cf87280803ab6480192f766 in / "
                },
                {
                    "created": "2023-08-01T06:21:03.811297319Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:07:17.55526867Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:07:17.55526867Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:07:17.55526867Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:09:46.524636715Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:09:47.390873648Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:09:47.390873648Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:09:47.390873648Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:09:47.809345323Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:09:47.824048465Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:09:47.837805991Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:09:47.857013306Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:09:47.857013306Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:09:48.730428756Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu focal   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:09:49.159894812Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu focal \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T23:11:35.447151715Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-11T23:11:35.447151715Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T23:11:35.557039351Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu focal \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:66376f73404c2bef0f4cb8d77e0e3696bb974fc08cf68c7bb3587d71f6e9c446",
                    "sha256:eea6a66bfa5c3c4d368f87b8e7d49de12303d813aa3577f3d27a962f9598abfe",
                    "sha256:06ac68fec754a6640700b58380e7dab7d5760deda8e4fa4750fd471d4ae1fac2",
                    "sha256:479ffc6d1120f270f95c0d162fc18a5c9adff00c2ecdb88076cb13bb4925325c",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:17cfa8930f5890d226440bdb5432bf0b3044fc04428d33cb52cb885740b120d2",
                    "sha256:e4388073db018a0cd6c720ee6891725f7123812fbce97750a8fa2f6853c5a9e3",
                    "sha256:bba45f83c147fad27ca0630f4a3bab27309ad893f120767cc34dd165fd7efa31",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:36d7cb159b315ca178db7f3812d64787ff245a03aca53d64858879668eafffa2",
                    "sha256:808e07b63d035cf05c26b257492031951f4cd4bcc8600438e272c2f853a66c1a",
                    "sha256:51bcc5bd2a50feb7c169982411b6cdb720f124fcc4d475d3d5f717b99502c7b5"
                ]
            }
        },
        "focal-run-20231026": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "20.04"
                },
                "OnBuild": null
            },
            "created": "2023-11-02T15:45:04.486380867Z",
            "history": [
                {
                    "created": "2023-10-03T11:04:09.542312368Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-03T11:04:09.753698714Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-03T11:04:09.989411754Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-03T11:04:10.229896279Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=20.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-03T11:04:16.578143714Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f70cc2610ea8fcd25e6e9ae727eb9345d5b7198102f6a6d8e458ab8f99efefc3 in / "
                },
                {
                    "created": "2023-10-03T11:04:17.364970797Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:17:39.982288927Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:17:39.982288927Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:17:39.982288927Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:20:09.874014149Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:20:10.58707027Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:20:10.58707027Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:20:10.58707027Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:20:10.75866994Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:20:10.768318156Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:20:10.786502684Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:20:10.795503898Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:20:10.795503898Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:20:11.575106224Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu focal   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:20:11.73124637Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu focal \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:45:04.325362982Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:45:04.325362982Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:45:04.486380867Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu focal \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:701ccb11c0525a289459678e1ef3e9269b62737fafb033db91061ae53a0e9c1e",
                    "sha256:6b37dc883be7a1883ef1d802323d1975ceb13118c58b0484202c08cee8ca7b96",
                    "sha256:2fd7b4d7e062c7c6b0c213d59bb405d09fa7479d2c9a13dfe2a568ea7d17c223",
                    "sha256:c21570b8332c9b873d51b34174dd0e092b9f9c4e7c4ebacf2a14d641bd94ff73",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3240e2d23cc2b1de66fd805fe4cf39d943300e6203cd82817ff2c0d914969bd3",
                    "sha256:98aa438a48211c1023799fea7e240bf6798717da179c42e575bcf2513f1b92e8",
                    "sha256:5f4130360a4346b7f85a05f0129374af63a76331c9a10d4662ea388a29351660",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:aa791a2bd608d7ea49319db166c74fca7b779b57f5f7e0817fdd681946afdccf",
                    "sha256:eecb49f79c569b815f3176b6f0135cbb799aa76731ade4d6bdbb361f61351869",
                    "sha256:8398ef3f6633c31d1f57fc7ee2fbc3dbdfaaee677039fe8cf0f830a509093687"
                ]
            },
            "variant": "v8"
        },
        "focal-run-20231103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "20.04"
                },
                "OnBuild": null
            },
            "created": "2023-11-06T01:05:38.547053506Z",
            "history": [
                {
                    "created": "2023-10-03T11:04:09.542312368Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-03T11:04:09.753698714Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-03T11:04:09.989411754Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-03T11:04:10.229896279Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=20.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-03T11:04:16.578143714Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f70cc2610ea8fcd25e6e9ae727eb9345d5b7198102f6a6d8e458ab8f99efefc3 in / "
                },
                {
                    "created": "2023-10-03T11:04:17.364970797Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:41:59.769919497Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:41:59.769919497Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:41:59.769919497Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:44:27.213984163Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:44:27.937568015Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:44:27.937568015Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:44:27.937568015Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:44:28.106733945Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:44:28.115266238Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:44:28.122994438Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:44:28.13306621Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:44:28.13306621Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:44:28.940339461Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu focal   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:44:29.08488162Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu focal \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T01:05:38.410847693Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T01:05:38.410847693Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T01:05:38.547053506Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu focal \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:701ccb11c0525a289459678e1ef3e9269b62737fafb033db91061ae53a0e9c1e",
                    "sha256:768dbfd477842ec9f7bb5a3b2b55113aa7c179cec31560f4ca0b1db12252304a",
                    "sha256:e5de7977c908c1f8b0a455daddbc21511c79d7e6eb32675654b9428404fd5974",
                    "sha256:bd5db75286e73bac986d288f98b9925391d86fbdccb4df5f313c97ed4e5d531b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:36e3b3b1501fb9dafa2a0c7dfde98a073ab68beba1bd1660f2a73b2a9892aef2",
                    "sha256:6a1b2633c5d0b61665c65b3d87f7394dadefa54b4c2defaff2b8384de92a7cd8",
                    "sha256:308139b13ddce9c4772f9f501a0f61274a55ba25b83daa231f5ba03cc630fda2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c2e60b6f055b6925a5af0606f68a72465394cd9386961c9864ec3d4ecfc67740",
                    "sha256:ba633dd071d5ecd6a66401099fde1056fc03b2aba768f56cd557b06ec41ef98b",
                    "sha256:9faf84af690c3e5d1273766d02d46dd83a1a920b5d865a7dd5867425b71a5816"
                ]
            },
            "variant": "v8"
        },
        "focal-run-20240103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "20.04"
                },
                "OnBuild": null
            },
            "created": "2024-01-05T12:03:01.167015435Z",
            "history": [
                {
                    "created": "2023-12-13T10:29:33.646906729Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-13T10:29:33.834618616Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-13T10:29:34.000353947Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-13T10:29:34.191082281Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=20.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-13T10:29:41.411360125Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9ec8b7bbb2fbc8c90f1f24e19ab22130e03be1cc4727459e1265d2ed652377a1 in / "
                },
                {
                    "created": "2023-12-13T10:29:42.088758092Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:44:28.31557935Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:44:28.31557935Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:44:28.31557935Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:24.527129Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:25.51675026Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:25.51675026Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:46:25.51675026Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:46:25.634970811Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:25.646472707Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:25.683227289Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:25.692829425Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:25.692829425Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:46:26.30615206Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu focal   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:26.440687064Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu focal \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T12:03:01.060665486Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T12:03:01.060665486Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T12:03:01.167015435Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu focal \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b1099d79a48ef6b9eaf12e0083d6510f9d9a5f9085465344247ca2822a9687f0",
                    "sha256:a8c8ef8c84d4ecb2efa62199ac3c251abcfedc3b4f341ec0411956b020b9fc8a",
                    "sha256:832a74c119ea0194cd7d96779c3c0e8ca5fef067e58483d8225ff6e7f49d7204",
                    "sha256:76ea883df1090b524d26d225f19b0502d3c395bedb422acf58bcd772305519ec",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:eb2bdbdb0da775e1f289d47f157fdadb4a5427afaa1005c0e2534cac1ad61818",
                    "sha256:7aa28b51aaea060da81b80bf509eb80f5f604e5902da6e071b4d9ff0caf45f90",
                    "sha256:acc1151c0994cc881196b406e2b9ae53eb33bc818f5568c8ab812ca5796ca139",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:13bad18dde3faad15a01f450cbc13f8df1aeb88af725bad9f6a2636fd5b07ab5",
                    "sha256:8e9d32e15125ef1f3328e9e08ffa65e33bfe65ccbb11e3ce804abada623e7183",
                    "sha256:1791873cc4d43570bb5bec549a1d93924e0757808da9f02970829c07ad7282fb"
                ]
            },
            "variant": "v8"
        },
        "focal-run-20240105": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "20.04"
                },
                "OnBuild": null
            },
            "created": "2024-01-06T07:55:47.630019157Z",
            "history": [
                {
                    "created": "2023-12-13T10:29:33.646906729Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-13T10:29:33.834618616Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-13T10:29:34.000353947Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-13T10:29:34.191082281Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=20.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-13T10:29:41.411360125Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9ec8b7bbb2fbc8c90f1f24e19ab22130e03be1cc4727459e1265d2ed652377a1 in / "
                },
                {
                    "created": "2023-12-13T10:29:42.088758092Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:37:53.341836734Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:37:53.341836734Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:37:53.341836734Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:45.683556995Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:46.3249336Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:46.3249336Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:39:46.3249336Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:39:46.450956994Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:46.46183102Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:46.471306795Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:46.500144559Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:46.500144559Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:39:47.068417778Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu focal   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:47.191168942Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu focal \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:55:47.523367409Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:55:47.523367409Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:55:47.630019157Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu focal \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b1099d79a48ef6b9eaf12e0083d6510f9d9a5f9085465344247ca2822a9687f0",
                    "sha256:44c1f13d4c9a37f95eb2b21de83c258751b7b754fd5f88180cbe28e14f5fc608",
                    "sha256:14482c1bea8993e8082ebfc2ce5ef5bd26f5b9528777986b74abda51a3e493c1",
                    "sha256:0da8e1493a48e3ea205f68bb8d289504be726618fef762f1d79ef0478f6086a8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5023e3def3a4b1fcc2ed81bf2c6cf4803d4b379fd5b6a3a716a8a906a5af3c14",
                    "sha256:96b729048352b331294d179ace51fb886a80724fc8aebe5ea719e7c97bf4cc06",
                    "sha256:19520d951c916bb4365ed90a6a7a0de1efe45c6932049556d0d846d6968cf699",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:bb2e9816e80ad1e985065f9d9531de420469b3dacc244e2144dcf2b36c0ab551",
                    "sha256:f00c8685650e44872cc2e8abe26a357f7c759dd52273689a3db53a64fb02268f",
                    "sha256:8a07d34b6eb25bd9c5ac9eb3ebc9ec4b5f2930a97dd2e05beb7c0b8e76a907d5"
                ]
            },
            "variant": "v8"
        },
        "focal-run-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "20.04"
                }
            },
            "created": "2024-04-06T13:38:42.124321559Z",
            "history": [
                {
                    "created": "2024-02-16T19:15:01.809472513Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-16T19:15:01.87560193Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-16T19:15:01.925728358Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-16T19:15:01.986685819Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=20.04",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-16T19:15:06.579602793Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a8303c80b47ec165c276111aa6f98ee877e4da60ddafa00b7547032a3de7935d in / "
                },
                {
                    "created": "2024-02-16T19:15:06.976721553Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:20:40.651205949Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:20:40.651205949Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:20:40.651205949Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:31.132338871Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:31.674759503Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:31.674759503Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:22:31.674759503Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:22:31.789526214Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:31.798780672Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:31.807229159Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:31.842820076Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:31.842820076Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:22:32.547684037Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu focal   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:32.690982858Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu focal \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:38:42.024955461Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:38:42.024955461Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:38:42.124321559Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu focal \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:346e7b163cb7be905cf1201cbcbe474e96c1ceb2d102520cc15bf34ece763dbf",
                    "sha256:caaef2321813a309585380ae9717848c8e472a9b7d492e2e7641c50b95702e48",
                    "sha256:0662f7f4f1477774faded42eb2a9c6234038c1fcdec8ef6bff8eb138fe39831f",
                    "sha256:c570fbdfd7e3915b2a42cda6ecdf0307338190b0f36d22f2305eb87f0cec7332",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:4baecfc53d7fb355cd78d27ac9e98585b2952e660e73e05de1e5035ff7a3a0b0",
                    "sha256:8b60728ddb9f779e054e749b88c65bbc769883479e1887633c8a49c49d92c69f",
                    "sha256:53c11fa4f176d2836ba0b80531b5b8b732a05900ef0d46f52a69ce45f508997f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:08df0fafdc69064ed48fe0bf14aed69f4ee2b7b73e6f5d897b048a49bba334aa",
                    "sha256:c4873ecb463e2f0f276894018ea3e2b221b3a8a3c280684a5ed2d7d805c5d1a8",
                    "sha256:b552fff6a54e58573cc39d1f11dd2d345f32ba13e6351302ce2066d11b48ca61"
                ]
            },
            "variant": "v8"
        },
        "focal-run-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "20.04"
                }
            },
            "created": "2024-04-09T18:53:08.15708842Z",
            "history": [
                {
                    "created": "2024-02-16T19:15:01.809472513Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-16T19:15:01.87560193Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-16T19:15:01.925728358Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-16T19:15:01.986685819Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=20.04",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-16T19:15:06.579602793Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a8303c80b47ec165c276111aa6f98ee877e4da60ddafa00b7547032a3de7935d in / "
                },
                {
                    "created": "2024-02-16T19:15:06.976721553Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:55.881941771Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:55.881941771Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:55.881941771Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:50.9992458Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:51.964961136Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:51.964961136Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:51.964961136Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:52.09693069Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:52.10830268Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:52.118949066Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:52.155315014Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:52.155315014Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:52.711957536Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu focal   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:52.817029661Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu focal \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T18:53:08.059984766Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T18:53:08.059984766Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T18:53:08.15708842Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu focal \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:346e7b163cb7be905cf1201cbcbe474e96c1ceb2d102520cc15bf34ece763dbf",
                    "sha256:cdeee499ac5cf4b10499a17c93a884a048166961152fe6e3823266ae93eafabd",
                    "sha256:d10c84af8f3b88abb8fc52d1da7419ba40ea32c853560fe840eba929469b6344",
                    "sha256:8782a487b42b57fb2e0bbd0db05c0b9351bb49d565d181a27566437573e30502",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9bb87abc5a9cf96a24d51714046d4339452535fbc3b3369595288dfba763cc14",
                    "sha256:d42f5e8ed01a1c4ae098d971ab90ff9c8a05bc8a92069ff84b93972877c0936d",
                    "sha256:e2f00ea7ab5887a20ab52dd352394e9ed0472064ea404c00195d01c90d7dec5a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b2ee56f369a011da907f0a6b20094382be92145512fa8c0ff413ea3faefa08f9",
                    "sha256:81bddd29c05c2c5b5e6b61b98b92948aee639da29e9d89b1e3a9d3093b84d9a6",
                    "sha256:cd6e07edaa19dc702ee401a4ae1d4e8bc08b4f390ca9c20b47509b18ac0f2024"
                ]
            },
            "variant": "v8"
        },
        "focal-run-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "20.04"
                }
            },
            "created": "2024-05-02T02:40:02.446046258Z",
            "history": [
                {
                    "created": "2024-04-27T14:42:15.114110355Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:42:15.194158109Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:42:15.269776303Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:42:15.335774549Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=20.04",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:42:24.343171441Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d1a4a31f5a3aea1e130c7e173da2ed506ba19e91be74ab9700d398774d0ace22 in / "
                },
                {
                    "created": "2024-04-27T14:42:24.923228587Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:13.885062202Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:13.885062202Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:13.885062202Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:06.064490518Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:06.618737946Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:06.618737946Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:24:06.618737946Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:24:06.724279359Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:06.751006523Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:06.786964422Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:06.796250326Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:06.796250326Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:24:07.364724387Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu focal   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:07.488038717Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu focal \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:40:02.34516972Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:40:02.34516972Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:40:02.446046258Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu focal \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:048ad3e8492c4c225edc3ea8002df2c1efe22cafe3a23c56dbe485caec750069",
                    "sha256:b500cc65b4d85262106af88178662c0de5a5da63381c490a6d6ff229fae89106",
                    "sha256:e003e8ea436283af8e55fea6ce6a825296328932f0dda605bcba3890b73df75b",
                    "sha256:c15828703037fec76c3fb203089cbce19753ea61c3b1ec76f2e3a45b83ef6e21",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:01a5d49a05b4461215d4ad4bd2997f38f2d967e9f68b9ce3a198b43f250a319a",
                    "sha256:5032819b5b74d3306137302ae250bd957ca997e96406a101b0e1126f5397bb17",
                    "sha256:23e5e3f181da0e9fccc84e84d4b6df606940bc28485e717cb893e08f2bb8729a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:baf5bd477debee42aa54cc1e6cf04f174638aacb854ece1199c4ca0d60e918ae",
                    "sha256:cca0c16a33111df804cc9fe06b1992bcc19740aad05d2f5a60c0c35fd8eb88c0",
                    "sha256:9f0f3cb50293ad4c534164d6fd3173a086c11b2a17d8b24bd817ef5435335022"
                ]
            },
            "variant": "v8"
        },
        "jammy": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                }
            },
            "created": "2024-05-02T02:40:02.09133632Z",
            "history": [
                {
                    "created": "2024-04-27T14:32:22.643440355Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:32:22.768221855Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:32:22.922781285Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:32:23.070247637Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:32:33.475488206Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:18035d0a8c59e3306bad4219c71a52b03397fc8f231baf7f676287c73024d85c in / "
                },
                {
                    "created": "2024-04-27T14:32:33.989941961Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:18.216101982Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:18.216101982Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:18.216101982Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:21.912464985Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:22.625610903Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:22.625610903Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:24:22.625610903Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:24:22.739350403Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:22.750532225Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:22.759557887Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:22.792378776Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:22.792378776Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:24:23.712437353Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:23.834897531Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:40:01.977748969Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:40:01.977748969Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:40:02.09133632Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:842bef16b8fb80459504b4621523ac3d78faf7e01d6d9fa7076ed6d4a8f49830",
                    "sha256:0640e720188f6528f7c748e336f11a09d9d00729e4c36eb2bbe129f8a763d070",
                    "sha256:da00f81eef79ae72a2a6e39658ba370fdc81df4c094e54e6a589f711e7c05f0d",
                    "sha256:16497e63f0b712dabe742045e338b44077718e77481804d3a7724223446a164b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:aabd4e14de0df6a5f9f1a6579c3040ed27fca9cd89f3657928a4b239e2e86e75",
                    "sha256:5f6d921eddb8660b20b548ace680919f1b42147cf88460f36aa40005e1aa336a",
                    "sha256:c56d8196358aa702245257319ec5bdcbf5176851d7fef2e97a20cd495170743e",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3817267cec6b73a0e47e08025ef532290d5f261f3fbf1a42ed49176789c09b27",
                    "sha256:070b1a3316674d91b65504d1eb226dfd4fd381c8bb452d8dd49156030aa90fc2",
                    "sha256:85e6e6342cb0f9b27b344a63573bdaad71104c22aa6f59ee24fb6af673be4617"
                ]
            },
            "variant": "v8"
        },
        "jammy-20230829": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                },
                "OnBuild": null
            },
            "created": "2023-09-02T04:38:26.679554608Z",
            "history": [
                {
                    "created": "2023-08-16T06:19:52.511034945Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:52.678880469Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:52.846527092Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:53.017052303Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:59.127120216Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3fcf00866c55150f1ea0a5ef7b8473c39275c1fdbf6aba0acd84cacb83d0c564 in / "
                },
                {
                    "created": "2023-08-16T06:19:59.851781663Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:00:23.873526242Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:00:23.873526242Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:00:23.873526242Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:02:54.845294161Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:02:55.74234964Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:02:55.74234964Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:02:55.74234964Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:02:56.156853799Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:02:56.172046311Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:02:56.180539674Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:02:56.187494225Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:02:56.187494225Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:02:57.826653521Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:02:58.213618576Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:37:36.551201041Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:37:36.551201041Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r32.7 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t186 r32.7 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:38:26.47007244Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:38:26.679554608Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:61bbeda53374249345217a09cd78040f124ef8bc07a1612a1a186d2468f67d54",
                    "sha256:92270994fafef678580dc83e4325fa2f4ae8f3223934c22243dfe7309162be07",
                    "sha256:88be2f314b58b7c97d88f89fe1a9d2589c6951703c29dbcdee1370a38fb0eb73",
                    "sha256:4cd26e8abc8ea4578f5fd18bd7c88e1752f63a6ba2b47a2748829da6533c515e",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:dd4425b585e6ef6909b4e401069d605f63794d541cdb42bb06807d560388e5d1",
                    "sha256:ab02b38642445743fcea5363e3e2e2c152645db64fb26bf7b56d0b4b2662547f",
                    "sha256:b5bde6de6d78cc309610ed44aff8af02dc24903bd4636c9abb2e4615858e8d24",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ac15c28c9f71649b95fa1383d44e822cc7424b12c2f75d369058eb9a421a26fb",
                    "sha256:840e79a410397ef2c89aa6bbc0d269397467a0ccac93eaae377dc5f1ac017576",
                    "sha256:4753bcd57f51dfa0de52a8f29ebd5cd26d197100d81e81d34eee7f20da928c43",
                    "sha256:72eb1b1b4477f23b490cf4fb49b82965605ee90bed7b3580b38d5356823e6b78"
                ]
            }
        },
        "jammy-20230904": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                },
                "OnBuild": null
            },
            "created": "2023-09-09T04:35:32.847209484Z",
            "history": [
                {
                    "created": "2023-08-16T06:19:52.511034945Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:52.678880469Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:52.846527092Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:53.017052303Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:59.127120216Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3fcf00866c55150f1ea0a5ef7b8473c39275c1fdbf6aba0acd84cacb83d0c564 in / "
                },
                {
                    "created": "2023-08-16T06:19:59.851781663Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:46.93114918Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:46.93114918Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:46.93114918Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:18.952261606Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:19.761223709Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:19.761223709Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:02:19.761223709Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:02:20.194221163Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:20.21180478Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:20.222393011Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:20.247807525Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:20.247807525Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:02:21.899364646Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:22.17951671Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:34:39.875937997Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:34:39.875937997Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r32.7 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t186 r32.7 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:35:32.515089708Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:35:32.847209484Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:61bbeda53374249345217a09cd78040f124ef8bc07a1612a1a186d2468f67d54",
                    "sha256:73eb566cd0436219bfde4ac6950bfa86846113f3c3c13e59f1f7259b9fde4798",
                    "sha256:f4f141ccf9b2ed89c1994bab50acd51e197800b7914b79c9a5766edeb1e6264c",
                    "sha256:b8f42e3e6876f69f9fd6f1b2655f542d668078b48b309426774345ff5b2fa1fd",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:65a6d302256cb6db51bbd0d59145a3c145a08912581711a4b8c50fee03ee7954",
                    "sha256:aa50ec027cafedf6cfa9d5b7b797297902c54bc818224ffc5ad46c700b1f1a18",
                    "sha256:118f8ef44e94351e31e425e81210209b5d911b92a8a47eb5f456d1de5097e136",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ebee8221a712caf18485002c7e6312a65efa63454430c6e40be097c2da96770d",
                    "sha256:700852db6c013bb086661c8fac7220c7c879c0a4b5fa4221568ef8804dd5bd3f",
                    "sha256:3ab1eee539c0fc9b8c74d9ef9d398b94eb84fb663984b00a662bf0f0013d2a44",
                    "sha256:66af3d0aa2bad03237d458b7e588803cb2e3b22d46eb305fdeeb02a553899fd9"
                ]
            }
        },
        "jammy-20230911": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                },
                "OnBuild": null
            },
            "created": "2023-09-11T23:11:29.355189118Z",
            "history": [
                {
                    "created": "2023-08-16T06:19:52.511034945Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:52.678880469Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:52.846527092Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:53.017052303Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:59.127120216Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3fcf00866c55150f1ea0a5ef7b8473c39275c1fdbf6aba0acd84cacb83d0c564 in / "
                },
                {
                    "created": "2023-08-16T06:19:59.851781663Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:46.93114918Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:46.93114918Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:46.93114918Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:18.952261606Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:19.761223709Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:19.761223709Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:02:19.761223709Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:02:20.194221163Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:20.21180478Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:20.222393011Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:20.247807525Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:20.247807525Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:02:21.899364646Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:22.17951671Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T23:11:29.250286Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-11T23:11:29.250286Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T23:11:29.355189118Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:61bbeda53374249345217a09cd78040f124ef8bc07a1612a1a186d2468f67d54",
                    "sha256:73eb566cd0436219bfde4ac6950bfa86846113f3c3c13e59f1f7259b9fde4798",
                    "sha256:f4f141ccf9b2ed89c1994bab50acd51e197800b7914b79c9a5766edeb1e6264c",
                    "sha256:b8f42e3e6876f69f9fd6f1b2655f542d668078b48b309426774345ff5b2fa1fd",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:65a6d302256cb6db51bbd0d59145a3c145a08912581711a4b8c50fee03ee7954",
                    "sha256:aa50ec027cafedf6cfa9d5b7b797297902c54bc818224ffc5ad46c700b1f1a18",
                    "sha256:118f8ef44e94351e31e425e81210209b5d911b92a8a47eb5f456d1de5097e136",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ebee8221a712caf18485002c7e6312a65efa63454430c6e40be097c2da96770d",
                    "sha256:e4277096ad7051f93b36723b91a5664995e4910f530500f85dc819be543be5a5",
                    "sha256:ed2c4d9a482f2a4ac9b8a365762d1ac090db181531b17d3f53835a96a71b83be"
                ]
            }
        },
        "jammy-20231026": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                },
                "OnBuild": null
            },
            "created": "2023-11-02T15:45:01.662929295Z",
            "history": [
                {
                    "created": "2023-10-05T07:32:20.951880606Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T07:32:21.015770292Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T07:32:21.080364699Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T07:32:21.153596992Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T07:32:22.639154667Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f8594e26831508c318e42c8dfd9942041031087b8de1bf3fec11fd75b8b30fd4 in / "
                },
                {
                    "created": "2023-10-05T07:32:22.848629339Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:17:36.98530637Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:17:36.98530637Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:17:36.98530637Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:19:30.038036758Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:19:30.590211839Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:19:30.590211839Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:19:30.590211839Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:19:30.727463187Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:19:30.737278712Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:19:30.746163163Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:19:30.755855653Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:19:30.755855653Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:19:31.864611691Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:19:31.989038864Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:45:01.512720457Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:45:01.512720457Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:45:01.662929295Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d2d3127fc3d362a0516c53fcb8fb983ebb9d1ea2dfbd63b69967a0084f0d45a3",
                    "sha256:c243b6ba49361914e3fe9a5b150d45bb20ad99e1ee88a0b770b7d4f9f72379a9",
                    "sha256:78a2eaa1c40786ba98d4ddac8dda4a7fe3fa8784ec9d199c07bd4e06dd347b1b",
                    "sha256:abe9e87e67a428d547cfd1863fd6138073f87abb61f909e5dc88d063f811aa64",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8613ffa14109f531902ca2af59ffd55b23ce83905ee8fa46273b23cebc081816",
                    "sha256:cbf495cb182bd008ae474b08be37c1d8dc1758e42bd6ac3132f5431193c4f960",
                    "sha256:3d8d8f656c49302ea76def530da05ad3de05e09b6750296a55f8452569fa332b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1545d6d669cd3e2c6f9e758aae9bbafb3ce5d769394bde3fa61b4ee7787e7fbe",
                    "sha256:fde2d01656b6e0a7be7e899d237c95269da9697e5e1c90e061d39682c0a309d4",
                    "sha256:0203de8b3984581bfcd33b7b6c71182d8f93752a50dffc033a0c016d02dd3cc8"
                ]
            },
            "variant": "v8"
        },
        "jammy-20231103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                },
                "OnBuild": null
            },
            "created": "2023-11-06T01:05:40.231993362Z",
            "history": [
                {
                    "created": "2023-10-05T07:32:20.951880606Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T07:32:21.015770292Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T07:32:21.080364699Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T07:32:21.153596992Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T07:32:22.639154667Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f8594e26831508c318e42c8dfd9942041031087b8de1bf3fec11fd75b8b30fd4 in / "
                },
                {
                    "created": "2023-10-05T07:32:22.848629339Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:42:26.099059735Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:42:26.099059735Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:42:26.099059735Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:45:34.259078886Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:45:35.342603498Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:45:35.342603498Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:45:35.342603498Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:45:35.54098196Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:45:35.568397242Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:45:35.588929428Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:45:35.606804938Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:45:35.606804938Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:45:37.38438037Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:45:37.560859106Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T01:05:40.127404642Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T01:05:40.127404642Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T01:05:40.231993362Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d2d3127fc3d362a0516c53fcb8fb983ebb9d1ea2dfbd63b69967a0084f0d45a3",
                    "sha256:10d443a89e642fe0b654249aeaf8bab4bcaaff359469729746bcf8c3241a97a9",
                    "sha256:f12d1c92fcdedc951a85ecbdc9d891651c9b03345450ff58f4f6ed3d1e875529",
                    "sha256:32a3d52ec67454977739f6e7a73f3e5c5986448701054fc6c5fa301b3506febb",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5404be9f26b2de792e3a835a087e9fc32d210318c0cac541ec39560fbc37fa09",
                    "sha256:62cc72e6e0b17dc250f4fb916acec294669629b1bb227e42d4898bc3f1ceb65f",
                    "sha256:3b39c17b1c6d3d260b788455c8c91a74d07191d21680dc48ff42f49ced28ac0b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:15af4a4eddbf67d577754196c8e9c1b01d0ff122deb12c53608acde408929328",
                    "sha256:c7c9a0a8349b22dd0f136ea938ee49bd0f4051f5ea066b96afdbe914efc5de99",
                    "sha256:0ae0d71f7f9017192df1dea1f564518812b189f9dd845329ddc90f269d3c90f4"
                ]
            },
            "variant": "v8"
        },
        "jammy-20240103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                },
                "OnBuild": null
            },
            "created": "2024-01-05T12:02:53.118433161Z",
            "history": [
                {
                    "created": "2023-12-12T11:41:50.758603714Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:41:50.869361588Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:41:50.981745008Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:41:51.093819154Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:41:54.146264118Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50f947da69b3b6c63695be9c49eee16f7a7dcdecdceb51e5bee1609b845bf483 in / "
                },
                {
                    "created": "2023-12-12T11:41:54.521050543Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:44:32.928365316Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:44:32.928365316Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:44:32.928365316Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:31.817746676Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:32.78934311Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:32.78934311Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:46:32.78934311Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:46:32.932763963Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:32.98071649Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:32.991085243Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:33.000875247Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:33.000875247Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:46:34.094944699Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:34.213393498Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T12:02:53.012607201Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T12:02:53.012607201Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T12:02:53.118433161Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3e798a66607c97d027570dbbc112c32956981fbcc244bb2d4d1fddbce4cda84c",
                    "sha256:2e80ca486da4411dd0fec1cb0259ef173c62232fbbe60840b5545c69c0fb586f",
                    "sha256:acf9093499d05e7ea73879d4c847e171497cb3bf2cb28024c73387b604202842",
                    "sha256:ad39e05fd4bbe30d5a56af6ff638c51ab486a6d35bd68a230cb50ea30744dfb3",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:308d9a7b689b399750c10022e08a49643987885d64d68a3d172159361029b865",
                    "sha256:c91850d3827f25311e2ab8770645f4d7353e5b945060f7d9eb64b5e37e47cdb3",
                    "sha256:8fbef8bff8fa00578568f3fc095176b16bfef7cc768a375bf314e031ef82eb57",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f2cfb4098741be87d1c2f5a4af897292332eac7285b71af5e2e68f83c10d547f",
                    "sha256:a846361021ce8a43ef1823d57a8d92eef1bf740934c97c3d27a11548a2965415",
                    "sha256:2a0434d0a39a5006671e7d244fef0ca84743f03dea0adc607e6f3c8a73cd8398"
                ]
            },
            "variant": "v8"
        },
        "jammy-20240105": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                },
                "OnBuild": null
            },
            "created": "2024-01-06T07:55:35.98119432Z",
            "history": [
                {
                    "created": "2023-12-12T11:41:50.758603714Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:41:50.869361588Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:41:50.981745008Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:41:51.093819154Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:41:54.146264118Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50f947da69b3b6c63695be9c49eee16f7a7dcdecdceb51e5bee1609b845bf483 in / "
                },
                {
                    "created": "2023-12-12T11:41:54.521050543Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:37:52.719890317Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:37:52.719890317Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:37:52.719890317Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:44.68383672Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:45.24617781Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:45.24617781Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:39:45.24617781Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:39:45.393470696Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:45.445245009Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:45.454514748Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:45.464356521Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:45.464356521Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:39:46.694653805Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:46.80732869Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:55:35.876752162Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:55:35.876752162Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:55:35.98119432Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3e798a66607c97d027570dbbc112c32956981fbcc244bb2d4d1fddbce4cda84c",
                    "sha256:06f199958bd4bf23fdd093651f2fded886cfd510f924b035e3778a6b3ced8d02",
                    "sha256:c98bc4703039eb0431773191cecc6af09b53b8f99ee046ba4dfd112763f7de42",
                    "sha256:d64970f18b174ccdc31d58582f24b0401663e973e81699d978e77a6a3dd90f19",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ac14ba889ceb708b209faf5e1feb12af78c8d094462a61fc691d0b0aac610e64",
                    "sha256:7ea7282951c60a62d47abc4a180fc3fdc8e85b96fa9ce9ccf26e086a9d9fed23",
                    "sha256:9bc1e596ac05cea9597de16d9d793a37966b4da0b57b9306cb6f4eab4da3dbc0",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:615998ebaa076cb1f7ed838a1a6164c074b4979e566706ca6d5862ce6b727c33",
                    "sha256:6f884b55abc68468e2c919dd9c19eb298af72bbdec42c9477ad6d34cf2824ae8",
                    "sha256:f7c671bf97f1df35894ae6f6fe4f8833ee513bd4db9385792a76fcd1ace2afbe"
                ]
            },
            "variant": "v8"
        },
        "jammy-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                }
            },
            "created": "2024-04-06T13:38:44.879767741Z",
            "history": [
                {
                    "created": "2024-02-27T18:53:22.490310908Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T18:53:22.539283006Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T18:53:22.59951827Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T18:53:22.648922452Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T18:53:25.140932403Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:07cdbabf782942af04487c9da03de50a611a51e69d8bac1f593acb73a3ba3a46 in / "
                },
                {
                    "created": "2024-02-27T18:53:25.397886996Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:20:52.447123568Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:20:52.447123568Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:20:52.447123568Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:46.136639138Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:46.672812142Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:46.672812142Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:22:46.672812142Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:22:46.789043867Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:46.801794101Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:46.837911774Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:46.848970589Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:46.848970589Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:22:47.737012242Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:47.874181626Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:38:44.767427419Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:38:44.767427419Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:38:44.879767741Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a510ae0f066c65d73f523d5821fe048a6858e53360ecb8d39b7b931162f11479",
                    "sha256:43c1435efbd6a805475b6a69ed2afea4421be979091a971f530b219a1ce24cd9",
                    "sha256:e37f3ca660bcc311e960bcea5d2c9df82900567c09cd643d5f1d4daa39c810e7",
                    "sha256:3839ee8dd9a6dc7cbb4afc83940c3b88151d70ba57d3886ee1296b5db7da0ae7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:77504a1f2690cadb7b6b7aae94be4d28f9f58dcf3c8c6c7bee7b23c0c30e7582",
                    "sha256:9459da29ee9ac2f7e12d595eafca0d2d1f0637d68f6b071fe101f1b64b632585",
                    "sha256:cb0901504bd0e19c9232086b08b0e4835bc7c8a76691405b1dc830adee2ed6d5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:18821c7845f9f0aa9381d55d092efcc647571f926ba8e8198fe6a5ac352260df",
                    "sha256:f9ecea3f3853e467055455b994bf74116f94d38d7b5fbabaa0536a94e146bb4e",
                    "sha256:50db4c8cdcf855056432aecf4ccdf80bc0e15409dbdbad6098f7e3c02466e307"
                ]
            },
            "variant": "v8"
        },
        "jammy-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                }
            },
            "created": "2024-04-09T18:52:59.102361258Z",
            "history": [
                {
                    "created": "2024-02-27T18:53:22.490310908Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T18:53:22.539283006Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T18:53:22.59951827Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T18:53:22.648922452Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T18:53:25.140932403Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:07cdbabf782942af04487c9da03de50a611a51e69d8bac1f593acb73a3ba3a46 in / "
                },
                {
                    "created": "2024-02-27T18:53:25.397886996Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:47.461373506Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:47.461373506Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:47.461373506Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:43.100120348Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:43.649843389Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:43.649843389Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:43.649843389Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:43.766584201Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:43.776851848Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:43.785956822Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:43.795637979Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:43.795637979Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:44.705220102Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:44.823651141Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T18:52:58.997668861Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T18:52:58.997668861Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T18:52:59.102361258Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a510ae0f066c65d73f523d5821fe048a6858e53360ecb8d39b7b931162f11479",
                    "sha256:755a5181e5cf3dc59d0d45df350e621f8f70fba87a9e128453149fdde7d6ec13",
                    "sha256:bc3eb4fdfc82ec2711ae80e36e01fcf5f44d6be01e59e0101cdf79da46b187a5",
                    "sha256:02854098a3656cb8daac9692ef973e560528ede1eb6752702f15dec8702afba2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a70167e146c331d507a4700240a8dad7047ffbda396a3d152fb55b91ec179808",
                    "sha256:9c02956fcc7d415d1f3bd2340c6905be7b40a107e3852ced3bf12842ccd8c502",
                    "sha256:15cacaf774edf7d6221e2d6014bb5ac3604f5912c908450cd10bd6324cfba332",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f7bd9f5560827cd12577ee9ed4e229cedcd48ed2e4d45a53df473eb210efde01",
                    "sha256:5a88d24cf58ed32b1cb1ee0fd6f16414ca862e09411f7bf6038ffd08be255508",
                    "sha256:9436603e67f8ef0a8cf6af8fd08185ff7696ff4b8b70f4425f9c1066d459603a"
                ]
            },
            "variant": "v8"
        },
        "jammy-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                }
            },
            "created": "2024-05-02T02:40:02.09133632Z",
            "history": [
                {
                    "created": "2024-04-27T14:32:22.643440355Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:32:22.768221855Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:32:22.922781285Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:32:23.070247637Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:32:33.475488206Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:18035d0a8c59e3306bad4219c71a52b03397fc8f231baf7f676287c73024d85c in / "
                },
                {
                    "created": "2024-04-27T14:32:33.989941961Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:18.216101982Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:18.216101982Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:18.216101982Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:21.912464985Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:22.625610903Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:22.625610903Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:24:22.625610903Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:24:22.739350403Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:22.750532225Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:22.759557887Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:22.792378776Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:22.792378776Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:24:23.712437353Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:23.834897531Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:40:01.977748969Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:40:01.977748969Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:40:02.09133632Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:842bef16b8fb80459504b4621523ac3d78faf7e01d6d9fa7076ed6d4a8f49830",
                    "sha256:0640e720188f6528f7c748e336f11a09d9d00729e4c36eb2bbe129f8a763d070",
                    "sha256:da00f81eef79ae72a2a6e39658ba370fdc81df4c094e54e6a589f711e7c05f0d",
                    "sha256:16497e63f0b712dabe742045e338b44077718e77481804d3a7724223446a164b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:aabd4e14de0df6a5f9f1a6579c3040ed27fca9cd89f3657928a4b239e2e86e75",
                    "sha256:5f6d921eddb8660b20b548ace680919f1b42147cf88460f36aa40005e1aa336a",
                    "sha256:c56d8196358aa702245257319ec5bdcbf5176851d7fef2e97a20cd495170743e",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3817267cec6b73a0e47e08025ef532290d5f261f3fbf1a42ed49176789c09b27",
                    "sha256:070b1a3316674d91b65504d1eb226dfd4fd381c8bb452d8dd49156030aa90fc2",
                    "sha256:85e6e6342cb0f9b27b344a63573bdaad71104c22aa6f59ee24fb6af673be4617"
                ]
            },
            "variant": "v8"
        },
        "jammy-build": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                }
            },
            "created": "2024-05-02T02:40:03.973438666Z",
            "history": [
                {
                    "created": "2024-04-27T14:32:22.643440355Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:32:22.768221855Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:32:22.922781285Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:32:23.070247637Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:32:33.475488206Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:18035d0a8c59e3306bad4219c71a52b03397fc8f231baf7f676287c73024d85c in / "
                },
                {
                    "created": "2024-04-27T14:32:33.989941961Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:11.45435502Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:11.45435502Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:11.45435502Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:32.219701867Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:28:20.556751422Z",
                    "created_by": "RUN /bin/sh -c install_packages \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:28:21.170108759Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:28:21.170108759Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:28:21.170108759Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:28:21.288842708Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:28:21.299317535Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:28:21.308861982Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:28:21.35408794Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:28:21.35408794Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:28:22.274748769Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:28:22.395535238Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:40:03.8848073Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:40:03.8848073Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:40:03.973438666Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:842bef16b8fb80459504b4621523ac3d78faf7e01d6d9fa7076ed6d4a8f49830",
                    "sha256:5f36a177078485a2d99a5ab825ad3673c88cf3c33aa985e4c71ff4407e8745c3",
                    "sha256:59e8c92f5618d3c40623d0b51147a9fa34173826f787ee4b5b3d3f941c810758",
                    "sha256:8c077cab623f02bd821f5daf97abcbaf2eec47d7cba5e3bdac606a28cf3864cf",
                    "sha256:3617838ef85e313ca7428cf601a6352bf9c9b30a94ea687c8db63c883ab64b58",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b71bb935752deacef677163932ef67131e6130d319f31ac680c7719de4c9a92b",
                    "sha256:6c964c391bd1f7c4eebe899d34623958a4b54135b55dfb05367a8ae8a765bfb8",
                    "sha256:d4181efba17b04bbbd6411558f7fa24d4dbc59a105ede3adb6bddb8b46a5aedf",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:4add95593e9ba7737e2464bf1def73e4d27227b1eee6cf1934b5f73fc2e3fd85",
                    "sha256:efe8a8d81bf0084babf2f5ad813420c49efaf92339ff6278270d1020e68c32e7",
                    "sha256:8db20f21d5b24210d3f8c21332e8eb550f788db6e973bc0e1744e0c8b271cf6d"
                ]
            },
            "variant": "v8"
        },
        "jammy-build-20230829": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                },
                "OnBuild": null
            },
            "created": "2023-09-02T04:37:13.189259628Z",
            "history": [
                {
                    "created": "2023-08-16T06:19:52.511034945Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:52.678880469Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:52.846527092Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:53.017052303Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:59.127120216Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3fcf00866c55150f1ea0a5ef7b8473c39275c1fdbf6aba0acd84cacb83d0c564 in / "
                },
                {
                    "created": "2023-08-16T06:19:59.851781663Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:00:23.873526242Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:00:23.873526242Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:00:23.873526242Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:02:54.845294161Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:06:56.671621547Z",
                    "created_by": "RUN /bin/sh -c install_packages \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:06:57.575369175Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:06:57.575369175Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:06:57.575369175Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:06:57.988122767Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:06:58.002972646Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:06:58.016232207Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:06:58.024609308Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:06:58.024609308Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:06:59.683832772Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:07:00.001901719Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:36:25.853300687Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:36:25.853300687Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r32.7 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t186 r32.7 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:37:12.800336493Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:37:13.189259628Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:61bbeda53374249345217a09cd78040f124ef8bc07a1612a1a186d2468f67d54",
                    "sha256:92270994fafef678580dc83e4325fa2f4ae8f3223934c22243dfe7309162be07",
                    "sha256:88be2f314b58b7c97d88f89fe1a9d2589c6951703c29dbcdee1370a38fb0eb73",
                    "sha256:2da7b05b9b2c066da95e684aa433f904559d59953f63b7a4805e780f85a6a419",
                    "sha256:a59f32fea489f5b480c7c7b352486d643961b2106e7734d014e5a9f9e7597073",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:afab8e08d891f236dabee477f49cc1b21c8b40b4297b7edfdf4a06281eec9792",
                    "sha256:1a4202f18e8f7056cd11e6f2fcf89076f970e128cfd63160360adf3b34c20751",
                    "sha256:59bbb1f6c67c3fb01458e76e34f400ceb0ae004ff972800836a680053593001b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:90da16b7d2f1a9171d174743774b329ab0b231d3b7ca646ea377109eab1dd4fc",
                    "sha256:d19cb61d0aad8a26931cc4eaa795db3d2e4458d3b9684bb24c814c4db36cf2d7",
                    "sha256:7288f327175f44b8b032601053f6e94ac0af3b9418bef01df4c17998ff6a2a35",
                    "sha256:3bb6b2f97424a2ac255c13484519b07fb505a025d06eca4cb78cfed3bd7b337c"
                ]
            }
        },
        "jammy-build-20230904": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                },
                "OnBuild": null
            },
            "created": "2023-09-09T04:37:02.644699864Z",
            "history": [
                {
                    "created": "2023-08-16T06:19:52.511034945Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:52.678880469Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:52.846527092Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:53.017052303Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:59.127120216Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3fcf00866c55150f1ea0a5ef7b8473c39275c1fdbf6aba0acd84cacb83d0c564 in / "
                },
                {
                    "created": "2023-08-16T06:19:59.851781663Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:46.93114918Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:46.93114918Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:46.93114918Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:18.952261606Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:06:18.916842861Z",
                    "created_by": "RUN /bin/sh -c install_packages \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:06:19.822747165Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:06:19.822747165Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:06:19.822747165Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:06:20.1313966Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:06:20.145175206Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:06:20.159556922Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:06:20.170772691Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:06:20.170772691Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:06:21.7829426Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:06:22.117698827Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:36:12.9252513Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:36:12.9252513Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r32.7 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t186 r32.7 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:37:02.267928447Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:37:02.644699864Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:61bbeda53374249345217a09cd78040f124ef8bc07a1612a1a186d2468f67d54",
                    "sha256:73eb566cd0436219bfde4ac6950bfa86846113f3c3c13e59f1f7259b9fde4798",
                    "sha256:f4f141ccf9b2ed89c1994bab50acd51e197800b7914b79c9a5766edeb1e6264c",
                    "sha256:2dbf04c5b97d4074854481aee89b30c68ea38d43c1bb545a10af3ed8a760398f",
                    "sha256:c362cf0c7daa3e62fddd2b352472dd935de7482d4f5af2a3e973e8d862b9f3cb",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:954735b0918bccbfba80319849757daac5ed795ba26379fa8831f28a251293ee",
                    "sha256:3d0810f1e4df268339bdd893a8666af85a08616ad9081f577a0c54049b55d796",
                    "sha256:7b616e65ebf965ddc313798b109bfbb9e8d9629cf7243252a455838c5b4622ca",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8b2f650f85eb9017436088d130f701ffbd8055a17d2e33b933d4008fac14a588",
                    "sha256:566e187176993fb5787d0a342bbc05a7ab383eeab0972261003689ce08871f8e",
                    "sha256:ca1b222753e7c38b3d1463a09d876df538b494f8f6cf9f0f2566eefa4f080e63",
                    "sha256:58a8eb27a84244b6d685087475c1631c6f5d5af492079eac853a42f1330e069f"
                ]
            }
        },
        "jammy-build-20230911": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                },
                "OnBuild": null
            },
            "created": "2023-09-11T23:11:30.251378408Z",
            "history": [
                {
                    "created": "2023-08-16T06:19:52.511034945Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:52.678880469Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:52.846527092Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:53.017052303Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:59.127120216Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3fcf00866c55150f1ea0a5ef7b8473c39275c1fdbf6aba0acd84cacb83d0c564 in / "
                },
                {
                    "created": "2023-08-16T06:19:59.851781663Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:46.93114918Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:46.93114918Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:46.93114918Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:18.952261606Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:06:18.916842861Z",
                    "created_by": "RUN /bin/sh -c install_packages \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:06:19.822747165Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:06:19.822747165Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:06:19.822747165Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:06:20.1313966Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:06:20.145175206Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:06:20.159556922Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:06:20.170772691Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:06:20.170772691Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:06:21.7829426Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:06:22.117698827Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T23:11:30.16729001Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-11T23:11:30.16729001Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T23:11:30.251378408Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:61bbeda53374249345217a09cd78040f124ef8bc07a1612a1a186d2468f67d54",
                    "sha256:73eb566cd0436219bfde4ac6950bfa86846113f3c3c13e59f1f7259b9fde4798",
                    "sha256:f4f141ccf9b2ed89c1994bab50acd51e197800b7914b79c9a5766edeb1e6264c",
                    "sha256:2dbf04c5b97d4074854481aee89b30c68ea38d43c1bb545a10af3ed8a760398f",
                    "sha256:c362cf0c7daa3e62fddd2b352472dd935de7482d4f5af2a3e973e8d862b9f3cb",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:954735b0918bccbfba80319849757daac5ed795ba26379fa8831f28a251293ee",
                    "sha256:3d0810f1e4df268339bdd893a8666af85a08616ad9081f577a0c54049b55d796",
                    "sha256:7b616e65ebf965ddc313798b109bfbb9e8d9629cf7243252a455838c5b4622ca",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8b2f650f85eb9017436088d130f701ffbd8055a17d2e33b933d4008fac14a588",
                    "sha256:664b61042036644d1d8f9beab6f73fb200bf0c2ecfde0ceb7d77570df6f89f9f",
                    "sha256:57873a632c9edf9f387dd1f2091281aec19e81c6c0ebb0bb9936a2f925927c4e"
                ]
            }
        },
        "jammy-build-20231026": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                },
                "OnBuild": null
            },
            "created": "2023-11-02T15:44:46.624152344Z",
            "history": [
                {
                    "created": "2023-10-05T07:32:20.951880606Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T07:32:21.015770292Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T07:32:21.080364699Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T07:32:21.153596992Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T07:32:22.639154667Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f8594e26831508c318e42c8dfd9942041031087b8de1bf3fec11fd75b8b30fd4 in / "
                },
                {
                    "created": "2023-10-05T07:32:22.848629339Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:17:46.551397961Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:17:46.551397961Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:17:46.551397961Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:20:55.594585694Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:25:58.788644714Z",
                    "created_by": "RUN /bin/sh -c install_packages \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:25:59.777479211Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:25:59.777479211Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:25:59.777479211Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:25:59.971253403Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:25:59.988656899Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:26:00.016494171Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:26:00.032809249Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:26:00.032809249Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:26:01.945876045Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:26:02.147154564Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:44:46.520721649Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:44:46.520721649Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:44:46.624152344Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d2d3127fc3d362a0516c53fcb8fb983ebb9d1ea2dfbd63b69967a0084f0d45a3",
                    "sha256:d937fd4f39f8d6d8fa66189a698fc34fb90b66da2e15f10fdbfdc7593f42df91",
                    "sha256:956c5c6e99fa84110b6e9d4178d71d4205caa0e6d924acf2c5fcfc1617331b44",
                    "sha256:08907614ebe4533457ae767f5f9d69b84ba18fa61d33df04dedfa8fd08da0734",
                    "sha256:98d6aba74b43f855acb6fda99e2e66f1f9fa09c7026398a0b1b92cdf673bd6a7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:cd46a2751e654ab11312127888271dc039f37345a83cd5d2766a409ce6e91e7e",
                    "sha256:f7a58c7e49b96c5deae6c4ff9a57370c5c659721d934669678da155f971b9257",
                    "sha256:0791cb338c36231e94997723600c7cd2f5898ed5821f945fe2e4a7c49fdde699",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:54c03e0706975ed9ab93c7e2f03371347c3567eb04d8b49e826d98297bfcdf7f",
                    "sha256:bc607c3738429c703efc094230c17d25fa0300f88d4ed9504dd7e0c8dfd2c1e1",
                    "sha256:9dc78aef223df6accf9f8588849c12ae376e9c7715417b460ed3651b15fddf38"
                ]
            },
            "variant": "v8"
        },
        "jammy-build-20231103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                },
                "OnBuild": null
            },
            "created": "2023-11-06T01:05:42.915816504Z",
            "history": [
                {
                    "created": "2023-10-05T07:32:20.951880606Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T07:32:21.015770292Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T07:32:21.080364699Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T07:32:21.153596992Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T07:32:22.639154667Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f8594e26831508c318e42c8dfd9942041031087b8de1bf3fec11fd75b8b30fd4 in / "
                },
                {
                    "created": "2023-10-05T07:32:22.848629339Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:42:33.384072497Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:42:33.384072497Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:42:33.384072497Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:45:43.424768722Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:50:08.72359182Z",
                    "created_by": "RUN /bin/sh -c install_packages \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:50:09.753791442Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:50:09.753791442Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:50:09.753791442Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:50:09.940255924Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:50:09.955143145Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:50:09.967457989Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:50:09.994541746Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:50:09.994541746Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:50:11.967989529Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:50:12.162140239Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T01:05:42.812685206Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T01:05:42.812685206Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T01:05:42.915816504Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d2d3127fc3d362a0516c53fcb8fb983ebb9d1ea2dfbd63b69967a0084f0d45a3",
                    "sha256:e9bb0efa2ab3a789b04db6a56a3353576f1d4d73a064284a19e78c7aa34f8171",
                    "sha256:c56259aad21ea29c93e9984feb17efd26854eecc6db6f8996fbbf8eb4a52467e",
                    "sha256:6f7cecaf6268a288ef4c24bbb2ce8b8c9cd85479c76539b01408a382c6f8b354",
                    "sha256:1c7327879edba47b3ebb9f9ecdb2a6a06152f2c9e07bb9a28772e55f91f5d8ab",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d5b44f8648436428c6f54e2db494e864460a7c29b91f237b1c26fbe21cb32940",
                    "sha256:66bead3ffb9e57fda29d4fb62915d7a399f87a6ac18a5124ad442bc12a8c9d8e",
                    "sha256:2a2a006abd37372972386762c4f6bdea57f432f082034c35915b0ecaf258b1e2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a043e97a8c734a925e82774007a25ec52d6322ab7bb8f1dec91f22d619298e74",
                    "sha256:500d818f46ca8caa29c1d94d05dc2d32c9815557e47854b57767f3795e443bd0",
                    "sha256:729de28c17006255f2bacfda9f8d489900dc5c73e715fad70fb31473088ef455"
                ]
            },
            "variant": "v8"
        },
        "jammy-build-20240103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                },
                "OnBuild": null
            },
            "created": "2024-01-05T12:02:51.7579565Z",
            "history": [
                {
                    "created": "2023-12-12T11:41:50.758603714Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:41:50.869361588Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:41:50.981745008Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:41:51.093819154Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:41:54.146264118Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50f947da69b3b6c63695be9c49eee16f7a7dcdecdceb51e5bee1609b845bf483 in / "
                },
                {
                    "created": "2023-12-12T11:41:54.521050543Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:44:23.80523853Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:44:23.80523853Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:44:23.80523853Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:16.530288342Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:49:07.69993695Z",
                    "created_by": "RUN /bin/sh -c install_packages \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:49:08.361719057Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:49:08.361719057Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:49:08.361719057Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:49:08.482600668Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:49:08.493958094Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:49:08.522342035Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:49:08.582371017Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:49:08.582371017Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:49:09.697772738Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:49:09.826156112Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T12:02:51.666798047Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T12:02:51.666798047Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T12:02:51.7579565Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3e798a66607c97d027570dbbc112c32956981fbcc244bb2d4d1fddbce4cda84c",
                    "sha256:c1e86ee534e30a9e0ad856246a626e5fa9539cafc86144a8c4573248b88181b2",
                    "sha256:b2eeb0d1f805de23711eb1c6ca37601cebdf84cace0dd3b0c38d1d3959051724",
                    "sha256:8cd990ff3b8e3ec7a8d0d86c40c52e5a05ffaa301beae01843ba1a552c3571a4",
                    "sha256:8f0cf1a5608e0fa478b064528ee9648f6bcad1ef3c4aae2364aa74b12a12e921",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5bec2384b45ead647d90486f3702d429f17ed62117311a5e48822d154204f417",
                    "sha256:bcdbb997ad2dce37f5087ddfacc3e73a500f9055bc61d3453f7702668daf7f54",
                    "sha256:a1356bb6786e6600d4fea415a8c0173073a54657073ec726aabe102d65e62e6f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ffbc6a139b9a719e9432e8e5fbdc025c02dc25e929bbd03a4bab325340679796",
                    "sha256:8236f69dc61480f05539b3cf1af103783f99ce656bf7ba203375214c3820cb2e",
                    "sha256:3b44b9ce9ac539ef1b1b77d8c56086c7dbd556b58a3cb946cc619abbd4487199"
                ]
            },
            "variant": "v8"
        },
        "jammy-build-20240105": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                },
                "OnBuild": null
            },
            "created": "2024-01-06T07:55:38.874965676Z",
            "history": [
                {
                    "created": "2023-12-12T11:41:50.758603714Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:41:50.869361588Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:41:50.981745008Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:41:51.093819154Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:41:54.146264118Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50f947da69b3b6c63695be9c49eee16f7a7dcdecdceb51e5bee1609b845bf483 in / "
                },
                {
                    "created": "2023-12-12T11:41:54.521050543Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:37:52.813781715Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:37:52.813781715Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:37:52.813781715Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:43.993820601Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:42:31.232186017Z",
                    "created_by": "RUN /bin/sh -c install_packages \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:42:31.882663014Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:42:31.882663014Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:42:31.882663014Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:42:31.989683312Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:42:31.998924165Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:42:32.026512553Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:42:32.034924287Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:42:32.034924287Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:42:33.142090623Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:42:33.256212935Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:55:38.787847215Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:55:38.787847215Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:55:38.874965676Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3e798a66607c97d027570dbbc112c32956981fbcc244bb2d4d1fddbce4cda84c",
                    "sha256:06f199958bd4bf23fdd093651f2fded886cfd510f924b035e3778a6b3ced8d02",
                    "sha256:9dda24e904d2b3c9e54055d245b52abe928c1db24ce767f0f6ddfebac46bbfc7",
                    "sha256:fa335fe17616bfac8d811e0fe819ead0db30b2b7e26791b16307fbfec406279e",
                    "sha256:b79c64de067344d7d96cf6c7afac2c3ae92487269248f3aadce485e1753f8933",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:69f9e2c95c5be2e22f57abba46e80551b15f85c6e7cbcadc2e90e5f88142626e",
                    "sha256:3aacc0a96ceeff43c753b9b8bea3a4fa81c486152d5c57d583090173b2dc7da8",
                    "sha256:d2db4c66f99cb8e6091a9f357f0349c80120b5da28e4c89b345c58a0b8108b17",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:71679a21859486e78c2d1e5d4afa6975f590caf738374e7873daef93216425c4",
                    "sha256:dfa3eb293f1f62e0817a970ccd3e88c21f6a242ca5109684131684e753f6fa95",
                    "sha256:9d039f1d6b2ce317955a547cd93bc08136d3d24be72c2157557a301c9117b314"
                ]
            },
            "variant": "v8"
        },
        "jammy-build-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                }
            },
            "created": "2024-04-06T13:38:47.024937223Z",
            "history": [
                {
                    "created": "2024-02-27T18:53:22.490310908Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T18:53:22.539283006Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T18:53:22.59951827Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T18:53:22.648922452Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T18:53:25.140932403Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:07cdbabf782942af04487c9da03de50a611a51e69d8bac1f593acb73a3ba3a46 in / "
                },
                {
                    "created": "2024-02-27T18:53:25.397886996Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:20:51.393191159Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:20:51.393191159Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:20:51.393191159Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:47.797239004Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:25:38.577235073Z",
                    "created_by": "RUN /bin/sh -c install_packages \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:25:39.213053342Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:25:39.213053342Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:25:39.213053342Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:25:39.331592868Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:25:39.340661154Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:25:39.403893277Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:25:39.412744453Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:25:39.412744453Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:25:40.306296791Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:25:40.420279392Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:38:46.922625924Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:38:46.922625924Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:38:47.024937223Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a510ae0f066c65d73f523d5821fe048a6858e53360ecb8d39b7b931162f11479",
                    "sha256:ec185f876921da799d9608c39de6b845f6c7eb86ab6ec6e520bb6a95c1d6ee4c",
                    "sha256:4ab72ba8653a058f5a9589625d7cf003daa11429046529f6f6792008be9f5479",
                    "sha256:3d3bde061fb1e7a1f080f45dd9eedda19852971dbd17189048f7d723c04dbd3b",
                    "sha256:d5ea2f5da88703e48a630a5ab16972391cc6a89e0615988386f7dcfefdd9c716",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2c98ebe3e32d69f8d99bfb1fe11b8a94f83f7287dc3e71d6f802609aa9b62e7f",
                    "sha256:734aae1dfed6515c3c602b991e94df2dbec51ed0849f9e42eacb14a9958c6949",
                    "sha256:a6e60c30838dd19c92f090cc6ea05ea28051ca64071db90fcd4541d3a97f84bc",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:6d4bd7401dae4c4f490f9cbf9552fdc09f76bb996ba6d1a03fe2f0624e3cfaf3",
                    "sha256:ac0709f98a9d5b2f6a774ea5d79d4f558cec9d4147cca9eb0127b8d9b0544edd",
                    "sha256:0fdfc5fd60545f3dc30d718ab31a56bacc2f058f2b613a2f61299c4123c69692"
                ]
            },
            "variant": "v8"
        },
        "jammy-build-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                }
            },
            "created": "2024-04-09T18:52:50.273135599Z",
            "history": [
                {
                    "created": "2024-02-27T18:53:22.490310908Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T18:53:22.539283006Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T18:53:22.59951827Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T18:53:22.648922452Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T18:53:25.140932403Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:07cdbabf782942af04487c9da03de50a611a51e69d8bac1f593acb73a3ba3a46 in / "
                },
                {
                    "created": "2024-02-27T18:53:25.397886996Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:51.407413005Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:51.407413005Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:51.407413005Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:47.450905518Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:57.13494818Z",
                    "created_by": "RUN /bin/sh -c install_packages \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:58.601001321Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:58.601001321Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:39:58.601001321Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:39:58.710795143Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:58.721447105Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:58.730824015Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:58.740399134Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:58.740399134Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:39:59.637994019Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:59.774665814Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T18:52:50.176104355Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T18:52:50.176104355Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T18:52:50.273135599Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a510ae0f066c65d73f523d5821fe048a6858e53360ecb8d39b7b931162f11479",
                    "sha256:76f2671633393717d6786e355ff86136cdb8202fe1b8036aa7c25ad53137d784",
                    "sha256:deba24ccaf880416c44e3db98896b13bd8a207c85f246320ba4d360e19a5b185",
                    "sha256:79f554e61b8a7b19026d9a33f174405f3bbf55539959d2f4a2ebb028eaa7e42b",
                    "sha256:bdefd7c646d02f1e1fd35152f4fc0bcfbd50599a9c1c0b61b47d07828145c978",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a93bbeaaa69ce1acb3e03eaf4e13382e9fe5dd1098e72c1fc2e9e4c795f52301",
                    "sha256:a9888dd2f5c877653f07882b6fb111c0c2d7133b76e4c3473f3fda599e8a6ecd",
                    "sha256:28161e217913d7e2429ea6f26f8f0d7640a6373fc424d0c23b3c0912d4d19d12",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b6c04fdfc177fe957618bd1a895e83b2bfa0d4670b4fc47fd4f0661a206d17a4",
                    "sha256:5937493d2010ba584e964561216f20727176a7716f18e1e6ddea9311cb42805d",
                    "sha256:785b2a30f156564e2eba3a92df9cf04d81857589b5a4ea758d34004b17c58fc0"
                ]
            },
            "variant": "v8"
        },
        "jammy-build-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                }
            },
            "created": "2024-05-02T02:40:03.973438666Z",
            "history": [
                {
                    "created": "2024-04-27T14:32:22.643440355Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:32:22.768221855Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:32:22.922781285Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:32:23.070247637Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:32:33.475488206Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:18035d0a8c59e3306bad4219c71a52b03397fc8f231baf7f676287c73024d85c in / "
                },
                {
                    "created": "2024-04-27T14:32:33.989941961Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:11.45435502Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:11.45435502Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:11.45435502Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:32.219701867Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:28:20.556751422Z",
                    "created_by": "RUN /bin/sh -c install_packages \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:28:21.170108759Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:28:21.170108759Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:28:21.170108759Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:28:21.288842708Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:28:21.299317535Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:28:21.308861982Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:28:21.35408794Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:28:21.35408794Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:28:22.274748769Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:28:22.395535238Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:40:03.8848073Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:40:03.8848073Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:40:03.973438666Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:842bef16b8fb80459504b4621523ac3d78faf7e01d6d9fa7076ed6d4a8f49830",
                    "sha256:5f36a177078485a2d99a5ab825ad3673c88cf3c33aa985e4c71ff4407e8745c3",
                    "sha256:59e8c92f5618d3c40623d0b51147a9fa34173826f787ee4b5b3d3f941c810758",
                    "sha256:8c077cab623f02bd821f5daf97abcbaf2eec47d7cba5e3bdac606a28cf3864cf",
                    "sha256:3617838ef85e313ca7428cf601a6352bf9c9b30a94ea687c8db63c883ab64b58",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b71bb935752deacef677163932ef67131e6130d319f31ac680c7719de4c9a92b",
                    "sha256:6c964c391bd1f7c4eebe899d34623958a4b54135b55dfb05367a8ae8a765bfb8",
                    "sha256:d4181efba17b04bbbd6411558f7fa24d4dbc59a105ede3adb6bddb8b46a5aedf",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:4add95593e9ba7737e2464bf1def73e4d27227b1eee6cf1934b5f73fc2e3fd85",
                    "sha256:efe8a8d81bf0084babf2f5ad813420c49efaf92339ff6278270d1020e68c32e7",
                    "sha256:8db20f21d5b24210d3f8c21332e8eb550f788db6e973bc0e1744e0c8b271cf6d"
                ]
            },
            "variant": "v8"
        },
        "jammy-run": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                }
            },
            "created": "2024-05-02T02:40:02.09133632Z",
            "history": [
                {
                    "created": "2024-04-27T14:32:22.643440355Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:32:22.768221855Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:32:22.922781285Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:32:23.070247637Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:32:33.475488206Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:18035d0a8c59e3306bad4219c71a52b03397fc8f231baf7f676287c73024d85c in / "
                },
                {
                    "created": "2024-04-27T14:32:33.989941961Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:18.216101982Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:18.216101982Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:18.216101982Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:21.912464985Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:22.625610903Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:22.625610903Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:24:22.625610903Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:24:22.739350403Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:22.750532225Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:22.759557887Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:22.792378776Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:22.792378776Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:24:23.712437353Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:23.834897531Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:40:01.977748969Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:40:01.977748969Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:40:02.09133632Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:842bef16b8fb80459504b4621523ac3d78faf7e01d6d9fa7076ed6d4a8f49830",
                    "sha256:0640e720188f6528f7c748e336f11a09d9d00729e4c36eb2bbe129f8a763d070",
                    "sha256:da00f81eef79ae72a2a6e39658ba370fdc81df4c094e54e6a589f711e7c05f0d",
                    "sha256:16497e63f0b712dabe742045e338b44077718e77481804d3a7724223446a164b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:aabd4e14de0df6a5f9f1a6579c3040ed27fca9cd89f3657928a4b239e2e86e75",
                    "sha256:5f6d921eddb8660b20b548ace680919f1b42147cf88460f36aa40005e1aa336a",
                    "sha256:c56d8196358aa702245257319ec5bdcbf5176851d7fef2e97a20cd495170743e",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3817267cec6b73a0e47e08025ef532290d5f261f3fbf1a42ed49176789c09b27",
                    "sha256:070b1a3316674d91b65504d1eb226dfd4fd381c8bb452d8dd49156030aa90fc2",
                    "sha256:85e6e6342cb0f9b27b344a63573bdaad71104c22aa6f59ee24fb6af673be4617"
                ]
            },
            "variant": "v8"
        },
        "jammy-run-20230829": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                },
                "OnBuild": null
            },
            "created": "2023-09-02T04:38:26.679554608Z",
            "history": [
                {
                    "created": "2023-08-16T06:19:52.511034945Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:52.678880469Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:52.846527092Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:53.017052303Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:59.127120216Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3fcf00866c55150f1ea0a5ef7b8473c39275c1fdbf6aba0acd84cacb83d0c564 in / "
                },
                {
                    "created": "2023-08-16T06:19:59.851781663Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:00:23.873526242Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:00:23.873526242Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:00:23.873526242Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:02:54.845294161Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:02:55.74234964Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:02:55.74234964Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:02:55.74234964Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:02:56.156853799Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:02:56.172046311Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:02:56.180539674Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:02:56.187494225Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:02:56.187494225Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:02:57.826653521Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:02:58.213618576Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:37:36.551201041Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:37:36.551201041Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r32.7 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t186 r32.7 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:38:26.47007244Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:38:26.679554608Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:61bbeda53374249345217a09cd78040f124ef8bc07a1612a1a186d2468f67d54",
                    "sha256:92270994fafef678580dc83e4325fa2f4ae8f3223934c22243dfe7309162be07",
                    "sha256:88be2f314b58b7c97d88f89fe1a9d2589c6951703c29dbcdee1370a38fb0eb73",
                    "sha256:4cd26e8abc8ea4578f5fd18bd7c88e1752f63a6ba2b47a2748829da6533c515e",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:dd4425b585e6ef6909b4e401069d605f63794d541cdb42bb06807d560388e5d1",
                    "sha256:ab02b38642445743fcea5363e3e2e2c152645db64fb26bf7b56d0b4b2662547f",
                    "sha256:b5bde6de6d78cc309610ed44aff8af02dc24903bd4636c9abb2e4615858e8d24",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ac15c28c9f71649b95fa1383d44e822cc7424b12c2f75d369058eb9a421a26fb",
                    "sha256:840e79a410397ef2c89aa6bbc0d269397467a0ccac93eaae377dc5f1ac017576",
                    "sha256:4753bcd57f51dfa0de52a8f29ebd5cd26d197100d81e81d34eee7f20da928c43",
                    "sha256:72eb1b1b4477f23b490cf4fb49b82965605ee90bed7b3580b38d5356823e6b78"
                ]
            }
        },
        "jammy-run-20230904": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                },
                "OnBuild": null
            },
            "created": "2023-09-09T04:35:32.847209484Z",
            "history": [
                {
                    "created": "2023-08-16T06:19:52.511034945Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:52.678880469Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:52.846527092Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:53.017052303Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:59.127120216Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3fcf00866c55150f1ea0a5ef7b8473c39275c1fdbf6aba0acd84cacb83d0c564 in / "
                },
                {
                    "created": "2023-08-16T06:19:59.851781663Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:46.93114918Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:46.93114918Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:46.93114918Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:18.952261606Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:19.761223709Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:19.761223709Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:02:19.761223709Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:02:20.194221163Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:20.21180478Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:20.222393011Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:20.247807525Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:20.247807525Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:02:21.899364646Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:22.17951671Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:34:39.875937997Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:34:39.875937997Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r32.7 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t186 r32.7 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:35:32.515089708Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:35:32.847209484Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:61bbeda53374249345217a09cd78040f124ef8bc07a1612a1a186d2468f67d54",
                    "sha256:73eb566cd0436219bfde4ac6950bfa86846113f3c3c13e59f1f7259b9fde4798",
                    "sha256:f4f141ccf9b2ed89c1994bab50acd51e197800b7914b79c9a5766edeb1e6264c",
                    "sha256:b8f42e3e6876f69f9fd6f1b2655f542d668078b48b309426774345ff5b2fa1fd",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:65a6d302256cb6db51bbd0d59145a3c145a08912581711a4b8c50fee03ee7954",
                    "sha256:aa50ec027cafedf6cfa9d5b7b797297902c54bc818224ffc5ad46c700b1f1a18",
                    "sha256:118f8ef44e94351e31e425e81210209b5d911b92a8a47eb5f456d1de5097e136",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ebee8221a712caf18485002c7e6312a65efa63454430c6e40be097c2da96770d",
                    "sha256:700852db6c013bb086661c8fac7220c7c879c0a4b5fa4221568ef8804dd5bd3f",
                    "sha256:3ab1eee539c0fc9b8c74d9ef9d398b94eb84fb663984b00a662bf0f0013d2a44",
                    "sha256:66af3d0aa2bad03237d458b7e588803cb2e3b22d46eb305fdeeb02a553899fd9"
                ]
            }
        },
        "jammy-run-20230911": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                },
                "OnBuild": null
            },
            "created": "2023-09-11T23:11:29.355189118Z",
            "history": [
                {
                    "created": "2023-08-16T06:19:52.511034945Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:52.678880469Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:52.846527092Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:53.017052303Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:59.127120216Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3fcf00866c55150f1ea0a5ef7b8473c39275c1fdbf6aba0acd84cacb83d0c564 in / "
                },
                {
                    "created": "2023-08-16T06:19:59.851781663Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:46.93114918Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:46.93114918Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:46.93114918Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:18.952261606Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:19.761223709Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:19.761223709Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:02:19.761223709Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:02:20.194221163Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:20.21180478Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:20.222393011Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:20.247807525Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:20.247807525Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:02:21.899364646Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:22.17951671Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T23:11:29.250286Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-11T23:11:29.250286Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T23:11:29.355189118Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:61bbeda53374249345217a09cd78040f124ef8bc07a1612a1a186d2468f67d54",
                    "sha256:73eb566cd0436219bfde4ac6950bfa86846113f3c3c13e59f1f7259b9fde4798",
                    "sha256:f4f141ccf9b2ed89c1994bab50acd51e197800b7914b79c9a5766edeb1e6264c",
                    "sha256:b8f42e3e6876f69f9fd6f1b2655f542d668078b48b309426774345ff5b2fa1fd",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:65a6d302256cb6db51bbd0d59145a3c145a08912581711a4b8c50fee03ee7954",
                    "sha256:aa50ec027cafedf6cfa9d5b7b797297902c54bc818224ffc5ad46c700b1f1a18",
                    "sha256:118f8ef44e94351e31e425e81210209b5d911b92a8a47eb5f456d1de5097e136",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ebee8221a712caf18485002c7e6312a65efa63454430c6e40be097c2da96770d",
                    "sha256:e4277096ad7051f93b36723b91a5664995e4910f530500f85dc819be543be5a5",
                    "sha256:ed2c4d9a482f2a4ac9b8a365762d1ac090db181531b17d3f53835a96a71b83be"
                ]
            }
        },
        "jammy-run-20231026": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                },
                "OnBuild": null
            },
            "created": "2023-11-02T15:45:01.662929295Z",
            "history": [
                {
                    "created": "2023-10-05T07:32:20.951880606Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T07:32:21.015770292Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T07:32:21.080364699Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T07:32:21.153596992Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T07:32:22.639154667Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f8594e26831508c318e42c8dfd9942041031087b8de1bf3fec11fd75b8b30fd4 in / "
                },
                {
                    "created": "2023-10-05T07:32:22.848629339Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:17:36.98530637Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:17:36.98530637Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:17:36.98530637Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:19:30.038036758Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:19:30.590211839Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:19:30.590211839Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:19:30.590211839Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:19:30.727463187Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:19:30.737278712Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:19:30.746163163Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:19:30.755855653Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:19:30.755855653Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:19:31.864611691Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:19:31.989038864Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:45:01.512720457Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:45:01.512720457Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:45:01.662929295Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d2d3127fc3d362a0516c53fcb8fb983ebb9d1ea2dfbd63b69967a0084f0d45a3",
                    "sha256:c243b6ba49361914e3fe9a5b150d45bb20ad99e1ee88a0b770b7d4f9f72379a9",
                    "sha256:78a2eaa1c40786ba98d4ddac8dda4a7fe3fa8784ec9d199c07bd4e06dd347b1b",
                    "sha256:abe9e87e67a428d547cfd1863fd6138073f87abb61f909e5dc88d063f811aa64",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8613ffa14109f531902ca2af59ffd55b23ce83905ee8fa46273b23cebc081816",
                    "sha256:cbf495cb182bd008ae474b08be37c1d8dc1758e42bd6ac3132f5431193c4f960",
                    "sha256:3d8d8f656c49302ea76def530da05ad3de05e09b6750296a55f8452569fa332b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1545d6d669cd3e2c6f9e758aae9bbafb3ce5d769394bde3fa61b4ee7787e7fbe",
                    "sha256:fde2d01656b6e0a7be7e899d237c95269da9697e5e1c90e061d39682c0a309d4",
                    "sha256:0203de8b3984581bfcd33b7b6c71182d8f93752a50dffc033a0c016d02dd3cc8"
                ]
            },
            "variant": "v8"
        },
        "jammy-run-20231103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                },
                "OnBuild": null
            },
            "created": "2023-11-06T01:05:40.231993362Z",
            "history": [
                {
                    "created": "2023-10-05T07:32:20.951880606Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T07:32:21.015770292Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T07:32:21.080364699Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T07:32:21.153596992Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T07:32:22.639154667Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f8594e26831508c318e42c8dfd9942041031087b8de1bf3fec11fd75b8b30fd4 in / "
                },
                {
                    "created": "2023-10-05T07:32:22.848629339Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:42:26.099059735Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:42:26.099059735Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:42:26.099059735Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:45:34.259078886Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:45:35.342603498Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:45:35.342603498Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:45:35.342603498Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:45:35.54098196Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:45:35.568397242Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:45:35.588929428Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:45:35.606804938Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:45:35.606804938Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:45:37.38438037Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:45:37.560859106Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T01:05:40.127404642Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T01:05:40.127404642Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T01:05:40.231993362Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d2d3127fc3d362a0516c53fcb8fb983ebb9d1ea2dfbd63b69967a0084f0d45a3",
                    "sha256:10d443a89e642fe0b654249aeaf8bab4bcaaff359469729746bcf8c3241a97a9",
                    "sha256:f12d1c92fcdedc951a85ecbdc9d891651c9b03345450ff58f4f6ed3d1e875529",
                    "sha256:32a3d52ec67454977739f6e7a73f3e5c5986448701054fc6c5fa301b3506febb",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5404be9f26b2de792e3a835a087e9fc32d210318c0cac541ec39560fbc37fa09",
                    "sha256:62cc72e6e0b17dc250f4fb916acec294669629b1bb227e42d4898bc3f1ceb65f",
                    "sha256:3b39c17b1c6d3d260b788455c8c91a74d07191d21680dc48ff42f49ced28ac0b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:15af4a4eddbf67d577754196c8e9c1b01d0ff122deb12c53608acde408929328",
                    "sha256:c7c9a0a8349b22dd0f136ea938ee49bd0f4051f5ea066b96afdbe914efc5de99",
                    "sha256:0ae0d71f7f9017192df1dea1f564518812b189f9dd845329ddc90f269d3c90f4"
                ]
            },
            "variant": "v8"
        },
        "jammy-run-20240103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                },
                "OnBuild": null
            },
            "created": "2024-01-05T12:02:53.118433161Z",
            "history": [
                {
                    "created": "2023-12-12T11:41:50.758603714Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:41:50.869361588Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:41:50.981745008Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:41:51.093819154Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:41:54.146264118Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50f947da69b3b6c63695be9c49eee16f7a7dcdecdceb51e5bee1609b845bf483 in / "
                },
                {
                    "created": "2023-12-12T11:41:54.521050543Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:44:32.928365316Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:44:32.928365316Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:44:32.928365316Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:31.817746676Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:32.78934311Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:32.78934311Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:46:32.78934311Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:46:32.932763963Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:32.98071649Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:32.991085243Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:33.000875247Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:33.000875247Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:46:34.094944699Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:34.213393498Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T12:02:53.012607201Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T12:02:53.012607201Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T12:02:53.118433161Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3e798a66607c97d027570dbbc112c32956981fbcc244bb2d4d1fddbce4cda84c",
                    "sha256:2e80ca486da4411dd0fec1cb0259ef173c62232fbbe60840b5545c69c0fb586f",
                    "sha256:acf9093499d05e7ea73879d4c847e171497cb3bf2cb28024c73387b604202842",
                    "sha256:ad39e05fd4bbe30d5a56af6ff638c51ab486a6d35bd68a230cb50ea30744dfb3",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:308d9a7b689b399750c10022e08a49643987885d64d68a3d172159361029b865",
                    "sha256:c91850d3827f25311e2ab8770645f4d7353e5b945060f7d9eb64b5e37e47cdb3",
                    "sha256:8fbef8bff8fa00578568f3fc095176b16bfef7cc768a375bf314e031ef82eb57",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f2cfb4098741be87d1c2f5a4af897292332eac7285b71af5e2e68f83c10d547f",
                    "sha256:a846361021ce8a43ef1823d57a8d92eef1bf740934c97c3d27a11548a2965415",
                    "sha256:2a0434d0a39a5006671e7d244fef0ca84743f03dea0adc607e6f3c8a73cd8398"
                ]
            },
            "variant": "v8"
        },
        "jammy-run-20240105": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                },
                "OnBuild": null
            },
            "created": "2024-01-06T07:55:35.98119432Z",
            "history": [
                {
                    "created": "2023-12-12T11:41:50.758603714Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:41:50.869361588Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:41:50.981745008Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:41:51.093819154Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:41:54.146264118Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50f947da69b3b6c63695be9c49eee16f7a7dcdecdceb51e5bee1609b845bf483 in / "
                },
                {
                    "created": "2023-12-12T11:41:54.521050543Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:37:52.719890317Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:37:52.719890317Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:37:52.719890317Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:44.68383672Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:45.24617781Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:45.24617781Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:39:45.24617781Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:39:45.393470696Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:45.445245009Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:45.454514748Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:45.464356521Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:45.464356521Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:39:46.694653805Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:46.80732869Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:55:35.876752162Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:55:35.876752162Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:55:35.98119432Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3e798a66607c97d027570dbbc112c32956981fbcc244bb2d4d1fddbce4cda84c",
                    "sha256:06f199958bd4bf23fdd093651f2fded886cfd510f924b035e3778a6b3ced8d02",
                    "sha256:c98bc4703039eb0431773191cecc6af09b53b8f99ee046ba4dfd112763f7de42",
                    "sha256:d64970f18b174ccdc31d58582f24b0401663e973e81699d978e77a6a3dd90f19",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ac14ba889ceb708b209faf5e1feb12af78c8d094462a61fc691d0b0aac610e64",
                    "sha256:7ea7282951c60a62d47abc4a180fc3fdc8e85b96fa9ce9ccf26e086a9d9fed23",
                    "sha256:9bc1e596ac05cea9597de16d9d793a37966b4da0b57b9306cb6f4eab4da3dbc0",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:615998ebaa076cb1f7ed838a1a6164c074b4979e566706ca6d5862ce6b727c33",
                    "sha256:6f884b55abc68468e2c919dd9c19eb298af72bbdec42c9477ad6d34cf2824ae8",
                    "sha256:f7c671bf97f1df35894ae6f6fe4f8833ee513bd4db9385792a76fcd1ace2afbe"
                ]
            },
            "variant": "v8"
        },
        "jammy-run-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                }
            },
            "created": "2024-04-06T13:38:44.879767741Z",
            "history": [
                {
                    "created": "2024-02-27T18:53:22.490310908Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T18:53:22.539283006Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T18:53:22.59951827Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T18:53:22.648922452Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T18:53:25.140932403Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:07cdbabf782942af04487c9da03de50a611a51e69d8bac1f593acb73a3ba3a46 in / "
                },
                {
                    "created": "2024-02-27T18:53:25.397886996Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:20:52.447123568Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:20:52.447123568Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:20:52.447123568Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:46.136639138Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:46.672812142Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:46.672812142Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:22:46.672812142Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:22:46.789043867Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:46.801794101Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:46.837911774Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:46.848970589Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:46.848970589Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:22:47.737012242Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:47.874181626Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:38:44.767427419Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:38:44.767427419Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:38:44.879767741Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a510ae0f066c65d73f523d5821fe048a6858e53360ecb8d39b7b931162f11479",
                    "sha256:43c1435efbd6a805475b6a69ed2afea4421be979091a971f530b219a1ce24cd9",
                    "sha256:e37f3ca660bcc311e960bcea5d2c9df82900567c09cd643d5f1d4daa39c810e7",
                    "sha256:3839ee8dd9a6dc7cbb4afc83940c3b88151d70ba57d3886ee1296b5db7da0ae7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:77504a1f2690cadb7b6b7aae94be4d28f9f58dcf3c8c6c7bee7b23c0c30e7582",
                    "sha256:9459da29ee9ac2f7e12d595eafca0d2d1f0637d68f6b071fe101f1b64b632585",
                    "sha256:cb0901504bd0e19c9232086b08b0e4835bc7c8a76691405b1dc830adee2ed6d5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:18821c7845f9f0aa9381d55d092efcc647571f926ba8e8198fe6a5ac352260df",
                    "sha256:f9ecea3f3853e467055455b994bf74116f94d38d7b5fbabaa0536a94e146bb4e",
                    "sha256:50db4c8cdcf855056432aecf4ccdf80bc0e15409dbdbad6098f7e3c02466e307"
                ]
            },
            "variant": "v8"
        },
        "jammy-run-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                }
            },
            "created": "2024-04-09T18:52:59.102361258Z",
            "history": [
                {
                    "created": "2024-02-27T18:53:22.490310908Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T18:53:22.539283006Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T18:53:22.59951827Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T18:53:22.648922452Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T18:53:25.140932403Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:07cdbabf782942af04487c9da03de50a611a51e69d8bac1f593acb73a3ba3a46 in / "
                },
                {
                    "created": "2024-02-27T18:53:25.397886996Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:47.461373506Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:47.461373506Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:47.461373506Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:43.100120348Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:43.649843389Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:43.649843389Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:43.649843389Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:43.766584201Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:43.776851848Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:43.785956822Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:43.795637979Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:43.795637979Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:44.705220102Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:44.823651141Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T18:52:58.997668861Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T18:52:58.997668861Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T18:52:59.102361258Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a510ae0f066c65d73f523d5821fe048a6858e53360ecb8d39b7b931162f11479",
                    "sha256:755a5181e5cf3dc59d0d45df350e621f8f70fba87a9e128453149fdde7d6ec13",
                    "sha256:bc3eb4fdfc82ec2711ae80e36e01fcf5f44d6be01e59e0101cdf79da46b187a5",
                    "sha256:02854098a3656cb8daac9692ef973e560528ede1eb6752702f15dec8702afba2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a70167e146c331d507a4700240a8dad7047ffbda396a3d152fb55b91ec179808",
                    "sha256:9c02956fcc7d415d1f3bd2340c6905be7b40a107e3852ced3bf12842ccd8c502",
                    "sha256:15cacaf774edf7d6221e2d6014bb5ac3604f5912c908450cd10bd6324cfba332",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f7bd9f5560827cd12577ee9ed4e229cedcd48ed2e4d45a53df473eb210efde01",
                    "sha256:5a88d24cf58ed32b1cb1ee0fd6f16414ca862e09411f7bf6038ffd08be255508",
                    "sha256:9436603e67f8ef0a8cf6af8fd08185ff7696ff4b8b70f4425f9c1066d459603a"
                ]
            },
            "variant": "v8"
        },
        "jammy-run-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                }
            },
            "created": "2024-05-02T02:40:02.09133632Z",
            "history": [
                {
                    "created": "2024-04-27T14:32:22.643440355Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:32:22.768221855Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:32:22.922781285Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:32:23.070247637Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:32:33.475488206Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:18035d0a8c59e3306bad4219c71a52b03397fc8f231baf7f676287c73024d85c in / "
                },
                {
                    "created": "2024-04-27T14:32:33.989941961Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:18.216101982Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:18.216101982Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:18.216101982Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:21.912464985Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:22.625610903Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:22.625610903Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:24:22.625610903Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:24:22.739350403Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:22.750532225Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:22.759557887Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:22.792378776Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:22.792378776Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:24:23.712437353Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:23.834897531Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:40:01.977748969Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:40:01.977748969Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:40:02.09133632Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:842bef16b8fb80459504b4621523ac3d78faf7e01d6d9fa7076ed6d4a8f49830",
                    "sha256:0640e720188f6528f7c748e336f11a09d9d00729e4c36eb2bbe129f8a763d070",
                    "sha256:da00f81eef79ae72a2a6e39658ba370fdc81df4c094e54e6a589f711e7c05f0d",
                    "sha256:16497e63f0b712dabe742045e338b44077718e77481804d3a7724223446a164b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:aabd4e14de0df6a5f9f1a6579c3040ed27fca9cd89f3657928a4b239e2e86e75",
                    "sha256:5f6d921eddb8660b20b548ace680919f1b42147cf88460f36aa40005e1aa336a",
                    "sha256:c56d8196358aa702245257319ec5bdcbf5176851d7fef2e97a20cd495170743e",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3817267cec6b73a0e47e08025ef532290d5f261f3fbf1a42ed49176789c09b27",
                    "sha256:070b1a3316674d91b65504d1eb226dfd4fd381c8bb452d8dd49156030aa90fc2",
                    "sha256:85e6e6342cb0f9b27b344a63573bdaad71104c22aa6f59ee24fb6af673be4617"
                ]
            },
            "variant": "v8"
        },
        "latest": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                }
            },
            "created": "2024-05-02T02:40:02.09133632Z",
            "history": [
                {
                    "created": "2024-04-27T14:32:22.643440355Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:32:22.768221855Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:32:22.922781285Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:32:23.070247637Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:32:33.475488206Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:18035d0a8c59e3306bad4219c71a52b03397fc8f231baf7f676287c73024d85c in / "
                },
                {
                    "created": "2024-04-27T14:32:33.989941961Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:18.216101982Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:18.216101982Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:18.216101982Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:21.912464985Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:22.625610903Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:22.625610903Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:24:22.625610903Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:24:22.739350403Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:22.750532225Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:22.759557887Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:22.792378776Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:22.792378776Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:24:23.712437353Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:23.834897531Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:40:01.977748969Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:40:01.977748969Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:40:02.09133632Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:842bef16b8fb80459504b4621523ac3d78faf7e01d6d9fa7076ed6d4a8f49830",
                    "sha256:0640e720188f6528f7c748e336f11a09d9d00729e4c36eb2bbe129f8a763d070",
                    "sha256:da00f81eef79ae72a2a6e39658ba370fdc81df4c094e54e6a589f711e7c05f0d",
                    "sha256:16497e63f0b712dabe742045e338b44077718e77481804d3a7724223446a164b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:aabd4e14de0df6a5f9f1a6579c3040ed27fca9cd89f3657928a4b239e2e86e75",
                    "sha256:5f6d921eddb8660b20b548ace680919f1b42147cf88460f36aa40005e1aa336a",
                    "sha256:c56d8196358aa702245257319ec5bdcbf5176851d7fef2e97a20cd495170743e",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3817267cec6b73a0e47e08025ef532290d5f261f3fbf1a42ed49176789c09b27",
                    "sha256:070b1a3316674d91b65504d1eb226dfd4fd381c8bb452d8dd49156030aa90fc2",
                    "sha256:85e6e6342cb0f9b27b344a63573bdaad71104c22aa6f59ee24fb6af673be4617"
                ]
            },
            "variant": "v8"
        },
        "latest-20230829": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                },
                "OnBuild": null
            },
            "created": "2023-09-02T04:38:26.679554608Z",
            "history": [
                {
                    "created": "2023-08-16T06:19:52.511034945Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:52.678880469Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:52.846527092Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:53.017052303Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:59.127120216Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3fcf00866c55150f1ea0a5ef7b8473c39275c1fdbf6aba0acd84cacb83d0c564 in / "
                },
                {
                    "created": "2023-08-16T06:19:59.851781663Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:00:23.873526242Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:00:23.873526242Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:00:23.873526242Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:02:54.845294161Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:02:55.74234964Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:02:55.74234964Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:02:55.74234964Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:02:56.156853799Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:02:56.172046311Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:02:56.180539674Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:02:56.187494225Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:02:56.187494225Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:02:57.826653521Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:02:58.213618576Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:37:36.551201041Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:37:36.551201041Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r32.7 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t186 r32.7 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:38:26.47007244Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:38:26.679554608Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:61bbeda53374249345217a09cd78040f124ef8bc07a1612a1a186d2468f67d54",
                    "sha256:92270994fafef678580dc83e4325fa2f4ae8f3223934c22243dfe7309162be07",
                    "sha256:88be2f314b58b7c97d88f89fe1a9d2589c6951703c29dbcdee1370a38fb0eb73",
                    "sha256:4cd26e8abc8ea4578f5fd18bd7c88e1752f63a6ba2b47a2748829da6533c515e",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:dd4425b585e6ef6909b4e401069d605f63794d541cdb42bb06807d560388e5d1",
                    "sha256:ab02b38642445743fcea5363e3e2e2c152645db64fb26bf7b56d0b4b2662547f",
                    "sha256:b5bde6de6d78cc309610ed44aff8af02dc24903bd4636c9abb2e4615858e8d24",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ac15c28c9f71649b95fa1383d44e822cc7424b12c2f75d369058eb9a421a26fb",
                    "sha256:840e79a410397ef2c89aa6bbc0d269397467a0ccac93eaae377dc5f1ac017576",
                    "sha256:4753bcd57f51dfa0de52a8f29ebd5cd26d197100d81e81d34eee7f20da928c43",
                    "sha256:72eb1b1b4477f23b490cf4fb49b82965605ee90bed7b3580b38d5356823e6b78"
                ]
            }
        },
        "latest-20230904": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                },
                "OnBuild": null
            },
            "created": "2023-09-09T04:35:32.847209484Z",
            "history": [
                {
                    "created": "2023-08-16T06:19:52.511034945Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:52.678880469Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:52.846527092Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:53.017052303Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:59.127120216Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3fcf00866c55150f1ea0a5ef7b8473c39275c1fdbf6aba0acd84cacb83d0c564 in / "
                },
                {
                    "created": "2023-08-16T06:19:59.851781663Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:46.93114918Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:46.93114918Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:46.93114918Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:18.952261606Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:19.761223709Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:19.761223709Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:02:19.761223709Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:02:20.194221163Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:20.21180478Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:20.222393011Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:20.247807525Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:20.247807525Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:02:21.899364646Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:22.17951671Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:34:39.875937997Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:34:39.875937997Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r32.7 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t186 r32.7 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:35:32.515089708Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:35:32.847209484Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:61bbeda53374249345217a09cd78040f124ef8bc07a1612a1a186d2468f67d54",
                    "sha256:73eb566cd0436219bfde4ac6950bfa86846113f3c3c13e59f1f7259b9fde4798",
                    "sha256:f4f141ccf9b2ed89c1994bab50acd51e197800b7914b79c9a5766edeb1e6264c",
                    "sha256:b8f42e3e6876f69f9fd6f1b2655f542d668078b48b309426774345ff5b2fa1fd",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:65a6d302256cb6db51bbd0d59145a3c145a08912581711a4b8c50fee03ee7954",
                    "sha256:aa50ec027cafedf6cfa9d5b7b797297902c54bc818224ffc5ad46c700b1f1a18",
                    "sha256:118f8ef44e94351e31e425e81210209b5d911b92a8a47eb5f456d1de5097e136",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ebee8221a712caf18485002c7e6312a65efa63454430c6e40be097c2da96770d",
                    "sha256:700852db6c013bb086661c8fac7220c7c879c0a4b5fa4221568ef8804dd5bd3f",
                    "sha256:3ab1eee539c0fc9b8c74d9ef9d398b94eb84fb663984b00a662bf0f0013d2a44",
                    "sha256:66af3d0aa2bad03237d458b7e588803cb2e3b22d46eb305fdeeb02a553899fd9"
                ]
            }
        },
        "latest-20230911": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                },
                "OnBuild": null
            },
            "created": "2023-09-11T23:11:29.355189118Z",
            "history": [
                {
                    "created": "2023-08-16T06:19:52.511034945Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:52.678880469Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:52.846527092Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:53.017052303Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:59.127120216Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3fcf00866c55150f1ea0a5ef7b8473c39275c1fdbf6aba0acd84cacb83d0c564 in / "
                },
                {
                    "created": "2023-08-16T06:19:59.851781663Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:46.93114918Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:46.93114918Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:46.93114918Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:18.952261606Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:19.761223709Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:19.761223709Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:02:19.761223709Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:02:20.194221163Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:20.21180478Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:20.222393011Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:20.247807525Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:20.247807525Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:02:21.899364646Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:22.17951671Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T23:11:29.250286Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-11T23:11:29.250286Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T23:11:29.355189118Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:61bbeda53374249345217a09cd78040f124ef8bc07a1612a1a186d2468f67d54",
                    "sha256:73eb566cd0436219bfde4ac6950bfa86846113f3c3c13e59f1f7259b9fde4798",
                    "sha256:f4f141ccf9b2ed89c1994bab50acd51e197800b7914b79c9a5766edeb1e6264c",
                    "sha256:b8f42e3e6876f69f9fd6f1b2655f542d668078b48b309426774345ff5b2fa1fd",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:65a6d302256cb6db51bbd0d59145a3c145a08912581711a4b8c50fee03ee7954",
                    "sha256:aa50ec027cafedf6cfa9d5b7b797297902c54bc818224ffc5ad46c700b1f1a18",
                    "sha256:118f8ef44e94351e31e425e81210209b5d911b92a8a47eb5f456d1de5097e136",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ebee8221a712caf18485002c7e6312a65efa63454430c6e40be097c2da96770d",
                    "sha256:e4277096ad7051f93b36723b91a5664995e4910f530500f85dc819be543be5a5",
                    "sha256:ed2c4d9a482f2a4ac9b8a365762d1ac090db181531b17d3f53835a96a71b83be"
                ]
            }
        },
        "latest-20231026": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                },
                "OnBuild": null
            },
            "created": "2023-11-02T15:45:01.662929295Z",
            "history": [
                {
                    "created": "2023-10-05T07:32:20.951880606Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T07:32:21.015770292Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T07:32:21.080364699Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T07:32:21.153596992Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T07:32:22.639154667Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f8594e26831508c318e42c8dfd9942041031087b8de1bf3fec11fd75b8b30fd4 in / "
                },
                {
                    "created": "2023-10-05T07:32:22.848629339Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:17:36.98530637Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:17:36.98530637Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:17:36.98530637Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:19:30.038036758Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:19:30.590211839Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:19:30.590211839Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:19:30.590211839Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:19:30.727463187Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:19:30.737278712Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:19:30.746163163Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:19:30.755855653Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:19:30.755855653Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:19:31.864611691Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:19:31.989038864Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:45:01.512720457Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:45:01.512720457Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:45:01.662929295Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d2d3127fc3d362a0516c53fcb8fb983ebb9d1ea2dfbd63b69967a0084f0d45a3",
                    "sha256:c243b6ba49361914e3fe9a5b150d45bb20ad99e1ee88a0b770b7d4f9f72379a9",
                    "sha256:78a2eaa1c40786ba98d4ddac8dda4a7fe3fa8784ec9d199c07bd4e06dd347b1b",
                    "sha256:abe9e87e67a428d547cfd1863fd6138073f87abb61f909e5dc88d063f811aa64",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8613ffa14109f531902ca2af59ffd55b23ce83905ee8fa46273b23cebc081816",
                    "sha256:cbf495cb182bd008ae474b08be37c1d8dc1758e42bd6ac3132f5431193c4f960",
                    "sha256:3d8d8f656c49302ea76def530da05ad3de05e09b6750296a55f8452569fa332b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1545d6d669cd3e2c6f9e758aae9bbafb3ce5d769394bde3fa61b4ee7787e7fbe",
                    "sha256:fde2d01656b6e0a7be7e899d237c95269da9697e5e1c90e061d39682c0a309d4",
                    "sha256:0203de8b3984581bfcd33b7b6c71182d8f93752a50dffc033a0c016d02dd3cc8"
                ]
            },
            "variant": "v8"
        },
        "latest-20231103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                },
                "OnBuild": null
            },
            "created": "2023-11-06T01:05:40.231993362Z",
            "history": [
                {
                    "created": "2023-10-05T07:32:20.951880606Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T07:32:21.015770292Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T07:32:21.080364699Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T07:32:21.153596992Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T07:32:22.639154667Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f8594e26831508c318e42c8dfd9942041031087b8de1bf3fec11fd75b8b30fd4 in / "
                },
                {
                    "created": "2023-10-05T07:32:22.848629339Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:42:26.099059735Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:42:26.099059735Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:42:26.099059735Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:45:34.259078886Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:45:35.342603498Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:45:35.342603498Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:45:35.342603498Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:45:35.54098196Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:45:35.568397242Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:45:35.588929428Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:45:35.606804938Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:45:35.606804938Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:45:37.38438037Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:45:37.560859106Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T01:05:40.127404642Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T01:05:40.127404642Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T01:05:40.231993362Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d2d3127fc3d362a0516c53fcb8fb983ebb9d1ea2dfbd63b69967a0084f0d45a3",
                    "sha256:10d443a89e642fe0b654249aeaf8bab4bcaaff359469729746bcf8c3241a97a9",
                    "sha256:f12d1c92fcdedc951a85ecbdc9d891651c9b03345450ff58f4f6ed3d1e875529",
                    "sha256:32a3d52ec67454977739f6e7a73f3e5c5986448701054fc6c5fa301b3506febb",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5404be9f26b2de792e3a835a087e9fc32d210318c0cac541ec39560fbc37fa09",
                    "sha256:62cc72e6e0b17dc250f4fb916acec294669629b1bb227e42d4898bc3f1ceb65f",
                    "sha256:3b39c17b1c6d3d260b788455c8c91a74d07191d21680dc48ff42f49ced28ac0b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:15af4a4eddbf67d577754196c8e9c1b01d0ff122deb12c53608acde408929328",
                    "sha256:c7c9a0a8349b22dd0f136ea938ee49bd0f4051f5ea066b96afdbe914efc5de99",
                    "sha256:0ae0d71f7f9017192df1dea1f564518812b189f9dd845329ddc90f269d3c90f4"
                ]
            },
            "variant": "v8"
        },
        "latest-20240103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                },
                "OnBuild": null
            },
            "created": "2024-01-05T12:02:53.118433161Z",
            "history": [
                {
                    "created": "2023-12-12T11:41:50.758603714Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:41:50.869361588Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:41:50.981745008Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:41:51.093819154Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:41:54.146264118Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50f947da69b3b6c63695be9c49eee16f7a7dcdecdceb51e5bee1609b845bf483 in / "
                },
                {
                    "created": "2023-12-12T11:41:54.521050543Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:44:32.928365316Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:44:32.928365316Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:44:32.928365316Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:31.817746676Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:32.78934311Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:32.78934311Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:46:32.78934311Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:46:32.932763963Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:32.98071649Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:32.991085243Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:33.000875247Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:33.000875247Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:46:34.094944699Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:34.213393498Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T12:02:53.012607201Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T12:02:53.012607201Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T12:02:53.118433161Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3e798a66607c97d027570dbbc112c32956981fbcc244bb2d4d1fddbce4cda84c",
                    "sha256:2e80ca486da4411dd0fec1cb0259ef173c62232fbbe60840b5545c69c0fb586f",
                    "sha256:acf9093499d05e7ea73879d4c847e171497cb3bf2cb28024c73387b604202842",
                    "sha256:ad39e05fd4bbe30d5a56af6ff638c51ab486a6d35bd68a230cb50ea30744dfb3",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:308d9a7b689b399750c10022e08a49643987885d64d68a3d172159361029b865",
                    "sha256:c91850d3827f25311e2ab8770645f4d7353e5b945060f7d9eb64b5e37e47cdb3",
                    "sha256:8fbef8bff8fa00578568f3fc095176b16bfef7cc768a375bf314e031ef82eb57",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f2cfb4098741be87d1c2f5a4af897292332eac7285b71af5e2e68f83c10d547f",
                    "sha256:a846361021ce8a43ef1823d57a8d92eef1bf740934c97c3d27a11548a2965415",
                    "sha256:2a0434d0a39a5006671e7d244fef0ca84743f03dea0adc607e6f3c8a73cd8398"
                ]
            },
            "variant": "v8"
        },
        "latest-20240105": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                },
                "OnBuild": null
            },
            "created": "2024-01-06T07:55:35.98119432Z",
            "history": [
                {
                    "created": "2023-12-12T11:41:50.758603714Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:41:50.869361588Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:41:50.981745008Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:41:51.093819154Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:41:54.146264118Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50f947da69b3b6c63695be9c49eee16f7a7dcdecdceb51e5bee1609b845bf483 in / "
                },
                {
                    "created": "2023-12-12T11:41:54.521050543Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:37:52.719890317Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:37:52.719890317Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:37:52.719890317Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:44.68383672Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:45.24617781Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:45.24617781Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:39:45.24617781Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:39:45.393470696Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:45.445245009Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:45.454514748Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:45.464356521Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:45.464356521Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:39:46.694653805Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:46.80732869Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:55:35.876752162Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:55:35.876752162Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:55:35.98119432Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3e798a66607c97d027570dbbc112c32956981fbcc244bb2d4d1fddbce4cda84c",
                    "sha256:06f199958bd4bf23fdd093651f2fded886cfd510f924b035e3778a6b3ced8d02",
                    "sha256:c98bc4703039eb0431773191cecc6af09b53b8f99ee046ba4dfd112763f7de42",
                    "sha256:d64970f18b174ccdc31d58582f24b0401663e973e81699d978e77a6a3dd90f19",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ac14ba889ceb708b209faf5e1feb12af78c8d094462a61fc691d0b0aac610e64",
                    "sha256:7ea7282951c60a62d47abc4a180fc3fdc8e85b96fa9ce9ccf26e086a9d9fed23",
                    "sha256:9bc1e596ac05cea9597de16d9d793a37966b4da0b57b9306cb6f4eab4da3dbc0",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:615998ebaa076cb1f7ed838a1a6164c074b4979e566706ca6d5862ce6b727c33",
                    "sha256:6f884b55abc68468e2c919dd9c19eb298af72bbdec42c9477ad6d34cf2824ae8",
                    "sha256:f7c671bf97f1df35894ae6f6fe4f8833ee513bd4db9385792a76fcd1ace2afbe"
                ]
            },
            "variant": "v8"
        },
        "latest-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                }
            },
            "created": "2024-04-06T13:38:44.879767741Z",
            "history": [
                {
                    "created": "2024-02-27T18:53:22.490310908Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T18:53:22.539283006Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T18:53:22.59951827Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T18:53:22.648922452Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T18:53:25.140932403Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:07cdbabf782942af04487c9da03de50a611a51e69d8bac1f593acb73a3ba3a46 in / "
                },
                {
                    "created": "2024-02-27T18:53:25.397886996Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:20:52.447123568Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:20:52.447123568Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:20:52.447123568Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:46.136639138Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:46.672812142Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:46.672812142Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:22:46.672812142Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:22:46.789043867Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:46.801794101Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:46.837911774Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:46.848970589Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:46.848970589Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:22:47.737012242Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:47.874181626Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:38:44.767427419Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:38:44.767427419Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:38:44.879767741Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a510ae0f066c65d73f523d5821fe048a6858e53360ecb8d39b7b931162f11479",
                    "sha256:43c1435efbd6a805475b6a69ed2afea4421be979091a971f530b219a1ce24cd9",
                    "sha256:e37f3ca660bcc311e960bcea5d2c9df82900567c09cd643d5f1d4daa39c810e7",
                    "sha256:3839ee8dd9a6dc7cbb4afc83940c3b88151d70ba57d3886ee1296b5db7da0ae7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:77504a1f2690cadb7b6b7aae94be4d28f9f58dcf3c8c6c7bee7b23c0c30e7582",
                    "sha256:9459da29ee9ac2f7e12d595eafca0d2d1f0637d68f6b071fe101f1b64b632585",
                    "sha256:cb0901504bd0e19c9232086b08b0e4835bc7c8a76691405b1dc830adee2ed6d5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:18821c7845f9f0aa9381d55d092efcc647571f926ba8e8198fe6a5ac352260df",
                    "sha256:f9ecea3f3853e467055455b994bf74116f94d38d7b5fbabaa0536a94e146bb4e",
                    "sha256:50db4c8cdcf855056432aecf4ccdf80bc0e15409dbdbad6098f7e3c02466e307"
                ]
            },
            "variant": "v8"
        },
        "latest-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                }
            },
            "created": "2024-04-09T18:52:59.102361258Z",
            "history": [
                {
                    "created": "2024-02-27T18:53:22.490310908Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T18:53:22.539283006Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T18:53:22.59951827Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T18:53:22.648922452Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T18:53:25.140932403Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:07cdbabf782942af04487c9da03de50a611a51e69d8bac1f593acb73a3ba3a46 in / "
                },
                {
                    "created": "2024-02-27T18:53:25.397886996Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:47.461373506Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:47.461373506Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:47.461373506Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:43.100120348Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:43.649843389Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:43.649843389Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:43.649843389Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:43.766584201Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:43.776851848Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:43.785956822Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:43.795637979Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:43.795637979Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:44.705220102Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:44.823651141Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T18:52:58.997668861Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T18:52:58.997668861Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T18:52:59.102361258Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a510ae0f066c65d73f523d5821fe048a6858e53360ecb8d39b7b931162f11479",
                    "sha256:755a5181e5cf3dc59d0d45df350e621f8f70fba87a9e128453149fdde7d6ec13",
                    "sha256:bc3eb4fdfc82ec2711ae80e36e01fcf5f44d6be01e59e0101cdf79da46b187a5",
                    "sha256:02854098a3656cb8daac9692ef973e560528ede1eb6752702f15dec8702afba2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a70167e146c331d507a4700240a8dad7047ffbda396a3d152fb55b91ec179808",
                    "sha256:9c02956fcc7d415d1f3bd2340c6905be7b40a107e3852ced3bf12842ccd8c502",
                    "sha256:15cacaf774edf7d6221e2d6014bb5ac3604f5912c908450cd10bd6324cfba332",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f7bd9f5560827cd12577ee9ed4e229cedcd48ed2e4d45a53df473eb210efde01",
                    "sha256:5a88d24cf58ed32b1cb1ee0fd6f16414ca862e09411f7bf6038ffd08be255508",
                    "sha256:9436603e67f8ef0a8cf6af8fd08185ff7696ff4b8b70f4425f9c1066d459603a"
                ]
            },
            "variant": "v8"
        },
        "latest-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                }
            },
            "created": "2024-05-02T02:40:02.09133632Z",
            "history": [
                {
                    "created": "2024-04-27T14:32:22.643440355Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:32:22.768221855Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:32:22.922781285Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:32:23.070247637Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:32:33.475488206Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:18035d0a8c59e3306bad4219c71a52b03397fc8f231baf7f676287c73024d85c in / "
                },
                {
                    "created": "2024-04-27T14:32:33.989941961Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:18.216101982Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:18.216101982Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:18.216101982Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:21.912464985Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:22.625610903Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:22.625610903Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:24:22.625610903Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:24:22.739350403Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:22.750532225Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:22.759557887Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:22.792378776Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:22.792378776Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:24:23.712437353Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:23.834897531Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:40:01.977748969Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:40:01.977748969Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:40:02.09133632Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:842bef16b8fb80459504b4621523ac3d78faf7e01d6d9fa7076ed6d4a8f49830",
                    "sha256:0640e720188f6528f7c748e336f11a09d9d00729e4c36eb2bbe129f8a763d070",
                    "sha256:da00f81eef79ae72a2a6e39658ba370fdc81df4c094e54e6a589f711e7c05f0d",
                    "sha256:16497e63f0b712dabe742045e338b44077718e77481804d3a7724223446a164b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:aabd4e14de0df6a5f9f1a6579c3040ed27fca9cd89f3657928a4b239e2e86e75",
                    "sha256:5f6d921eddb8660b20b548ace680919f1b42147cf88460f36aa40005e1aa336a",
                    "sha256:c56d8196358aa702245257319ec5bdcbf5176851d7fef2e97a20cd495170743e",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3817267cec6b73a0e47e08025ef532290d5f261f3fbf1a42ed49176789c09b27",
                    "sha256:070b1a3316674d91b65504d1eb226dfd4fd381c8bb452d8dd49156030aa90fc2",
                    "sha256:85e6e6342cb0f9b27b344a63573bdaad71104c22aa6f59ee24fb6af673be4617"
                ]
            },
            "variant": "v8"
        },
        "latest-build": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                }
            },
            "created": "2024-05-02T02:40:03.973438666Z",
            "history": [
                {
                    "created": "2024-04-27T14:32:22.643440355Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:32:22.768221855Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:32:22.922781285Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:32:23.070247637Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:32:33.475488206Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:18035d0a8c59e3306bad4219c71a52b03397fc8f231baf7f676287c73024d85c in / "
                },
                {
                    "created": "2024-04-27T14:32:33.989941961Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:11.45435502Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:11.45435502Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:11.45435502Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:32.219701867Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:28:20.556751422Z",
                    "created_by": "RUN /bin/sh -c install_packages \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:28:21.170108759Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:28:21.170108759Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:28:21.170108759Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:28:21.288842708Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:28:21.299317535Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:28:21.308861982Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:28:21.35408794Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:28:21.35408794Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:28:22.274748769Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:28:22.395535238Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:40:03.8848073Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:40:03.8848073Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:40:03.973438666Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:842bef16b8fb80459504b4621523ac3d78faf7e01d6d9fa7076ed6d4a8f49830",
                    "sha256:5f36a177078485a2d99a5ab825ad3673c88cf3c33aa985e4c71ff4407e8745c3",
                    "sha256:59e8c92f5618d3c40623d0b51147a9fa34173826f787ee4b5b3d3f941c810758",
                    "sha256:8c077cab623f02bd821f5daf97abcbaf2eec47d7cba5e3bdac606a28cf3864cf",
                    "sha256:3617838ef85e313ca7428cf601a6352bf9c9b30a94ea687c8db63c883ab64b58",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b71bb935752deacef677163932ef67131e6130d319f31ac680c7719de4c9a92b",
                    "sha256:6c964c391bd1f7c4eebe899d34623958a4b54135b55dfb05367a8ae8a765bfb8",
                    "sha256:d4181efba17b04bbbd6411558f7fa24d4dbc59a105ede3adb6bddb8b46a5aedf",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:4add95593e9ba7737e2464bf1def73e4d27227b1eee6cf1934b5f73fc2e3fd85",
                    "sha256:efe8a8d81bf0084babf2f5ad813420c49efaf92339ff6278270d1020e68c32e7",
                    "sha256:8db20f21d5b24210d3f8c21332e8eb550f788db6e973bc0e1744e0c8b271cf6d"
                ]
            },
            "variant": "v8"
        },
        "latest-build-20230829": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                },
                "OnBuild": null
            },
            "created": "2023-09-02T04:37:13.189259628Z",
            "history": [
                {
                    "created": "2023-08-16T06:19:52.511034945Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:52.678880469Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:52.846527092Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:53.017052303Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:59.127120216Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3fcf00866c55150f1ea0a5ef7b8473c39275c1fdbf6aba0acd84cacb83d0c564 in / "
                },
                {
                    "created": "2023-08-16T06:19:59.851781663Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:00:23.873526242Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:00:23.873526242Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:00:23.873526242Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:02:54.845294161Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:06:56.671621547Z",
                    "created_by": "RUN /bin/sh -c install_packages \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:06:57.575369175Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:06:57.575369175Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:06:57.575369175Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:06:57.988122767Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:06:58.002972646Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:06:58.016232207Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:06:58.024609308Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:06:58.024609308Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:06:59.683832772Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:07:00.001901719Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:36:25.853300687Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:36:25.853300687Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r32.7 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t186 r32.7 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:37:12.800336493Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:37:13.189259628Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:61bbeda53374249345217a09cd78040f124ef8bc07a1612a1a186d2468f67d54",
                    "sha256:92270994fafef678580dc83e4325fa2f4ae8f3223934c22243dfe7309162be07",
                    "sha256:88be2f314b58b7c97d88f89fe1a9d2589c6951703c29dbcdee1370a38fb0eb73",
                    "sha256:2da7b05b9b2c066da95e684aa433f904559d59953f63b7a4805e780f85a6a419",
                    "sha256:a59f32fea489f5b480c7c7b352486d643961b2106e7734d014e5a9f9e7597073",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:afab8e08d891f236dabee477f49cc1b21c8b40b4297b7edfdf4a06281eec9792",
                    "sha256:1a4202f18e8f7056cd11e6f2fcf89076f970e128cfd63160360adf3b34c20751",
                    "sha256:59bbb1f6c67c3fb01458e76e34f400ceb0ae004ff972800836a680053593001b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:90da16b7d2f1a9171d174743774b329ab0b231d3b7ca646ea377109eab1dd4fc",
                    "sha256:d19cb61d0aad8a26931cc4eaa795db3d2e4458d3b9684bb24c814c4db36cf2d7",
                    "sha256:7288f327175f44b8b032601053f6e94ac0af3b9418bef01df4c17998ff6a2a35",
                    "sha256:3bb6b2f97424a2ac255c13484519b07fb505a025d06eca4cb78cfed3bd7b337c"
                ]
            }
        },
        "latest-build-20230904": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                },
                "OnBuild": null
            },
            "created": "2023-09-09T04:37:02.644699864Z",
            "history": [
                {
                    "created": "2023-08-16T06:19:52.511034945Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:52.678880469Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:52.846527092Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:53.017052303Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:59.127120216Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3fcf00866c55150f1ea0a5ef7b8473c39275c1fdbf6aba0acd84cacb83d0c564 in / "
                },
                {
                    "created": "2023-08-16T06:19:59.851781663Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:46.93114918Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:46.93114918Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:46.93114918Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:18.952261606Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:06:18.916842861Z",
                    "created_by": "RUN /bin/sh -c install_packages \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:06:19.822747165Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:06:19.822747165Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:06:19.822747165Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:06:20.1313966Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:06:20.145175206Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:06:20.159556922Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:06:20.170772691Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:06:20.170772691Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:06:21.7829426Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:06:22.117698827Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:36:12.9252513Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:36:12.9252513Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r32.7 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t186 r32.7 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:37:02.267928447Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:37:02.644699864Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:61bbeda53374249345217a09cd78040f124ef8bc07a1612a1a186d2468f67d54",
                    "sha256:73eb566cd0436219bfde4ac6950bfa86846113f3c3c13e59f1f7259b9fde4798",
                    "sha256:f4f141ccf9b2ed89c1994bab50acd51e197800b7914b79c9a5766edeb1e6264c",
                    "sha256:2dbf04c5b97d4074854481aee89b30c68ea38d43c1bb545a10af3ed8a760398f",
                    "sha256:c362cf0c7daa3e62fddd2b352472dd935de7482d4f5af2a3e973e8d862b9f3cb",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:954735b0918bccbfba80319849757daac5ed795ba26379fa8831f28a251293ee",
                    "sha256:3d0810f1e4df268339bdd893a8666af85a08616ad9081f577a0c54049b55d796",
                    "sha256:7b616e65ebf965ddc313798b109bfbb9e8d9629cf7243252a455838c5b4622ca",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8b2f650f85eb9017436088d130f701ffbd8055a17d2e33b933d4008fac14a588",
                    "sha256:566e187176993fb5787d0a342bbc05a7ab383eeab0972261003689ce08871f8e",
                    "sha256:ca1b222753e7c38b3d1463a09d876df538b494f8f6cf9f0f2566eefa4f080e63",
                    "sha256:58a8eb27a84244b6d685087475c1631c6f5d5af492079eac853a42f1330e069f"
                ]
            }
        },
        "latest-build-20230911": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                },
                "OnBuild": null
            },
            "created": "2023-09-11T23:11:30.251378408Z",
            "history": [
                {
                    "created": "2023-08-16T06:19:52.511034945Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:52.678880469Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:52.846527092Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:53.017052303Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:59.127120216Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3fcf00866c55150f1ea0a5ef7b8473c39275c1fdbf6aba0acd84cacb83d0c564 in / "
                },
                {
                    "created": "2023-08-16T06:19:59.851781663Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:46.93114918Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:46.93114918Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:46.93114918Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:18.952261606Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:06:18.916842861Z",
                    "created_by": "RUN /bin/sh -c install_packages \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:06:19.822747165Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:06:19.822747165Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:06:19.822747165Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:06:20.1313966Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:06:20.145175206Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:06:20.159556922Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:06:20.170772691Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:06:20.170772691Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:06:21.7829426Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:06:22.117698827Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T23:11:30.16729001Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-11T23:11:30.16729001Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T23:11:30.251378408Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:61bbeda53374249345217a09cd78040f124ef8bc07a1612a1a186d2468f67d54",
                    "sha256:73eb566cd0436219bfde4ac6950bfa86846113f3c3c13e59f1f7259b9fde4798",
                    "sha256:f4f141ccf9b2ed89c1994bab50acd51e197800b7914b79c9a5766edeb1e6264c",
                    "sha256:2dbf04c5b97d4074854481aee89b30c68ea38d43c1bb545a10af3ed8a760398f",
                    "sha256:c362cf0c7daa3e62fddd2b352472dd935de7482d4f5af2a3e973e8d862b9f3cb",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:954735b0918bccbfba80319849757daac5ed795ba26379fa8831f28a251293ee",
                    "sha256:3d0810f1e4df268339bdd893a8666af85a08616ad9081f577a0c54049b55d796",
                    "sha256:7b616e65ebf965ddc313798b109bfbb9e8d9629cf7243252a455838c5b4622ca",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8b2f650f85eb9017436088d130f701ffbd8055a17d2e33b933d4008fac14a588",
                    "sha256:664b61042036644d1d8f9beab6f73fb200bf0c2ecfde0ceb7d77570df6f89f9f",
                    "sha256:57873a632c9edf9f387dd1f2091281aec19e81c6c0ebb0bb9936a2f925927c4e"
                ]
            }
        },
        "latest-build-20231026": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                },
                "OnBuild": null
            },
            "created": "2023-11-02T15:44:46.624152344Z",
            "history": [
                {
                    "created": "2023-10-05T07:32:20.951880606Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T07:32:21.015770292Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T07:32:21.080364699Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T07:32:21.153596992Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T07:32:22.639154667Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f8594e26831508c318e42c8dfd9942041031087b8de1bf3fec11fd75b8b30fd4 in / "
                },
                {
                    "created": "2023-10-05T07:32:22.848629339Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:17:46.551397961Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:17:46.551397961Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:17:46.551397961Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:20:55.594585694Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:25:58.788644714Z",
                    "created_by": "RUN /bin/sh -c install_packages \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:25:59.777479211Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:25:59.777479211Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:25:59.777479211Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:25:59.971253403Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:25:59.988656899Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:26:00.016494171Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:26:00.032809249Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:26:00.032809249Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:26:01.945876045Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:26:02.147154564Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:44:46.520721649Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:44:46.520721649Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:44:46.624152344Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d2d3127fc3d362a0516c53fcb8fb983ebb9d1ea2dfbd63b69967a0084f0d45a3",
                    "sha256:d937fd4f39f8d6d8fa66189a698fc34fb90b66da2e15f10fdbfdc7593f42df91",
                    "sha256:956c5c6e99fa84110b6e9d4178d71d4205caa0e6d924acf2c5fcfc1617331b44",
                    "sha256:08907614ebe4533457ae767f5f9d69b84ba18fa61d33df04dedfa8fd08da0734",
                    "sha256:98d6aba74b43f855acb6fda99e2e66f1f9fa09c7026398a0b1b92cdf673bd6a7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:cd46a2751e654ab11312127888271dc039f37345a83cd5d2766a409ce6e91e7e",
                    "sha256:f7a58c7e49b96c5deae6c4ff9a57370c5c659721d934669678da155f971b9257",
                    "sha256:0791cb338c36231e94997723600c7cd2f5898ed5821f945fe2e4a7c49fdde699",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:54c03e0706975ed9ab93c7e2f03371347c3567eb04d8b49e826d98297bfcdf7f",
                    "sha256:bc607c3738429c703efc094230c17d25fa0300f88d4ed9504dd7e0c8dfd2c1e1",
                    "sha256:9dc78aef223df6accf9f8588849c12ae376e9c7715417b460ed3651b15fddf38"
                ]
            },
            "variant": "v8"
        },
        "latest-build-20231103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                },
                "OnBuild": null
            },
            "created": "2023-11-06T01:05:42.915816504Z",
            "history": [
                {
                    "created": "2023-10-05T07:32:20.951880606Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T07:32:21.015770292Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T07:32:21.080364699Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T07:32:21.153596992Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T07:32:22.639154667Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f8594e26831508c318e42c8dfd9942041031087b8de1bf3fec11fd75b8b30fd4 in / "
                },
                {
                    "created": "2023-10-05T07:32:22.848629339Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:42:33.384072497Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:42:33.384072497Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:42:33.384072497Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:45:43.424768722Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:50:08.72359182Z",
                    "created_by": "RUN /bin/sh -c install_packages \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:50:09.753791442Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:50:09.753791442Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:50:09.753791442Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:50:09.940255924Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:50:09.955143145Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:50:09.967457989Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:50:09.994541746Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:50:09.994541746Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:50:11.967989529Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:50:12.162140239Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T01:05:42.812685206Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T01:05:42.812685206Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T01:05:42.915816504Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d2d3127fc3d362a0516c53fcb8fb983ebb9d1ea2dfbd63b69967a0084f0d45a3",
                    "sha256:e9bb0efa2ab3a789b04db6a56a3353576f1d4d73a064284a19e78c7aa34f8171",
                    "sha256:c56259aad21ea29c93e9984feb17efd26854eecc6db6f8996fbbf8eb4a52467e",
                    "sha256:6f7cecaf6268a288ef4c24bbb2ce8b8c9cd85479c76539b01408a382c6f8b354",
                    "sha256:1c7327879edba47b3ebb9f9ecdb2a6a06152f2c9e07bb9a28772e55f91f5d8ab",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d5b44f8648436428c6f54e2db494e864460a7c29b91f237b1c26fbe21cb32940",
                    "sha256:66bead3ffb9e57fda29d4fb62915d7a399f87a6ac18a5124ad442bc12a8c9d8e",
                    "sha256:2a2a006abd37372972386762c4f6bdea57f432f082034c35915b0ecaf258b1e2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a043e97a8c734a925e82774007a25ec52d6322ab7bb8f1dec91f22d619298e74",
                    "sha256:500d818f46ca8caa29c1d94d05dc2d32c9815557e47854b57767f3795e443bd0",
                    "sha256:729de28c17006255f2bacfda9f8d489900dc5c73e715fad70fb31473088ef455"
                ]
            },
            "variant": "v8"
        },
        "latest-build-20240103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                },
                "OnBuild": null
            },
            "created": "2024-01-05T12:02:51.7579565Z",
            "history": [
                {
                    "created": "2023-12-12T11:41:50.758603714Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:41:50.869361588Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:41:50.981745008Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:41:51.093819154Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:41:54.146264118Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50f947da69b3b6c63695be9c49eee16f7a7dcdecdceb51e5bee1609b845bf483 in / "
                },
                {
                    "created": "2023-12-12T11:41:54.521050543Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:44:23.80523853Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:44:23.80523853Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:44:23.80523853Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:16.530288342Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:49:07.69993695Z",
                    "created_by": "RUN /bin/sh -c install_packages \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:49:08.361719057Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:49:08.361719057Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:49:08.361719057Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:49:08.482600668Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:49:08.493958094Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:49:08.522342035Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:49:08.582371017Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:49:08.582371017Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:49:09.697772738Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:49:09.826156112Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T12:02:51.666798047Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T12:02:51.666798047Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T12:02:51.7579565Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3e798a66607c97d027570dbbc112c32956981fbcc244bb2d4d1fddbce4cda84c",
                    "sha256:c1e86ee534e30a9e0ad856246a626e5fa9539cafc86144a8c4573248b88181b2",
                    "sha256:b2eeb0d1f805de23711eb1c6ca37601cebdf84cace0dd3b0c38d1d3959051724",
                    "sha256:8cd990ff3b8e3ec7a8d0d86c40c52e5a05ffaa301beae01843ba1a552c3571a4",
                    "sha256:8f0cf1a5608e0fa478b064528ee9648f6bcad1ef3c4aae2364aa74b12a12e921",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5bec2384b45ead647d90486f3702d429f17ed62117311a5e48822d154204f417",
                    "sha256:bcdbb997ad2dce37f5087ddfacc3e73a500f9055bc61d3453f7702668daf7f54",
                    "sha256:a1356bb6786e6600d4fea415a8c0173073a54657073ec726aabe102d65e62e6f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ffbc6a139b9a719e9432e8e5fbdc025c02dc25e929bbd03a4bab325340679796",
                    "sha256:8236f69dc61480f05539b3cf1af103783f99ce656bf7ba203375214c3820cb2e",
                    "sha256:3b44b9ce9ac539ef1b1b77d8c56086c7dbd556b58a3cb946cc619abbd4487199"
                ]
            },
            "variant": "v8"
        },
        "latest-build-20240105": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                },
                "OnBuild": null
            },
            "created": "2024-01-06T07:55:38.874965676Z",
            "history": [
                {
                    "created": "2023-12-12T11:41:50.758603714Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:41:50.869361588Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:41:50.981745008Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:41:51.093819154Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:41:54.146264118Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50f947da69b3b6c63695be9c49eee16f7a7dcdecdceb51e5bee1609b845bf483 in / "
                },
                {
                    "created": "2023-12-12T11:41:54.521050543Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:37:52.813781715Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:37:52.813781715Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:37:52.813781715Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:43.993820601Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:42:31.232186017Z",
                    "created_by": "RUN /bin/sh -c install_packages \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:42:31.882663014Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:42:31.882663014Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:42:31.882663014Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:42:31.989683312Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:42:31.998924165Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:42:32.026512553Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:42:32.034924287Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:42:32.034924287Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:42:33.142090623Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:42:33.256212935Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:55:38.787847215Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:55:38.787847215Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:55:38.874965676Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3e798a66607c97d027570dbbc112c32956981fbcc244bb2d4d1fddbce4cda84c",
                    "sha256:06f199958bd4bf23fdd093651f2fded886cfd510f924b035e3778a6b3ced8d02",
                    "sha256:9dda24e904d2b3c9e54055d245b52abe928c1db24ce767f0f6ddfebac46bbfc7",
                    "sha256:fa335fe17616bfac8d811e0fe819ead0db30b2b7e26791b16307fbfec406279e",
                    "sha256:b79c64de067344d7d96cf6c7afac2c3ae92487269248f3aadce485e1753f8933",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:69f9e2c95c5be2e22f57abba46e80551b15f85c6e7cbcadc2e90e5f88142626e",
                    "sha256:3aacc0a96ceeff43c753b9b8bea3a4fa81c486152d5c57d583090173b2dc7da8",
                    "sha256:d2db4c66f99cb8e6091a9f357f0349c80120b5da28e4c89b345c58a0b8108b17",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:71679a21859486e78c2d1e5d4afa6975f590caf738374e7873daef93216425c4",
                    "sha256:dfa3eb293f1f62e0817a970ccd3e88c21f6a242ca5109684131684e753f6fa95",
                    "sha256:9d039f1d6b2ce317955a547cd93bc08136d3d24be72c2157557a301c9117b314"
                ]
            },
            "variant": "v8"
        },
        "latest-build-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                }
            },
            "created": "2024-04-06T13:38:47.024937223Z",
            "history": [
                {
                    "created": "2024-02-27T18:53:22.490310908Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T18:53:22.539283006Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T18:53:22.59951827Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T18:53:22.648922452Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T18:53:25.140932403Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:07cdbabf782942af04487c9da03de50a611a51e69d8bac1f593acb73a3ba3a46 in / "
                },
                {
                    "created": "2024-02-27T18:53:25.397886996Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:20:51.393191159Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:20:51.393191159Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:20:51.393191159Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:47.797239004Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:25:38.577235073Z",
                    "created_by": "RUN /bin/sh -c install_packages \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:25:39.213053342Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:25:39.213053342Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:25:39.213053342Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:25:39.331592868Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:25:39.340661154Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:25:39.403893277Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:25:39.412744453Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:25:39.412744453Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:25:40.306296791Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:25:40.420279392Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:38:46.922625924Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:38:46.922625924Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:38:47.024937223Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a510ae0f066c65d73f523d5821fe048a6858e53360ecb8d39b7b931162f11479",
                    "sha256:ec185f876921da799d9608c39de6b845f6c7eb86ab6ec6e520bb6a95c1d6ee4c",
                    "sha256:4ab72ba8653a058f5a9589625d7cf003daa11429046529f6f6792008be9f5479",
                    "sha256:3d3bde061fb1e7a1f080f45dd9eedda19852971dbd17189048f7d723c04dbd3b",
                    "sha256:d5ea2f5da88703e48a630a5ab16972391cc6a89e0615988386f7dcfefdd9c716",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2c98ebe3e32d69f8d99bfb1fe11b8a94f83f7287dc3e71d6f802609aa9b62e7f",
                    "sha256:734aae1dfed6515c3c602b991e94df2dbec51ed0849f9e42eacb14a9958c6949",
                    "sha256:a6e60c30838dd19c92f090cc6ea05ea28051ca64071db90fcd4541d3a97f84bc",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:6d4bd7401dae4c4f490f9cbf9552fdc09f76bb996ba6d1a03fe2f0624e3cfaf3",
                    "sha256:ac0709f98a9d5b2f6a774ea5d79d4f558cec9d4147cca9eb0127b8d9b0544edd",
                    "sha256:0fdfc5fd60545f3dc30d718ab31a56bacc2f058f2b613a2f61299c4123c69692"
                ]
            },
            "variant": "v8"
        },
        "latest-build-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                }
            },
            "created": "2024-04-09T18:52:50.273135599Z",
            "history": [
                {
                    "created": "2024-02-27T18:53:22.490310908Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T18:53:22.539283006Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T18:53:22.59951827Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T18:53:22.648922452Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T18:53:25.140932403Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:07cdbabf782942af04487c9da03de50a611a51e69d8bac1f593acb73a3ba3a46 in / "
                },
                {
                    "created": "2024-02-27T18:53:25.397886996Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:51.407413005Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:51.407413005Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:51.407413005Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:47.450905518Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:57.13494818Z",
                    "created_by": "RUN /bin/sh -c install_packages \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:58.601001321Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:58.601001321Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:39:58.601001321Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:39:58.710795143Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:58.721447105Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:58.730824015Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:58.740399134Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:58.740399134Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:39:59.637994019Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:59.774665814Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T18:52:50.176104355Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T18:52:50.176104355Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T18:52:50.273135599Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a510ae0f066c65d73f523d5821fe048a6858e53360ecb8d39b7b931162f11479",
                    "sha256:76f2671633393717d6786e355ff86136cdb8202fe1b8036aa7c25ad53137d784",
                    "sha256:deba24ccaf880416c44e3db98896b13bd8a207c85f246320ba4d360e19a5b185",
                    "sha256:79f554e61b8a7b19026d9a33f174405f3bbf55539959d2f4a2ebb028eaa7e42b",
                    "sha256:bdefd7c646d02f1e1fd35152f4fc0bcfbd50599a9c1c0b61b47d07828145c978",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a93bbeaaa69ce1acb3e03eaf4e13382e9fe5dd1098e72c1fc2e9e4c795f52301",
                    "sha256:a9888dd2f5c877653f07882b6fb111c0c2d7133b76e4c3473f3fda599e8a6ecd",
                    "sha256:28161e217913d7e2429ea6f26f8f0d7640a6373fc424d0c23b3c0912d4d19d12",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b6c04fdfc177fe957618bd1a895e83b2bfa0d4670b4fc47fd4f0661a206d17a4",
                    "sha256:5937493d2010ba584e964561216f20727176a7716f18e1e6ddea9311cb42805d",
                    "sha256:785b2a30f156564e2eba3a92df9cf04d81857589b5a4ea758d34004b17c58fc0"
                ]
            },
            "variant": "v8"
        },
        "latest-build-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                }
            },
            "created": "2024-05-02T02:40:03.973438666Z",
            "history": [
                {
                    "created": "2024-04-27T14:32:22.643440355Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:32:22.768221855Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:32:22.922781285Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:32:23.070247637Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:32:33.475488206Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:18035d0a8c59e3306bad4219c71a52b03397fc8f231baf7f676287c73024d85c in / "
                },
                {
                    "created": "2024-04-27T14:32:33.989941961Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:11.45435502Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:11.45435502Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:11.45435502Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:32.219701867Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:28:20.556751422Z",
                    "created_by": "RUN /bin/sh -c install_packages \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:28:21.170108759Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:28:21.170108759Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:28:21.170108759Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:28:21.288842708Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:28:21.299317535Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:28:21.308861982Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:28:21.35408794Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:28:21.35408794Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:28:22.274748769Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:28:22.395535238Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:40:03.8848073Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:40:03.8848073Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:40:03.973438666Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:842bef16b8fb80459504b4621523ac3d78faf7e01d6d9fa7076ed6d4a8f49830",
                    "sha256:5f36a177078485a2d99a5ab825ad3673c88cf3c33aa985e4c71ff4407e8745c3",
                    "sha256:59e8c92f5618d3c40623d0b51147a9fa34173826f787ee4b5b3d3f941c810758",
                    "sha256:8c077cab623f02bd821f5daf97abcbaf2eec47d7cba5e3bdac606a28cf3864cf",
                    "sha256:3617838ef85e313ca7428cf601a6352bf9c9b30a94ea687c8db63c883ab64b58",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b71bb935752deacef677163932ef67131e6130d319f31ac680c7719de4c9a92b",
                    "sha256:6c964c391bd1f7c4eebe899d34623958a4b54135b55dfb05367a8ae8a765bfb8",
                    "sha256:d4181efba17b04bbbd6411558f7fa24d4dbc59a105ede3adb6bddb8b46a5aedf",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:4add95593e9ba7737e2464bf1def73e4d27227b1eee6cf1934b5f73fc2e3fd85",
                    "sha256:efe8a8d81bf0084babf2f5ad813420c49efaf92339ff6278270d1020e68c32e7",
                    "sha256:8db20f21d5b24210d3f8c21332e8eb550f788db6e973bc0e1744e0c8b271cf6d"
                ]
            },
            "variant": "v8"
        },
        "latest-run": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                }
            },
            "created": "2024-05-02T02:40:02.09133632Z",
            "history": [
                {
                    "created": "2024-04-27T14:32:22.643440355Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:32:22.768221855Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:32:22.922781285Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:32:23.070247637Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:32:33.475488206Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:18035d0a8c59e3306bad4219c71a52b03397fc8f231baf7f676287c73024d85c in / "
                },
                {
                    "created": "2024-04-27T14:32:33.989941961Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:18.216101982Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:18.216101982Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:18.216101982Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:21.912464985Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:22.625610903Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:22.625610903Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:24:22.625610903Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:24:22.739350403Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:22.750532225Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:22.759557887Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:22.792378776Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:22.792378776Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:24:23.712437353Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:23.834897531Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:40:01.977748969Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:40:01.977748969Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:40:02.09133632Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:842bef16b8fb80459504b4621523ac3d78faf7e01d6d9fa7076ed6d4a8f49830",
                    "sha256:0640e720188f6528f7c748e336f11a09d9d00729e4c36eb2bbe129f8a763d070",
                    "sha256:da00f81eef79ae72a2a6e39658ba370fdc81df4c094e54e6a589f711e7c05f0d",
                    "sha256:16497e63f0b712dabe742045e338b44077718e77481804d3a7724223446a164b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:aabd4e14de0df6a5f9f1a6579c3040ed27fca9cd89f3657928a4b239e2e86e75",
                    "sha256:5f6d921eddb8660b20b548ace680919f1b42147cf88460f36aa40005e1aa336a",
                    "sha256:c56d8196358aa702245257319ec5bdcbf5176851d7fef2e97a20cd495170743e",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3817267cec6b73a0e47e08025ef532290d5f261f3fbf1a42ed49176789c09b27",
                    "sha256:070b1a3316674d91b65504d1eb226dfd4fd381c8bb452d8dd49156030aa90fc2",
                    "sha256:85e6e6342cb0f9b27b344a63573bdaad71104c22aa6f59ee24fb6af673be4617"
                ]
            },
            "variant": "v8"
        },
        "latest-run-20230829": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                },
                "OnBuild": null
            },
            "created": "2023-09-02T04:38:26.679554608Z",
            "history": [
                {
                    "created": "2023-08-16T06:19:52.511034945Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:52.678880469Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:52.846527092Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:53.017052303Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:59.127120216Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3fcf00866c55150f1ea0a5ef7b8473c39275c1fdbf6aba0acd84cacb83d0c564 in / "
                },
                {
                    "created": "2023-08-16T06:19:59.851781663Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:00:23.873526242Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:00:23.873526242Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:00:23.873526242Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:02:54.845294161Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:02:55.74234964Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:02:55.74234964Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:02:55.74234964Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:02:56.156853799Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:02:56.172046311Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:02:56.180539674Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:02:56.187494225Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:02:56.187494225Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:02:57.826653521Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:02:58.213618576Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:37:36.551201041Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:37:36.551201041Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r32.7 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t186 r32.7 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:38:26.47007244Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:38:26.679554608Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:61bbeda53374249345217a09cd78040f124ef8bc07a1612a1a186d2468f67d54",
                    "sha256:92270994fafef678580dc83e4325fa2f4ae8f3223934c22243dfe7309162be07",
                    "sha256:88be2f314b58b7c97d88f89fe1a9d2589c6951703c29dbcdee1370a38fb0eb73",
                    "sha256:4cd26e8abc8ea4578f5fd18bd7c88e1752f63a6ba2b47a2748829da6533c515e",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:dd4425b585e6ef6909b4e401069d605f63794d541cdb42bb06807d560388e5d1",
                    "sha256:ab02b38642445743fcea5363e3e2e2c152645db64fb26bf7b56d0b4b2662547f",
                    "sha256:b5bde6de6d78cc309610ed44aff8af02dc24903bd4636c9abb2e4615858e8d24",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ac15c28c9f71649b95fa1383d44e822cc7424b12c2f75d369058eb9a421a26fb",
                    "sha256:840e79a410397ef2c89aa6bbc0d269397467a0ccac93eaae377dc5f1ac017576",
                    "sha256:4753bcd57f51dfa0de52a8f29ebd5cd26d197100d81e81d34eee7f20da928c43",
                    "sha256:72eb1b1b4477f23b490cf4fb49b82965605ee90bed7b3580b38d5356823e6b78"
                ]
            }
        },
        "latest-run-20230904": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                },
                "OnBuild": null
            },
            "created": "2023-09-09T04:35:32.847209484Z",
            "history": [
                {
                    "created": "2023-08-16T06:19:52.511034945Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:52.678880469Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:52.846527092Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:53.017052303Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:59.127120216Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3fcf00866c55150f1ea0a5ef7b8473c39275c1fdbf6aba0acd84cacb83d0c564 in / "
                },
                {
                    "created": "2023-08-16T06:19:59.851781663Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:46.93114918Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:46.93114918Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:46.93114918Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:18.952261606Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:19.761223709Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:19.761223709Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:02:19.761223709Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:02:20.194221163Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:20.21180478Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:20.222393011Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:20.247807525Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:20.247807525Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:02:21.899364646Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:22.17951671Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:34:39.875937997Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:34:39.875937997Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r32.7 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t186 r32.7 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:35:32.515089708Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:35:32.847209484Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:61bbeda53374249345217a09cd78040f124ef8bc07a1612a1a186d2468f67d54",
                    "sha256:73eb566cd0436219bfde4ac6950bfa86846113f3c3c13e59f1f7259b9fde4798",
                    "sha256:f4f141ccf9b2ed89c1994bab50acd51e197800b7914b79c9a5766edeb1e6264c",
                    "sha256:b8f42e3e6876f69f9fd6f1b2655f542d668078b48b309426774345ff5b2fa1fd",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:65a6d302256cb6db51bbd0d59145a3c145a08912581711a4b8c50fee03ee7954",
                    "sha256:aa50ec027cafedf6cfa9d5b7b797297902c54bc818224ffc5ad46c700b1f1a18",
                    "sha256:118f8ef44e94351e31e425e81210209b5d911b92a8a47eb5f456d1de5097e136",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ebee8221a712caf18485002c7e6312a65efa63454430c6e40be097c2da96770d",
                    "sha256:700852db6c013bb086661c8fac7220c7c879c0a4b5fa4221568ef8804dd5bd3f",
                    "sha256:3ab1eee539c0fc9b8c74d9ef9d398b94eb84fb663984b00a662bf0f0013d2a44",
                    "sha256:66af3d0aa2bad03237d458b7e588803cb2e3b22d46eb305fdeeb02a553899fd9"
                ]
            }
        },
        "latest-run-20230911": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                },
                "OnBuild": null
            },
            "created": "2023-09-11T23:11:29.355189118Z",
            "history": [
                {
                    "created": "2023-08-16T06:19:52.511034945Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:52.678880469Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:52.846527092Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:53.017052303Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:59.127120216Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3fcf00866c55150f1ea0a5ef7b8473c39275c1fdbf6aba0acd84cacb83d0c564 in / "
                },
                {
                    "created": "2023-08-16T06:19:59.851781663Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:46.93114918Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:46.93114918Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:46.93114918Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:18.952261606Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:19.761223709Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:19.761223709Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:02:19.761223709Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:02:20.194221163Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:20.21180478Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:20.222393011Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:20.247807525Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:20.247807525Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:02:21.899364646Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:22.17951671Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T23:11:29.250286Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-11T23:11:29.250286Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T23:11:29.355189118Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:61bbeda53374249345217a09cd78040f124ef8bc07a1612a1a186d2468f67d54",
                    "sha256:73eb566cd0436219bfde4ac6950bfa86846113f3c3c13e59f1f7259b9fde4798",
                    "sha256:f4f141ccf9b2ed89c1994bab50acd51e197800b7914b79c9a5766edeb1e6264c",
                    "sha256:b8f42e3e6876f69f9fd6f1b2655f542d668078b48b309426774345ff5b2fa1fd",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:65a6d302256cb6db51bbd0d59145a3c145a08912581711a4b8c50fee03ee7954",
                    "sha256:aa50ec027cafedf6cfa9d5b7b797297902c54bc818224ffc5ad46c700b1f1a18",
                    "sha256:118f8ef44e94351e31e425e81210209b5d911b92a8a47eb5f456d1de5097e136",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ebee8221a712caf18485002c7e6312a65efa63454430c6e40be097c2da96770d",
                    "sha256:e4277096ad7051f93b36723b91a5664995e4910f530500f85dc819be543be5a5",
                    "sha256:ed2c4d9a482f2a4ac9b8a365762d1ac090db181531b17d3f53835a96a71b83be"
                ]
            }
        },
        "latest-run-20231026": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                },
                "OnBuild": null
            },
            "created": "2023-11-02T15:45:01.662929295Z",
            "history": [
                {
                    "created": "2023-10-05T07:32:20.951880606Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T07:32:21.015770292Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T07:32:21.080364699Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T07:32:21.153596992Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T07:32:22.639154667Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f8594e26831508c318e42c8dfd9942041031087b8de1bf3fec11fd75b8b30fd4 in / "
                },
                {
                    "created": "2023-10-05T07:32:22.848629339Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:17:36.98530637Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:17:36.98530637Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:17:36.98530637Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:19:30.038036758Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:19:30.590211839Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:19:30.590211839Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:19:30.590211839Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:19:30.727463187Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:19:30.737278712Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:19:30.746163163Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:19:30.755855653Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:19:30.755855653Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:19:31.864611691Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:19:31.989038864Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:45:01.512720457Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:45:01.512720457Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:45:01.662929295Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d2d3127fc3d362a0516c53fcb8fb983ebb9d1ea2dfbd63b69967a0084f0d45a3",
                    "sha256:c243b6ba49361914e3fe9a5b150d45bb20ad99e1ee88a0b770b7d4f9f72379a9",
                    "sha256:78a2eaa1c40786ba98d4ddac8dda4a7fe3fa8784ec9d199c07bd4e06dd347b1b",
                    "sha256:abe9e87e67a428d547cfd1863fd6138073f87abb61f909e5dc88d063f811aa64",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8613ffa14109f531902ca2af59ffd55b23ce83905ee8fa46273b23cebc081816",
                    "sha256:cbf495cb182bd008ae474b08be37c1d8dc1758e42bd6ac3132f5431193c4f960",
                    "sha256:3d8d8f656c49302ea76def530da05ad3de05e09b6750296a55f8452569fa332b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1545d6d669cd3e2c6f9e758aae9bbafb3ce5d769394bde3fa61b4ee7787e7fbe",
                    "sha256:fde2d01656b6e0a7be7e899d237c95269da9697e5e1c90e061d39682c0a309d4",
                    "sha256:0203de8b3984581bfcd33b7b6c71182d8f93752a50dffc033a0c016d02dd3cc8"
                ]
            },
            "variant": "v8"
        },
        "latest-run-20231103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                },
                "OnBuild": null
            },
            "created": "2023-11-06T01:05:40.231993362Z",
            "history": [
                {
                    "created": "2023-10-05T07:32:20.951880606Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T07:32:21.015770292Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T07:32:21.080364699Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T07:32:21.153596992Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T07:32:22.639154667Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f8594e26831508c318e42c8dfd9942041031087b8de1bf3fec11fd75b8b30fd4 in / "
                },
                {
                    "created": "2023-10-05T07:32:22.848629339Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:42:26.099059735Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:42:26.099059735Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:42:26.099059735Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:45:34.259078886Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:45:35.342603498Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:45:35.342603498Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:45:35.342603498Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:45:35.54098196Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:45:35.568397242Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:45:35.588929428Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:45:35.606804938Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:45:35.606804938Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:45:37.38438037Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:45:37.560859106Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T01:05:40.127404642Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T01:05:40.127404642Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T01:05:40.231993362Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d2d3127fc3d362a0516c53fcb8fb983ebb9d1ea2dfbd63b69967a0084f0d45a3",
                    "sha256:10d443a89e642fe0b654249aeaf8bab4bcaaff359469729746bcf8c3241a97a9",
                    "sha256:f12d1c92fcdedc951a85ecbdc9d891651c9b03345450ff58f4f6ed3d1e875529",
                    "sha256:32a3d52ec67454977739f6e7a73f3e5c5986448701054fc6c5fa301b3506febb",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5404be9f26b2de792e3a835a087e9fc32d210318c0cac541ec39560fbc37fa09",
                    "sha256:62cc72e6e0b17dc250f4fb916acec294669629b1bb227e42d4898bc3f1ceb65f",
                    "sha256:3b39c17b1c6d3d260b788455c8c91a74d07191d21680dc48ff42f49ced28ac0b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:15af4a4eddbf67d577754196c8e9c1b01d0ff122deb12c53608acde408929328",
                    "sha256:c7c9a0a8349b22dd0f136ea938ee49bd0f4051f5ea066b96afdbe914efc5de99",
                    "sha256:0ae0d71f7f9017192df1dea1f564518812b189f9dd845329ddc90f269d3c90f4"
                ]
            },
            "variant": "v8"
        },
        "latest-run-20240103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                },
                "OnBuild": null
            },
            "created": "2024-01-05T12:02:53.118433161Z",
            "history": [
                {
                    "created": "2023-12-12T11:41:50.758603714Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:41:50.869361588Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:41:50.981745008Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:41:51.093819154Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:41:54.146264118Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50f947da69b3b6c63695be9c49eee16f7a7dcdecdceb51e5bee1609b845bf483 in / "
                },
                {
                    "created": "2023-12-12T11:41:54.521050543Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:44:32.928365316Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:44:32.928365316Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:44:32.928365316Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:31.817746676Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:32.78934311Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:32.78934311Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:46:32.78934311Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:46:32.932763963Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:32.98071649Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:32.991085243Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:33.000875247Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:33.000875247Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:46:34.094944699Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:34.213393498Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T12:02:53.012607201Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T12:02:53.012607201Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T12:02:53.118433161Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3e798a66607c97d027570dbbc112c32956981fbcc244bb2d4d1fddbce4cda84c",
                    "sha256:2e80ca486da4411dd0fec1cb0259ef173c62232fbbe60840b5545c69c0fb586f",
                    "sha256:acf9093499d05e7ea73879d4c847e171497cb3bf2cb28024c73387b604202842",
                    "sha256:ad39e05fd4bbe30d5a56af6ff638c51ab486a6d35bd68a230cb50ea30744dfb3",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:308d9a7b689b399750c10022e08a49643987885d64d68a3d172159361029b865",
                    "sha256:c91850d3827f25311e2ab8770645f4d7353e5b945060f7d9eb64b5e37e47cdb3",
                    "sha256:8fbef8bff8fa00578568f3fc095176b16bfef7cc768a375bf314e031ef82eb57",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f2cfb4098741be87d1c2f5a4af897292332eac7285b71af5e2e68f83c10d547f",
                    "sha256:a846361021ce8a43ef1823d57a8d92eef1bf740934c97c3d27a11548a2965415",
                    "sha256:2a0434d0a39a5006671e7d244fef0ca84743f03dea0adc607e6f3c8a73cd8398"
                ]
            },
            "variant": "v8"
        },
        "latest-run-20240105": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                },
                "OnBuild": null
            },
            "created": "2024-01-06T07:55:35.98119432Z",
            "history": [
                {
                    "created": "2023-12-12T11:41:50.758603714Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:41:50.869361588Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:41:50.981745008Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:41:51.093819154Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:41:54.146264118Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50f947da69b3b6c63695be9c49eee16f7a7dcdecdceb51e5bee1609b845bf483 in / "
                },
                {
                    "created": "2023-12-12T11:41:54.521050543Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:37:52.719890317Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:37:52.719890317Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:37:52.719890317Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:44.68383672Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:45.24617781Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:45.24617781Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:39:45.24617781Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:39:45.393470696Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:45.445245009Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:45.454514748Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:45.464356521Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:45.464356521Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:39:46.694653805Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:46.80732869Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:55:35.876752162Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:55:35.876752162Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:55:35.98119432Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3e798a66607c97d027570dbbc112c32956981fbcc244bb2d4d1fddbce4cda84c",
                    "sha256:06f199958bd4bf23fdd093651f2fded886cfd510f924b035e3778a6b3ced8d02",
                    "sha256:c98bc4703039eb0431773191cecc6af09b53b8f99ee046ba4dfd112763f7de42",
                    "sha256:d64970f18b174ccdc31d58582f24b0401663e973e81699d978e77a6a3dd90f19",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ac14ba889ceb708b209faf5e1feb12af78c8d094462a61fc691d0b0aac610e64",
                    "sha256:7ea7282951c60a62d47abc4a180fc3fdc8e85b96fa9ce9ccf26e086a9d9fed23",
                    "sha256:9bc1e596ac05cea9597de16d9d793a37966b4da0b57b9306cb6f4eab4da3dbc0",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:615998ebaa076cb1f7ed838a1a6164c074b4979e566706ca6d5862ce6b727c33",
                    "sha256:6f884b55abc68468e2c919dd9c19eb298af72bbdec42c9477ad6d34cf2824ae8",
                    "sha256:f7c671bf97f1df35894ae6f6fe4f8833ee513bd4db9385792a76fcd1ace2afbe"
                ]
            },
            "variant": "v8"
        },
        "latest-run-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                }
            },
            "created": "2024-04-06T13:38:44.879767741Z",
            "history": [
                {
                    "created": "2024-02-27T18:53:22.490310908Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T18:53:22.539283006Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T18:53:22.59951827Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T18:53:22.648922452Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T18:53:25.140932403Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:07cdbabf782942af04487c9da03de50a611a51e69d8bac1f593acb73a3ba3a46 in / "
                },
                {
                    "created": "2024-02-27T18:53:25.397886996Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:20:52.447123568Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:20:52.447123568Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:20:52.447123568Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:46.136639138Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:46.672812142Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:46.672812142Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:22:46.672812142Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:22:46.789043867Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:46.801794101Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:46.837911774Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:46.848970589Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:46.848970589Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:22:47.737012242Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:47.874181626Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:38:44.767427419Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:38:44.767427419Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:38:44.879767741Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a510ae0f066c65d73f523d5821fe048a6858e53360ecb8d39b7b931162f11479",
                    "sha256:43c1435efbd6a805475b6a69ed2afea4421be979091a971f530b219a1ce24cd9",
                    "sha256:e37f3ca660bcc311e960bcea5d2c9df82900567c09cd643d5f1d4daa39c810e7",
                    "sha256:3839ee8dd9a6dc7cbb4afc83940c3b88151d70ba57d3886ee1296b5db7da0ae7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:77504a1f2690cadb7b6b7aae94be4d28f9f58dcf3c8c6c7bee7b23c0c30e7582",
                    "sha256:9459da29ee9ac2f7e12d595eafca0d2d1f0637d68f6b071fe101f1b64b632585",
                    "sha256:cb0901504bd0e19c9232086b08b0e4835bc7c8a76691405b1dc830adee2ed6d5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:18821c7845f9f0aa9381d55d092efcc647571f926ba8e8198fe6a5ac352260df",
                    "sha256:f9ecea3f3853e467055455b994bf74116f94d38d7b5fbabaa0536a94e146bb4e",
                    "sha256:50db4c8cdcf855056432aecf4ccdf80bc0e15409dbdbad6098f7e3c02466e307"
                ]
            },
            "variant": "v8"
        },
        "latest-run-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                }
            },
            "created": "2024-04-09T18:52:59.102361258Z",
            "history": [
                {
                    "created": "2024-02-27T18:53:22.490310908Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T18:53:22.539283006Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T18:53:22.59951827Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T18:53:22.648922452Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T18:53:25.140932403Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:07cdbabf782942af04487c9da03de50a611a51e69d8bac1f593acb73a3ba3a46 in / "
                },
                {
                    "created": "2024-02-27T18:53:25.397886996Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:47.461373506Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:47.461373506Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:47.461373506Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:43.100120348Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:43.649843389Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:43.649843389Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:43.649843389Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:43.766584201Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:43.776851848Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:43.785956822Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:43.795637979Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:43.795637979Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:44.705220102Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:44.823651141Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T18:52:58.997668861Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T18:52:58.997668861Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T18:52:59.102361258Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a510ae0f066c65d73f523d5821fe048a6858e53360ecb8d39b7b931162f11479",
                    "sha256:755a5181e5cf3dc59d0d45df350e621f8f70fba87a9e128453149fdde7d6ec13",
                    "sha256:bc3eb4fdfc82ec2711ae80e36e01fcf5f44d6be01e59e0101cdf79da46b187a5",
                    "sha256:02854098a3656cb8daac9692ef973e560528ede1eb6752702f15dec8702afba2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a70167e146c331d507a4700240a8dad7047ffbda396a3d152fb55b91ec179808",
                    "sha256:9c02956fcc7d415d1f3bd2340c6905be7b40a107e3852ced3bf12842ccd8c502",
                    "sha256:15cacaf774edf7d6221e2d6014bb5ac3604f5912c908450cd10bd6324cfba332",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f7bd9f5560827cd12577ee9ed4e229cedcd48ed2e4d45a53df473eb210efde01",
                    "sha256:5a88d24cf58ed32b1cb1ee0fd6f16414ca862e09411f7bf6038ffd08be255508",
                    "sha256:9436603e67f8ef0a8cf6af8fd08185ff7696ff4b8b70f4425f9c1066d459603a"
                ]
            },
            "variant": "v8"
        },
        "latest-run-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                }
            },
            "created": "2024-05-02T02:40:02.09133632Z",
            "history": [
                {
                    "created": "2024-04-27T14:32:22.643440355Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:32:22.768221855Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:32:22.922781285Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:32:23.070247637Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:32:33.475488206Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:18035d0a8c59e3306bad4219c71a52b03397fc8f231baf7f676287c73024d85c in / "
                },
                {
                    "created": "2024-04-27T14:32:33.989941961Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:18.216101982Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:18.216101982Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:18.216101982Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:21.912464985Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:22.625610903Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:22.625610903Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:24:22.625610903Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:24:22.739350403Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:22.750532225Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:22.759557887Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:22.792378776Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:22.792378776Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:24:23.712437353Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:23.834897531Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:40:01.977748969Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:40:01.977748969Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:40:02.09133632Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:842bef16b8fb80459504b4621523ac3d78faf7e01d6d9fa7076ed6d4a8f49830",
                    "sha256:0640e720188f6528f7c748e336f11a09d9d00729e4c36eb2bbe129f8a763d070",
                    "sha256:da00f81eef79ae72a2a6e39658ba370fdc81df4c094e54e6a589f711e7c05f0d",
                    "sha256:16497e63f0b712dabe742045e338b44077718e77481804d3a7724223446a164b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:aabd4e14de0df6a5f9f1a6579c3040ed27fca9cd89f3657928a4b239e2e86e75",
                    "sha256:5f6d921eddb8660b20b548ace680919f1b42147cf88460f36aa40005e1aa336a",
                    "sha256:c56d8196358aa702245257319ec5bdcbf5176851d7fef2e97a20cd495170743e",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3817267cec6b73a0e47e08025ef532290d5f261f3fbf1a42ed49176789c09b27",
                    "sha256:070b1a3316674d91b65504d1eb226dfd4fd381c8bb452d8dd49156030aa90fc2",
                    "sha256:85e6e6342cb0f9b27b344a63573bdaad71104c22aa6f59ee24fb6af673be4617"
                ]
            },
            "variant": "v8"
        },
        "lunar": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "23.04"
                }
            },
            "created": "2024-04-09T18:52:32.817529664Z",
            "history": [
                {
                    "created": "2023-11-28T09:09:50.239976645Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-28T09:09:50.394431534Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-28T09:09:50.481520551Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-28T09:09:50.563012715Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=23.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-28T09:09:53.063295821Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6859e1ffc351c0e88484a54fa40a0e572765d4c34180b05901ea0adab3a5928b in / "
                },
                {
                    "created": "2023-11-28T09:09:53.366668631Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:46.549408891Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:46.549408891Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:46.549408891Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:00.580384677Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:01.142279218Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:01.142279218Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:38:01.142279218Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:38:01.270254411Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:01.280996655Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:01.291597788Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:01.337672636Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:01.337672636Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:38:02.202771988Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu lunar   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:02.320225808Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu lunar \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T18:52:32.720280485Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T18:52:32.720280485Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T18:52:32.817529664Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu lunar \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:19fa6aa6d9f79cd02bbb4994b9ccc81e6f0832c9652defd05f7d608ea5a3f5e1",
                    "sha256:0fa55eeb44539b0e2fdb831d57c812ddf4402ca5e5b449ea68679128fbd3a968",
                    "sha256:8f4d5905218250e6ea05b793380247c1fe94708a9b82842c083acecde9ac9eca",
                    "sha256:f7ff3a8614e1b0ff504194030bc9203f8a1d1fa4c537f5fe807ae26027d03cff",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1352590b4e8d90584ef0e03c224dc585774663319dd682af4446abaa5eb01d3c",
                    "sha256:f2b27f75dda741f4aac7deb7b57ac5d332f75eda5ea06f1c0e643e74a0204204",
                    "sha256:c5e512b9d9d30ee066349eff9da8dcd50627718f5c10dd248f2004bfca9ce25d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:978d8d74a2b9a05342b66d37ca1f00bda7c9fdf1672f1c6ffc283c3f80252799",
                    "sha256:f3fa0569087c45c99dd871f5a55a0f29bf5b299cda2a9f8684fb75b8cfd2f54f",
                    "sha256:83649cedd61a433973b87785f77244e7bd4a16ac23061abbdacc8ec1aeae1cd4"
                ]
            },
            "variant": "v8"
        },
        "lunar-20230829": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "23.04"
                },
                "OnBuild": null
            },
            "created": "2023-09-02T04:34:24.273714417Z",
            "history": [
                {
                    "created": "2023-08-16T04:15:57.618909988Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T04:15:57.743670375Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T04:15:57.874271018Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T04:15:57.995398266Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=23.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T04:16:01.81194819Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:adea2962926b29b76eb8da76ae9e830c5ad7050ae9b19f5427191b338c8a2c56 in / "
                },
                {
                    "created": "2023-08-16T04:16:02.222739767Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T03:51:07.203352283Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T03:51:07.203352283Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T03:51:07.203352283Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:55:21.975519421Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:55:22.935068105Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:55:22.935068105Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T03:55:22.935068105Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T03:55:23.382888879Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:55:23.410632816Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:55:23.417414548Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:55:23.424426183Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:55:23.424426183Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T03:55:24.713712854Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu lunar   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:55:24.992640556Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu lunar \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:33:32.760155694Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:33:32.760155694Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r32.7 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t186 r32.7 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:34:23.993230769Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:34:24.273714417Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu lunar \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8a543fdf1b88c16a1845a75d541e2b6522dc4e98aee392cee3ba1154968a4e70",
                    "sha256:a2c07724eb5b0f53a843f16faadb835274f6dd0295100463dda6b5c6f767d405",
                    "sha256:cfafda73743be588533459385faeebc16ca6134342de42669e6e224e3f13506d",
                    "sha256:42ff8e7c4e8d9874120cf134be489f6a1f6bc983d953b8c3e102625ef1194912",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:84496be3d46a1461e49c0eacbfc08466571eb9a4baa65aba9aa769a0e530fbe0",
                    "sha256:02e748f706b64934e1e7217aab2d37e3202b161b7277c4b747f6694c7bb220a3",
                    "sha256:e40094533ef719adea8e94fa09df45555c52a61a9524fa0d9d1fa781e06224f0",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:fe32e7f4d9d3dff5abcdaef303f6a5b737ed10522faf86865cb1669ee7e6a50c",
                    "sha256:a5975c845f40dc482d9bb48c65d80cb7b80c7be155b06292929b27ddccc0d13a",
                    "sha256:749d0999a1402f048f5c9e21224ec8ae16d63d70414ccaaf05558bfec976a863",
                    "sha256:10187cf797574642f3698cbcba232bdc06e883881cce9bd69a427ea8df3b01be"
                ]
            }
        },
        "lunar-20230904": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "23.04"
                },
                "OnBuild": null
            },
            "created": "2023-09-09T04:34:16.44883051Z",
            "history": [
                {
                    "created": "2023-08-16T04:15:57.618909988Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T04:15:57.743670375Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T04:15:57.874271018Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T04:15:57.995398266Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=23.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T04:16:01.81194819Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:adea2962926b29b76eb8da76ae9e830c5ad7050ae9b19f5427191b338c8a2c56 in / "
                },
                {
                    "created": "2023-08-16T04:16:02.222739767Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:50:44.282975977Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:50:44.282975977Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:50:44.282975977Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:54:59.329118108Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:07:05.056187355Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:07:05.056187355Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:07:05.056187355Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:07:05.345523604Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:07:05.375288872Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:07:05.386716851Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:07:05.395588391Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:07:05.395588391Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:07:06.689860227Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu lunar   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:07:07.021518165Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu lunar \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:33:22.235409531Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:33:22.235409531Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r32.7 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t186 r32.7 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:34:16.123375931Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:34:16.44883051Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu lunar \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8a543fdf1b88c16a1845a75d541e2b6522dc4e98aee392cee3ba1154968a4e70",
                    "sha256:abbc58bb79af4047a13d9f17ed6389711afbe11f5ecb17d4daf36d5486a56dce",
                    "sha256:dc67123c79caa1cf202ee1990451bf4a3fc870c1f73e3d1afc9610f9a40ce08a",
                    "sha256:eea033810e4256baf099365df64b6e22bae25e7f4f602eca0cc8f4ff78af0dad",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:585a6c034268b84a563d3b216cf11bc020ecf6c6ebee9698efbd9c228c359fb7",
                    "sha256:7f42b5412e00c2956ee39135948b62fb1102356819513432e10347a6f9e7e520",
                    "sha256:53c8f8a6900719a8ece851c7e5808a6e2a97ef5b16f3e83adae73a0ecf36bdc5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c8b0a94f0b1331313cf97b7e8566e5475b02e0db2b287d286374966be3056f7c",
                    "sha256:bf8b5639810c6bd37f2c56b20a62ec6a0b64b13ebdcf72ccd99bf6fa2c7d90f8",
                    "sha256:edc38ab9a3a1070a5656d95cf126dd2a580ca71a335fa02200e659e2db790f9a",
                    "sha256:57c5cdd1e27817cbe80db6b536a6b1b2cc3bf73181ee89128dd784f6676d93b6"
                ]
            }
        },
        "lunar-20230911": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "23.04"
                },
                "OnBuild": null
            },
            "created": "2023-09-11T23:11:59.109614718Z",
            "history": [
                {
                    "created": "2023-08-16T04:15:57.618909988Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T04:15:57.743670375Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T04:15:57.874271018Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T04:15:57.995398266Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=23.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T04:16:01.81194819Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:adea2962926b29b76eb8da76ae9e830c5ad7050ae9b19f5427191b338c8a2c56 in / "
                },
                {
                    "created": "2023-08-16T04:16:02.222739767Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:50:44.282975977Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:50:44.282975977Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:50:44.282975977Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:54:59.329118108Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:07:05.056187355Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:07:05.056187355Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:07:05.056187355Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:07:05.345523604Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:07:05.375288872Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:07:05.386716851Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:07:05.395588391Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:07:05.395588391Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:07:06.689860227Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu lunar   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:07:07.021518165Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu lunar \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T23:11:58.975125115Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-11T23:11:58.975125115Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T23:11:59.109614718Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu lunar \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8a543fdf1b88c16a1845a75d541e2b6522dc4e98aee392cee3ba1154968a4e70",
                    "sha256:abbc58bb79af4047a13d9f17ed6389711afbe11f5ecb17d4daf36d5486a56dce",
                    "sha256:dc67123c79caa1cf202ee1990451bf4a3fc870c1f73e3d1afc9610f9a40ce08a",
                    "sha256:eea033810e4256baf099365df64b6e22bae25e7f4f602eca0cc8f4ff78af0dad",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:585a6c034268b84a563d3b216cf11bc020ecf6c6ebee9698efbd9c228c359fb7",
                    "sha256:7f42b5412e00c2956ee39135948b62fb1102356819513432e10347a6f9e7e520",
                    "sha256:53c8f8a6900719a8ece851c7e5808a6e2a97ef5b16f3e83adae73a0ecf36bdc5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c8b0a94f0b1331313cf97b7e8566e5475b02e0db2b287d286374966be3056f7c",
                    "sha256:d6e2c1582be3c54872e72540f1fbb2887fc2e3fb4ef92378b6a24601485d16f6",
                    "sha256:68f506a79e85480029bf105d789f71d365d9cabb127cf388c991e38615412b25"
                ]
            }
        },
        "lunar-20231026": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "23.04"
                },
                "OnBuild": null
            },
            "created": "2023-11-02T15:44:46.303039542Z",
            "history": [
                {
                    "created": "2023-10-04T12:23:52.08911398Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T12:23:52.151722521Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T12:23:52.211860547Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T12:23:52.269358377Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=23.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T12:23:53.872249082Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c9b1098bc90ac9b887c3bffdffbcff0c32f32e48df9a673041e3aa796296e69b in / "
                },
                {
                    "created": "2023-10-04T12:23:54.113275114Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:17:45.241680611Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:17:45.241680611Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:17:45.241680611Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:23:15.886189349Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:23:17.142334083Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:23:17.142334083Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:23:17.142334083Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:23:17.381543899Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:23:17.404850354Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:23:17.433558767Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:23:17.464474805Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:23:17.464474805Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:23:19.197763557Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu lunar   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:23:19.384201395Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu lunar \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:44:46.16463933Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:44:46.16463933Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:44:46.303039542Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu lunar \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a9ac48c5896a3360e7b0b1000af9a95de102d077b352cfa28fbc7e21228c10c7",
                    "sha256:681f8b2f1b766752f49d95a3f906779e44126c23813c669689c48a356d314d76",
                    "sha256:9c992a8784e664f93d518989e3caf9bbc7c4867be7476f555ecb2b7a186bee00",
                    "sha256:f0c6a9d8758f1f422a40f1140fd2493c679774abda75152c1c10c74ed178c7ee",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:03d355916f52569f9697a63ffc3a9aca0c78bbd7c5e7be94fe29b526e2036efb",
                    "sha256:a527733344fb29f62a3992afcfc7acf2ae7710694cc724596ca5a92086108ef9",
                    "sha256:1442e6e56572cd708b4ac8677bc159b410dcddf69c13b528360d5d2c20e0e212",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:6800795dc6022ce0af36e0f2aec7f3ad43237d72278a955109b44b8e81e6cc9c",
                    "sha256:99e90de56d5128fdd6a3b284767b21dd06e9fdf5744cf644ce39acdd68de0ca1",
                    "sha256:e11e100795964999134419b3116f3d4763a38632a8197b6e10d8626c36a05b1e"
                ]
            },
            "variant": "v8"
        },
        "lunar-20231103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "23.04"
                },
                "OnBuild": null
            },
            "created": "2023-11-06T01:05:37.538030026Z",
            "history": [
                {
                    "created": "2023-10-04T12:23:52.08911398Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T12:23:52.151722521Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T12:23:52.211860547Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T12:23:52.269358377Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=23.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T12:23:53.872249082Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c9b1098bc90ac9b887c3bffdffbcff0c32f32e48df9a673041e3aa796296e69b in / "
                },
                {
                    "created": "2023-10-04T12:23:54.113275114Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:42:05.404216025Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:42:05.404216025Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:42:05.404216025Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:46:14.26120761Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:46:15.316064827Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:46:15.316064827Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:46:15.316064827Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:46:15.457982447Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:46:15.467343282Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:46:15.475774524Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:46:15.484810361Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:46:15.484810361Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:46:16.813402587Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu lunar   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:46:16.956682598Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu lunar \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T01:05:37.399593888Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T01:05:37.399593888Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T01:05:37.538030026Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu lunar \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a9ac48c5896a3360e7b0b1000af9a95de102d077b352cfa28fbc7e21228c10c7",
                    "sha256:11af1196ea42fed2b0c9cae699474f449ec0c969d8786715a80ffef17e319d64",
                    "sha256:bf36e7d6ea3c9aa4a07e60f433f2f594432a6aa8c168d0fc2f128b763baf27f1",
                    "sha256:17ed44402dddae8b2da405f2de7d0c07962b01f0c8aafe7daf4c9d197f2f014a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ca0ab672ee847192057aaa724f750d9fe8771a51d7d5b3c1ea21d486c73d771a",
                    "sha256:78bbed576dff14fe74b83334ff75cf2f568860cf493ef6953c669f940f599de1",
                    "sha256:f63223afefe39a0a96cb647eabebd0b25b4ae50e7e57d71a1dec45b6b2927836",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d2dad2efad9efd759fffc2a85187a66f17681bcac1a81dd1b67eb7d5d9dad03f",
                    "sha256:b5f769d6979524900959ad1a1e25618dbd10d7a60339bb02616ecf1908069ca2",
                    "sha256:d6cb5353e81a5bd39963e559c679cd931d18697a0628b1a8a02b1e19d78f07e5"
                ]
            },
            "variant": "v8"
        },
        "lunar-20240103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "23.04"
                },
                "OnBuild": null
            },
            "created": "2024-01-05T12:03:00.929684953Z",
            "history": [
                {
                    "created": "2023-11-28T09:09:50.239976645Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-28T09:09:50.394431534Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-28T09:09:50.481520551Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-28T09:09:50.563012715Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=23.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-28T09:09:53.063295821Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6859e1ffc351c0e88484a54fa40a0e572765d4c34180b05901ea0adab3a5928b in / "
                },
                {
                    "created": "2023-11-28T09:09:53.366668631Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:44:23.691820912Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:44:23.691820912Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:44:23.691820912Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:47:38.576453895Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:47:39.134759434Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:47:39.134759434Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:47:39.134759434Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:47:39.253123751Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:47:39.264325555Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:47:39.296601375Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:47:39.307730473Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:47:39.307730473Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:47:40.180623429Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu lunar   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:47:40.303546876Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu lunar \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T12:03:00.822928615Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T12:03:00.822928615Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T12:03:00.929684953Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu lunar \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:19fa6aa6d9f79cd02bbb4994b9ccc81e6f0832c9652defd05f7d608ea5a3f5e1",
                    "sha256:0a566b6b47638be9dcb35d3d66b48f1aadcc78aa951d446b967540168dc126c1",
                    "sha256:2412a832ef9c8fa6163db1a82aa8237189cd51cf4943a8f82936f6b8294e9a70",
                    "sha256:8641ccbdd1e705d7b3c1f596f89e37066e4a10d047e77b4c71a595d4f4146d42",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1493e815b2ba031e76adb3135805556b65340f9221e23c2b9d7e25bbcb879c79",
                    "sha256:4f9fdfd98ac4b00627f401715aa41ad137225e644ae10c91853e1dedd7b95254",
                    "sha256:a0b45cca249480cff7d443946eee6edf767480a2c520255e562ae8c7649d7a3e",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:41584e193b516e781c5a2a362aaa5174075ad2ce038fd0a0359add20b1fee156",
                    "sha256:50405204b8ec9525905c2bb167b782996c7c93b0c8b5d03b0fe6c5a410c2b200",
                    "sha256:ab9df6002f3d64b5120cc1a5bba901b0aebad9507ca52429841e7ff368321354"
                ]
            },
            "variant": "v8"
        },
        "lunar-20240105": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "23.04"
                },
                "OnBuild": null
            },
            "created": "2024-01-06T07:55:36.342402165Z",
            "history": [
                {
                    "created": "2023-11-28T09:09:50.239976645Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-28T09:09:50.394431534Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-28T09:09:50.481520551Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-28T09:09:50.563012715Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=23.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-28T09:09:53.063295821Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6859e1ffc351c0e88484a54fa40a0e572765d4c34180b05901ea0adab3a5928b in / "
                },
                {
                    "created": "2023-11-28T09:09:53.366668631Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:37:57.846518912Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:37:57.846518912Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:37:57.846518912Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:41:14.304772969Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:41:15.323847532Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:41:15.323847532Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:41:15.323847532Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:41:15.4282392Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:41:15.440443804Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:41:15.478604199Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:41:15.506588004Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:41:15.506588004Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:41:16.507373553Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu lunar   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:41:16.622063628Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu lunar \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:55:36.235338704Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:55:36.235338704Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:55:36.342402165Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu lunar \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:19fa6aa6d9f79cd02bbb4994b9ccc81e6f0832c9652defd05f7d608ea5a3f5e1",
                    "sha256:373018a7bddce0fa37ece9f8ebd45bd108f8e0869bdee9ed1c1fe61d40b99a97",
                    "sha256:e5614d27cae70e423cd050d791a2413457316382fd66a22a830b3508150f2802",
                    "sha256:f46e3f5c6035e36f74d75370ec5ed44b7f62af16cdd4b34adb0de34be36bdedf",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:6fff8faa2c3819122ec8572d30857dc800bbe53d5eb0de9a61b92633b8ab7a60",
                    "sha256:af08ac1ad5e908e7a9a2ef4d3587be3548eb519ad8dcc873521f14c3b59f05ef",
                    "sha256:8305bec354e7d6b4ffd7531e90cb9e41a875a096bebe66308827d7fb914aff9c",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:6d9c1f42a43a1dcfbf2cd7f90066e705a74d39fbeb0f7aed33e3c2245e4bf5a5",
                    "sha256:90df586add562f1a037f93d0de7f411812ed5a16f16c78eaac7eb598fffc59dd",
                    "sha256:287f8dc8ac8a7b3f31ec0e3c047a7c4950591b19805826fdf9d462ddeab8e279"
                ]
            },
            "variant": "v8"
        },
        "lunar-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "23.04"
                }
            },
            "created": "2024-04-06T13:38:51.482075369Z",
            "history": [
                {
                    "created": "2023-11-28T09:09:50.239976645Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-28T09:09:50.394431534Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-28T09:09:50.481520551Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-28T09:09:50.563012715Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=23.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-28T09:09:53.063295821Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6859e1ffc351c0e88484a54fa40a0e572765d4c34180b05901ea0adab3a5928b in / "
                },
                {
                    "created": "2023-11-28T09:09:53.366668631Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:20:45.147460254Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:20:45.147460254Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:20:45.147460254Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:23:56.292973415Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:23:57.092762771Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:23:57.092762771Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:23:57.092762771Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:23:57.203897431Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:23:57.213311181Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:23:57.223017886Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:23:57.253761152Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:23:57.253761152Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:23:58.105826105Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu lunar   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:23:58.221867936Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu lunar \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:38:51.389705155Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:38:51.389705155Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:38:51.482075369Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu lunar \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:19fa6aa6d9f79cd02bbb4994b9ccc81e6f0832c9652defd05f7d608ea5a3f5e1",
                    "sha256:4063d09b058f7cd64f9f0fe560ed6157e3fe1ca1e92dc5d7e29a3aee6ca54ddf",
                    "sha256:26961832e7e63044193d967a96fd110f285cdb9c87ea6ae438b2bff911892d01",
                    "sha256:83a99d72cca297bcc5eb4a5e8b29c98fedbcd52bc1ffa400e51d327ac50ee4d1",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:fd3057d14a36ce44d9c030e2929fae371fc906b28645b9b3275d7aab721f2e02",
                    "sha256:65a7f9c8b3bb7ea373b8e17afceaca40fc68807b951917de9cf53fc38db8eb27",
                    "sha256:db324da2a63abe2e3811e94c46d93231c518fe779be27dd52d615c750f0244bf",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0d6e4a8b4aabd4c4ad40bd23d36e5d30d4102991ddadb50292e00f25a543f13b",
                    "sha256:1f1606b8eb0e5367236a098718c7d73f9e0a903856ade81c57887b1300be6d18",
                    "sha256:5ed15596b3b46d8b9548542e5758f9c7fec64348b5f2c5bfff0f94ec853dace5"
                ]
            },
            "variant": "v8"
        },
        "lunar-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "23.04"
                }
            },
            "created": "2024-04-09T18:52:32.817529664Z",
            "history": [
                {
                    "created": "2023-11-28T09:09:50.239976645Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-28T09:09:50.394431534Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-28T09:09:50.481520551Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-28T09:09:50.563012715Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=23.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-28T09:09:53.063295821Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6859e1ffc351c0e88484a54fa40a0e572765d4c34180b05901ea0adab3a5928b in / "
                },
                {
                    "created": "2023-11-28T09:09:53.366668631Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:46.549408891Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:46.549408891Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:46.549408891Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:00.580384677Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:01.142279218Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:01.142279218Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:38:01.142279218Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:38:01.270254411Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:01.280996655Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:01.291597788Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:01.337672636Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:01.337672636Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:38:02.202771988Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu lunar   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:02.320225808Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu lunar \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T18:52:32.720280485Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T18:52:32.720280485Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T18:52:32.817529664Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu lunar \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:19fa6aa6d9f79cd02bbb4994b9ccc81e6f0832c9652defd05f7d608ea5a3f5e1",
                    "sha256:0fa55eeb44539b0e2fdb831d57c812ddf4402ca5e5b449ea68679128fbd3a968",
                    "sha256:8f4d5905218250e6ea05b793380247c1fe94708a9b82842c083acecde9ac9eca",
                    "sha256:f7ff3a8614e1b0ff504194030bc9203f8a1d1fa4c537f5fe807ae26027d03cff",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1352590b4e8d90584ef0e03c224dc585774663319dd682af4446abaa5eb01d3c",
                    "sha256:f2b27f75dda741f4aac7deb7b57ac5d332f75eda5ea06f1c0e643e74a0204204",
                    "sha256:c5e512b9d9d30ee066349eff9da8dcd50627718f5c10dd248f2004bfca9ce25d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:978d8d74a2b9a05342b66d37ca1f00bda7c9fdf1672f1c6ffc283c3f80252799",
                    "sha256:f3fa0569087c45c99dd871f5a55a0f29bf5b299cda2a9f8684fb75b8cfd2f54f",
                    "sha256:83649cedd61a433973b87785f77244e7bd4a16ac23061abbdacc8ec1aeae1cd4"
                ]
            },
            "variant": "v8"
        },
        "lunar-build": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "23.04"
                }
            },
            "created": "2024-04-09T18:53:25.372829753Z",
            "history": [
                {
                    "created": "2023-11-28T09:09:50.239976645Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-28T09:09:50.394431534Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-28T09:09:50.481520551Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-28T09:09:50.563012715Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=23.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-28T09:09:53.063295821Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6859e1ffc351c0e88484a54fa40a0e572765d4c34180b05901ea0adab3a5928b in / "
                },
                {
                    "created": "2023-11-28T09:09:53.366668631Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:51.600129943Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:51.600129943Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:51.600129943Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:05.1905071Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:41:13.610777895Z",
                    "created_by": "RUN /bin/sh -c install_packages \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:41:14.246992547Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:41:14.246992547Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:41:14.246992547Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:41:14.366249635Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:41:14.376877386Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:41:14.386869273Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:41:14.41872852Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:41:14.41872852Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:41:15.264527537Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu lunar   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:41:15.380997009Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu lunar \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T18:53:25.288234399Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T18:53:25.288234399Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T18:53:25.372829753Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu lunar \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:19fa6aa6d9f79cd02bbb4994b9ccc81e6f0832c9652defd05f7d608ea5a3f5e1",
                    "sha256:9f460e4ac8e609a42baa671ffca9f81f7647e2787d0b1e6d7519ba9d96e7cec7",
                    "sha256:5820ab32118b3cfaa2a6306bb46aeeb734a2e55c76e45fbabda2f4f9f3ddcde7",
                    "sha256:ae2f1e0eff152ce70788b74050ecd1843adb8ef71a9736584dacb793b54b851b",
                    "sha256:e6e13fcc1f71302ada8160c51fafc9e218806d415f52f1415080eeeab1d46b85",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:57a39256a396f0662cfa998b0768efad22bf51c3acbc63e7795686d9b663228c",
                    "sha256:7dd639191513bd716c23760ae2ec7b275cc87a9f31e7dc41fb3a6dd42654c4c4",
                    "sha256:e10cae93487168d2e6703fe88a3ea2824bc910f77ce4564030f3163780c19b1a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ebb328509732d9d55978e02f1bc0880a83a5c7c0ef455a9f013ecfd5c93f0afb",
                    "sha256:4a16c853569c08d27f588b5012c53ccf006dc369e5820c59d601e0e011a4d97a",
                    "sha256:afe12c3fa9d84b40a76e1520876aafb1eb298b1ddf985380689bd5ab12ec6564"
                ]
            },
            "variant": "v8"
        },
        "lunar-build-20230829": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "23.04"
                },
                "OnBuild": null
            },
            "created": "2023-09-02T04:35:50.5745366Z",
            "history": [
                {
                    "created": "2023-08-16T04:15:57.618909988Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T04:15:57.743670375Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T04:15:57.874271018Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T04:15:57.995398266Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=23.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T04:16:01.81194819Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:adea2962926b29b76eb8da76ae9e830c5ad7050ae9b19f5427191b338c8a2c56 in / "
                },
                {
                    "created": "2023-08-16T04:16:02.222739767Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T03:51:07.203352283Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T03:51:07.203352283Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T03:51:07.203352283Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:55:21.975519421Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:59:33.707313155Z",
                    "created_by": "RUN /bin/sh -c install_packages \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:59:34.570891976Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:59:34.570891976Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T03:59:34.570891976Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T03:59:34.998799075Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:59:35.013012259Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:59:35.02009175Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:59:35.028639561Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:59:35.028639561Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T03:59:36.373381865Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu lunar   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:59:36.663131315Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu lunar \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:35:02.756500361Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:35:02.756500361Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r32.7 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t186 r32.7 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:35:50.268678558Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:35:50.5745366Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu lunar \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8a543fdf1b88c16a1845a75d541e2b6522dc4e98aee392cee3ba1154968a4e70",
                    "sha256:a2c07724eb5b0f53a843f16faadb835274f6dd0295100463dda6b5c6f767d405",
                    "sha256:cfafda73743be588533459385faeebc16ca6134342de42669e6e224e3f13506d",
                    "sha256:e949f692f32a8456bc5741c73f2e748d08d77531b7916809eea2300be71221fb",
                    "sha256:6952617f57bb620cddad4acf48f588797b5b8332f6071b3bead5076aaff856c8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2f962fdc6527ee764c32000696c92b1c4ce6daa0c6efa90f8fd41737bea786c1",
                    "sha256:607e9d99b696f8e2fc4aa8b66980cd1b04e294ad990292f6a04f4b232761c60c",
                    "sha256:b3d4d0827e15821c6d549b24ee44c4b0d58dc7d2c84e333c62c6217a9ecd38fa",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5d48a1714e38bb97002cdcd2ffae7d9f340813feefdef9e4f5552d2cbd8e28ec",
                    "sha256:b8f05f8b935fb4998ccf5e1db1657e28e0f7e0f61ff996fdc76cade0458f7db4",
                    "sha256:dc2f5191b239ca4a19d354074f8bf308996288ccdd896d38a002b91092ee7a30",
                    "sha256:057965cfbe0d2fd05a6c19beb7f0fe475ea2475c42e71307e768c9f9238508e8"
                ]
            }
        },
        "lunar-build-20230904": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "23.04"
                },
                "OnBuild": null
            },
            "created": "2023-09-09T04:33:04.092302201Z",
            "history": [
                {
                    "created": "2023-08-16T04:15:57.618909988Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T04:15:57.743670375Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T04:15:57.874271018Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T04:15:57.995398266Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=23.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T04:16:01.81194819Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:adea2962926b29b76eb8da76ae9e830c5ad7050ae9b19f5427191b338c8a2c56 in / "
                },
                {
                    "created": "2023-08-16T04:16:02.222739767Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:50:44.282975977Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:50:44.282975977Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:50:44.282975977Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:54:59.329118108Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:58:57.342597407Z",
                    "created_by": "RUN /bin/sh -c install_packages \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:58:58.313959693Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:58:58.313959693Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:58:58.313959693Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:58:58.740488964Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:58:58.761846133Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:58:58.771978209Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:58:58.792924671Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:58:58.792924671Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:00.053877662Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu lunar   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:59:00.491707828Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu lunar \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:32:13.693101727Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:32:13.693101727Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r32.7 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t186 r32.7 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:33:03.846888097Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:33:04.092302201Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu lunar \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8a543fdf1b88c16a1845a75d541e2b6522dc4e98aee392cee3ba1154968a4e70",
                    "sha256:abbc58bb79af4047a13d9f17ed6389711afbe11f5ecb17d4daf36d5486a56dce",
                    "sha256:dc67123c79caa1cf202ee1990451bf4a3fc870c1f73e3d1afc9610f9a40ce08a",
                    "sha256:cd5055b1cc1bf0b13b258435f66e38126ac91443cbcaae1361a4bf0c1192cdf3",
                    "sha256:073eac0b32aa5d6d4e5b79308b8af4e6f7fa84b22e447e3a47b7231b0af1aa78",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2fe18440c6a29e64097d7388bfe885bede28412f5c6ab319350385fe74d0aac7",
                    "sha256:03ff6b5697c633fec79bc51be5ffe051349bd1e4f8ee162e079d31a17c2f6781",
                    "sha256:4f8c43767f18ced1887b38c75dde2fb0de3e8b634933887fa9b9fdb591bdb732",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:593df58e3392943d84b4eb260cdcec76d30ca333dc0bb1faa569ac5561c19eba",
                    "sha256:0d0a7c7fb8698f36d6e5a582555689658b4ffd50bf357f5a03df93e33bdc2d9b",
                    "sha256:44d5eb40fb402e0bc2bd31f5cd427feafe38609a349e8a53e27d91de2907d4dc",
                    "sha256:aa925d15b77f1bcbc1e8ef774ea9b7726ed85678536c57d1aa5fff7f63b84203"
                ]
            }
        },
        "lunar-build-20230911": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "23.04"
                },
                "OnBuild": null
            },
            "created": "2023-09-11T23:11:36.174611974Z",
            "history": [
                {
                    "created": "2023-08-16T04:15:57.618909988Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T04:15:57.743670375Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T04:15:57.874271018Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T04:15:57.995398266Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=23.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T04:16:01.81194819Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:adea2962926b29b76eb8da76ae9e830c5ad7050ae9b19f5427191b338c8a2c56 in / "
                },
                {
                    "created": "2023-08-16T04:16:02.222739767Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:50:44.282975977Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:50:44.282975977Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:50:44.282975977Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:54:59.329118108Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:58:57.342597407Z",
                    "created_by": "RUN /bin/sh -c install_packages \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:58:58.313959693Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:58:58.313959693Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:58:58.313959693Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:58:58.740488964Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:58:58.761846133Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:58:58.771978209Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:58:58.792924671Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:58:58.792924671Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:00.053877662Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu lunar   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:59:00.491707828Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu lunar \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T23:11:36.067668107Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-11T23:11:36.067668107Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T23:11:36.174611974Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu lunar \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8a543fdf1b88c16a1845a75d541e2b6522dc4e98aee392cee3ba1154968a4e70",
                    "sha256:abbc58bb79af4047a13d9f17ed6389711afbe11f5ecb17d4daf36d5486a56dce",
                    "sha256:dc67123c79caa1cf202ee1990451bf4a3fc870c1f73e3d1afc9610f9a40ce08a",
                    "sha256:cd5055b1cc1bf0b13b258435f66e38126ac91443cbcaae1361a4bf0c1192cdf3",
                    "sha256:073eac0b32aa5d6d4e5b79308b8af4e6f7fa84b22e447e3a47b7231b0af1aa78",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2fe18440c6a29e64097d7388bfe885bede28412f5c6ab319350385fe74d0aac7",
                    "sha256:03ff6b5697c633fec79bc51be5ffe051349bd1e4f8ee162e079d31a17c2f6781",
                    "sha256:4f8c43767f18ced1887b38c75dde2fb0de3e8b634933887fa9b9fdb591bdb732",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:593df58e3392943d84b4eb260cdcec76d30ca333dc0bb1faa569ac5561c19eba",
                    "sha256:3c0cdc2462540f41bdaa7209dd7b2c0af5d3c6229116139e2cd4e81814f4cc72",
                    "sha256:d05c1c033316c12247c2d9cb0c1b020541f82c097e26906b8631571bd0adc334"
                ]
            }
        },
        "lunar-build-20231026": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "23.04"
                },
                "OnBuild": null
            },
            "created": "2023-11-02T15:45:33.310296769Z",
            "history": [
                {
                    "created": "2023-10-04T12:23:52.08911398Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T12:23:52.151722521Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T12:23:52.211860547Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T12:23:52.269358377Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=23.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T12:23:53.872249082Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c9b1098bc90ac9b887c3bffdffbcff0c32f32e48df9a673041e3aa796296e69b in / "
                },
                {
                    "created": "2023-10-04T12:23:54.113275114Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:17:37.710388038Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:17:37.710388038Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:17:37.710388038Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:21:57.404280843Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:26:00.054381099Z",
                    "created_by": "RUN /bin/sh -c install_packages \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:26:00.86824668Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:26:00.86824668Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:26:00.86824668Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:26:01.025903845Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:26:01.036362189Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:26:01.046106223Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:26:01.055151247Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:26:01.055151247Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:26:02.175455437Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu lunar   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:26:02.338473177Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu lunar \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:45:33.194700346Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:45:33.194700346Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:45:33.310296769Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu lunar \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a9ac48c5896a3360e7b0b1000af9a95de102d077b352cfa28fbc7e21228c10c7",
                    "sha256:7b2e8ad1bfcf1ed4ae9b53f06fc3dbf2261e2cc1288a2601e1a3ad4f549dceb0",
                    "sha256:4edb17141c55e02c1c319616d3e45073baaaf2ecc8a25a774d3a4130c4edf3e1",
                    "sha256:8d653693a572a6741c825e01225b1ccab3b114c624454d68244999bf3523215c",
                    "sha256:4f37270a40dbb8038b9525fd4d24b272634471408dc34fd498b6d52373239a51",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:29e212a3b79de4b1fe2cbe47de80d205c818870cdd29eca797d8ef310bdcd5e2",
                    "sha256:95f2d22c0db10ddfc0fce580f551d9d8a1709ccabaf1e1bdd53d9b8ed5cdd7f5",
                    "sha256:a8b51a716aa76e04b65ddb01deeedc13ba7ae87e149a6242b04b7f6f69043d8a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3f522c5d8f90a5e146eca8f1f1896b69a8bd3080181ef3af1c8b51f0acedcc1b",
                    "sha256:e0fe711ecdb4e4dea4269fe1b28d2456d9b2150d661111f2a460a63c85847c2e",
                    "sha256:ace97c365bbb68dde33e92a36e23b197a9d92bb338c43f8b775f9ad3e805a282"
                ]
            },
            "variant": "v8"
        },
        "lunar-build-20231103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "23.04"
                },
                "OnBuild": null
            },
            "created": "2023-11-06T01:06:38.719963448Z",
            "history": [
                {
                    "created": "2023-10-04T12:23:52.08911398Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T12:23:52.151722521Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T12:23:52.211860547Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T12:23:52.269358377Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=23.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T12:23:53.872249082Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c9b1098bc90ac9b887c3bffdffbcff0c32f32e48df9a673041e3aa796296e69b in / "
                },
                {
                    "created": "2023-10-04T12:23:54.113275114Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:42:02.11676502Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:42:02.11676502Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:42:02.11676502Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:45:23.230870898Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:48:45.694823359Z",
                    "created_by": "RUN /bin/sh -c install_packages \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:48:46.744726154Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:48:46.744726154Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:48:46.744726154Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:48:46.889502654Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:48:46.90184531Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:48:46.911775207Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:48:46.923596128Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:48:46.923596128Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:48:47.761557498Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu lunar   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:48:47.899376931Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu lunar \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T01:06:38.536941124Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T01:06:38.536941124Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T01:06:38.719963448Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu lunar \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a9ac48c5896a3360e7b0b1000af9a95de102d077b352cfa28fbc7e21228c10c7",
                    "sha256:b40d292ed27c15d4a0b8bc82c5383637a3895a3dbd5ca86ba6d2547a942afdb5",
                    "sha256:b36af961f9dd70da529b3bf7649b7443953d2abf6ee85a60b46d3941a2210a96",
                    "sha256:27abc8da11010f390e828e61aa5a024431b97d30859cf62fa3b5fa5568886b25",
                    "sha256:bc8a8d69e0494f66fc5d167942661c0b96b850224789e4402e52395215b1ba9d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:05d8868b15590ffc1796472f1d85a1b701439690509719b773adcf8dc87ea2f4",
                    "sha256:24f01180094e2b9ba2d4c65eaff45b516b20ea62258ebcad1330efd4fc54a094",
                    "sha256:2d1a5a45ef471208ea792c1a56778eb455e562180b698d207f3f22ecb65748bb",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5c8de2090840f5d116c59c03a0bf3398c928dd7f7bd27cbab211b78471db98a9",
                    "sha256:79cbbe4eb60684c6107d55d46d092340e7fe9f5b498027368490ce69af9b4605",
                    "sha256:caa03a3858a2616e10ed360a08829eea7d03ba9212b0a51e7eb186f22e287d37"
                ]
            },
            "variant": "v8"
        },
        "lunar-build-20240103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "23.04"
                },
                "OnBuild": null
            },
            "created": "2024-01-05T12:03:01.418313399Z",
            "history": [
                {
                    "created": "2023-11-28T09:09:50.239976645Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-28T09:09:50.394431534Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-28T09:09:50.481520551Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-28T09:09:50.563012715Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=23.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-28T09:09:53.063295821Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6859e1ffc351c0e88484a54fa40a0e572765d4c34180b05901ea0adab3a5928b in / "
                },
                {
                    "created": "2023-11-28T09:09:53.366668631Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:44:22.236003016Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:44:22.236003016Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:44:22.236003016Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:47:37.680786238Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:50:49.639970003Z",
                    "created_by": "RUN /bin/sh -c install_packages \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:50:50.293628397Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:50:50.293628397Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:50:50.293628397Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:50:50.410675304Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:50:50.421780806Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:50:50.467120952Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:50:50.479703908Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:50:50.479703908Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:50:51.351537165Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu lunar   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:50:51.476833014Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu lunar \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T12:03:01.321744311Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T12:03:01.321744311Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T12:03:01.418313399Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu lunar \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:19fa6aa6d9f79cd02bbb4994b9ccc81e6f0832c9652defd05f7d608ea5a3f5e1",
                    "sha256:c8ca5435bf3c3e9cff274ca939a5cbd89471fe5b9ca9b18736cdaf1c08aaf0ab",
                    "sha256:e2467809064e1d41b70ad3389d4fbb87575f05bb3a08ede0354658fa38e5345b",
                    "sha256:3a0251ddf6b0d149477804d9c3ab30c3fa4a5c10985a2d1272574d8c38940ccb",
                    "sha256:66af0dc09e77ad20bce8af15771483b0192aee380a0d098455d107ab1cbea875",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1905abd79a8c9377e1eca8eccdef60c0ccaba672d4c7e2948b5cd6be8a927519",
                    "sha256:f48f8bc476418d14816592a8b5e9616298da9691e509676efc1fed262a5af7b4",
                    "sha256:624e308fc89598733918ede418bf841ca3dd15bbe4b5f7dda5f17f56dd0e1f39",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:dc3c566a9be9b9f6d6b400f0c4ddadc2a51febb2eb54f0e13ae7bb92c647ff18",
                    "sha256:ba8abb3bdecdbf18f2b54687dcb2110e968481df325a1fac2bcf9c19f1f66b86",
                    "sha256:160d4ec335cc9bfb75d96820200ba62fbe0f843e20458e9e81977820bc893bae"
                ]
            },
            "variant": "v8"
        },
        "lunar-build-20240105": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "23.04"
                },
                "OnBuild": null
            },
            "created": "2024-01-06T07:55:47.085814964Z",
            "history": [
                {
                    "created": "2023-11-28T09:09:50.239976645Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-28T09:09:50.394431534Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-28T09:09:50.481520551Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-28T09:09:50.563012715Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=23.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-28T09:09:53.063295821Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6859e1ffc351c0e88484a54fa40a0e572765d4c34180b05901ea0adab3a5928b in / "
                },
                {
                    "created": "2023-11-28T09:09:53.366668631Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:37:57.880141087Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:37:57.880141087Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:37:57.880141087Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:41:13.061157376Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:44:37.149621471Z",
                    "created_by": "RUN /bin/sh -c install_packages \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:44:38.271945491Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:44:38.271945491Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:44:38.271945491Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:44:38.405494458Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:44:38.414871419Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:44:38.451997525Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:44:38.479949387Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:44:38.479949387Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:44:39.330411834Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu lunar   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:44:39.459272404Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu lunar \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:55:46.994607731Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:55:46.994607731Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:55:47.085814964Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu lunar \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:19fa6aa6d9f79cd02bbb4994b9ccc81e6f0832c9652defd05f7d608ea5a3f5e1",
                    "sha256:373018a7bddce0fa37ece9f8ebd45bd108f8e0869bdee9ed1c1fe61d40b99a97",
                    "sha256:dc415254626a2b159d492d174193b5be0e46937f7cd8094e91b4b098a1a869f6",
                    "sha256:b1bafe0b2481e4b2828eedf89c0a8841b0ac3dc088230a199ff0293fbefc43de",
                    "sha256:905123bb3bae4197bcafcb389a9d4d1ee1d9feeb83b1e520ea9b7fc5812bd3bf",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ae689fa4dd50ee999a428fbc2926f800ea1a671b5e8637dcafb0601c817e1404",
                    "sha256:5519e258568e6ba5446f7fc0c6baea78f75c2b1d5e9bfa9903a5422deefd0080",
                    "sha256:c50d3b7eb17e83ae9bc8e773a97d53b5ad4f8884c9558b9822a267775ca54267",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e9c75571c4d181e527c00230aec75fe3b354d2acd9738f599e2a82abd239a568",
                    "sha256:5acb25a156ec345200e90433d407855d625d170aa7a2c0565aca8585c2295715",
                    "sha256:6d7db3ae8d345dff379e5ec01b430d5f5ef4ea47b742f42610cae18340f0b677"
                ]
            },
            "variant": "v8"
        },
        "lunar-build-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "23.04"
                }
            },
            "created": "2024-04-06T13:38:48.463544203Z",
            "history": [
                {
                    "created": "2023-11-28T09:09:50.239976645Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-28T09:09:50.394431534Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-28T09:09:50.481520551Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-28T09:09:50.563012715Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=23.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-28T09:09:53.063295821Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6859e1ffc351c0e88484a54fa40a0e572765d4c34180b05901ea0adab3a5928b in / "
                },
                {
                    "created": "2023-11-28T09:09:53.366668631Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:20:51.103073195Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:20:51.103073195Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:20:51.103073195Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:24:08.943183034Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:27:36.129807269Z",
                    "created_by": "RUN /bin/sh -c install_packages \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:27:37.209713494Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:27:37.209713494Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:27:37.209713494Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:27:37.319103924Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:27:37.328122555Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:27:37.336761478Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:27:37.36752971Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:27:37.36752971Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:27:38.221837002Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu lunar   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:27:38.338091971Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu lunar \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:38:48.374183997Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:38:48.374183997Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:38:48.463544203Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu lunar \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:19fa6aa6d9f79cd02bbb4994b9ccc81e6f0832c9652defd05f7d608ea5a3f5e1",
                    "sha256:86b5ee9e0a205522139f13f5cef5add36672b90d8e666307a74018b4b7b264f0",
                    "sha256:590b366dd8f98e6673279826b45475e0ba739f226efc370c29555ec6ac3c730e",
                    "sha256:27c355fda5ce8b7d485f4312946e8d3277786acde0c3b2d994f05a014dca6cf7",
                    "sha256:7ae909131da15f79a41d17f95ceb6342f1e913f87224387a4b2cf1eb1bf7bea8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9d429e41e61872f12172513f5d9994110ea3b74d90413331bc418e091f0712a2",
                    "sha256:8ac678e32ab6770202b0b7905ff25eafd281c7098522838dca1c16ef3ea3be23",
                    "sha256:e9ce67c282d0ddd2b30a8939d36a4b896a4803222e3a4699d126f6b6c7a07fd9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f60f96ba8a783e71afb7adad96a2c7fd703d7e79779264b2ca70d48afcf1dd44",
                    "sha256:c5ab7dcaa02b2574f6fa2bf14eac1573fb712e6730b1d746fc5d98aaef5f0efd",
                    "sha256:80e49587f5993bf232c0fb1b9d598413d22568e932c0e2de5eee9067bb52b1a8"
                ]
            },
            "variant": "v8"
        },
        "lunar-build-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "23.04"
                }
            },
            "created": "2024-04-09T18:53:25.372829753Z",
            "history": [
                {
                    "created": "2023-11-28T09:09:50.239976645Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-28T09:09:50.394431534Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-28T09:09:50.481520551Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-28T09:09:50.563012715Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=23.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-28T09:09:53.063295821Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6859e1ffc351c0e88484a54fa40a0e572765d4c34180b05901ea0adab3a5928b in / "
                },
                {
                    "created": "2023-11-28T09:09:53.366668631Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:51.600129943Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:51.600129943Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:51.600129943Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:05.1905071Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:41:13.610777895Z",
                    "created_by": "RUN /bin/sh -c install_packages \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:41:14.246992547Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:41:14.246992547Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:41:14.246992547Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:41:14.366249635Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:41:14.376877386Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:41:14.386869273Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:41:14.41872852Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:41:14.41872852Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:41:15.264527537Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu lunar   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:41:15.380997009Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu lunar \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T18:53:25.288234399Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T18:53:25.288234399Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T18:53:25.372829753Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu lunar \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:19fa6aa6d9f79cd02bbb4994b9ccc81e6f0832c9652defd05f7d608ea5a3f5e1",
                    "sha256:9f460e4ac8e609a42baa671ffca9f81f7647e2787d0b1e6d7519ba9d96e7cec7",
                    "sha256:5820ab32118b3cfaa2a6306bb46aeeb734a2e55c76e45fbabda2f4f9f3ddcde7",
                    "sha256:ae2f1e0eff152ce70788b74050ecd1843adb8ef71a9736584dacb793b54b851b",
                    "sha256:e6e13fcc1f71302ada8160c51fafc9e218806d415f52f1415080eeeab1d46b85",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:57a39256a396f0662cfa998b0768efad22bf51c3acbc63e7795686d9b663228c",
                    "sha256:7dd639191513bd716c23760ae2ec7b275cc87a9f31e7dc41fb3a6dd42654c4c4",
                    "sha256:e10cae93487168d2e6703fe88a3ea2824bc910f77ce4564030f3163780c19b1a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ebb328509732d9d55978e02f1bc0880a83a5c7c0ef455a9f013ecfd5c93f0afb",
                    "sha256:4a16c853569c08d27f588b5012c53ccf006dc369e5820c59d601e0e011a4d97a",
                    "sha256:afe12c3fa9d84b40a76e1520876aafb1eb298b1ddf985380689bd5ab12ec6564"
                ]
            },
            "variant": "v8"
        },
        "lunar-run": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "23.04"
                }
            },
            "created": "2024-04-09T18:52:32.817529664Z",
            "history": [
                {
                    "created": "2023-11-28T09:09:50.239976645Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-28T09:09:50.394431534Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-28T09:09:50.481520551Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-28T09:09:50.563012715Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=23.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-28T09:09:53.063295821Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6859e1ffc351c0e88484a54fa40a0e572765d4c34180b05901ea0adab3a5928b in / "
                },
                {
                    "created": "2023-11-28T09:09:53.366668631Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:46.549408891Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:46.549408891Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:46.549408891Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:00.580384677Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:01.142279218Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:01.142279218Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:38:01.142279218Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:38:01.270254411Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:01.280996655Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:01.291597788Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:01.337672636Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:01.337672636Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:38:02.202771988Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu lunar   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:02.320225808Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu lunar \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T18:52:32.720280485Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T18:52:32.720280485Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T18:52:32.817529664Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu lunar \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:19fa6aa6d9f79cd02bbb4994b9ccc81e6f0832c9652defd05f7d608ea5a3f5e1",
                    "sha256:0fa55eeb44539b0e2fdb831d57c812ddf4402ca5e5b449ea68679128fbd3a968",
                    "sha256:8f4d5905218250e6ea05b793380247c1fe94708a9b82842c083acecde9ac9eca",
                    "sha256:f7ff3a8614e1b0ff504194030bc9203f8a1d1fa4c537f5fe807ae26027d03cff",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1352590b4e8d90584ef0e03c224dc585774663319dd682af4446abaa5eb01d3c",
                    "sha256:f2b27f75dda741f4aac7deb7b57ac5d332f75eda5ea06f1c0e643e74a0204204",
                    "sha256:c5e512b9d9d30ee066349eff9da8dcd50627718f5c10dd248f2004bfca9ce25d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:978d8d74a2b9a05342b66d37ca1f00bda7c9fdf1672f1c6ffc283c3f80252799",
                    "sha256:f3fa0569087c45c99dd871f5a55a0f29bf5b299cda2a9f8684fb75b8cfd2f54f",
                    "sha256:83649cedd61a433973b87785f77244e7bd4a16ac23061abbdacc8ec1aeae1cd4"
                ]
            },
            "variant": "v8"
        },
        "lunar-run-20230829": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "23.04"
                },
                "OnBuild": null
            },
            "created": "2023-09-02T04:34:24.273714417Z",
            "history": [
                {
                    "created": "2023-08-16T04:15:57.618909988Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T04:15:57.743670375Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T04:15:57.874271018Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T04:15:57.995398266Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=23.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T04:16:01.81194819Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:adea2962926b29b76eb8da76ae9e830c5ad7050ae9b19f5427191b338c8a2c56 in / "
                },
                {
                    "created": "2023-08-16T04:16:02.222739767Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T03:51:07.203352283Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T03:51:07.203352283Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T03:51:07.203352283Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:55:21.975519421Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:55:22.935068105Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:55:22.935068105Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T03:55:22.935068105Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T03:55:23.382888879Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:55:23.410632816Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:55:23.417414548Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:55:23.424426183Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:55:23.424426183Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T03:55:24.713712854Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu lunar   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:55:24.992640556Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu lunar \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:33:32.760155694Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:33:32.760155694Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r32.7 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t186 r32.7 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:34:23.993230769Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:34:24.273714417Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu lunar \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8a543fdf1b88c16a1845a75d541e2b6522dc4e98aee392cee3ba1154968a4e70",
                    "sha256:a2c07724eb5b0f53a843f16faadb835274f6dd0295100463dda6b5c6f767d405",
                    "sha256:cfafda73743be588533459385faeebc16ca6134342de42669e6e224e3f13506d",
                    "sha256:42ff8e7c4e8d9874120cf134be489f6a1f6bc983d953b8c3e102625ef1194912",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:84496be3d46a1461e49c0eacbfc08466571eb9a4baa65aba9aa769a0e530fbe0",
                    "sha256:02e748f706b64934e1e7217aab2d37e3202b161b7277c4b747f6694c7bb220a3",
                    "sha256:e40094533ef719adea8e94fa09df45555c52a61a9524fa0d9d1fa781e06224f0",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:fe32e7f4d9d3dff5abcdaef303f6a5b737ed10522faf86865cb1669ee7e6a50c",
                    "sha256:a5975c845f40dc482d9bb48c65d80cb7b80c7be155b06292929b27ddccc0d13a",
                    "sha256:749d0999a1402f048f5c9e21224ec8ae16d63d70414ccaaf05558bfec976a863",
                    "sha256:10187cf797574642f3698cbcba232bdc06e883881cce9bd69a427ea8df3b01be"
                ]
            }
        },
        "lunar-run-20230904": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "23.04"
                },
                "OnBuild": null
            },
            "created": "2023-09-09T04:34:16.44883051Z",
            "history": [
                {
                    "created": "2023-08-16T04:15:57.618909988Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T04:15:57.743670375Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T04:15:57.874271018Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T04:15:57.995398266Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=23.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T04:16:01.81194819Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:adea2962926b29b76eb8da76ae9e830c5ad7050ae9b19f5427191b338c8a2c56 in / "
                },
                {
                    "created": "2023-08-16T04:16:02.222739767Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:50:44.282975977Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:50:44.282975977Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:50:44.282975977Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:54:59.329118108Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:07:05.056187355Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:07:05.056187355Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:07:05.056187355Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:07:05.345523604Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:07:05.375288872Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:07:05.386716851Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:07:05.395588391Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:07:05.395588391Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:07:06.689860227Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu lunar   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:07:07.021518165Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu lunar \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:33:22.235409531Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:33:22.235409531Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r32.7 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t186 r32.7 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:34:16.123375931Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:34:16.44883051Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu lunar \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8a543fdf1b88c16a1845a75d541e2b6522dc4e98aee392cee3ba1154968a4e70",
                    "sha256:abbc58bb79af4047a13d9f17ed6389711afbe11f5ecb17d4daf36d5486a56dce",
                    "sha256:dc67123c79caa1cf202ee1990451bf4a3fc870c1f73e3d1afc9610f9a40ce08a",
                    "sha256:eea033810e4256baf099365df64b6e22bae25e7f4f602eca0cc8f4ff78af0dad",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:585a6c034268b84a563d3b216cf11bc020ecf6c6ebee9698efbd9c228c359fb7",
                    "sha256:7f42b5412e00c2956ee39135948b62fb1102356819513432e10347a6f9e7e520",
                    "sha256:53c8f8a6900719a8ece851c7e5808a6e2a97ef5b16f3e83adae73a0ecf36bdc5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c8b0a94f0b1331313cf97b7e8566e5475b02e0db2b287d286374966be3056f7c",
                    "sha256:bf8b5639810c6bd37f2c56b20a62ec6a0b64b13ebdcf72ccd99bf6fa2c7d90f8",
                    "sha256:edc38ab9a3a1070a5656d95cf126dd2a580ca71a335fa02200e659e2db790f9a",
                    "sha256:57c5cdd1e27817cbe80db6b536a6b1b2cc3bf73181ee89128dd784f6676d93b6"
                ]
            }
        },
        "lunar-run-20230911": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "23.04"
                },
                "OnBuild": null
            },
            "created": "2023-09-11T23:11:59.109614718Z",
            "history": [
                {
                    "created": "2023-08-16T04:15:57.618909988Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T04:15:57.743670375Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T04:15:57.874271018Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T04:15:57.995398266Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=23.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T04:16:01.81194819Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:adea2962926b29b76eb8da76ae9e830c5ad7050ae9b19f5427191b338c8a2c56 in / "
                },
                {
                    "created": "2023-08-16T04:16:02.222739767Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:50:44.282975977Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:50:44.282975977Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:50:44.282975977Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:54:59.329118108Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:07:05.056187355Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:07:05.056187355Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:07:05.056187355Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:07:05.345523604Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:07:05.375288872Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:07:05.386716851Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:07:05.395588391Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:07:05.395588391Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:07:06.689860227Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu lunar   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:07:07.021518165Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu lunar \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T23:11:58.975125115Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-11T23:11:58.975125115Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T23:11:59.109614718Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu lunar \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8a543fdf1b88c16a1845a75d541e2b6522dc4e98aee392cee3ba1154968a4e70",
                    "sha256:abbc58bb79af4047a13d9f17ed6389711afbe11f5ecb17d4daf36d5486a56dce",
                    "sha256:dc67123c79caa1cf202ee1990451bf4a3fc870c1f73e3d1afc9610f9a40ce08a",
                    "sha256:eea033810e4256baf099365df64b6e22bae25e7f4f602eca0cc8f4ff78af0dad",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:585a6c034268b84a563d3b216cf11bc020ecf6c6ebee9698efbd9c228c359fb7",
                    "sha256:7f42b5412e00c2956ee39135948b62fb1102356819513432e10347a6f9e7e520",
                    "sha256:53c8f8a6900719a8ece851c7e5808a6e2a97ef5b16f3e83adae73a0ecf36bdc5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c8b0a94f0b1331313cf97b7e8566e5475b02e0db2b287d286374966be3056f7c",
                    "sha256:d6e2c1582be3c54872e72540f1fbb2887fc2e3fb4ef92378b6a24601485d16f6",
                    "sha256:68f506a79e85480029bf105d789f71d365d9cabb127cf388c991e38615412b25"
                ]
            }
        },
        "lunar-run-20231026": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "23.04"
                },
                "OnBuild": null
            },
            "created": "2023-11-02T15:44:46.303039542Z",
            "history": [
                {
                    "created": "2023-10-04T12:23:52.08911398Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T12:23:52.151722521Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T12:23:52.211860547Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T12:23:52.269358377Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=23.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T12:23:53.872249082Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c9b1098bc90ac9b887c3bffdffbcff0c32f32e48df9a673041e3aa796296e69b in / "
                },
                {
                    "created": "2023-10-04T12:23:54.113275114Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:17:45.241680611Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:17:45.241680611Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:17:45.241680611Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:23:15.886189349Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:23:17.142334083Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:23:17.142334083Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:23:17.142334083Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:23:17.381543899Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:23:17.404850354Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:23:17.433558767Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:23:17.464474805Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:23:17.464474805Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:23:19.197763557Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu lunar   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:23:19.384201395Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu lunar \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:44:46.16463933Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:44:46.16463933Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:44:46.303039542Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu lunar \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a9ac48c5896a3360e7b0b1000af9a95de102d077b352cfa28fbc7e21228c10c7",
                    "sha256:681f8b2f1b766752f49d95a3f906779e44126c23813c669689c48a356d314d76",
                    "sha256:9c992a8784e664f93d518989e3caf9bbc7c4867be7476f555ecb2b7a186bee00",
                    "sha256:f0c6a9d8758f1f422a40f1140fd2493c679774abda75152c1c10c74ed178c7ee",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:03d355916f52569f9697a63ffc3a9aca0c78bbd7c5e7be94fe29b526e2036efb",
                    "sha256:a527733344fb29f62a3992afcfc7acf2ae7710694cc724596ca5a92086108ef9",
                    "sha256:1442e6e56572cd708b4ac8677bc159b410dcddf69c13b528360d5d2c20e0e212",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:6800795dc6022ce0af36e0f2aec7f3ad43237d72278a955109b44b8e81e6cc9c",
                    "sha256:99e90de56d5128fdd6a3b284767b21dd06e9fdf5744cf644ce39acdd68de0ca1",
                    "sha256:e11e100795964999134419b3116f3d4763a38632a8197b6e10d8626c36a05b1e"
                ]
            },
            "variant": "v8"
        },
        "lunar-run-20231103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "23.04"
                },
                "OnBuild": null
            },
            "created": "2023-11-06T01:05:37.538030026Z",
            "history": [
                {
                    "created": "2023-10-04T12:23:52.08911398Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T12:23:52.151722521Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T12:23:52.211860547Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T12:23:52.269358377Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=23.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T12:23:53.872249082Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c9b1098bc90ac9b887c3bffdffbcff0c32f32e48df9a673041e3aa796296e69b in / "
                },
                {
                    "created": "2023-10-04T12:23:54.113275114Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:42:05.404216025Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:42:05.404216025Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:42:05.404216025Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:46:14.26120761Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:46:15.316064827Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:46:15.316064827Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:46:15.316064827Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:46:15.457982447Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:46:15.467343282Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:46:15.475774524Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:46:15.484810361Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:46:15.484810361Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:46:16.813402587Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu lunar   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:46:16.956682598Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu lunar \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T01:05:37.399593888Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T01:05:37.399593888Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T01:05:37.538030026Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu lunar \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a9ac48c5896a3360e7b0b1000af9a95de102d077b352cfa28fbc7e21228c10c7",
                    "sha256:11af1196ea42fed2b0c9cae699474f449ec0c969d8786715a80ffef17e319d64",
                    "sha256:bf36e7d6ea3c9aa4a07e60f433f2f594432a6aa8c168d0fc2f128b763baf27f1",
                    "sha256:17ed44402dddae8b2da405f2de7d0c07962b01f0c8aafe7daf4c9d197f2f014a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ca0ab672ee847192057aaa724f750d9fe8771a51d7d5b3c1ea21d486c73d771a",
                    "sha256:78bbed576dff14fe74b83334ff75cf2f568860cf493ef6953c669f940f599de1",
                    "sha256:f63223afefe39a0a96cb647eabebd0b25b4ae50e7e57d71a1dec45b6b2927836",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d2dad2efad9efd759fffc2a85187a66f17681bcac1a81dd1b67eb7d5d9dad03f",
                    "sha256:b5f769d6979524900959ad1a1e25618dbd10d7a60339bb02616ecf1908069ca2",
                    "sha256:d6cb5353e81a5bd39963e559c679cd931d18697a0628b1a8a02b1e19d78f07e5"
                ]
            },
            "variant": "v8"
        },
        "lunar-run-20240103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "23.04"
                },
                "OnBuild": null
            },
            "created": "2024-01-05T12:03:00.929684953Z",
            "history": [
                {
                    "created": "2023-11-28T09:09:50.239976645Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-28T09:09:50.394431534Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-28T09:09:50.481520551Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-28T09:09:50.563012715Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=23.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-28T09:09:53.063295821Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6859e1ffc351c0e88484a54fa40a0e572765d4c34180b05901ea0adab3a5928b in / "
                },
                {
                    "created": "2023-11-28T09:09:53.366668631Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:44:23.691820912Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:44:23.691820912Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:44:23.691820912Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:47:38.576453895Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:47:39.134759434Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:47:39.134759434Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:47:39.134759434Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:47:39.253123751Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:47:39.264325555Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:47:39.296601375Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:47:39.307730473Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:47:39.307730473Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:47:40.180623429Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu lunar   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:47:40.303546876Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu lunar \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T12:03:00.822928615Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T12:03:00.822928615Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T12:03:00.929684953Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu lunar \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:19fa6aa6d9f79cd02bbb4994b9ccc81e6f0832c9652defd05f7d608ea5a3f5e1",
                    "sha256:0a566b6b47638be9dcb35d3d66b48f1aadcc78aa951d446b967540168dc126c1",
                    "sha256:2412a832ef9c8fa6163db1a82aa8237189cd51cf4943a8f82936f6b8294e9a70",
                    "sha256:8641ccbdd1e705d7b3c1f596f89e37066e4a10d047e77b4c71a595d4f4146d42",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1493e815b2ba031e76adb3135805556b65340f9221e23c2b9d7e25bbcb879c79",
                    "sha256:4f9fdfd98ac4b00627f401715aa41ad137225e644ae10c91853e1dedd7b95254",
                    "sha256:a0b45cca249480cff7d443946eee6edf767480a2c520255e562ae8c7649d7a3e",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:41584e193b516e781c5a2a362aaa5174075ad2ce038fd0a0359add20b1fee156",
                    "sha256:50405204b8ec9525905c2bb167b782996c7c93b0c8b5d03b0fe6c5a410c2b200",
                    "sha256:ab9df6002f3d64b5120cc1a5bba901b0aebad9507ca52429841e7ff368321354"
                ]
            },
            "variant": "v8"
        },
        "lunar-run-20240105": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "23.04"
                },
                "OnBuild": null
            },
            "created": "2024-01-06T07:55:36.342402165Z",
            "history": [
                {
                    "created": "2023-11-28T09:09:50.239976645Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-28T09:09:50.394431534Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-28T09:09:50.481520551Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-28T09:09:50.563012715Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=23.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-28T09:09:53.063295821Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6859e1ffc351c0e88484a54fa40a0e572765d4c34180b05901ea0adab3a5928b in / "
                },
                {
                    "created": "2023-11-28T09:09:53.366668631Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:37:57.846518912Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:37:57.846518912Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:37:57.846518912Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:41:14.304772969Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:41:15.323847532Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:41:15.323847532Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:41:15.323847532Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:41:15.4282392Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:41:15.440443804Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:41:15.478604199Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:41:15.506588004Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:41:15.506588004Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:41:16.507373553Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu lunar   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:41:16.622063628Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu lunar \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:55:36.235338704Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:55:36.235338704Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:55:36.342402165Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu lunar \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:19fa6aa6d9f79cd02bbb4994b9ccc81e6f0832c9652defd05f7d608ea5a3f5e1",
                    "sha256:373018a7bddce0fa37ece9f8ebd45bd108f8e0869bdee9ed1c1fe61d40b99a97",
                    "sha256:e5614d27cae70e423cd050d791a2413457316382fd66a22a830b3508150f2802",
                    "sha256:f46e3f5c6035e36f74d75370ec5ed44b7f62af16cdd4b34adb0de34be36bdedf",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:6fff8faa2c3819122ec8572d30857dc800bbe53d5eb0de9a61b92633b8ab7a60",
                    "sha256:af08ac1ad5e908e7a9a2ef4d3587be3548eb519ad8dcc873521f14c3b59f05ef",
                    "sha256:8305bec354e7d6b4ffd7531e90cb9e41a875a096bebe66308827d7fb914aff9c",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:6d9c1f42a43a1dcfbf2cd7f90066e705a74d39fbeb0f7aed33e3c2245e4bf5a5",
                    "sha256:90df586add562f1a037f93d0de7f411812ed5a16f16c78eaac7eb598fffc59dd",
                    "sha256:287f8dc8ac8a7b3f31ec0e3c047a7c4950591b19805826fdf9d462ddeab8e279"
                ]
            },
            "variant": "v8"
        },
        "lunar-run-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "23.04"
                }
            },
            "created": "2024-04-06T13:38:51.482075369Z",
            "history": [
                {
                    "created": "2023-11-28T09:09:50.239976645Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-28T09:09:50.394431534Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-28T09:09:50.481520551Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-28T09:09:50.563012715Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=23.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-28T09:09:53.063295821Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6859e1ffc351c0e88484a54fa40a0e572765d4c34180b05901ea0adab3a5928b in / "
                },
                {
                    "created": "2023-11-28T09:09:53.366668631Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:20:45.147460254Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:20:45.147460254Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:20:45.147460254Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:23:56.292973415Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:23:57.092762771Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:23:57.092762771Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:23:57.092762771Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:23:57.203897431Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:23:57.213311181Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:23:57.223017886Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:23:57.253761152Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:23:57.253761152Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:23:58.105826105Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu lunar   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:23:58.221867936Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu lunar \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:38:51.389705155Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:38:51.389705155Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:38:51.482075369Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu lunar \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:19fa6aa6d9f79cd02bbb4994b9ccc81e6f0832c9652defd05f7d608ea5a3f5e1",
                    "sha256:4063d09b058f7cd64f9f0fe560ed6157e3fe1ca1e92dc5d7e29a3aee6ca54ddf",
                    "sha256:26961832e7e63044193d967a96fd110f285cdb9c87ea6ae438b2bff911892d01",
                    "sha256:83a99d72cca297bcc5eb4a5e8b29c98fedbcd52bc1ffa400e51d327ac50ee4d1",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:fd3057d14a36ce44d9c030e2929fae371fc906b28645b9b3275d7aab721f2e02",
                    "sha256:65a7f9c8b3bb7ea373b8e17afceaca40fc68807b951917de9cf53fc38db8eb27",
                    "sha256:db324da2a63abe2e3811e94c46d93231c518fe779be27dd52d615c750f0244bf",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0d6e4a8b4aabd4c4ad40bd23d36e5d30d4102991ddadb50292e00f25a543f13b",
                    "sha256:1f1606b8eb0e5367236a098718c7d73f9e0a903856ade81c57887b1300be6d18",
                    "sha256:5ed15596b3b46d8b9548542e5758f9c7fec64348b5f2c5bfff0f94ec853dace5"
                ]
            },
            "variant": "v8"
        },
        "lunar-run-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "23.04"
                }
            },
            "created": "2024-04-09T18:52:32.817529664Z",
            "history": [
                {
                    "created": "2023-11-28T09:09:50.239976645Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-28T09:09:50.394431534Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-28T09:09:50.481520551Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-28T09:09:50.563012715Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=23.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-28T09:09:53.063295821Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6859e1ffc351c0e88484a54fa40a0e572765d4c34180b05901ea0adab3a5928b in / "
                },
                {
                    "created": "2023-11-28T09:09:53.366668631Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:46.549408891Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:46.549408891Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:46.549408891Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:00.580384677Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:01.142279218Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:01.142279218Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:38:01.142279218Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:38:01.270254411Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:01.280996655Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:01.291597788Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:01.337672636Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:01.337672636Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:38:02.202771988Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu lunar   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:02.320225808Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu lunar \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T18:52:32.720280485Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T18:52:32.720280485Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T18:52:32.817529664Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu lunar \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:19fa6aa6d9f79cd02bbb4994b9ccc81e6f0832c9652defd05f7d608ea5a3f5e1",
                    "sha256:0fa55eeb44539b0e2fdb831d57c812ddf4402ca5e5b449ea68679128fbd3a968",
                    "sha256:8f4d5905218250e6ea05b793380247c1fe94708a9b82842c083acecde9ac9eca",
                    "sha256:f7ff3a8614e1b0ff504194030bc9203f8a1d1fa4c537f5fe807ae26027d03cff",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1352590b4e8d90584ef0e03c224dc585774663319dd682af4446abaa5eb01d3c",
                    "sha256:f2b27f75dda741f4aac7deb7b57ac5d332f75eda5ea06f1c0e643e74a0204204",
                    "sha256:c5e512b9d9d30ee066349eff9da8dcd50627718f5c10dd248f2004bfca9ce25d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:978d8d74a2b9a05342b66d37ca1f00bda7c9fdf1672f1c6ffc283c3f80252799",
                    "sha256:f3fa0569087c45c99dd871f5a55a0f29bf5b299cda2a9f8684fb75b8cfd2f54f",
                    "sha256:83649cedd61a433973b87785f77244e7bd4a16ac23061abbdacc8ec1aeae1cd4"
                ]
            },
            "variant": "v8"
        },
        "run": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                }
            },
            "created": "2024-05-02T02:40:02.09133632Z",
            "history": [
                {
                    "created": "2024-04-27T14:32:22.643440355Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:32:22.768221855Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:32:22.922781285Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:32:23.070247637Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:32:33.475488206Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:18035d0a8c59e3306bad4219c71a52b03397fc8f231baf7f676287c73024d85c in / "
                },
                {
                    "created": "2024-04-27T14:32:33.989941961Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:18.216101982Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:18.216101982Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:18.216101982Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:21.912464985Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:22.625610903Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:22.625610903Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:24:22.625610903Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:24:22.739350403Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:22.750532225Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:22.759557887Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:22.792378776Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:22.792378776Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:24:23.712437353Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:23.834897531Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:40:01.977748969Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:40:01.977748969Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:40:02.09133632Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:842bef16b8fb80459504b4621523ac3d78faf7e01d6d9fa7076ed6d4a8f49830",
                    "sha256:0640e720188f6528f7c748e336f11a09d9d00729e4c36eb2bbe129f8a763d070",
                    "sha256:da00f81eef79ae72a2a6e39658ba370fdc81df4c094e54e6a589f711e7c05f0d",
                    "sha256:16497e63f0b712dabe742045e338b44077718e77481804d3a7724223446a164b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:aabd4e14de0df6a5f9f1a6579c3040ed27fca9cd89f3657928a4b239e2e86e75",
                    "sha256:5f6d921eddb8660b20b548ace680919f1b42147cf88460f36aa40005e1aa336a",
                    "sha256:c56d8196358aa702245257319ec5bdcbf5176851d7fef2e97a20cd495170743e",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3817267cec6b73a0e47e08025ef532290d5f261f3fbf1a42ed49176789c09b27",
                    "sha256:070b1a3316674d91b65504d1eb226dfd4fd381c8bb452d8dd49156030aa90fc2",
                    "sha256:85e6e6342cb0f9b27b344a63573bdaad71104c22aa6f59ee24fb6af673be4617"
                ]
            },
            "variant": "v8"
        },
        "run-20230829": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                },
                "OnBuild": null
            },
            "created": "2023-09-02T04:38:26.679554608Z",
            "history": [
                {
                    "created": "2023-08-16T06:19:52.511034945Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:52.678880469Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:52.846527092Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:53.017052303Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:59.127120216Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3fcf00866c55150f1ea0a5ef7b8473c39275c1fdbf6aba0acd84cacb83d0c564 in / "
                },
                {
                    "created": "2023-08-16T06:19:59.851781663Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:00:23.873526242Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:00:23.873526242Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:00:23.873526242Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:02:54.845294161Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:02:55.74234964Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:02:55.74234964Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:02:55.74234964Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:02:56.156853799Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:02:56.172046311Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:02:56.180539674Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:02:56.187494225Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:02:56.187494225Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:02:57.826653521Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:02:58.213618576Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:37:36.551201041Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:37:36.551201041Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r32.7 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t186 r32.7 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:38:26.47007244Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:38:26.679554608Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:61bbeda53374249345217a09cd78040f124ef8bc07a1612a1a186d2468f67d54",
                    "sha256:92270994fafef678580dc83e4325fa2f4ae8f3223934c22243dfe7309162be07",
                    "sha256:88be2f314b58b7c97d88f89fe1a9d2589c6951703c29dbcdee1370a38fb0eb73",
                    "sha256:4cd26e8abc8ea4578f5fd18bd7c88e1752f63a6ba2b47a2748829da6533c515e",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:dd4425b585e6ef6909b4e401069d605f63794d541cdb42bb06807d560388e5d1",
                    "sha256:ab02b38642445743fcea5363e3e2e2c152645db64fb26bf7b56d0b4b2662547f",
                    "sha256:b5bde6de6d78cc309610ed44aff8af02dc24903bd4636c9abb2e4615858e8d24",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ac15c28c9f71649b95fa1383d44e822cc7424b12c2f75d369058eb9a421a26fb",
                    "sha256:840e79a410397ef2c89aa6bbc0d269397467a0ccac93eaae377dc5f1ac017576",
                    "sha256:4753bcd57f51dfa0de52a8f29ebd5cd26d197100d81e81d34eee7f20da928c43",
                    "sha256:72eb1b1b4477f23b490cf4fb49b82965605ee90bed7b3580b38d5356823e6b78"
                ]
            }
        },
        "run-20230904": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                },
                "OnBuild": null
            },
            "created": "2023-09-09T04:35:32.847209484Z",
            "history": [
                {
                    "created": "2023-08-16T06:19:52.511034945Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:52.678880469Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:52.846527092Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:53.017052303Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:59.127120216Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3fcf00866c55150f1ea0a5ef7b8473c39275c1fdbf6aba0acd84cacb83d0c564 in / "
                },
                {
                    "created": "2023-08-16T06:19:59.851781663Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:46.93114918Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:46.93114918Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:46.93114918Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:18.952261606Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:19.761223709Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:19.761223709Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:02:19.761223709Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:02:20.194221163Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:20.21180478Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:20.222393011Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:20.247807525Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:20.247807525Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:02:21.899364646Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:22.17951671Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:34:39.875937997Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:34:39.875937997Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r32.7 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t186 r32.7 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:35:32.515089708Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:35:32.847209484Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:61bbeda53374249345217a09cd78040f124ef8bc07a1612a1a186d2468f67d54",
                    "sha256:73eb566cd0436219bfde4ac6950bfa86846113f3c3c13e59f1f7259b9fde4798",
                    "sha256:f4f141ccf9b2ed89c1994bab50acd51e197800b7914b79c9a5766edeb1e6264c",
                    "sha256:b8f42e3e6876f69f9fd6f1b2655f542d668078b48b309426774345ff5b2fa1fd",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:65a6d302256cb6db51bbd0d59145a3c145a08912581711a4b8c50fee03ee7954",
                    "sha256:aa50ec027cafedf6cfa9d5b7b797297902c54bc818224ffc5ad46c700b1f1a18",
                    "sha256:118f8ef44e94351e31e425e81210209b5d911b92a8a47eb5f456d1de5097e136",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ebee8221a712caf18485002c7e6312a65efa63454430c6e40be097c2da96770d",
                    "sha256:700852db6c013bb086661c8fac7220c7c879c0a4b5fa4221568ef8804dd5bd3f",
                    "sha256:3ab1eee539c0fc9b8c74d9ef9d398b94eb84fb663984b00a662bf0f0013d2a44",
                    "sha256:66af3d0aa2bad03237d458b7e588803cb2e3b22d46eb305fdeeb02a553899fd9"
                ]
            }
        },
        "run-20230911": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                },
                "OnBuild": null
            },
            "created": "2023-09-11T23:11:29.355189118Z",
            "history": [
                {
                    "created": "2023-08-16T06:19:52.511034945Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:52.678880469Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:52.846527092Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:53.017052303Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T06:19:59.127120216Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3fcf00866c55150f1ea0a5ef7b8473c39275c1fdbf6aba0acd84cacb83d0c564 in / "
                },
                {
                    "created": "2023-08-16T06:19:59.851781663Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:46.93114918Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:46.93114918Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:46.93114918Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:18.952261606Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:19.761223709Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:19.761223709Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:02:19.761223709Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:02:20.194221163Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:20.21180478Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:20.222393011Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:20.247807525Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:20.247807525Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:02:21.899364646Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:02:22.17951671Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T23:11:29.250286Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-11T23:11:29.250286Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T23:11:29.355189118Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:61bbeda53374249345217a09cd78040f124ef8bc07a1612a1a186d2468f67d54",
                    "sha256:73eb566cd0436219bfde4ac6950bfa86846113f3c3c13e59f1f7259b9fde4798",
                    "sha256:f4f141ccf9b2ed89c1994bab50acd51e197800b7914b79c9a5766edeb1e6264c",
                    "sha256:b8f42e3e6876f69f9fd6f1b2655f542d668078b48b309426774345ff5b2fa1fd",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:65a6d302256cb6db51bbd0d59145a3c145a08912581711a4b8c50fee03ee7954",
                    "sha256:aa50ec027cafedf6cfa9d5b7b797297902c54bc818224ffc5ad46c700b1f1a18",
                    "sha256:118f8ef44e94351e31e425e81210209b5d911b92a8a47eb5f456d1de5097e136",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ebee8221a712caf18485002c7e6312a65efa63454430c6e40be097c2da96770d",
                    "sha256:e4277096ad7051f93b36723b91a5664995e4910f530500f85dc819be543be5a5",
                    "sha256:ed2c4d9a482f2a4ac9b8a365762d1ac090db181531b17d3f53835a96a71b83be"
                ]
            }
        },
        "run-20231026": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                },
                "OnBuild": null
            },
            "created": "2023-11-02T15:45:01.662929295Z",
            "history": [
                {
                    "created": "2023-10-05T07:32:20.951880606Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T07:32:21.015770292Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T07:32:21.080364699Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T07:32:21.153596992Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T07:32:22.639154667Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f8594e26831508c318e42c8dfd9942041031087b8de1bf3fec11fd75b8b30fd4 in / "
                },
                {
                    "created": "2023-10-05T07:32:22.848629339Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:17:36.98530637Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:17:36.98530637Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:17:36.98530637Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:19:30.038036758Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:19:30.590211839Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:19:30.590211839Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:19:30.590211839Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:19:30.727463187Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:19:30.737278712Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:19:30.746163163Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:19:30.755855653Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:19:30.755855653Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:19:31.864611691Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:19:31.989038864Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:45:01.512720457Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:45:01.512720457Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:45:01.662929295Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d2d3127fc3d362a0516c53fcb8fb983ebb9d1ea2dfbd63b69967a0084f0d45a3",
                    "sha256:c243b6ba49361914e3fe9a5b150d45bb20ad99e1ee88a0b770b7d4f9f72379a9",
                    "sha256:78a2eaa1c40786ba98d4ddac8dda4a7fe3fa8784ec9d199c07bd4e06dd347b1b",
                    "sha256:abe9e87e67a428d547cfd1863fd6138073f87abb61f909e5dc88d063f811aa64",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8613ffa14109f531902ca2af59ffd55b23ce83905ee8fa46273b23cebc081816",
                    "sha256:cbf495cb182bd008ae474b08be37c1d8dc1758e42bd6ac3132f5431193c4f960",
                    "sha256:3d8d8f656c49302ea76def530da05ad3de05e09b6750296a55f8452569fa332b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1545d6d669cd3e2c6f9e758aae9bbafb3ce5d769394bde3fa61b4ee7787e7fbe",
                    "sha256:fde2d01656b6e0a7be7e899d237c95269da9697e5e1c90e061d39682c0a309d4",
                    "sha256:0203de8b3984581bfcd33b7b6c71182d8f93752a50dffc033a0c016d02dd3cc8"
                ]
            },
            "variant": "v8"
        },
        "run-20231103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                },
                "OnBuild": null
            },
            "created": "2023-11-06T01:05:40.231993362Z",
            "history": [
                {
                    "created": "2023-10-05T07:32:20.951880606Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T07:32:21.015770292Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T07:32:21.080364699Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T07:32:21.153596992Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T07:32:22.639154667Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f8594e26831508c318e42c8dfd9942041031087b8de1bf3fec11fd75b8b30fd4 in / "
                },
                {
                    "created": "2023-10-05T07:32:22.848629339Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:42:26.099059735Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:42:26.099059735Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:42:26.099059735Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:45:34.259078886Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:45:35.342603498Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:45:35.342603498Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:45:35.342603498Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:45:35.54098196Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:45:35.568397242Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:45:35.588929428Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:45:35.606804938Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:45:35.606804938Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:45:37.38438037Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:45:37.560859106Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T01:05:40.127404642Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T01:05:40.127404642Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T01:05:40.231993362Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d2d3127fc3d362a0516c53fcb8fb983ebb9d1ea2dfbd63b69967a0084f0d45a3",
                    "sha256:10d443a89e642fe0b654249aeaf8bab4bcaaff359469729746bcf8c3241a97a9",
                    "sha256:f12d1c92fcdedc951a85ecbdc9d891651c9b03345450ff58f4f6ed3d1e875529",
                    "sha256:32a3d52ec67454977739f6e7a73f3e5c5986448701054fc6c5fa301b3506febb",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5404be9f26b2de792e3a835a087e9fc32d210318c0cac541ec39560fbc37fa09",
                    "sha256:62cc72e6e0b17dc250f4fb916acec294669629b1bb227e42d4898bc3f1ceb65f",
                    "sha256:3b39c17b1c6d3d260b788455c8c91a74d07191d21680dc48ff42f49ced28ac0b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:15af4a4eddbf67d577754196c8e9c1b01d0ff122deb12c53608acde408929328",
                    "sha256:c7c9a0a8349b22dd0f136ea938ee49bd0f4051f5ea066b96afdbe914efc5de99",
                    "sha256:0ae0d71f7f9017192df1dea1f564518812b189f9dd845329ddc90f269d3c90f4"
                ]
            },
            "variant": "v8"
        },
        "run-20240103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                },
                "OnBuild": null
            },
            "created": "2024-01-05T12:02:53.118433161Z",
            "history": [
                {
                    "created": "2023-12-12T11:41:50.758603714Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:41:50.869361588Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:41:50.981745008Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:41:51.093819154Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:41:54.146264118Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50f947da69b3b6c63695be9c49eee16f7a7dcdecdceb51e5bee1609b845bf483 in / "
                },
                {
                    "created": "2023-12-12T11:41:54.521050543Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:44:32.928365316Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:44:32.928365316Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:44:32.928365316Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:31.817746676Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:32.78934311Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:32.78934311Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:46:32.78934311Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:46:32.932763963Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:32.98071649Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:32.991085243Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:33.000875247Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:33.000875247Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:46:34.094944699Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:34.213393498Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T12:02:53.012607201Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T12:02:53.012607201Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T12:02:53.118433161Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3e798a66607c97d027570dbbc112c32956981fbcc244bb2d4d1fddbce4cda84c",
                    "sha256:2e80ca486da4411dd0fec1cb0259ef173c62232fbbe60840b5545c69c0fb586f",
                    "sha256:acf9093499d05e7ea73879d4c847e171497cb3bf2cb28024c73387b604202842",
                    "sha256:ad39e05fd4bbe30d5a56af6ff638c51ab486a6d35bd68a230cb50ea30744dfb3",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:308d9a7b689b399750c10022e08a49643987885d64d68a3d172159361029b865",
                    "sha256:c91850d3827f25311e2ab8770645f4d7353e5b945060f7d9eb64b5e37e47cdb3",
                    "sha256:8fbef8bff8fa00578568f3fc095176b16bfef7cc768a375bf314e031ef82eb57",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f2cfb4098741be87d1c2f5a4af897292332eac7285b71af5e2e68f83c10d547f",
                    "sha256:a846361021ce8a43ef1823d57a8d92eef1bf740934c97c3d27a11548a2965415",
                    "sha256:2a0434d0a39a5006671e7d244fef0ca84743f03dea0adc607e6f3c8a73cd8398"
                ]
            },
            "variant": "v8"
        },
        "run-20240105": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                },
                "OnBuild": null
            },
            "created": "2024-01-06T07:55:35.98119432Z",
            "history": [
                {
                    "created": "2023-12-12T11:41:50.758603714Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:41:50.869361588Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:41:50.981745008Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:41:51.093819154Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:41:54.146264118Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50f947da69b3b6c63695be9c49eee16f7a7dcdecdceb51e5bee1609b845bf483 in / "
                },
                {
                    "created": "2023-12-12T11:41:54.521050543Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:37:52.719890317Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:37:52.719890317Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:37:52.719890317Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:44.68383672Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:45.24617781Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:45.24617781Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:39:45.24617781Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:39:45.393470696Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:45.445245009Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:45.454514748Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:45.464356521Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:45.464356521Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:39:46.694653805Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:46.80732869Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:55:35.876752162Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:55:35.876752162Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:55:35.98119432Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3e798a66607c97d027570dbbc112c32956981fbcc244bb2d4d1fddbce4cda84c",
                    "sha256:06f199958bd4bf23fdd093651f2fded886cfd510f924b035e3778a6b3ced8d02",
                    "sha256:c98bc4703039eb0431773191cecc6af09b53b8f99ee046ba4dfd112763f7de42",
                    "sha256:d64970f18b174ccdc31d58582f24b0401663e973e81699d978e77a6a3dd90f19",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ac14ba889ceb708b209faf5e1feb12af78c8d094462a61fc691d0b0aac610e64",
                    "sha256:7ea7282951c60a62d47abc4a180fc3fdc8e85b96fa9ce9ccf26e086a9d9fed23",
                    "sha256:9bc1e596ac05cea9597de16d9d793a37966b4da0b57b9306cb6f4eab4da3dbc0",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:615998ebaa076cb1f7ed838a1a6164c074b4979e566706ca6d5862ce6b727c33",
                    "sha256:6f884b55abc68468e2c919dd9c19eb298af72bbdec42c9477ad6d34cf2824ae8",
                    "sha256:f7c671bf97f1df35894ae6f6fe4f8833ee513bd4db9385792a76fcd1ace2afbe"
                ]
            },
            "variant": "v8"
        },
        "run-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                }
            },
            "created": "2024-04-06T13:38:44.879767741Z",
            "history": [
                {
                    "created": "2024-02-27T18:53:22.490310908Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T18:53:22.539283006Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T18:53:22.59951827Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T18:53:22.648922452Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T18:53:25.140932403Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:07cdbabf782942af04487c9da03de50a611a51e69d8bac1f593acb73a3ba3a46 in / "
                },
                {
                    "created": "2024-02-27T18:53:25.397886996Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:20:52.447123568Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:20:52.447123568Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:20:52.447123568Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:46.136639138Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:46.672812142Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:46.672812142Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:22:46.672812142Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:22:46.789043867Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:46.801794101Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:46.837911774Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:46.848970589Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:46.848970589Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:22:47.737012242Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:47.874181626Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:38:44.767427419Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:38:44.767427419Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:38:44.879767741Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a510ae0f066c65d73f523d5821fe048a6858e53360ecb8d39b7b931162f11479",
                    "sha256:43c1435efbd6a805475b6a69ed2afea4421be979091a971f530b219a1ce24cd9",
                    "sha256:e37f3ca660bcc311e960bcea5d2c9df82900567c09cd643d5f1d4daa39c810e7",
                    "sha256:3839ee8dd9a6dc7cbb4afc83940c3b88151d70ba57d3886ee1296b5db7da0ae7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:77504a1f2690cadb7b6b7aae94be4d28f9f58dcf3c8c6c7bee7b23c0c30e7582",
                    "sha256:9459da29ee9ac2f7e12d595eafca0d2d1f0637d68f6b071fe101f1b64b632585",
                    "sha256:cb0901504bd0e19c9232086b08b0e4835bc7c8a76691405b1dc830adee2ed6d5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:18821c7845f9f0aa9381d55d092efcc647571f926ba8e8198fe6a5ac352260df",
                    "sha256:f9ecea3f3853e467055455b994bf74116f94d38d7b5fbabaa0536a94e146bb4e",
                    "sha256:50db4c8cdcf855056432aecf4ccdf80bc0e15409dbdbad6098f7e3c02466e307"
                ]
            },
            "variant": "v8"
        },
        "run-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                }
            },
            "created": "2024-04-09T18:52:59.102361258Z",
            "history": [
                {
                    "created": "2024-02-27T18:53:22.490310908Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T18:53:22.539283006Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T18:53:22.59951827Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T18:53:22.648922452Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T18:53:25.140932403Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:07cdbabf782942af04487c9da03de50a611a51e69d8bac1f593acb73a3ba3a46 in / "
                },
                {
                    "created": "2024-02-27T18:53:25.397886996Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:47.461373506Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:47.461373506Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:47.461373506Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:43.100120348Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:43.649843389Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:43.649843389Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:43.649843389Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:43.766584201Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:43.776851848Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:43.785956822Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:43.795637979Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:43.795637979Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:44.705220102Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:44.823651141Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T18:52:58.997668861Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T18:52:58.997668861Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T18:52:59.102361258Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a510ae0f066c65d73f523d5821fe048a6858e53360ecb8d39b7b931162f11479",
                    "sha256:755a5181e5cf3dc59d0d45df350e621f8f70fba87a9e128453149fdde7d6ec13",
                    "sha256:bc3eb4fdfc82ec2711ae80e36e01fcf5f44d6be01e59e0101cdf79da46b187a5",
                    "sha256:02854098a3656cb8daac9692ef973e560528ede1eb6752702f15dec8702afba2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a70167e146c331d507a4700240a8dad7047ffbda396a3d152fb55b91ec179808",
                    "sha256:9c02956fcc7d415d1f3bd2340c6905be7b40a107e3852ced3bf12842ccd8c502",
                    "sha256:15cacaf774edf7d6221e2d6014bb5ac3604f5912c908450cd10bd6324cfba332",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f7bd9f5560827cd12577ee9ed4e229cedcd48ed2e4d45a53df473eb210efde01",
                    "sha256:5a88d24cf58ed32b1cb1ee0fd6f16414ca862e09411f7bf6038ffd08be255508",
                    "sha256:9436603e67f8ef0a8cf6af8fd08185ff7696ff4b8b70f4425f9c1066d459603a"
                ]
            },
            "variant": "v8"
        },
        "run-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                }
            },
            "created": "2024-05-02T02:40:02.09133632Z",
            "history": [
                {
                    "created": "2024-04-27T14:32:22.643440355Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:32:22.768221855Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:32:22.922781285Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:32:23.070247637Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:32:33.475488206Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:18035d0a8c59e3306bad4219c71a52b03397fc8f231baf7f676287c73024d85c in / "
                },
                {
                    "created": "2024-04-27T14:32:33.989941961Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:18.216101982Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:18.216101982Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:18.216101982Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:21.912464985Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:22.625610903Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:22.625610903Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:24:22.625610903Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:24:22.739350403Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:22.750532225Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:22.759557887Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:22.792378776Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:22.792378776Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:24:23.712437353Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu jammy   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:23.834897531Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:40:01.977748969Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:40:01.977748969Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:40:02.09133632Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu jammy \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:842bef16b8fb80459504b4621523ac3d78faf7e01d6d9fa7076ed6d4a8f49830",
                    "sha256:0640e720188f6528f7c748e336f11a09d9d00729e4c36eb2bbe129f8a763d070",
                    "sha256:da00f81eef79ae72a2a6e39658ba370fdc81df4c094e54e6a589f711e7c05f0d",
                    "sha256:16497e63f0b712dabe742045e338b44077718e77481804d3a7724223446a164b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:aabd4e14de0df6a5f9f1a6579c3040ed27fca9cd89f3657928a4b239e2e86e75",
                    "sha256:5f6d921eddb8660b20b548ace680919f1b42147cf88460f36aa40005e1aa336a",
                    "sha256:c56d8196358aa702245257319ec5bdcbf5176851d7fef2e97a20cd495170743e",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3817267cec6b73a0e47e08025ef532290d5f261f3fbf1a42ed49176789c09b27",
                    "sha256:070b1a3316674d91b65504d1eb226dfd4fd381c8bb452d8dd49156030aa90fc2",
                    "sha256:85e6e6342cb0f9b27b344a63573bdaad71104c22aa6f59ee24fb6af673be4617"
                ]
            },
            "variant": "v8"
        },
        "xenial": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-02T02:40:12.537459731Z",
            "history": [
                {
                    "created": "2022-10-25T05:55:17.711880347Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3c6dc937cb7b4c81b42126f377d23320ec1d0a8ca34d38e7c45871f1d08dac43 in / "
                },
                {
                    "created": "2022-10-25T05:55:18.62039564Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2022-10-25T05:55:19.060312244Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-10-25T05:55:19.526626469Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2022-10-25T05:55:19.597122438Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:23.720398204Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:23.720398204Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:23.720398204Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:08.467740426Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:09.409026023Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:09.409026023Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:24:09.409026023Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:24:09.528813227Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:09.539864941Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:09.548706166Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:09.580097718Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:09.580097718Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:24:10.572607901Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu xenial   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:10.693384108Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu xenial \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:40:12.430904513Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:40:12.430904513Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:40:12.537459731Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu xenial \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d6021e78cec686df07fb63344e34e8d948e8975efa0ae5e36db44beecfceaa7b",
                    "sha256:ad811fe9ede2db18ba3bcf1f24c59b4fe031e32ad04322c2116650d74e478950",
                    "sha256:5eea61f512c4feddd51e95c6d65b7f4f78d4e07a98c3ecf89a6bd718d329487c",
                    "sha256:33cee10e328c998c3edd46f5150074404ac36fd515ba837bc4798c34c5d2105d",
                    "sha256:c48fd8b1ce92927c11d8852791cafcb5f004ef18c1130f74dbfd7b07057681e6",
                    "sha256:5865f0199789f0e7b9424cfc07c5b4b6c6477557ce095f5568c622184d87c2bb",
                    "sha256:0203e8978cf23014e0336e6ebe1d58a42c3292c24187cf2d35dc52465641303c",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:94413a46381385fbbc2adcb1705b7031ce1a5e310c88061e254ce51907f14e99",
                    "sha256:8999a6ac981ab901d555cbae1594758d4ca415656d3690bdf98604b0b7f5216e",
                    "sha256:e738f11896ebe53ee5b9a57e07d422231fdedca6814eb0e9378370dfefa7fa6c",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2437052b55434ba916221d70044d99be13638c9296584896c482f23fc580dc3e",
                    "sha256:f04e779cbed698d8b0001092e083aec5ac9384e008f34ebcd261c9b8fc3487c0",
                    "sha256:b8bbfd84fa7558d86f7acd404c98475e012539ca5b405525d1dfe022627a6a72"
                ]
            },
            "variant": "v8"
        },
        "xenial-20230911": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-09-11T23:11:33.030374493Z",
            "history": [
                {
                    "created": "2022-10-25T05:55:17.711880347Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3c6dc937cb7b4c81b42126f377d23320ec1d0a8ca34d38e7c45871f1d08dac43 in / "
                },
                {
                    "created": "2022-10-25T05:55:18.62039564Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2022-10-25T05:55:19.060312244Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-10-25T05:55:19.526626469Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2022-10-25T05:55:19.597122438Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:14:56.393143269Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:14:56.393143269Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:14:56.393143269Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:17:15.050332502Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:17:15.964859133Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:17:15.964859133Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:17:15.964859133Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:17:16.374248179Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:17:16.390016916Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:17:16.411525039Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:17:16.427919385Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:17:16.427919385Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:17:17.664229346Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu xenial   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:17:18.069705434Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu xenial \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T23:11:32.921915854Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-11T23:11:32.921915854Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T23:11:33.030374493Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu xenial \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d6021e78cec686df07fb63344e34e8d948e8975efa0ae5e36db44beecfceaa7b",
                    "sha256:ad811fe9ede2db18ba3bcf1f24c59b4fe031e32ad04322c2116650d74e478950",
                    "sha256:5eea61f512c4feddd51e95c6d65b7f4f78d4e07a98c3ecf89a6bd718d329487c",
                    "sha256:33cee10e328c998c3edd46f5150074404ac36fd515ba837bc4798c34c5d2105d",
                    "sha256:fcc5b40a08335e0cd26bd3404d65f929af391a2d73c8af17615cda8fc45abf2d",
                    "sha256:f69098ef70df59dd2dcb11087f318a58872f84b26343f76e1c1ad43775a01327",
                    "sha256:cb9a75a7596430fec1d6c7fcb36e7aee98ffbec6702dcd4b6a700f9bcc339247",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:36ef3d1863fd4d9e87d0c616fc887e9307eb13ffa68f9c0814f0be4eabf82d19",
                    "sha256:bc499df769519c57105f14d7d8d51cf1175495a29bf3c5777e52170be7cf7ee3",
                    "sha256:4345a410c89420dc9551ddf7fb390b8c948d8d442bc3987f25da349565807a4e",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:83f02d88dce1f398d534d0e640887644f7d0c1eda35ebde7e48605b9ee8239ae",
                    "sha256:5ee41de1bf04d7065ad6fee6d3e3c5e11a1b88833349c1d70ac624e2852a5a84",
                    "sha256:c4fe8c47710b9a461b3a8aa237ef789da5187c0c79d57b6381133346b2509a5f"
                ]
            }
        },
        "xenial-20231026": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-11-02T15:44:50.742003503Z",
            "history": [
                {
                    "created": "2022-10-25T05:55:17.711880347Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3c6dc937cb7b4c81b42126f377d23320ec1d0a8ca34d38e7c45871f1d08dac43 in / "
                },
                {
                    "created": "2022-10-25T05:55:18.62039564Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2022-10-25T05:55:19.060312244Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-10-25T05:55:19.526626469Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2022-10-25T05:55:19.597122438Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:17:34.135397533Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:17:34.135397533Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:17:34.135397533Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:19:15.796278218Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:19:16.441633449Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:19:16.441633449Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:19:16.441633449Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:19:16.6016612Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:19:16.613070909Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:19:16.623418578Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:19:16.636086371Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:19:16.636086371Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:19:17.585937407Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu xenial   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:19:17.700044409Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu xenial \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:44:50.609653505Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:44:50.609653505Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:44:50.742003503Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu xenial \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d6021e78cec686df07fb63344e34e8d948e8975efa0ae5e36db44beecfceaa7b",
                    "sha256:ad811fe9ede2db18ba3bcf1f24c59b4fe031e32ad04322c2116650d74e478950",
                    "sha256:5eea61f512c4feddd51e95c6d65b7f4f78d4e07a98c3ecf89a6bd718d329487c",
                    "sha256:33cee10e328c998c3edd46f5150074404ac36fd515ba837bc4798c34c5d2105d",
                    "sha256:830b08769a472f7ed8e76ace412f6b4d55437cc939cd7f6776d0f71ec62242a8",
                    "sha256:b50b3d388d0242ec5ca7b474adb42493b571566f5238f990c2d2713d1227e419",
                    "sha256:0771d5f497cdfbe7cbf571119d59db84539d7b376091bbfc32a560053aef71ee",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:77a4c1d9c671cc6620887496c63a18bc9f74fdb16fdd64496341d41311ff0e8c",
                    "sha256:e0978a7fb583574e99d52898b7239a5d4297e8f274ab74c84a728d1d8c714a2b",
                    "sha256:ef575b7a5e043dd772eb524b513bdb7f4d0424aaca90f27109d810c142c47f3e",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:37995b58d7cdb8bc26592b2e78f3c2e8c0740a0923940ffe33ed575a68eb5afc",
                    "sha256:785afac9a6388d7602d8fe08ad6c2e63fb0848b7a82566932a73a5e84c1343aa",
                    "sha256:9dca54b6048add4e6f57d46611fad1e7b47cda251d52eda342b3699de342160b"
                ]
            },
            "variant": "v8"
        },
        "xenial-20231103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-11-06T01:05:49.271788183Z",
            "history": [
                {
                    "created": "2022-10-25T05:55:17.711880347Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3c6dc937cb7b4c81b42126f377d23320ec1d0a8ca34d38e7c45871f1d08dac43 in / "
                },
                {
                    "created": "2022-10-25T05:55:18.62039564Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2022-10-25T05:55:19.060312244Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-10-25T05:55:19.526626469Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2022-10-25T05:55:19.597122438Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:42:17.956437368Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:42:17.956437368Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:42:17.956437368Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:45:09.753953599Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:45:11.046260574Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:45:11.046260574Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:45:11.046260574Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:45:11.233283877Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:45:11.251111525Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:45:11.286043419Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:45:11.326055527Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:45:11.326055527Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:45:12.706348738Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu xenial   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:45:12.902254965Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu xenial \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T01:05:49.164307066Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T01:05:49.164307066Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T01:05:49.271788183Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu xenial \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d6021e78cec686df07fb63344e34e8d948e8975efa0ae5e36db44beecfceaa7b",
                    "sha256:ad811fe9ede2db18ba3bcf1f24c59b4fe031e32ad04322c2116650d74e478950",
                    "sha256:5eea61f512c4feddd51e95c6d65b7f4f78d4e07a98c3ecf89a6bd718d329487c",
                    "sha256:33cee10e328c998c3edd46f5150074404ac36fd515ba837bc4798c34c5d2105d",
                    "sha256:7ac9400cca18a851d014005964da25aaad695014b46ba75646a2cc743cc40397",
                    "sha256:7fd9d5065d58ea6b9ceaad6f26069962927244531d6d5a5bb9aeb3c8afe386b5",
                    "sha256:a812c38cb7f27c402e8d773382f3fb4b1866cbd4436cbcde054bc05fe82118b6",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:4b953a5646a9eb9499d1a34dd44f7977144457cefdabd6e5f2b460129a36a837",
                    "sha256:f53624621bda5dce68c2751461df2f161db41d1dd49201d971e9dbe3f2ff46a6",
                    "sha256:072cb1fd244c6f953f1ac63d70a5666e1968862588d15e6b1715a73ae8d9a3ff",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1fc3607236c29d1545c6f395d4600cd6bff25dc04321a83c845a269ea7c5d0e9",
                    "sha256:936c8554666b1b14f1d927797948a5ecce84eadaa3bcd6ced30b2b311b567f1e",
                    "sha256:449ed4bae1c79700b7f18ef3fefc6fa58e05375e3b1bf9fb4c36d8f070c199e7"
                ]
            },
            "variant": "v8"
        },
        "xenial-20240103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-05T12:02:58.202766828Z",
            "history": [
                {
                    "created": "2022-10-25T05:55:17.711880347Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3c6dc937cb7b4c81b42126f377d23320ec1d0a8ca34d38e7c45871f1d08dac43 in / "
                },
                {
                    "created": "2022-10-25T05:55:18.62039564Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2022-10-25T05:55:19.060312244Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-10-25T05:55:19.526626469Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2022-10-25T05:55:19.597122438Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:44:24.293146278Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:44:24.293146278Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:44:24.293146278Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:05.244662786Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:05.854268462Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:05.854268462Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:46:05.854268462Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:46:05.96978578Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:05.981818723Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:05.991248167Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:06.022353782Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:06.022353782Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:46:06.939906443Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu xenial   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:07.090420167Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu xenial \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T12:02:58.102496004Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T12:02:58.102496004Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T12:02:58.202766828Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu xenial \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d6021e78cec686df07fb63344e34e8d948e8975efa0ae5e36db44beecfceaa7b",
                    "sha256:ad811fe9ede2db18ba3bcf1f24c59b4fe031e32ad04322c2116650d74e478950",
                    "sha256:5eea61f512c4feddd51e95c6d65b7f4f78d4e07a98c3ecf89a6bd718d329487c",
                    "sha256:33cee10e328c998c3edd46f5150074404ac36fd515ba837bc4798c34c5d2105d",
                    "sha256:ff3558cd320f146e186a7a9062a3e0ddb2b97ef24af93fabfc6236a894415b0e",
                    "sha256:bfa2202ed05da917f28d28bb050ee9eaf142021f0d6a4aaeb67b921335187ff9",
                    "sha256:38c5bd9914265b0aa469d068cd32195dd1b6dbf3920895279aa54f5a472efade",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b594b3c50ab296799337f2ebcefb5a45351ef73b188cd13f18e13953bb8a249d",
                    "sha256:08843d539b60a88c9d0c3028075f9c4d4e6bcc136422d5fbd884da973afe3749",
                    "sha256:911af1c40e7331e2e5ea4a044143009ac11296cfbcafd2d3d0511ae09a4f9ff2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:909b659623b772154127f21cc03adda73649318aad80547765d443d4b0f00bf3",
                    "sha256:e5081dcd75f49f40ead300afed39ad0859e589bdc0c19755e959e2d97ff129db",
                    "sha256:92545968b37868ea239055a2e0bb49531c5f81aecf6793230d9e896ec5574641"
                ]
            },
            "variant": "v8"
        },
        "xenial-20240105": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-06T07:55:47.888151153Z",
            "history": [
                {
                    "created": "2022-10-25T05:55:17.711880347Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3c6dc937cb7b4c81b42126f377d23320ec1d0a8ca34d38e7c45871f1d08dac43 in / "
                },
                {
                    "created": "2022-10-25T05:55:18.62039564Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2022-10-25T05:55:19.060312244Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-10-25T05:55:19.526626469Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2022-10-25T05:55:19.597122438Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:38:05.422100585Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:38:05.422100585Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:38:05.422100585Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:50.212458902Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:51.055223684Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:51.055223684Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:39:51.055223684Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:39:51.172937567Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:51.187979688Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:51.223429407Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:51.238644613Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:51.238644613Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:39:52.218995783Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu xenial   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:52.35072375Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu xenial \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:55:47.779319914Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:55:47.779319914Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:55:47.888151153Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu xenial \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d6021e78cec686df07fb63344e34e8d948e8975efa0ae5e36db44beecfceaa7b",
                    "sha256:ad811fe9ede2db18ba3bcf1f24c59b4fe031e32ad04322c2116650d74e478950",
                    "sha256:5eea61f512c4feddd51e95c6d65b7f4f78d4e07a98c3ecf89a6bd718d329487c",
                    "sha256:33cee10e328c998c3edd46f5150074404ac36fd515ba837bc4798c34c5d2105d",
                    "sha256:d9f3796bbcdb7e53385b7cb0cb694abf4ce35e95439602f9a14d041a86c8b9de",
                    "sha256:070be6fb2df7053eca33764cf06105bcaccf81690fc3ff69d8ddf1c26c60fc30",
                    "sha256:62e2a2ca21f42bdb248310ec38067af4abae011219e7e90ad4edd5bdcb4663b1",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:94c0f2498c0f55a3d98fc68946dbf6a376c43b0c65df4c88c6736e28228c5e01",
                    "sha256:b9fbfa686c10889caed4f3c0651d79d2e5aa19729d522754e65679e982bcc763",
                    "sha256:798f7fe3b943986e1a511c09c87ad52ae776fc1e1852105edeb89affbe0f26b6",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5aaf30251f9db580f384b447d24d4e507a5369c5235ab96c490bebabfedf8e9b",
                    "sha256:886bf939230dd9392eba2eda6fc832b6c12cf09fb9f0619dfe8e856c19c3540d",
                    "sha256:cdfa644c1f3860a93ea4b0cb48b866d8cc54d3a8dfd2519faf25084bc0d8dd51"
                ]
            },
            "variant": "v8"
        },
        "xenial-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-06T13:39:04.398037037Z",
            "history": [
                {
                    "created": "2022-10-25T05:55:17.711880347Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3c6dc937cb7b4c81b42126f377d23320ec1d0a8ca34d38e7c45871f1d08dac43 in / "
                },
                {
                    "created": "2022-10-25T05:55:18.62039564Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2022-10-25T05:55:19.060312244Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-10-25T05:55:19.526626469Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2022-10-25T05:55:19.597122438Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:20:54.532997604Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:20:54.532997604Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:20:54.532997604Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:39.462600175Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:40.128736967Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:40.128736967Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:22:40.128736967Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:22:40.233862094Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:40.242965781Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:40.251915152Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:40.291235601Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:40.291235601Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:22:41.123338385Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu xenial   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:41.24201012Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu xenial \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:39:04.287308839Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:39:04.287308839Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:39:04.398037037Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu xenial \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d6021e78cec686df07fb63344e34e8d948e8975efa0ae5e36db44beecfceaa7b",
                    "sha256:ad811fe9ede2db18ba3bcf1f24c59b4fe031e32ad04322c2116650d74e478950",
                    "sha256:5eea61f512c4feddd51e95c6d65b7f4f78d4e07a98c3ecf89a6bd718d329487c",
                    "sha256:33cee10e328c998c3edd46f5150074404ac36fd515ba837bc4798c34c5d2105d",
                    "sha256:0be8ec94db4145a8f4467a25b3c1e4d1a7046403da2b20cbd1edcc27f0cad7d0",
                    "sha256:a7cecb9075a6c251c24c2047f9c83bc0c5a7d795bb94e235efffdd242dd4fe87",
                    "sha256:f28363480719ac97e9e7a9d0ffd20a1bbc084edc1ad8a5d078010781857220f5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:69bdb0147ec4fb25dd7c6216a113abc61ae94e8a68ce8c194662a0abac99243f",
                    "sha256:30a2d56be523629354160e00b6e7225ad9131404d25033ebfbfe20e4a3c76480",
                    "sha256:61adedb95eead14513cdf0954f0ea7715de15b7f642ef5b899f9e7ff918cf6c9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:52d5ee0be4c02872ef6cc5812381ca84468d673d4fe1a77a1385a6d38bc2e9a4",
                    "sha256:c11b4e415f3d9c923352f63ce8c6f647738c8d13ebcdc792954081a79cb7f210",
                    "sha256:49e4d15461b509c1b9e5b3327aad4505902c7554681755b8ce25841c51945e17"
                ]
            },
            "variant": "v8"
        },
        "xenial-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-09T18:53:14.155899784Z",
            "history": [
                {
                    "created": "2022-10-25T05:55:17.711880347Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3c6dc937cb7b4c81b42126f377d23320ec1d0a8ca34d38e7c45871f1d08dac43 in / "
                },
                {
                    "created": "2022-10-25T05:55:18.62039564Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2022-10-25T05:55:19.060312244Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-10-25T05:55:19.526626469Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2022-10-25T05:55:19.597122438Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:46.190688452Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:46.190688452Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:46.190688452Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:30.117625768Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:30.649988849Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:30.649988849Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:30.649988849Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:30.769000654Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:30.779438529Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:30.812502215Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:30.82303189Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:30.82303189Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:31.736547275Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu xenial   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:31.857039034Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu xenial \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T18:53:14.041419992Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T18:53:14.041419992Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T18:53:14.155899784Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu xenial \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d6021e78cec686df07fb63344e34e8d948e8975efa0ae5e36db44beecfceaa7b",
                    "sha256:ad811fe9ede2db18ba3bcf1f24c59b4fe031e32ad04322c2116650d74e478950",
                    "sha256:5eea61f512c4feddd51e95c6d65b7f4f78d4e07a98c3ecf89a6bd718d329487c",
                    "sha256:33cee10e328c998c3edd46f5150074404ac36fd515ba837bc4798c34c5d2105d",
                    "sha256:8698dce79c5046b9cc02dcc50d05c7ccf61a5c2090b12a11520e0fc9a4af52d9",
                    "sha256:f634dd3472d0120b6cf7034e9e2540bacb8e5370c978aab49b70d243e8cb36b8",
                    "sha256:87e8d327b4ec6f2e6f7446a585ec0b1fcdf01c550c9118bd1340839078863226",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c5aebc8b4a402ec68e0e315376e930d722bf1c2c5e2a803136b9081b6ab005a5",
                    "sha256:9d64babe70eab2fdbec4585f74a4e3d4b483af7af58a3a9a61508c440fdbc3e3",
                    "sha256:e04e3cf5785769dfd4a7a103ac3458c8bb8075b3a6f69e1c4ec0df8772d9957a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:96a05115db53f770e671467ac2a2897e339f161d15d1d1b19df6c8fdc93af081",
                    "sha256:b6831f7d281aa3b7219fb18f96a11ba5a779c24ce198a69fa18533ee49e7480a",
                    "sha256:74026692411f5d3286aeaad9a6c121ea32e03581675cd14046432b4701493cd1"
                ]
            },
            "variant": "v8"
        },
        "xenial-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-02T02:40:12.537459731Z",
            "history": [
                {
                    "created": "2022-10-25T05:55:17.711880347Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3c6dc937cb7b4c81b42126f377d23320ec1d0a8ca34d38e7c45871f1d08dac43 in / "
                },
                {
                    "created": "2022-10-25T05:55:18.62039564Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2022-10-25T05:55:19.060312244Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-10-25T05:55:19.526626469Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2022-10-25T05:55:19.597122438Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:23.720398204Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:23.720398204Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:23.720398204Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:08.467740426Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:09.409026023Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:09.409026023Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:24:09.409026023Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:24:09.528813227Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:09.539864941Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:09.548706166Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:09.580097718Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:09.580097718Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:24:10.572607901Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu xenial   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:10.693384108Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu xenial \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:40:12.430904513Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:40:12.430904513Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:40:12.537459731Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu xenial \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d6021e78cec686df07fb63344e34e8d948e8975efa0ae5e36db44beecfceaa7b",
                    "sha256:ad811fe9ede2db18ba3bcf1f24c59b4fe031e32ad04322c2116650d74e478950",
                    "sha256:5eea61f512c4feddd51e95c6d65b7f4f78d4e07a98c3ecf89a6bd718d329487c",
                    "sha256:33cee10e328c998c3edd46f5150074404ac36fd515ba837bc4798c34c5d2105d",
                    "sha256:c48fd8b1ce92927c11d8852791cafcb5f004ef18c1130f74dbfd7b07057681e6",
                    "sha256:5865f0199789f0e7b9424cfc07c5b4b6c6477557ce095f5568c622184d87c2bb",
                    "sha256:0203e8978cf23014e0336e6ebe1d58a42c3292c24187cf2d35dc52465641303c",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:94413a46381385fbbc2adcb1705b7031ce1a5e310c88061e254ce51907f14e99",
                    "sha256:8999a6ac981ab901d555cbae1594758d4ca415656d3690bdf98604b0b7f5216e",
                    "sha256:e738f11896ebe53ee5b9a57e07d422231fdedca6814eb0e9378370dfefa7fa6c",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2437052b55434ba916221d70044d99be13638c9296584896c482f23fc580dc3e",
                    "sha256:f04e779cbed698d8b0001092e083aec5ac9384e008f34ebcd261c9b8fc3487c0",
                    "sha256:b8bbfd84fa7558d86f7acd404c98475e012539ca5b405525d1dfe022627a6a72"
                ]
            },
            "variant": "v8"
        },
        "xenial-build": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-02T02:40:04.16402052Z",
            "history": [
                {
                    "created": "2022-10-25T05:55:17.711880347Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3c6dc937cb7b4c81b42126f377d23320ec1d0a8ca34d38e7c45871f1d08dac43 in / "
                },
                {
                    "created": "2022-10-25T05:55:18.62039564Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2022-10-25T05:55:19.060312244Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-10-25T05:55:19.526626469Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2022-10-25T05:55:19.597122438Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:22.159746837Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:22.159746837Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:22.159746837Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:08.543514091Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:27:20.674370824Z",
                    "created_by": "RUN /bin/sh -c install_packages \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:27:21.71025963Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:27:21.71025963Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:27:21.71025963Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:27:21.831041951Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:27:21.84158042Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:27:21.852384492Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:27:21.900260583Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:27:21.900260583Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:27:22.919332522Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu xenial   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:27:23.037069463Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu xenial \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:40:04.073922136Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:40:04.073922136Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:40:04.16402052Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu xenial \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d6021e78cec686df07fb63344e34e8d948e8975efa0ae5e36db44beecfceaa7b",
                    "sha256:ad811fe9ede2db18ba3bcf1f24c59b4fe031e32ad04322c2116650d74e478950",
                    "sha256:5eea61f512c4feddd51e95c6d65b7f4f78d4e07a98c3ecf89a6bd718d329487c",
                    "sha256:33cee10e328c998c3edd46f5150074404ac36fd515ba837bc4798c34c5d2105d",
                    "sha256:6a12deb611eb38f1b7bbdeeffae9922dc17fe76dcc6e29d0d11e452e658472c1",
                    "sha256:5322b2af094873f08234a343cc57b720fac6ad7e3aac6124317037651d5275a2",
                    "sha256:88bf72a826a81fc6794a8da00d562e23d5f3847b2e2780676fc212a9bc3914e9",
                    "sha256:79028b1b7764314674b6c2a9f5973252e645106da1b00a92f825e8860fbf8868",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9e75a09653576af1c4b7bffe8f9dc46938de391333053fbf836d4773fbf3a9cb",
                    "sha256:159a4fa578f1b2af9228ba44c9d969a0a2d68eda92d9f26f9f9a644d8eb13f34",
                    "sha256:17e323959f8d0aa88c2fda80c95ce92f0ad7746e4183510a637b7b7a24a464d5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7dce9f48b07eec22389533a976cb8c9a8ea5bb120dd17ca09fcc31e22b640ffc",
                    "sha256:30aff7677ff040099459614f07645ef1a1b58aaa1f1b541eeb267659b4659d79",
                    "sha256:6731bec9a47a72d4ceac17595dd84737d7580a02e0b46c61b60db95ecac0ccb9"
                ]
            },
            "variant": "v8"
        },
        "xenial-build-20230911": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-09-11T23:11:33.04170841Z",
            "history": [
                {
                    "created": "2022-10-25T05:55:17.711880347Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3c6dc937cb7b4c81b42126f377d23320ec1d0a8ca34d38e7c45871f1d08dac43 in / "
                },
                {
                    "created": "2022-10-25T05:55:18.62039564Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2022-10-25T05:55:19.060312244Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-10-25T05:55:19.526626469Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2022-10-25T05:55:19.597122438Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:14:56.393143269Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:14:56.393143269Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:14:56.393143269Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:17:15.050332502Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:20:47.838826785Z",
                    "created_by": "RUN /bin/sh -c install_packages \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:20:48.773672445Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:20:48.773672445Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:20:48.773672445Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:20:49.18048939Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:20:49.196418123Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:20:49.205332453Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:20:49.217764735Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:20:49.217764735Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:20:50.470558641Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu xenial   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:20:50.822053177Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu xenial \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T23:11:32.957855777Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-11T23:11:32.957855777Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T23:11:33.04170841Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu xenial \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d6021e78cec686df07fb63344e34e8d948e8975efa0ae5e36db44beecfceaa7b",
                    "sha256:ad811fe9ede2db18ba3bcf1f24c59b4fe031e32ad04322c2116650d74e478950",
                    "sha256:5eea61f512c4feddd51e95c6d65b7f4f78d4e07a98c3ecf89a6bd718d329487c",
                    "sha256:33cee10e328c998c3edd46f5150074404ac36fd515ba837bc4798c34c5d2105d",
                    "sha256:fcc5b40a08335e0cd26bd3404d65f929af391a2d73c8af17615cda8fc45abf2d",
                    "sha256:f69098ef70df59dd2dcb11087f318a58872f84b26343f76e1c1ad43775a01327",
                    "sha256:c8deab41c40ac6734572a576a3d728fe3c8814d7b700b4f10fd07bd342439d08",
                    "sha256:ec235fa88ec70231e61d34163ffe0eca7769d8f337fb1084b609e656e5cdde02",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ea834ba559afc5074dd5ac3a3d89bfbd52c3830f5605bf09c7fe10bed46fe21d",
                    "sha256:1565398e9cd56176c9c0244552fd65562ca9d2b91f5b8736b32dda2bfe08259f",
                    "sha256:6e3ef0ac8cc173f0765ffb6dc53f20ebb1ce579087a4572b1097c17096aa6aa8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:6c6b62ae635a2c1214ee13247b625e4aa570f0129df1abb7c8b4e6b7685e7281",
                    "sha256:bc4b5a77ed41d2dd66c3ec9c3de9153558e6e7c9dd9e7971243cdbef95b4ac6f",
                    "sha256:06e236be1a8b3aa1f36d8f59639886697330f54c9306e8ed8d174ea28cfbef25"
                ]
            }
        },
        "xenial-build-20231026": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-11-02T15:45:08.350224231Z",
            "history": [
                {
                    "created": "2022-10-25T05:55:17.711880347Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3c6dc937cb7b4c81b42126f377d23320ec1d0a8ca34d38e7c45871f1d08dac43 in / "
                },
                {
                    "created": "2022-10-25T05:55:18.62039564Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2022-10-25T05:55:19.060312244Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-10-25T05:55:19.526626469Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2022-10-25T05:55:19.597122438Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:17:46.930941252Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:17:46.930941252Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:17:46.930941252Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:20:18.102743972Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:24:09.384357349Z",
                    "created_by": "RUN /bin/sh -c install_packages \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:24:10.677934087Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:24:10.677934087Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:24:10.677934087Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:24:10.850091845Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:24:10.872244129Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:24:10.892025605Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:24:10.909463771Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:24:10.909463771Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:24:12.182471531Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu xenial   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:24:12.394457441Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu xenial \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:45:08.209824283Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:45:08.209824283Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:45:08.350224231Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu xenial \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d6021e78cec686df07fb63344e34e8d948e8975efa0ae5e36db44beecfceaa7b",
                    "sha256:ad811fe9ede2db18ba3bcf1f24c59b4fe031e32ad04322c2116650d74e478950",
                    "sha256:5eea61f512c4feddd51e95c6d65b7f4f78d4e07a98c3ecf89a6bd718d329487c",
                    "sha256:33cee10e328c998c3edd46f5150074404ac36fd515ba837bc4798c34c5d2105d",
                    "sha256:13f3a012556e62807cc8e247bef5e1e5fefe60f8fdc0212f147b5d2cec9895ff",
                    "sha256:dc7fc3c9d9a558fbf2e44e46e1014746360c8c982065a9bb06a35a6475ec9b77",
                    "sha256:347b4b3fe62c4095efd1270dd50dd49367340c9344e5afb6abc45d40ba912201",
                    "sha256:938d804f980ebf84def3f85e56f17e98264bd10c6c0799f77155d2aa1d3dbb74",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:aa8376b9460b27247487764e26e6f03274b7e39b6e470dc7d9e3075e48c45ee2",
                    "sha256:d715b0cd532d5257b8394498b32229a20d48670c8bfe2e0cbd7440dad8489c6f",
                    "sha256:28bf7d9b27d2add0f80cb54c33221bf0c9d05ab2e83e620f9db890240711084e",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:de2d85591cdbeafc82437e20b5949bf7df9bfb2f9956e9be2cb23317b5a077be",
                    "sha256:36119628152b22944322afe1a89445c3ca8388c411b8f29d3e8794f5ee6ba4fb",
                    "sha256:c119c41266ba0413a2d76ea930897d4c6b43e1aa4896bd18bf86d0b84dfb8e47"
                ]
            },
            "variant": "v8"
        },
        "xenial-build-20231103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-11-06T01:06:40.868856892Z",
            "history": [
                {
                    "created": "2022-10-25T05:55:17.711880347Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3c6dc937cb7b4c81b42126f377d23320ec1d0a8ca34d38e7c45871f1d08dac43 in / "
                },
                {
                    "created": "2022-10-25T05:55:18.62039564Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2022-10-25T05:55:19.060312244Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-10-25T05:55:19.526626469Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2022-10-25T05:55:19.597122438Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:42:05.767476Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:42:05.767476Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:42:05.767476Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:43:49.644046723Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:46:28.272801121Z",
                    "created_by": "RUN /bin/sh -c install_packages \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:46:29.022895164Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:46:29.022895164Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:46:29.022895164Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:46:29.150897287Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:46:29.15994608Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:46:29.169621912Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:46:29.178494129Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:46:29.178494129Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:46:30.002133406Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu xenial   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:46:30.131903184Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu xenial \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T01:06:40.690871484Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T01:06:40.690871484Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T01:06:40.868856892Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu xenial \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d6021e78cec686df07fb63344e34e8d948e8975efa0ae5e36db44beecfceaa7b",
                    "sha256:ad811fe9ede2db18ba3bcf1f24c59b4fe031e32ad04322c2116650d74e478950",
                    "sha256:5eea61f512c4feddd51e95c6d65b7f4f78d4e07a98c3ecf89a6bd718d329487c",
                    "sha256:33cee10e328c998c3edd46f5150074404ac36fd515ba837bc4798c34c5d2105d",
                    "sha256:cc553cc0463bf2802d860c2572c24d8825356848dd28836bfa4b96165f695cee",
                    "sha256:0c6f98adf7ac4e3ab925fd199953a47456fddce6bbf430cf07026eeef860f3c9",
                    "sha256:716f6cd922212eb98107f67af17194ef66f2f0a36841d48db6945c1eb8abaafa",
                    "sha256:fabeb21d13e0a2d8590bb37a26e4b3ca03cc95e1d67d44b89083fe4aebaf8572",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d0e3a4b29659718f5b8f57f4a660d9a49e6bc8b026f6b289117a90953f36cc87",
                    "sha256:43d224c91fe0f731822bd3ec8a014f954e3d6e761a4885cda74fce57b7af6577",
                    "sha256:192c6127a325a9a9e6c77cf7800458fff54a767eddc0babdd820d2e6a28eb98b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d522af885caa772c9485f5a2c31684ad27c0a82a0bfc40f97065818046dba9db",
                    "sha256:dc5c6e4205941191074140b9548b7b249c165fdb641432cfc96ff7dce2eddd0e",
                    "sha256:2392cbadea78053350b8cca585cda7b9f28981447a8c9e7ba499ad46c655a1d8"
                ]
            },
            "variant": "v8"
        },
        "xenial-build-20240103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-05T12:03:01.338139581Z",
            "history": [
                {
                    "created": "2022-10-25T05:55:17.711880347Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3c6dc937cb7b4c81b42126f377d23320ec1d0a8ca34d38e7c45871f1d08dac43 in / "
                },
                {
                    "created": "2022-10-25T05:55:18.62039564Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2022-10-25T05:55:19.060312244Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-10-25T05:55:19.526626469Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2022-10-25T05:55:19.597122438Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:44:24.702497431Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:44:24.702497431Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:44:24.702497431Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:06.528412067Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:48:47.29333695Z",
                    "created_by": "RUN /bin/sh -c install_packages \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:48:48.068550852Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:48:48.068550852Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:48:48.068550852Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:48:48.181905103Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:48:48.191447052Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:48:48.202593544Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:48:48.227311943Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:48:48.227311943Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:48:49.053186998Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu xenial   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:48:49.164874603Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu xenial \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T12:03:01.247593063Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T12:03:01.247593063Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T12:03:01.338139581Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu xenial \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d6021e78cec686df07fb63344e34e8d948e8975efa0ae5e36db44beecfceaa7b",
                    "sha256:ad811fe9ede2db18ba3bcf1f24c59b4fe031e32ad04322c2116650d74e478950",
                    "sha256:5eea61f512c4feddd51e95c6d65b7f4f78d4e07a98c3ecf89a6bd718d329487c",
                    "sha256:33cee10e328c998c3edd46f5150074404ac36fd515ba837bc4798c34c5d2105d",
                    "sha256:ff3558cd320f146e186a7a9062a3e0ddb2b97ef24af93fabfc6236a894415b0e",
                    "sha256:14d72351a8e926b1118af4b5fcf6a45ea5c3438645730b502a7ee868c06d79d0",
                    "sha256:7dc870f03ca950d2d719761ae9b7771c1107db8cff7035095c0d670c7e9c7277",
                    "sha256:abc84cc29f744d7866851853a93600d38a3dae27cc1dabb4650c16faadf1679e",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f4d9e4f9ff51aca7ffc1d2f363e5fd7a17e3652bf7263d246f41e0aca97e8136",
                    "sha256:23cb5083d705005a94ee41bbf0c22df7c804574dfd11334c0958dfe87e27fe77",
                    "sha256:89db85988b3ddd0cd45f3f9bc2a312eff4c89abc3274b2f6b8e8090951cdbb8b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:705f6f5bc8b55dced17be02f9db1a15684a74b5ca8cb0f819ac5e65c5728714b",
                    "sha256:4e3b0064477971ee34daeaa1d49ffea1d95ac20f81b11698787f21210f76d149",
                    "sha256:74bb11b4407673e709519659b8763dffca0ced1ffc4c9d2d0800a02c6fb2c95b"
                ]
            },
            "variant": "v8"
        },
        "xenial-build-20240105": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-06T07:55:40.769249451Z",
            "history": [
                {
                    "created": "2022-10-25T05:55:17.711880347Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3c6dc937cb7b4c81b42126f377d23320ec1d0a8ca34d38e7c45871f1d08dac43 in / "
                },
                {
                    "created": "2022-10-25T05:55:18.62039564Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2022-10-25T05:55:19.060312244Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-10-25T05:55:19.526626469Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2022-10-25T05:55:19.597122438Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:37:58.996510291Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:37:58.996510291Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:37:58.996510291Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:42.667036688Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:42:33.298045038Z",
                    "created_by": "RUN /bin/sh -c install_packages \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:42:34.25145149Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:42:34.25145149Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:42:34.25145149Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:42:34.390637417Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:42:34.400572684Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:42:34.411092932Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:42:34.443087265Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:42:34.443087265Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:42:35.327158659Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu xenial   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:42:35.44548752Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu xenial \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:55:40.676468699Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:55:40.676468699Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:55:40.769249451Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu xenial \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d6021e78cec686df07fb63344e34e8d948e8975efa0ae5e36db44beecfceaa7b",
                    "sha256:ad811fe9ede2db18ba3bcf1f24c59b4fe031e32ad04322c2116650d74e478950",
                    "sha256:5eea61f512c4feddd51e95c6d65b7f4f78d4e07a98c3ecf89a6bd718d329487c",
                    "sha256:33cee10e328c998c3edd46f5150074404ac36fd515ba837bc4798c34c5d2105d",
                    "sha256:7697b6ad656d138b33dd86861155f3793db27e98b55531a4ee87bb4451256681",
                    "sha256:8c416984293dddc0cd0706495eb02a5bdb0e95902763149845cf6b0a22931eec",
                    "sha256:f05f2e63fbead38ec368b4e03df108d3a33ee3afcc7b3aec3bd30f6148c2d616",
                    "sha256:272ab858067afd5e8e5dd3011eb4e200dd117b7b0a0a9db14d645ee48d8bfb93",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d74aea54c408e948948eea510566a78097518a97b2cf7c0c05aaf5ab71edb433",
                    "sha256:d6efa0457a23c070e86bea601109754230d6e3867d0919b098494bac5439f412",
                    "sha256:5c1f94b2419bfb6c38303b97b777704c06fb038f07123e5a1e444a0bfebfb96b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3e64fe18ab82e3e0305083ca43b07bc2bff733a4609c0863fcacb58ea979466d",
                    "sha256:a7040978843872682821922a8f652f824ebecff19ebde6bd8e637d723d77c4d1",
                    "sha256:32f7f20b581d50b0efa2833b4dbb25a167684b27e76797702b30559984b52eaf"
                ]
            },
            "variant": "v8"
        },
        "xenial-build-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-06T13:38:57.268555364Z",
            "history": [
                {
                    "created": "2022-10-25T05:55:17.711880347Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3c6dc937cb7b4c81b42126f377d23320ec1d0a8ca34d38e7c45871f1d08dac43 in / "
                },
                {
                    "created": "2022-10-25T05:55:18.62039564Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2022-10-25T05:55:19.060312244Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-10-25T05:55:19.526626469Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2022-10-25T05:55:19.597122438Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:20:42.997643143Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:20:42.997643143Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:20:42.997643143Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:25.15399443Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:25:03.871076537Z",
                    "created_by": "RUN /bin/sh -c install_packages \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:25:05.016277956Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:25:05.016277956Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:25:05.016277956Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:25:05.130052393Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:25:05.141382623Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:25:05.151635287Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:25:05.176798192Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:25:05.176798192Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:25:05.999507668Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu xenial   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:25:06.12068935Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu xenial \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:38:57.176110427Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:38:57.176110427Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:38:57.268555364Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu xenial \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d6021e78cec686df07fb63344e34e8d948e8975efa0ae5e36db44beecfceaa7b",
                    "sha256:ad811fe9ede2db18ba3bcf1f24c59b4fe031e32ad04322c2116650d74e478950",
                    "sha256:5eea61f512c4feddd51e95c6d65b7f4f78d4e07a98c3ecf89a6bd718d329487c",
                    "sha256:33cee10e328c998c3edd46f5150074404ac36fd515ba837bc4798c34c5d2105d",
                    "sha256:2667e4c0cdb73fb14febbabc0154796958551aa794877aae7b872d3b4d7290c7",
                    "sha256:7fb36ea4f118f81a2b2773ce47156f3a1dfeb86cfeb18656b068ec69b8850035",
                    "sha256:866f8e981d0434c0ec0e79312b8c631bf8b0997ed4ffd91529164a0d5d57e806",
                    "sha256:2abe242d14032b04d2adde44367fac3a67c8badf11403f8aa96af553c2154c64",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:874786c2a05b889e636c9e81b5baf12bd8c2d0ed86f37d2d3dd9ab98078588e5",
                    "sha256:b67b6c1c8f7ea3d8d849862400caa01b3e8798fee293cd7b792daacc12d6735b",
                    "sha256:4dc2cef642389f33c25f2c05e5311622aeef0b76f71f2d28c16ce62689878944",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:510f10d39d6756d737ca4cc915aecf30870ae77689c3219e5a62b2e33fafa982",
                    "sha256:15beb9490cd16bb505b3e91e01e331d3185504888004371cd20b6bcce57cf96b",
                    "sha256:4160d938b3783c81e171fe49893251b1a3304a55e52c059c1b912ff5aafdf46a"
                ]
            },
            "variant": "v8"
        },
        "xenial-build-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-09T18:53:20.975867171Z",
            "history": [
                {
                    "created": "2022-10-25T05:55:17.711880347Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3c6dc937cb7b4c81b42126f377d23320ec1d0a8ca34d38e7c45871f1d08dac43 in / "
                },
                {
                    "created": "2022-10-25T05:55:18.62039564Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2022-10-25T05:55:19.060312244Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-10-25T05:55:19.526626469Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2022-10-25T05:55:19.597122438Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:46.48523942Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:46.48523942Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:46.48523942Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:29.065880606Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:07.121461211Z",
                    "created_by": "RUN /bin/sh -c install_packages \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:07.770849393Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:07.770849393Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:39:07.770849393Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:39:07.877125168Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:07.890135903Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:07.921181582Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:07.931332517Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:07.931332517Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:39:08.788447756Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu xenial   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:08.915623802Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu xenial \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T18:53:20.891367295Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T18:53:20.891367295Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T18:53:20.975867171Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu xenial \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d6021e78cec686df07fb63344e34e8d948e8975efa0ae5e36db44beecfceaa7b",
                    "sha256:ad811fe9ede2db18ba3bcf1f24c59b4fe031e32ad04322c2116650d74e478950",
                    "sha256:5eea61f512c4feddd51e95c6d65b7f4f78d4e07a98c3ecf89a6bd718d329487c",
                    "sha256:33cee10e328c998c3edd46f5150074404ac36fd515ba837bc4798c34c5d2105d",
                    "sha256:8698dce79c5046b9cc02dcc50d05c7ccf61a5c2090b12a11520e0fc9a4af52d9",
                    "sha256:53312cb2e19beda9ad21623e28bda4a1792db41e5622600c1338ea3349053300",
                    "sha256:e77f3e654815bc7c74801a02e126c650d5791bc63f173d1c3dfceae5e8834513",
                    "sha256:abfecfea55510700bcb82c39f8b643d08b8b38d7dfcd5e08d09d52529110146b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:cf59462992d518e6df46d9df57b62841e630e1f3197b41e77d88ab1c2f31bc3f",
                    "sha256:297e267d60dcd733598e5a102f0692d3fea54a8229a6bd561a452eed39732fdc",
                    "sha256:3b04c5ffb718da13b857bf8a416537b5d2eb210594e32e7cf803d9b07348b85f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f43adb67a8e2ef5f0a565356a960c1a55dc771cd7bfaf51a8ae8fd6a4822b4ad",
                    "sha256:5e34d8a38949bcdb90018d0f367a5c0dbe5cb1c054ce614630a592f15cc5ac16",
                    "sha256:f00a607c818280ff87b202220d261026ee56d3ed848308d7f38f8ef952d1e8e2"
                ]
            },
            "variant": "v8"
        },
        "xenial-build-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-02T02:40:04.16402052Z",
            "history": [
                {
                    "created": "2022-10-25T05:55:17.711880347Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3c6dc937cb7b4c81b42126f377d23320ec1d0a8ca34d38e7c45871f1d08dac43 in / "
                },
                {
                    "created": "2022-10-25T05:55:18.62039564Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2022-10-25T05:55:19.060312244Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-10-25T05:55:19.526626469Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2022-10-25T05:55:19.597122438Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:22.159746837Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:22.159746837Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:22.159746837Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:08.543514091Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:27:20.674370824Z",
                    "created_by": "RUN /bin/sh -c install_packages \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:27:21.71025963Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:27:21.71025963Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:27:21.71025963Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:27:21.831041951Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:27:21.84158042Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:27:21.852384492Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:27:21.900260583Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:27:21.900260583Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:27:22.919332522Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu xenial   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:27:23.037069463Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu xenial \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:40:04.073922136Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:40:04.073922136Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:40:04.16402052Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu xenial \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d6021e78cec686df07fb63344e34e8d948e8975efa0ae5e36db44beecfceaa7b",
                    "sha256:ad811fe9ede2db18ba3bcf1f24c59b4fe031e32ad04322c2116650d74e478950",
                    "sha256:5eea61f512c4feddd51e95c6d65b7f4f78d4e07a98c3ecf89a6bd718d329487c",
                    "sha256:33cee10e328c998c3edd46f5150074404ac36fd515ba837bc4798c34c5d2105d",
                    "sha256:6a12deb611eb38f1b7bbdeeffae9922dc17fe76dcc6e29d0d11e452e658472c1",
                    "sha256:5322b2af094873f08234a343cc57b720fac6ad7e3aac6124317037651d5275a2",
                    "sha256:88bf72a826a81fc6794a8da00d562e23d5f3847b2e2780676fc212a9bc3914e9",
                    "sha256:79028b1b7764314674b6c2a9f5973252e645106da1b00a92f825e8860fbf8868",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9e75a09653576af1c4b7bffe8f9dc46938de391333053fbf836d4773fbf3a9cb",
                    "sha256:159a4fa578f1b2af9228ba44c9d969a0a2d68eda92d9f26f9f9a644d8eb13f34",
                    "sha256:17e323959f8d0aa88c2fda80c95ce92f0ad7746e4183510a637b7b7a24a464d5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7dce9f48b07eec22389533a976cb8c9a8ea5bb120dd17ca09fcc31e22b640ffc",
                    "sha256:30aff7677ff040099459614f07645ef1a1b58aaa1f1b541eeb267659b4659d79",
                    "sha256:6731bec9a47a72d4ceac17595dd84737d7580a02e0b46c61b60db95ecac0ccb9"
                ]
            },
            "variant": "v8"
        },
        "xenial-run": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-02T02:40:12.537459731Z",
            "history": [
                {
                    "created": "2022-10-25T05:55:17.711880347Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3c6dc937cb7b4c81b42126f377d23320ec1d0a8ca34d38e7c45871f1d08dac43 in / "
                },
                {
                    "created": "2022-10-25T05:55:18.62039564Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2022-10-25T05:55:19.060312244Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-10-25T05:55:19.526626469Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2022-10-25T05:55:19.597122438Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:23.720398204Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:23.720398204Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:23.720398204Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:08.467740426Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:09.409026023Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:09.409026023Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:24:09.409026023Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:24:09.528813227Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:09.539864941Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:09.548706166Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:09.580097718Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:09.580097718Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:24:10.572607901Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu xenial   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:10.693384108Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu xenial \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:40:12.430904513Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:40:12.430904513Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:40:12.537459731Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu xenial \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d6021e78cec686df07fb63344e34e8d948e8975efa0ae5e36db44beecfceaa7b",
                    "sha256:ad811fe9ede2db18ba3bcf1f24c59b4fe031e32ad04322c2116650d74e478950",
                    "sha256:5eea61f512c4feddd51e95c6d65b7f4f78d4e07a98c3ecf89a6bd718d329487c",
                    "sha256:33cee10e328c998c3edd46f5150074404ac36fd515ba837bc4798c34c5d2105d",
                    "sha256:c48fd8b1ce92927c11d8852791cafcb5f004ef18c1130f74dbfd7b07057681e6",
                    "sha256:5865f0199789f0e7b9424cfc07c5b4b6c6477557ce095f5568c622184d87c2bb",
                    "sha256:0203e8978cf23014e0336e6ebe1d58a42c3292c24187cf2d35dc52465641303c",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:94413a46381385fbbc2adcb1705b7031ce1a5e310c88061e254ce51907f14e99",
                    "sha256:8999a6ac981ab901d555cbae1594758d4ca415656d3690bdf98604b0b7f5216e",
                    "sha256:e738f11896ebe53ee5b9a57e07d422231fdedca6814eb0e9378370dfefa7fa6c",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2437052b55434ba916221d70044d99be13638c9296584896c482f23fc580dc3e",
                    "sha256:f04e779cbed698d8b0001092e083aec5ac9384e008f34ebcd261c9b8fc3487c0",
                    "sha256:b8bbfd84fa7558d86f7acd404c98475e012539ca5b405525d1dfe022627a6a72"
                ]
            },
            "variant": "v8"
        },
        "xenial-run-20230911": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-09-11T23:11:33.030374493Z",
            "history": [
                {
                    "created": "2022-10-25T05:55:17.711880347Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3c6dc937cb7b4c81b42126f377d23320ec1d0a8ca34d38e7c45871f1d08dac43 in / "
                },
                {
                    "created": "2022-10-25T05:55:18.62039564Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2022-10-25T05:55:19.060312244Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-10-25T05:55:19.526626469Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2022-10-25T05:55:19.597122438Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:14:56.393143269Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:14:56.393143269Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:14:56.393143269Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:17:15.050332502Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:17:15.964859133Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:17:15.964859133Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:17:15.964859133Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:17:16.374248179Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:17:16.390016916Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:17:16.411525039Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:17:16.427919385Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:17:16.427919385Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:17:17.664229346Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu xenial   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:17:18.069705434Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu xenial \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T23:11:32.921915854Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-11T23:11:32.921915854Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T23:11:33.030374493Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu xenial \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d6021e78cec686df07fb63344e34e8d948e8975efa0ae5e36db44beecfceaa7b",
                    "sha256:ad811fe9ede2db18ba3bcf1f24c59b4fe031e32ad04322c2116650d74e478950",
                    "sha256:5eea61f512c4feddd51e95c6d65b7f4f78d4e07a98c3ecf89a6bd718d329487c",
                    "sha256:33cee10e328c998c3edd46f5150074404ac36fd515ba837bc4798c34c5d2105d",
                    "sha256:fcc5b40a08335e0cd26bd3404d65f929af391a2d73c8af17615cda8fc45abf2d",
                    "sha256:f69098ef70df59dd2dcb11087f318a58872f84b26343f76e1c1ad43775a01327",
                    "sha256:cb9a75a7596430fec1d6c7fcb36e7aee98ffbec6702dcd4b6a700f9bcc339247",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:36ef3d1863fd4d9e87d0c616fc887e9307eb13ffa68f9c0814f0be4eabf82d19",
                    "sha256:bc499df769519c57105f14d7d8d51cf1175495a29bf3c5777e52170be7cf7ee3",
                    "sha256:4345a410c89420dc9551ddf7fb390b8c948d8d442bc3987f25da349565807a4e",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:83f02d88dce1f398d534d0e640887644f7d0c1eda35ebde7e48605b9ee8239ae",
                    "sha256:5ee41de1bf04d7065ad6fee6d3e3c5e11a1b88833349c1d70ac624e2852a5a84",
                    "sha256:c4fe8c47710b9a461b3a8aa237ef789da5187c0c79d57b6381133346b2509a5f"
                ]
            }
        },
        "xenial-run-20231026": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-11-02T15:44:50.742003503Z",
            "history": [
                {
                    "created": "2022-10-25T05:55:17.711880347Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3c6dc937cb7b4c81b42126f377d23320ec1d0a8ca34d38e7c45871f1d08dac43 in / "
                },
                {
                    "created": "2022-10-25T05:55:18.62039564Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2022-10-25T05:55:19.060312244Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-10-25T05:55:19.526626469Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2022-10-25T05:55:19.597122438Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:17:34.135397533Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:17:34.135397533Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:17:34.135397533Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:19:15.796278218Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:19:16.441633449Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:19:16.441633449Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:19:16.441633449Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:19:16.6016612Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:19:16.613070909Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:19:16.623418578Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:19:16.636086371Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:19:16.636086371Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:19:17.585937407Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu xenial   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:19:17.700044409Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu xenial \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:44:50.609653505Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-02T15:44:50.609653505Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-02T15:44:50.742003503Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu xenial \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d6021e78cec686df07fb63344e34e8d948e8975efa0ae5e36db44beecfceaa7b",
                    "sha256:ad811fe9ede2db18ba3bcf1f24c59b4fe031e32ad04322c2116650d74e478950",
                    "sha256:5eea61f512c4feddd51e95c6d65b7f4f78d4e07a98c3ecf89a6bd718d329487c",
                    "sha256:33cee10e328c998c3edd46f5150074404ac36fd515ba837bc4798c34c5d2105d",
                    "sha256:830b08769a472f7ed8e76ace412f6b4d55437cc939cd7f6776d0f71ec62242a8",
                    "sha256:b50b3d388d0242ec5ca7b474adb42493b571566f5238f990c2d2713d1227e419",
                    "sha256:0771d5f497cdfbe7cbf571119d59db84539d7b376091bbfc32a560053aef71ee",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:77a4c1d9c671cc6620887496c63a18bc9f74fdb16fdd64496341d41311ff0e8c",
                    "sha256:e0978a7fb583574e99d52898b7239a5d4297e8f274ab74c84a728d1d8c714a2b",
                    "sha256:ef575b7a5e043dd772eb524b513bdb7f4d0424aaca90f27109d810c142c47f3e",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:37995b58d7cdb8bc26592b2e78f3c2e8c0740a0923940ffe33ed575a68eb5afc",
                    "sha256:785afac9a6388d7602d8fe08ad6c2e63fb0848b7a82566932a73a5e84c1343aa",
                    "sha256:9dca54b6048add4e6f57d46611fad1e7b47cda251d52eda342b3699de342160b"
                ]
            },
            "variant": "v8"
        },
        "xenial-run-20231103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-11-06T01:05:49.271788183Z",
            "history": [
                {
                    "created": "2022-10-25T05:55:17.711880347Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3c6dc937cb7b4c81b42126f377d23320ec1d0a8ca34d38e7c45871f1d08dac43 in / "
                },
                {
                    "created": "2022-10-25T05:55:18.62039564Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2022-10-25T05:55:19.060312244Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-10-25T05:55:19.526626469Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2022-10-25T05:55:19.597122438Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:42:17.956437368Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:42:17.956437368Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:42:17.956437368Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:45:09.753953599Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:45:11.046260574Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:45:11.046260574Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:45:11.046260574Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:45:11.233283877Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:45:11.251111525Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:45:11.286043419Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:45:11.326055527Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:45:11.326055527Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T00:45:12.706348738Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu xenial   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T00:45:12.902254965Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu xenial \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T01:05:49.164307066Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T01:05:49.164307066Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T01:05:49.271788183Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu xenial \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d6021e78cec686df07fb63344e34e8d948e8975efa0ae5e36db44beecfceaa7b",
                    "sha256:ad811fe9ede2db18ba3bcf1f24c59b4fe031e32ad04322c2116650d74e478950",
                    "sha256:5eea61f512c4feddd51e95c6d65b7f4f78d4e07a98c3ecf89a6bd718d329487c",
                    "sha256:33cee10e328c998c3edd46f5150074404ac36fd515ba837bc4798c34c5d2105d",
                    "sha256:7ac9400cca18a851d014005964da25aaad695014b46ba75646a2cc743cc40397",
                    "sha256:7fd9d5065d58ea6b9ceaad6f26069962927244531d6d5a5bb9aeb3c8afe386b5",
                    "sha256:a812c38cb7f27c402e8d773382f3fb4b1866cbd4436cbcde054bc05fe82118b6",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:4b953a5646a9eb9499d1a34dd44f7977144457cefdabd6e5f2b460129a36a837",
                    "sha256:f53624621bda5dce68c2751461df2f161db41d1dd49201d971e9dbe3f2ff46a6",
                    "sha256:072cb1fd244c6f953f1ac63d70a5666e1968862588d15e6b1715a73ae8d9a3ff",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1fc3607236c29d1545c6f395d4600cd6bff25dc04321a83c845a269ea7c5d0e9",
                    "sha256:936c8554666b1b14f1d927797948a5ecce84eadaa3bcd6ced30b2b311b567f1e",
                    "sha256:449ed4bae1c79700b7f18ef3fefc6fa58e05375e3b1bf9fb4c36d8f070c199e7"
                ]
            },
            "variant": "v8"
        },
        "xenial-run-20240103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-05T12:02:58.202766828Z",
            "history": [
                {
                    "created": "2022-10-25T05:55:17.711880347Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3c6dc937cb7b4c81b42126f377d23320ec1d0a8ca34d38e7c45871f1d08dac43 in / "
                },
                {
                    "created": "2022-10-25T05:55:18.62039564Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2022-10-25T05:55:19.060312244Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-10-25T05:55:19.526626469Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2022-10-25T05:55:19.597122438Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:44:24.293146278Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:44:24.293146278Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:44:24.293146278Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:05.244662786Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:05.854268462Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:05.854268462Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:46:05.854268462Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:46:05.96978578Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:05.981818723Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:05.991248167Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:06.022353782Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:06.022353782Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T11:46:06.939906443Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu xenial   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T11:46:07.090420167Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu xenial \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T12:02:58.102496004Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T12:02:58.102496004Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T12:02:58.202766828Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu xenial \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d6021e78cec686df07fb63344e34e8d948e8975efa0ae5e36db44beecfceaa7b",
                    "sha256:ad811fe9ede2db18ba3bcf1f24c59b4fe031e32ad04322c2116650d74e478950",
                    "sha256:5eea61f512c4feddd51e95c6d65b7f4f78d4e07a98c3ecf89a6bd718d329487c",
                    "sha256:33cee10e328c998c3edd46f5150074404ac36fd515ba837bc4798c34c5d2105d",
                    "sha256:ff3558cd320f146e186a7a9062a3e0ddb2b97ef24af93fabfc6236a894415b0e",
                    "sha256:bfa2202ed05da917f28d28bb050ee9eaf142021f0d6a4aaeb67b921335187ff9",
                    "sha256:38c5bd9914265b0aa469d068cd32195dd1b6dbf3920895279aa54f5a472efade",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b594b3c50ab296799337f2ebcefb5a45351ef73b188cd13f18e13953bb8a249d",
                    "sha256:08843d539b60a88c9d0c3028075f9c4d4e6bcc136422d5fbd884da973afe3749",
                    "sha256:911af1c40e7331e2e5ea4a044143009ac11296cfbcafd2d3d0511ae09a4f9ff2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:909b659623b772154127f21cc03adda73649318aad80547765d443d4b0f00bf3",
                    "sha256:e5081dcd75f49f40ead300afed39ad0859e589bdc0c19755e959e2d97ff129db",
                    "sha256:92545968b37868ea239055a2e0bb49531c5f81aecf6793230d9e896ec5574641"
                ]
            },
            "variant": "v8"
        },
        "xenial-run-20240105": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-06T07:55:47.888151153Z",
            "history": [
                {
                    "created": "2022-10-25T05:55:17.711880347Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3c6dc937cb7b4c81b42126f377d23320ec1d0a8ca34d38e7c45871f1d08dac43 in / "
                },
                {
                    "created": "2022-10-25T05:55:18.62039564Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2022-10-25T05:55:19.060312244Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-10-25T05:55:19.526626469Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2022-10-25T05:55:19.597122438Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:38:05.422100585Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:38:05.422100585Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:38:05.422100585Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:50.212458902Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:51.055223684Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:51.055223684Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:39:51.055223684Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:39:51.172937567Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:51.187979688Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:51.223429407Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:51.238644613Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:51.238644613Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:39:52.218995783Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu xenial   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:39:52.35072375Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu xenial \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:55:47.779319914Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T07:55:47.779319914Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-06T07:55:47.888151153Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu xenial \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d6021e78cec686df07fb63344e34e8d948e8975efa0ae5e36db44beecfceaa7b",
                    "sha256:ad811fe9ede2db18ba3bcf1f24c59b4fe031e32ad04322c2116650d74e478950",
                    "sha256:5eea61f512c4feddd51e95c6d65b7f4f78d4e07a98c3ecf89a6bd718d329487c",
                    "sha256:33cee10e328c998c3edd46f5150074404ac36fd515ba837bc4798c34c5d2105d",
                    "sha256:d9f3796bbcdb7e53385b7cb0cb694abf4ce35e95439602f9a14d041a86c8b9de",
                    "sha256:070be6fb2df7053eca33764cf06105bcaccf81690fc3ff69d8ddf1c26c60fc30",
                    "sha256:62e2a2ca21f42bdb248310ec38067af4abae011219e7e90ad4edd5bdcb4663b1",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:94c0f2498c0f55a3d98fc68946dbf6a376c43b0c65df4c88c6736e28228c5e01",
                    "sha256:b9fbfa686c10889caed4f3c0651d79d2e5aa19729d522754e65679e982bcc763",
                    "sha256:798f7fe3b943986e1a511c09c87ad52ae776fc1e1852105edeb89affbe0f26b6",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5aaf30251f9db580f384b447d24d4e507a5369c5235ab96c490bebabfedf8e9b",
                    "sha256:886bf939230dd9392eba2eda6fc832b6c12cf09fb9f0619dfe8e856c19c3540d",
                    "sha256:cdfa644c1f3860a93ea4b0cb48b866d8cc54d3a8dfd2519faf25084bc0d8dd51"
                ]
            },
            "variant": "v8"
        },
        "xenial-run-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-06T13:39:04.398037037Z",
            "history": [
                {
                    "created": "2022-10-25T05:55:17.711880347Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3c6dc937cb7b4c81b42126f377d23320ec1d0a8ca34d38e7c45871f1d08dac43 in / "
                },
                {
                    "created": "2022-10-25T05:55:18.62039564Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2022-10-25T05:55:19.060312244Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-10-25T05:55:19.526626469Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2022-10-25T05:55:19.597122438Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:20:54.532997604Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:20:54.532997604Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:20:54.532997604Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:39.462600175Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:40.128736967Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:40.128736967Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:22:40.128736967Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:22:40.233862094Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:40.242965781Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:40.251915152Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:40.291235601Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:40.291235601Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:22:41.123338385Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu xenial   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:22:41.24201012Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu xenial \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:39:04.287308839Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T13:39:04.287308839Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T13:39:04.398037037Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu xenial \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d6021e78cec686df07fb63344e34e8d948e8975efa0ae5e36db44beecfceaa7b",
                    "sha256:ad811fe9ede2db18ba3bcf1f24c59b4fe031e32ad04322c2116650d74e478950",
                    "sha256:5eea61f512c4feddd51e95c6d65b7f4f78d4e07a98c3ecf89a6bd718d329487c",
                    "sha256:33cee10e328c998c3edd46f5150074404ac36fd515ba837bc4798c34c5d2105d",
                    "sha256:0be8ec94db4145a8f4467a25b3c1e4d1a7046403da2b20cbd1edcc27f0cad7d0",
                    "sha256:a7cecb9075a6c251c24c2047f9c83bc0c5a7d795bb94e235efffdd242dd4fe87",
                    "sha256:f28363480719ac97e9e7a9d0ffd20a1bbc084edc1ad8a5d078010781857220f5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:69bdb0147ec4fb25dd7c6216a113abc61ae94e8a68ce8c194662a0abac99243f",
                    "sha256:30a2d56be523629354160e00b6e7225ad9131404d25033ebfbfe20e4a3c76480",
                    "sha256:61adedb95eead14513cdf0954f0ea7715de15b7f642ef5b899f9e7ff918cf6c9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:52d5ee0be4c02872ef6cc5812381ca84468d673d4fe1a77a1385a6d38bc2e9a4",
                    "sha256:c11b4e415f3d9c923352f63ce8c6f647738c8d13ebcdc792954081a79cb7f210",
                    "sha256:49e4d15461b509c1b9e5b3327aad4505902c7554681755b8ce25841c51945e17"
                ]
            },
            "variant": "v8"
        },
        "xenial-run-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-09T18:53:14.155899784Z",
            "history": [
                {
                    "created": "2022-10-25T05:55:17.711880347Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3c6dc937cb7b4c81b42126f377d23320ec1d0a8ca34d38e7c45871f1d08dac43 in / "
                },
                {
                    "created": "2022-10-25T05:55:18.62039564Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2022-10-25T05:55:19.060312244Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-10-25T05:55:19.526626469Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2022-10-25T05:55:19.597122438Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:46.190688452Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:46.190688452Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:46.190688452Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:30.117625768Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:30.649988849Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:30.649988849Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:30.649988849Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:30.769000654Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:30.779438529Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:30.812502215Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:30.82303189Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:30.82303189Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:31.736547275Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu xenial   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:31.857039034Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu xenial \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T18:53:14.041419992Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T18:53:14.041419992Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T18:53:14.155899784Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu xenial \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d6021e78cec686df07fb63344e34e8d948e8975efa0ae5e36db44beecfceaa7b",
                    "sha256:ad811fe9ede2db18ba3bcf1f24c59b4fe031e32ad04322c2116650d74e478950",
                    "sha256:5eea61f512c4feddd51e95c6d65b7f4f78d4e07a98c3ecf89a6bd718d329487c",
                    "sha256:33cee10e328c998c3edd46f5150074404ac36fd515ba837bc4798c34c5d2105d",
                    "sha256:8698dce79c5046b9cc02dcc50d05c7ccf61a5c2090b12a11520e0fc9a4af52d9",
                    "sha256:f634dd3472d0120b6cf7034e9e2540bacb8e5370c978aab49b70d243e8cb36b8",
                    "sha256:87e8d327b4ec6f2e6f7446a585ec0b1fcdf01c550c9118bd1340839078863226",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c5aebc8b4a402ec68e0e315376e930d722bf1c2c5e2a803136b9081b6ab005a5",
                    "sha256:9d64babe70eab2fdbec4585f74a4e3d4b483af7af58a3a9a61508c440fdbc3e3",
                    "sha256:e04e3cf5785769dfd4a7a103ac3458c8bb8075b3a6f69e1c4ec0df8772d9957a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:96a05115db53f770e671467ac2a2897e339f161d15d1d1b19df6c8fdc93af081",
                    "sha256:b6831f7d281aa3b7219fb18f96a11ba5a779c24ce198a69fa18533ee49e7480a",
                    "sha256:74026692411f5d3286aeaad9a6c121ea32e03581675cd14046432b4701493cd1"
                ]
            },
            "variant": "v8"
        },
        "xenial-run-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2-nx-devkit",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-02T02:40:12.537459731Z",
            "history": [
                {
                    "created": "2022-10-25T05:55:17.711880347Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3c6dc937cb7b4c81b42126f377d23320ec1d0a8ca34d38e7c45871f1d08dac43 in / "
                },
                {
                    "created": "2022-10-25T05:55:18.62039564Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2022-10-25T05:55:19.060312244Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-10-25T05:55:19.526626469Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2022-10-25T05:55:19.597122438Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:23.720398204Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:23.720398204Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:22:23.720398204Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:08.467740426Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:09.409026023Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:09.409026023Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:24:09.409026023Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:24:09.528813227Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:09.539864941Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:09.548706166Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:09.580097718Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:09.580097718Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:24:10.572607901Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh ubuntu xenial   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:24:10.693384108Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu xenial \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:40:12.430904513Z",
                    "created_by": "LABEL io.balena.device-type=jetson-tx2-nx-devkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:40:12.430904513Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T02:40:12.537459731Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Ubuntu xenial \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d6021e78cec686df07fb63344e34e8d948e8975efa0ae5e36db44beecfceaa7b",
                    "sha256:ad811fe9ede2db18ba3bcf1f24c59b4fe031e32ad04322c2116650d74e478950",
                    "sha256:5eea61f512c4feddd51e95c6d65b7f4f78d4e07a98c3ecf89a6bd718d329487c",
                    "sha256:33cee10e328c998c3edd46f5150074404ac36fd515ba837bc4798c34c5d2105d",
                    "sha256:c48fd8b1ce92927c11d8852791cafcb5f004ef18c1130f74dbfd7b07057681e6",
                    "sha256:5865f0199789f0e7b9424cfc07c5b4b6c6477557ce095f5568c622184d87c2bb",
                    "sha256:0203e8978cf23014e0336e6ebe1d58a42c3292c24187cf2d35dc52465641303c",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:94413a46381385fbbc2adcb1705b7031ce1a5e310c88061e254ce51907f14e99",
                    "sha256:8999a6ac981ab901d555cbae1594758d4ca415656d3690bdf98604b0b7f5216e",
                    "sha256:e738f11896ebe53ee5b9a57e07d422231fdedca6814eb0e9378370dfefa7fa6c",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2437052b55434ba916221d70044d99be13638c9296584896c482f23fc580dc3e",
                    "sha256:f04e779cbed698d8b0001092e083aec5ac9384e008f34ebcd261c9b8fc3487c0",
                    "sha256:b8bbfd84fa7558d86f7acd404c98475e012539ca5b405525d1dfe022627a6a72"
                ]
            },
            "variant": "v8"
        }
    }
}