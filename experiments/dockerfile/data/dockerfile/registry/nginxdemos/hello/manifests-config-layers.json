{
    "manifests": {
        "0.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9039,
                "digest": "sha256:890427f1713873947807aef5fe0f7c28c02d1d8c44fbaeaad4e3251e4175aac1"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1970140,
                    "digest": "sha256:550fe1bea624a5c62551cf09f3aa10886eed133794844af1dfb775118309387e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5174358,
                    "digest": "sha256:d421ba34525b4b82a1333c54a34dad900f6135089ffd0f0640273982076a2bf9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 494,
                    "digest": "sha256:fdcbcb327323fbaa5a1c96ea828d93a6a7c855727a663a0f5b1f4da9750c4a36"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 626,
                    "digest": "sha256:bfbcec2fc4d5c74ad34ed33b7fbfd8482adc024c973e2aba6f081ea635c74381"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 180,
                    "digest": "sha256:8a1d79bc08709e41b8ea49f7b8213330edbf4212d6788b8f77eb5826fb69df41"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 449,
                    "digest": "sha256:dbf5f5063dea3c5f24ae43257d07279e6df7c8ca865a77a9d317d9b18089027a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5089,
                    "digest": "sha256:68a1d10cc39e6888f748f1c4228b82e572c815b2ff249ae908ee694d9d3eddfc"
                }
            ]
        },
        "0.2": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:19ac934319e325d6aac0948ace8aa0ccf20e60ca2c731e18f0ca93cb3e5b551b",
                    "size": 2190,
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:53a48c1da41f2e6606950b4ae4ae962ce755f0850323a617cdcb3cdce7223702",
                    "size": 2190,
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:fa7eb70795e179ebfb0bcfdaabe17e5dafcbc016fc9dda17119cadde398fecf7",
                    "size": 2190,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:08eb7b72ee3057fafffd69873072db4ec64064f859c953088a6048bfc3142c7b",
                    "size": 2190,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:8fd67322b7e5bba2302d556845a92cb5ad136f325c7ae15e03d126cd28dc2ace",
                    "size": 2190,
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:55fe4e676544ae3f46428decb5786bf7ee1eb577f2e2c041f6fb937f2aa075ff",
                    "size": 2190,
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:4860c27cdf579a136cad136af25763eec599fe2bf2089249d27d19c6fdaf1164",
                    "size": 2190,
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                }
            ]
        },
        "0.2-plain-text": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:92b9c4ad69bb4dd7f6a3ae01cc27673cffdcbbbc2de8e76daba387b13f617be2",
                    "size": 1982,
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:9d5e2bad8d550870fa4bfe76d89f264bb0e22a13f5ea2bce1284a2873c3dfe63",
                    "size": 1982,
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:c3170a3f36a87f559831350b6e77aa5c154175a80052e98cbc3b3bc170fc311e",
                    "size": 1982,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:bf81fd9487414f40996acbde843e56c499e94ec6deba4f032492bc2e711842e9",
                    "size": 1982,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:6c81c4e3a667b9e941cf432b36356ecf5a717cf7b5cd4de4fc368d057dffdf62",
                    "size": 1982,
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:1b2f1429245989e152c3277bb9d9d5f9d87844a3f7ab770d56bd4a6a96239daa",
                    "size": 1982,
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:0a8f17e6417b56c6e39a253fadae779f11ce25cfb2ec287747a3afd6d80883a0",
                    "size": 1982,
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                }
            ]
        },
        "0.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.oci.image.index.v1+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:e7e2e05fa275cdc74ba51409f75ce25ac1976bd6058bf34650ba0ce918b9ccd6",
                    "size": 2374,
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:8796ef376ecbc93a890225f263eba88b936dc912776d6894c83d714fbd3993e4",
                    "size": 2374,
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:d4b8381e2c78343c47d2e9fd406c72b3a12edae227b373d826733c05e2f23c1d",
                    "size": 2374,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:69ef44c562f7589d9b2e15849323e95f9ee3dfc9bd570855b6cddb99808abfc4",
                    "size": 2374,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:ce6cec2413f609da05d2698a2f704ce21c6dd65645807752cac7cb5d32a045e3",
                    "size": 2374,
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:db3926a1a81ee70d81d35b7c4c660014272b4ecde6e12424a09434e18c1e3bc7",
                    "size": 2374,
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:9aec75afaac19b22d1fbbabd4513c10d302a8050df2697091a7bf92ae4568210",
                    "size": 2374,
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:79060d3a6c6969309dfecb22ecca1fb382a2c1d4e3d5e0a598a43c133cbd2782",
                    "size": 841,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:e7e2e05fa275cdc74ba51409f75ce25ac1976bd6058bf34650ba0ce918b9ccd6",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:4ac3b9bbff01022be38f2ef414aa1589d0c75418cf0bc58a070fc3203efa8670",
                    "size": 841,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:8796ef376ecbc93a890225f263eba88b936dc912776d6894c83d714fbd3993e4",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:e3d1505b9d952242b25a66d6d465333a1c03b549d9556ba99471c5645fc0779b",
                    "size": 841,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:d4b8381e2c78343c47d2e9fd406c72b3a12edae227b373d826733c05e2f23c1d",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:c12446b233edcdedb437ebe21010c189a22844a4ecd49f4a4560d163f6d98bc5",
                    "size": 841,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:69ef44c562f7589d9b2e15849323e95f9ee3dfc9bd570855b6cddb99808abfc4",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:ae7072b2016c7b6a68aaa081a3f40baf6ffaac0a9b943e455a33ca443504552a",
                    "size": 841,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:ce6cec2413f609da05d2698a2f704ce21c6dd65645807752cac7cb5d32a045e3",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:242e8a55bd5f06c89db29c5953265f5a212e1125a63ff0b50117b708f4ddd58c",
                    "size": 841,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:db3926a1a81ee70d81d35b7c4c660014272b4ecde6e12424a09434e18c1e3bc7",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:7c2d411d47787c55c905f72ae68db83ac52cac9660b8248279a43cd4d4affc34",
                    "size": 841,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:9aec75afaac19b22d1fbbabd4513c10d302a8050df2697091a7bf92ae4568210",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                }
            ]
        },
        "0.3-plain-text": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.oci.image.index.v1+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:74b5f56fd0ad8746c6f31348222e2bf378748e3e770f0e99880dbf78685ee8c4",
                    "size": 2185,
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:7f87faa44799b4c9f0f9d9826df2c56c4971add217f7e7c1d6c35eb3eafa0d7c",
                    "size": 2185,
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:335ca8ce0e618244dabb9f27a69aa132a3523078baca6236e119c66e75908c91",
                    "size": 2185,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:bff4143ae0d64cba3692d71cf9a698f552b914f211ab0c6c5232b73d00b57cfb",
                    "size": 2185,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:155ce456dfeb1a11c09a4974756f40d3f95c7a74f536b2872ad10103b35abcba",
                    "size": 2185,
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:d5bbaca6acc463e2d7db7f01383d5e5bc522281e97402ddc7d2f2f79ccd6f096",
                    "size": 2185,
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:afb7ce1b14ad0cbf598141e8d02ab094a140ce0c0416da1fe2824fb7ff10d561",
                    "size": 2185,
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:b712b0b65c387e6a54ba5147efc711a14e877a400ac3c7b6634ed47fb64faca6",
                    "size": 840,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:74b5f56fd0ad8746c6f31348222e2bf378748e3e770f0e99880dbf78685ee8c4",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:49f79e55d0b9e38fc6b8811efc9bbc5fe5ef8b9138bbf02817b5deaf7c0a0432",
                    "size": 840,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:7f87faa44799b4c9f0f9d9826df2c56c4971add217f7e7c1d6c35eb3eafa0d7c",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:f9db779462e65f407cacf75665dbf99da27fc4c34c32954b7e97fff741bcd69c",
                    "size": 840,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:335ca8ce0e618244dabb9f27a69aa132a3523078baca6236e119c66e75908c91",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:01c83400a1745281b29c4cbbd8541625c881e1972b539d1845a95acc2d126a5e",
                    "size": 840,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:bff4143ae0d64cba3692d71cf9a698f552b914f211ab0c6c5232b73d00b57cfb",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:e7c59c93534c31602d3c284622f9086c1e13e26d842c817c02e29993a1b40c62",
                    "size": 840,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:155ce456dfeb1a11c09a4974756f40d3f95c7a74f536b2872ad10103b35abcba",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:5f9b9dd4e56ebfc68a03d374637d16b0d5103aa27bbf3f883498b6893f008421",
                    "size": 840,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:d5bbaca6acc463e2d7db7f01383d5e5bc522281e97402ddc7d2f2f79ccd6f096",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:2be83f4db81b95ee8fc30267aef5b995eef02d1f321c69691916ab43a0b4b24d",
                    "size": 840,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:afb7ce1b14ad0cbf598141e8d02ab094a140ce0c0416da1fe2824fb7ff10d561",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                }
            ]
        },
        "0.4": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.oci.image.index.v1+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:4ca264bd7d39ac7a7c53dbebaa7016cdbf0fa57b5be0b832b60cd5ce567f4e49",
                    "size": 2374,
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:e9a63edc2a28df4b0707b8f7b6f703626aa4a06993be0da9f7eb24a819e62bc2",
                    "size": 2374,
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:f4ac5598f45414566319c38f80a768e503608205fb8d34355256e8d0bda94390",
                    "size": 2374,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:c5df1c1d3d82cc8528a7f97089cd3aaef941439129436204dc19fb587fed4ad3",
                    "size": 2374,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:a319ef5fe81c0347c703730e585893f03a909db275beda0d007719cc7337bb9a",
                    "size": 2374,
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:0d3b2ed598897d716399597c22dc08b1ffcdd72befefc2cd49f258b30c7ce74d",
                    "size": 2374,
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:9186238328ed403d9c529433e5a791b00a82e23bea917186e14ff2f1a7594850",
                    "size": 2374,
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:cf93a3414c46bca2effa77f2c342fbe15355e2c9a34653b4b13ac64628ac2bde",
                    "size": 841,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:4ca264bd7d39ac7a7c53dbebaa7016cdbf0fa57b5be0b832b60cd5ce567f4e49",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:4bbac42e0cd2507afa729321cc18fa8fb5573918b45615d9d4c1dda6c2384ef4",
                    "size": 841,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:e9a63edc2a28df4b0707b8f7b6f703626aa4a06993be0da9f7eb24a819e62bc2",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:59044aaf2ef68120950dac8bb57c39a857d2af336b3c0bb7a1b252307b9e3f67",
                    "size": 841,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:f4ac5598f45414566319c38f80a768e503608205fb8d34355256e8d0bda94390",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:92d927ce78f3a7b8fb101bbaf12e2e4f32c12a9613c4500786291234fc09b25e",
                    "size": 841,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:c5df1c1d3d82cc8528a7f97089cd3aaef941439129436204dc19fb587fed4ad3",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:7700f2664fee9f35d6695140571e57eed8b5c151776e2bcb13bc54675b308ebe",
                    "size": 841,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:a319ef5fe81c0347c703730e585893f03a909db275beda0d007719cc7337bb9a",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:1791f48828dd8981fa803ba61d5cbc04e2415c28efb84c290f8eff754f6b6ef7",
                    "size": 841,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:0d3b2ed598897d716399597c22dc08b1ffcdd72befefc2cd49f258b30c7ce74d",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:6a7be8c0a263d425b971cbab10eece45127f8f9b1917e230e0756236eda82bdf",
                    "size": 841,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:9186238328ed403d9c529433e5a791b00a82e23bea917186e14ff2f1a7594850",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                }
            ]
        },
        "0.4-plain-text": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.oci.image.index.v1+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:59ca7e12025c83db5f98ad448189d4f03c83a1814afb0366ec331504903d5287",
                    "size": 2185,
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:bc9b0070c49563ca9a0dbaf59576ec615ee8d3b6fb5cec7d37423cf0bb8116dd",
                    "size": 2185,
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:88697050a21e105f11f88f2a396b05c50c08f7a025c99dd71263c9b2c8bfbebd",
                    "size": 2185,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:b9bd66084947760db53cb5115c6245ec4e87e623d696bb50cb673a73ca35a76f",
                    "size": 2185,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:f96282ba709a67a9691dd7042fd4eb722ea639926b9e204915ded47816d3c9f9",
                    "size": 2185,
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:9170d759649e56274293e0b0386cf3c84eb26e1f8ec682364f7c4c28d8f74a66",
                    "size": 2185,
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:f1cce412c3d1ff2dc0c46f1dbecd9ee5460836e43aaeade8fdab64f400756d63",
                    "size": 2185,
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:102fbf36cf9f7852b9980ab83b857b5c9d981266397738f6901de2524a1026f3",
                    "size": 840,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:59ca7e12025c83db5f98ad448189d4f03c83a1814afb0366ec331504903d5287",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:95604c35834d27315d3e3fa5c2ec605182d874a643f79cf97ae3861b9b1157e8",
                    "size": 840,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:bc9b0070c49563ca9a0dbaf59576ec615ee8d3b6fb5cec7d37423cf0bb8116dd",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:e24d1a1c3abfaed97fd1ceeb0430027cf7f63598095588b089630df0598f6cc6",
                    "size": 840,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:88697050a21e105f11f88f2a396b05c50c08f7a025c99dd71263c9b2c8bfbebd",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:114cff4887b8ebf10942868ea6ec73c2dcd1e3703ba835314915596e4f384f30",
                    "size": 840,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:b9bd66084947760db53cb5115c6245ec4e87e623d696bb50cb673a73ca35a76f",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:51edc81027750a23b56efcbca92887dceff7051e69c765a7aa66329ffc6b64b5",
                    "size": 840,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:f96282ba709a67a9691dd7042fd4eb722ea639926b9e204915ded47816d3c9f9",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:383987cc07cd7e0dbc9e814b48d6fa924608cdbb35597661573fb393933d390a",
                    "size": 840,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:9170d759649e56274293e0b0386cf3c84eb26e1f8ec682364f7c4c28d8f74a66",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:12d0834682e11dc4d63521c1048d12cd579247687ab1771218ccf021a70e48ee",
                    "size": 840,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:f1cce412c3d1ff2dc0c46f1dbecd9ee5460836e43aaeade8fdab64f400756d63",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                }
            ]
        },
        "latest": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.oci.image.index.v1+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:4ca264bd7d39ac7a7c53dbebaa7016cdbf0fa57b5be0b832b60cd5ce567f4e49",
                    "size": 2374,
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:e9a63edc2a28df4b0707b8f7b6f703626aa4a06993be0da9f7eb24a819e62bc2",
                    "size": 2374,
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:f4ac5598f45414566319c38f80a768e503608205fb8d34355256e8d0bda94390",
                    "size": 2374,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:c5df1c1d3d82cc8528a7f97089cd3aaef941439129436204dc19fb587fed4ad3",
                    "size": 2374,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:a319ef5fe81c0347c703730e585893f03a909db275beda0d007719cc7337bb9a",
                    "size": 2374,
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:0d3b2ed598897d716399597c22dc08b1ffcdd72befefc2cd49f258b30c7ce74d",
                    "size": 2374,
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:9186238328ed403d9c529433e5a791b00a82e23bea917186e14ff2f1a7594850",
                    "size": 2374,
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:cf93a3414c46bca2effa77f2c342fbe15355e2c9a34653b4b13ac64628ac2bde",
                    "size": 841,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:4ca264bd7d39ac7a7c53dbebaa7016cdbf0fa57b5be0b832b60cd5ce567f4e49",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:4bbac42e0cd2507afa729321cc18fa8fb5573918b45615d9d4c1dda6c2384ef4",
                    "size": 841,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:e9a63edc2a28df4b0707b8f7b6f703626aa4a06993be0da9f7eb24a819e62bc2",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:59044aaf2ef68120950dac8bb57c39a857d2af336b3c0bb7a1b252307b9e3f67",
                    "size": 841,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:f4ac5598f45414566319c38f80a768e503608205fb8d34355256e8d0bda94390",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:92d927ce78f3a7b8fb101bbaf12e2e4f32c12a9613c4500786291234fc09b25e",
                    "size": 841,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:c5df1c1d3d82cc8528a7f97089cd3aaef941439129436204dc19fb587fed4ad3",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:7700f2664fee9f35d6695140571e57eed8b5c151776e2bcb13bc54675b308ebe",
                    "size": 841,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:a319ef5fe81c0347c703730e585893f03a909db275beda0d007719cc7337bb9a",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:1791f48828dd8981fa803ba61d5cbc04e2415c28efb84c290f8eff754f6b6ef7",
                    "size": 841,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:0d3b2ed598897d716399597c22dc08b1ffcdd72befefc2cd49f258b30c7ce74d",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:6a7be8c0a263d425b971cbab10eece45127f8f9b1917e230e0756236eda82bdf",
                    "size": 841,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:9186238328ed403d9c529433e5a791b00a82e23bea917186e14ff2f1a7594850",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                }
            ]
        },
        "plain-text": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.oci.image.index.v1+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:59ca7e12025c83db5f98ad448189d4f03c83a1814afb0366ec331504903d5287",
                    "size": 2185,
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:bc9b0070c49563ca9a0dbaf59576ec615ee8d3b6fb5cec7d37423cf0bb8116dd",
                    "size": 2185,
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:88697050a21e105f11f88f2a396b05c50c08f7a025c99dd71263c9b2c8bfbebd",
                    "size": 2185,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:b9bd66084947760db53cb5115c6245ec4e87e623d696bb50cb673a73ca35a76f",
                    "size": 2185,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:f96282ba709a67a9691dd7042fd4eb722ea639926b9e204915ded47816d3c9f9",
                    "size": 2185,
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:9170d759649e56274293e0b0386cf3c84eb26e1f8ec682364f7c4c28d8f74a66",
                    "size": 2185,
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:f1cce412c3d1ff2dc0c46f1dbecd9ee5460836e43aaeade8fdab64f400756d63",
                    "size": 2185,
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:102fbf36cf9f7852b9980ab83b857b5c9d981266397738f6901de2524a1026f3",
                    "size": 840,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:59ca7e12025c83db5f98ad448189d4f03c83a1814afb0366ec331504903d5287",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:95604c35834d27315d3e3fa5c2ec605182d874a643f79cf97ae3861b9b1157e8",
                    "size": 840,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:bc9b0070c49563ca9a0dbaf59576ec615ee8d3b6fb5cec7d37423cf0bb8116dd",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:e24d1a1c3abfaed97fd1ceeb0430027cf7f63598095588b089630df0598f6cc6",
                    "size": 840,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:88697050a21e105f11f88f2a396b05c50c08f7a025c99dd71263c9b2c8bfbebd",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:114cff4887b8ebf10942868ea6ec73c2dcd1e3703ba835314915596e4f384f30",
                    "size": 840,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:b9bd66084947760db53cb5115c6245ec4e87e623d696bb50cb673a73ca35a76f",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:51edc81027750a23b56efcbca92887dceff7051e69c765a7aa66329ffc6b64b5",
                    "size": 840,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:f96282ba709a67a9691dd7042fd4eb722ea639926b9e204915ded47816d3c9f9",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:383987cc07cd7e0dbc9e814b48d6fa924608cdbb35597661573fb393933d390a",
                    "size": 840,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:9170d759649e56274293e0b0386cf3c84eb26e1f8ec682364f7c4c28d8f74a66",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:12d0834682e11dc4d63521c1048d12cd579247687ab1771218ccf021a70e48ee",
                    "size": 840,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:f1cce412c3d1ff2dc0c46f1dbecd9ee5460836e43aaeade8fdab64f400756d63",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                }
            ]
        }
    },
    "tags": [
        "0.1",
        "0.2",
        "0.2-plain-text",
        "0.3",
        "0.3-plain-text",
        "0.4",
        "0.4-plain-text",
        "latest",
        "plain-text"
    ],
    "configs": {
        "0.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.13.8"
                ],
                "Cmd": [
                    "nginx",
                    "-g",
                    "daemon off;"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:8a65dbea1f26df60c6ea5ccc01ce556b86f2ad2b3da35ed83d65a9cccd9478f5",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>"
                },
                "StopSignal": "SIGTERM"
            },
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.13.8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ADD file:03ab889ddfb0f6000a3fc608b0d13295c53c4acbadf99a98ce9547c5ed09259e in /usr/share/nginx/html/ "
                ],
                "ArgsEscaped": true,
                "Image": "sha256:8a65dbea1f26df60c6ea5ccc01ce556b86f2ad2b3da35ed83d65a9cccd9478f5",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>"
                },
                "StopSignal": "SIGTERM"
            },
            "created": "2018-02-07T14:41:23.288767874Z",
            "docker_version": "17.12.0-ce",
            "history": [
                {
                    "created": "2018-01-09T21:13:01.165340448Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:df48d6d6df42a01380557aebd4ca02807fc08a76a1d1b36d957e59a41c69db0b in / "
                },
                {
                    "created": "2018-01-09T21:13:01.402230769Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-10T04:08:56.242667943Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-10T04:08:56.446738753Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NGINX_VERSION=1.13.8",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-10T04:10:11.585580142Z",
                    "created_by": "/bin/sh -c GPG_KEYS=B0F4253373F8F6F510D42178520A9993A1C052F8 \t&& CONFIG=\"\t\t--prefix=/etc/nginx \t\t--sbin-path=/usr/sbin/nginx \t\t--modules-path=/usr/lib/nginx/modules \t\t--conf-path=/etc/nginx/nginx.conf \t\t--error-log-path=/var/log/nginx/error.log \t\t--http-log-path=/var/log/nginx/access.log \t\t--pid-path=/var/run/nginx.pid \t\t--lock-path=/var/run/nginx.lock \t\t--http-client-body-temp-path=/var/cache/nginx/client_temp \t\t--http-proxy-temp-path=/var/cache/nginx/proxy_temp \t\t--http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp \t\t--http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp \t\t--http-scgi-temp-path=/var/cache/nginx/scgi_temp \t\t--user=nginx \t\t--group=nginx \t\t--with-http_ssl_module \t\t--with-http_realip_module \t\t--with-http_addition_module \t\t--with-http_sub_module \t\t--with-http_dav_module \t\t--with-http_flv_module \t\t--with-http_mp4_module \t\t--with-http_gunzip_module \t\t--with-http_gzip_static_module \t\t--with-http_random_index_module \t\t--with-http_secure_link_module \t\t--with-http_stub_status_module \t\t--with-http_auth_request_module \t\t--with-http_xslt_module=dynamic \t\t--with-http_image_filter_module=dynamic \t\t--with-http_geoip_module=dynamic \t\t--with-threads \t\t--with-stream \t\t--with-stream_ssl_module \t\t--with-stream_ssl_preread_module \t\t--with-stream_realip_module \t\t--with-stream_geoip_module=dynamic \t\t--with-http_slice_module \t\t--with-mail \t\t--with-mail_ssl_module \t\t--with-compat \t\t--with-file-aio \t\t--with-http_v2_module \t\" \t&& addgroup -S nginx \t&& adduser -D -S -h /var/cache/nginx -s /sbin/nologin -G nginx nginx \t&& apk add --no-cache --virtual .build-deps \t\tgcc \t\tlibc-dev \t\tmake \t\topenssl-dev \t\tpcre-dev \t\tzlib-dev \t\tlinux-headers \t\tcurl \t\tgnupg \t\tlibxslt-dev \t\tgd-dev \t\tgeoip-dev \t&& curl -fSL http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz -o nginx.tar.gz \t&& curl -fSL http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz.asc  -o nginx.tar.gz.asc \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& found=''; \tfor server in \t\tha.pool.sks-keyservers.net \t\thkp://keyserver.ubuntu.com:80 \t\thkp://p80.pool.sks-keyservers.net:80 \t\tpgp.mit.edu \t; do \t\techo \"Fetching GPG key $GPG_KEYS from $server\"; \t\tgpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" && found=yes && break; \tdone; \ttest -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $GPG_KEYS\" && exit 1; \tgpg --batch --verify nginx.tar.gz.asc nginx.tar.gz \t&& rm -r \"$GNUPGHOME\" nginx.tar.gz.asc \t&& mkdir -p /usr/src \t&& tar -zxC /usr/src -f nginx.tar.gz \t&& rm nginx.tar.gz \t&& cd /usr/src/nginx-$NGINX_VERSION \t&& ./configure $CONFIG --with-debug \t&& make -j$(getconf _NPROCESSORS_ONLN) \t&& mv objs/nginx objs/nginx-debug \t&& mv objs/ngx_http_xslt_filter_module.so objs/ngx_http_xslt_filter_module-debug.so \t&& mv objs/ngx_http_image_filter_module.so objs/ngx_http_image_filter_module-debug.so \t&& mv objs/ngx_http_geoip_module.so objs/ngx_http_geoip_module-debug.so \t&& mv objs/ngx_stream_geoip_module.so objs/ngx_stream_geoip_module-debug.so \t&& ./configure $CONFIG \t&& make -j$(getconf _NPROCESSORS_ONLN) \t&& make install \t&& rm -rf /etc/nginx/html/ \t&& mkdir /etc/nginx/conf.d/ \t&& mkdir -p /usr/share/nginx/html/ \t&& install -m644 html/index.html /usr/share/nginx/html/ \t&& install -m644 html/50x.html /usr/share/nginx/html/ \t&& install -m755 objs/nginx-debug /usr/sbin/nginx-debug \t&& install -m755 objs/ngx_http_xslt_filter_module-debug.so /usr/lib/nginx/modules/ngx_http_xslt_filter_module-debug.so \t&& install -m755 objs/ngx_http_image_filter_module-debug.so /usr/lib/nginx/modules/ngx_http_image_filter_module-debug.so \t&& install -m755 objs/ngx_http_geoip_module-debug.so /usr/lib/nginx/modules/ngx_http_geoip_module-debug.so \t&& install -m755 objs/ngx_stream_geoip_module-debug.so /usr/lib/nginx/modules/ngx_stream_geoip_module-debug.so \t&& ln -s ../../usr/lib/nginx/modules /etc/nginx/modules \t&& strip /usr/sbin/nginx* \t&& strip /usr/lib/nginx/modules/*.so \t&& rm -rf /usr/src/nginx-$NGINX_VERSION \t\t&& apk add --no-cache --virtual .gettext gettext \t&& mv /usr/bin/envsubst /tmp/ \t\t&& runDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' /usr/sbin/nginx /usr/lib/nginx/modules/*.so /tmp/envsubst \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t)\" \t&& apk add --no-cache --virtual .nginx-rundeps $runDeps \t&& apk del .build-deps \t&& apk del .gettext \t&& mv /tmp/envsubst /usr/local/bin/ \t\t&& apk add --no-cache tzdata \t\t&& ln -sf /dev/stdout /var/log/nginx/access.log \t&& ln -sf /dev/stderr /var/log/nginx/error.log"
                },
                {
                    "created": "2018-01-10T04:10:12.355007421Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:af94db45bb7e4b8ff4e699f1ff6f41c348f9876073ad91d6e803070415f8d9ce in /etc/nginx/nginx.conf "
                },
                {
                    "created": "2018-01-10T04:10:13.003338567Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:1d1ac3b9a14c94a709efa20da1c4268a931f1a234e782801ce5912fdcf53a7af in /etc/nginx/conf.d/default.conf "
                },
                {
                    "created": "2018-01-10T04:10:13.418726553Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 80/tcp",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-10T04:10:13.78827244Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL [SIGTERM]",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-10T04:10:14.172224507Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-07T14:41:22.737270351Z",
                    "created_by": "/bin/sh -c rm /etc/nginx/conf.d/*"
                },
                {
                    "created": "2018-02-07T14:41:23.072556783Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7ce382ee511fb153f94bff2cf0341f05a83b519cf8891e720f76ce3d0abe3974 in /etc/nginx/conf.d/ "
                },
                {
                    "created": "2018-02-07T14:41:23.288767874Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:03ab889ddfb0f6000a3fc608b0d13295c53c4acbadf99a98ce9547c5ed09259e in /usr/share/nginx/html/ "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d39d92664027be502c35cf1bf464c726d15b8ead0e3084be6e252a161730bc82",
                    "sha256:7066df57739cd6868a05bb4dab31e925f2d6d48f24a428a55afb535ba807a8ae",
                    "sha256:343bb8320f2b0c84419a46bffd9ec3031dbc08ab1ba61a977d763aa3052143d9",
                    "sha256:f93c2b24cb183eb0e55dd9bcd54a02b2b71200399996e4ce24f2b8a3f9b3c046",
                    "sha256:981fe84d4803885cb5bd4b4df51677c52031baeaf12952402973a06e896a5cf9",
                    "sha256:e27ed75fa318e5dbaef4a55e111eda018fe0cb2637d5b4c9014a3eab1889ea67",
                    "sha256:274fad2d151ffffd7ac5fb0f2d9aec02edc618527691509e289f1763ae30e2f6"
                ]
            }
        },
        "0.2": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.21.6",
                    "NJS_VERSION=0.7.2",
                    "PKG_RELEASE=1"
                ],
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "Cmd": [
                    "nginx",
                    "-g",
                    "daemon off;"
                ],
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>"
                },
                "StopSignal": "SIGQUIT",
                "OnBuild": null
            },
            "created": "2022-03-24T01:33:09.087669408Z",
            "history": [
                {
                    "created": "2022-03-23T15:21:21.023235786Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7386ad893672007cca2d73cec1862d582a69d581ca1d155d4599cb2aa54d5498 in / "
                },
                {
                    "created": "2022-03-23T15:21:21.119907319Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-23T17:15:27.338248454Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-23T17:15:27.424557057Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NGINX_VERSION=1.21.6",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-23T17:15:27.512685952Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NJS_VERSION=0.7.2",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-23T17:15:27.600363618Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PKG_RELEASE=1",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-23T17:15:34.374060227Z",
                    "created_by": "/bin/sh -c set -x     && addgroup -g 101 -S nginx     && adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx     && apkArch=\"$(cat /etc/apk/arch)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}.${NJS_VERSION}-r${PKG_RELEASE}     \"     && apk add --no-cache --virtual .checksum-deps         openssl     && case \"$apkArch\" in         x86_64|aarch64)             set -x             && KEY_SHA512=\"e7fa8303923d9b95db37a77ad46c68fd4755ff935d0a534d26eba83de193c76166c68bfe7f65471bf8881004ef4aa6df3e34689c305662750c0172fca5d8552a *stdin\"             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if [ \"$(openssl rsa -pubin -in /tmp/nginx_signing.rsa.pub -text -noout | openssl sha512 -r)\" = \"$KEY_SHA512\" ]; then                 echo \"key verification succeeded!\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \"key verification failed!\";                 exit 1;             fi             && apk add -X \"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\"$(mktemp -d)\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre2-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 perl-dev                 libedit-dev                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \"                 export HOME=${tempDir}                 && cd ${tempDir}                 && curl -f -O https://hg.nginx.org/pkg-oss/archive/${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && PKGOSSCHECKSUM=\\\"29ec1c635da36b7727953544e1a20e9d75bd9d2050e063b9f81f88ca07bb7ea0b65cef46d0f3cb7134b38ce9b94ecada631619f233231845a3d8a16b6ad0db82 *${NGINX_VERSION}-${PKG_RELEASE}.tar.gz\\\"                 && if [ \\\"\\$(openssl sha512 -r ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz)\\\" = \\\"\\$PKGOSSCHECKSUM\\\" ]; then                     echo \\\"pkg-oss tarball checksum verification succeeded!\\\";                 else                     echo \\\"pkg-oss tarball checksum verification failed!\\\";                     exit 1;                 fi                 && tar xzvf ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && cd pkg-oss-${NGINX_VERSION}-${PKG_RELEASE}                 && cd alpine                 && make all                 && apk index -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk                 && abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \"             && cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del .build-deps             && apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && apk del .checksum-deps     && if [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi     && if [ -n \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && if [ -n \"/etc/apk/keys/nginx_signing.rsa.pub\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     && apk add --no-cache --virtual .gettext gettext     && mv /usr/bin/envsubst /tmp/         && runDeps=\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\"     && apk add --no-cache $runDeps     && apk del .gettext     && mv /tmp/envsubst /usr/local/bin/     && apk add --no-cache tzdata     && apk add --no-cache curl ca-certificates     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d"
                },
                {
                    "created": "2022-03-23T17:15:34.542235653Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:65504f71f5855ca017fb64d502ce873a31b2e0decd75297a8fb0a287f97acf92 in / "
                },
                {
                    "created": "2022-03-23T17:15:34.659989233Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0b866ff3fc1ef5b03c4e6c8c513ae014f691fb05d530257dfffd07035c1b75da in /docker-entrypoint.d "
                },
                {
                    "created": "2022-03-23T17:15:34.759902231Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0fd5fca330dcd6a7de297435e32af634f29f7132ed0550d342cad9fd20158258 in /docker-entrypoint.d "
                },
                {
                    "created": "2022-03-23T17:15:34.860810521Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:09a214a3e07c919af2fb2d7c749ccbc446b8c10eb217366e5a65640ee9edcc25 in /docker-entrypoint.d "
                },
                {
                    "created": "2022-03-23T17:15:34.945937382Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-23T17:15:35.034038199Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 80",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-23T17:15:35.127847652Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGQUIT",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-23T17:15:35.236263654Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-24T01:33:08.933379801Z",
                    "created_by": "RUN /bin/sh -c rm /etc/nginx/conf.d/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-03-24T01:33:09.003813097Z",
                    "created_by": "ADD hello.conf /etc/nginx/conf.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-03-24T01:33:09.087669408Z",
                    "created_by": "ADD index.html /usr/share/nginx/html/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJzb3VyY2VzIjpbeyJ0eXBlIjoiZG9ja2VyLWltYWdlIiwicmVmIjoiZG9ja2VyLmlvL2xpYnJhcnkvbmdpbng6bWFpbmxpbmUtYWxwaW5lIiwicGluIjoic2hhMjU2OjhkZjJjNTdiMmI5YmEzNGFjNGRmNmU4ZjY0M2E5NThlZjk0YjkzOTZjMzAzMjZmOTVhMGYwMjA2ODA4ZTkzODIifV19",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ff768a1413ba109308c0d897ffa555e052a46d2cf471178f001b825b4c21f354",
                    "sha256:cd1f51e8059a4314966e4d1a55cb19aeb2fa549c002f1162413abcd21d7c4266",
                    "sha256:8e2df9084bbfe047ed3f8c2d537e514b5d292837322b7432bd25d09f23195a17",
                    "sha256:e163b4581361207b8ec5a63d917294b7e1be4f9e0ab70acbff25dc0f27619a4c",
                    "sha256:0e558dedd50212eb771ffa8ab1638eb14a6529fcfcfdb870ab99f34fc131ca5c",
                    "sha256:527aa7494e14e82bf52a8f6de699ed336f73f7433c283d391ad5f4588db50015",
                    "sha256:c8f40764edba8851404ae84dbff9e4647ed6a2cd39d69c28deeccbcb1dacf3c0",
                    "sha256:c5da6e38370e44f490e27dd7e9e8102f1a0c0814b2d8ecd28d63f40dafd50c22",
                    "sha256:3e3ca9732fb7439b23c9b6dd1299a9550ca905b01d322ab5792e4955f06df46b"
                ]
            }
        },
        "0.2-plain-text": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.21.6",
                    "NJS_VERSION=0.7.2",
                    "PKG_RELEASE=1"
                ],
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "Cmd": [
                    "nginx",
                    "-g",
                    "daemon off;"
                ],
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>"
                },
                "StopSignal": "SIGQUIT",
                "OnBuild": null
            },
            "created": "2022-03-24T01:34:01.25383546Z",
            "history": [
                {
                    "created": "2022-03-23T15:21:21.023235786Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7386ad893672007cca2d73cec1862d582a69d581ca1d155d4599cb2aa54d5498 in / "
                },
                {
                    "created": "2022-03-23T15:21:21.119907319Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-23T17:15:27.338248454Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-23T17:15:27.424557057Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NGINX_VERSION=1.21.6",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-23T17:15:27.512685952Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NJS_VERSION=0.7.2",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-23T17:15:27.600363618Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PKG_RELEASE=1",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-23T17:15:34.374060227Z",
                    "created_by": "/bin/sh -c set -x     && addgroup -g 101 -S nginx     && adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx     && apkArch=\"$(cat /etc/apk/arch)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}.${NJS_VERSION}-r${PKG_RELEASE}     \"     && apk add --no-cache --virtual .checksum-deps         openssl     && case \"$apkArch\" in         x86_64|aarch64)             set -x             && KEY_SHA512=\"e7fa8303923d9b95db37a77ad46c68fd4755ff935d0a534d26eba83de193c76166c68bfe7f65471bf8881004ef4aa6df3e34689c305662750c0172fca5d8552a *stdin\"             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if [ \"$(openssl rsa -pubin -in /tmp/nginx_signing.rsa.pub -text -noout | openssl sha512 -r)\" = \"$KEY_SHA512\" ]; then                 echo \"key verification succeeded!\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \"key verification failed!\";                 exit 1;             fi             && apk add -X \"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\"$(mktemp -d)\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre2-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 perl-dev                 libedit-dev                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \"                 export HOME=${tempDir}                 && cd ${tempDir}                 && curl -f -O https://hg.nginx.org/pkg-oss/archive/${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && PKGOSSCHECKSUM=\\\"29ec1c635da36b7727953544e1a20e9d75bd9d2050e063b9f81f88ca07bb7ea0b65cef46d0f3cb7134b38ce9b94ecada631619f233231845a3d8a16b6ad0db82 *${NGINX_VERSION}-${PKG_RELEASE}.tar.gz\\\"                 && if [ \\\"\\$(openssl sha512 -r ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz)\\\" = \\\"\\$PKGOSSCHECKSUM\\\" ]; then                     echo \\\"pkg-oss tarball checksum verification succeeded!\\\";                 else                     echo \\\"pkg-oss tarball checksum verification failed!\\\";                     exit 1;                 fi                 && tar xzvf ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && cd pkg-oss-${NGINX_VERSION}-${PKG_RELEASE}                 && cd alpine                 && make all                 && apk index -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk                 && abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \"             && cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del .build-deps             && apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && apk del .checksum-deps     && if [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi     && if [ -n \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && if [ -n \"/etc/apk/keys/nginx_signing.rsa.pub\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     && apk add --no-cache --virtual .gettext gettext     && mv /usr/bin/envsubst /tmp/         && runDeps=\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\"     && apk add --no-cache $runDeps     && apk del .gettext     && mv /tmp/envsubst /usr/local/bin/     && apk add --no-cache tzdata     && apk add --no-cache curl ca-certificates     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d"
                },
                {
                    "created": "2022-03-23T17:15:34.542235653Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:65504f71f5855ca017fb64d502ce873a31b2e0decd75297a8fb0a287f97acf92 in / "
                },
                {
                    "created": "2022-03-23T17:15:34.659989233Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0b866ff3fc1ef5b03c4e6c8c513ae014f691fb05d530257dfffd07035c1b75da in /docker-entrypoint.d "
                },
                {
                    "created": "2022-03-23T17:15:34.759902231Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0fd5fca330dcd6a7de297435e32af634f29f7132ed0550d342cad9fd20158258 in /docker-entrypoint.d "
                },
                {
                    "created": "2022-03-23T17:15:34.860810521Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:09a214a3e07c919af2fb2d7c749ccbc446b8c10eb217366e5a65640ee9edcc25 in /docker-entrypoint.d "
                },
                {
                    "created": "2022-03-23T17:15:34.945937382Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-23T17:15:35.034038199Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 80",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-23T17:15:35.127847652Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGQUIT",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-23T17:15:35.236263654Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-24T01:33:58.913613975Z",
                    "created_by": "RUN /bin/sh -c rm /etc/nginx/conf.d/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-03-24T01:34:01.25383546Z",
                    "created_by": "ADD hello-plain-text.conf /etc/nginx/conf.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJzb3VyY2VzIjpbeyJ0eXBlIjoiZG9ja2VyLWltYWdlIiwicmVmIjoiZG9ja2VyLmlvL2xpYnJhcnkvbmdpbng6bWFpbmxpbmUtYWxwaW5lIiwicGluIjoic2hhMjU2OjhkZjJjNTdiMmI5YmEzNGFjNGRmNmU4ZjY0M2E5NThlZjk0YjkzOTZjMzAzMjZmOTVhMGYwMjA2ODA4ZTkzODIifV19",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ff768a1413ba109308c0d897ffa555e052a46d2cf471178f001b825b4c21f354",
                    "sha256:cd1f51e8059a4314966e4d1a55cb19aeb2fa549c002f1162413abcd21d7c4266",
                    "sha256:8e2df9084bbfe047ed3f8c2d537e514b5d292837322b7432bd25d09f23195a17",
                    "sha256:e163b4581361207b8ec5a63d917294b7e1be4f9e0ab70acbff25dc0f27619a4c",
                    "sha256:0e558dedd50212eb771ffa8ab1638eb14a6529fcfcfdb870ab99f34fc131ca5c",
                    "sha256:527aa7494e14e82bf52a8f6de699ed336f73f7433c283d391ad5f4588db50015",
                    "sha256:5ab9db88d319c465116113e7aa46bc2b3ea1bb9288b19e0bbf26d8acb73fbc00",
                    "sha256:6cf613b4e9685c7f17916cee3ee44ff10a409c99abc479e3b5d8b271c14253b7"
                ]
            }
        },
        "0.3": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.25.3",
                    "PKG_RELEASE=1",
                    "NJS_VERSION=0.8.2"
                ],
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "Cmd": [
                    "nginx",
                    "-g",
                    "daemon off;"
                ],
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>"
                },
                "StopSignal": "SIGQUIT",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2024-01-28T01:28:23.519606328Z",
            "history": [
                {
                    "created": "2023-10-24T22:44:45Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8729f9c0258836b640e9e789c7ab029cf4547e0596557d54dd4a4d7d8e4a785f in / "
                },
                {
                    "created": "2023-10-24T22:44:45Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-24T22:44:45Z",
                    "created_by": "LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-24T22:44:45Z",
                    "created_by": "ENV NGINX_VERSION=1.25.3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-24T22:44:45Z",
                    "created_by": "ENV PKG_RELEASE=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-24T22:44:45Z",
                    "created_by": "RUN /bin/sh -c set -x     && addgroup -g 101 -S nginx     && adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx     && apkArch=\"$(cat /etc/apk/arch)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}     \"     && apk add --no-cache --virtual .checksum-deps         openssl     && case \"$apkArch\" in         x86_64|aarch64)             set -x             && KEY_SHA512=\"e09fa32f0a0eab2b879ccbbc4d0e4fb9751486eedda75e35fac65802cc9faa266425edf83e261137a2f4d16281ce2c1a5f4502930fe75154723da014214f0655\"             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if echo \"$KEY_SHA512 */tmp/nginx_signing.rsa.pub\" | sha512sum -c -; then                 echo \"key verification succeeded!\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \"key verification failed!\";                 exit 1;             fi             && apk add -X \"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\"$(mktemp -d)\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre2-dev                 zlib-dev                 linux-headers                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \"                 export HOME=${tempDir}                 && cd ${tempDir}                 && curl -f -O https://hg.nginx.org/pkg-oss/archive/${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && PKGOSSCHECKSUM=\\\"00b217979265cc9d66c991c9c89427558936dbaa568d175ca45780589171d94f1866217be09a83438d95494cf38baaa6788320f6d8d23f2fb29c03117391ff88 *${NGINX_VERSION}-${PKG_RELEASE}.tar.gz\\\"                 && if [ \\\"\\$(openssl sha512 -r ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz)\\\" = \\\"\\$PKGOSSCHECKSUM\\\" ]; then                     echo \\\"pkg-oss tarball checksum verification succeeded!\\\";                 else                     echo \\\"pkg-oss tarball checksum verification failed!\\\";                     exit 1;                 fi                 && tar xzvf ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && cd pkg-oss-${NGINX_VERSION}-${PKG_RELEASE}                 && cd alpine                 && make base                 && apk index -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk                 && abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \"             && cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del --no-network .build-deps             && apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && apk del --no-network .checksum-deps     && if [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi     && if [ -f \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && if [ -f \"/etc/apk/keys/nginx_signing.rsa.pub\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     && apk add --no-cache --virtual .gettext gettext     && mv /usr/bin/envsubst /tmp/         && runDeps=\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\"     && apk add --no-cache $runDeps     && apk del --no-network .gettext     && mv /tmp/envsubst /usr/local/bin/     && apk add --no-cache tzdata     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-24T22:44:45Z",
                    "created_by": "COPY docker-entrypoint.sh / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-24T22:44:45Z",
                    "created_by": "COPY 10-listen-on-ipv6-by-default.sh /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-24T22:44:45Z",
                    "created_by": "COPY 15-local-resolvers.envsh /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-24T22:44:45Z",
                    "created_by": "COPY 20-envsubst-on-templates.sh /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-24T22:44:45Z",
                    "created_by": "COPY 30-tune-worker-processes.sh /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-24T22:44:45Z",
                    "created_by": "ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-24T22:44:45Z",
                    "created_by": "EXPOSE map[80/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-24T22:44:45Z",
                    "created_by": "STOPSIGNAL SIGQUIT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-24T22:44:45Z",
                    "created_by": "CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-24T22:44:45Z",
                    "created_by": "ENV NJS_VERSION=0.8.2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-24T22:44:45Z",
                    "created_by": "RUN /bin/sh -c set -x     && apkArch=\"$(cat /etc/apk/arch)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}.${NJS_VERSION}-r${PKG_RELEASE}     \"     && apk add --no-cache --virtual .checksum-deps         openssl     && case \"$apkArch\" in         x86_64|aarch64)             set -x             && KEY_SHA512=\"e09fa32f0a0eab2b879ccbbc4d0e4fb9751486eedda75e35fac65802cc9faa266425edf83e261137a2f4d16281ce2c1a5f4502930fe75154723da014214f0655\"             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if echo \"$KEY_SHA512 */tmp/nginx_signing.rsa.pub\" | sha512sum -c -; then                 echo \"key verification succeeded!\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \"key verification failed!\";                 exit 1;             fi             && apk add -X \"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\"$(mktemp -d)\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre2-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 libedit-dev                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \"                 export HOME=${tempDir}                 && cd ${tempDir}                 && curl -f -O https://hg.nginx.org/pkg-oss/archive/${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && PKGOSSCHECKSUM=\\\"00b217979265cc9d66c991c9c89427558936dbaa568d175ca45780589171d94f1866217be09a83438d95494cf38baaa6788320f6d8d23f2fb29c03117391ff88 *${NGINX_VERSION}-${PKG_RELEASE}.tar.gz\\\"                 && if [ \\\"\\$(openssl sha512 -r ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz)\\\" = \\\"\\$PKGOSSCHECKSUM\\\" ]; then                     echo \\\"pkg-oss tarball checksum verification succeeded!\\\";                 else                     echo \\\"pkg-oss tarball checksum verification failed!\\\";                     exit 1;                 fi                 && tar xzvf ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && cd pkg-oss-${NGINX_VERSION}-${PKG_RELEASE}                 && cd alpine                 && make module-geoip module-image-filter module-njs module-xslt                 && apk index -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk                 && abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \"             && cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del --no-network .build-deps             && apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && apk del --no-network .checksum-deps     && if [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi     && if [ -f \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && if [ -f \"/etc/apk/keys/nginx_signing.rsa.pub\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     && apk add --no-cache curl ca-certificates # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-28T01:28:23.284786189Z",
                    "created_by": "RUN /bin/sh -c rm /etc/nginx/conf.d/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-28T01:28:23.410697503Z",
                    "created_by": "ADD hello.conf /etc/nginx/conf.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-28T01:28:23.519606328Z",
                    "created_by": "ADD index.html /usr/share/nginx/html/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:aedc3bda2944bb9bcb6c3d475bee8b460db9a9b0f3e0b33a6ed2fd1ae0f1d445",
                    "sha256:de350a6975630643c806a99a2f8b4e181a5e71fe1d594951e736f7861aae93ed",
                    "sha256:ad2ff101ef185b6611ecfb6516b03aa9c775a1d68624bd1f58f69b220761d72d",
                    "sha256:9a3be9af92ce9451e146e2acaccc5766e8ba1deb4e6296381f0a2c80c7993a45",
                    "sha256:21eb277a065e4a9fcfdda8056831f87c7e928d61e19be83bef0accdc7f1fb38a",
                    "sha256:4fc77163dad1ca5b418dbc228b4d9befe41ce577b381692f42ee38c56cf2f76d",
                    "sha256:61b0026600b0c2d8961e33441a5f7dc2097fba05db6effee5f5c5ff073a82850",
                    "sha256:489171e8d0fd226e7e8e032a40bdc19083c46ac72c2e1753dc4d1010837a2fe1",
                    "sha256:a223f457eee9366370344cad650a94614867d73dc593811666add7dc97eb7dbc",
                    "sha256:a4285d27c5db489ade495d62cb3d88a4073a58aa1e3e0d1b813192ad59a9c696",
                    "sha256:08b6229430471e96644cddff46fc58731b9e8d8d91ac5dd2788c00a8b49cfcd3"
                ]
            }
        },
        "0.3-plain-text": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.25.3",
                    "PKG_RELEASE=1",
                    "NJS_VERSION=0.8.2"
                ],
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "Cmd": [
                    "nginx",
                    "-g",
                    "daemon off;"
                ],
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>"
                },
                "StopSignal": "SIGQUIT",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2024-01-28T01:28:27.572548537Z",
            "history": [
                {
                    "created": "2023-10-24T22:44:45Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8729f9c0258836b640e9e789c7ab029cf4547e0596557d54dd4a4d7d8e4a785f in / "
                },
                {
                    "created": "2023-10-24T22:44:45Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-24T22:44:45Z",
                    "created_by": "LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-24T22:44:45Z",
                    "created_by": "ENV NGINX_VERSION=1.25.3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-24T22:44:45Z",
                    "created_by": "ENV PKG_RELEASE=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-24T22:44:45Z",
                    "created_by": "RUN /bin/sh -c set -x     && addgroup -g 101 -S nginx     && adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx     && apkArch=\"$(cat /etc/apk/arch)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}     \"     && apk add --no-cache --virtual .checksum-deps         openssl     && case \"$apkArch\" in         x86_64|aarch64)             set -x             && KEY_SHA512=\"e09fa32f0a0eab2b879ccbbc4d0e4fb9751486eedda75e35fac65802cc9faa266425edf83e261137a2f4d16281ce2c1a5f4502930fe75154723da014214f0655\"             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if echo \"$KEY_SHA512 */tmp/nginx_signing.rsa.pub\" | sha512sum -c -; then                 echo \"key verification succeeded!\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \"key verification failed!\";                 exit 1;             fi             && apk add -X \"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\"$(mktemp -d)\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre2-dev                 zlib-dev                 linux-headers                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \"                 export HOME=${tempDir}                 && cd ${tempDir}                 && curl -f -O https://hg.nginx.org/pkg-oss/archive/${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && PKGOSSCHECKSUM=\\\"00b217979265cc9d66c991c9c89427558936dbaa568d175ca45780589171d94f1866217be09a83438d95494cf38baaa6788320f6d8d23f2fb29c03117391ff88 *${NGINX_VERSION}-${PKG_RELEASE}.tar.gz\\\"                 && if [ \\\"\\$(openssl sha512 -r ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz)\\\" = \\\"\\$PKGOSSCHECKSUM\\\" ]; then                     echo \\\"pkg-oss tarball checksum verification succeeded!\\\";                 else                     echo \\\"pkg-oss tarball checksum verification failed!\\\";                     exit 1;                 fi                 && tar xzvf ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && cd pkg-oss-${NGINX_VERSION}-${PKG_RELEASE}                 && cd alpine                 && make base                 && apk index -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk                 && abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \"             && cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del --no-network .build-deps             && apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && apk del --no-network .checksum-deps     && if [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi     && if [ -f \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && if [ -f \"/etc/apk/keys/nginx_signing.rsa.pub\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     && apk add --no-cache --virtual .gettext gettext     && mv /usr/bin/envsubst /tmp/         && runDeps=\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\"     && apk add --no-cache $runDeps     && apk del --no-network .gettext     && mv /tmp/envsubst /usr/local/bin/     && apk add --no-cache tzdata     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-24T22:44:45Z",
                    "created_by": "COPY docker-entrypoint.sh / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-24T22:44:45Z",
                    "created_by": "COPY 10-listen-on-ipv6-by-default.sh /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-24T22:44:45Z",
                    "created_by": "COPY 15-local-resolvers.envsh /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-24T22:44:45Z",
                    "created_by": "COPY 20-envsubst-on-templates.sh /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-24T22:44:45Z",
                    "created_by": "COPY 30-tune-worker-processes.sh /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-24T22:44:45Z",
                    "created_by": "ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-24T22:44:45Z",
                    "created_by": "EXPOSE map[80/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-24T22:44:45Z",
                    "created_by": "STOPSIGNAL SIGQUIT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-24T22:44:45Z",
                    "created_by": "CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-24T22:44:45Z",
                    "created_by": "ENV NJS_VERSION=0.8.2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-24T22:44:45Z",
                    "created_by": "RUN /bin/sh -c set -x     && apkArch=\"$(cat /etc/apk/arch)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}.${NJS_VERSION}-r${PKG_RELEASE}     \"     && apk add --no-cache --virtual .checksum-deps         openssl     && case \"$apkArch\" in         x86_64|aarch64)             set -x             && KEY_SHA512=\"e09fa32f0a0eab2b879ccbbc4d0e4fb9751486eedda75e35fac65802cc9faa266425edf83e261137a2f4d16281ce2c1a5f4502930fe75154723da014214f0655\"             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if echo \"$KEY_SHA512 */tmp/nginx_signing.rsa.pub\" | sha512sum -c -; then                 echo \"key verification succeeded!\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \"key verification failed!\";                 exit 1;             fi             && apk add -X \"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\"$(mktemp -d)\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre2-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 libedit-dev                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \"                 export HOME=${tempDir}                 && cd ${tempDir}                 && curl -f -O https://hg.nginx.org/pkg-oss/archive/${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && PKGOSSCHECKSUM=\\\"00b217979265cc9d66c991c9c89427558936dbaa568d175ca45780589171d94f1866217be09a83438d95494cf38baaa6788320f6d8d23f2fb29c03117391ff88 *${NGINX_VERSION}-${PKG_RELEASE}.tar.gz\\\"                 && if [ \\\"\\$(openssl sha512 -r ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz)\\\" = \\\"\\$PKGOSSCHECKSUM\\\" ]; then                     echo \\\"pkg-oss tarball checksum verification succeeded!\\\";                 else                     echo \\\"pkg-oss tarball checksum verification failed!\\\";                     exit 1;                 fi                 && tar xzvf ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && cd pkg-oss-${NGINX_VERSION}-${PKG_RELEASE}                 && cd alpine                 && make module-geoip module-image-filter module-njs module-xslt                 && apk index -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk                 && abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \"             && cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del --no-network .build-deps             && apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && apk del --no-network .checksum-deps     && if [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi     && if [ -f \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && if [ -f \"/etc/apk/keys/nginx_signing.rsa.pub\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     && apk add --no-cache curl ca-certificates # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-28T01:28:27.507445253Z",
                    "created_by": "RUN /bin/sh -c rm /etc/nginx/conf.d/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-28T01:28:27.572548537Z",
                    "created_by": "ADD hello-plain-text.conf /etc/nginx/conf.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:aedc3bda2944bb9bcb6c3d475bee8b460db9a9b0f3e0b33a6ed2fd1ae0f1d445",
                    "sha256:de350a6975630643c806a99a2f8b4e181a5e71fe1d594951e736f7861aae93ed",
                    "sha256:ad2ff101ef185b6611ecfb6516b03aa9c775a1d68624bd1f58f69b220761d72d",
                    "sha256:9a3be9af92ce9451e146e2acaccc5766e8ba1deb4e6296381f0a2c80c7993a45",
                    "sha256:21eb277a065e4a9fcfdda8056831f87c7e928d61e19be83bef0accdc7f1fb38a",
                    "sha256:4fc77163dad1ca5b418dbc228b4d9befe41ce577b381692f42ee38c56cf2f76d",
                    "sha256:61b0026600b0c2d8961e33441a5f7dc2097fba05db6effee5f5c5ff073a82850",
                    "sha256:489171e8d0fd226e7e8e032a40bdc19083c46ac72c2e1753dc4d1010837a2fe1",
                    "sha256:f8b6d5f16b62acc5b10ddca4ddbc7468cacb5ce47e86bcff969b29ddd1f0b49d",
                    "sha256:ea9fa173a2a8e778be99b3019d7c19002e575d5255ce32437c9ea22ac51da48c"
                ]
            }
        },
        "0.4": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.25.5",
                    "PKG_RELEASE=1",
                    "NJS_VERSION=0.8.4",
                    "NJS_RELEASE=3"
                ],
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "Cmd": [
                    "nginx",
                    "-g",
                    "daemon off;"
                ],
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>"
                },
                "StopSignal": "SIGQUIT",
                "ArgsEscaped": true
            },
            "created": "2024-05-07T01:28:25.283422117Z",
            "history": [
                {
                    "created": "2024-01-27T00:30:48.624602109Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:37a76ec18f9887751cd8473744917d08b7431fc4085097bb6a09d81b41775473 in / "
                },
                {
                    "created": "2024-01-27T00:30:48.743965523Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "ENV NGINX_VERSION=1.25.5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "ENV PKG_RELEASE=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "RUN /bin/sh -c set -x     && addgroup -g 101 -S nginx     && adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx     && apkArch=\"$(cat /etc/apk/arch)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}     \"     && apk add --no-cache --virtual .checksum-deps         openssl     && case \"$apkArch\" in         x86_64|aarch64)             set -x             && KEY_SHA512=\"e09fa32f0a0eab2b879ccbbc4d0e4fb9751486eedda75e35fac65802cc9faa266425edf83e261137a2f4d16281ce2c1a5f4502930fe75154723da014214f0655\"             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if echo \"$KEY_SHA512 */tmp/nginx_signing.rsa.pub\" | sha512sum -c -; then                 echo \"key verification succeeded!\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \"key verification failed!\";                 exit 1;             fi             && apk add -X \"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\"$(mktemp -d)\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre2-dev                 zlib-dev                 linux-headers                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \"                 export HOME=${tempDir}                 && cd ${tempDir}                 && curl -f -O https://hg.nginx.org/pkg-oss/archive/27357d6c5453.tar.gz                 && PKGOSSCHECKSUM=\\\"a80fc5706ad8e98597478b9e041f658375d53d22f7c8004dd16354067a3d48eb4ef234830b697ddf5c45ec57b837237cc11317bcaaa5133ccbe71bce15d969b0 *27357d6c5453.tar.gz\\\"                 && if [ \\\"\\$(openssl sha512 -r 27357d6c5453.tar.gz)\\\" = \\\"\\$PKGOSSCHECKSUM\\\" ]; then                     echo \\\"pkg-oss tarball checksum verification succeeded!\\\";                 else                     echo \\\"pkg-oss tarball checksum verification failed!\\\";                     exit 1;                 fi                 && tar xzvf 27357d6c5453.tar.gz                 && cd pkg-oss-27357d6c5453                 && cd alpine                 && make base                 && apk index -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk                 && abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \"             && cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del --no-network .build-deps             && apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && apk del --no-network .checksum-deps     && if [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi     && if [ -f \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && apk add --no-cache --virtual .gettext gettext     && mv /usr/bin/envsubst /tmp/         && runDeps=\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\"     && apk add --no-cache $runDeps     && apk del --no-network .gettext     && mv /tmp/envsubst /usr/local/bin/     && apk add --no-cache tzdata     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "COPY docker-entrypoint.sh / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "COPY 10-listen-on-ipv6-by-default.sh /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "COPY 15-local-resolvers.envsh /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "COPY 20-envsubst-on-templates.sh /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "COPY 30-tune-worker-processes.sh /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "EXPOSE map[80/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "STOPSIGNAL SIGQUIT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "ENV NJS_VERSION=0.8.4",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "ENV NJS_RELEASE=3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "RUN /bin/sh -c set -x     && apkArch=\"$(cat /etc/apk/arch)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}.${NJS_VERSION}-r${NJS_RELEASE}     \"     && apk add --no-cache --virtual .checksum-deps         openssl     && case \"$apkArch\" in         x86_64|aarch64)             apk add -X \"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\"$(mktemp -d)\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre2-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 libedit-dev                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \"                 export HOME=${tempDir}                 && cd ${tempDir}                 && curl -f -O https://hg.nginx.org/pkg-oss/archive/27357d6c5453.tar.gz                 && PKGOSSCHECKSUM=\\\"a80fc5706ad8e98597478b9e041f658375d53d22f7c8004dd16354067a3d48eb4ef234830b697ddf5c45ec57b837237cc11317bcaaa5133ccbe71bce15d969b0 *27357d6c5453.tar.gz\\\"                 && if [ \\\"\\$(openssl sha512 -r 27357d6c5453.tar.gz)\\\" = \\\"\\$PKGOSSCHECKSUM\\\" ]; then                     echo \\\"pkg-oss tarball checksum verification succeeded!\\\";                 else                     echo \\\"pkg-oss tarball checksum verification failed!\\\";                     exit 1;                 fi                 && tar xzvf 27357d6c5453.tar.gz                 && cd pkg-oss-27357d6c5453                 && cd alpine                 && make module-geoip module-image-filter module-njs module-xslt                 && apk index -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk                 && abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \"             && cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del --no-network .build-deps             && apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && apk del --no-network .checksum-deps     && if [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi     && if [ -f \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && apk add --no-cache curl ca-certificates # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-07T01:28:25.190198354Z",
                    "created_by": "RUN /bin/sh -c rm /etc/nginx/conf.d/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-07T01:28:25.231049111Z",
                    "created_by": "ADD hello.conf /etc/nginx/conf.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-07T01:28:25.283422117Z",
                    "created_by": "ADD index.html /usr/share/nginx/html/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d4fc045c9e3a848011de66f34b81f052d4f2c15a17bb196d637e526349601820",
                    "sha256:75061be648475f15ce7ea26b596a4be9e7ac6340ba1ed8e9bde2cd89d327f395",
                    "sha256:8fbd5a835e5ed58ae3052f9f3dcbe403e2ac8232923a0ad7e265d5b3bca237d7",
                    "sha256:af5598fef05f9b55831dbc91014bb31d9bf769ebe098de77ee9ed2c32de157a4",
                    "sha256:3d04ead9b4009423e1ec0e60e5eeb222a933d06fbb0210c428a978f43f374c4b",
                    "sha256:5be225e16e44baf5d7a9e97555f8afa8e456cb063856be51f6d8670c0a5e0b42",
                    "sha256:9c70f446fbe2aa1ed2edb8226ca87d531fde4786fa52f7f4858983a64008d29e",
                    "sha256:ce495f7b0b7de22d7a72caa65f8a58a1e4903099ecab992b57d8728fa210aa1b",
                    "sha256:1a1856839c6198a01185f388a542f33823d81799db5f040396b0764ceb08a8a2",
                    "sha256:b215803760cd8f1407b8a110a8db19c910353e73ee814338953ab01872e45cb4",
                    "sha256:16bb58648baf7a10c47a7385fff58ecba0e1604b81e22afe9d2ec7d57b0e6578"
                ]
            }
        },
        "0.4-plain-text": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.25.5",
                    "PKG_RELEASE=1",
                    "NJS_VERSION=0.8.4",
                    "NJS_RELEASE=3"
                ],
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "Cmd": [
                    "nginx",
                    "-g",
                    "daemon off;"
                ],
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>"
                },
                "StopSignal": "SIGQUIT",
                "ArgsEscaped": true
            },
            "created": "2024-05-07T01:28:28.431610759Z",
            "history": [
                {
                    "created": "2024-01-27T00:30:48.624602109Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:37a76ec18f9887751cd8473744917d08b7431fc4085097bb6a09d81b41775473 in / "
                },
                {
                    "created": "2024-01-27T00:30:48.743965523Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "ENV NGINX_VERSION=1.25.5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "ENV PKG_RELEASE=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "RUN /bin/sh -c set -x     && addgroup -g 101 -S nginx     && adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx     && apkArch=\"$(cat /etc/apk/arch)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}     \"     && apk add --no-cache --virtual .checksum-deps         openssl     && case \"$apkArch\" in         x86_64|aarch64)             set -x             && KEY_SHA512=\"e09fa32f0a0eab2b879ccbbc4d0e4fb9751486eedda75e35fac65802cc9faa266425edf83e261137a2f4d16281ce2c1a5f4502930fe75154723da014214f0655\"             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if echo \"$KEY_SHA512 */tmp/nginx_signing.rsa.pub\" | sha512sum -c -; then                 echo \"key verification succeeded!\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \"key verification failed!\";                 exit 1;             fi             && apk add -X \"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\"$(mktemp -d)\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre2-dev                 zlib-dev                 linux-headers                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \"                 export HOME=${tempDir}                 && cd ${tempDir}                 && curl -f -O https://hg.nginx.org/pkg-oss/archive/27357d6c5453.tar.gz                 && PKGOSSCHECKSUM=\\\"a80fc5706ad8e98597478b9e041f658375d53d22f7c8004dd16354067a3d48eb4ef234830b697ddf5c45ec57b837237cc11317bcaaa5133ccbe71bce15d969b0 *27357d6c5453.tar.gz\\\"                 && if [ \\\"\\$(openssl sha512 -r 27357d6c5453.tar.gz)\\\" = \\\"\\$PKGOSSCHECKSUM\\\" ]; then                     echo \\\"pkg-oss tarball checksum verification succeeded!\\\";                 else                     echo \\\"pkg-oss tarball checksum verification failed!\\\";                     exit 1;                 fi                 && tar xzvf 27357d6c5453.tar.gz                 && cd pkg-oss-27357d6c5453                 && cd alpine                 && make base                 && apk index -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk                 && abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \"             && cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del --no-network .build-deps             && apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && apk del --no-network .checksum-deps     && if [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi     && if [ -f \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && apk add --no-cache --virtual .gettext gettext     && mv /usr/bin/envsubst /tmp/         && runDeps=\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\"     && apk add --no-cache $runDeps     && apk del --no-network .gettext     && mv /tmp/envsubst /usr/local/bin/     && apk add --no-cache tzdata     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "COPY docker-entrypoint.sh / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "COPY 10-listen-on-ipv6-by-default.sh /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "COPY 15-local-resolvers.envsh /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "COPY 20-envsubst-on-templates.sh /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "COPY 30-tune-worker-processes.sh /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "EXPOSE map[80/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "STOPSIGNAL SIGQUIT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "ENV NJS_VERSION=0.8.4",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "ENV NJS_RELEASE=3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "RUN /bin/sh -c set -x     && apkArch=\"$(cat /etc/apk/arch)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}.${NJS_VERSION}-r${NJS_RELEASE}     \"     && apk add --no-cache --virtual .checksum-deps         openssl     && case \"$apkArch\" in         x86_64|aarch64)             apk add -X \"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\"$(mktemp -d)\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre2-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 libedit-dev                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \"                 export HOME=${tempDir}                 && cd ${tempDir}                 && curl -f -O https://hg.nginx.org/pkg-oss/archive/27357d6c5453.tar.gz                 && PKGOSSCHECKSUM=\\\"a80fc5706ad8e98597478b9e041f658375d53d22f7c8004dd16354067a3d48eb4ef234830b697ddf5c45ec57b837237cc11317bcaaa5133ccbe71bce15d969b0 *27357d6c5453.tar.gz\\\"                 && if [ \\\"\\$(openssl sha512 -r 27357d6c5453.tar.gz)\\\" = \\\"\\$PKGOSSCHECKSUM\\\" ]; then                     echo \\\"pkg-oss tarball checksum verification succeeded!\\\";                 else                     echo \\\"pkg-oss tarball checksum verification failed!\\\";                     exit 1;                 fi                 && tar xzvf 27357d6c5453.tar.gz                 && cd pkg-oss-27357d6c5453                 && cd alpine                 && make module-geoip module-image-filter module-njs module-xslt                 && apk index -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk                 && abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \"             && cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del --no-network .build-deps             && apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && apk del --no-network .checksum-deps     && if [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi     && if [ -f \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && apk add --no-cache curl ca-certificates # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-07T01:28:28.400686465Z",
                    "created_by": "RUN /bin/sh -c rm /etc/nginx/conf.d/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-07T01:28:28.431610759Z",
                    "created_by": "ADD hello-plain-text.conf /etc/nginx/conf.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d4fc045c9e3a848011de66f34b81f052d4f2c15a17bb196d637e526349601820",
                    "sha256:75061be648475f15ce7ea26b596a4be9e7ac6340ba1ed8e9bde2cd89d327f395",
                    "sha256:8fbd5a835e5ed58ae3052f9f3dcbe403e2ac8232923a0ad7e265d5b3bca237d7",
                    "sha256:af5598fef05f9b55831dbc91014bb31d9bf769ebe098de77ee9ed2c32de157a4",
                    "sha256:3d04ead9b4009423e1ec0e60e5eeb222a933d06fbb0210c428a978f43f374c4b",
                    "sha256:5be225e16e44baf5d7a9e97555f8afa8e456cb063856be51f6d8670c0a5e0b42",
                    "sha256:9c70f446fbe2aa1ed2edb8226ca87d531fde4786fa52f7f4858983a64008d29e",
                    "sha256:ce495f7b0b7de22d7a72caa65f8a58a1e4903099ecab992b57d8728fa210aa1b",
                    "sha256:5bfff30ea4d7323a34b231d5f2a7acbf0594c212ec7f14bcf445d1511cb946ce",
                    "sha256:1db86321d520f4a9a86420e2fdb89633d80aa4d2a2e737a5a63ad4e17eb5d6e6"
                ]
            }
        },
        "latest": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.25.5",
                    "PKG_RELEASE=1",
                    "NJS_VERSION=0.8.4",
                    "NJS_RELEASE=3"
                ],
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "Cmd": [
                    "nginx",
                    "-g",
                    "daemon off;"
                ],
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>"
                },
                "StopSignal": "SIGQUIT",
                "ArgsEscaped": true
            },
            "created": "2024-05-07T01:28:25.283422117Z",
            "history": [
                {
                    "created": "2024-01-27T00:30:48.624602109Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:37a76ec18f9887751cd8473744917d08b7431fc4085097bb6a09d81b41775473 in / "
                },
                {
                    "created": "2024-01-27T00:30:48.743965523Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "ENV NGINX_VERSION=1.25.5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "ENV PKG_RELEASE=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "RUN /bin/sh -c set -x     && addgroup -g 101 -S nginx     && adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx     && apkArch=\"$(cat /etc/apk/arch)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}     \"     && apk add --no-cache --virtual .checksum-deps         openssl     && case \"$apkArch\" in         x86_64|aarch64)             set -x             && KEY_SHA512=\"e09fa32f0a0eab2b879ccbbc4d0e4fb9751486eedda75e35fac65802cc9faa266425edf83e261137a2f4d16281ce2c1a5f4502930fe75154723da014214f0655\"             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if echo \"$KEY_SHA512 */tmp/nginx_signing.rsa.pub\" | sha512sum -c -; then                 echo \"key verification succeeded!\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \"key verification failed!\";                 exit 1;             fi             && apk add -X \"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\"$(mktemp -d)\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre2-dev                 zlib-dev                 linux-headers                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \"                 export HOME=${tempDir}                 && cd ${tempDir}                 && curl -f -O https://hg.nginx.org/pkg-oss/archive/27357d6c5453.tar.gz                 && PKGOSSCHECKSUM=\\\"a80fc5706ad8e98597478b9e041f658375d53d22f7c8004dd16354067a3d48eb4ef234830b697ddf5c45ec57b837237cc11317bcaaa5133ccbe71bce15d969b0 *27357d6c5453.tar.gz\\\"                 && if [ \\\"\\$(openssl sha512 -r 27357d6c5453.tar.gz)\\\" = \\\"\\$PKGOSSCHECKSUM\\\" ]; then                     echo \\\"pkg-oss tarball checksum verification succeeded!\\\";                 else                     echo \\\"pkg-oss tarball checksum verification failed!\\\";                     exit 1;                 fi                 && tar xzvf 27357d6c5453.tar.gz                 && cd pkg-oss-27357d6c5453                 && cd alpine                 && make base                 && apk index -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk                 && abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \"             && cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del --no-network .build-deps             && apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && apk del --no-network .checksum-deps     && if [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi     && if [ -f \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && apk add --no-cache --virtual .gettext gettext     && mv /usr/bin/envsubst /tmp/         && runDeps=\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\"     && apk add --no-cache $runDeps     && apk del --no-network .gettext     && mv /tmp/envsubst /usr/local/bin/     && apk add --no-cache tzdata     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "COPY docker-entrypoint.sh / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "COPY 10-listen-on-ipv6-by-default.sh /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "COPY 15-local-resolvers.envsh /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "COPY 20-envsubst-on-templates.sh /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "COPY 30-tune-worker-processes.sh /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "EXPOSE map[80/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "STOPSIGNAL SIGQUIT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "ENV NJS_VERSION=0.8.4",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "ENV NJS_RELEASE=3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "RUN /bin/sh -c set -x     && apkArch=\"$(cat /etc/apk/arch)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}.${NJS_VERSION}-r${NJS_RELEASE}     \"     && apk add --no-cache --virtual .checksum-deps         openssl     && case \"$apkArch\" in         x86_64|aarch64)             apk add -X \"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\"$(mktemp -d)\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre2-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 libedit-dev                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \"                 export HOME=${tempDir}                 && cd ${tempDir}                 && curl -f -O https://hg.nginx.org/pkg-oss/archive/27357d6c5453.tar.gz                 && PKGOSSCHECKSUM=\\\"a80fc5706ad8e98597478b9e041f658375d53d22f7c8004dd16354067a3d48eb4ef234830b697ddf5c45ec57b837237cc11317bcaaa5133ccbe71bce15d969b0 *27357d6c5453.tar.gz\\\"                 && if [ \\\"\\$(openssl sha512 -r 27357d6c5453.tar.gz)\\\" = \\\"\\$PKGOSSCHECKSUM\\\" ]; then                     echo \\\"pkg-oss tarball checksum verification succeeded!\\\";                 else                     echo \\\"pkg-oss tarball checksum verification failed!\\\";                     exit 1;                 fi                 && tar xzvf 27357d6c5453.tar.gz                 && cd pkg-oss-27357d6c5453                 && cd alpine                 && make module-geoip module-image-filter module-njs module-xslt                 && apk index -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk                 && abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \"             && cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del --no-network .build-deps             && apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && apk del --no-network .checksum-deps     && if [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi     && if [ -f \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && apk add --no-cache curl ca-certificates # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-07T01:28:25.190198354Z",
                    "created_by": "RUN /bin/sh -c rm /etc/nginx/conf.d/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-07T01:28:25.231049111Z",
                    "created_by": "ADD hello.conf /etc/nginx/conf.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-07T01:28:25.283422117Z",
                    "created_by": "ADD index.html /usr/share/nginx/html/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d4fc045c9e3a848011de66f34b81f052d4f2c15a17bb196d637e526349601820",
                    "sha256:75061be648475f15ce7ea26b596a4be9e7ac6340ba1ed8e9bde2cd89d327f395",
                    "sha256:8fbd5a835e5ed58ae3052f9f3dcbe403e2ac8232923a0ad7e265d5b3bca237d7",
                    "sha256:af5598fef05f9b55831dbc91014bb31d9bf769ebe098de77ee9ed2c32de157a4",
                    "sha256:3d04ead9b4009423e1ec0e60e5eeb222a933d06fbb0210c428a978f43f374c4b",
                    "sha256:5be225e16e44baf5d7a9e97555f8afa8e456cb063856be51f6d8670c0a5e0b42",
                    "sha256:9c70f446fbe2aa1ed2edb8226ca87d531fde4786fa52f7f4858983a64008d29e",
                    "sha256:ce495f7b0b7de22d7a72caa65f8a58a1e4903099ecab992b57d8728fa210aa1b",
                    "sha256:1a1856839c6198a01185f388a542f33823d81799db5f040396b0764ceb08a8a2",
                    "sha256:b215803760cd8f1407b8a110a8db19c910353e73ee814338953ab01872e45cb4",
                    "sha256:16bb58648baf7a10c47a7385fff58ecba0e1604b81e22afe9d2ec7d57b0e6578"
                ]
            }
        },
        "plain-text": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.25.5",
                    "PKG_RELEASE=1",
                    "NJS_VERSION=0.8.4",
                    "NJS_RELEASE=3"
                ],
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "Cmd": [
                    "nginx",
                    "-g",
                    "daemon off;"
                ],
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>"
                },
                "StopSignal": "SIGQUIT",
                "ArgsEscaped": true
            },
            "created": "2024-05-07T01:28:28.431610759Z",
            "history": [
                {
                    "created": "2024-01-27T00:30:48.624602109Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:37a76ec18f9887751cd8473744917d08b7431fc4085097bb6a09d81b41775473 in / "
                },
                {
                    "created": "2024-01-27T00:30:48.743965523Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "ENV NGINX_VERSION=1.25.5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "ENV PKG_RELEASE=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "RUN /bin/sh -c set -x     && addgroup -g 101 -S nginx     && adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx     && apkArch=\"$(cat /etc/apk/arch)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}     \"     && apk add --no-cache --virtual .checksum-deps         openssl     && case \"$apkArch\" in         x86_64|aarch64)             set -x             && KEY_SHA512=\"e09fa32f0a0eab2b879ccbbc4d0e4fb9751486eedda75e35fac65802cc9faa266425edf83e261137a2f4d16281ce2c1a5f4502930fe75154723da014214f0655\"             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if echo \"$KEY_SHA512 */tmp/nginx_signing.rsa.pub\" | sha512sum -c -; then                 echo \"key verification succeeded!\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \"key verification failed!\";                 exit 1;             fi             && apk add -X \"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\"$(mktemp -d)\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre2-dev                 zlib-dev                 linux-headers                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \"                 export HOME=${tempDir}                 && cd ${tempDir}                 && curl -f -O https://hg.nginx.org/pkg-oss/archive/27357d6c5453.tar.gz                 && PKGOSSCHECKSUM=\\\"a80fc5706ad8e98597478b9e041f658375d53d22f7c8004dd16354067a3d48eb4ef234830b697ddf5c45ec57b837237cc11317bcaaa5133ccbe71bce15d969b0 *27357d6c5453.tar.gz\\\"                 && if [ \\\"\\$(openssl sha512 -r 27357d6c5453.tar.gz)\\\" = \\\"\\$PKGOSSCHECKSUM\\\" ]; then                     echo \\\"pkg-oss tarball checksum verification succeeded!\\\";                 else                     echo \\\"pkg-oss tarball checksum verification failed!\\\";                     exit 1;                 fi                 && tar xzvf 27357d6c5453.tar.gz                 && cd pkg-oss-27357d6c5453                 && cd alpine                 && make base                 && apk index -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk                 && abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \"             && cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del --no-network .build-deps             && apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && apk del --no-network .checksum-deps     && if [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi     && if [ -f \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && apk add --no-cache --virtual .gettext gettext     && mv /usr/bin/envsubst /tmp/         && runDeps=\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\"     && apk add --no-cache $runDeps     && apk del --no-network .gettext     && mv /tmp/envsubst /usr/local/bin/     && apk add --no-cache tzdata     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "COPY docker-entrypoint.sh / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "COPY 10-listen-on-ipv6-by-default.sh /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "COPY 15-local-resolvers.envsh /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "COPY 20-envsubst-on-templates.sh /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "COPY 30-tune-worker-processes.sh /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "EXPOSE map[80/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "STOPSIGNAL SIGQUIT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "ENV NJS_VERSION=0.8.4",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "ENV NJS_RELEASE=3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "RUN /bin/sh -c set -x     && apkArch=\"$(cat /etc/apk/arch)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}.${NJS_VERSION}-r${NJS_RELEASE}     \"     && apk add --no-cache --virtual .checksum-deps         openssl     && case \"$apkArch\" in         x86_64|aarch64)             apk add -X \"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\"$(mktemp -d)\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre2-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 libedit-dev                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \"                 export HOME=${tempDir}                 && cd ${tempDir}                 && curl -f -O https://hg.nginx.org/pkg-oss/archive/27357d6c5453.tar.gz                 && PKGOSSCHECKSUM=\\\"a80fc5706ad8e98597478b9e041f658375d53d22f7c8004dd16354067a3d48eb4ef234830b697ddf5c45ec57b837237cc11317bcaaa5133ccbe71bce15d969b0 *27357d6c5453.tar.gz\\\"                 && if [ \\\"\\$(openssl sha512 -r 27357d6c5453.tar.gz)\\\" = \\\"\\$PKGOSSCHECKSUM\\\" ]; then                     echo \\\"pkg-oss tarball checksum verification succeeded!\\\";                 else                     echo \\\"pkg-oss tarball checksum verification failed!\\\";                     exit 1;                 fi                 && tar xzvf 27357d6c5453.tar.gz                 && cd pkg-oss-27357d6c5453                 && cd alpine                 && make module-geoip module-image-filter module-njs module-xslt                 && apk index -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk                 && abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \"             && cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del --no-network .build-deps             && apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && apk del --no-network .checksum-deps     && if [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi     && if [ -f \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && apk add --no-cache curl ca-certificates # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-07T01:28:28.400686465Z",
                    "created_by": "RUN /bin/sh -c rm /etc/nginx/conf.d/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-07T01:28:28.431610759Z",
                    "created_by": "ADD hello-plain-text.conf /etc/nginx/conf.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d4fc045c9e3a848011de66f34b81f052d4f2c15a17bb196d637e526349601820",
                    "sha256:75061be648475f15ce7ea26b596a4be9e7ac6340ba1ed8e9bde2cd89d327f395",
                    "sha256:8fbd5a835e5ed58ae3052f9f3dcbe403e2ac8232923a0ad7e265d5b3bca237d7",
                    "sha256:af5598fef05f9b55831dbc91014bb31d9bf769ebe098de77ee9ed2c32de157a4",
                    "sha256:3d04ead9b4009423e1ec0e60e5eeb222a933d06fbb0210c428a978f43f374c4b",
                    "sha256:5be225e16e44baf5d7a9e97555f8afa8e456cb063856be51f6d8670c0a5e0b42",
                    "sha256:9c70f446fbe2aa1ed2edb8226ca87d531fde4786fa52f7f4858983a64008d29e",
                    "sha256:ce495f7b0b7de22d7a72caa65f8a58a1e4903099ecab992b57d8728fa210aa1b",
                    "sha256:5bfff30ea4d7323a34b231d5f2a7acbf0594c212ec7f14bcf445d1511cb946ce",
                    "sha256:1db86321d520f4a9a86420e2fdb89633d80aa4d2a2e737a5a63ad4e17eb5d6e6"
                ]
            }
        }
    }
}