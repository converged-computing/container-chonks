{
    "manifests": {
        "lastest": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7195,
                "digest": "sha256:d15e8a97174a751032782ee7a93daf85e7bdf8f485b6895a1533d831162fe260"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2803255,
                    "digest": "sha256:aad63a9339440e7c3e1fff2b988991b9bfb81280042fa7f39a5e327023056819"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 190618747,
                    "digest": "sha256:e0850ab3d68cc66834c14ce4e219dc08331bd29d72998ff45b4ffed072e98805"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 184885,
                    "digest": "sha256:1891bda36f4aa19b1a688e4455557dd0501dd1d09e6648aeaa10c759b0419fe3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 20103947,
                    "digest": "sha256:c6fb0fb8cba0f5a7d8abf6ec4a29f9ccbd7ce9fab719805fffbee5208b37fea5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 564870,
                    "digest": "sha256:064a8cd3823bb0948a3dde673c7afc00d2c1ba5e0a59f91af1e3f7d7cc3ff1af"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5951958,
                    "digest": "sha256:908393ff85e7c172c2ee470b2a50ad1d9d3903a9a5fbcbcb31e32695aee2ec25"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47276050,
                    "digest": "sha256:9ba2575a1a5f38f40d42538a4c33e3bb16453836e978df7a850162aae3759851"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3331385,
                    "digest": "sha256:7537f2abb81caf9319f80a06d5fb0747209db1e4be783f0723459d210de47009"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3059492,
                    "digest": "sha256:1833819ca81e6cd3f2cb09620f03080ea0b2d8387cc3b313df082498310801e2"
                }
            ]
        },
        "latest": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7194,
                "digest": "sha256:cd2ed9fd2672403d2e1e71c71dc1af0a5d2c349eced5e63d53314ba40eb3224c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2803255,
                    "digest": "sha256:aad63a9339440e7c3e1fff2b988991b9bfb81280042fa7f39a5e327023056819"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 190618747,
                    "digest": "sha256:e0850ab3d68cc66834c14ce4e219dc08331bd29d72998ff45b4ffed072e98805"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 184885,
                    "digest": "sha256:1891bda36f4aa19b1a688e4455557dd0501dd1d09e6648aeaa10c759b0419fe3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 20103947,
                    "digest": "sha256:c6fb0fb8cba0f5a7d8abf6ec4a29f9ccbd7ce9fab719805fffbee5208b37fea5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 564870,
                    "digest": "sha256:064a8cd3823bb0948a3dde673c7afc00d2c1ba5e0a59f91af1e3f7d7cc3ff1af"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5302571,
                    "digest": "sha256:85e8f00a3d99421abe12360cc4624e2de405774568f048d6b0833ea0b96d2a8f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 56155631,
                    "digest": "sha256:3779c1fd27ae846b9be40ac20cb9bb5ddb78f57027431ae63dd8a709e9880a90"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3183394,
                    "digest": "sha256:85a4d2fa7a6ff82758f01febf6f7a4b08a78a3647ef5e0c13ed171c4268eab9b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3049325,
                    "digest": "sha256:afaf6e596c2a0ec1a8805b828a08ba5152a18f5c897f9fc7c4b7016e4db3ed8d"
                }
            ]
        },
        "v0.2.21": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4919,
                "digest": "sha256:8452d0e5920d96b3d3b0260049e3caeca98c2f2824541872cf6de542719ffc13"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2789669,
                    "digest": "sha256:9d48c3bd43c520dc2784e868a780e976b207cbf493eaff8c6596eb871cbd9609"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 75948213,
                    "digest": "sha256:8e23d2e10d7fd80a919e503dfd6200850718acb3bee2035defce97c56d1beca8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 294220,
                    "digest": "sha256:53f69f477fe5ea9a9f45d9557698c6a47789c8539815d1c27121f71bc6de1901"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 128861937,
                    "digest": "sha256:9f641827239b6ade53f594242b65a4d2dde3fb3ceff397a27f24937900321fa0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1907454,
                    "digest": "sha256:685502e991c5d9c792a87dd45324b783ce5de58744e5026dadd218642096d957"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3952623,
                    "digest": "sha256:98ab1d6b06f695fa061751ce0ce0ad7285dc6d087ae1dba6c7c53cae6e76e884"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2588791,
                    "digest": "sha256:9410a8fef82ec7169b2d66713c6df61a4715817b131265f07ed6ba3be823573e"
                }
            ]
        },
        "v0.2.22": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4884,
                "digest": "sha256:6db082a37d93b7c41f1ddf025028443f4b1376335d514244eb7c129b31ddbee0"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2789669,
                    "digest": "sha256:9d48c3bd43c520dc2784e868a780e976b207cbf493eaff8c6596eb871cbd9609"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 76173633,
                    "digest": "sha256:ffb20f67ad4b7419e3d28461151a4145f7177e39bccd07ada868049217f261e7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 294237,
                    "digest": "sha256:6db588da3230b474878301ee85a0ad5e9aae0aa952f2d1ce98a4907c172970bf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 128476601,
                    "digest": "sha256:4a921a8b5eb1714ef977c1aaebcee3e62e5dc8832c35581c9347e32ed6a9d7c5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1907455,
                    "digest": "sha256:f160152ba59fdf1db851aaa6195f99c2c274ec3832ce63836d7b9af9f9fbe722"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4132513,
                    "digest": "sha256:5ac1af33ee654bf39cc32aaf59658d977354caaaab8bef2f583878d4ae2ee1c8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2594292,
                    "digest": "sha256:ea90cc331e7d114c6df59c64d1d902cf33c753df9ab8a4fbd4af2748e8a367da"
                }
            ]
        },
        "v0.2.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5052,
                "digest": "sha256:c1083fbe0fd22007c2be3ff53a2c958a2a67d05bff78962d665460ae043626c9"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2789742,
                    "digest": "sha256:0503825856099e6adb39c8297af09547f69684b7016b7f3680ed801aa310baaa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 85686292,
                    "digest": "sha256:abfd771006f02ac580c209259786bcd5f9946bf58e285e9e46a5e3bc380eed47"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 119386102,
                    "digest": "sha256:8e509104d7b9c380c3e971b058d589d7912a7c9d5ac5c802adb026b5cd689af8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2167148,
                    "digest": "sha256:f0da7d0f3c7b04e5c2e42918c48f5e5fabf3a401818169c2ccdbeb1ac429cd3b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 14416760,
                    "digest": "sha256:70d99ed0e00978e0eb609ef2c50d17327b0096a360b232daec8969e03c6e6084"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2633717,
                    "digest": "sha256:8cb505a3e512cffaa5af8613cf3e38a20631f74f72e3cf36f03856ce3e4cbc66"
                }
            ]
        },
        "v0.3.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4858,
                "digest": "sha256:2f426b17269896be63702c712e590faf5382f56a422a185e3495b557f43f2216"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2799807,
                    "digest": "sha256:ae4a0e1e8235fca737d99ba8a242847c85137b7d28098dbfc3f676063b23a52b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 120482332,
                    "digest": "sha256:c57085c769e097bb6ffaa548fdd8130f85615bee9105da7a97af0d59253cb9d8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 289651,
                    "digest": "sha256:e669371583b929fbdc905dce3ef73504a90ff942bd583b359b5fee31a836a922"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 129664254,
                    "digest": "sha256:4a5249731aaceb35bc4ea70eb26aaf26c177c8c4d8f3d1143b6b345696ef3bc6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2207997,
                    "digest": "sha256:7783c42a0792494538b8073dc06d42f419eaab55f2ed6ba728de3b446f10fe02"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11670202,
                    "digest": "sha256:a73811e01258d05b8394136ca45ac5d09c2ec82075a03238bbe35a3853248d9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2736350,
                    "digest": "sha256:c34c1c00bcd5492b03634c8db7ce4b089e43085cdcb62219aec21d86e881a5cb"
                }
            ]
        },
        "v0.3.16": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5792,
                "digest": "sha256:f89bce11759d5e57d436f1c24e8d0961bb3041a5821c256e5858384013d74037"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2803255,
                    "digest": "sha256:aad63a9339440e7c3e1fff2b988991b9bfb81280042fa7f39a5e327023056819"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 177860695,
                    "digest": "sha256:53f816785e30931c59255550add46539714cd3ae2bc52284997be0ba5881a3f7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 326862,
                    "digest": "sha256:f30d3b0d1b71a30d5b235b8d2dd9f869a5302badaf21f87df0af4bebbbf38b87"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 152025389,
                    "digest": "sha256:66bdfff89437bf90bd052556811f343e79ce5470e9c12641c8d83f781af148ee"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9202086,
                    "digest": "sha256:c977f1700cfe8f0bb94e5e6eac1697077b5208be66976c2b8b8179b4b5e071f9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4561941,
                    "digest": "sha256:93d9269b3caf6d407cc83aca95011045197a8146666e3b9f62836573395e2fea"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46086557,
                    "digest": "sha256:65edda0499b7a40cb2a7b65cf1c88e22b6fb999d3dd1feb0b724f5720d441fd0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3084854,
                    "digest": "sha256:7b456be1761a89cbc1cb0ce4678a4bb1f2c147ef7bf31222aaaac9d8c095b4d5"
                }
            ]
        },
        "v0.3.17": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7244,
                "digest": "sha256:7689bad55213f0e6591e4cef7841640a263836ceb1c89c9806fc97e62f204530"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2803255,
                    "digest": "sha256:aad63a9339440e7c3e1fff2b988991b9bfb81280042fa7f39a5e327023056819"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 177944879,
                    "digest": "sha256:74b9121e4f2569a24c65e84982bdeb0d184be62ce8e83d8970559a78beada220"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 326865,
                    "digest": "sha256:b86a0cfb3e263937124699d96515247ddcfdcba7090ea496dff47cce6358b629"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 151703761,
                    "digest": "sha256:7dc6f101ba46fd7a6c0be15c85e6d54cf3692e0e326a17f0f0f3e8c2dd036554"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9202256,
                    "digest": "sha256:17561560015206008d4030cc8f8d249904896ab9630fb4530723d24a79930b4f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4561931,
                    "digest": "sha256:ba305d0f2ccc61bb83c57fca02d7afe5358c96ffab81a22837a59d48a7fae52d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 276196670,
                    "digest": "sha256:118f6df9b2b847096ab3b8e1dacb47cea835042a526c10ca5ef841eb5afad874"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 226426419,
                    "digest": "sha256:e62f4b3eafbca53f366c7fdeb0d4ac21d75dc786b7ca7c0455c920d59f6e3696"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9198797,
                    "digest": "sha256:b67e5e10a993df311140b7eb2b134e39b8c5e520ec6b5bf1b16aa69198112a19"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 25380107,
                    "digest": "sha256:4e11eb2a29d68c76d8ae4944f3394c3895bc0e44f1164939e1a75b3f94837c4c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3084810,
                    "digest": "sha256:e809e24529ff7c4bcfed1e1212d458acdad2a1383fdaf692971ef45f4b32f4b6"
                }
            ]
        },
        "v0.3.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5194,
                "digest": "sha256:1b472b8e1354e17c678690060496147ba0b1274cb0599ac321100987e421f58d"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2799807,
                    "digest": "sha256:ae4a0e1e8235fca737d99ba8a242847c85137b7d28098dbfc3f676063b23a52b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 120482332,
                    "digest": "sha256:c57085c769e097bb6ffaa548fdd8130f85615bee9105da7a97af0d59253cb9d8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 289651,
                    "digest": "sha256:e669371583b929fbdc905dce3ef73504a90ff942bd583b359b5fee31a836a922"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 129664254,
                    "digest": "sha256:4a5249731aaceb35bc4ea70eb26aaf26c177c8c4d8f3d1143b6b345696ef3bc6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3621831,
                    "digest": "sha256:bc583e663d71e1ba8020da1e6f416c41bbd2d170224cd176d9366b74e1e7de15"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 33051997,
                    "digest": "sha256:0a6d2b39fe235ac3c4c2d50bb34674b30ad054798b6024da7903dff4c3688b74"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2737458,
                    "digest": "sha256:12ee876d0b17984722402a5cd42a56983b15cad7b7dbcf5c8a14ff0f7e8cbcfa"
                }
            ]
        },
        "v0.3.23": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7212,
                "digest": "sha256:2c7a20e90d12f99c1b15d0bb7586931fad3d4e7e0f20345f0f86df95da6c6911"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2803255,
                    "digest": "sha256:aad63a9339440e7c3e1fff2b988991b9bfb81280042fa7f39a5e327023056819"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 177944879,
                    "digest": "sha256:74b9121e4f2569a24c65e84982bdeb0d184be62ce8e83d8970559a78beada220"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 326865,
                    "digest": "sha256:b86a0cfb3e263937124699d96515247ddcfdcba7090ea496dff47cce6358b629"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 151703761,
                    "digest": "sha256:7dc6f101ba46fd7a6c0be15c85e6d54cf3692e0e326a17f0f0f3e8c2dd036554"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9202256,
                    "digest": "sha256:17561560015206008d4030cc8f8d249904896ab9630fb4530723d24a79930b4f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4620671,
                    "digest": "sha256:e824d166d782f2b49adf5b2cc58f53a5f1fc0218a468c3f4eb2c9539b9958bc8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 275848997,
                    "digest": "sha256:ee9b4296e9c543a83f0ee85510d21419ad123e010266afa897626251c3885a5e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 348048144,
                    "digest": "sha256:f016e9ff403c8cb4c6ae516908663f0fd0f01bc32da4b6cabb957b752cb99074"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15503869,
                    "digest": "sha256:7a6825591d16f4938e6addaaa82ddf0118353c0b83ceb6f4b9763361ac7a4a91"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 25565783,
                    "digest": "sha256:64f83a8107d86346586c23ebb19a0120cdeebed1ca114499235e49fd443d4d10"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3166345,
                    "digest": "sha256:7bda64213884fc3109c46bd6908d0c640736916f2a73313aff75af53cfc730eb"
                }
            ]
        },
        "v0.3.24": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7562,
                "digest": "sha256:45e1df0aa985b6fdf2ae3bcfc97bbec22174963a502ffc2c19dd0cd5fbf3f14d"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2803255,
                    "digest": "sha256:aad63a9339440e7c3e1fff2b988991b9bfb81280042fa7f39a5e327023056819"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 181047832,
                    "digest": "sha256:0b86c1d1e8e23ca2d22ef61fdd415cebfe126303da9359e634860aa8e211f2a7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1058850,
                    "digest": "sha256:b0802c56b1d16f1913d83557fcbfcc474ebd6936dc52e2e9ccca6a7bfd924c56"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 20103463,
                    "digest": "sha256:15316e403755de32f3dee0cc079201c8524382459883728d1b9a4c369a43ec29"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9200633,
                    "digest": "sha256:f686409a5b1435fc50c39e7bbd8c11c5528e9a6285dc98b737c6e4116d4fa6d6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4765320,
                    "digest": "sha256:932b9db04092593ecf428a3380d04ad3dede6b80dcf40558d03b7fbbddc0a3b5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 272518822,
                    "digest": "sha256:541d8d87577b759c31e426a2f4e0e1fb9d3b861949afbef14e713146805af809"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 462085836,
                    "digest": "sha256:1f795bb527b22c12bd1524126ed281de1ff4a98a07a0bc51393f745190376752"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48247242,
                    "digest": "sha256:31b1493b3f5505552fd1f2f00fc56ff24df56f3c707071268d4e521dae406b66"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 25565773,
                    "digest": "sha256:f44dcb6a877d3b27bd22a13cc87d56f998133914d6e85de5d446c26e1554df95"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3102164,
                    "digest": "sha256:9119eb3dd5cdc8460395587ab3407e670ad3461bf254f627f8d39e86ce6588e6"
                }
            ]
        },
        "v0.3.25": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7194,
                "digest": "sha256:cd2ed9fd2672403d2e1e71c71dc1af0a5d2c349eced5e63d53314ba40eb3224c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2803255,
                    "digest": "sha256:aad63a9339440e7c3e1fff2b988991b9bfb81280042fa7f39a5e327023056819"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 190618747,
                    "digest": "sha256:e0850ab3d68cc66834c14ce4e219dc08331bd29d72998ff45b4ffed072e98805"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 184885,
                    "digest": "sha256:1891bda36f4aa19b1a688e4455557dd0501dd1d09e6648aeaa10c759b0419fe3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 20103947,
                    "digest": "sha256:c6fb0fb8cba0f5a7d8abf6ec4a29f9ccbd7ce9fab719805fffbee5208b37fea5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 564870,
                    "digest": "sha256:064a8cd3823bb0948a3dde673c7afc00d2c1ba5e0a59f91af1e3f7d7cc3ff1af"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5302571,
                    "digest": "sha256:85e8f00a3d99421abe12360cc4624e2de405774568f048d6b0833ea0b96d2a8f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 56155631,
                    "digest": "sha256:3779c1fd27ae846b9be40ac20cb9bb5ddb78f57027431ae63dd8a709e9880a90"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3183394,
                    "digest": "sha256:85a4d2fa7a6ff82758f01febf6f7a4b08a78a3647ef5e0c13ed171c4268eab9b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3049325,
                    "digest": "sha256:afaf6e596c2a0ec1a8805b828a08ba5152a18f5c897f9fc7c4b7016e4db3ed8d"
                }
            ]
        },
        "v0.3.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5785,
                "digest": "sha256:a2189da01d5f27792aa68b4bc13bf4db60d31795058c50917128f4b77ec9f967"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2799807,
                    "digest": "sha256:ae4a0e1e8235fca737d99ba8a242847c85137b7d28098dbfc3f676063b23a52b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 134168888,
                    "digest": "sha256:8146686f33ce0fe896b01704f57f96bcc8443f29079b641d00607a718c3a4d45"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 290413,
                    "digest": "sha256:1d50b707c84c7e5007d2cf358cb8fc48c2cfb66294c2688c3a82fd1bdd711c36"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 133009882,
                    "digest": "sha256:ea33745d7c74c675b9eb56f19dfac322e107b7511954b5de476f846213d11c77"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11731716,
                    "digest": "sha256:696637af5b389f4fd7fda9b80aa6a43f963b54ea24e3ed24aa6f022e611bd3a6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3621800,
                    "digest": "sha256:d5cfced1761f72441c978210ed0a95feaf4ec68a1e5c039001a70e2aa77c7bea"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 33241795,
                    "digest": "sha256:39e04c9d57594873ad4938557c5ca73c13419404cb34210da106221464a25096"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2782076,
                    "digest": "sha256:b80a0523ff050e51e46da770afce0e07dd9dc08132591a469d7d8fbb7cc5f302"
                }
            ]
        },
        "v0.3.4": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5764,
                "digest": "sha256:7e9d0e71f7d38b9b80b6fdd1d6b978aac51cec28a307d0c79f5fe15124f9c529"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2803255,
                    "digest": "sha256:aad63a9339440e7c3e1fff2b988991b9bfb81280042fa7f39a5e327023056819"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121359372,
                    "digest": "sha256:c6d16ab5e0b6d9482678c5113b6214dc77c845bb9d3335c7c0ded23a4717e15a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 291598,
                    "digest": "sha256:34ac52617759710810ba38e61c97e9969c391551701f12522fde33d90ecdc45f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 135492088,
                    "digest": "sha256:7c096662a03b30db40b2ed8041ae61525f5e99a80221bac48e6b30fdc908d37e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9641161,
                    "digest": "sha256:9eba17663f0219858c43fd71e59a38b3eda90d1162eb93b18a2a0938a2cb35af"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3623223,
                    "digest": "sha256:86508c24751bce4d4dc30b3007f8dd000ef8c0c98a3e8a5312b0da35b3aca7e3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 33201751,
                    "digest": "sha256:a0f3d38c81fff3664bfec14a1e9cfd1aeaddc5613201dd039a597e6dcb1ba9f3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3098564,
                    "digest": "sha256:56f124062bda63f310e4a60dd8af95fa5efb76dd2d5dc729283c5498c9d609a6"
                }
            ]
        }
    },
    "tags": [
        "lastest",
        "latest",
        "v0.2.21",
        "v0.2.22",
        "v0.2.8",
        "v0.3.0",
        "v0.3.16",
        "v0.3.17",
        "v0.3.2",
        "v0.3.23",
        "v0.3.24",
        "v0.3.25",
        "v0.3.3",
        "v0.3.4"
    ],
    "configs": {
        "lastest": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=:/root/.nimble/bin:/nim-1.6.6/bin/:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CFLAGS=-fPIC -O3",
                    "RUSTFLAGS=-Ctarget-feature=-crt-static"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:390943a8dd3869b67e2af505e5eaee8eef5f3f7594c28ae04316170f6fa68634",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "33eb2cff8225daa188de8cf9663e08accaec37c72e47892c12e0a5e42a860461",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=:/root/.nimble/bin:/nim-1.6.6/bin/:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CFLAGS=-fPIC -O3",
                    "RUSTFLAGS=-Ctarget-feature=-crt-static"
                ],
                "Cmd": [
                    "|1",
                    "nim_version=1.6.6",
                    "/bin/sh",
                    "-c",
                    "cat /src/docker/docker.nim.cfg >> /nim-${nim_version}/config/nim.cfg &&     cd /src/ && nimble install -y &&     nimble install -y c2nim docopt &&     nimble install -y websocket@#head &&     nim c -o:/usr/local/bin/nsb /src/docker/nsb.nim &&     rm -rf /src/"
                ],
                "Image": "sha256:390943a8dd3869b67e2af505e5eaee8eef5f3f7594c28ae04316170f6fa68634",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2024-03-19T08:08:22.391888519Z",
            "docker_version": "24.0.5",
            "history": [
                {
                    "created": "2020-03-23T21:19:34.027725872Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0c4555f363c2672e350001f1293e689875a3760afe7b3f9146886afe67121cba in / "
                },
                {
                    "created": "2020-03-23T21:19:34.196162891Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-11T09:32:03.719760866Z",
                    "created_by": "/bin/sh -c #(nop)  ARG nim_version=1.6.6",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-11T09:32:03.734478731Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CFLAGS=-fPIC -O3",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-11T09:33:35.847913938Z",
                    "created_by": "|1 nim_version=1.6.6 /bin/sh -c apk update && apk upgrade && apk add wget git xz bzip2-static musl m4 autoconf tar xz-dev bzip2-dev build-base libpthread-stubs libzip-dev gfortran     openssl-libs-static openblas-static pcre-dev curl llvm-dev curl-static bash curl-dev clang-static nghttp2-static  zlib-static cmake"
                },
                {
                    "created": "2023-09-11T09:33:43.286974354Z",
                    "created_by": "|1 nim_version=1.6.6 /bin/sh -c mkdir -p /usr/local/include &&     git clone -b v1.18 --depth 1 https://github.com/ebiggers/libdeflate.git &&     cd libdeflate && cmake -B build && cmake --build build && cmake --install build  &&     ln -s /usr/local/lib64/* /usr/local/lib &&     cd .. && rm -rf libdeflate"
                },
                {
                    "created": "2023-09-11T09:33:49.708082157Z",
                    "created_by": "|1 nim_version=1.6.6 /bin/sh -c cd / &&     wget -q https://nim-lang.org/download/nim-${nim_version}-linux_x64.tar.xz &&     tar xf nim-${nim_version}-linux_x64.tar.xz &&     echo 'PATH=/nim-${nim_version}/bin:$PATH' >> ~/.bashrc &&     echo 'PATH=/nim-${nim_version}/bin:$PATH' >> ~/.bash_profile &&     echo 'PATH=/nim-${nim_version}/bin:$PATH' >> /etc/environment  &&     rm -f nim-${nim_version}-linux_x64.tar.xz"
                },
                {
                    "created": "2023-09-11T09:33:58.746101326Z",
                    "created_by": "|1 nim_version=1.6.6 /bin/sh -c apk add cmake openssl-dev && \twget https://libzip.org/download/libzip-1.6.1.tar.gz && \ttar xzvf libzip-1.6.1.tar.gz && \tcd libzip-1.6.1 && \tmkdir build && cd build && \tcmake -DBUILD_SHARED_LIBS=OFF -DCMAKE_INSTALL_PREFIX=/usr/local/ ../ && \tmake -j4 CFLAGS=\"-fPIC -O3\" install && \tcd ../../ && rm -rf libzip-1.6.1*"
                },
                {
                    "created": "2023-09-11T09:33:58.762282762Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=:/root/.nimble/bin:/nim-1.6.6/bin/:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-19T08:04:18.768595809Z",
                    "created_by": "|1 nim_version=1.6.6 /bin/sh -c git clone --depth 1 -b 1.19.1 --recursive https://github.com/samtools/htslib &&     cd htslib && autoheader && autoconf &&     ./configure --enable-s3 --enable-gcs --enable-libcurl --with-libdeflate &&     make -j4 CFLAGS=\"-fPIC -O3\" install &&     cd ../ &&     git clone --depth 1 -b 1.18 --recursive https://github.com/samtools/bcftools &&     cd bcftools && autoheader && autoconf &&     ./configure --enable-s3 --enable-libcurl --with-libdeflate &&     make -j4 CFLAGS=\"-fPIC -O3\" install &&     cd ../ && rm -rf htslib bcftools"
                },
                {
                    "created": "2024-03-19T08:04:18.806083954Z",
                    "created_by": "/bin/sh -c #(nop)  ENV RUSTFLAGS=-Ctarget-feature=-crt-static",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-19T08:07:49.167576404Z",
                    "created_by": "|1 nim_version=1.6.6 /bin/sh -c sh -c 'curl --proto \"=https\" --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -q -y'     && ~/.cargo/bin/rustup target add x86_64-unknown-linux-musl \t&& git clone https://github.com/38/d4-format \t&& cd d4-format     && ln -s /usr/bin/gcc /usr/bin/musl-gcc     && ~/.cargo/bin/cargo build --package=d4binding --release && cd ..     && install -m 644 d4-format/target/release/libd4binding.a /usr/lib \t&& install -m 644 d4-format/d4binding/include/d4.h /usr/include      && rm -rf d4-format/target/      && rm -rf /root/.rustup/      && rm -rf ~/.cargo"
                },
                {
                    "created": "2024-03-19T08:07:49.61939911Z",
                    "created_by": "/bin/sh -c #(nop) ADD dir:743e523f2f7f26f79ab7f2611e60ea9612569fdecb8244102a4a1af59458f825 in /src/ "
                },
                {
                    "created": "2024-03-19T08:08:22.391888519Z",
                    "created_by": "|1 nim_version=1.6.6 /bin/sh -c cat /src/docker/docker.nim.cfg >> /nim-${nim_version}/config/nim.cfg &&     cd /src/ && nimble install -y &&     nimble install -y c2nim docopt &&     nimble install -y websocket@#head &&     nim c -o:/usr/local/bin/nsb /src/docker/nsb.nim &&     rm -rf /src/"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:beee9f30bc1f711043e78d4a2be0668955d4b761d587d6f60c2c8dc081efb203",
                    "sha256:0d29e828e9c4c4941db7f2ced46b3b7e46add339c4b775f2b04a46d1fd80ddf8",
                    "sha256:133821083589c19580f3d2b5fb654416f125014d29862055dd6c472056c3d547",
                    "sha256:8fbde40b6b05f000f82008c2abdf8fe1352cb2a06dd1ce2cc286f94499f444b0",
                    "sha256:5ba35b0c10103dc8d74c23c77d3949ea7d434e9ab8f48ba43039231e7ea9dcb2",
                    "sha256:e3a9898f168a94632896ee120fe4759611919bc3df3669d3a9a89545d1549af7",
                    "sha256:49c4d8a4f4da3774cfcc3dbf8294fbb7525274928b786413aba193ac7ee9766e",
                    "sha256:cdbd5132a4579f69c3c1e3b1c52d6a04b468fe4493179d1fe9244fd5e9a9d868",
                    "sha256:5d10c7929c425a10b987a1d645ec9c29238ea82b826a33be0c7060ccd21732e2"
                ]
            }
        },
        "latest": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=:/root/.nimble/bin:/nim-1.6.6/bin/:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CFLAGS=-fPIC -O3",
                    "RUSTFLAGS=-Ctarget-feature=-crt-static"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:5df0f196130b4e8e2b4844ebff3c0bf465334925505bb3c61d4ab0d017f92a95",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "fc0ab280968e712b151b987d56ea09ba0f63a40eb82a1e069d8103466f21e095",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=:/root/.nimble/bin:/nim-1.6.6/bin/:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CFLAGS=-fPIC -O3",
                    "RUSTFLAGS=-Ctarget-feature=-crt-static"
                ],
                "Cmd": [
                    "|1",
                    "nim_version=1.6.6",
                    "/bin/sh",
                    "-c",
                    "cat /src/docker/docker.nim.cfg >> /nim-${nim_version}/config/nim.cfg &&     cd /src/ && nimble install -y &&     nimble install -y c2nim docopt &&     nimble install -y websocket@#head &&     nim c -o:/usr/local/bin/nsb /src/docker/nsb.nim &&     rm -rf /src/"
                ],
                "Image": "sha256:5df0f196130b4e8e2b4844ebff3c0bf465334925505bb3c61d4ab0d017f92a95",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2023-09-11T09:50:02.784966482Z",
            "docker_version": "24.0.5",
            "history": [
                {
                    "created": "2020-03-23T21:19:34.027725872Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0c4555f363c2672e350001f1293e689875a3760afe7b3f9146886afe67121cba in / "
                },
                {
                    "created": "2020-03-23T21:19:34.196162891Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-11T09:32:03.719760866Z",
                    "created_by": "/bin/sh -c #(nop)  ARG nim_version=1.6.6",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-11T09:32:03.734478731Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CFLAGS=-fPIC -O3",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-11T09:33:35.847913938Z",
                    "created_by": "|1 nim_version=1.6.6 /bin/sh -c apk update && apk upgrade && apk add wget git xz bzip2-static musl m4 autoconf tar xz-dev bzip2-dev build-base libpthread-stubs libzip-dev gfortran     openssl-libs-static openblas-static pcre-dev curl llvm-dev curl-static bash curl-dev clang-static nghttp2-static  zlib-static cmake"
                },
                {
                    "created": "2023-09-11T09:33:43.286974354Z",
                    "created_by": "|1 nim_version=1.6.6 /bin/sh -c mkdir -p /usr/local/include &&     git clone -b v1.18 --depth 1 https://github.com/ebiggers/libdeflate.git &&     cd libdeflate && cmake -B build && cmake --build build && cmake --install build  &&     ln -s /usr/local/lib64/* /usr/local/lib &&     cd .. && rm -rf libdeflate"
                },
                {
                    "created": "2023-09-11T09:33:49.708082157Z",
                    "created_by": "|1 nim_version=1.6.6 /bin/sh -c cd / &&     wget -q https://nim-lang.org/download/nim-${nim_version}-linux_x64.tar.xz &&     tar xf nim-${nim_version}-linux_x64.tar.xz &&     echo 'PATH=/nim-${nim_version}/bin:$PATH' >> ~/.bashrc &&     echo 'PATH=/nim-${nim_version}/bin:$PATH' >> ~/.bash_profile &&     echo 'PATH=/nim-${nim_version}/bin:$PATH' >> /etc/environment  &&     rm -f nim-${nim_version}-linux_x64.tar.xz"
                },
                {
                    "created": "2023-09-11T09:33:58.746101326Z",
                    "created_by": "|1 nim_version=1.6.6 /bin/sh -c apk add cmake openssl-dev && \twget https://libzip.org/download/libzip-1.6.1.tar.gz && \ttar xzvf libzip-1.6.1.tar.gz && \tcd libzip-1.6.1 && \tmkdir build && cd build && \tcmake -DBUILD_SHARED_LIBS=OFF -DCMAKE_INSTALL_PREFIX=/usr/local/ ../ && \tmake -j4 CFLAGS=\"-fPIC -O3\" install && \tcd ../../ && rm -rf libzip-1.6.1*"
                },
                {
                    "created": "2023-09-11T09:33:58.762282762Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=:/root/.nimble/bin:/nim-1.6.6/bin/:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-11T09:34:57.980944086Z",
                    "created_by": "|1 nim_version=1.6.6 /bin/sh -c git clone --depth 1 -b 1.18 --recursive https://github.com/samtools/htslib &&     cd htslib && autoheader && autoconf &&     ./configure --enable-s3 --enable-gcs --enable-libcurl --with-libdeflate &&     make -j4 CFLAGS=\"-fPIC -O3\" install &&     cd ../ &&     git clone --depth 1 -b 1.18 --recursive https://github.com/samtools/bcftools &&     cd bcftools && autoheader && autoconf &&     ./configure --enable-s3 --enable-libcurl --with-libdeflate &&     make -j4 CFLAGS=\"-fPIC -O3\" install &&     cd ../ && rm -rf htslib bcftools"
                },
                {
                    "created": "2023-09-11T09:34:57.998277258Z",
                    "created_by": "/bin/sh -c #(nop)  ENV RUSTFLAGS=-Ctarget-feature=-crt-static",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-11T09:41:35.390541576Z",
                    "created_by": "|1 nim_version=1.6.6 /bin/sh -c sh -c 'curl --proto \"=https\" --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -q -y'     && ~/.cargo/bin/rustup target add x86_64-unknown-linux-musl \t&& git clone https://github.com/38/d4-format \t&& cd d4-format     && ln -s /usr/bin/gcc /usr/bin/musl-gcc     && ~/.cargo/bin/cargo build --package=d4binding --release && cd ..     && install -m 644 d4-format/target/release/libd4binding.a /usr/lib \t&& install -m 644 d4-format/d4binding/include/d4.h /usr/include      && rm -rf d4-format/target/      && rm -rf /root/.rustup/      && rm -rf ~/.cargo"
                },
                {
                    "created": "2023-09-11T09:49:42.331012664Z",
                    "created_by": "/bin/sh -c #(nop) ADD dir:d58757992594f3fee850cfd60f1bc09654d9b37aa86c9c2ac1aded78ff9c7866 in /src/ "
                },
                {
                    "created": "2023-09-11T09:50:02.784966482Z",
                    "created_by": "|1 nim_version=1.6.6 /bin/sh -c cat /src/docker/docker.nim.cfg >> /nim-${nim_version}/config/nim.cfg &&     cd /src/ && nimble install -y &&     nimble install -y c2nim docopt &&     nimble install -y websocket@#head &&     nim c -o:/usr/local/bin/nsb /src/docker/nsb.nim &&     rm -rf /src/"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:beee9f30bc1f711043e78d4a2be0668955d4b761d587d6f60c2c8dc081efb203",
                    "sha256:0d29e828e9c4c4941db7f2ced46b3b7e46add339c4b775f2b04a46d1fd80ddf8",
                    "sha256:133821083589c19580f3d2b5fb654416f125014d29862055dd6c472056c3d547",
                    "sha256:8fbde40b6b05f000f82008c2abdf8fe1352cb2a06dd1ce2cc286f94499f444b0",
                    "sha256:5ba35b0c10103dc8d74c23c77d3949ea7d434e9ab8f48ba43039231e7ea9dcb2",
                    "sha256:a8cd0ab577ddb8756f665324ed7e1a9a06438c8b7e3e07740fc427e83cbdc794",
                    "sha256:a3f3862386df9ec929dc4ddeddb1825b04a761e3c48b018a60a93825729eed54",
                    "sha256:dae82f6a9e060b2c9df612dd29a82a4b417d7c2376161fdfbfdd282ba32d3753",
                    "sha256:b4567bac44a0907d1634381abbda9d14e1b33b0f6572db021409084db269559d"
                ]
            }
        },
        "v0.2.21": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=:/root/.nimble/bin:/nim/bin/:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CFLAGS=-fPIC -O3"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7e1b97a506d9452f101ec15311576d00ac45bb69a3015d491d71e79874d911cd",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "634d279dcf4dc32f71a5b90a70d66a8e0ac5494ab88405640afe0de8f0c26317",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=:/root/.nimble/bin:/nim/bin/:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CFLAGS=-fPIC -O3"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "cat /src/docker/docker.nim.cfg >> /nim/config/nim.cfg &&     source ~/.bashrc && cd /src/ && nimble install -y &&     nimble install -y docopt &&     nimble install -y c2nim &&     nimble install -y websocket@#head &&     nim c -o:/usr/local/bin/nsb /src/docker/nsb.nim &&     rm -rf /src/"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7e1b97a506d9452f101ec15311576d00ac45bb69a3015d491d71e79874d911cd",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2019-09-27T17:26:35.745986952Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2019-08-20T20:19:55.062606894Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fe64057fbb83dccb960efabbf1cd8777920ef279a7fa8dbca0a8801c651bdf7c in / "
                },
                {
                    "created": "2019-08-20T20:19:55.211423266Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-27T14:14:39.995764646Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CFLAGS=-fPIC -O3",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-27T16:27:55.719748685Z",
                    "created_by": "/bin/sh -c apk add wget git xz bzip2 musl m4 autoconf tar xz-dev bzip2-dev build-base libpthread-stubs # gcc abuild binutils binutils-doc gcc-doc"
                },
                {
                    "created": "2019-09-27T16:29:38.664794975Z",
                    "created_by": "/bin/sh -c mkdir -p /usr/local/include &&     git clone --depth 1 https://github.com/ebiggers/libdeflate.git &&     cd libdeflate && make -j4 CFLAGS=\"-fPIC -O3\" install &&     cd .. && rm -rf libdeflate &&     git clone https://github.com/cloudflare/zlib cloudflare-zlib &&     cd cloudflare-zlib && ./configure && make install &&     cd .. &&     rm -rf cloudflare-zlib"
                },
                {
                    "created": "2019-09-27T16:35:12.210043539Z",
                    "created_by": "/bin/sh -c cd / &&     git clone -b v1.0.0 git://github.com/nim-lang/nim nim &&     cd nim && sh ./build_all.sh &&     rm -rf csources &&     echo 'PATH=/nim/bin:$PATH' >> ~/.bashrc &&     echo 'PATH=/nim/bin:$PATH' >> ~/.bash_profile &&     echo 'PATH=/nim/bin:$PATH' >> /etc/environment"
                },
                {
                    "created": "2019-09-27T16:35:12.52300039Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=:/root/.nimble/bin:/nim/bin/:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-27T16:35:32.630759513Z",
                    "created_by": "/bin/sh -c git clone https://github.com/samtools/htslib &&     cd htslib && git checkout 1.9 && autoheader && autoconf &&     ./configure --disable-s3 --disable-libcurl --with-libdeflate &&     make -j4 CFLAGS=\"-fPIC -O3\" install &&     cd ../ && rm -rf htslib"
                },
                {
                    "created": "2019-09-27T17:26:10.637687167Z",
                    "created_by": "/bin/sh -c #(nop) ADD dir:57ee4443f210aa319e2810d57901c2df0cad0956261e855bb380740c52e85ebf in /src/ "
                },
                {
                    "created": "2019-09-27T17:26:35.745986952Z",
                    "created_by": "/bin/sh -c cat /src/docker/docker.nim.cfg >> /nim/config/nim.cfg &&     source ~/.bashrc && cd /src/ && nimble install -y &&     nimble install -y docopt &&     nimble install -y c2nim &&     nimble install -y websocket@#head &&     nim c -o:/usr/local/bin/nsb /src/docker/nsb.nim &&     rm -rf /src/"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:03901b4a2ea88eeaad62dbe59b072b28b6efa00491962b8741081c5df50c65e0",
                    "sha256:87bbe0c1a1fffbd94387586c4348724ae30b17a7eecac76f5e5cbc0afb73867e",
                    "sha256:130ca9c683c385a36c304d3ff48d08acb8c9f9779d12e413027a128007c5bf0b",
                    "sha256:f338ab0649aa1d0bcf195649674104d8989c88dec33dc2984935541667063c1e",
                    "sha256:c2d3515910860688a3501df309bd4202b9259074f1613f4836a6708b3fc4c025",
                    "sha256:bc7aa989de4494d2ae094d949787e749a2336464562d8611bc975e1bb1928763",
                    "sha256:df68c902f73d616f1781f9837d00c2641b0d8a98773a0fe5cf2b9fcdbe464be3"
                ]
            }
        },
        "v0.2.22": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=:/root/.nimble/bin:/nim/bin/:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CFLAGS=-fPIC -O3"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3f5db1596a6a837300286dc40e9d5b2de2f3801d3d3069f4d38e2ac883fdb2da",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "67ebdeb40a91b81735646aec2335d4a6d910e00bbae13b272af88f7dfccf2d22",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=:/root/.nimble/bin:/nim/bin/:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CFLAGS=-fPIC -O3"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "cat /src/docker/docker.nim.cfg >> /nim/config/nim.cfg &&     source ~/.bashrc && cd /src/ && nimble install -y &&     nimble install -y docopt &&     nimble install -y c2nim &&     nimble install -y websocket@#head &&     nim c -o:/usr/local/bin/nsb /src/docker/nsb.nim &&     rm -rf /src/"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3f5db1596a6a837300286dc40e9d5b2de2f3801d3d3069f4d38e2ac883fdb2da",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2019-10-22T21:28:46.376152141Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2019-08-20T20:19:55.062606894Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fe64057fbb83dccb960efabbf1cd8777920ef279a7fa8dbca0a8801c651bdf7c in / "
                },
                {
                    "created": "2019-08-20T20:19:55.211423266Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-27T14:14:39.995764646Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CFLAGS=-fPIC -O3",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-22T21:22:47.864705338Z",
                    "created_by": "/bin/sh -c apk add wget git xz bzip2 musl m4 autoconf tar xz-dev bzip2-dev build-base libpthread-stubs libzip-dev"
                },
                {
                    "created": "2019-10-22T21:22:58.339110346Z",
                    "created_by": "/bin/sh -c mkdir -p /usr/local/include &&     git clone --depth 1 https://github.com/ebiggers/libdeflate.git &&     cd libdeflate && make -j4 CFLAGS=\"-fPIC -O3\" install &&     cd .. && rm -rf libdeflate &&     git clone https://github.com/cloudflare/zlib cloudflare-zlib &&     cd cloudflare-zlib && ./configure && make install &&     cd .. &&     rm -rf cloudflare-zlib"
                },
                {
                    "created": "2019-10-22T21:28:05.789771999Z",
                    "created_by": "/bin/sh -c cd / &&     git clone -b v1.0.0 git://github.com/nim-lang/nim nim &&     cd nim && sh ./build_all.sh &&     rm -rf csources &&     echo 'PATH=/nim/bin:$PATH' >> ~/.bashrc &&     echo 'PATH=/nim/bin:$PATH' >> ~/.bash_profile &&     echo 'PATH=/nim/bin:$PATH' >> /etc/environment"
                },
                {
                    "created": "2019-10-22T21:28:06.0823588Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=:/root/.nimble/bin:/nim/bin/:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-22T21:28:24.169127889Z",
                    "created_by": "/bin/sh -c git clone https://github.com/samtools/htslib &&     cd htslib && git checkout 1.9 && autoheader && autoconf &&     ./configure --disable-s3 --disable-libcurl --with-libdeflate &&     make -j4 CFLAGS=\"-fPIC -O3\" install &&     cd ../ && rm -rf htslib"
                },
                {
                    "created": "2019-10-22T21:28:24.3745343Z",
                    "created_by": "/bin/sh -c #(nop) ADD dir:ea4a7ee433b6d4c3fedf280d5a8e5a6bcfec87f0909a3191ccef7fc68e9cdd02 in /src/ "
                },
                {
                    "created": "2019-10-22T21:28:46.376152141Z",
                    "created_by": "/bin/sh -c cat /src/docker/docker.nim.cfg >> /nim/config/nim.cfg &&     source ~/.bashrc && cd /src/ && nimble install -y &&     nimble install -y docopt &&     nimble install -y c2nim &&     nimble install -y websocket@#head &&     nim c -o:/usr/local/bin/nsb /src/docker/nsb.nim &&     rm -rf /src/"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:03901b4a2ea88eeaad62dbe59b072b28b6efa00491962b8741081c5df50c65e0",
                    "sha256:67d58a54a8d69fb3c7795802ce6ece88b6d4d387fa90c81bccecaf020055b8ed",
                    "sha256:eafd5fa53deaf52b68bcca3eec267153665b90a9eeac40da9dac96e8533c9932",
                    "sha256:f8e7f1c12e524d2033b3dd4659153e3dc1c2b36633032a0c8373dc77847d6bb8",
                    "sha256:3e7a289d34c4a258a00e43f67553c93e7c42ab644990b6266bfdef23495270af",
                    "sha256:166b769e2927738fb2bcf362d71e600a0fb0901271cb84e847fa66b4e6375e19",
                    "sha256:aa8c1ddc5be079503840f1f93203a65e742d7323916f5a1884e0d1f2f47bd75b"
                ]
            }
        },
        "v0.2.8": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/nim/bin:/root/.nimble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CFLAGS=-DCURL_STATICLIB -fPIC -O3"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:deb69bb8cf61d839e8c70df894ec02a0bd4e0f7f9da7237805649e0a44a68bfe",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "28a2ae2697ed9527b8f7207a9d722966a747323a145606694b0459bed7658061",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/nim/bin:/root/.nimble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CFLAGS=-DCURL_STATICLIB -fPIC -O3"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "cat /src/docker/docker.nim.cfg >> /nim/config/nim.cfg &&     source ~/.bashrc && cd /src/ && nimble install -y &&     nimble install -y docopt &&     nimble install -y c2nim &&     nimble install -y websocket@#head &&     nim c -o:/usr/local/bin/nsb /src/docker/nsb.nim &&     rm -rf /src/"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:deb69bb8cf61d839e8c70df894ec02a0bd4e0f7f9da7237805649e0a44a68bfe",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2019-07-20T02:07:55.328583322Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2019-07-11T22:20:52.139709355Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0eb5ea35741d23fe39cbac245b3a5d84856ed6384f4ff07d496369ee6d960bad in / "
                },
                {
                    "created": "2019-07-11T22:20:52.375286404Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-20T00:05:54.691579299Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CFLAGS=-DCURL_STATICLIB -fPIC -O3",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-20T00:47:41.26714972Z",
                    "created_by": "/bin/sh -c apk add wget git xz bzip2 musl m4 autoconf tar xz-dev bzip2-dev \t    build-base libpthread-stubs libssh2-dev             openssl-dev nghttp2-static \t    curl-dev curl-static libssh2-static &&     mkdir -p /usr/local/include &&     git clone --depth 1 https://github.com/ebiggers/libdeflate.git &&     cd libdeflate && make -j 2 libdeflate.a &&     cp libdeflate.a /usr/local/lib && cp libdeflate.h /usr/local/include &&     cd .. && rm -rf libdeflate &&     git clone https://github.com/cloudflare/zlib cloudflare-zlib &&     cd cloudflare-zlib && ./configure && make install &&     cd .. &&     rm -rf cloudflare-zlib"
                },
                {
                    "created": "2019-07-20T02:06:13.751211605Z",
                    "created_by": "/bin/sh -c cd / &&     git clone -b v0.20.2 git://github.com/nim-lang/nim nim &&     cd nim && sh ./build_all.sh &&     rm -rf csources &&     echo 'PATH=/nim/bin:$PATH' >> ~/.bashrc &&     echo 'PATH=/nim/bin:$PATH' >> ~/.bash_profile &&     echo 'PATH=/nim/bin:$PATH' >> /etc/environment"
                },
                {
                    "created": "2019-07-20T02:06:14.776427431Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/nim/bin:/root/.nimble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-20T02:07:03.23960496Z",
                    "created_by": "/bin/sh -c git clone https://github.com/samtools/htslib &&     cd htslib && git checkout 1.9 && autoheader && autoconf &&     CFLAGS=\"-fPIC -O3 -DCURL_STATICLIB\" ./configure --enable-libcurl --with-libdeflate CFLAGS=\"-fPIC -O3 -DCURL_STATICLIB\" &&     make -j4 CFLAGS=\"-fPIC -O3 -DCURL_STATICLIB\" install &&     cd ../ && rm -rf htslib"
                },
                {
                    "created": "2019-07-20T02:07:04.842953514Z",
                    "created_by": "/bin/sh -c #(nop) ADD dir:16bc1b7fa8352858854f7469e1651984f328ff27869e9aa2058249bcf7a045b1 in /src/ "
                },
                {
                    "created": "2019-07-20T02:07:55.328583322Z",
                    "created_by": "/bin/sh -c cat /src/docker/docker.nim.cfg >> /nim/config/nim.cfg &&     source ~/.bashrc && cd /src/ && nimble install -y &&     nimble install -y docopt &&     nimble install -y c2nim &&     nimble install -y websocket@#head &&     nim c -o:/usr/local/bin/nsb /src/docker/nsb.nim &&     rm -rf /src/"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1bfeebd65323b8ddf5bd6a51cc7097b72788bc982e9ab3280d53d3c613adffa7",
                    "sha256:02c21c9982b51513310bee9deb3e32723d392be0a1b24460533b0d063d1391cd",
                    "sha256:75b59473f903ef4b44bfc7ebd34f1c03854e2e9d1b8505e40434a8e36a9cf7d9",
                    "sha256:8bd8875123a4798eb9a77847e08b12316bff5824818a9ab4ec8facf0644a39fb",
                    "sha256:3295aaf202bb720db41976d09bbc3d59095677bd96ca88b88531119ada963b2b",
                    "sha256:ae0b1d200d78544864c0dc9910719d55fa24b4ce1fcf69734cb7f0da5d4996f2"
                ]
            }
        },
        "v0.3.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=:/root/.nimble/bin:/nim/bin/:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CFLAGS=-fPIC -O3"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:8ac5cfa605cf1a19e286ef8d93108167ab61a55e02e1a8ad9061f6e3390a9996",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f4789391ccdfed418c74d0fbebbad520825ddf233410d574801c0d534802ebd8",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=:/root/.nimble/bin:/nim/bin/:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CFLAGS=-fPIC -O3"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "cat /src/docker/docker.nim.cfg >> /nim/config/nim.cfg &&     source ~/.bashrc && cd /src/ && nimble install -y &&     nimble install -y c2nim docopt &&     nimble install -y websocket@#head &&     nim c -o:/usr/local/bin/nsb /src/docker/nsb.nim &&     rm -rf /src/"
                ],
                "Image": "sha256:8ac5cfa605cf1a19e286ef8d93108167ab61a55e02e1a8ad9061f6e3390a9996",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2020-01-06T17:04:01.256070101Z",
            "docker_version": "19.03.2",
            "history": [
                {
                    "created": "2019-09-25T21:20:01.488961604Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a34884e336ac6224d1f3255fc4b07e2a0393eeeac65c268125d75f78ee8442c8 in / "
                },
                {
                    "created": "2019-09-25T21:20:01.648231122Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-04T16:14:24.235015818Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CFLAGS=-fPIC -O3",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-04T17:18:23.003271096Z",
                    "created_by": "/bin/sh -c apk add wget git xz bzip2-static musl m4 autoconf tar xz-dev bzip2-dev build-base libpthread-stubs libzip-dev gfortran \t    openssl-libs-static openblas-static"
                },
                {
                    "created": "2019-11-04T17:18:34.297170534Z",
                    "created_by": "/bin/sh -c mkdir -p /usr/local/include &&     git clone --depth 1 https://github.com/ebiggers/libdeflate.git &&     cd libdeflate && make -j4 CFLAGS=\"-fPIC -O3\" install &&     cd .. && rm -rf libdeflate &&     git clone https://github.com/cloudflare/zlib cloudflare-zlib &&     cd cloudflare-zlib && ./configure && make install &&     cd .. &&     rm -rf cloudflare-zlib"
                },
                {
                    "created": "2019-11-04T17:24:01.233336403Z",
                    "created_by": "/bin/sh -c cd / &&     git clone -b v1.0.2 git://github.com/nim-lang/nim nim &&     cd nim && sh ./build_all.sh &&     rm -rf csources &&     echo 'PATH=/nim/bin:$PATH' >> ~/.bashrc &&     echo 'PATH=/nim/bin:$PATH' >> ~/.bash_profile &&     echo 'PATH=/nim/bin:$PATH' >> /etc/environment"
                },
                {
                    "created": "2019-11-04T17:24:01.548881423Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=:/root/.nimble/bin:/nim/bin/:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-06T16:47:13.846532856Z",
                    "created_by": "/bin/sh -c git clone https://github.com/samtools/htslib &&     cd htslib && git checkout 1.10 && autoheader && autoconf &&     ./configure --disable-s3 --disable-libcurl --with-libdeflate &&     make -j4 CFLAGS=\"-fPIC -O3\" install &&     cd ../ && rm -rf htslib"
                },
                {
                    "created": "2020-01-06T17:03:36.423882645Z",
                    "created_by": "/bin/sh -c #(nop) ADD dir:ec158d866d5340a17a0ece1e1712df84f91b29416d3f50d7c9c391053a6799ed in /src/ "
                },
                {
                    "created": "2020-01-06T17:04:01.256070101Z",
                    "created_by": "/bin/sh -c cat /src/docker/docker.nim.cfg >> /nim/config/nim.cfg &&     source ~/.bashrc && cd /src/ && nimble install -y &&     nimble install -y c2nim docopt &&     nimble install -y websocket@#head &&     nim c -o:/usr/local/bin/nsb /src/docker/nsb.nim &&     rm -rf /src/"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:13cae72c4d27e53b33eb8af00cb0b8ca8b17b84ae1f9a0ed15e966bb0f7cac02",
                    "sha256:de81b9d92c80240a4faf9b6ac20ab819aa1e5f0f2ec2c36b7f5a298fb8427332",
                    "sha256:2e60104f570f35fc1fcc74ae8438a69609c48465a1bd64dfe988c85637227b84",
                    "sha256:86e40ebed90240813873d18ab74ac7a1f8f2d6d33441dfbbf62f472c48be69bc",
                    "sha256:7ac30167003f2cd57a22a61f9416b78a43ea75d39791862df5541a91643a7746",
                    "sha256:e2d5533add77190fcb42124e0e6587f2a4bade3bab9e1a9789b33d0f682b208e",
                    "sha256:f166deff0bdcbf0d8255cacbaba5d6c1f4aebcab8c45b768d89605e610da0ea4"
                ]
            }
        },
        "v0.3.16": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=:/root/.nimble/bin:/nim/bin/:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CFLAGS=-fPIC -O3"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c6172fc84117aa906ebee44cb68c3d442abb7dfa1dfaaec0c6770527f03d1c1b",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "e19b84f9f098b3d3dfdb104e6ec5345cc7e6e19878c2933b2b42d629ab8a4776",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=:/root/.nimble/bin:/nim/bin/:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CFLAGS=-fPIC -O3"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "cat /src/docker/docker.nim.cfg >> /nim/config/nim.cfg &&     source ~/.bashrc && cd /src/ && nimble install -y &&     nimble install -y c2nim docopt &&     nimble install -y websocket@#head &&     nim c -o:/usr/local/bin/nsb /src/docker/nsb.nim &&     rm -rf /src/"
                ],
                "Image": "sha256:c6172fc84117aa906ebee44cb68c3d442abb7dfa1dfaaec0c6770527f03d1c1b",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2021-06-25T11:38:02.973157448Z",
            "docker_version": "20.10.7",
            "history": [
                {
                    "created": "2020-03-23T21:19:34.027725872Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0c4555f363c2672e350001f1293e689875a3760afe7b3f9146886afe67121cba in / "
                },
                {
                    "created": "2020-03-23T21:19:34.196162891Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-25T07:09:47.353246996Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CFLAGS=-fPIC -O3",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-25T08:05:33.493025713Z",
                    "created_by": "/bin/sh -c apk add wget git xz bzip2-static musl m4 autoconf tar xz-dev bzip2-dev build-base libpthread-stubs libzip-dev gfortran \t    openssl-libs-static openblas-static pcre-dev curl llvm-dev curl-static bash curl-dev clang-static"
                },
                {
                    "created": "2021-06-25T08:05:50.837398003Z",
                    "created_by": "/bin/sh -c mkdir -p /usr/local/include &&     git clone --depth 1 https://github.com/ebiggers/libdeflate.git &&     cd libdeflate && make -j4 CFLAGS=\"-fPIC -O3\" install &&     cd .. && rm -rf libdeflate &&     git clone https://github.com/cloudflare/zlib cloudflare-zlib &&     cd cloudflare-zlib && ./configure && make install &&     cd .. &&     rm -rf cloudflare-zlib"
                },
                {
                    "created": "2021-06-25T08:12:55.899020873Z",
                    "created_by": "/bin/sh -c cd / &&     git clone -b v1.4.8 git://github.com/nim-lang/nim nim &&     cd nim &&      sh ./build_all.sh &&     rm -rf csources &&     echo 'PATH=/nim/bin:$PATH' >> ~/.bashrc &&     echo 'PATH=/nim/bin:$PATH' >> ~/.bash_profile &&     echo 'PATH=/nim/bin:$PATH' >> /etc/environment"
                },
                {
                    "created": "2021-06-25T08:13:10.2254729Z",
                    "created_by": "/bin/sh -c apk add cmake openssl-dev && \twget https://libzip.org/download/libzip-1.6.1.tar.gz && \ttar xzvf libzip-1.6.1.tar.gz && \tcd libzip-1.6.1 && \tmkdir build && cd build && \tcmake -DBUILD_SHARED_LIBS=OFF -DCMAKE_INSTALL_PREFIX=/usr/local/ ../ && \tmake -j4 CFLAGS=\"-fPIC -O3\" install && \tcd ../../ && rm -rf libzip-1.6.1*"
                },
                {
                    "created": "2021-06-25T08:13:10.534906317Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=:/root/.nimble/bin:/nim/bin/:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-25T08:14:34.116302454Z",
                    "created_by": "/bin/sh -c git clone -b 1.12 --recursive https://github.com/samtools/htslib &&     cd htslib && autoheader && autoconf &&     ./configure --enable-s3 --enable-libcurl --with-libdeflate &&     make -j4 CFLAGS=\"-fPIC -O3\" install &&     cd ../ &&     git clone -b 1.12 --recursive https://github.com/samtools/bcftools &&     cd bcftools && autoheader && autoconf &&     ./configure --enable-s3 --enable-libcurl --with-libdeflate &&     make -j4 CFLAGS=\"-fPIC -O3\" install &&     cd ../ && rm -rf htslib bcftools"
                },
                {
                    "created": "2021-06-25T11:37:24.639440284Z",
                    "created_by": "/bin/sh -c #(nop) ADD dir:d30bdf23a73fda4e79bc52845241bae25b2f9f7f76ee4d912fe2632bc2d13e8d in /src/ "
                },
                {
                    "created": "2021-06-25T11:38:02.973157448Z",
                    "created_by": "/bin/sh -c cat /src/docker/docker.nim.cfg >> /nim/config/nim.cfg &&     source ~/.bashrc && cd /src/ && nimble install -y &&     nimble install -y c2nim docopt &&     nimble install -y websocket@#head &&     nim c -o:/usr/local/bin/nsb /src/docker/nsb.nim &&     rm -rf /src/"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:beee9f30bc1f711043e78d4a2be0668955d4b761d587d6f60c2c8dc081efb203",
                    "sha256:737c9a310600a1b04999f73e188689c99b41ea5ab378b51cbdaa68ddb10d36e6",
                    "sha256:aafcc81c523711a4b10246bb5ab4dee6748400d3ada732c3cfb33dba0331abb1",
                    "sha256:3b33bdcd6dc783536436d049c863b676b12465dc93b689185126ab1603b44b9f",
                    "sha256:bee835f3fb99cb214305ffdb8c2969e244d7c549b0b2c28f83c1a3f1371016f6",
                    "sha256:3f89e52b0e4f0b7ab736770e0624fd80ad324722d0744eaea1f7f97a544a27d5",
                    "sha256:8cc0ecc89bd4be3ee10e4b1de268d98cc0755ead62e36b1adc56dac1e111fe4e",
                    "sha256:3733e601997523e33a8099492c8dc51b1f08623aef34dd9203fd3bdfad9e6e8d"
                ]
            }
        },
        "v0.3.17": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=:/root/.nimble/bin:/nim/bin/:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:~/.cargo/bin/",
                    "CFLAGS=-fPIC -O3",
                    "RUSTFLAGS=-Ctarget-feature=-crt-static"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:5087fa8256abdfc492afbc01e965ff72a55fe141e005d32c002702837488a536",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "a123b57b899023c560b26fd445bd01a44cedf18d6ad9951c09c8f2225edff5e0",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=:/root/.nimble/bin:/nim/bin/:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:~/.cargo/bin/",
                    "CFLAGS=-fPIC -O3",
                    "RUSTFLAGS=-Ctarget-feature=-crt-static"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "cat /src/docker/docker.nim.cfg >> /nim/config/nim.cfg &&     source ~/.bashrc && cd /src/ && nimble install -y &&     nimble install -y c2nim docopt &&     nimble install -y websocket@#head &&     nim c -o:/usr/local/bin/nsb /src/docker/nsb.nim &&     rm -rf /src/"
                ],
                "Image": "sha256:5087fa8256abdfc492afbc01e965ff72a55fe141e005d32c002702837488a536",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2021-06-28T19:42:28.068330623Z",
            "docker_version": "20.10.7",
            "history": [
                {
                    "created": "2020-03-23T21:19:34.027725872Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0c4555f363c2672e350001f1293e689875a3760afe7b3f9146886afe67121cba in / "
                },
                {
                    "created": "2020-03-23T21:19:34.196162891Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-25T07:09:47.353246996Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CFLAGS=-fPIC -O3",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-28T19:25:11.251787065Z",
                    "created_by": "/bin/sh -c apk add wget git xz bzip2-static musl m4 autoconf tar xz-dev bzip2-dev build-base libpthread-stubs libzip-dev gfortran     openssl-libs-static openblas-static pcre-dev curl llvm-dev curl-static bash curl-dev clang-static nghttp2-static"
                },
                {
                    "created": "2021-06-28T19:25:49.202935124Z",
                    "created_by": "/bin/sh -c mkdir -p /usr/local/include &&     git clone --depth 1 https://github.com/ebiggers/libdeflate.git &&     cd libdeflate && make -j4 CFLAGS=\"-fPIC -O3\" install &&     cd .. && rm -rf libdeflate &&     git clone https://github.com/cloudflare/zlib cloudflare-zlib &&     cd cloudflare-zlib && ./configure && make install &&     cd .. &&     rm -rf cloudflare-zlib"
                },
                {
                    "created": "2021-06-28T19:33:04.043648179Z",
                    "created_by": "/bin/sh -c cd / &&     git clone -b v1.4.8 git://github.com/nim-lang/nim nim &&     cd nim &&      sh ./build_all.sh &&     rm -rf csources &&     echo 'PATH=/nim/bin:$PATH' >> ~/.bashrc &&     echo 'PATH=/nim/bin:$PATH' >> ~/.bash_profile &&     echo 'PATH=/nim/bin:$PATH' >> /etc/environment"
                },
                {
                    "created": "2021-06-28T19:33:28.353828415Z",
                    "created_by": "/bin/sh -c apk add cmake openssl-dev && \twget https://libzip.org/download/libzip-1.6.1.tar.gz && \ttar xzvf libzip-1.6.1.tar.gz && \tcd libzip-1.6.1 && \tmkdir build && cd build && \tcmake -DBUILD_SHARED_LIBS=OFF -DCMAKE_INSTALL_PREFIX=/usr/local/ ../ && \tmake -j4 CFLAGS=\"-fPIC -O3\" install && \tcd ../../ && rm -rf libzip-1.6.1*"
                },
                {
                    "created": "2021-06-28T19:33:29.83967056Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=:/root/.nimble/bin:/nim/bin/:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-28T19:34:55.775765112Z",
                    "created_by": "/bin/sh -c git clone -b 1.12 --recursive https://github.com/samtools/htslib &&     cd htslib && autoheader && autoconf &&     ./configure --enable-s3 --enable-libcurl --with-libdeflate &&     make -j4 CFLAGS=\"-fPIC -O3\" install &&     cd ../ &&     git clone -b 1.12 --recursive https://github.com/samtools/bcftools &&     cd bcftools && autoheader && autoconf &&     ./configure --enable-s3 --enable-libcurl --with-libdeflate &&     make -j4 CFLAGS=\"-fPIC -O3\" install &&     cd ../ && rm -rf htslib bcftools"
                },
                {
                    "created": "2021-06-28T19:37:00.915714634Z",
                    "created_by": "/bin/sh -c sh -c ' curl --proto \"=https\" --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -q -y'"
                },
                {
                    "created": "2021-06-28T19:37:41.591251324Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=:/root/.nimble/bin:/nim/bin/:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:~/.cargo/bin/",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-28T19:37:41.827675057Z",
                    "created_by": "/bin/sh -c #(nop)  ENV RUSTFLAGS=-Ctarget-feature=-crt-static",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-28T19:41:29.504275108Z",
                    "created_by": "/bin/sh -c ~/.cargo/bin/rustup target add x86_64-unknown-linux-musl \t&& git clone https://github.com/38/d4-format \t&& cd d4-format         && ln -s /usr/bin/gcc /usr/bin/musl-gcc \t&& ~/.cargo/bin/cargo build --all --target x86_64-unknown-linux-musl --release"
                },
                {
                    "created": "2021-06-28T19:41:51.087417789Z",
                    "created_by": "/bin/sh -c install -m 644 d4-format/target/x86_64-unknown-linux-musl/release/libd4binding.a /usr/lib && \tinstall -m 644 d4-format/d4binding/include/d4.h /usr/include"
                },
                {
                    "created": "2021-06-28T19:41:53.0030508Z",
                    "created_by": "/bin/sh -c #(nop) ADD dir:b2dc087c035eedba1409a9886b063f6110f03cc42ff05162024932517c084fe1 in /src/ "
                },
                {
                    "created": "2021-06-28T19:42:28.068330623Z",
                    "created_by": "/bin/sh -c cat /src/docker/docker.nim.cfg >> /nim/config/nim.cfg &&     source ~/.bashrc && cd /src/ && nimble install -y &&     nimble install -y c2nim docopt &&     nimble install -y websocket@#head &&     nim c -o:/usr/local/bin/nsb /src/docker/nsb.nim &&     rm -rf /src/"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:beee9f30bc1f711043e78d4a2be0668955d4b761d587d6f60c2c8dc081efb203",
                    "sha256:b93eec14018d1d3b8b0f418d28a25ee1d74d1369763c2d45d204d20b6026cb2c",
                    "sha256:f3784aaa3ce04b6e648760ddabbc44df4e36cfe782a923c1d2603ae8ce1fbef9",
                    "sha256:1cddffbaa6b3f3ce1349da9c419c0788715e0808aa0e1ade63317f37b77cfd33",
                    "sha256:7d7e46f3f9d4b302dee50f050d84ef79313964049df400282b7868193db08ce5",
                    "sha256:2e995ba884967362d5052f26fceb4ef4ffd771cb1c935ce3677589bfc15d9de7",
                    "sha256:ee2db0d775f37e8cbb589bac87b89146c4cd7fdb09a56519a2bdcdf62e0144ef",
                    "sha256:826189476464af9ede60fbc7845144bb03d12bf2bdca39ac012d1ad17bf9753b",
                    "sha256:b255efbbf7ec6b09ff0cba4d9c651b31e5ea105cd7beef4a8ea7f6df6453d2f2",
                    "sha256:7d1eeb782afd5dd3321805d54a809e178f54543eba5e855ac4ccc3445975a435",
                    "sha256:3b2c8c1bc7161798422b869a76cd3b2803905a6fb001ecabf2b65cbefefbc42e"
                ]
            }
        },
        "v0.3.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=:/root/.nimble/bin:/nim/bin/:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CFLAGS=-fPIC -O3"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f11bcb1c86706814524d70419cbf1fea16f6f39790067b3df89fc8035751fcbb",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "349dfae95f1dd54ee1a5d45e48f7b2cb6b2af0916c323e0ac1b4c107fda38bdf",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=:/root/.nimble/bin:/nim/bin/:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CFLAGS=-fPIC -O3"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "cat /src/docker/docker.nim.cfg >> /nim/config/nim.cfg &&     source ~/.bashrc && cd /src/ && nimble install -y &&     nimble install -y c2nim docopt &&     nimble install -y websocket@#head &&     nim c -o:/usr/local/bin/nsb /src/docker/nsb.nim &&     rm -rf /src/"
                ],
                "Image": "sha256:f11bcb1c86706814524d70419cbf1fea16f6f39790067b3df89fc8035751fcbb",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2020-01-14T16:58:07.514886504Z",
            "docker_version": "19.03.2",
            "history": [
                {
                    "created": "2019-09-25T21:20:01.488961604Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a34884e336ac6224d1f3255fc4b07e2a0393eeeac65c268125d75f78ee8442c8 in / "
                },
                {
                    "created": "2019-09-25T21:20:01.648231122Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-04T16:14:24.235015818Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CFLAGS=-fPIC -O3",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-04T17:18:23.003271096Z",
                    "created_by": "/bin/sh -c apk add wget git xz bzip2-static musl m4 autoconf tar xz-dev bzip2-dev build-base libpthread-stubs libzip-dev gfortran \t    openssl-libs-static openblas-static"
                },
                {
                    "created": "2019-11-04T17:18:34.297170534Z",
                    "created_by": "/bin/sh -c mkdir -p /usr/local/include &&     git clone --depth 1 https://github.com/ebiggers/libdeflate.git &&     cd libdeflate && make -j4 CFLAGS=\"-fPIC -O3\" install &&     cd .. && rm -rf libdeflate &&     git clone https://github.com/cloudflare/zlib cloudflare-zlib &&     cd cloudflare-zlib && ./configure && make install &&     cd .. &&     rm -rf cloudflare-zlib"
                },
                {
                    "created": "2019-11-04T17:24:01.233336403Z",
                    "created_by": "/bin/sh -c cd / &&     git clone -b v1.0.2 git://github.com/nim-lang/nim nim &&     cd nim && sh ./build_all.sh &&     rm -rf csources &&     echo 'PATH=/nim/bin:$PATH' >> ~/.bashrc &&     echo 'PATH=/nim/bin:$PATH' >> ~/.bash_profile &&     echo 'PATH=/nim/bin:$PATH' >> /etc/environment"
                },
                {
                    "created": "2019-11-04T17:24:01.548881423Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=:/root/.nimble/bin:/nim/bin/:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-14T16:57:42.949611459Z",
                    "created_by": "/bin/sh -c git clone https://github.com/samtools/htslib &&     cd htslib && git checkout 1.10 && autoheader && autoconf &&     ./configure --disable-s3 --disable-libcurl --with-libdeflate &&     make -j4 CFLAGS=\"-fPIC -O3\" install &&     cd ../ &&     git clone https://github.com/samtools/bcftools &&     cd bcftools && git checkout 1.10 && autoheader && autoconf &&     ./configure --disable-s3 --disable-libcurl --with-libdeflate &&     make -j4 CFLAGS=\"-fPIC -O3\" install &&     cd ../ && rm -rf htslib bcftools"
                },
                {
                    "created": "2020-01-14T16:57:43.749032509Z",
                    "created_by": "/bin/sh -c #(nop) ADD dir:910da7509879db4bcd7bdce2729245b2b686aa7fd62273ef41ac7ef27df5eaed in /src/ "
                },
                {
                    "created": "2020-01-14T16:58:07.514886504Z",
                    "created_by": "/bin/sh -c cat /src/docker/docker.nim.cfg >> /nim/config/nim.cfg &&     source ~/.bashrc && cd /src/ && nimble install -y &&     nimble install -y c2nim docopt &&     nimble install -y websocket@#head &&     nim c -o:/usr/local/bin/nsb /src/docker/nsb.nim &&     rm -rf /src/"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:13cae72c4d27e53b33eb8af00cb0b8ca8b17b84ae1f9a0ed15e966bb0f7cac02",
                    "sha256:de81b9d92c80240a4faf9b6ac20ab819aa1e5f0f2ec2c36b7f5a298fb8427332",
                    "sha256:2e60104f570f35fc1fcc74ae8438a69609c48465a1bd64dfe988c85637227b84",
                    "sha256:86e40ebed90240813873d18ab74ac7a1f8f2d6d33441dfbbf62f472c48be69bc",
                    "sha256:31b58077348ddd7790edfd2f2a7f6838deaddb4d4bb68f2645f25e383631001b",
                    "sha256:c2b284ec14302b3831a8646ce871c2746879cc22c63b788e46fcea542f1c1cd9",
                    "sha256:697ff1be10b6cc02f51b4baeef901c49ddcebd0cf60dc99906d7e9072f19f4cf"
                ]
            }
        },
        "v0.3.23": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=:/root/.nimble/bin:/nim/bin/:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:~/.cargo/bin/",
                    "CFLAGS=-fPIC -O3",
                    "RUSTFLAGS=-Ctarget-feature=-crt-static"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:fd1aaeeef3cbcf08f7a693b94b3e712ae5c0a485f61ada255db0f8e9d4cb4e9a",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "49cd7a31c51a6e60bf11bf85b32e3b2f1ac8a78219459064cca2d704c3877e8d",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=:/root/.nimble/bin:/nim/bin/:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:~/.cargo/bin/",
                    "CFLAGS=-fPIC -O3",
                    "RUSTFLAGS=-Ctarget-feature=-crt-static"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "cat /src/docker/docker.nim.cfg >> /nim/config/nim.cfg &&     source ~/.bashrc && cd /src/ && nimble install -y &&     nimble install -y c2nim docopt &&     nimble install -y websocket@#head &&     nim c -o:/usr/local/bin/nsb /src/docker/nsb.nim &&     rm -rf /src/"
                ],
                "Image": "sha256:fd1aaeeef3cbcf08f7a693b94b3e712ae5c0a485f61ada255db0f8e9d4cb4e9a",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2022-09-13T20:38:57.372883422Z",
            "docker_version": "20.10.17",
            "history": [
                {
                    "created": "2020-03-23T21:19:34.027725872Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0c4555f363c2672e350001f1293e689875a3760afe7b3f9146886afe67121cba in / "
                },
                {
                    "created": "2020-03-23T21:19:34.196162891Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-25T07:09:47.353246996Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CFLAGS=-fPIC -O3",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-28T19:25:11.251787065Z",
                    "created_by": "/bin/sh -c apk add wget git xz bzip2-static musl m4 autoconf tar xz-dev bzip2-dev build-base libpthread-stubs libzip-dev gfortran     openssl-libs-static openblas-static pcre-dev curl llvm-dev curl-static bash curl-dev clang-static nghttp2-static"
                },
                {
                    "created": "2021-06-28T19:25:49.202935124Z",
                    "created_by": "/bin/sh -c mkdir -p /usr/local/include &&     git clone --depth 1 https://github.com/ebiggers/libdeflate.git &&     cd libdeflate && make -j4 CFLAGS=\"-fPIC -O3\" install &&     cd .. && rm -rf libdeflate &&     git clone https://github.com/cloudflare/zlib cloudflare-zlib &&     cd cloudflare-zlib && ./configure && make install &&     cd .. &&     rm -rf cloudflare-zlib"
                },
                {
                    "created": "2021-06-28T19:33:04.043648179Z",
                    "created_by": "/bin/sh -c cd / &&     git clone -b v1.4.8 git://github.com/nim-lang/nim nim &&     cd nim &&      sh ./build_all.sh &&     rm -rf csources &&     echo 'PATH=/nim/bin:$PATH' >> ~/.bashrc &&     echo 'PATH=/nim/bin:$PATH' >> ~/.bash_profile &&     echo 'PATH=/nim/bin:$PATH' >> /etc/environment"
                },
                {
                    "created": "2021-06-28T19:33:28.353828415Z",
                    "created_by": "/bin/sh -c apk add cmake openssl-dev && \twget https://libzip.org/download/libzip-1.6.1.tar.gz && \ttar xzvf libzip-1.6.1.tar.gz && \tcd libzip-1.6.1 && \tmkdir build && cd build && \tcmake -DBUILD_SHARED_LIBS=OFF -DCMAKE_INSTALL_PREFIX=/usr/local/ ../ && \tmake -j4 CFLAGS=\"-fPIC -O3\" install && \tcd ../../ && rm -rf libzip-1.6.1*"
                },
                {
                    "created": "2021-06-28T19:33:29.83967056Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=:/root/.nimble/bin:/nim/bin/:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-22T07:47:11.903717096Z",
                    "created_by": "/bin/sh -c git clone -b 1.13 --recursive https://github.com/samtools/htslib &&     cd htslib && autoheader && autoconf &&     ./configure --enable-s3 --enable-gcs --enable-libcurl --with-libdeflate &&     make -j4 CFLAGS=\"-fPIC -O3\" install &&     cd ../ &&     git clone -b 1.13 --recursive https://github.com/samtools/bcftools &&     cd bcftools && autoheader && autoconf &&     ./configure --enable-s3 --enable-libcurl --with-libdeflate &&     make -j4 CFLAGS=\"-fPIC -O3\" install &&     cd ../ && rm -rf htslib bcftools"
                },
                {
                    "created": "2022-04-22T07:48:57.244439577Z",
                    "created_by": "/bin/sh -c sh -c 'curl --proto \"=https\" --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -q -y'"
                },
                {
                    "created": "2022-04-22T07:49:43.049500024Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=:/root/.nimble/bin:/nim/bin/:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:~/.cargo/bin/",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-22T07:49:43.337420588Z",
                    "created_by": "/bin/sh -c #(nop)  ENV RUSTFLAGS=-Ctarget-feature=-crt-static",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-01T13:45:19.451397091Z",
                    "created_by": "/bin/sh -c ~/.cargo/bin/rustup target add x86_64-unknown-linux-musl \t&& git clone https://github.com/38/d4-format \t&& cd d4-format         && ln -s /usr/bin/gcc /usr/bin/musl-gcc   && ~/.cargo/bin/cargo build --package=d4binding --release"
                },
                {
                    "created": "2022-05-01T13:48:40.893071317Z",
                    "created_by": "/bin/sh -c install -m 644 d4-format/target/release/libd4binding.a /usr/lib && \tinstall -m 644 d4-format/d4binding/include/d4.h /usr/include"
                },
                {
                    "created": "2022-09-13T20:38:26.155693333Z",
                    "created_by": "/bin/sh -c #(nop) ADD dir:7f5fbf958eeecc2443bd4adbeb3fda962c932a042baf7439581128f5f1078618 in /src/ "
                },
                {
                    "created": "2022-09-13T20:38:57.372883422Z",
                    "created_by": "/bin/sh -c cat /src/docker/docker.nim.cfg >> /nim/config/nim.cfg &&     source ~/.bashrc && cd /src/ && nimble install -y &&     nimble install -y c2nim docopt &&     nimble install -y websocket@#head &&     nim c -o:/usr/local/bin/nsb /src/docker/nsb.nim &&     rm -rf /src/"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:beee9f30bc1f711043e78d4a2be0668955d4b761d587d6f60c2c8dc081efb203",
                    "sha256:b93eec14018d1d3b8b0f418d28a25ee1d74d1369763c2d45d204d20b6026cb2c",
                    "sha256:f3784aaa3ce04b6e648760ddabbc44df4e36cfe782a923c1d2603ae8ce1fbef9",
                    "sha256:1cddffbaa6b3f3ce1349da9c419c0788715e0808aa0e1ade63317f37b77cfd33",
                    "sha256:7d7e46f3f9d4b302dee50f050d84ef79313964049df400282b7868193db08ce5",
                    "sha256:8505357fc4924723f5f55cdc80d9397f062cb358e60ea99c5d82cbdb92fec237",
                    "sha256:2a673349ddffa06dc630611cf9d378f88fe89fdbd2dd57ed500d542b88f34985",
                    "sha256:3000f4cb3ed9e81db08b5772c496a4b169079178ff9974e67ed667eb406fefb2",
                    "sha256:a4db165622b0e5375d0392ea39bbc5b14ab0380ea2cb50a3c6809f98609f2e4d",
                    "sha256:33402c0acaae0da10ef0b3e2a54aa34ac333c0f65d3fe8052124f58f80a07b24",
                    "sha256:e310152cd7ba2e663c035f6c96edfebde7de7deb89fdb28c6742c65323a37cb1"
                ]
            }
        },
        "v0.3.24": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=:/root/.nimble/bin:/nim-1.6.6/bin/:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:~/.cargo/bin/",
                    "CFLAGS=-fPIC -O3",
                    "RUSTFLAGS=-Ctarget-feature=-crt-static"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ce6e7765204f1d02877d97521d60b5aa11a1e72fe34f181e9d36d808c5dd3d8e",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "0a136029aea742ce5e171a72af01f8700a59c678769cd20b280c3ce121927bce",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=:/root/.nimble/bin:/nim-1.6.6/bin/:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:~/.cargo/bin/",
                    "CFLAGS=-fPIC -O3",
                    "RUSTFLAGS=-Ctarget-feature=-crt-static"
                ],
                "Cmd": [
                    "|1",
                    "nim_version=1.6.6",
                    "/bin/sh",
                    "-c",
                    "cat /src/docker/docker.nim.cfg >> /nim-${nim_version}/config/nim.cfg &&     source ~/.bashrc && cd /src/ && nimble install -y &&     nimble install -y c2nim docopt &&     nimble install -y websocket@#head &&     nim c -o:/usr/local/bin/nsb /src/docker/nsb.nim &&     rm -rf /src/"
                ],
                "Image": "sha256:ce6e7765204f1d02877d97521d60b5aa11a1e72fe34f181e9d36d808c5dd3d8e",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2022-09-21T02:42:17.19686054Z",
            "docker_version": "20.10.18",
            "history": [
                {
                    "created": "2020-03-23T21:19:34.027725872Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0c4555f363c2672e350001f1293e689875a3760afe7b3f9146886afe67121cba in / "
                },
                {
                    "created": "2020-03-23T21:19:34.196162891Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-21T02:28:45.291257884Z",
                    "created_by": "/bin/sh -c #(nop)  ARG nim_version=1.6.6",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-21T02:28:45.552089592Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CFLAGS=-fPIC -O3",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-21T02:29:41.253560476Z",
                    "created_by": "|1 nim_version=1.6.6 /bin/sh -c apk add wget git xz bzip2-static musl m4 autoconf tar xz-dev bzip2-dev build-base libpthread-stubs libzip-dev gfortran     openssl-libs-static openblas-static pcre-dev curl llvm-dev curl-static bash curl-dev clang-static nghttp2-static"
                },
                {
                    "created": "2022-09-21T02:30:13.414755183Z",
                    "created_by": "|1 nim_version=1.6.6 /bin/sh -c mkdir -p /usr/local/include &&     git clone --depth 1 https://github.com/ebiggers/libdeflate.git &&     cd libdeflate && make -j4 CFLAGS=\"-fPIC -O3\" install &&     cd .. && rm -rf cloudflare-zlib"
                },
                {
                    "created": "2022-09-21T02:30:23.135516168Z",
                    "created_by": "|1 nim_version=1.6.6 /bin/sh -c cd / &&     wget -q https://nim-lang.org/download/nim-${nim_version}-linux_x64.tar.xz &&     tar xf nim-${nim_version}-linux_x64.tar.xz &&     echo 'PATH=/nim-${nim_version}/bin:$PATH' >> ~/.bashrc &&     echo 'PATH=/nim-${nim_version}/bin:$PATH' >> ~/.bash_profile &&     echo 'PATH=/nim-${nim_version}/bin:$PATH' >> /etc/environment  &&     rm -f nim-${nim_version}-linux_x64.tar.xz"
                },
                {
                    "created": "2022-09-21T02:30:47.874823095Z",
                    "created_by": "|1 nim_version=1.6.6 /bin/sh -c apk add cmake openssl-dev && \twget https://libzip.org/download/libzip-1.6.1.tar.gz && \ttar xzvf libzip-1.6.1.tar.gz && \tcd libzip-1.6.1 && \tmkdir build && cd build && \tcmake -DBUILD_SHARED_LIBS=OFF -DCMAKE_INSTALL_PREFIX=/usr/local/ ../ && \tmake -j4 CFLAGS=\"-fPIC -O3\" install && \tcd ../../ && rm -rf libzip-1.6.1*"
                },
                {
                    "created": "2022-09-21T02:30:50.16220554Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=:/root/.nimble/bin:/nim-1.6.6/bin/:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-21T02:32:08.525347418Z",
                    "created_by": "|1 nim_version=1.6.6 /bin/sh -c git clone --depth 1 -b 1.15 --recursive https://github.com/samtools/htslib &&     cd htslib && autoheader && autoconf &&     ./configure --enable-s3 --enable-gcs --enable-libcurl --with-libdeflate &&     make -j4 CFLAGS=\"-fPIC -O3\" install &&     cd ../ &&     git clone --depth 1 -b 1.15 --recursive https://github.com/samtools/bcftools &&     cd bcftools && autoheader && autoconf &&     ./configure --enable-s3 --enable-libcurl --with-libdeflate &&     make -j4 CFLAGS=\"-fPIC -O3\" install &&     cd ../ && rm -rf htslib bcftools"
                },
                {
                    "created": "2022-09-21T02:33:49.951263439Z",
                    "created_by": "|1 nim_version=1.6.6 /bin/sh -c sh -c 'curl --proto \"=https\" --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -q -y'"
                },
                {
                    "created": "2022-09-21T02:34:28.149967257Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=:/root/.nimble/bin:/nim-1.6.6/bin/:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:~/.cargo/bin/",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-21T02:34:28.403025912Z",
                    "created_by": "/bin/sh -c #(nop)  ENV RUSTFLAGS=-Ctarget-feature=-crt-static",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-21T02:41:06.69306105Z",
                    "created_by": "|1 nim_version=1.6.6 /bin/sh -c ~/.cargo/bin/rustup target add x86_64-unknown-linux-musl \t&& git clone https://github.com/38/d4-format \t&& cd d4-format         && ln -s /usr/bin/gcc /usr/bin/musl-gcc   && ~/.cargo/bin/cargo build --package=d4binding --release"
                },
                {
                    "created": "2022-09-21T02:41:28.45966045Z",
                    "created_by": "|1 nim_version=1.6.6 /bin/sh -c install -m 644 d4-format/target/release/libd4binding.a /usr/lib && \tinstall -m 644 d4-format/d4binding/include/d4.h /usr/include &&   rm -rf d4-format/target/ &&   rm -rf /root/.rustup/"
                },
                {
                    "created": "2022-09-21T02:41:40.297122443Z",
                    "created_by": "/bin/sh -c #(nop) ADD dir:7fc6c5484e123c4a2acb41547565483adf4458b705643960c3c900a99eaded1c in /src/ "
                },
                {
                    "created": "2022-09-21T02:42:17.19686054Z",
                    "created_by": "|1 nim_version=1.6.6 /bin/sh -c cat /src/docker/docker.nim.cfg >> /nim-${nim_version}/config/nim.cfg &&     source ~/.bashrc && cd /src/ && nimble install -y &&     nimble install -y c2nim docopt &&     nimble install -y websocket@#head &&     nim c -o:/usr/local/bin/nsb /src/docker/nsb.nim &&     rm -rf /src/"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:beee9f30bc1f711043e78d4a2be0668955d4b761d587d6f60c2c8dc081efb203",
                    "sha256:dfd1f66c0a266ec77183dc3f2780b9708709315f1e87cdf6c9c6d1537f720e8f",
                    "sha256:9268ef66c247fc1f95809f2f16e2c1f39f5de390eb1372c1f91e0531ddbecc16",
                    "sha256:bea9136520051f75efb6d965c9f83a533ffafad72f71380468c82c3d5f85e851",
                    "sha256:832219db125c3796295ab2f4c6efb0fa587e54975e9aab32f6928f5517b8b52a",
                    "sha256:b63d2bc4e1e8991362ed93f736642e421f1437ad3b6b58332129bdaf4934c9eb",
                    "sha256:81cccfa765af60a679e3713a45d7c1ce762927939af01274b7947ae34ef5b22f",
                    "sha256:123b87a61a8c9ab6151fda74dbe5d23c08ffe742cde8bc08890f22af67be1181",
                    "sha256:74f2f4f6f10ea3ab2d9f21755355d8caab7b5779c29e8ce052642117266f214b",
                    "sha256:851cc50bf9ee533acc9c0a79240377a7fe7b6de50ca686a1a9fa87b602129d19",
                    "sha256:54c161c7cde98bace30ffaa9dafa4486c96cec0ca7a28eaa186ca94eecd5cffe"
                ]
            }
        },
        "v0.3.25": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=:/root/.nimble/bin:/nim-1.6.6/bin/:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CFLAGS=-fPIC -O3",
                    "RUSTFLAGS=-Ctarget-feature=-crt-static"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:5df0f196130b4e8e2b4844ebff3c0bf465334925505bb3c61d4ab0d017f92a95",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "fc0ab280968e712b151b987d56ea09ba0f63a40eb82a1e069d8103466f21e095",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=:/root/.nimble/bin:/nim-1.6.6/bin/:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CFLAGS=-fPIC -O3",
                    "RUSTFLAGS=-Ctarget-feature=-crt-static"
                ],
                "Cmd": [
                    "|1",
                    "nim_version=1.6.6",
                    "/bin/sh",
                    "-c",
                    "cat /src/docker/docker.nim.cfg >> /nim-${nim_version}/config/nim.cfg &&     cd /src/ && nimble install -y &&     nimble install -y c2nim docopt &&     nimble install -y websocket@#head &&     nim c -o:/usr/local/bin/nsb /src/docker/nsb.nim &&     rm -rf /src/"
                ],
                "Image": "sha256:5df0f196130b4e8e2b4844ebff3c0bf465334925505bb3c61d4ab0d017f92a95",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2023-09-11T09:50:02.784966482Z",
            "docker_version": "24.0.5",
            "history": [
                {
                    "created": "2020-03-23T21:19:34.027725872Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0c4555f363c2672e350001f1293e689875a3760afe7b3f9146886afe67121cba in / "
                },
                {
                    "created": "2020-03-23T21:19:34.196162891Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-11T09:32:03.719760866Z",
                    "created_by": "/bin/sh -c #(nop)  ARG nim_version=1.6.6",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-11T09:32:03.734478731Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CFLAGS=-fPIC -O3",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-11T09:33:35.847913938Z",
                    "created_by": "|1 nim_version=1.6.6 /bin/sh -c apk update && apk upgrade && apk add wget git xz bzip2-static musl m4 autoconf tar xz-dev bzip2-dev build-base libpthread-stubs libzip-dev gfortran     openssl-libs-static openblas-static pcre-dev curl llvm-dev curl-static bash curl-dev clang-static nghttp2-static  zlib-static cmake"
                },
                {
                    "created": "2023-09-11T09:33:43.286974354Z",
                    "created_by": "|1 nim_version=1.6.6 /bin/sh -c mkdir -p /usr/local/include &&     git clone -b v1.18 --depth 1 https://github.com/ebiggers/libdeflate.git &&     cd libdeflate && cmake -B build && cmake --build build && cmake --install build  &&     ln -s /usr/local/lib64/* /usr/local/lib &&     cd .. && rm -rf libdeflate"
                },
                {
                    "created": "2023-09-11T09:33:49.708082157Z",
                    "created_by": "|1 nim_version=1.6.6 /bin/sh -c cd / &&     wget -q https://nim-lang.org/download/nim-${nim_version}-linux_x64.tar.xz &&     tar xf nim-${nim_version}-linux_x64.tar.xz &&     echo 'PATH=/nim-${nim_version}/bin:$PATH' >> ~/.bashrc &&     echo 'PATH=/nim-${nim_version}/bin:$PATH' >> ~/.bash_profile &&     echo 'PATH=/nim-${nim_version}/bin:$PATH' >> /etc/environment  &&     rm -f nim-${nim_version}-linux_x64.tar.xz"
                },
                {
                    "created": "2023-09-11T09:33:58.746101326Z",
                    "created_by": "|1 nim_version=1.6.6 /bin/sh -c apk add cmake openssl-dev && \twget https://libzip.org/download/libzip-1.6.1.tar.gz && \ttar xzvf libzip-1.6.1.tar.gz && \tcd libzip-1.6.1 && \tmkdir build && cd build && \tcmake -DBUILD_SHARED_LIBS=OFF -DCMAKE_INSTALL_PREFIX=/usr/local/ ../ && \tmake -j4 CFLAGS=\"-fPIC -O3\" install && \tcd ../../ && rm -rf libzip-1.6.1*"
                },
                {
                    "created": "2023-09-11T09:33:58.762282762Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=:/root/.nimble/bin:/nim-1.6.6/bin/:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-11T09:34:57.980944086Z",
                    "created_by": "|1 nim_version=1.6.6 /bin/sh -c git clone --depth 1 -b 1.18 --recursive https://github.com/samtools/htslib &&     cd htslib && autoheader && autoconf &&     ./configure --enable-s3 --enable-gcs --enable-libcurl --with-libdeflate &&     make -j4 CFLAGS=\"-fPIC -O3\" install &&     cd ../ &&     git clone --depth 1 -b 1.18 --recursive https://github.com/samtools/bcftools &&     cd bcftools && autoheader && autoconf &&     ./configure --enable-s3 --enable-libcurl --with-libdeflate &&     make -j4 CFLAGS=\"-fPIC -O3\" install &&     cd ../ && rm -rf htslib bcftools"
                },
                {
                    "created": "2023-09-11T09:34:57.998277258Z",
                    "created_by": "/bin/sh -c #(nop)  ENV RUSTFLAGS=-Ctarget-feature=-crt-static",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-11T09:41:35.390541576Z",
                    "created_by": "|1 nim_version=1.6.6 /bin/sh -c sh -c 'curl --proto \"=https\" --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -q -y'     && ~/.cargo/bin/rustup target add x86_64-unknown-linux-musl \t&& git clone https://github.com/38/d4-format \t&& cd d4-format     && ln -s /usr/bin/gcc /usr/bin/musl-gcc     && ~/.cargo/bin/cargo build --package=d4binding --release && cd ..     && install -m 644 d4-format/target/release/libd4binding.a /usr/lib \t&& install -m 644 d4-format/d4binding/include/d4.h /usr/include      && rm -rf d4-format/target/      && rm -rf /root/.rustup/      && rm -rf ~/.cargo"
                },
                {
                    "created": "2023-09-11T09:49:42.331012664Z",
                    "created_by": "/bin/sh -c #(nop) ADD dir:d58757992594f3fee850cfd60f1bc09654d9b37aa86c9c2ac1aded78ff9c7866 in /src/ "
                },
                {
                    "created": "2023-09-11T09:50:02.784966482Z",
                    "created_by": "|1 nim_version=1.6.6 /bin/sh -c cat /src/docker/docker.nim.cfg >> /nim-${nim_version}/config/nim.cfg &&     cd /src/ && nimble install -y &&     nimble install -y c2nim docopt &&     nimble install -y websocket@#head &&     nim c -o:/usr/local/bin/nsb /src/docker/nsb.nim &&     rm -rf /src/"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:beee9f30bc1f711043e78d4a2be0668955d4b761d587d6f60c2c8dc081efb203",
                    "sha256:0d29e828e9c4c4941db7f2ced46b3b7e46add339c4b775f2b04a46d1fd80ddf8",
                    "sha256:133821083589c19580f3d2b5fb654416f125014d29862055dd6c472056c3d547",
                    "sha256:8fbde40b6b05f000f82008c2abdf8fe1352cb2a06dd1ce2cc286f94499f444b0",
                    "sha256:5ba35b0c10103dc8d74c23c77d3949ea7d434e9ab8f48ba43039231e7ea9dcb2",
                    "sha256:a8cd0ab577ddb8756f665324ed7e1a9a06438c8b7e3e07740fc427e83cbdc794",
                    "sha256:a3f3862386df9ec929dc4ddeddb1825b04a761e3c48b018a60a93825729eed54",
                    "sha256:dae82f6a9e060b2c9df612dd29a82a4b417d7c2376161fdfbfdd282ba32d3753",
                    "sha256:b4567bac44a0907d1634381abbda9d14e1b33b0f6572db021409084db269559d"
                ]
            }
        },
        "v0.3.3": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=:/root/.nimble/bin:/nim/bin/:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CFLAGS=-fPIC -O3"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a10ca096853d342c7ac0f87cfea04c4cca5e25131bde5123e67b3c93f8ee895c",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "a4508dc40af60623e8933990b11b84e5c212927d79de7b855c677ae790038b30",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=:/root/.nimble/bin:/nim/bin/:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CFLAGS=-fPIC -O3"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "cat /src/docker/docker.nim.cfg >> /nim/config/nim.cfg &&     source ~/.bashrc && cd /src/ && nimble install -y &&     nimble install -y c2nim docopt &&     nimble install -y websocket@#head &&     nim c -o:/usr/local/bin/nsb /src/docker/nsb.nim &&     rm -rf /src/"
                ],
                "Image": "sha256:a10ca096853d342c7ac0f87cfea04c4cca5e25131bde5123e67b3c93f8ee895c",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2020-02-28T18:51:07.476963548Z",
            "docker_version": "19.03.2",
            "history": [
                {
                    "created": "2019-09-25T21:20:01.488961604Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a34884e336ac6224d1f3255fc4b07e2a0393eeeac65c268125d75f78ee8442c8 in / "
                },
                {
                    "created": "2019-09-25T21:20:01.648231122Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-04T16:14:24.235015818Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CFLAGS=-fPIC -O3",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-28T18:38:15.470125221Z",
                    "created_by": "/bin/sh -c apk add wget git xz bzip2-static musl m4 autoconf tar xz-dev bzip2-dev build-base libpthread-stubs libzip-dev gfortran \t    openssl-libs-static openblas-static pcre-dev openblas-dev lapack-dev"
                },
                {
                    "created": "2020-02-28T18:38:28.478068572Z",
                    "created_by": "/bin/sh -c mkdir -p /usr/local/include &&     git clone --depth 1 https://github.com/ebiggers/libdeflate.git &&     cd libdeflate && make -j4 CFLAGS=\"-fPIC -O3\" install &&     cd .. && rm -rf libdeflate &&     git clone https://github.com/cloudflare/zlib cloudflare-zlib &&     cd cloudflare-zlib && ./configure && make install &&     cd .. &&     rm -rf cloudflare-zlib"
                },
                {
                    "created": "2020-02-28T18:45:14.953808748Z",
                    "created_by": "/bin/sh -c cd / &&     git clone -b v1.0.4 git://github.com/nim-lang/nim nim &&     cd nim && sh ./build_all.sh &&     rm -rf csources &&     echo 'PATH=/nim/bin:$PATH' >> ~/.bashrc &&     echo 'PATH=/nim/bin:$PATH' >> ~/.bash_profile &&     echo 'PATH=/nim/bin:$PATH' >> /etc/environment"
                },
                {
                    "created": "2020-02-28T18:45:42.842860101Z",
                    "created_by": "/bin/sh -c apk add cmake openssl-dev && \twget https://libzip.org/download/libzip-1.6.1.tar.gz && \ttar xzvf libzip-1.6.1.tar.gz && \tcd libzip-1.6.1 && \tmkdir build && cd build && \tcmake -DBUILD_SHARED_LIBS=OFF -DCMAKE_INSTALL_PREFIX=/usr/local/ ../ && \tmake -j4 CFLAGS=\"-fPIC -O3\" install && \tcd ../../ && rm -rf libzip-1.6.1*"
                },
                {
                    "created": "2020-02-28T18:45:43.01136508Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=:/root/.nimble/bin:/nim/bin/:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-28T18:46:28.585051078Z",
                    "created_by": "/bin/sh -c git clone https://github.com/samtools/htslib &&     cd htslib && git checkout 1.10 && autoheader && autoconf &&     ./configure --disable-s3 --disable-libcurl --with-libdeflate &&     make -j4 CFLAGS=\"-fPIC -O3\" install &&     cd ../ &&     git clone https://github.com/samtools/bcftools &&     cd bcftools && git checkout 1.10 && autoheader && autoconf &&     ./configure --disable-s3 --disable-libcurl --with-libdeflate &&     make -j4 CFLAGS=\"-fPIC -O3\" install &&     cd ../ && rm -rf htslib bcftools"
                },
                {
                    "created": "2020-02-28T18:50:39.103555506Z",
                    "created_by": "/bin/sh -c #(nop) ADD dir:a1c1370261d0b76860c8544b3b302c58541c85cd8bd65b12b6fa4a0bd9eab1b2 in /src/ "
                },
                {
                    "created": "2020-02-28T18:51:07.476963548Z",
                    "created_by": "/bin/sh -c cat /src/docker/docker.nim.cfg >> /nim/config/nim.cfg &&     source ~/.bashrc && cd /src/ && nimble install -y &&     nimble install -y c2nim docopt &&     nimble install -y websocket@#head &&     nim c -o:/usr/local/bin/nsb /src/docker/nsb.nim &&     rm -rf /src/"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:13cae72c4d27e53b33eb8af00cb0b8ca8b17b84ae1f9a0ed15e966bb0f7cac02",
                    "sha256:6f367fec2f3b5edd212ef2b6694fdfa3cc421c557900b52df6ed3f7eb1a251fb",
                    "sha256:12ca662d3c44e087e4555f32903b232ef351390f7eddb16a148b97d891ec35b3",
                    "sha256:fa4e843677851fb4f7b19bad3179df201d50c580000b6deb2ede30304ea23df0",
                    "sha256:a170be5d8195333293d649407b40efa80e4b821d16f98a53b7b43653794992b5",
                    "sha256:314514d88644742c18254a74af4cc16174e864d70947fc3d50bc49eaa1e18a99",
                    "sha256:811289867697e76e0d91b0b70b2a71ede3d80795febb0e4343a8a982bad4576b",
                    "sha256:a6c7b99177146c0eb15c0262e648d726778166845a512e0e8c350826b28821de"
                ]
            }
        },
        "v0.3.4": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=:/root/.nimble/bin:/nim/bin/:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CFLAGS=-fPIC -O3"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f01e09aa330b7951ee39253951dc28a30b7520ba5aebe7cd270124273ff5ef5b",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "8d845c3ebb18af634369d23b1df3219ddc535db92b853b9c41d7e3cd838a39d1",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=:/root/.nimble/bin:/nim/bin/:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CFLAGS=-fPIC -O3"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "cat /src/docker/docker.nim.cfg >> /nim/config/nim.cfg &&     source ~/.bashrc && cd /src/ && nimble install -y &&     nimble install -y c2nim docopt &&     nimble install -y websocket@#head &&     nim c -o:/usr/local/bin/nsb /src/docker/nsb.nim &&     rm -rf /src/"
                ],
                "Image": "sha256:f01e09aa330b7951ee39253951dc28a30b7520ba5aebe7cd270124273ff5ef5b",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2020-04-21T19:10:44.126320171Z",
            "docker_version": "19.03.6",
            "history": [
                {
                    "created": "2020-03-23T21:19:34.027725872Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0c4555f363c2672e350001f1293e689875a3760afe7b3f9146886afe67121cba in / "
                },
                {
                    "created": "2020-03-23T21:19:34.196162891Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-20T23:15:37.4545456Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CFLAGS=-fPIC -O3",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-21T13:37:30.085517722Z",
                    "created_by": "/bin/sh -c apk add wget git xz bzip2-static musl m4 autoconf tar xz-dev bzip2-dev build-base libpthread-stubs libzip-dev gfortran \t    openssl-libs-static openblas-static pcre-dev"
                },
                {
                    "created": "2020-04-21T13:37:42.661120334Z",
                    "created_by": "/bin/sh -c mkdir -p /usr/local/include &&     git clone --depth 1 https://github.com/ebiggers/libdeflate.git &&     cd libdeflate && make -j4 CFLAGS=\"-fPIC -O3\" install &&     cd .. && rm -rf libdeflate &&     git clone https://github.com/cloudflare/zlib cloudflare-zlib &&     cd cloudflare-zlib && ./configure && make install &&     cd .. &&     rm -rf cloudflare-zlib"
                },
                {
                    "created": "2020-04-21T13:42:55.915511575Z",
                    "created_by": "/bin/sh -c cd / &&     git clone -b v1.2.0 git://github.com/nim-lang/nim nim &&     cd nim && sh ./build_all.sh &&     rm -rf csources &&     echo 'PATH=/nim/bin:$PATH' >> ~/.bashrc &&     echo 'PATH=/nim/bin:$PATH' >> ~/.bash_profile &&     echo 'PATH=/nim/bin:$PATH' >> /etc/environment"
                },
                {
                    "created": "2020-04-21T13:43:11.641409757Z",
                    "created_by": "/bin/sh -c apk add cmake openssl-dev && \twget https://libzip.org/download/libzip-1.6.1.tar.gz && \ttar xzvf libzip-1.6.1.tar.gz && \tcd libzip-1.6.1 && \tmkdir build && cd build && \tcmake -DBUILD_SHARED_LIBS=OFF -DCMAKE_INSTALL_PREFIX=/usr/local/ ../ && \tmake -j4 CFLAGS=\"-fPIC -O3\" install && \tcd ../../ && rm -rf libzip-1.6.1*"
                },
                {
                    "created": "2020-04-21T13:43:11.854897239Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=:/root/.nimble/bin:/nim/bin/:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-21T13:44:03.260765597Z",
                    "created_by": "/bin/sh -c git clone https://github.com/samtools/htslib &&     cd htslib && git checkout 1.10.2 && autoheader && autoconf &&     ./configure --disable-s3 --disable-libcurl --with-libdeflate &&     make -j4 CFLAGS=\"-fPIC -O3\" install &&     cd ../ &&     git clone https://github.com/samtools/bcftools &&     cd bcftools && git checkout 1.10.2 && autoheader && autoconf &&     ./configure --disable-s3 --disable-libcurl --with-libdeflate &&     make -j4 CFLAGS=\"-fPIC -O3\" install &&     cd ../ && rm -rf htslib bcftools"
                },
                {
                    "created": "2020-04-21T19:10:12.796854028Z",
                    "created_by": "/bin/sh -c #(nop) ADD dir:4d5932c403359582b0ff2b9e9475199adaf9da2c3d4137fdf1e5d10745dbc09c in /src/ "
                },
                {
                    "created": "2020-04-21T19:10:44.126320171Z",
                    "created_by": "/bin/sh -c cat /src/docker/docker.nim.cfg >> /nim/config/nim.cfg &&     source ~/.bashrc && cd /src/ && nimble install -y &&     nimble install -y c2nim docopt &&     nimble install -y websocket@#head &&     nim c -o:/usr/local/bin/nsb /src/docker/nsb.nim &&     rm -rf /src/"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:beee9f30bc1f711043e78d4a2be0668955d4b761d587d6f60c2c8dc081efb203",
                    "sha256:59d96e96e2d03544438f80d6b7464c002bb3c6d163a05163527115438f143489",
                    "sha256:0a2fac9b4275b48ea359c8be979d8114c91d66d3313aa9a6e60cab3475a7e6e0",
                    "sha256:e9640a868fd6db3e8bac88567f8721583ce65a512244ed2e768fcc2247ec5c4b",
                    "sha256:7ef494869b3b675aadfa809603c4097e937c06bad3c44a3c5785320f7baf2b06",
                    "sha256:2c5f1635033e52106a93e671c1605a88e2fa416ce976f8c72b7370d771bccd8f",
                    "sha256:0644861ba2c4515364ee2de4a5d37d13ae099bd45c6b5125e97ad8ba7d47e6de",
                    "sha256:b3cea16242227281e632058d572d6bfe20a63f130bc63713071ea3ef7701a903"
                ]
            }
        }
    }
}