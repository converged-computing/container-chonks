{
    "manifests": {
        "artful": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1983,
                    "digest": "sha256:88ba4c53760ab23312c41f89918cf39c2483488aac29283761baab2afeb3c05f",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        },
        "artful-non-free": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2190,
                    "digest": "sha256:fb214c724f4f6a1366d367ee7cde0ea121cd7ec53c44c1405c9fe055257efc35",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        },
        "bionic": {
            "manifests": [
                {
                    "digest": "sha256:436d0f91b2596d1a67587f416d172e20ea63d2ba9fab4064134e658283be40b6",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:be402681584b912cb441771e9a7e1b039e2da347fe7ebf2d1cd9f3736c2e5b4b",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1365
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "bionic-non-free": {
            "manifests": [
                {
                    "digest": "sha256:137b909d0e4c4e1c4300fa4479a22b15c053df24cbbef0f13fce395100eafa77",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1572
                },
                {
                    "digest": "sha256:edc6bddeb118195088c3f1948fdc52cc913d453e5f543927c7c89c015fe7bd6f",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1572
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "bookworm": {
            "manifests": [
                {
                    "digest": "sha256:b5d9e296f5ec121b1b39c5307d95cdfd294d8d169ab9f78aca1b213a3ad81bf0",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1366
                },
                {
                    "digest": "sha256:e7961711cd6a24273b612f917d18874722ab89869380490128c122119ceaa263",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1366
                },
                {
                    "digest": "sha256:6a51afa82ab0c052e69d885db70ac3a8368a28ab3b253281d7d5405c886d6e3b",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1366
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "bookworm-non-free": {
            "manifests": [
                {
                    "digest": "sha256:15dfea19d5eab84c5bf45e405330fd7358a413fb06515486034b37d04282db0e",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1573
                },
                {
                    "digest": "sha256:1c2f14d1fdd839639fe6c436e69389697c8d4a6d0f1108791658e5c18eb971e3",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1573
                },
                {
                    "digest": "sha256:a3309b5c9e2e33f51f93e9408770093a08d014a412ef5b07d49c633dedbf7088",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1573
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "bullseye": {
            "manifests": [
                {
                    "digest": "sha256:1694441fe59be1d5c71eb6d39714df19941ee4fea279d90242a5f41c6f53a18a",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1366
                },
                {
                    "digest": "sha256:988535ad98ef680d12c8c2ef8f4f236e475260c77e99bd71f3828caa78e782c5",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1366
                },
                {
                    "digest": "sha256:12c6caa037347611ddf7fc0c5345d70e004c69c2c21eb8ff097688808f713e7f",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1366
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "bullseye-non-free": {
            "manifests": [
                {
                    "digest": "sha256:655e9325440d63065fafd8c9b922e043d09cb7d0b64431fca1394a64d51a7932",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1573
                },
                {
                    "digest": "sha256:b5dc492ea2a5426cf9e4057ac513831ba003befb0caeefaf2f3a088617e11f4a",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1573
                },
                {
                    "digest": "sha256:28e3f5f42f6bec1bb12a48c70ed8d596b5094fd8c27f441d2d5f5951a2f87793",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1573
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "buster": {
            "manifests": [
                {
                    "digest": "sha256:bf2f947ae365ef6e63d2b35517da3c4cda05fcea37d8d7c37b8d75fde6519ffc",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1366
                },
                {
                    "digest": "sha256:76f6b5a63cfcfffceb39cb9f870a1d644f21d4e5562dfef4aad140f421d10d66",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1366
                },
                {
                    "digest": "sha256:1b77342c1caa1539b34af9f21d5cfa482dc7a4670bb773972c18f1f4fa65701c",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1366
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "buster-non-free": {
            "manifests": [
                {
                    "digest": "sha256:641fdeaa55cde0eac03bf4014add86be667cfbcd9d3895aea765c6da85fb20fc",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1573
                },
                {
                    "digest": "sha256:668a1461cc0b84c5391f14d0268d4d2c12c2bf8637d0c71a6fe0446a08f6468f",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1573
                },
                {
                    "digest": "sha256:f2f0471b3e94d8f0e05e2840a0963e8cee4c1c0642bd2511bd1e16f6e45749db",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1573
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "cosmic": {
            "manifests": [
                {
                    "digest": "sha256:9391663bc320c2276d729d4aec31e9da83ad10f02d3edee505f8a977f4340301",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1988
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "cosmic-non-free": {
            "manifests": [
                {
                    "digest": "sha256:a271e2440f01a2199d4fd82c1ce63094c9a96d0d1b8ade8a23e9d7f450d72b63",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 2195
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "disco": {
            "manifests": [
                {
                    "digest": "sha256:354d7cb6d06efac1caa21c8829b78b0280380c0833b79a0fb80e494dc3c9a079",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1988
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "disco-non-free": {
            "manifests": [
                {
                    "digest": "sha256:4b9defd646ba5948e2926dcb3c53bc7d709642d59766bd2d42db245e84dcf3dc",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 2195
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "focal": {
            "manifests": [
                {
                    "digest": "sha256:8dc902031f95e001e08bb2003cd90e74b166b0ee369d08a7d9af3d6ba763c7c0",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:12d87894dcf40f73f1dc0981a999188ec9339d9647de3f5f467680b92b3d5562",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1365
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "focal-non-free": {
            "manifests": [
                {
                    "digest": "sha256:8421112d66aeaeab568bebf7f45d1b5f5dfb405be757f06da601562e75062641",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1572
                },
                {
                    "digest": "sha256:9f0818c4377b17c028c7a3295c76561c487ffe7d6222d084b6f33dc34019f460",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1572
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "groovy": {
            "manifests": [
                {
                    "digest": "sha256:d2b9e74a37481daeea48dbfd068332c52ea2f00409d99ad31a4e6d082813fc8a",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1365
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "groovy-non-free": {
            "manifests": [
                {
                    "digest": "sha256:d95358bad76b76036bf12a80a8c9499301201edaf87d22ad42596e6ed7b7e2c1",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1572
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "hirsute": {
            "manifests": [
                {
                    "digest": "sha256:18ee20fb6921f078c5a6e33d1739b4c6565e15fa9ea9b4cf2796690cab16ba6c",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1365
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "hirsute-non-free": {
            "manifests": [
                {
                    "digest": "sha256:dbd5106db097147a2b99ff5ac1cf22a7eb13d335e113d01ad62706f51759d56d",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1572
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "impish": {
            "manifests": [
                {
                    "digest": "sha256:db1963ee159e0dca0159562742ad532d2a086a988b9354057ed8d77647b5e0f8",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:e1fc2dc1b64614617f8ce4060fb2907481ab2353c8bf21c3050761a267fbd9d7",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1365
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "impish-non-free": {
            "manifests": [
                {
                    "digest": "sha256:fa54f734923cf3bc814f9ca42375869480681699d414e88acb6e22b84dc40570",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1572
                },
                {
                    "digest": "sha256:d4317d75f7993f1c0989813fb01ddb8c37b2c45f469d348b3f06cf10fb4fc29e",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1572
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "jammy": {
            "manifests": [
                {
                    "digest": "sha256:bf7eeaf4b6bc662b083b0e199cd1118e181e59a8aa2966a22f37d3bd4060ae9f",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:26d8036b0a23656e23f5b4ab0b828d220f27307dcf903a5df4719082fe6791e9",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1365
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "jammy-non-free": {
            "manifests": [
                {
                    "digest": "sha256:4eea7b43b2760b4a4a0058b1ee28e6e0d05aeff5ddb75200fb0689f01a042d10",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1572
                },
                {
                    "digest": "sha256:2f47da2515fb5083d469ac3e15b8b68e364c2ff6cc8a971c903ad4b9edb503ed",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1572
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "jessie": {
            "manifests": [
                {
                    "digest": "sha256:43130141228fa40f0853a3261859d8d8abb2584723529017de96b2e49ee03537",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1361
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "jessie-non-free": {
            "manifests": [
                {
                    "digest": "sha256:7481f92c24adde6bab08a1ad461e3f5e4ca312da887ee06eac972ce77b847900",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1568
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "latest": {
            "manifests": [
                {
                    "digest": "sha256:1694441fe59be1d5c71eb6d39714df19941ee4fea279d90242a5f41c6f53a18a",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1366
                },
                {
                    "digest": "sha256:988535ad98ef680d12c8c2ef8f4f236e475260c77e99bd71f3828caa78e782c5",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1366
                },
                {
                    "digest": "sha256:12c6caa037347611ddf7fc0c5345d70e004c69c2c21eb8ff097688808f713e7f",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1366
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "lucid": {
            "name": "library/neurodebian",
            "tag": "lucid",
            "architecture": "amd64",
            "fsLayers": [
                {
                    "blobSum": "sha256:6606f25d7edca494f9ff10b5e78167c79956ae9f1e203b6101323a279b539032"
                },
                {
                    "blobSum": "sha256:6606f25d7edca494f9ff10b5e78167c79956ae9f1e203b6101323a279b539032"
                },
                {
                    "blobSum": "sha256:fdf24c616abca770ec39d5543675e3003ef3a79074349e919d53642a0b73e575"
                },
                {
                    "blobSum": "sha256:2a03945a455d019d48ce39939d0ebd06119b7a57f501dc7301ca5c943d6c39da"
                },
                {
                    "blobSum": "sha256:48a18665b00ec42c7a822d0fd8385332e4249301da19fae7492abc209eb0e475"
                },
                {
                    "blobSum": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                },
                {
                    "blobSum": "sha256:520bf49cb03161cef192c054457d6a0cb7eb58c43b5d86beb17838e1fb75aaed"
                }
            ],
            "history": [
                {
                    "v1Compatibility": "{\"id\":\"9696dfdc074de293a5b7788a9ce8c7f37db57eb8338f24bfebf31765a82b0f5c\",\"parent\":\"cdd8860a04930484c0ec878c1de0c753949c2388bbc01b3ed7f8b3be8eac7491\",\"created\":\"2015-04-22T11:09:16.525168507Z\",\"container\":\"43109455aff5d416e98691e22b08ef37a5ba1e43e68442c68382dadca2e3f605\",\"container_config\":{\"Hostname\":\"bcc1bacecede\",\"Domainname\":\"\",\"User\":\"\",\"Memory\":0,\"MemorySwap\":0,\"CpuShares\":0,\"Cpuset\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"PortSpecs\":null,\"ExposedPorts\":null,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"],\"Cmd\":[\"/bin/sh\",\"-c\",\"apt-key adv --recv-keys --keyserver pgp.mit.edu 0xA5D32F012649A5A9\"],\"Image\":\"cdd8860a04930484c0ec878c1de0c753949c2388bbc01b3ed7f8b3be8eac7491\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"NetworkDisabled\":false,\"MacAddress\":\"\",\"OnBuild\":[],\"Labels\":{}},\"docker_version\":\"1.6.0\",\"config\":{\"Hostname\":\"bcc1bacecede\",\"Domainname\":\"\",\"User\":\"\",\"Memory\":0,\"MemorySwap\":0,\"CpuShares\":0,\"Cpuset\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"PortSpecs\":null,\"ExposedPorts\":null,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"],\"Cmd\":[\"/bin/bash\"],\"Image\":\"cdd8860a04930484c0ec878c1de0c753949c2388bbc01b3ed7f8b3be8eac7491\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"NetworkDisabled\":false,\"MacAddress\":\"\",\"OnBuild\":[],\"Labels\":{}},\"architecture\":\"amd64\",\"os\":\"linux\",\"Size\":11086}\n"
                },
                {
                    "v1Compatibility": "{\"id\":\"9696dfdc074de293a5b7788a9ce8c7f37db57eb8338f24bfebf31765a82b0f5c\",\"parent\":\"cdd8860a04930484c0ec878c1de0c753949c2388bbc01b3ed7f8b3be8eac7491\",\"created\":\"2015-04-22T11:09:16.525168507Z\",\"container\":\"43109455aff5d416e98691e22b08ef37a5ba1e43e68442c68382dadca2e3f605\",\"container_config\":{\"Hostname\":\"bcc1bacecede\",\"Domainname\":\"\",\"User\":\"\",\"Memory\":0,\"MemorySwap\":0,\"CpuShares\":0,\"Cpuset\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"PortSpecs\":null,\"ExposedPorts\":null,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"],\"Cmd\":[\"/bin/sh\",\"-c\",\"apt-key adv --recv-keys --keyserver pgp.mit.edu 0xA5D32F012649A5A9\"],\"Image\":\"cdd8860a04930484c0ec878c1de0c753949c2388bbc01b3ed7f8b3be8eac7491\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"NetworkDisabled\":false,\"MacAddress\":\"\",\"OnBuild\":[],\"Labels\":{}},\"docker_version\":\"1.6.0\",\"config\":{\"Hostname\":\"bcc1bacecede\",\"Domainname\":\"\",\"User\":\"\",\"Memory\":0,\"MemorySwap\":0,\"CpuShares\":0,\"Cpuset\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"PortSpecs\":null,\"ExposedPorts\":null,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"],\"Cmd\":[\"/bin/bash\"],\"Image\":\"cdd8860a04930484c0ec878c1de0c753949c2388bbc01b3ed7f8b3be8eac7491\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"NetworkDisabled\":false,\"MacAddress\":\"\",\"OnBuild\":[],\"Labels\":{}},\"architecture\":\"amd64\",\"os\":\"linux\",\"Size\":11086}\n"
                },
                {
                    "v1Compatibility": "{\"id\":\"cdd8860a04930484c0ec878c1de0c753949c2388bbc01b3ed7f8b3be8eac7491\",\"parent\":\"84aaf090ccd235b393b41a7d52aa9b950ab7cceccd438c5bf815bec5d858cc39\",\"created\":\"2015-04-22T11:09:15.550142953Z\",\"container\":\"2560a038c08d25c7ff7b878d4269959cf14174d3ca09106f4226caa40024a036\",\"container_config\":{\"Hostname\":\"bcc1bacecede\",\"Domainname\":\"\",\"User\":\"\",\"Memory\":0,\"MemorySwap\":0,\"CpuShares\":0,\"Cpuset\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"PortSpecs\":null,\"ExposedPorts\":null,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"],\"Cmd\":[\"/bin/sh\",\"-c\",\"echo '#deb-src http://neuro.debian.net/debian-devel lucid main' \\u003e\\u003e /etc/apt/sources.list.d/neurodebian.sources.list\"],\"Image\":\"84aaf090ccd235b393b41a7d52aa9b950ab7cceccd438c5bf815bec5d858cc39\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"NetworkDisabled\":false,\"MacAddress\":\"\",\"OnBuild\":[],\"Labels\":{}},\"docker_version\":\"1.6.0\",\"config\":{\"Hostname\":\"bcc1bacecede\",\"Domainname\":\"\",\"User\":\"\",\"Memory\":0,\"MemorySwap\":0,\"CpuShares\":0,\"Cpuset\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"PortSpecs\":null,\"ExposedPorts\":null,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"],\"Cmd\":[\"/bin/bash\"],\"Image\":\"84aaf090ccd235b393b41a7d52aa9b950ab7cceccd438c5bf815bec5d858cc39\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"NetworkDisabled\":false,\"MacAddress\":\"\",\"OnBuild\":[],\"Labels\":{}},\"architecture\":\"amd64\",\"os\":\"linux\",\"Size\":148}\n"
                },
                {
                    "v1Compatibility": "{\"id\":\"84aaf090ccd235b393b41a7d52aa9b950ab7cceccd438c5bf815bec5d858cc39\",\"parent\":\"9c9133900b956c555cedfb1d34729cff0fe56555ffbc9816b8f4d13d72c85042\",\"created\":\"2015-04-22T11:09:14.98775832Z\",\"container\":\"423601a3ded718dee72a48a9f5e0b7eee8303de2f7491ebbe48ce34951db0791\",\"container_config\":{\"Hostname\":\"bcc1bacecede\",\"Domainname\":\"\",\"User\":\"\",\"Memory\":0,\"MemorySwap\":0,\"CpuShares\":0,\"Cpuset\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"PortSpecs\":null,\"ExposedPorts\":null,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"],\"Cmd\":[\"/bin/sh\",\"-c\",\"echo 'deb http://neuro.debian.net/debian data main' \\u003e\\u003e /etc/apt/sources.list.d/neurodebian.sources.list\"],\"Image\":\"9c9133900b956c555cedfb1d34729cff0fe56555ffbc9816b8f4d13d72c85042\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"NetworkDisabled\":false,\"MacAddress\":\"\",\"OnBuild\":[],\"Labels\":{}},\"docker_version\":\"1.6.0\",\"config\":{\"Hostname\":\"bcc1bacecede\",\"Domainname\":\"\",\"User\":\"\",\"Memory\":0,\"MemorySwap\":0,\"CpuShares\":0,\"Cpuset\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"PortSpecs\":null,\"ExposedPorts\":null,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"],\"Cmd\":[\"/bin/bash\"],\"Image\":\"9c9133900b956c555cedfb1d34729cff0fe56555ffbc9816b8f4d13d72c85042\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"NetworkDisabled\":false,\"MacAddress\":\"\",\"OnBuild\":[],\"Labels\":{}},\"architecture\":\"amd64\",\"os\":\"linux\",\"Size\":91}\n"
                },
                {
                    "v1Compatibility": "{\"id\":\"9c9133900b956c555cedfb1d34729cff0fe56555ffbc9816b8f4d13d72c85042\",\"parent\":\"01544d20cf5f0b48d022bf541908f976cff119ddc4689e3dec8ec69ed69cd332\",\"created\":\"2015-04-22T11:09:14.396317246Z\",\"container\":\"c0907cfde8e3c53ae290cafa5a3c6cae7997ec1ec58d5e60f6ff0b3cccf5da7a\",\"container_config\":{\"Hostname\":\"bcc1bacecede\",\"Domainname\":\"\",\"User\":\"\",\"Memory\":0,\"MemorySwap\":0,\"CpuShares\":0,\"Cpuset\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"PortSpecs\":null,\"ExposedPorts\":null,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"],\"Cmd\":[\"/bin/sh\",\"-c\",\"echo 'deb http://neuro.debian.net/debian lucid main' \\u003e /etc/apt/sources.list.d/neurodebian.sources.list\"],\"Image\":\"01544d20cf5f0b48d022bf541908f976cff119ddc4689e3dec8ec69ed69cd332\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"NetworkDisabled\":false,\"MacAddress\":\"\",\"OnBuild\":[],\"Labels\":{}},\"docker_version\":\"1.6.0\",\"config\":{\"Hostname\":\"bcc1bacecede\",\"Domainname\":\"\",\"User\":\"\",\"Memory\":0,\"MemorySwap\":0,\"CpuShares\":0,\"Cpuset\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"PortSpecs\":null,\"ExposedPorts\":null,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"],\"Cmd\":[\"/bin/bash\"],\"Image\":\"01544d20cf5f0b48d022bf541908f976cff119ddc4689e3dec8ec69ed69cd332\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"NetworkDisabled\":false,\"MacAddress\":\"\",\"OnBuild\":[],\"Labels\":{}},\"architecture\":\"amd64\",\"os\":\"linux\",\"Size\":46}\n"
                },
                {
                    "v1Compatibility": "{\"id\":\"01544d20cf5f0b48d022bf541908f976cff119ddc4689e3dec8ec69ed69cd332\",\"parent\":\"383b0d2d7dc123b80c05d7d657a181c75c6907a03a8a8448c3d91cc9b25fe8fa\",\"created\":\"2015-04-21T22:19:50.879071025Z\",\"container\":\"d9147fb672fc4baf0518013b538cc7cf8423ab46a06570e2b9b305e171212b92\",\"container_config\":{\"Hostname\":\"bcc1bacecede\",\"Domainname\":\"\",\"User\":\"\",\"Memory\":0,\"MemorySwap\":0,\"CpuShares\":0,\"Cpuset\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"PortSpecs\":null,\"ExposedPorts\":null,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":null,\"Cmd\":[\"/bin/sh\",\"-c\",\"#(nop) CMD [\\\"/bin/bash\\\"]\"],\"Image\":\"383b0d2d7dc123b80c05d7d657a181c75c6907a03a8a8448c3d91cc9b25fe8fa\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"NetworkDisabled\":false,\"MacAddress\":\"\",\"OnBuild\":null,\"Labels\":{}},\"docker_version\":\"1.6.0\",\"config\":{\"Hostname\":\"bcc1bacecede\",\"Domainname\":\"\",\"User\":\"\",\"Memory\":0,\"MemorySwap\":0,\"CpuShares\":0,\"Cpuset\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"PortSpecs\":null,\"ExposedPorts\":null,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":null,\"Cmd\":[\"/bin/bash\"],\"Image\":\"383b0d2d7dc123b80c05d7d657a181c75c6907a03a8a8448c3d91cc9b25fe8fa\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"NetworkDisabled\":false,\"MacAddress\":\"\",\"OnBuild\":null,\"Labels\":{}},\"architecture\":\"amd64\",\"os\":\"linux\",\"Size\":0}\n"
                },
                {
                    "v1Compatibility": "{\"id\":\"383b0d2d7dc123b80c05d7d657a181c75c6907a03a8a8448c3d91cc9b25fe8fa\",\"created\":\"2015-04-21T22:19:49.504236486Z\",\"container\":\"bcc1bacecedeab810b0b6038e85b882cfe516ddc23522ffcfd47e475cc02469c\",\"container_config\":{\"Hostname\":\"bcc1bacecede\",\"Domainname\":\"\",\"User\":\"\",\"Memory\":0,\"MemorySwap\":0,\"CpuShares\":0,\"Cpuset\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"PortSpecs\":null,\"ExposedPorts\":null,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":null,\"Cmd\":[\"/bin/sh\",\"-c\",\"#(nop) ADD file:efa63949872aa7f6090f9bec5167021e3dc5d6a6d61b07e4d263273d162f34e3 in /\"],\"Image\":\"\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"NetworkDisabled\":false,\"MacAddress\":\"\",\"OnBuild\":null,\"Labels\":null},\"docker_version\":\"1.6.0\",\"config\":{\"Hostname\":\"bcc1bacecede\",\"Domainname\":\"\",\"User\":\"\",\"Memory\":0,\"MemorySwap\":0,\"CpuShares\":0,\"Cpuset\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"PortSpecs\":null,\"ExposedPorts\":null,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":null,\"Cmd\":null,\"Image\":\"\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"NetworkDisabled\":false,\"MacAddress\":\"\",\"OnBuild\":null,\"Labels\":null},\"architecture\":\"amd64\",\"os\":\"linux\",\"Size\":97350761}\n"
                }
            ],
            "schemaVersion": 1,
            "signatures": [
                {
                    "header": {
                        "jwk": {
                            "crv": "P-256",
                            "kid": "6U6W:2S6I:6LAW:Q6G5:5JZB:LKJN:MO2N:O7MA:XB5N:RZHB:UI6E:C3Q7",
                            "kty": "EC",
                            "x": "JWiYI5W_PfEZ201qyxr-1Sy2FXuzdqzzSYK8OWZ7NXo",
                            "y": "UyUMAonUuNw3POgXNH70iuY0i8i05WJ9_nC7PjAADgU"
                        },
                        "alg": "ES256"
                    },
                    "signature": "a6fVaFAHI3yfHdTW_1nrwO57iA75--LMeXe194DYjjWvtfBDGkN3SgYVLup_aeJn27i5wSd85OcTa1bqgh8n5g",
                    "protected": "eyJmb3JtYXRMZW5ndGgiOjEyNzkwLCJmb3JtYXRUYWlsIjoiQ24wIiwidGltZSI6IjIwMjQtMDUtMzBUMDk6MjM6NDhaIn0"
                }
            ]
        },
        "nd": {
            "manifests": [
                {
                    "digest": "sha256:3a78cf5dde2f6c2b9dbf07c0927b728049813b9bfb859f4ff6af968d24449e33",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1366
                },
                {
                    "digest": "sha256:5351af710581785e6f2098e3fda2a47d25fb0c14f95cd79fc7d70712d30c576e",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1366
                },
                {
                    "digest": "sha256:b6c09f454b40a21e5679f4b27007a526f7773056faaab75167beb2ac6c40e6ec",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1366
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "nd-non-free": {
            "manifests": [
                {
                    "digest": "sha256:4d71fc958f2cf3c973bf5b154026889133623c4fe94e413869c08df7660ae233",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1573
                },
                {
                    "digest": "sha256:a1ee8d1689c95e098753ce53088f14e6e9c3b37cdbdb33ac55da81b428cac8a1",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1573
                },
                {
                    "digest": "sha256:79e4c08633c7453d23e692874e3db387355c0f72937f5db71245997417f895b6",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1573
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "nd10.04": {
            "name": "library/neurodebian",
            "tag": "nd10.04",
            "architecture": "amd64",
            "fsLayers": [
                {
                    "blobSum": "sha256:6606f25d7edca494f9ff10b5e78167c79956ae9f1e203b6101323a279b539032"
                },
                {
                    "blobSum": "sha256:6606f25d7edca494f9ff10b5e78167c79956ae9f1e203b6101323a279b539032"
                },
                {
                    "blobSum": "sha256:fdf24c616abca770ec39d5543675e3003ef3a79074349e919d53642a0b73e575"
                },
                {
                    "blobSum": "sha256:2a03945a455d019d48ce39939d0ebd06119b7a57f501dc7301ca5c943d6c39da"
                },
                {
                    "blobSum": "sha256:48a18665b00ec42c7a822d0fd8385332e4249301da19fae7492abc209eb0e475"
                },
                {
                    "blobSum": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                },
                {
                    "blobSum": "sha256:520bf49cb03161cef192c054457d6a0cb7eb58c43b5d86beb17838e1fb75aaed"
                }
            ],
            "history": [
                {
                    "v1Compatibility": "{\"id\":\"9696dfdc074de293a5b7788a9ce8c7f37db57eb8338f24bfebf31765a82b0f5c\",\"parent\":\"cdd8860a04930484c0ec878c1de0c753949c2388bbc01b3ed7f8b3be8eac7491\",\"created\":\"2015-04-22T11:09:16.525168507Z\",\"container\":\"43109455aff5d416e98691e22b08ef37a5ba1e43e68442c68382dadca2e3f605\",\"container_config\":{\"Hostname\":\"bcc1bacecede\",\"Domainname\":\"\",\"User\":\"\",\"Memory\":0,\"MemorySwap\":0,\"CpuShares\":0,\"Cpuset\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"PortSpecs\":null,\"ExposedPorts\":null,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"],\"Cmd\":[\"/bin/sh\",\"-c\",\"apt-key adv --recv-keys --keyserver pgp.mit.edu 0xA5D32F012649A5A9\"],\"Image\":\"cdd8860a04930484c0ec878c1de0c753949c2388bbc01b3ed7f8b3be8eac7491\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"NetworkDisabled\":false,\"MacAddress\":\"\",\"OnBuild\":[],\"Labels\":{}},\"docker_version\":\"1.6.0\",\"config\":{\"Hostname\":\"bcc1bacecede\",\"Domainname\":\"\",\"User\":\"\",\"Memory\":0,\"MemorySwap\":0,\"CpuShares\":0,\"Cpuset\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"PortSpecs\":null,\"ExposedPorts\":null,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"],\"Cmd\":[\"/bin/bash\"],\"Image\":\"cdd8860a04930484c0ec878c1de0c753949c2388bbc01b3ed7f8b3be8eac7491\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"NetworkDisabled\":false,\"MacAddress\":\"\",\"OnBuild\":[],\"Labels\":{}},\"architecture\":\"amd64\",\"os\":\"linux\",\"Size\":11086}\n"
                },
                {
                    "v1Compatibility": "{\"id\":\"9696dfdc074de293a5b7788a9ce8c7f37db57eb8338f24bfebf31765a82b0f5c\",\"parent\":\"cdd8860a04930484c0ec878c1de0c753949c2388bbc01b3ed7f8b3be8eac7491\",\"created\":\"2015-04-22T11:09:16.525168507Z\",\"container\":\"43109455aff5d416e98691e22b08ef37a5ba1e43e68442c68382dadca2e3f605\",\"container_config\":{\"Hostname\":\"bcc1bacecede\",\"Domainname\":\"\",\"User\":\"\",\"Memory\":0,\"MemorySwap\":0,\"CpuShares\":0,\"Cpuset\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"PortSpecs\":null,\"ExposedPorts\":null,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"],\"Cmd\":[\"/bin/sh\",\"-c\",\"apt-key adv --recv-keys --keyserver pgp.mit.edu 0xA5D32F012649A5A9\"],\"Image\":\"cdd8860a04930484c0ec878c1de0c753949c2388bbc01b3ed7f8b3be8eac7491\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"NetworkDisabled\":false,\"MacAddress\":\"\",\"OnBuild\":[],\"Labels\":{}},\"docker_version\":\"1.6.0\",\"config\":{\"Hostname\":\"bcc1bacecede\",\"Domainname\":\"\",\"User\":\"\",\"Memory\":0,\"MemorySwap\":0,\"CpuShares\":0,\"Cpuset\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"PortSpecs\":null,\"ExposedPorts\":null,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"],\"Cmd\":[\"/bin/bash\"],\"Image\":\"cdd8860a04930484c0ec878c1de0c753949c2388bbc01b3ed7f8b3be8eac7491\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"NetworkDisabled\":false,\"MacAddress\":\"\",\"OnBuild\":[],\"Labels\":{}},\"architecture\":\"amd64\",\"os\":\"linux\",\"Size\":11086}\n"
                },
                {
                    "v1Compatibility": "{\"id\":\"cdd8860a04930484c0ec878c1de0c753949c2388bbc01b3ed7f8b3be8eac7491\",\"parent\":\"84aaf090ccd235b393b41a7d52aa9b950ab7cceccd438c5bf815bec5d858cc39\",\"created\":\"2015-04-22T11:09:15.550142953Z\",\"container\":\"2560a038c08d25c7ff7b878d4269959cf14174d3ca09106f4226caa40024a036\",\"container_config\":{\"Hostname\":\"bcc1bacecede\",\"Domainname\":\"\",\"User\":\"\",\"Memory\":0,\"MemorySwap\":0,\"CpuShares\":0,\"Cpuset\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"PortSpecs\":null,\"ExposedPorts\":null,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"],\"Cmd\":[\"/bin/sh\",\"-c\",\"echo '#deb-src http://neuro.debian.net/debian-devel lucid main' \\u003e\\u003e /etc/apt/sources.list.d/neurodebian.sources.list\"],\"Image\":\"84aaf090ccd235b393b41a7d52aa9b950ab7cceccd438c5bf815bec5d858cc39\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"NetworkDisabled\":false,\"MacAddress\":\"\",\"OnBuild\":[],\"Labels\":{}},\"docker_version\":\"1.6.0\",\"config\":{\"Hostname\":\"bcc1bacecede\",\"Domainname\":\"\",\"User\":\"\",\"Memory\":0,\"MemorySwap\":0,\"CpuShares\":0,\"Cpuset\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"PortSpecs\":null,\"ExposedPorts\":null,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"],\"Cmd\":[\"/bin/bash\"],\"Image\":\"84aaf090ccd235b393b41a7d52aa9b950ab7cceccd438c5bf815bec5d858cc39\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"NetworkDisabled\":false,\"MacAddress\":\"\",\"OnBuild\":[],\"Labels\":{}},\"architecture\":\"amd64\",\"os\":\"linux\",\"Size\":148}\n"
                },
                {
                    "v1Compatibility": "{\"id\":\"84aaf090ccd235b393b41a7d52aa9b950ab7cceccd438c5bf815bec5d858cc39\",\"parent\":\"9c9133900b956c555cedfb1d34729cff0fe56555ffbc9816b8f4d13d72c85042\",\"created\":\"2015-04-22T11:09:14.98775832Z\",\"container\":\"423601a3ded718dee72a48a9f5e0b7eee8303de2f7491ebbe48ce34951db0791\",\"container_config\":{\"Hostname\":\"bcc1bacecede\",\"Domainname\":\"\",\"User\":\"\",\"Memory\":0,\"MemorySwap\":0,\"CpuShares\":0,\"Cpuset\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"PortSpecs\":null,\"ExposedPorts\":null,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"],\"Cmd\":[\"/bin/sh\",\"-c\",\"echo 'deb http://neuro.debian.net/debian data main' \\u003e\\u003e /etc/apt/sources.list.d/neurodebian.sources.list\"],\"Image\":\"9c9133900b956c555cedfb1d34729cff0fe56555ffbc9816b8f4d13d72c85042\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"NetworkDisabled\":false,\"MacAddress\":\"\",\"OnBuild\":[],\"Labels\":{}},\"docker_version\":\"1.6.0\",\"config\":{\"Hostname\":\"bcc1bacecede\",\"Domainname\":\"\",\"User\":\"\",\"Memory\":0,\"MemorySwap\":0,\"CpuShares\":0,\"Cpuset\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"PortSpecs\":null,\"ExposedPorts\":null,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"],\"Cmd\":[\"/bin/bash\"],\"Image\":\"9c9133900b956c555cedfb1d34729cff0fe56555ffbc9816b8f4d13d72c85042\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"NetworkDisabled\":false,\"MacAddress\":\"\",\"OnBuild\":[],\"Labels\":{}},\"architecture\":\"amd64\",\"os\":\"linux\",\"Size\":91}\n"
                },
                {
                    "v1Compatibility": "{\"id\":\"9c9133900b956c555cedfb1d34729cff0fe56555ffbc9816b8f4d13d72c85042\",\"parent\":\"01544d20cf5f0b48d022bf541908f976cff119ddc4689e3dec8ec69ed69cd332\",\"created\":\"2015-04-22T11:09:14.396317246Z\",\"container\":\"c0907cfde8e3c53ae290cafa5a3c6cae7997ec1ec58d5e60f6ff0b3cccf5da7a\",\"container_config\":{\"Hostname\":\"bcc1bacecede\",\"Domainname\":\"\",\"User\":\"\",\"Memory\":0,\"MemorySwap\":0,\"CpuShares\":0,\"Cpuset\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"PortSpecs\":null,\"ExposedPorts\":null,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"],\"Cmd\":[\"/bin/sh\",\"-c\",\"echo 'deb http://neuro.debian.net/debian lucid main' \\u003e /etc/apt/sources.list.d/neurodebian.sources.list\"],\"Image\":\"01544d20cf5f0b48d022bf541908f976cff119ddc4689e3dec8ec69ed69cd332\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"NetworkDisabled\":false,\"MacAddress\":\"\",\"OnBuild\":[],\"Labels\":{}},\"docker_version\":\"1.6.0\",\"config\":{\"Hostname\":\"bcc1bacecede\",\"Domainname\":\"\",\"User\":\"\",\"Memory\":0,\"MemorySwap\":0,\"CpuShares\":0,\"Cpuset\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"PortSpecs\":null,\"ExposedPorts\":null,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"],\"Cmd\":[\"/bin/bash\"],\"Image\":\"01544d20cf5f0b48d022bf541908f976cff119ddc4689e3dec8ec69ed69cd332\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"NetworkDisabled\":false,\"MacAddress\":\"\",\"OnBuild\":[],\"Labels\":{}},\"architecture\":\"amd64\",\"os\":\"linux\",\"Size\":46}\n"
                },
                {
                    "v1Compatibility": "{\"id\":\"01544d20cf5f0b48d022bf541908f976cff119ddc4689e3dec8ec69ed69cd332\",\"parent\":\"383b0d2d7dc123b80c05d7d657a181c75c6907a03a8a8448c3d91cc9b25fe8fa\",\"created\":\"2015-04-21T22:19:50.879071025Z\",\"container\":\"d9147fb672fc4baf0518013b538cc7cf8423ab46a06570e2b9b305e171212b92\",\"container_config\":{\"Hostname\":\"bcc1bacecede\",\"Domainname\":\"\",\"User\":\"\",\"Memory\":0,\"MemorySwap\":0,\"CpuShares\":0,\"Cpuset\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"PortSpecs\":null,\"ExposedPorts\":null,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":null,\"Cmd\":[\"/bin/sh\",\"-c\",\"#(nop) CMD [\\\"/bin/bash\\\"]\"],\"Image\":\"383b0d2d7dc123b80c05d7d657a181c75c6907a03a8a8448c3d91cc9b25fe8fa\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"NetworkDisabled\":false,\"MacAddress\":\"\",\"OnBuild\":null,\"Labels\":{}},\"docker_version\":\"1.6.0\",\"config\":{\"Hostname\":\"bcc1bacecede\",\"Domainname\":\"\",\"User\":\"\",\"Memory\":0,\"MemorySwap\":0,\"CpuShares\":0,\"Cpuset\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"PortSpecs\":null,\"ExposedPorts\":null,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":null,\"Cmd\":[\"/bin/bash\"],\"Image\":\"383b0d2d7dc123b80c05d7d657a181c75c6907a03a8a8448c3d91cc9b25fe8fa\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"NetworkDisabled\":false,\"MacAddress\":\"\",\"OnBuild\":null,\"Labels\":{}},\"architecture\":\"amd64\",\"os\":\"linux\",\"Size\":0}\n"
                },
                {
                    "v1Compatibility": "{\"id\":\"383b0d2d7dc123b80c05d7d657a181c75c6907a03a8a8448c3d91cc9b25fe8fa\",\"created\":\"2015-04-21T22:19:49.504236486Z\",\"container\":\"bcc1bacecedeab810b0b6038e85b882cfe516ddc23522ffcfd47e475cc02469c\",\"container_config\":{\"Hostname\":\"bcc1bacecede\",\"Domainname\":\"\",\"User\":\"\",\"Memory\":0,\"MemorySwap\":0,\"CpuShares\":0,\"Cpuset\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"PortSpecs\":null,\"ExposedPorts\":null,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":null,\"Cmd\":[\"/bin/sh\",\"-c\",\"#(nop) ADD file:efa63949872aa7f6090f9bec5167021e3dc5d6a6d61b07e4d263273d162f34e3 in /\"],\"Image\":\"\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"NetworkDisabled\":false,\"MacAddress\":\"\",\"OnBuild\":null,\"Labels\":null},\"docker_version\":\"1.6.0\",\"config\":{\"Hostname\":\"bcc1bacecede\",\"Domainname\":\"\",\"User\":\"\",\"Memory\":0,\"MemorySwap\":0,\"CpuShares\":0,\"Cpuset\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"PortSpecs\":null,\"ExposedPorts\":null,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":null,\"Cmd\":null,\"Image\":\"\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"NetworkDisabled\":false,\"MacAddress\":\"\",\"OnBuild\":null,\"Labels\":null},\"architecture\":\"amd64\",\"os\":\"linux\",\"Size\":97350761}\n"
                }
            ],
            "schemaVersion": 1,
            "signatures": [
                {
                    "header": {
                        "jwk": {
                            "crv": "P-256",
                            "kid": "HOGU:2NOA:HLZ5:HMRD:IUMO:5XZE:PHW5:IQA2:ODUF:D4IU:SI3I:D6VP",
                            "kty": "EC",
                            "x": "8vZaS_tp0fwXiy6e8U_BTk3yMrIuobBlpQLx3yf75SI",
                            "y": "SDGEqGpjUrWUvCIgPAW2S6oWHzuFY44Ja3Z4kYa3aew"
                        },
                        "alg": "ES256"
                    },
                    "signature": "CUw-_SwvSFhtJQmTiUY8MjuZm3c9ChO1cf3e0Zhj5AtKo-dBqOaWVaM2G9EpDqdW5qh7eVr6Qn-lWLc35D0lvQ",
                    "protected": "eyJmb3JtYXRMZW5ndGgiOjEyNzkyLCJmb3JtYXRUYWlsIjoiQ24wIiwidGltZSI6IjIwMjQtMDUtMzBUMDk6MjM6NTBaIn0"
                }
            ]
        },
        "nd100": {
            "manifests": [
                {
                    "digest": "sha256:bf2f947ae365ef6e63d2b35517da3c4cda05fcea37d8d7c37b8d75fde6519ffc",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1366
                },
                {
                    "digest": "sha256:76f6b5a63cfcfffceb39cb9f870a1d644f21d4e5562dfef4aad140f421d10d66",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1366
                },
                {
                    "digest": "sha256:1b77342c1caa1539b34af9f21d5cfa482dc7a4670bb773972c18f1f4fa65701c",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1366
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "nd100-non-free": {
            "manifests": [
                {
                    "digest": "sha256:641fdeaa55cde0eac03bf4014add86be667cfbcd9d3895aea765c6da85fb20fc",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1573
                },
                {
                    "digest": "sha256:668a1461cc0b84c5391f14d0268d4d2c12c2bf8637d0c71a6fe0446a08f6468f",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1573
                },
                {
                    "digest": "sha256:f2f0471b3e94d8f0e05e2840a0963e8cee4c1c0642bd2511bd1e16f6e45749db",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1573
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "nd110": {
            "manifests": [
                {
                    "digest": "sha256:1694441fe59be1d5c71eb6d39714df19941ee4fea279d90242a5f41c6f53a18a",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1366
                },
                {
                    "digest": "sha256:988535ad98ef680d12c8c2ef8f4f236e475260c77e99bd71f3828caa78e782c5",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1366
                },
                {
                    "digest": "sha256:12c6caa037347611ddf7fc0c5345d70e004c69c2c21eb8ff097688808f713e7f",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1366
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "nd110-non-free": {
            "manifests": [
                {
                    "digest": "sha256:655e9325440d63065fafd8c9b922e043d09cb7d0b64431fca1394a64d51a7932",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1573
                },
                {
                    "digest": "sha256:b5dc492ea2a5426cf9e4057ac513831ba003befb0caeefaf2f3a088617e11f4a",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1573
                },
                {
                    "digest": "sha256:28e3f5f42f6bec1bb12a48c70ed8d596b5094fd8c27f441d2d5f5951a2f87793",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1573
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "nd12.04": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5186,
                "digest": "sha256:87d390deb1011a432b8c501a081146c986bfe8191939e6a7fe0db87505b513e8"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 39096921,
                    "digest": "sha256:d8868e50ac4c7104d2200d42f432b661b2da8c1e417ccfae217e6a1e04bb9295"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 57938,
                    "digest": "sha256:83251ac64627fc331584f6c498b3aba5badc01574e2c70b2499af3af16630eed"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 423,
                    "digest": "sha256:589bba2f1b36ae56f0152c246e2541c5aa604b058febfcf2be32e9a304fec610"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 680,
                    "digest": "sha256:d62ecaceda3964b735cdd2af613d6bb136a52c1da0838b2ff4b4dab4212bcb1c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:6d93b41cfc6bf0d2522b7cf61588de4cd045065b36c52bd3aec2ba0622b2b22b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149,
                    "digest": "sha256:530762c42ebcd9c97f6c9ee741af4c65f8e8f8298509be2e4e927025f3e270f6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3136,
                    "digest": "sha256:cd4f8439eeaefd972b208d3415486662ee3b9b0ebc385cf66ebb4ee5776f390c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 236,
                    "digest": "sha256:0fe339e08ab223f36decd9abbeb9d080f0bf1f1e19fbb0b8b70d2bbfa42c1537"
                }
            ]
        },
        "nd120": {
            "manifests": [
                {
                    "digest": "sha256:b5d9e296f5ec121b1b39c5307d95cdfd294d8d169ab9f78aca1b213a3ad81bf0",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1366
                },
                {
                    "digest": "sha256:e7961711cd6a24273b612f917d18874722ab89869380490128c122119ceaa263",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1366
                },
                {
                    "digest": "sha256:6a51afa82ab0c052e69d885db70ac3a8368a28ab3b253281d7d5405c886d6e3b",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1366
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "nd120-non-free": {
            "manifests": [
                {
                    "digest": "sha256:15dfea19d5eab84c5bf45e405330fd7358a413fb06515486034b37d04282db0e",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1573
                },
                {
                    "digest": "sha256:1c2f14d1fdd839639fe6c436e69389697c8d4a6d0f1108791658e5c18eb971e3",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1573
                },
                {
                    "digest": "sha256:a3309b5c9e2e33f51f93e9408770093a08d014a412ef5b07d49c633dedbf7088",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1573
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "nd14.04": {
            "manifests": [
                {
                    "digest": "sha256:7551c1062ab7b8567f2caad9797d2a8555a01b895e8c67f2d18936731d137e63",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1777
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "nd14.04-non-free": {
            "manifests": [
                {
                    "digest": "sha256:20747ce188a9599ff190d97def9d912f4ea0f8a53d2c0155deff872e5254aa8a",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1984
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "nd14.10": {
            "schemaVersion": 1,
            "name": "library/neurodebian",
            "tag": "nd14.10",
            "architecture": "amd64",
            "fsLayers": [
                {
                    "blobSum": "sha256:1e7abbff374b3a83084051a6a1945d11fd29c59d52e933c2d407d0d005510592"
                },
                {
                    "blobSum": "sha256:1b7ea67cdb1ec6914557ed40122bb7225be0b5baa877c050fbd92ff9fed69be6"
                },
                {
                    "blobSum": "sha256:eaeaea4adcb042405d86472394c286da892974d20b8bc2f71b2ab730f6716682"
                },
                {
                    "blobSum": "sha256:be842475e12a458dd2544612a1db9d5ae4d6096e2bf60e8110f376ff0a940975"
                },
                {
                    "blobSum": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                },
                {
                    "blobSum": "sha256:4dbfbf5cb886bdcfbb50b2a0a9557acd0395d3aa53307a1d71f6dc10a8a5767c"
                }
            ],
            "history": [
                {
                    "v1Compatibility": "{\"id\":\"98313bbb010221e5517f9a4881e402b6a522e1f838cf70601df567340d0fdaaa\",\"parent\":\"13b024203ad2f2384479a61dc84cd9ccc11d71bea2794d53392032fe1e28218c\",\"created\":\"2015-07-14T07:25:21.829391811Z\",\"container\":\"e65e9caabbbb0c0b5acb7db62fa715149024fbb9e6c0a80bffde1d71583a86cb\",\"container_config\":{\"Hostname\":\"b3d34cf85279\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"PortSpecs\":null,\"ExposedPorts\":null,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"],\"Cmd\":[\"/bin/sh\",\"-c\",\"apt-key adv --recv-keys --keyserver pgp.mit.edu 0xA5D32F012649A5A9\"],\"Image\":\"13b024203ad2f2384479a61dc84cd9ccc11d71bea2794d53392032fe1e28218c\",\"Volumes\":null,\"VolumeDriver\":\"\",\"WorkingDir\":\"\",\"Entrypoint\":null,\"NetworkDisabled\":false,\"MacAddress\":\"\",\"OnBuild\":[],\"Labels\":{}},\"docker_version\":\"1.7.0\",\"config\":{\"Hostname\":\"b3d34cf85279\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"PortSpecs\":null,\"ExposedPorts\":null,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"],\"Cmd\":[\"/bin/bash\"],\"Image\":\"13b024203ad2f2384479a61dc84cd9ccc11d71bea2794d53392032fe1e28218c\",\"Volumes\":null,\"VolumeDriver\":\"\",\"WorkingDir\":\"\",\"Entrypoint\":null,\"NetworkDisabled\":false,\"MacAddress\":\"\",\"OnBuild\":[],\"Labels\":{}},\"architecture\":\"amd64\",\"os\":\"linux\",\"Size\":27883}\n"
                },
                {
                    "v1Compatibility": "{\"id\":\"13b024203ad2f2384479a61dc84cd9ccc11d71bea2794d53392032fe1e28218c\",\"parent\":\"40199cfb230317b98c751da6a3e98a30f7d09e11b6f279f25ed6167ee5b96eea\",\"created\":\"2015-07-14T07:25:10.388919501Z\",\"container\":\"7cefcbb73bd76e8a856d2d5e84dc62377d493d255516d1779a0835e3047ff2ae\",\"container_config\":{\"Hostname\":\"b3d34cf85279\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"PortSpecs\":null,\"ExposedPorts\":null,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"],\"Cmd\":[\"/bin/sh\",\"-c\",\"echo '#deb-src http://neuro.debian.net/debian-devel utopic main' \\u003e\\u003e /etc/apt/sources.list.d/neurodebian.sources.list\"],\"Image\":\"40199cfb230317b98c751da6a3e98a30f7d09e11b6f279f25ed6167ee5b96eea\",\"Volumes\":null,\"VolumeDriver\":\"\",\"WorkingDir\":\"\",\"Entrypoint\":null,\"NetworkDisabled\":false,\"MacAddress\":\"\",\"OnBuild\":[],\"Labels\":{}},\"docker_version\":\"1.7.0\",\"config\":{\"Hostname\":\"b3d34cf85279\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"PortSpecs\":null,\"ExposedPorts\":null,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"],\"Cmd\":[\"/bin/bash\"],\"Image\":\"40199cfb230317b98c751da6a3e98a30f7d09e11b6f279f25ed6167ee5b96eea\",\"Volumes\":null,\"VolumeDriver\":\"\",\"WorkingDir\":\"\",\"Entrypoint\":null,\"NetworkDisabled\":false,\"MacAddress\":\"\",\"OnBuild\":[],\"Labels\":{}},\"architecture\":\"amd64\",\"os\":\"linux\",\"Size\":150}\n"
                },
                {
                    "v1Compatibility": "{\"id\":\"40199cfb230317b98c751da6a3e98a30f7d09e11b6f279f25ed6167ee5b96eea\",\"parent\":\"752c5740b195fea8b45eafa9590315c654d4e814c84737e10877344fb47c81db\",\"created\":\"2015-07-14T07:25:09.313413503Z\",\"container\":\"a57bde3fa656f47c551b988682fad90ce4272bfa90b8ca538706b49f14b8c385\",\"container_config\":{\"Hostname\":\"b3d34cf85279\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"PortSpecs\":null,\"ExposedPorts\":null,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"],\"Cmd\":[\"/bin/sh\",\"-c\",\"echo 'deb http://neuro.debian.net/debian data main' \\u003e\\u003e /etc/apt/sources.list.d/neurodebian.sources.list\"],\"Image\":\"752c5740b195fea8b45eafa9590315c654d4e814c84737e10877344fb47c81db\",\"Volumes\":null,\"VolumeDriver\":\"\",\"WorkingDir\":\"\",\"Entrypoint\":null,\"NetworkDisabled\":false,\"MacAddress\":\"\",\"OnBuild\":[],\"Labels\":{}},\"docker_version\":\"1.7.0\",\"config\":{\"Hostname\":\"b3d34cf85279\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"PortSpecs\":null,\"ExposedPorts\":null,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"],\"Cmd\":[\"/bin/bash\"],\"Image\":\"752c5740b195fea8b45eafa9590315c654d4e814c84737e10877344fb47c81db\",\"Volumes\":null,\"VolumeDriver\":\"\",\"WorkingDir\":\"\",\"Entrypoint\":null,\"NetworkDisabled\":false,\"MacAddress\":\"\",\"OnBuild\":[],\"Labels\":{}},\"architecture\":\"amd64\",\"os\":\"linux\",\"Size\":92}\n"
                },
                {
                    "v1Compatibility": "{\"id\":\"752c5740b195fea8b45eafa9590315c654d4e814c84737e10877344fb47c81db\",\"parent\":\"f857e306daf819eccfd5c227e071de36bae681f5a3715dedd6e95f6576eabbc9\",\"created\":\"2015-07-14T07:25:08.165432442Z\",\"container\":\"84050a5aa06f16838174ab457bc6e51082f460e130883de537075352e6d5c90f\",\"container_config\":{\"Hostname\":\"b3d34cf85279\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"PortSpecs\":null,\"ExposedPorts\":null,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"],\"Cmd\":[\"/bin/sh\",\"-c\",\"echo 'deb http://neuro.debian.net/debian utopic main' \\u003e /etc/apt/sources.list.d/neurodebian.sources.list\"],\"Image\":\"f857e306daf819eccfd5c227e071de36bae681f5a3715dedd6e95f6576eabbc9\",\"Volumes\":null,\"VolumeDriver\":\"\",\"WorkingDir\":\"\",\"Entrypoint\":null,\"NetworkDisabled\":false,\"MacAddress\":\"\",\"OnBuild\":[],\"Labels\":{}},\"docker_version\":\"1.7.0\",\"config\":{\"Hostname\":\"b3d34cf85279\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"PortSpecs\":null,\"ExposedPorts\":null,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"],\"Cmd\":[\"/bin/bash\"],\"Image\":\"f857e306daf819eccfd5c227e071de36bae681f5a3715dedd6e95f6576eabbc9\",\"Volumes\":null,\"VolumeDriver\":\"\",\"WorkingDir\":\"\",\"Entrypoint\":null,\"NetworkDisabled\":false,\"MacAddress\":\"\",\"OnBuild\":[],\"Labels\":{}},\"architecture\":\"amd64\",\"os\":\"linux\",\"Size\":47}\n"
                },
                {
                    "v1Compatibility": "{\"id\":\"f857e306daf819eccfd5c227e071de36bae681f5a3715dedd6e95f6576eabbc9\",\"parent\":\"e6f223b2ffeada422e90cd6b7a9f61a9d769cd042094b81992aa00190d2af568\",\"created\":\"2015-07-09T19:30:59.927214975Z\",\"container\":\"83e6ec43c084dd875d0bd5d6d1477041071c097a8f6ea3ee7ec0eb06f163b01a\",\"container_config\":{\"Hostname\":\"b3d34cf85279\",\"Domainname\":\"\",\"User\":\"\",\"Memory\":0,\"MemorySwap\":0,\"CpuShares\":0,\"Cpuset\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"PortSpecs\":null,\"ExposedPorts\":null,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":null,\"Cmd\":[\"/bin/sh\",\"-c\",\"#(nop) CMD [\\\"/bin/bash\\\"]\"],\"Image\":\"e6f223b2ffeada422e90cd6b7a9f61a9d769cd042094b81992aa00190d2af568\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"NetworkDisabled\":false,\"MacAddress\":\"\",\"OnBuild\":null,\"Labels\":{}},\"docker_version\":\"1.6.2\",\"config\":{\"Hostname\":\"b3d34cf85279\",\"Domainname\":\"\",\"User\":\"\",\"Memory\":0,\"MemorySwap\":0,\"CpuShares\":0,\"Cpuset\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"PortSpecs\":null,\"ExposedPorts\":null,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":null,\"Cmd\":[\"/bin/bash\"],\"Image\":\"e6f223b2ffeada422e90cd6b7a9f61a9d769cd042094b81992aa00190d2af568\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"NetworkDisabled\":false,\"MacAddress\":\"\",\"OnBuild\":null,\"Labels\":{}},\"architecture\":\"amd64\",\"os\":\"linux\",\"Size\":0}\n"
                },
                {
                    "v1Compatibility": "{\"id\":\"e6f223b2ffeada422e90cd6b7a9f61a9d769cd042094b81992aa00190d2af568\",\"created\":\"2015-07-09T19:30:57.677823413Z\",\"container\":\"b3d34cf852792ede6150fd78bf1431dde81a6de96beb676a3413b31d3aab71d1\",\"container_config\":{\"Hostname\":\"b3d34cf85279\",\"Domainname\":\"\",\"User\":\"\",\"Memory\":0,\"MemorySwap\":0,\"CpuShares\":0,\"Cpuset\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"PortSpecs\":null,\"ExposedPorts\":null,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":null,\"Cmd\":[\"/bin/sh\",\"-c\",\"#(nop) ADD file:9e36de15d9e50069f03e0b41257387c74034bf44fe4bdcec9cc08a2efd1b6d49 in /\"],\"Image\":\"\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"NetworkDisabled\":false,\"MacAddress\":\"\",\"OnBuild\":null,\"Labels\":null},\"docker_version\":\"1.6.2\",\"config\":{\"Hostname\":\"b3d34cf85279\",\"Domainname\":\"\",\"User\":\"\",\"Memory\":0,\"MemorySwap\":0,\"CpuShares\":0,\"Cpuset\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"PortSpecs\":null,\"ExposedPorts\":null,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":null,\"Cmd\":null,\"Image\":\"\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"NetworkDisabled\":false,\"MacAddress\":\"\",\"OnBuild\":null,\"Labels\":null},\"architecture\":\"amd64\",\"os\":\"linux\",\"Size\":125284693}\n"
                }
            ],
            "signatures": [
                {
                    "header": {
                        "jwk": {
                            "crv": "P-256",
                            "kid": "QBC7:ABLC:BTZC:K4H5:BQZE:GCCH:PJAQ:HFPZ:JAJJ:G47Q:FUR6:JFYO",
                            "kty": "EC",
                            "x": "_VbXj1ryQIg8IGdEyjvnO6Prn2Ci9hKjiIJZ8NSCD88",
                            "y": "vLRprWpLIFVObSycx7_sXxpKfC__HOf9bc8sMPyHVJk"
                        },
                        "alg": "ES256"
                    },
                    "signature": "sqS39ySIzt2U7aVIm8vDg5mhdZdolny1ukuGyV6xFARePjmipzSOKXFNdbR6ajVnLDWidFgCrdvCESPvYpZ1DQ",
                    "protected": "eyJmb3JtYXRMZW5ndGgiOjEwNjIwLCJmb3JtYXRUYWlsIjoiQ24wIiwidGltZSI6IjIwMjQtMDUtMzBUMDk6MjQ6MDBaIn0"
                }
            ]
        },
        "nd15.04": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/octet-stream",
                "size": 4103,
                "digest": "sha256:d65b29ecdd8af42782af9bea24e9429df11ce70fa3ede3983cc901236d096cf1"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49333550,
                    "digest": "sha256:9502adfba7f1250b1d7fc248ff95dc34e90cad1b554a3151819f8a33ada37dfb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 758,
                    "digest": "sha256:4332ffb06e4b2a63e6feb5db60fd03c073624e1df32a5dc128bede49f71b3a5e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 679,
                    "digest": "sha256:2f937cc07b5fa0c9dc466c1421227981c80e48fdd944f8e9c215544bbd34bbc0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 213,
                    "digest": "sha256:1e2daf09f40f68a8354eaa5d89a5ccaa632abe8aafb6b25d5f90781ef4f77ab6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 220,
                    "digest": "sha256:1f6ff4ce23586df1aa757ff5f5d3e755595a4c716da85edc7e7eadcef362b603"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 237,
                    "digest": "sha256:64a0965581f2a632cf1530df07f041e383ba01659be326aee34a1bc509fd52ec"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 14782,
                    "digest": "sha256:731dafa37796dda6937235a5458b962de05bbc32767ea9e1fab8de4edabd5e2c"
                }
            ]
        },
        "nd15.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/octet-stream",
                "size": 4422,
                "digest": "sha256:20ca8042c6030c207db0edfe206e742293e9c80eb408dff701c8da5408f4acd2"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 51067308,
                    "digest": "sha256:7dcf5a4443927558c6720517b7996d912d98288d6f565e99195d1b72431a38ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 825,
                    "digest": "sha256:759aa75f3ceee7f3f8ea4b29b012f025d81fc3302145431930511d0f451ed4b9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 510,
                    "digest": "sha256:3fa871dc8a2b6b81da68842fdc09c8aaf22dd455b00eb6f9489b99ef686f503e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 679,
                    "digest": "sha256:224c42ae46e73ea08ec728b621ac89f2dc8741b2b804fdeec8aa6672aff00513"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 214,
                    "digest": "sha256:66520e0df379b3f1b9ae75fb579d19671c28b19262a3b6eb653c13f22a66d193"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 223,
                    "digest": "sha256:3378ac7641c1c395d7d0ed2a2aed220bfece9442711f73ef6ac81e41dddb7b17"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 239,
                    "digest": "sha256:538424179408ef5488f6f9a6e7356e3dfacd9c8574efc230b6b6f160587334a4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 14781,
                    "digest": "sha256:bf1e6736fc2a78d4059e31e27d8766dadd683b0c5e7e00477d18a97cbb2755b5"
                }
            ]
        },
        "nd16.04": {
            "manifests": [
                {
                    "digest": "sha256:d80e83bfcc000dd04b02c778a1297c7ad2540cb555ab96c90ec154c6a4f0f495",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1982
                },
                {
                    "digest": "sha256:05c5cb994c997818d3e7a4cc9a93b4617cca74c5a3137819b0fb0959cf993aa0",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1982
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "nd16.04-non-free": {
            "manifests": [
                {
                    "digest": "sha256:855db2a2543daaf4e085777944831f96ea7a6212d2231da7614dcb717c8a6df4",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 2189
                },
                {
                    "digest": "sha256:91d3db2c58f349a72059c4078aacbdae338ce049cffdfdfe8fc3419f096193a1",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 2189
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "nd16.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5234,
                "digest": "sha256:464c9a319b4390bfcd638cbe38ac22a9b80eaa320cca0770b6ff2979536a50fa"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42786408,
                    "digest": "sha256:dca7be20e546564ad2c985dae3c8b0a259454f5637e98b59a3ca6509432ccd01"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 816,
                    "digest": "sha256:40bca54f5968c2bdb0d8516e6c2ca4d8f181326a06ff6efee8b4f5e1a36826b8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 515,
                    "digest": "sha256:61464f23390e7d30cddfd10a22f27ae6f8f69cc4c1662af2c775f9d657266016"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 854,
                    "digest": "sha256:d99f0bcd5dc8b557254a1a18c6b78866b9bf460ab1bf2c73cc6aca210408dc67"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 163,
                    "digest": "sha256:120db6f90955814bab93a8ca1f19cbcad473fc22833f52f4d29d066135fd10b6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3245713,
                    "digest": "sha256:1e1ad44bb1019a3edf89e414799c4ce30150d132b58f78d764120fc3574b5659"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3136,
                    "digest": "sha256:a4ea9700175395a563bd2d8efcf5d23754ad653d04f150aa9ae4d2321833bf67"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 239,
                    "digest": "sha256:2a450fc47840579d314e866ed30a70eda8bd5ea1d8a054a619b06fa27a68ebb0"
                }
            ]
        },
        "nd17.04": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1983,
                    "digest": "sha256:01209a57ac0f7928655e0ecf0c90b047b69d38b734d89feb568f0ce9e383d2ef",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        },
        "nd17.04-non-free": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2190,
                    "digest": "sha256:36347bb3e59f112be7dedcfa62e3287aef908c8c49d1dbec1b6910303764cc8e",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        },
        "nd17.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1983,
                    "digest": "sha256:88ba4c53760ab23312c41f89918cf39c2483488aac29283761baab2afeb3c05f",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        },
        "nd17.10-non-free": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2190,
                    "digest": "sha256:fb214c724f4f6a1366d367ee7cde0ea121cd7ec53c44c1405c9fe055257efc35",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        },
        "nd18.04": {
            "manifests": [
                {
                    "digest": "sha256:436d0f91b2596d1a67587f416d172e20ea63d2ba9fab4064134e658283be40b6",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:be402681584b912cb441771e9a7e1b039e2da347fe7ebf2d1cd9f3736c2e5b4b",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1365
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "nd18.04-non-free": {
            "manifests": [
                {
                    "digest": "sha256:137b909d0e4c4e1c4300fa4479a22b15c053df24cbbef0f13fce395100eafa77",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1572
                },
                {
                    "digest": "sha256:edc6bddeb118195088c3f1948fdc52cc913d453e5f543927c7c89c015fe7bd6f",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1572
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "nd18.10": {
            "manifests": [
                {
                    "digest": "sha256:9391663bc320c2276d729d4aec31e9da83ad10f02d3edee505f8a977f4340301",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1988
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "nd18.10-non-free": {
            "manifests": [
                {
                    "digest": "sha256:a271e2440f01a2199d4fd82c1ce63094c9a96d0d1b8ade8a23e9d7f450d72b63",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 2195
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "nd19.04": {
            "manifests": [
                {
                    "digest": "sha256:354d7cb6d06efac1caa21c8829b78b0280380c0833b79a0fb80e494dc3c9a079",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1988
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "nd19.04-non-free": {
            "manifests": [
                {
                    "digest": "sha256:4b9defd646ba5948e2926dcb3c53bc7d709642d59766bd2d42db245e84dcf3dc",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 2195
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "nd20.04": {
            "manifests": [
                {
                    "digest": "sha256:8dc902031f95e001e08bb2003cd90e74b166b0ee369d08a7d9af3d6ba763c7c0",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:12d87894dcf40f73f1dc0981a999188ec9339d9647de3f5f467680b92b3d5562",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1365
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "nd20.04-non-free": {
            "manifests": [
                {
                    "digest": "sha256:8421112d66aeaeab568bebf7f45d1b5f5dfb405be757f06da601562e75062641",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1572
                },
                {
                    "digest": "sha256:9f0818c4377b17c028c7a3295c76561c487ffe7d6222d084b6f33dc34019f460",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1572
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "nd20.10": {
            "manifests": [
                {
                    "digest": "sha256:d2b9e74a37481daeea48dbfd068332c52ea2f00409d99ad31a4e6d082813fc8a",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1365
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "nd20.10-non-free": {
            "manifests": [
                {
                    "digest": "sha256:d95358bad76b76036bf12a80a8c9499301201edaf87d22ad42596e6ed7b7e2c1",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1572
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "nd21.04": {
            "manifests": [
                {
                    "digest": "sha256:18ee20fb6921f078c5a6e33d1739b4c6565e15fa9ea9b4cf2796690cab16ba6c",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1365
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "nd21.04-non-free": {
            "manifests": [
                {
                    "digest": "sha256:dbd5106db097147a2b99ff5ac1cf22a7eb13d335e113d01ad62706f51759d56d",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1572
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "nd21.10": {
            "manifests": [
                {
                    "digest": "sha256:db1963ee159e0dca0159562742ad532d2a086a988b9354057ed8d77647b5e0f8",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:e1fc2dc1b64614617f8ce4060fb2907481ab2353c8bf21c3050761a267fbd9d7",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1365
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "nd21.10-non-free": {
            "manifests": [
                {
                    "digest": "sha256:fa54f734923cf3bc814f9ca42375869480681699d414e88acb6e22b84dc40570",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1572
                },
                {
                    "digest": "sha256:d4317d75f7993f1c0989813fb01ddb8c37b2c45f469d348b3f06cf10fb4fc29e",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1572
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "nd22.04": {
            "manifests": [
                {
                    "digest": "sha256:bf7eeaf4b6bc662b083b0e199cd1118e181e59a8aa2966a22f37d3bd4060ae9f",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:26d8036b0a23656e23f5b4ab0b828d220f27307dcf903a5df4719082fe6791e9",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1365
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "nd22.04-non-free": {
            "manifests": [
                {
                    "digest": "sha256:4eea7b43b2760b4a4a0058b1ee28e6e0d05aeff5ddb75200fb0689f01a042d10",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1572
                },
                {
                    "digest": "sha256:2f47da2515fb5083d469ac3e15b8b68e364c2ff6cc8a971c903ad4b9edb503ed",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1572
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "nd60": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/octet-stream",
                "size": 2556,
                "digest": "sha256:5a48f9dcb5bdd71d32ca793c82e9b1107c1350cc3103326b0d192e52b98a8174"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 33843146,
                    "digest": "sha256:069873d23334d65630bbe5e303ced0c68181b694c7f5506b54bf5d8115b5af20"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 214,
                    "digest": "sha256:812227684d9c517d7536ed7f5b3b37fd744e303db086512f192a1223749bc6f9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 224,
                    "digest": "sha256:befd1e7a368cafcc06691f3fd68454def63318bb1e4fd7e830bad9a2e8f4b759"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 239,
                    "digest": "sha256:8d0fc8a10b7e23e37631fb2569f108bc286dbb46823597db9bc41ccb492faece"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 19137,
                    "digest": "sha256:ca57c62385e6595503ba27c25a327cabd19f6788d2f6a1f0f6adcfffd2a7a65d"
                }
            ]
        },
        "nd70": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1151,
                    "digest": "sha256:f3cebb62813878804f1a52573f7addd7f09accf3d51dbb87171c59a5c86752f9",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        },
        "nd70-non-free": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1358,
                    "digest": "sha256:826f73f94c97736cbcc2e2d2296bd84a4499e8e4a0413b42c14e930cd94300a1",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        },
        "nd80": {
            "manifests": [
                {
                    "digest": "sha256:43130141228fa40f0853a3261859d8d8abb2584723529017de96b2e49ee03537",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1361
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "nd80-non-free": {
            "manifests": [
                {
                    "digest": "sha256:7481f92c24adde6bab08a1ad461e3f5e4ca312da887ee06eac972ce77b847900",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1568
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "nd90": {
            "manifests": [
                {
                    "digest": "sha256:ae2bf706fa375d0e16130b167f03121c1f2b80144ea4ec031865e6afb05ad164",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1365
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "nd90-non-free": {
            "manifests": [
                {
                    "digest": "sha256:6bc5be80ea8d26ee56b2f7685c7bac227b09842134a120b6556868e54227be49",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1572
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "non-free": {
            "manifests": [
                {
                    "digest": "sha256:655e9325440d63065fafd8c9b922e043d09cb7d0b64431fca1394a64d51a7932",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1573
                },
                {
                    "digest": "sha256:b5dc492ea2a5426cf9e4057ac513831ba003befb0caeefaf2f3a088617e11f4a",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1573
                },
                {
                    "digest": "sha256:28e3f5f42f6bec1bb12a48c70ed8d596b5094fd8c27f441d2d5f5951a2f87793",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1573
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "precise": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5186,
                "digest": "sha256:87d390deb1011a432b8c501a081146c986bfe8191939e6a7fe0db87505b513e8"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 39096921,
                    "digest": "sha256:d8868e50ac4c7104d2200d42f432b661b2da8c1e417ccfae217e6a1e04bb9295"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 57938,
                    "digest": "sha256:83251ac64627fc331584f6c498b3aba5badc01574e2c70b2499af3af16630eed"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 423,
                    "digest": "sha256:589bba2f1b36ae56f0152c246e2541c5aa604b058febfcf2be32e9a304fec610"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 680,
                    "digest": "sha256:d62ecaceda3964b735cdd2af613d6bb136a52c1da0838b2ff4b4dab4212bcb1c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:6d93b41cfc6bf0d2522b7cf61588de4cd045065b36c52bd3aec2ba0622b2b22b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149,
                    "digest": "sha256:530762c42ebcd9c97f6c9ee741af4c65f8e8f8298509be2e4e927025f3e270f6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3136,
                    "digest": "sha256:cd4f8439eeaefd972b208d3415486662ee3b9b0ebc385cf66ebb4ee5776f390c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 236,
                    "digest": "sha256:0fe339e08ab223f36decd9abbeb9d080f0bf1f1e19fbb0b8b70d2bbfa42c1537"
                }
            ]
        },
        "sid": {
            "manifests": [
                {
                    "digest": "sha256:3a78cf5dde2f6c2b9dbf07c0927b728049813b9bfb859f4ff6af968d24449e33",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1366
                },
                {
                    "digest": "sha256:5351af710581785e6f2098e3fda2a47d25fb0c14f95cd79fc7d70712d30c576e",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1366
                },
                {
                    "digest": "sha256:b6c09f454b40a21e5679f4b27007a526f7773056faaab75167beb2ac6c40e6ec",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1366
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "sid-non-free": {
            "manifests": [
                {
                    "digest": "sha256:4d71fc958f2cf3c973bf5b154026889133623c4fe94e413869c08df7660ae233",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1573
                },
                {
                    "digest": "sha256:a1ee8d1689c95e098753ce53088f14e6e9c3b37cdbdb33ac55da81b428cac8a1",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1573
                },
                {
                    "digest": "sha256:79e4c08633c7453d23e692874e3db387355c0f72937f5db71245997417f895b6",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1573
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "squeeze": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/octet-stream",
                "size": 2556,
                "digest": "sha256:5a48f9dcb5bdd71d32ca793c82e9b1107c1350cc3103326b0d192e52b98a8174"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 33843146,
                    "digest": "sha256:069873d23334d65630bbe5e303ced0c68181b694c7f5506b54bf5d8115b5af20"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 214,
                    "digest": "sha256:812227684d9c517d7536ed7f5b3b37fd744e303db086512f192a1223749bc6f9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 224,
                    "digest": "sha256:befd1e7a368cafcc06691f3fd68454def63318bb1e4fd7e830bad9a2e8f4b759"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 239,
                    "digest": "sha256:8d0fc8a10b7e23e37631fb2569f108bc286dbb46823597db9bc41ccb492faece"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 19137,
                    "digest": "sha256:ca57c62385e6595503ba27c25a327cabd19f6788d2f6a1f0f6adcfffd2a7a65d"
                }
            ]
        },
        "stretch": {
            "manifests": [
                {
                    "digest": "sha256:ae2bf706fa375d0e16130b167f03121c1f2b80144ea4ec031865e6afb05ad164",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1365
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "stretch-non-free": {
            "manifests": [
                {
                    "digest": "sha256:6bc5be80ea8d26ee56b2f7685c7bac227b09842134a120b6556868e54227be49",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1572
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "trusty": {
            "manifests": [
                {
                    "digest": "sha256:7551c1062ab7b8567f2caad9797d2a8555a01b895e8c67f2d18936731d137e63",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1777
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "trusty-non-free": {
            "manifests": [
                {
                    "digest": "sha256:20747ce188a9599ff190d97def9d912f4ea0f8a53d2c0155deff872e5254aa8a",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1984
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "utopic": {
            "schemaVersion": 1,
            "name": "library/neurodebian",
            "tag": "utopic",
            "architecture": "amd64",
            "fsLayers": [
                {
                    "blobSum": "sha256:1e7abbff374b3a83084051a6a1945d11fd29c59d52e933c2d407d0d005510592"
                },
                {
                    "blobSum": "sha256:1b7ea67cdb1ec6914557ed40122bb7225be0b5baa877c050fbd92ff9fed69be6"
                },
                {
                    "blobSum": "sha256:eaeaea4adcb042405d86472394c286da892974d20b8bc2f71b2ab730f6716682"
                },
                {
                    "blobSum": "sha256:be842475e12a458dd2544612a1db9d5ae4d6096e2bf60e8110f376ff0a940975"
                },
                {
                    "blobSum": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                },
                {
                    "blobSum": "sha256:4dbfbf5cb886bdcfbb50b2a0a9557acd0395d3aa53307a1d71f6dc10a8a5767c"
                }
            ],
            "history": [
                {
                    "v1Compatibility": "{\"id\":\"98313bbb010221e5517f9a4881e402b6a522e1f838cf70601df567340d0fdaaa\",\"parent\":\"13b024203ad2f2384479a61dc84cd9ccc11d71bea2794d53392032fe1e28218c\",\"created\":\"2015-07-14T07:25:21.829391811Z\",\"container\":\"e65e9caabbbb0c0b5acb7db62fa715149024fbb9e6c0a80bffde1d71583a86cb\",\"container_config\":{\"Hostname\":\"b3d34cf85279\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"],\"Cmd\":[\"/bin/sh\",\"-c\",\"apt-key adv --recv-keys --keyserver pgp.mit.edu 0xA5D32F012649A5A9\"],\"Image\":\"13b024203ad2f2384479a61dc84cd9ccc11d71bea2794d53392032fe1e28218c\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"OnBuild\":[],\"Labels\":{}},\"docker_version\":\"1.7.0\",\"config\":{\"Hostname\":\"b3d34cf85279\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"],\"Cmd\":[\"/bin/bash\"],\"Image\":\"13b024203ad2f2384479a61dc84cd9ccc11d71bea2794d53392032fe1e28218c\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"OnBuild\":[],\"Labels\":{}},\"architecture\":\"amd64\",\"os\":\"linux\",\"Size\":27883}"
                },
                {
                    "v1Compatibility": "{\"id\":\"13b024203ad2f2384479a61dc84cd9ccc11d71bea2794d53392032fe1e28218c\",\"parent\":\"40199cfb230317b98c751da6a3e98a30f7d09e11b6f279f25ed6167ee5b96eea\",\"created\":\"2015-07-14T07:25:10.388919501Z\",\"container\":\"7cefcbb73bd76e8a856d2d5e84dc62377d493d255516d1779a0835e3047ff2ae\",\"container_config\":{\"Hostname\":\"b3d34cf85279\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"],\"Cmd\":[\"/bin/sh\",\"-c\",\"echo '#deb-src http://neuro.debian.net/debian-devel utopic main' \\u003e\\u003e /etc/apt/sources.list.d/neurodebian.sources.list\"],\"Image\":\"40199cfb230317b98c751da6a3e98a30f7d09e11b6f279f25ed6167ee5b96eea\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"OnBuild\":[],\"Labels\":{}},\"docker_version\":\"1.7.0\",\"config\":{\"Hostname\":\"b3d34cf85279\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"],\"Cmd\":[\"/bin/bash\"],\"Image\":\"40199cfb230317b98c751da6a3e98a30f7d09e11b6f279f25ed6167ee5b96eea\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"OnBuild\":[],\"Labels\":{}},\"architecture\":\"amd64\",\"os\":\"linux\",\"Size\":150}"
                },
                {
                    "v1Compatibility": "{\"id\":\"40199cfb230317b98c751da6a3e98a30f7d09e11b6f279f25ed6167ee5b96eea\",\"parent\":\"752c5740b195fea8b45eafa9590315c654d4e814c84737e10877344fb47c81db\",\"created\":\"2015-07-14T07:25:09.313413503Z\",\"container\":\"a57bde3fa656f47c551b988682fad90ce4272bfa90b8ca538706b49f14b8c385\",\"container_config\":{\"Hostname\":\"b3d34cf85279\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"],\"Cmd\":[\"/bin/sh\",\"-c\",\"echo 'deb http://neuro.debian.net/debian data main' \\u003e\\u003e /etc/apt/sources.list.d/neurodebian.sources.list\"],\"Image\":\"752c5740b195fea8b45eafa9590315c654d4e814c84737e10877344fb47c81db\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"OnBuild\":[],\"Labels\":{}},\"docker_version\":\"1.7.0\",\"config\":{\"Hostname\":\"b3d34cf85279\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"],\"Cmd\":[\"/bin/bash\"],\"Image\":\"752c5740b195fea8b45eafa9590315c654d4e814c84737e10877344fb47c81db\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"OnBuild\":[],\"Labels\":{}},\"architecture\":\"amd64\",\"os\":\"linux\",\"Size\":92}"
                },
                {
                    "v1Compatibility": "{\"id\":\"752c5740b195fea8b45eafa9590315c654d4e814c84737e10877344fb47c81db\",\"parent\":\"f857e306daf819eccfd5c227e071de36bae681f5a3715dedd6e95f6576eabbc9\",\"created\":\"2015-07-14T07:25:08.165432442Z\",\"container\":\"84050a5aa06f16838174ab457bc6e51082f460e130883de537075352e6d5c90f\",\"container_config\":{\"Hostname\":\"b3d34cf85279\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"],\"Cmd\":[\"/bin/sh\",\"-c\",\"echo 'deb http://neuro.debian.net/debian utopic main' \\u003e /etc/apt/sources.list.d/neurodebian.sources.list\"],\"Image\":\"f857e306daf819eccfd5c227e071de36bae681f5a3715dedd6e95f6576eabbc9\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"OnBuild\":[],\"Labels\":{}},\"docker_version\":\"1.7.0\",\"config\":{\"Hostname\":\"b3d34cf85279\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"],\"Cmd\":[\"/bin/bash\"],\"Image\":\"f857e306daf819eccfd5c227e071de36bae681f5a3715dedd6e95f6576eabbc9\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"OnBuild\":[],\"Labels\":{}},\"architecture\":\"amd64\",\"os\":\"linux\",\"Size\":47}"
                },
                {
                    "v1Compatibility": "{\"id\":\"f857e306daf819eccfd5c227e071de36bae681f5a3715dedd6e95f6576eabbc9\",\"parent\":\"e6f223b2ffeada422e90cd6b7a9f61a9d769cd042094b81992aa00190d2af568\",\"created\":\"2015-07-09T19:30:59.927214975Z\",\"container\":\"83e6ec43c084dd875d0bd5d6d1477041071c097a8f6ea3ee7ec0eb06f163b01a\",\"container_config\":{\"Hostname\":\"b3d34cf85279\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":null,\"Cmd\":[\"/bin/sh\",\"-c\",\"#(nop) CMD [\\\"/bin/bash\\\"]\"],\"Image\":\"e6f223b2ffeada422e90cd6b7a9f61a9d769cd042094b81992aa00190d2af568\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"OnBuild\":null,\"Labels\":{}},\"docker_version\":\"1.6.2\",\"config\":{\"Hostname\":\"b3d34cf85279\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":null,\"Cmd\":[\"/bin/bash\"],\"Image\":\"e6f223b2ffeada422e90cd6b7a9f61a9d769cd042094b81992aa00190d2af568\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"OnBuild\":null,\"Labels\":{}},\"architecture\":\"amd64\",\"os\":\"linux\"}"
                },
                {
                    "v1Compatibility": "{\"id\":\"e6f223b2ffeada422e90cd6b7a9f61a9d769cd042094b81992aa00190d2af568\",\"created\":\"2015-07-09T19:30:57.677823413Z\",\"container\":\"b3d34cf852792ede6150fd78bf1431dde81a6de96beb676a3413b31d3aab71d1\",\"container_config\":{\"Hostname\":\"b3d34cf85279\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":null,\"Cmd\":[\"/bin/sh\",\"-c\",\"#(nop) ADD file:9e36de15d9e50069f03e0b41257387c74034bf44fe4bdcec9cc08a2efd1b6d49 in /\"],\"Image\":\"\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"OnBuild\":null,\"Labels\":null},\"docker_version\":\"1.6.2\",\"config\":{\"Hostname\":\"b3d34cf85279\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":null,\"Cmd\":null,\"Image\":\"\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"OnBuild\":null,\"Labels\":null},\"architecture\":\"amd64\",\"os\":\"linux\",\"Size\":125284693}"
                }
            ],
            "signatures": [
                {
                    "header": {
                        "jwk": {
                            "crv": "P-256",
                            "kid": "HBB6:X3ON:HE7L:6IYQ:BINL:5OA3:ITJY:TIBX:7KZO:GCX3:CLQO:U66U",
                            "kty": "EC",
                            "x": "KL3_aFzENA7sL4KRKcjyrc5CKbJt0Sb38Sd3bPdJpdY",
                            "y": "9PTTMZz11haFsLLysjxhrOusmqTnBcRfIDUEQWaiAUw"
                        },
                        "alg": "ES256"
                    },
                    "signature": "p_Fu1HQGlAAcErUDZVn5PSNv7xsfV0esl7cwVb09yB6WP4RySSFw7ID_Q0Yy_BAQNxAZW2ud1nCb8hWuDY53og",
                    "protected": "eyJmb3JtYXRMZW5ndGgiOjkxMjgsImZvcm1hdFRhaWwiOiJDbjAiLCJ0aW1lIjoiMjAyNC0wNS0zMFQwOToyNDozOFoifQ"
                }
            ]
        },
        "vivid": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/octet-stream",
                "size": 4103,
                "digest": "sha256:d65b29ecdd8af42782af9bea24e9429df11ce70fa3ede3983cc901236d096cf1"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49333550,
                    "digest": "sha256:9502adfba7f1250b1d7fc248ff95dc34e90cad1b554a3151819f8a33ada37dfb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 758,
                    "digest": "sha256:4332ffb06e4b2a63e6feb5db60fd03c073624e1df32a5dc128bede49f71b3a5e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 679,
                    "digest": "sha256:2f937cc07b5fa0c9dc466c1421227981c80e48fdd944f8e9c215544bbd34bbc0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 213,
                    "digest": "sha256:1e2daf09f40f68a8354eaa5d89a5ccaa632abe8aafb6b25d5f90781ef4f77ab6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 220,
                    "digest": "sha256:1f6ff4ce23586df1aa757ff5f5d3e755595a4c716da85edc7e7eadcef362b603"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 237,
                    "digest": "sha256:64a0965581f2a632cf1530df07f041e383ba01659be326aee34a1bc509fd52ec"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 14782,
                    "digest": "sha256:731dafa37796dda6937235a5458b962de05bbc32767ea9e1fab8de4edabd5e2c"
                }
            ]
        },
        "wheezy": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1151,
                    "digest": "sha256:f3cebb62813878804f1a52573f7addd7f09accf3d51dbb87171c59a5c86752f9",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        },
        "wheezy-non-free": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1358,
                    "digest": "sha256:826f73f94c97736cbcc2e2d2296bd84a4499e8e4a0413b42c14e930cd94300a1",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        },
        "wily": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/octet-stream",
                "size": 4422,
                "digest": "sha256:20ca8042c6030c207db0edfe206e742293e9c80eb408dff701c8da5408f4acd2"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 51067308,
                    "digest": "sha256:7dcf5a4443927558c6720517b7996d912d98288d6f565e99195d1b72431a38ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 825,
                    "digest": "sha256:759aa75f3ceee7f3f8ea4b29b012f025d81fc3302145431930511d0f451ed4b9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 510,
                    "digest": "sha256:3fa871dc8a2b6b81da68842fdc09c8aaf22dd455b00eb6f9489b99ef686f503e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 679,
                    "digest": "sha256:224c42ae46e73ea08ec728b621ac89f2dc8741b2b804fdeec8aa6672aff00513"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 214,
                    "digest": "sha256:66520e0df379b3f1b9ae75fb579d19671c28b19262a3b6eb653c13f22a66d193"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 223,
                    "digest": "sha256:3378ac7641c1c395d7d0ed2a2aed220bfece9442711f73ef6ac81e41dddb7b17"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 239,
                    "digest": "sha256:538424179408ef5488f6f9a6e7356e3dfacd9c8574efc230b6b6f160587334a4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 14781,
                    "digest": "sha256:bf1e6736fc2a78d4059e31e27d8766dadd683b0c5e7e00477d18a97cbb2755b5"
                }
            ]
        },
        "xenial": {
            "manifests": [
                {
                    "digest": "sha256:d80e83bfcc000dd04b02c778a1297c7ad2540cb555ab96c90ec154c6a4f0f495",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1982
                },
                {
                    "digest": "sha256:05c5cb994c997818d3e7a4cc9a93b4617cca74c5a3137819b0fb0959cf993aa0",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1982
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "xenial-non-free": {
            "manifests": [
                {
                    "digest": "sha256:855db2a2543daaf4e085777944831f96ea7a6212d2231da7614dcb717c8a6df4",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 2189
                },
                {
                    "digest": "sha256:91d3db2c58f349a72059c4078aacbdae338ce049cffdfdfe8fc3419f096193a1",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 2189
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "yakkety": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5234,
                "digest": "sha256:464c9a319b4390bfcd638cbe38ac22a9b80eaa320cca0770b6ff2979536a50fa"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42786408,
                    "digest": "sha256:dca7be20e546564ad2c985dae3c8b0a259454f5637e98b59a3ca6509432ccd01"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 816,
                    "digest": "sha256:40bca54f5968c2bdb0d8516e6c2ca4d8f181326a06ff6efee8b4f5e1a36826b8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 515,
                    "digest": "sha256:61464f23390e7d30cddfd10a22f27ae6f8f69cc4c1662af2c775f9d657266016"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 854,
                    "digest": "sha256:d99f0bcd5dc8b557254a1a18c6b78866b9bf460ab1bf2c73cc6aca210408dc67"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 163,
                    "digest": "sha256:120db6f90955814bab93a8ca1f19cbcad473fc22833f52f4d29d066135fd10b6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3245713,
                    "digest": "sha256:1e1ad44bb1019a3edf89e414799c4ce30150d132b58f78d764120fc3574b5659"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3136,
                    "digest": "sha256:a4ea9700175395a563bd2d8efcf5d23754ad653d04f150aa9ae4d2321833bf67"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 239,
                    "digest": "sha256:2a450fc47840579d314e866ed30a70eda8bd5ea1d8a054a619b06fa27a68ebb0"
                }
            ]
        },
        "zesty": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1983,
                    "digest": "sha256:01209a57ac0f7928655e0ecf0c90b047b69d38b734d89feb568f0ce9e383d2ef",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        },
        "zesty-non-free": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2190,
                    "digest": "sha256:36347bb3e59f112be7dedcfa62e3287aef908c8c49d1dbec1b6910303764cc8e",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        }
    },
    "tags": [
        "artful",
        "artful-non-free",
        "bionic",
        "bionic-non-free",
        "bookworm",
        "bookworm-non-free",
        "bullseye",
        "bullseye-non-free",
        "buster",
        "buster-non-free",
        "cosmic",
        "cosmic-non-free",
        "disco",
        "disco-non-free",
        "focal",
        "focal-non-free",
        "groovy",
        "groovy-non-free",
        "hirsute",
        "hirsute-non-free",
        "impish",
        "impish-non-free",
        "jammy",
        "jammy-non-free",
        "jessie",
        "jessie-non-free",
        "latest",
        "lucid",
        "nd",
        "nd-non-free",
        "nd10.04",
        "nd100",
        "nd100-non-free",
        "nd110",
        "nd110-non-free",
        "nd12.04",
        "nd120",
        "nd120-non-free",
        "nd14.04",
        "nd14.04-non-free",
        "nd14.10",
        "nd15.04",
        "nd15.10",
        "nd16.04",
        "nd16.04-non-free",
        "nd16.10",
        "nd17.04",
        "nd17.04-non-free",
        "nd17.10",
        "nd17.10-non-free",
        "nd18.04",
        "nd18.04-non-free",
        "nd18.10",
        "nd18.10-non-free",
        "nd19.04",
        "nd19.04-non-free",
        "nd20.04",
        "nd20.04-non-free",
        "nd20.10",
        "nd20.10-non-free",
        "nd21.04",
        "nd21.04-non-free",
        "nd21.10",
        "nd21.10-non-free",
        "nd22.04",
        "nd22.04-non-free",
        "nd60",
        "nd70",
        "nd70-non-free",
        "nd80",
        "nd80-non-free",
        "nd90",
        "nd90-non-free",
        "non-free",
        "precise",
        "sid",
        "sid-non-free",
        "squeeze",
        "stretch",
        "stretch-non-free",
        "trusty",
        "trusty-non-free",
        "utopic",
        "vivid",
        "wheezy",
        "wheezy-non-free",
        "wily",
        "xenial",
        "xenial-non-free",
        "yakkety",
        "zesty",
        "zesty-non-free"
    ],
    "configs": {
        "artful": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e4a48d10802d8beb3acdba3ab18a4150fd85a49cefe9a5faf9fa289d21e3f813",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "cbb6d6716361af0119c4e4c77ae3ea2fd679b25c5c99b9144dc86555cf2a8627",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "{ \techo 'deb http://neuro.debian.net/debian artful main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel artful main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e4a48d10802d8beb3acdba3ab18a4150fd85a49cefe9a5faf9fa289d21e3f813",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "created": "2018-09-05T00:44:25.846445484Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-05T00:44:22.34936838Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& { \t\twhich gpg \t\t|| apt-get install -y --no-install-recommends gnupg \t; } \t&& { \t\tgpg --version | grep -q '^gpg (GnuPG) 1\\.' \t\t|| apt-get install -y --no-install-recommends dirmngr \t; } \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-09-05T00:44:25.051174821Z",
                    "created_by": "/bin/sh -c set -x \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --keyserver ha.pool.sks-keyservers.net --recv-keys DD95CC430502E37EF840ACEEA5D32F012649A5A9 \t&& gpg --export DD95CC430502E37EF840ACEEA5D32F012649A5A9 > /etc/apt/trusted.gpg.d/neurodebian.gpg \t&& rm -rf \"$GNUPGHOME\" \t&& apt-key list | grep neurodebian"
                },
                {
                    "created": "2018-09-05T00:44:25.846445484Z",
                    "created_by": "/bin/sh -c { \techo 'deb http://neuro.debian.net/debian artful main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel artful main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:65b95a7b6358ca4b313989d98c4ee20669b4ae7333728b86ce1c49275013af5f",
                    "sha256:6b3b9644bf5b42e2c38d94646b88df091db3dcf8d2529f45f570708f5c0f0322",
                    "sha256:119bcf5124d6cd1c5c36730a7081ecd64a2b59a83e197c1a5a27fc90a102f348"
                ]
            }
        },
        "artful-non-free": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e5dc42008de5385a83530a80b28e75987a111a6bcf918735c97d886d8a5aee9d",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "5361c22ca0b7b16dc438846baf8a85116a3fbbdc05d94c08682036094e57d704",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "sed -i -e 's,main *$,main contrib non-free,g' /etc/apt/sources.list.d/neurodebian.sources.list; grep -q 'deb .* multiverse$' /etc/apt/sources.list || sed -i -e 's,universe *$,universe multiverse,g' /etc/apt/sources.list"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e5dc42008de5385a83530a80b28e75987a111a6bcf918735c97d886d8a5aee9d",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "created": "2018-09-05T00:44:31.954132074Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-05T00:44:22.34936838Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& { \t\twhich gpg \t\t|| apt-get install -y --no-install-recommends gnupg \t; } \t&& { \t\tgpg --version | grep -q '^gpg (GnuPG) 1\\.' \t\t|| apt-get install -y --no-install-recommends dirmngr \t; } \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-09-05T00:44:25.051174821Z",
                    "created_by": "/bin/sh -c set -x \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --keyserver ha.pool.sks-keyservers.net --recv-keys DD95CC430502E37EF840ACEEA5D32F012649A5A9 \t&& gpg --export DD95CC430502E37EF840ACEEA5D32F012649A5A9 > /etc/apt/trusted.gpg.d/neurodebian.gpg \t&& rm -rf \"$GNUPGHOME\" \t&& apt-key list | grep neurodebian"
                },
                {
                    "created": "2018-09-05T00:44:25.846445484Z",
                    "created_by": "/bin/sh -c { \techo 'deb http://neuro.debian.net/debian artful main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel artful main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2018-09-05T00:44:31.954132074Z",
                    "created_by": "/bin/sh -c sed -i -e 's,main *$,main contrib non-free,g' /etc/apt/sources.list.d/neurodebian.sources.list; grep -q 'deb .* multiverse$' /etc/apt/sources.list || sed -i -e 's,universe *$,universe multiverse,g' /etc/apt/sources.list"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:65b95a7b6358ca4b313989d98c4ee20669b4ae7333728b86ce1c49275013af5f",
                    "sha256:6b3b9644bf5b42e2c38d94646b88df091db3dcf8d2529f45f570708f5c0f0322",
                    "sha256:119bcf5124d6cd1c5c36730a7081ecd64a2b59a83e197c1a5a27fc90a102f348",
                    "sha256:8baea1b938515353e956a52ee0a1f6682bdec8ea39205632c9c74926e13929c2"
                ]
            }
        },
        "bionic": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:51c4887ae02cf4ee945b95d9c6202dddc411f0718b67d22d57e82dd13ef2e647",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "18.04"
                }
            },
            "container": "d16272a83caf01941e7b0e23eddddd25c0d861bbdadfbcacc930dd591803ad56",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                ],
                "Image": "sha256:51c4887ae02cf4ee945b95d9c6202dddc411f0718b67d22d57e82dd13ef2e647",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "18.04"
                }
            },
            "created": "2023-06-02T01:34:48.844126076Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2023-05-30T09:32:07.458866408Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:32:07.512060632Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:32:07.566627883Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:32:07.623484379Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=18.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:32:09.125568601Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3c74e7e08cbf9a87694ce6fa541af617599680fa54d9e48556fc0fbc120b4a83 in / "
                },
                {
                    "created": "2023-05-30T09:32:09.432301537Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-02T01:34:41.27771239Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& { \t\twhich gpg \t\t|| apt-get install -y --no-install-recommends gnupg \t; } \t&& { \t\tgpg --version | grep -q '^gpg (GnuPG) 1\\.' \t\t|| apt-get install -y --no-install-recommends dirmngr \t; } \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-06-02T01:34:42.668744757Z",
                    "created_by": "/bin/sh -c set -x \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver keyserver.ubuntu.com --recv-keys DD95CC430502E37EF840ACEEA5D32F012649A5A9 \t&& gpg --batch --export DD95CC430502E37EF840ACEEA5D32F012649A5A9 > /etc/apt/trusted.gpg.d/neurodebian.gpg \t&& rm -rf \"$GNUPGHOME\" \t&& apt-key list | grep neurodebian"
                },
                {
                    "created": "2023-06-02T01:34:43.201499415Z",
                    "created_by": "/bin/sh -c { \techo 'deb http://neuro.debian.net/debian bionic main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel bionic main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2023-06-02T01:34:48.844126076Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:548a79621a426b4eb077c926eabac5a8620c454fb230640253e1b44dc7dd7562",
                    "sha256:89e2f57b4381e9ff21ac4d2a622645878165f2108e8f8af3734082d1990e41f1",
                    "sha256:671f176caef7945cef018429769d2b65802152a7bc04b2b881d18f6baa7a6465",
                    "sha256:2a46a22d9a80a7143520523ac360c2b651f662de422c6e1b56dfe97ed9deed0a",
                    "sha256:887dc6727de650caf2958a21b19db28be0bef6e673e9e6050edbad325ba21008"
                ]
            }
        },
        "bionic-non-free": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:e54202678ffa323cabbfa7d9142d688755ff6767f3a44607c1eb821edd05ac91",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "18.04"
                }
            },
            "container": "69e79eecd1752aa45568c314fa6e9caeb02d16ca25c367b9c1a148a869bd4358",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "[ -e /etc/apt/sources.list.d/debian.sources ] && srcs=/etc/apt/sources.list.d/debian.sources || srcs=/etc/apt/sources.list; sed -i -e 's,main *$,main contrib non-free,g' /etc/apt/sources.list.d/neurodebian.sources.list; grep -q 'deb .* multiverse$' $srcs || sed -i -e 's,universe *$,universe multiverse,g' $srcs"
                ],
                "Image": "sha256:e54202678ffa323cabbfa7d9142d688755ff6767f3a44607c1eb821edd05ac91",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "18.04"
                }
            },
            "created": "2023-06-02T01:34:53.174851857Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2023-05-30T09:32:07.458866408Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:32:07.512060632Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:32:07.566627883Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:32:07.623484379Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=18.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:32:09.125568601Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3c74e7e08cbf9a87694ce6fa541af617599680fa54d9e48556fc0fbc120b4a83 in / "
                },
                {
                    "created": "2023-05-30T09:32:09.432301537Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-02T01:34:41.27771239Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& { \t\twhich gpg \t\t|| apt-get install -y --no-install-recommends gnupg \t; } \t&& { \t\tgpg --version | grep -q '^gpg (GnuPG) 1\\.' \t\t|| apt-get install -y --no-install-recommends dirmngr \t; } \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-06-02T01:34:42.668744757Z",
                    "created_by": "/bin/sh -c set -x \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver keyserver.ubuntu.com --recv-keys DD95CC430502E37EF840ACEEA5D32F012649A5A9 \t&& gpg --batch --export DD95CC430502E37EF840ACEEA5D32F012649A5A9 > /etc/apt/trusted.gpg.d/neurodebian.gpg \t&& rm -rf \"$GNUPGHOME\" \t&& apt-key list | grep neurodebian"
                },
                {
                    "created": "2023-06-02T01:34:43.201499415Z",
                    "created_by": "/bin/sh -c { \techo 'deb http://neuro.debian.net/debian bionic main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel bionic main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2023-06-02T01:34:48.844126076Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-06-02T01:34:53.174851857Z",
                    "created_by": "/bin/sh -c [ -e /etc/apt/sources.list.d/debian.sources ] && srcs=/etc/apt/sources.list.d/debian.sources || srcs=/etc/apt/sources.list; sed -i -e 's,main *$,main contrib non-free,g' /etc/apt/sources.list.d/neurodebian.sources.list; grep -q 'deb .* multiverse$' $srcs || sed -i -e 's,universe *$,universe multiverse,g' $srcs"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:548a79621a426b4eb077c926eabac5a8620c454fb230640253e1b44dc7dd7562",
                    "sha256:89e2f57b4381e9ff21ac4d2a622645878165f2108e8f8af3734082d1990e41f1",
                    "sha256:671f176caef7945cef018429769d2b65802152a7bc04b2b881d18f6baa7a6465",
                    "sha256:2a46a22d9a80a7143520523ac360c2b651f662de422c6e1b56dfe97ed9deed0a",
                    "sha256:887dc6727de650caf2958a21b19db28be0bef6e673e9e6050edbad325ba21008",
                    "sha256:452332fe10a25c1d226fab3df5f8fed0e4d4b71ae0e7ab4586a055f567ca2426"
                ]
            }
        },
        "bookworm": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:cd0727205ca15fce4808df0e08ef1c83cfda4ac1231d31b8478f3e92e69179a8",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "6de7490cd1206031ed0464a9422fae14ec1f9a030b9bb0214be9cce0a579cd73",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                ],
                "Image": "sha256:cd0727205ca15fce4808df0e08ef1c83cfda4ac1231d31b8478f3e92e69179a8",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2024-05-14T14:46:36.998325455Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-05-14T01:27:51.0519485Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b9a9fc37b874060c713002ae1ac220f097edd7c6576116c22bb15aad8229b1b3 in / "
                },
                {
                    "created": "2024-05-14T01:27:51.549080671Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:46:31.39395992Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& { \t\twhich gpg \t\t|| apt-get install -y --no-install-recommends gnupg \t; } \t&& { \t\tgpg --version | grep -q '^gpg (GnuPG) 1\\.' \t\t|| apt-get install -y --no-install-recommends dirmngr \t; } \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:46:32.759018056Z",
                    "created_by": "/bin/sh -c set -x \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver keyserver.ubuntu.com --recv-keys DD95CC430502E37EF840ACEEA5D32F012649A5A9 \t&& gpg --batch --export DD95CC430502E37EF840ACEEA5D32F012649A5A9 > /etc/apt/trusted.gpg.d/neurodebian.gpg \t&& rm -rf \"$GNUPGHOME\" \t&& apt-key list | grep neurodebian"
                },
                {
                    "created": "2024-05-14T14:46:33.310352466Z",
                    "created_by": "/bin/sh -c { \techo 'deb http://neuro.debian.net/debian bookworm main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel bookworm main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2024-05-14T14:46:36.998325455Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:bbe1a212f7e9f1baaef62491a51254f3adda514c22632ea719f62713fad80f77",
                    "sha256:dca0920997fe8182adb7b67989467bb7635d8fdc7fa11ec0015b14eaa1d94a8c",
                    "sha256:960a25f0a3b150d1263e3c652024a198ff5fee81ef6e41015848a43a88376315",
                    "sha256:2d1d5068558c1b4709c0a6a2a77bf71d0441022c3d1b2c2ce02fa462f57e43d9",
                    "sha256:597de530480527209bd968bd84359daa2343f1242193ba405a64020b94416d07"
                ]
            }
        },
        "bookworm-non-free": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:7e8f567a8a10077ad6fa82626a7c70eab299a6bf62815f5cb1942e5095432a74",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "c105a5ff3dc1722ae96fdec4567f3d1df08432dca55719b1434de06d359ff03b",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "[ -e /etc/apt/sources.list.d/debian.sources ] && srcs=/etc/apt/sources.list.d/debian.sources || srcs=/etc/apt/sources.list; sed -i -e 's,main *$,main contrib non-free,g' /etc/apt/sources.list.d/neurodebian.sources.list $srcs"
                ],
                "Image": "sha256:7e8f567a8a10077ad6fa82626a7c70eab299a6bf62815f5cb1942e5095432a74",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2024-05-14T14:46:42.703411899Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-05-14T01:27:51.0519485Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b9a9fc37b874060c713002ae1ac220f097edd7c6576116c22bb15aad8229b1b3 in / "
                },
                {
                    "created": "2024-05-14T01:27:51.549080671Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:46:31.39395992Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& { \t\twhich gpg \t\t|| apt-get install -y --no-install-recommends gnupg \t; } \t&& { \t\tgpg --version | grep -q '^gpg (GnuPG) 1\\.' \t\t|| apt-get install -y --no-install-recommends dirmngr \t; } \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:46:32.759018056Z",
                    "created_by": "/bin/sh -c set -x \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver keyserver.ubuntu.com --recv-keys DD95CC430502E37EF840ACEEA5D32F012649A5A9 \t&& gpg --batch --export DD95CC430502E37EF840ACEEA5D32F012649A5A9 > /etc/apt/trusted.gpg.d/neurodebian.gpg \t&& rm -rf \"$GNUPGHOME\" \t&& apt-key list | grep neurodebian"
                },
                {
                    "created": "2024-05-14T14:46:33.310352466Z",
                    "created_by": "/bin/sh -c { \techo 'deb http://neuro.debian.net/debian bookworm main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel bookworm main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2024-05-14T14:46:36.998325455Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:46:42.703411899Z",
                    "created_by": "/bin/sh -c [ -e /etc/apt/sources.list.d/debian.sources ] && srcs=/etc/apt/sources.list.d/debian.sources || srcs=/etc/apt/sources.list; sed -i -e 's,main *$,main contrib non-free,g' /etc/apt/sources.list.d/neurodebian.sources.list $srcs"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:bbe1a212f7e9f1baaef62491a51254f3adda514c22632ea719f62713fad80f77",
                    "sha256:dca0920997fe8182adb7b67989467bb7635d8fdc7fa11ec0015b14eaa1d94a8c",
                    "sha256:960a25f0a3b150d1263e3c652024a198ff5fee81ef6e41015848a43a88376315",
                    "sha256:2d1d5068558c1b4709c0a6a2a77bf71d0441022c3d1b2c2ce02fa462f57e43d9",
                    "sha256:597de530480527209bd968bd84359daa2343f1242193ba405a64020b94416d07",
                    "sha256:1e98e7b2ad11ce7a72b546cf461ba317f15662d78e63e253e2f51865f73cfd4d"
                ]
            }
        },
        "bullseye": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:8e42b8164e913688129e0d15a72673b18311be8a33e2c745f93d229e93008c19",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "c7a28c86f3581fc765722bd2a94eb6fd7515b1167e7b7689617664b69ee8aa50",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                ],
                "Image": "sha256:8e42b8164e913688129e0d15a72673b18311be8a33e2c745f93d229e93008c19",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2024-05-14T14:46:18.273124259Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-05-14T01:28:14.312373541Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fc7856fc1fcc8bba68d0c729e34f64f4f113195167d677167a52eaa2c9760a19 in / "
                },
                {
                    "created": "2024-05-14T01:28:14.866817241Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:46:12.879288279Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& { \t\twhich gpg \t\t|| apt-get install -y --no-install-recommends gnupg \t; } \t&& { \t\tgpg --version | grep -q '^gpg (GnuPG) 1\\.' \t\t|| apt-get install -y --no-install-recommends dirmngr \t; } \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:46:14.217405495Z",
                    "created_by": "/bin/sh -c set -x \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver keyserver.ubuntu.com --recv-keys DD95CC430502E37EF840ACEEA5D32F012649A5A9 \t&& gpg --batch --export DD95CC430502E37EF840ACEEA5D32F012649A5A9 > /etc/apt/trusted.gpg.d/neurodebian.gpg \t&& rm -rf \"$GNUPGHOME\" \t&& apt-key list | grep neurodebian"
                },
                {
                    "created": "2024-05-14T14:46:14.750593926Z",
                    "created_by": "/bin/sh -c { \techo 'deb http://neuro.debian.net/debian bullseye main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel bullseye main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2024-05-14T14:46:18.273124259Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:82677505c894548130a3c97e95faa57399f02ea2fb97667d934fd6b807ea7108",
                    "sha256:92463cdfea38436ffa53d8e79afedc9ab601c5f60c4c37846ef716404944c143",
                    "sha256:5bd6218eda44b23193a6be0ad9dd4539d8489e504f1e08239fd9ef91b8113bf5",
                    "sha256:84f8961e41faeb9569029300f0e6f08e9af44dac880fd557c410fb1e7d84118b",
                    "sha256:3989ddc6d2850cd471ac9776b5456a270b2de77000b3f561d4a52d0065f7fb40"
                ]
            }
        },
        "bullseye-non-free": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:60d48442c482e88767dccfa96815d04b4e0d26a56ddc0ecf5a564d40321da00a",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "c2f9ca74098e6ae6ccb6d6f744e1e0c8a8600424711bbc81e78a6fb69d25b593",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "[ -e /etc/apt/sources.list.d/debian.sources ] && srcs=/etc/apt/sources.list.d/debian.sources || srcs=/etc/apt/sources.list; sed -i -e 's,main *$,main contrib non-free,g' /etc/apt/sources.list.d/neurodebian.sources.list $srcs"
                ],
                "Image": "sha256:60d48442c482e88767dccfa96815d04b4e0d26a56ddc0ecf5a564d40321da00a",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2024-05-14T14:46:21.79886586Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-05-14T01:28:14.312373541Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fc7856fc1fcc8bba68d0c729e34f64f4f113195167d677167a52eaa2c9760a19 in / "
                },
                {
                    "created": "2024-05-14T01:28:14.866817241Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:46:12.879288279Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& { \t\twhich gpg \t\t|| apt-get install -y --no-install-recommends gnupg \t; } \t&& { \t\tgpg --version | grep -q '^gpg (GnuPG) 1\\.' \t\t|| apt-get install -y --no-install-recommends dirmngr \t; } \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:46:14.217405495Z",
                    "created_by": "/bin/sh -c set -x \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver keyserver.ubuntu.com --recv-keys DD95CC430502E37EF840ACEEA5D32F012649A5A9 \t&& gpg --batch --export DD95CC430502E37EF840ACEEA5D32F012649A5A9 > /etc/apt/trusted.gpg.d/neurodebian.gpg \t&& rm -rf \"$GNUPGHOME\" \t&& apt-key list | grep neurodebian"
                },
                {
                    "created": "2024-05-14T14:46:14.750593926Z",
                    "created_by": "/bin/sh -c { \techo 'deb http://neuro.debian.net/debian bullseye main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel bullseye main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2024-05-14T14:46:18.273124259Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:46:21.79886586Z",
                    "created_by": "/bin/sh -c [ -e /etc/apt/sources.list.d/debian.sources ] && srcs=/etc/apt/sources.list.d/debian.sources || srcs=/etc/apt/sources.list; sed -i -e 's,main *$,main contrib non-free,g' /etc/apt/sources.list.d/neurodebian.sources.list $srcs"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:82677505c894548130a3c97e95faa57399f02ea2fb97667d934fd6b807ea7108",
                    "sha256:92463cdfea38436ffa53d8e79afedc9ab601c5f60c4c37846ef716404944c143",
                    "sha256:5bd6218eda44b23193a6be0ad9dd4539d8489e504f1e08239fd9ef91b8113bf5",
                    "sha256:84f8961e41faeb9569029300f0e6f08e9af44dac880fd557c410fb1e7d84118b",
                    "sha256:3989ddc6d2850cd471ac9776b5456a270b2de77000b3f561d4a52d0065f7fb40",
                    "sha256:66e8c4570ac65434cbdab01ae1da280704299f261269eb2d4ee1a10489fd5dd1"
                ]
            }
        },
        "buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:b135cac556b55e5a895302755edc9cec2ee8d99b5c14c836a87bac9d9c65f0e1",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "df6f0ca8476f6d35d5cd8017f493f9d98db1091312a2414fe6478b19507f5045",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                ],
                "Image": "sha256:b135cac556b55e5a895302755edc9cec2ee8d99b5c14c836a87bac9d9c65f0e1",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2024-05-14T14:45:59.403424624Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-05-14T01:28:36.892090407Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9062f3516bb9d149bc29e8f3ee94806152277d05a3f2ee0ba7bc2040d8bfc8d5 in / "
                },
                {
                    "created": "2024-05-14T01:28:37.468933512Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:45:53.309945819Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& { \t\twhich gpg \t\t|| apt-get install -y --no-install-recommends gnupg \t; } \t&& { \t\tgpg --version | grep -q '^gpg (GnuPG) 1\\.' \t\t|| apt-get install -y --no-install-recommends dirmngr \t; } \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:45:54.847438153Z",
                    "created_by": "/bin/sh -c set -x \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver keyserver.ubuntu.com --recv-keys DD95CC430502E37EF840ACEEA5D32F012649A5A9 \t&& gpg --batch --export DD95CC430502E37EF840ACEEA5D32F012649A5A9 > /etc/apt/trusted.gpg.d/neurodebian.gpg \t&& rm -rf \"$GNUPGHOME\" \t&& apt-key list | grep neurodebian"
                },
                {
                    "created": "2024-05-14T14:45:55.356689013Z",
                    "created_by": "/bin/sh -c { \techo 'deb http://neuro.debian.net/debian buster main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel buster main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2024-05-14T14:45:59.403424624Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:77dd7e63360b147459cfb0109ad62a5198b7abb9a98a7b68331f18cbf2e2f1d7",
                    "sha256:71203de29d25b737a6ecea8e4a39c235ad66bbf71a149aab25ed7f976ba96ce4",
                    "sha256:3b8a4ef15cdf7b24e32dfdcff86b84e35c2e70ea8c0866d4ef3c3e7ca0d9345a",
                    "sha256:0121012adda85e9a5bd1466aef3825c1b784b23d4a0af78fad5022276d68f61b",
                    "sha256:0c43b00b17bc10c854d70a3e1227431b0c3b3c1f49e7d3eaf6d725165d78ab28"
                ]
            }
        },
        "buster-non-free": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:fa417480e7b21a1a49f1f030297812d63c2b05b50d2d36c465447444af6c742e",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "828b7cb1e7668ff7055f6c641f4c62a1640701b825f499dc1f07033e0bc678a5",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "[ -e /etc/apt/sources.list.d/debian.sources ] && srcs=/etc/apt/sources.list.d/debian.sources || srcs=/etc/apt/sources.list; sed -i -e 's,main *$,main contrib non-free,g' /etc/apt/sources.list.d/neurodebian.sources.list $srcs"
                ],
                "Image": "sha256:fa417480e7b21a1a49f1f030297812d63c2b05b50d2d36c465447444af6c742e",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2024-05-14T14:46:03.776997214Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-05-14T01:28:36.892090407Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9062f3516bb9d149bc29e8f3ee94806152277d05a3f2ee0ba7bc2040d8bfc8d5 in / "
                },
                {
                    "created": "2024-05-14T01:28:37.468933512Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:45:53.309945819Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& { \t\twhich gpg \t\t|| apt-get install -y --no-install-recommends gnupg \t; } \t&& { \t\tgpg --version | grep -q '^gpg (GnuPG) 1\\.' \t\t|| apt-get install -y --no-install-recommends dirmngr \t; } \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:45:54.847438153Z",
                    "created_by": "/bin/sh -c set -x \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver keyserver.ubuntu.com --recv-keys DD95CC430502E37EF840ACEEA5D32F012649A5A9 \t&& gpg --batch --export DD95CC430502E37EF840ACEEA5D32F012649A5A9 > /etc/apt/trusted.gpg.d/neurodebian.gpg \t&& rm -rf \"$GNUPGHOME\" \t&& apt-key list | grep neurodebian"
                },
                {
                    "created": "2024-05-14T14:45:55.356689013Z",
                    "created_by": "/bin/sh -c { \techo 'deb http://neuro.debian.net/debian buster main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel buster main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2024-05-14T14:45:59.403424624Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:46:03.776997214Z",
                    "created_by": "/bin/sh -c [ -e /etc/apt/sources.list.d/debian.sources ] && srcs=/etc/apt/sources.list.d/debian.sources || srcs=/etc/apt/sources.list; sed -i -e 's,main *$,main contrib non-free,g' /etc/apt/sources.list.d/neurodebian.sources.list $srcs"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:77dd7e63360b147459cfb0109ad62a5198b7abb9a98a7b68331f18cbf2e2f1d7",
                    "sha256:71203de29d25b737a6ecea8e4a39c235ad66bbf71a149aab25ed7f976ba96ce4",
                    "sha256:3b8a4ef15cdf7b24e32dfdcff86b84e35c2e70ea8c0866d4ef3c3e7ca0d9345a",
                    "sha256:0121012adda85e9a5bd1466aef3825c1b784b23d4a0af78fad5022276d68f61b",
                    "sha256:0c43b00b17bc10c854d70a3e1227431b0c3b3c1f49e7d3eaf6d725165d78ab28",
                    "sha256:e569dce9b29f1dddcba5923f4bd6c924861d9ae9f21d9d5f220e648427f9a44a"
                ]
            }
        },
        "cosmic": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:45bdaec17db0ea174020380bc89457c328c4130f69d2aa6be345a3debf9ef506",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "9e182aed124acbbe05b09b64c31a3aa9b3954e5669b9d78dc14154f2fff26b92",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:45bdaec17db0ea174020380bc89457c328c4130f69d2aa6be345a3debf9ef506",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2019-07-23T15:44:28.079312032Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-07-23T15:21:30.934008049Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:13804c7325ebaad3133476c32ab4fa9676abc0550ebc6fb555283ddee2bfe24a in / "
                },
                {
                    "created": "2019-07-23T15:21:31.722791296Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2019-07-23T15:21:32.400166669Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-07-23T15:21:33.118640352Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-07-23T15:21:33.295626375Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-23T15:44:21.793768824Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& { \t\twhich gpg \t\t|| apt-get install -y --no-install-recommends gnupg \t; } \t&& { \t\tgpg --version | grep -q '^gpg (GnuPG) 1\\.' \t\t|| apt-get install -y --no-install-recommends dirmngr \t; } \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-07-23T15:44:22.699355858Z",
                    "created_by": "/bin/sh -c set -x \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys DD95CC430502E37EF840ACEEA5D32F012649A5A9 \t&& gpg --batch --export DD95CC430502E37EF840ACEEA5D32F012649A5A9 > /etc/apt/trusted.gpg.d/neurodebian.gpg \t&& rm -rf \"$GNUPGHOME\" \t&& apt-key list | grep neurodebian"
                },
                {
                    "created": "2019-07-23T15:44:23.402624906Z",
                    "created_by": "/bin/sh -c { \techo 'deb http://neuro.debian.net/debian cosmic main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel cosmic main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2019-07-23T15:44:28.079312032Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d33f208862dd35ea0d843ea338eedf2b5504220e0bc9aa2275a86f97241b2d9b",
                    "sha256:7027b2a028fc02466d63aefcca83a1f7e457dcd7c8be434c1d9933c17633e3bc",
                    "sha256:2181ca10496e8fcdb10a2ff5fe0af0e6f4616beecce178f6fd6b499a14083e1a",
                    "sha256:e338c474bd3b9f2dd78c2970dfe0a3b5f7df11886fccb02579911bfa5c0e8823",
                    "sha256:aa7f15869ab822600c77bf978a95f1966ac2ee59a66ef328cb33bfeba8ff48d7",
                    "sha256:f8fc4420f7a5aa99e0768cac423124231d1cbfc9ed562fadc1a19726954a2fcb",
                    "sha256:79c9838fddab8bc9b0a9d489f320928112082c9332e3673df755bd516a28e6e0",
                    "sha256:78b45069d54fc9bc2345edbd9212a5dfd7bab85f82eecda67fc6d53596cde6d9"
                ]
            }
        },
        "cosmic-non-free": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:fedcb35153f4b46c5007deddc745d6c8103e4bcaafd9c2b239dbf6ea81be0755",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "90ded0e36bbad16f1ebab3a787f4b4ba7ad2447cf9273d7896d59ba1ccad1572",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "sed -i -e 's,main *$,main contrib non-free,g' /etc/apt/sources.list.d/neurodebian.sources.list; grep -q 'deb .* multiverse$' /etc/apt/sources.list || sed -i -e 's,universe *$,universe multiverse,g' /etc/apt/sources.list"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:fedcb35153f4b46c5007deddc745d6c8103e4bcaafd9c2b239dbf6ea81be0755",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2019-07-23T15:44:32.642696453Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-07-23T15:21:30.934008049Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:13804c7325ebaad3133476c32ab4fa9676abc0550ebc6fb555283ddee2bfe24a in / "
                },
                {
                    "created": "2019-07-23T15:21:31.722791296Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2019-07-23T15:21:32.400166669Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-07-23T15:21:33.118640352Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-07-23T15:21:33.295626375Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-23T15:44:21.793768824Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& { \t\twhich gpg \t\t|| apt-get install -y --no-install-recommends gnupg \t; } \t&& { \t\tgpg --version | grep -q '^gpg (GnuPG) 1\\.' \t\t|| apt-get install -y --no-install-recommends dirmngr \t; } \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-07-23T15:44:22.699355858Z",
                    "created_by": "/bin/sh -c set -x \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys DD95CC430502E37EF840ACEEA5D32F012649A5A9 \t&& gpg --batch --export DD95CC430502E37EF840ACEEA5D32F012649A5A9 > /etc/apt/trusted.gpg.d/neurodebian.gpg \t&& rm -rf \"$GNUPGHOME\" \t&& apt-key list | grep neurodebian"
                },
                {
                    "created": "2019-07-23T15:44:23.402624906Z",
                    "created_by": "/bin/sh -c { \techo 'deb http://neuro.debian.net/debian cosmic main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel cosmic main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2019-07-23T15:44:28.079312032Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-07-23T15:44:32.642696453Z",
                    "created_by": "/bin/sh -c sed -i -e 's,main *$,main contrib non-free,g' /etc/apt/sources.list.d/neurodebian.sources.list; grep -q 'deb .* multiverse$' /etc/apt/sources.list || sed -i -e 's,universe *$,universe multiverse,g' /etc/apt/sources.list"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d33f208862dd35ea0d843ea338eedf2b5504220e0bc9aa2275a86f97241b2d9b",
                    "sha256:7027b2a028fc02466d63aefcca83a1f7e457dcd7c8be434c1d9933c17633e3bc",
                    "sha256:2181ca10496e8fcdb10a2ff5fe0af0e6f4616beecce178f6fd6b499a14083e1a",
                    "sha256:e338c474bd3b9f2dd78c2970dfe0a3b5f7df11886fccb02579911bfa5c0e8823",
                    "sha256:aa7f15869ab822600c77bf978a95f1966ac2ee59a66ef328cb33bfeba8ff48d7",
                    "sha256:f8fc4420f7a5aa99e0768cac423124231d1cbfc9ed562fadc1a19726954a2fcb",
                    "sha256:79c9838fddab8bc9b0a9d489f320928112082c9332e3673df755bd516a28e6e0",
                    "sha256:78b45069d54fc9bc2345edbd9212a5dfd7bab85f82eecda67fc6d53596cde6d9",
                    "sha256:ffb60c5185988dff339ba71c9dc3265f228ff8a4555a509437ea035ae766aa0c"
                ]
            }
        },
        "disco": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:05da62c21eb0b4511e52fbcb441b0a5cad83a38f303cbcc5db76f75ff86789ff",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "70e261ada56b5065c143ed45d608d964b3e6ecb30dace91cae259b52a94e7f79",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:05da62c21eb0b4511e52fbcb441b0a5cad83a38f303cbcc5db76f75ff86789ff",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2020-01-16T02:50:49.011752592Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2020-01-16T01:20:44.575307418Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:98c7df2bed4738dded17ef3fc4dd8f3b1e1d1d742a0245c9f1e518daea8e445e in / "
                },
                {
                    "created": "2020-01-16T01:20:45.383335345Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-01-16T01:20:46.068449313Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-01-16T01:20:46.764713103Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-01-16T01:20:46.938732934Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-16T02:50:42.518311847Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& { \t\twhich gpg \t\t|| apt-get install -y --no-install-recommends gnupg \t; } \t&& { \t\tgpg --version | grep -q '^gpg (GnuPG) 1\\.' \t\t|| apt-get install -y --no-install-recommends dirmngr \t; } \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-01-16T02:50:43.43041442Z",
                    "created_by": "/bin/sh -c set -x \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys DD95CC430502E37EF840ACEEA5D32F012649A5A9 \t&& gpg --batch --export DD95CC430502E37EF840ACEEA5D32F012649A5A9 > /etc/apt/trusted.gpg.d/neurodebian.gpg \t&& rm -rf \"$GNUPGHOME\" \t&& apt-key list | grep neurodebian"
                },
                {
                    "created": "2020-01-16T02:50:44.146620602Z",
                    "created_by": "/bin/sh -c { \techo 'deb http://neuro.debian.net/debian disco main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel disco main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2020-01-16T02:50:49.011752592Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:873cbe4bd21ee6f6ea264cfc50c0b35b0c3a00e2be3f82b30884c3b9da5db2db",
                    "sha256:363295e4406ae5b7cd0fa135a9c608204bc707229b5f720918f750046bb91e88",
                    "sha256:8ac4be6e0e4bc6c95feb8f6d0c314c91969b5ef7149a25a95f466aa77b185548",
                    "sha256:311180c0cfcf0c31f0c20044db3aa160c702d0aaf78bb4430e25ebb8e905e817",
                    "sha256:f84303077703acbc8d341fe77eeaa16bcf4a17f4376ebd820b1341fdec09a3c6",
                    "sha256:1376f2d222a0cd31f09ff4da1f67bb63b0cd3bc770bdf74e6b724a1859e83571",
                    "sha256:32209b375a724c31a40aba5da08ccd14e345a486c0e21967efc2b5ba1f4f7c46",
                    "sha256:07e5a2d5f93f4d19a8c66321e859f30506ae5d7bb16eee4e351fc69814490b69"
                ]
            }
        },
        "disco-non-free": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6a0d73da3d53e313743e9c22d77eb6c1ec2933510686556950afc964887eb1b7",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "5e196265908fe11833ec93314cf3816143cbfffd361d2220d3d21b98d0200e69",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "sed -i -e 's,main *$,main contrib non-free,g' /etc/apt/sources.list.d/neurodebian.sources.list; grep -q 'deb .* multiverse$' /etc/apt/sources.list || sed -i -e 's,universe *$,universe multiverse,g' /etc/apt/sources.list"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6a0d73da3d53e313743e9c22d77eb6c1ec2933510686556950afc964887eb1b7",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2020-01-16T02:50:57.750836091Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2020-01-16T01:20:44.575307418Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:98c7df2bed4738dded17ef3fc4dd8f3b1e1d1d742a0245c9f1e518daea8e445e in / "
                },
                {
                    "created": "2020-01-16T01:20:45.383335345Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-01-16T01:20:46.068449313Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-01-16T01:20:46.764713103Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-01-16T01:20:46.938732934Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-16T02:50:42.518311847Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& { \t\twhich gpg \t\t|| apt-get install -y --no-install-recommends gnupg \t; } \t&& { \t\tgpg --version | grep -q '^gpg (GnuPG) 1\\.' \t\t|| apt-get install -y --no-install-recommends dirmngr \t; } \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-01-16T02:50:43.43041442Z",
                    "created_by": "/bin/sh -c set -x \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys DD95CC430502E37EF840ACEEA5D32F012649A5A9 \t&& gpg --batch --export DD95CC430502E37EF840ACEEA5D32F012649A5A9 > /etc/apt/trusted.gpg.d/neurodebian.gpg \t&& rm -rf \"$GNUPGHOME\" \t&& apt-key list | grep neurodebian"
                },
                {
                    "created": "2020-01-16T02:50:44.146620602Z",
                    "created_by": "/bin/sh -c { \techo 'deb http://neuro.debian.net/debian disco main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel disco main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2020-01-16T02:50:49.011752592Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-01-16T02:50:57.750836091Z",
                    "created_by": "/bin/sh -c sed -i -e 's,main *$,main contrib non-free,g' /etc/apt/sources.list.d/neurodebian.sources.list; grep -q 'deb .* multiverse$' /etc/apt/sources.list || sed -i -e 's,universe *$,universe multiverse,g' /etc/apt/sources.list"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:873cbe4bd21ee6f6ea264cfc50c0b35b0c3a00e2be3f82b30884c3b9da5db2db",
                    "sha256:363295e4406ae5b7cd0fa135a9c608204bc707229b5f720918f750046bb91e88",
                    "sha256:8ac4be6e0e4bc6c95feb8f6d0c314c91969b5ef7149a25a95f466aa77b185548",
                    "sha256:311180c0cfcf0c31f0c20044db3aa160c702d0aaf78bb4430e25ebb8e905e817",
                    "sha256:f84303077703acbc8d341fe77eeaa16bcf4a17f4376ebd820b1341fdec09a3c6",
                    "sha256:1376f2d222a0cd31f09ff4da1f67bb63b0cd3bc770bdf74e6b724a1859e83571",
                    "sha256:32209b375a724c31a40aba5da08ccd14e345a486c0e21967efc2b5ba1f4f7c46",
                    "sha256:07e5a2d5f93f4d19a8c66321e859f30506ae5d7bb16eee4e351fc69814490b69",
                    "sha256:b60a0896ece2cbefafcc33200fc85864e9deb9d736a6664ed765af0ee8abae89"
                ]
            }
        },
        "focal": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:3c813c5c7f79af48004c5b6d39090aeba923fe131a09e63dfa34070db97802bc",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "20.04"
                }
            },
            "container": "acd501f4da4bb18f5a3ebd89983bf7de0a245baa02589cb3afefabbece911268",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                ],
                "Image": "sha256:3c813c5c7f79af48004c5b6d39090aeba923fe131a09e63dfa34070db97802bc",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "20.04"
                }
            },
            "created": "2024-05-02T02:33:28.745535874Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-04-27T14:03:39.495375794Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:03:39.518457955Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:03:39.540231445Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:03:39.564669578Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=20.04",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:03:41.34852592Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e5742fae181dc02a419e48d202fdd6a561b79ccbe7d3415e15e3d2c12e444a2a in / "
                },
                {
                    "created": "2024-04-27T14:03:41.56764926Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:33:21.254226864Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& { \t\twhich gpg \t\t|| apt-get install -y --no-install-recommends gnupg \t; } \t&& { \t\tgpg --version | grep -q '^gpg (GnuPG) 1\\.' \t\t|| apt-get install -y --no-install-recommends dirmngr \t; } \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-02T02:33:22.674923024Z",
                    "created_by": "/bin/sh -c set -x \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver keyserver.ubuntu.com --recv-keys DD95CC430502E37EF840ACEEA5D32F012649A5A9 \t&& gpg --batch --export DD95CC430502E37EF840ACEEA5D32F012649A5A9 > /etc/apt/trusted.gpg.d/neurodebian.gpg \t&& rm -rf \"$GNUPGHOME\" \t&& apt-key list | grep neurodebian"
                },
                {
                    "created": "2024-05-02T02:33:23.185633631Z",
                    "created_by": "/bin/sh -c { \techo 'deb http://neuro.debian.net/debian focal main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel focal main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2024-05-02T02:33:28.745535874Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4a1518ebc26e2e4c26f1c5d78a36d41d87d2fd4a7e4ad37c5f9033f2eb52f26b",
                    "sha256:8f55a2e6ff07fa743eddbdae739ce66af9b61043ed6338b24e46b0a521f35ef4",
                    "sha256:a00340299fe440626a675947dafe58ca84f31fffc3af9954acdab23436aa7dd0",
                    "sha256:f14e1f7331a8b3f0fcb29f2d94f6327549a85a548b61e4fe43b86b39f5e9755e",
                    "sha256:b8a2064f4e658fcfbd018650550744115b8fe46b8356c7c28100ad176fef0df2"
                ]
            }
        },
        "focal-non-free": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:19022d18292ceafa850c5900b934d0a368787b6a3e397a2b80082c1b95836ea4",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "20.04"
                }
            },
            "container": "31fbf710cb3f238c4f7ef5e4989b423f04d67abcdc1dbbf3f6d9f51ae85fdc8e",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "[ -e /etc/apt/sources.list.d/debian.sources ] && srcs=/etc/apt/sources.list.d/debian.sources || srcs=/etc/apt/sources.list; sed -i -e 's,main *$,main contrib non-free,g' /etc/apt/sources.list.d/neurodebian.sources.list; grep -q 'deb .* multiverse$' $srcs || sed -i -e 's,universe *$,universe multiverse,g' $srcs"
                ],
                "Image": "sha256:19022d18292ceafa850c5900b934d0a368787b6a3e397a2b80082c1b95836ea4",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "20.04"
                }
            },
            "created": "2024-05-02T02:33:32.048473432Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-04-27T14:03:39.495375794Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:03:39.518457955Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:03:39.540231445Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:03:39.564669578Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=20.04",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:03:41.34852592Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e5742fae181dc02a419e48d202fdd6a561b79ccbe7d3415e15e3d2c12e444a2a in / "
                },
                {
                    "created": "2024-04-27T14:03:41.56764926Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:33:21.254226864Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& { \t\twhich gpg \t\t|| apt-get install -y --no-install-recommends gnupg \t; } \t&& { \t\tgpg --version | grep -q '^gpg (GnuPG) 1\\.' \t\t|| apt-get install -y --no-install-recommends dirmngr \t; } \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-02T02:33:22.674923024Z",
                    "created_by": "/bin/sh -c set -x \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver keyserver.ubuntu.com --recv-keys DD95CC430502E37EF840ACEEA5D32F012649A5A9 \t&& gpg --batch --export DD95CC430502E37EF840ACEEA5D32F012649A5A9 > /etc/apt/trusted.gpg.d/neurodebian.gpg \t&& rm -rf \"$GNUPGHOME\" \t&& apt-key list | grep neurodebian"
                },
                {
                    "created": "2024-05-02T02:33:23.185633631Z",
                    "created_by": "/bin/sh -c { \techo 'deb http://neuro.debian.net/debian focal main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel focal main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2024-05-02T02:33:28.745535874Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-02T02:33:32.048473432Z",
                    "created_by": "/bin/sh -c [ -e /etc/apt/sources.list.d/debian.sources ] && srcs=/etc/apt/sources.list.d/debian.sources || srcs=/etc/apt/sources.list; sed -i -e 's,main *$,main contrib non-free,g' /etc/apt/sources.list.d/neurodebian.sources.list; grep -q 'deb .* multiverse$' $srcs || sed -i -e 's,universe *$,universe multiverse,g' $srcs"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4a1518ebc26e2e4c26f1c5d78a36d41d87d2fd4a7e4ad37c5f9033f2eb52f26b",
                    "sha256:8f55a2e6ff07fa743eddbdae739ce66af9b61043ed6338b24e46b0a521f35ef4",
                    "sha256:a00340299fe440626a675947dafe58ca84f31fffc3af9954acdab23436aa7dd0",
                    "sha256:f14e1f7331a8b3f0fcb29f2d94f6327549a85a548b61e4fe43b86b39f5e9755e",
                    "sha256:b8a2064f4e658fcfbd018650550744115b8fe46b8356c7c28100ad176fef0df2",
                    "sha256:6bb57daa14aeacefbd8f40f88896b4a4d0bf4d900d6909de2fde7bd23ab7b47f"
                ]
            }
        },
        "groovy": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:e0008bc936724b63405392efcded5175188c0a3c556a5d5e295baba86e0cf0c8",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "7407de67e4776e753fb895b9ffddade5a99a4490f7878100f5b37f8d817c0a4a",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                ],
                "Image": "sha256:e0008bc936724b63405392efcded5175188c0a3c556a5d5e295baba86e0cf0c8",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2021-07-27T00:14:49.196519891Z",
            "docker_version": "20.10.7",
            "history": [
                {
                    "created": "2021-07-26T21:21:47.309451832Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:23ff7ae476ddf97e5dbaf417c06418ae4d8d49a88acb92738bf03fb4a22eeca3 in / "
                },
                {
                    "created": "2021-07-26T21:21:47.708101697Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-27T00:14:42.661973685Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& { \t\twhich gpg \t\t|| apt-get install -y --no-install-recommends gnupg \t; } \t&& { \t\tgpg --version | grep -q '^gpg (GnuPG) 1\\.' \t\t|| apt-get install -y --no-install-recommends dirmngr \t; } \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-07-27T00:14:44.065199296Z",
                    "created_by": "/bin/sh -c set -x \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys DD95CC430502E37EF840ACEEA5D32F012649A5A9 \t&& gpg --batch --export DD95CC430502E37EF840ACEEA5D32F012649A5A9 > /etc/apt/trusted.gpg.d/neurodebian.gpg \t&& rm -rf \"$GNUPGHOME\" \t&& apt-key list | grep neurodebian"
                },
                {
                    "created": "2021-07-27T00:14:44.842939117Z",
                    "created_by": "/bin/sh -c { \techo 'deb http://neuro.debian.net/debian groovy main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel groovy main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2021-07-27T00:14:49.196519891Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c7b30e8af03a4ee5b1bd49e5a92630fa850f742da311b9c635ead8ccf642d03b",
                    "sha256:a5f270b9fb14b6a3d1a6f59b8072dd3bd6893690b672699497e15609cb121a53",
                    "sha256:05443fe54f065463b5aca92a5ff389769431ff2f57c9a53ebc0ad3eb8e260b3f",
                    "sha256:652760a2a0a6143407b877f2a51f3d841c890309e50ee59d87a821a958b717ef",
                    "sha256:f661e1f25c9bc35f5633dfbaad8c7332ba8a907b4b74aaa0055e6a8f9f587237"
                ]
            }
        },
        "groovy-non-free": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:26bb0425f6d5672b1459a2513346efe4d6d883c4ab4b1788c4f0cac04baf61f8",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "78039bbdf96dc837a88c1f3b5456fec160f5bd8fe8d4edadf69abe4a2b077e16",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "sed -i -e 's,main *$,main contrib non-free,g' /etc/apt/sources.list.d/neurodebian.sources.list; grep -q 'deb .* multiverse$' /etc/apt/sources.list || sed -i -e 's,universe *$,universe multiverse,g' /etc/apt/sources.list"
                ],
                "Image": "sha256:26bb0425f6d5672b1459a2513346efe4d6d883c4ab4b1788c4f0cac04baf61f8",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2021-07-27T00:14:59.960199764Z",
            "docker_version": "20.10.7",
            "history": [
                {
                    "created": "2021-07-26T21:21:47.309451832Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:23ff7ae476ddf97e5dbaf417c06418ae4d8d49a88acb92738bf03fb4a22eeca3 in / "
                },
                {
                    "created": "2021-07-26T21:21:47.708101697Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-27T00:14:42.661973685Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& { \t\twhich gpg \t\t|| apt-get install -y --no-install-recommends gnupg \t; } \t&& { \t\tgpg --version | grep -q '^gpg (GnuPG) 1\\.' \t\t|| apt-get install -y --no-install-recommends dirmngr \t; } \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-07-27T00:14:44.065199296Z",
                    "created_by": "/bin/sh -c set -x \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys DD95CC430502E37EF840ACEEA5D32F012649A5A9 \t&& gpg --batch --export DD95CC430502E37EF840ACEEA5D32F012649A5A9 > /etc/apt/trusted.gpg.d/neurodebian.gpg \t&& rm -rf \"$GNUPGHOME\" \t&& apt-key list | grep neurodebian"
                },
                {
                    "created": "2021-07-27T00:14:44.842939117Z",
                    "created_by": "/bin/sh -c { \techo 'deb http://neuro.debian.net/debian groovy main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel groovy main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2021-07-27T00:14:49.196519891Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-07-27T00:14:59.960199764Z",
                    "created_by": "/bin/sh -c sed -i -e 's,main *$,main contrib non-free,g' /etc/apt/sources.list.d/neurodebian.sources.list; grep -q 'deb .* multiverse$' /etc/apt/sources.list || sed -i -e 's,universe *$,universe multiverse,g' /etc/apt/sources.list"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c7b30e8af03a4ee5b1bd49e5a92630fa850f742da311b9c635ead8ccf642d03b",
                    "sha256:a5f270b9fb14b6a3d1a6f59b8072dd3bd6893690b672699497e15609cb121a53",
                    "sha256:05443fe54f065463b5aca92a5ff389769431ff2f57c9a53ebc0ad3eb8e260b3f",
                    "sha256:652760a2a0a6143407b877f2a51f3d841c890309e50ee59d87a821a958b717ef",
                    "sha256:f661e1f25c9bc35f5633dfbaad8c7332ba8a907b4b74aaa0055e6a8f9f587237",
                    "sha256:44d7bb89a10433308eda04b0a5f1740de521621ea254e14d8b4026e66ace8352"
                ]
            }
        },
        "hirsute": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:a53230a2f91cfbacbdacf619eb490dd009ab07423b78c2b70c73d838245b6665",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f582405d3e3b3ae9274b35be8264f9d78601e4f170b48248ac2772bc7ec4d535",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                ],
                "Image": "sha256:a53230a2f91cfbacbdacf619eb490dd009ab07423b78c2b70c73d838245b6665",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2022-02-02T07:57:35.678687692Z",
            "docker_version": "20.10.7",
            "history": [
                {
                    "created": "2022-02-02T02:14:55.796869148Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4cb90f4b06e581fee87fc3dd2291619028b279592d7fbb97885669d1fb7e89e8 in / "
                },
                {
                    "created": "2022-02-02T02:14:56.344576Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-02T07:56:49.276967637Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& { \t\twhich gpg \t\t|| apt-get install -y --no-install-recommends gnupg \t; } \t&& { \t\tgpg --version | grep -q '^gpg (GnuPG) 1\\.' \t\t|| apt-get install -y --no-install-recommends dirmngr \t; } \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-02-02T07:57:30.124633586Z",
                    "created_by": "/bin/sh -c set -x \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys DD95CC430502E37EF840ACEEA5D32F012649A5A9 \t&& gpg --batch --export DD95CC430502E37EF840ACEEA5D32F012649A5A9 > /etc/apt/trusted.gpg.d/neurodebian.gpg \t&& rm -rf \"$GNUPGHOME\" \t&& apt-key list | grep neurodebian"
                },
                {
                    "created": "2022-02-02T07:57:30.895463135Z",
                    "created_by": "/bin/sh -c { \techo 'deb http://neuro.debian.net/debian hirsute main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel hirsute main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2022-02-02T07:57:35.678687692Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:dca6a631e9bb9c6504724239850a6cb4e788ebdc85c6acff20ccdf89c047e0fc",
                    "sha256:a64d657d69fae03e247ef7676fd62d96da04604273c4f5de82a0b64a80607669",
                    "sha256:2073d44d4756aad237f7e637476e36dbda611f5ed87d8c845e8ba920fb2c2c97",
                    "sha256:b095646dfd8c8355d6a30d2c2b5ad91abb5e2811f0301cf2416d3b5d3044e7cb",
                    "sha256:1ce96d6fa48ac7baec8d1b4ab5e47a32a69891ae52df7badf82d547d1e248b8d"
                ]
            }
        },
        "hirsute-non-free": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:00afef9c4f9f768e261ea882f092c0f49c804cf64fadec70e419aebe3ea0edb3",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "ced5970bae3042effe996eb546d71632f7486aaf0a60bd15b8a3af48319745e0",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "sed -i -e 's,main *$,main contrib non-free,g' /etc/apt/sources.list.d/neurodebian.sources.list; grep -q 'deb .* multiverse$' /etc/apt/sources.list || sed -i -e 's,universe *$,universe multiverse,g' /etc/apt/sources.list"
                ],
                "Image": "sha256:00afef9c4f9f768e261ea882f092c0f49c804cf64fadec70e419aebe3ea0edb3",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2022-02-02T07:57:48.972113784Z",
            "docker_version": "20.10.7",
            "history": [
                {
                    "created": "2022-02-02T02:14:55.796869148Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4cb90f4b06e581fee87fc3dd2291619028b279592d7fbb97885669d1fb7e89e8 in / "
                },
                {
                    "created": "2022-02-02T02:14:56.344576Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-02T07:56:49.276967637Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& { \t\twhich gpg \t\t|| apt-get install -y --no-install-recommends gnupg \t; } \t&& { \t\tgpg --version | grep -q '^gpg (GnuPG) 1\\.' \t\t|| apt-get install -y --no-install-recommends dirmngr \t; } \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-02-02T07:57:30.124633586Z",
                    "created_by": "/bin/sh -c set -x \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys DD95CC430502E37EF840ACEEA5D32F012649A5A9 \t&& gpg --batch --export DD95CC430502E37EF840ACEEA5D32F012649A5A9 > /etc/apt/trusted.gpg.d/neurodebian.gpg \t&& rm -rf \"$GNUPGHOME\" \t&& apt-key list | grep neurodebian"
                },
                {
                    "created": "2022-02-02T07:57:30.895463135Z",
                    "created_by": "/bin/sh -c { \techo 'deb http://neuro.debian.net/debian hirsute main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel hirsute main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2022-02-02T07:57:35.678687692Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-02-02T07:57:48.972113784Z",
                    "created_by": "/bin/sh -c sed -i -e 's,main *$,main contrib non-free,g' /etc/apt/sources.list.d/neurodebian.sources.list; grep -q 'deb .* multiverse$' /etc/apt/sources.list || sed -i -e 's,universe *$,universe multiverse,g' /etc/apt/sources.list"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:dca6a631e9bb9c6504724239850a6cb4e788ebdc85c6acff20ccdf89c047e0fc",
                    "sha256:a64d657d69fae03e247ef7676fd62d96da04604273c4f5de82a0b64a80607669",
                    "sha256:2073d44d4756aad237f7e637476e36dbda611f5ed87d8c845e8ba920fb2c2c97",
                    "sha256:b095646dfd8c8355d6a30d2c2b5ad91abb5e2811f0301cf2416d3b5d3044e7cb",
                    "sha256:1ce96d6fa48ac7baec8d1b4ab5e47a32a69891ae52df7badf82d547d1e248b8d",
                    "sha256:df09c3f8ba838227726bbcc5d2f09558ccf5583678fa96969afa0d3d0027b305"
                ]
            }
        },
        "impish": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:e89af2dd342f6bb4ab380b7bf9a70691d18b73eb8ab18be79bc8188390a37e16",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "8a5ad3a778df477459900dbb9a3fb345c2695a0a8f5c637dd1cf89daacd1ad70",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                ],
                "Image": "sha256:e89af2dd342f6bb4ab380b7bf9a70691d18b73eb8ab18be79bc8188390a37e16",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2022-06-07T00:38:19.683746438Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-06-06T22:21:18.858949665Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d6b83520d39d5b64128115fc97a16a462c38d8e06ef69baad724eda9da91f934 in / "
                },
                {
                    "created": "2022-06-06T22:21:19.310066598Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-07T00:38:13.507009405Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& { \t\twhich gpg \t\t|| apt-get install -y --no-install-recommends gnupg \t; } \t&& { \t\tgpg --version | grep -q '^gpg (GnuPG) 1\\.' \t\t|| apt-get install -y --no-install-recommends dirmngr \t; } \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-07T00:38:14.708877847Z",
                    "created_by": "/bin/sh -c set -x \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver keyserver.ubuntu.com --recv-keys DD95CC430502E37EF840ACEEA5D32F012649A5A9 \t&& gpg --batch --export DD95CC430502E37EF840ACEEA5D32F012649A5A9 > /etc/apt/trusted.gpg.d/neurodebian.gpg \t&& rm -rf \"$GNUPGHOME\" \t&& apt-key list | grep neurodebian"
                },
                {
                    "created": "2022-06-07T00:38:15.240266258Z",
                    "created_by": "/bin/sh -c { \techo 'deb http://neuro.debian.net/debian impish main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel impish main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2022-06-07T00:38:19.683746438Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:80d20ffd08f4ffaac6989ef7aba7b484d01152df833a1eb9504852150022e9b4",
                    "sha256:85ef447345d805cf1aff08f2f2d7d4a3bf31346ddcb8fdda7095347ee2dba40e",
                    "sha256:f7661b84c18bf6c392791b184798ff38cb46583cade659fe0e372234b42fed83",
                    "sha256:32415b1054e996fe07018f7f0f97e327799daf001ba44496ddb390a80a4d1418",
                    "sha256:52b6d03aa7aa270726cd1012dd5b6c4f7a53042c724e97f5c23888b24c2909dd"
                ]
            }
        },
        "impish-non-free": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:57e017fc712553f899766998fdb9db30eee355df9033c23dd72ba12b43aa47eb",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "fb649af926b252a91bcde3ade1b738267d23f00eee01fe15017aed0048e2e090",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "[ -e /etc/apt/sources.list.d/debian.sources ] && srcs=/etc/apt/sources.list.d/debian.sources || srcs=/etc/apt/sources.list; sed -i -e 's,main *$,main contrib non-free,g' /etc/apt/sources.list.d/neurodebian.sources.list; grep -q 'deb .* multiverse$' $srcs || sed -i -e 's,universe *$,universe multiverse,g' $srcs"
                ],
                "Image": "sha256:57e017fc712553f899766998fdb9db30eee355df9033c23dd72ba12b43aa47eb",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2022-07-19T19:53:52.636675279Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-06-06T22:21:18.858949665Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d6b83520d39d5b64128115fc97a16a462c38d8e06ef69baad724eda9da91f934 in / "
                },
                {
                    "created": "2022-06-06T22:21:19.310066598Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-07T00:38:13.507009405Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& { \t\twhich gpg \t\t|| apt-get install -y --no-install-recommends gnupg \t; } \t&& { \t\tgpg --version | grep -q '^gpg (GnuPG) 1\\.' \t\t|| apt-get install -y --no-install-recommends dirmngr \t; } \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-07T00:38:14.708877847Z",
                    "created_by": "/bin/sh -c set -x \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver keyserver.ubuntu.com --recv-keys DD95CC430502E37EF840ACEEA5D32F012649A5A9 \t&& gpg --batch --export DD95CC430502E37EF840ACEEA5D32F012649A5A9 > /etc/apt/trusted.gpg.d/neurodebian.gpg \t&& rm -rf \"$GNUPGHOME\" \t&& apt-key list | grep neurodebian"
                },
                {
                    "created": "2022-06-07T00:38:15.240266258Z",
                    "created_by": "/bin/sh -c { \techo 'deb http://neuro.debian.net/debian impish main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel impish main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2022-06-07T00:38:19.683746438Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-07-19T19:53:52.636675279Z",
                    "created_by": "/bin/sh -c [ -e /etc/apt/sources.list.d/debian.sources ] && srcs=/etc/apt/sources.list.d/debian.sources || srcs=/etc/apt/sources.list; sed -i -e 's,main *$,main contrib non-free,g' /etc/apt/sources.list.d/neurodebian.sources.list; grep -q 'deb .* multiverse$' $srcs || sed -i -e 's,universe *$,universe multiverse,g' $srcs"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:80d20ffd08f4ffaac6989ef7aba7b484d01152df833a1eb9504852150022e9b4",
                    "sha256:85ef447345d805cf1aff08f2f2d7d4a3bf31346ddcb8fdda7095347ee2dba40e",
                    "sha256:f7661b84c18bf6c392791b184798ff38cb46583cade659fe0e372234b42fed83",
                    "sha256:32415b1054e996fe07018f7f0f97e327799daf001ba44496ddb390a80a4d1418",
                    "sha256:52b6d03aa7aa270726cd1012dd5b6c4f7a53042c724e97f5c23888b24c2909dd",
                    "sha256:f80f8a22fd89185d50c75516ee3cd9fbf5133d611a3619aa1fb6e61915a15a7a"
                ]
            }
        },
        "jammy": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:8e1e8ce5c70f405c48554570ac5bdecf0830d8c2798cec40ac939ce42293e1d9",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                }
            },
            "container": "9e76ada0d2571bc8c261a7e4cf25e0d8403e6ca85e5b8474b897c3996ac9d60a",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                ],
                "Image": "sha256:8e1e8ce5c70f405c48554570ac5bdecf0830d8c2798cec40ac939ce42293e1d9",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                }
            },
            "created": "2024-05-02T02:34:00.482383481Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-04-27T13:18:35.154492474Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T13:18:35.173716357Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T13:18:35.206893769Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T13:18:35.24025223Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T13:18:37.180712343Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a5d32dc2ab15ff0d7dbd72af26e361eb1f3e87a0d29ec3a1ceab24ad7b3e6ba9 in / "
                },
                {
                    "created": "2024-04-27T13:18:37.512234142Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:33:53.451593096Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& { \t\twhich gpg \t\t|| apt-get install -y --no-install-recommends gnupg \t; } \t&& { \t\tgpg --version | grep -q '^gpg (GnuPG) 1\\.' \t\t|| apt-get install -y --no-install-recommends dirmngr \t; } \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-02T02:33:54.850685693Z",
                    "created_by": "/bin/sh -c set -x \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver keyserver.ubuntu.com --recv-keys DD95CC430502E37EF840ACEEA5D32F012649A5A9 \t&& gpg --batch --export DD95CC430502E37EF840ACEEA5D32F012649A5A9 > /etc/apt/trusted.gpg.d/neurodebian.gpg \t&& rm -rf \"$GNUPGHOME\" \t&& apt-key list | grep neurodebian"
                },
                {
                    "created": "2024-05-02T02:33:55.487692102Z",
                    "created_by": "/bin/sh -c { \techo 'deb http://neuro.debian.net/debian jammy main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel jammy main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2024-05-02T02:34:00.482383481Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:629ca62fb7c791374ce57626d6b8b62c76378be091a0daf1a60d32700b49add7",
                    "sha256:392065bd57c6c978d32a76332c16871d12b57b8d55c5904fa8cb16c98c9f3af2",
                    "sha256:5802d04e3ff0bcc49baac4df84d36d996683ad9bd00dc963c0ea0091a108fc53",
                    "sha256:cbb9dbad003e557b941f06c7954be4b5382a5c1b9cf777432eb4cda951226e08",
                    "sha256:07e82cd2e96046f3370630fcfaec7ba57e695b5b353513cac9bb7aba13579f88"
                ]
            }
        },
        "jammy-non-free": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:7744605e367e992e2da23c0d27aeeaba8400a1758d9a695f3120ab8ab7cd4c89",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                }
            },
            "container": "b48fc7d0eeec106c9064ed74c16934aab87532d88164561e0bf9297d56dbe826",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "[ -e /etc/apt/sources.list.d/debian.sources ] && srcs=/etc/apt/sources.list.d/debian.sources || srcs=/etc/apt/sources.list; sed -i -e 's,main *$,main contrib non-free,g' /etc/apt/sources.list.d/neurodebian.sources.list; grep -q 'deb .* multiverse$' $srcs || sed -i -e 's,universe *$,universe multiverse,g' $srcs"
                ],
                "Image": "sha256:7744605e367e992e2da23c0d27aeeaba8400a1758d9a695f3120ab8ab7cd4c89",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                }
            },
            "created": "2024-05-02T02:34:04.451556871Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-04-27T13:18:35.154492474Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T13:18:35.173716357Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T13:18:35.206893769Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T13:18:35.24025223Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T13:18:37.180712343Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a5d32dc2ab15ff0d7dbd72af26e361eb1f3e87a0d29ec3a1ceab24ad7b3e6ba9 in / "
                },
                {
                    "created": "2024-04-27T13:18:37.512234142Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:33:53.451593096Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& { \t\twhich gpg \t\t|| apt-get install -y --no-install-recommends gnupg \t; } \t&& { \t\tgpg --version | grep -q '^gpg (GnuPG) 1\\.' \t\t|| apt-get install -y --no-install-recommends dirmngr \t; } \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-02T02:33:54.850685693Z",
                    "created_by": "/bin/sh -c set -x \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver keyserver.ubuntu.com --recv-keys DD95CC430502E37EF840ACEEA5D32F012649A5A9 \t&& gpg --batch --export DD95CC430502E37EF840ACEEA5D32F012649A5A9 > /etc/apt/trusted.gpg.d/neurodebian.gpg \t&& rm -rf \"$GNUPGHOME\" \t&& apt-key list | grep neurodebian"
                },
                {
                    "created": "2024-05-02T02:33:55.487692102Z",
                    "created_by": "/bin/sh -c { \techo 'deb http://neuro.debian.net/debian jammy main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel jammy main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2024-05-02T02:34:00.482383481Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-02T02:34:04.451556871Z",
                    "created_by": "/bin/sh -c [ -e /etc/apt/sources.list.d/debian.sources ] && srcs=/etc/apt/sources.list.d/debian.sources || srcs=/etc/apt/sources.list; sed -i -e 's,main *$,main contrib non-free,g' /etc/apt/sources.list.d/neurodebian.sources.list; grep -q 'deb .* multiverse$' $srcs || sed -i -e 's,universe *$,universe multiverse,g' $srcs"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:629ca62fb7c791374ce57626d6b8b62c76378be091a0daf1a60d32700b49add7",
                    "sha256:392065bd57c6c978d32a76332c16871d12b57b8d55c5904fa8cb16c98c9f3af2",
                    "sha256:5802d04e3ff0bcc49baac4df84d36d996683ad9bd00dc963c0ea0091a108fc53",
                    "sha256:cbb9dbad003e557b941f06c7954be4b5382a5c1b9cf777432eb4cda951226e08",
                    "sha256:07e82cd2e96046f3370630fcfaec7ba57e695b5b353513cac9bb7aba13579f88",
                    "sha256:fe3aec1ac7083afa00bf6ed7217c8adeb9be80c36bd01ea7e18e480e079d53ce"
                ]
            }
        },
        "jessie": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:4b757f0270b9f5d26f12a9719e16c58c6b42a545235ab001336d08da7f6ff8c6",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "9ddc608359e3b638115fca1232b6aadbd06ae9b471378d5cd52429269ea8126d",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                ],
                "Image": "sha256:4b757f0270b9f5d26f12a9719e16c58c6b42a545235ab001336d08da7f6ff8c6",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2020-12-11T17:12:11.076353991Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-12-11T02:06:24.145764635Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e48eee8ab995f46a82f22f02d440c47dd43ef32a3571025bc45f86a2c91e7172 in / "
                },
                {
                    "created": "2020-12-11T02:06:25.153244847Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T17:09:59.720126089Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& { \t\twhich gpg \t\t|| apt-get install -y --no-install-recommends gnupg \t; } \t&& { \t\tgpg --version | grep -q '^gpg (GnuPG) 1\\.' \t\t|| apt-get install -y --no-install-recommends dirmngr \t; } \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-12-11T17:10:29.969535557Z",
                    "created_by": "/bin/sh -c set -x \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys DD95CC430502E37EF840ACEEA5D32F012649A5A9 \t&& gpg --batch --export DD95CC430502E37EF840ACEEA5D32F012649A5A9 > /etc/apt/trusted.gpg.d/neurodebian.gpg \t&& rm -rf \"$GNUPGHOME\" \t&& apt-key list | grep neurodebian"
                },
                {
                    "created": "2020-12-11T17:10:30.975905744Z",
                    "created_by": "/bin/sh -c { \techo 'deb http://neuro.debian.net/debian jessie main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel jessie main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2020-12-11T17:12:11.076353991Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:503aac83061aa88000ac78fab4a62c48b1e1cb3b1cc2cdb2f8347ccec39abfa9",
                    "sha256:a76edc688ef3a9ac32824f1221c322020a83224d9f224f6d94f9926b73db0778",
                    "sha256:6c808bec4c00477de36db060cd2853e58dfc2d07711fa70217d3ef99c7c0b714",
                    "sha256:52e1349cd4bd71a76d0f0666058e28436de7383011caa0571013a494d6d64b81",
                    "sha256:e3357f43220df5bf8e3731a49962327075dbc185a4b61ffa9f4064db4da38ba9"
                ]
            }
        },
        "jessie-non-free": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:99c2cbb8d7404f7d9a85232d3b0e1daec44e96ebf758d15977ccde8021ee48e7",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "9e27df4345b64e95682678e658c77b4e1349e2a057e71afb3d340f2b5dbf0836",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "sed -i -e 's,main *$,main contrib non-free,g' /etc/apt/sources.list.d/neurodebian.sources.list /etc/apt/sources.list"
                ],
                "Image": "sha256:99c2cbb8d7404f7d9a85232d3b0e1daec44e96ebf758d15977ccde8021ee48e7",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2020-12-11T17:12:15.872000727Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-12-11T02:06:24.145764635Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e48eee8ab995f46a82f22f02d440c47dd43ef32a3571025bc45f86a2c91e7172 in / "
                },
                {
                    "created": "2020-12-11T02:06:25.153244847Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T17:09:59.720126089Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& { \t\twhich gpg \t\t|| apt-get install -y --no-install-recommends gnupg \t; } \t&& { \t\tgpg --version | grep -q '^gpg (GnuPG) 1\\.' \t\t|| apt-get install -y --no-install-recommends dirmngr \t; } \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-12-11T17:10:29.969535557Z",
                    "created_by": "/bin/sh -c set -x \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys DD95CC430502E37EF840ACEEA5D32F012649A5A9 \t&& gpg --batch --export DD95CC430502E37EF840ACEEA5D32F012649A5A9 > /etc/apt/trusted.gpg.d/neurodebian.gpg \t&& rm -rf \"$GNUPGHOME\" \t&& apt-key list | grep neurodebian"
                },
                {
                    "created": "2020-12-11T17:10:30.975905744Z",
                    "created_by": "/bin/sh -c { \techo 'deb http://neuro.debian.net/debian jessie main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel jessie main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2020-12-11T17:12:11.076353991Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-12-11T17:12:15.872000727Z",
                    "created_by": "/bin/sh -c sed -i -e 's,main *$,main contrib non-free,g' /etc/apt/sources.list.d/neurodebian.sources.list /etc/apt/sources.list"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:503aac83061aa88000ac78fab4a62c48b1e1cb3b1cc2cdb2f8347ccec39abfa9",
                    "sha256:a76edc688ef3a9ac32824f1221c322020a83224d9f224f6d94f9926b73db0778",
                    "sha256:6c808bec4c00477de36db060cd2853e58dfc2d07711fa70217d3ef99c7c0b714",
                    "sha256:52e1349cd4bd71a76d0f0666058e28436de7383011caa0571013a494d6d64b81",
                    "sha256:e3357f43220df5bf8e3731a49962327075dbc185a4b61ffa9f4064db4da38ba9",
                    "sha256:c6b1b0691212c623f778d71bcc0caf2769dc1d0ec5428c1312f1edf287f1dc99"
                ]
            }
        },
        "latest": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:8e42b8164e913688129e0d15a72673b18311be8a33e2c745f93d229e93008c19",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "c7a28c86f3581fc765722bd2a94eb6fd7515b1167e7b7689617664b69ee8aa50",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                ],
                "Image": "sha256:8e42b8164e913688129e0d15a72673b18311be8a33e2c745f93d229e93008c19",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2024-05-14T14:46:18.273124259Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-05-14T01:28:14.312373541Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fc7856fc1fcc8bba68d0c729e34f64f4f113195167d677167a52eaa2c9760a19 in / "
                },
                {
                    "created": "2024-05-14T01:28:14.866817241Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:46:12.879288279Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& { \t\twhich gpg \t\t|| apt-get install -y --no-install-recommends gnupg \t; } \t&& { \t\tgpg --version | grep -q '^gpg (GnuPG) 1\\.' \t\t|| apt-get install -y --no-install-recommends dirmngr \t; } \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:46:14.217405495Z",
                    "created_by": "/bin/sh -c set -x \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver keyserver.ubuntu.com --recv-keys DD95CC430502E37EF840ACEEA5D32F012649A5A9 \t&& gpg --batch --export DD95CC430502E37EF840ACEEA5D32F012649A5A9 > /etc/apt/trusted.gpg.d/neurodebian.gpg \t&& rm -rf \"$GNUPGHOME\" \t&& apt-key list | grep neurodebian"
                },
                {
                    "created": "2024-05-14T14:46:14.750593926Z",
                    "created_by": "/bin/sh -c { \techo 'deb http://neuro.debian.net/debian bullseye main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel bullseye main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2024-05-14T14:46:18.273124259Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:82677505c894548130a3c97e95faa57399f02ea2fb97667d934fd6b807ea7108",
                    "sha256:92463cdfea38436ffa53d8e79afedc9ab601c5f60c4c37846ef716404944c143",
                    "sha256:5bd6218eda44b23193a6be0ad9dd4539d8489e504f1e08239fd9ef91b8113bf5",
                    "sha256:84f8961e41faeb9569029300f0e6f08e9af44dac880fd557c410fb1e7d84118b",
                    "sha256:3989ddc6d2850cd471ac9776b5456a270b2de77000b3f561d4a52d0065f7fb40"
                ]
            }
        },
        "nd": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:202f73a2a832003d8b614595ad64d47a51ad4f1cc1b460d296234e34e13ab152",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "53000ccfb9a8280828f0263955bcbba3c7a087fdcd3e506329e237f3a4ec411c",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                ],
                "Image": "sha256:202f73a2a832003d8b614595ad64d47a51ad4f1cc1b460d296234e34e13ab152",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2024-05-14T14:47:02.314411175Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-05-14T01:29:36.1944077Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b10a84e4e404c6ca6a1a6782f9040f24bb7bfbb95055e8cd39600ef22a4a9284 in / "
                },
                {
                    "created": "2024-05-14T01:29:36.710877423Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:46:56.147843313Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& { \t\twhich gpg \t\t|| apt-get install -y --no-install-recommends gnupg \t; } \t&& { \t\tgpg --version | grep -q '^gpg (GnuPG) 1\\.' \t\t|| apt-get install -y --no-install-recommends dirmngr \t; } \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:46:57.63578334Z",
                    "created_by": "/bin/sh -c set -x \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver keyserver.ubuntu.com --recv-keys DD95CC430502E37EF840ACEEA5D32F012649A5A9 \t&& gpg --batch --export DD95CC430502E37EF840ACEEA5D32F012649A5A9 > /etc/apt/trusted.gpg.d/neurodebian.gpg \t&& rm -rf \"$GNUPGHOME\" \t&& apt-key list | grep neurodebian"
                },
                {
                    "created": "2024-05-14T14:46:58.17262112Z",
                    "created_by": "/bin/sh -c { \techo 'deb http://neuro.debian.net/debian sid main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel sid main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2024-05-14T14:47:02.314411175Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:678e6c87db0d22a9fd4bf4b8d8286ef39c95437540cdab90a377bf7cf09f9ef9",
                    "sha256:ec95801c991b00e75b8ade42b6ec2cf7842ed82acdee74f254db5bcfab5f3768",
                    "sha256:faaab260e9fb26428b584a04fc93fc36ed867809446f947a5ee210c58d936819",
                    "sha256:e4e6873783be3826aa7211e08924837921f56b19a6c410324decf7655d149c8f",
                    "sha256:4a2e6bf8ef6d09063005c42134e50252e0f882b928aa206d4aa767f47f8ec731"
                ]
            }
        },
        "nd-non-free": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:4d1517d1960ec1611d1f9ab01997c344fa3344f010ce98d0ca6f72c0b74095a4",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f53fa51757db6b87b1355eb36cd69b1cca5be8eff950b925e02f01ddf9df39fc",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "[ -e /etc/apt/sources.list.d/debian.sources ] && srcs=/etc/apt/sources.list.d/debian.sources || srcs=/etc/apt/sources.list; sed -i -e 's,main *$,main contrib non-free,g' /etc/apt/sources.list.d/neurodebian.sources.list $srcs"
                ],
                "Image": "sha256:4d1517d1960ec1611d1f9ab01997c344fa3344f010ce98d0ca6f72c0b74095a4",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2024-05-14T14:47:07.01628749Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-05-14T01:29:36.1944077Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b10a84e4e404c6ca6a1a6782f9040f24bb7bfbb95055e8cd39600ef22a4a9284 in / "
                },
                {
                    "created": "2024-05-14T01:29:36.710877423Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:46:56.147843313Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& { \t\twhich gpg \t\t|| apt-get install -y --no-install-recommends gnupg \t; } \t&& { \t\tgpg --version | grep -q '^gpg (GnuPG) 1\\.' \t\t|| apt-get install -y --no-install-recommends dirmngr \t; } \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:46:57.63578334Z",
                    "created_by": "/bin/sh -c set -x \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver keyserver.ubuntu.com --recv-keys DD95CC430502E37EF840ACEEA5D32F012649A5A9 \t&& gpg --batch --export DD95CC430502E37EF840ACEEA5D32F012649A5A9 > /etc/apt/trusted.gpg.d/neurodebian.gpg \t&& rm -rf \"$GNUPGHOME\" \t&& apt-key list | grep neurodebian"
                },
                {
                    "created": "2024-05-14T14:46:58.17262112Z",
                    "created_by": "/bin/sh -c { \techo 'deb http://neuro.debian.net/debian sid main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel sid main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2024-05-14T14:47:02.314411175Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:47:07.01628749Z",
                    "created_by": "/bin/sh -c [ -e /etc/apt/sources.list.d/debian.sources ] && srcs=/etc/apt/sources.list.d/debian.sources || srcs=/etc/apt/sources.list; sed -i -e 's,main *$,main contrib non-free,g' /etc/apt/sources.list.d/neurodebian.sources.list $srcs"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:678e6c87db0d22a9fd4bf4b8d8286ef39c95437540cdab90a377bf7cf09f9ef9",
                    "sha256:ec95801c991b00e75b8ade42b6ec2cf7842ed82acdee74f254db5bcfab5f3768",
                    "sha256:faaab260e9fb26428b584a04fc93fc36ed867809446f947a5ee210c58d936819",
                    "sha256:e4e6873783be3826aa7211e08924837921f56b19a6c410324decf7655d149c8f",
                    "sha256:4a2e6bf8ef6d09063005c42134e50252e0f882b928aa206d4aa767f47f8ec731",
                    "sha256:70b7cac5a4aba9b66e1fa9058bc8d01e54207fc66a46fa3b3e56d9539b0624fc"
                ]
            }
        },
        "nd100": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:b135cac556b55e5a895302755edc9cec2ee8d99b5c14c836a87bac9d9c65f0e1",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "df6f0ca8476f6d35d5cd8017f493f9d98db1091312a2414fe6478b19507f5045",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                ],
                "Image": "sha256:b135cac556b55e5a895302755edc9cec2ee8d99b5c14c836a87bac9d9c65f0e1",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2024-05-14T14:45:59.403424624Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-05-14T01:28:36.892090407Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9062f3516bb9d149bc29e8f3ee94806152277d05a3f2ee0ba7bc2040d8bfc8d5 in / "
                },
                {
                    "created": "2024-05-14T01:28:37.468933512Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:45:53.309945819Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& { \t\twhich gpg \t\t|| apt-get install -y --no-install-recommends gnupg \t; } \t&& { \t\tgpg --version | grep -q '^gpg (GnuPG) 1\\.' \t\t|| apt-get install -y --no-install-recommends dirmngr \t; } \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:45:54.847438153Z",
                    "created_by": "/bin/sh -c set -x \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver keyserver.ubuntu.com --recv-keys DD95CC430502E37EF840ACEEA5D32F012649A5A9 \t&& gpg --batch --export DD95CC430502E37EF840ACEEA5D32F012649A5A9 > /etc/apt/trusted.gpg.d/neurodebian.gpg \t&& rm -rf \"$GNUPGHOME\" \t&& apt-key list | grep neurodebian"
                },
                {
                    "created": "2024-05-14T14:45:55.356689013Z",
                    "created_by": "/bin/sh -c { \techo 'deb http://neuro.debian.net/debian buster main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel buster main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2024-05-14T14:45:59.403424624Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:77dd7e63360b147459cfb0109ad62a5198b7abb9a98a7b68331f18cbf2e2f1d7",
                    "sha256:71203de29d25b737a6ecea8e4a39c235ad66bbf71a149aab25ed7f976ba96ce4",
                    "sha256:3b8a4ef15cdf7b24e32dfdcff86b84e35c2e70ea8c0866d4ef3c3e7ca0d9345a",
                    "sha256:0121012adda85e9a5bd1466aef3825c1b784b23d4a0af78fad5022276d68f61b",
                    "sha256:0c43b00b17bc10c854d70a3e1227431b0c3b3c1f49e7d3eaf6d725165d78ab28"
                ]
            }
        },
        "nd100-non-free": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:fa417480e7b21a1a49f1f030297812d63c2b05b50d2d36c465447444af6c742e",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "828b7cb1e7668ff7055f6c641f4c62a1640701b825f499dc1f07033e0bc678a5",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "[ -e /etc/apt/sources.list.d/debian.sources ] && srcs=/etc/apt/sources.list.d/debian.sources || srcs=/etc/apt/sources.list; sed -i -e 's,main *$,main contrib non-free,g' /etc/apt/sources.list.d/neurodebian.sources.list $srcs"
                ],
                "Image": "sha256:fa417480e7b21a1a49f1f030297812d63c2b05b50d2d36c465447444af6c742e",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2024-05-14T14:46:03.776997214Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-05-14T01:28:36.892090407Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9062f3516bb9d149bc29e8f3ee94806152277d05a3f2ee0ba7bc2040d8bfc8d5 in / "
                },
                {
                    "created": "2024-05-14T01:28:37.468933512Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:45:53.309945819Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& { \t\twhich gpg \t\t|| apt-get install -y --no-install-recommends gnupg \t; } \t&& { \t\tgpg --version | grep -q '^gpg (GnuPG) 1\\.' \t\t|| apt-get install -y --no-install-recommends dirmngr \t; } \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:45:54.847438153Z",
                    "created_by": "/bin/sh -c set -x \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver keyserver.ubuntu.com --recv-keys DD95CC430502E37EF840ACEEA5D32F012649A5A9 \t&& gpg --batch --export DD95CC430502E37EF840ACEEA5D32F012649A5A9 > /etc/apt/trusted.gpg.d/neurodebian.gpg \t&& rm -rf \"$GNUPGHOME\" \t&& apt-key list | grep neurodebian"
                },
                {
                    "created": "2024-05-14T14:45:55.356689013Z",
                    "created_by": "/bin/sh -c { \techo 'deb http://neuro.debian.net/debian buster main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel buster main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2024-05-14T14:45:59.403424624Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:46:03.776997214Z",
                    "created_by": "/bin/sh -c [ -e /etc/apt/sources.list.d/debian.sources ] && srcs=/etc/apt/sources.list.d/debian.sources || srcs=/etc/apt/sources.list; sed -i -e 's,main *$,main contrib non-free,g' /etc/apt/sources.list.d/neurodebian.sources.list $srcs"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:77dd7e63360b147459cfb0109ad62a5198b7abb9a98a7b68331f18cbf2e2f1d7",
                    "sha256:71203de29d25b737a6ecea8e4a39c235ad66bbf71a149aab25ed7f976ba96ce4",
                    "sha256:3b8a4ef15cdf7b24e32dfdcff86b84e35c2e70ea8c0866d4ef3c3e7ca0d9345a",
                    "sha256:0121012adda85e9a5bd1466aef3825c1b784b23d4a0af78fad5022276d68f61b",
                    "sha256:0c43b00b17bc10c854d70a3e1227431b0c3b3c1f49e7d3eaf6d725165d78ab28",
                    "sha256:e569dce9b29f1dddcba5923f4bd6c924861d9ae9f21d9d5f220e648427f9a44a"
                ]
            }
        },
        "nd110": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:8e42b8164e913688129e0d15a72673b18311be8a33e2c745f93d229e93008c19",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "c7a28c86f3581fc765722bd2a94eb6fd7515b1167e7b7689617664b69ee8aa50",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                ],
                "Image": "sha256:8e42b8164e913688129e0d15a72673b18311be8a33e2c745f93d229e93008c19",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2024-05-14T14:46:18.273124259Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-05-14T01:28:14.312373541Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fc7856fc1fcc8bba68d0c729e34f64f4f113195167d677167a52eaa2c9760a19 in / "
                },
                {
                    "created": "2024-05-14T01:28:14.866817241Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:46:12.879288279Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& { \t\twhich gpg \t\t|| apt-get install -y --no-install-recommends gnupg \t; } \t&& { \t\tgpg --version | grep -q '^gpg (GnuPG) 1\\.' \t\t|| apt-get install -y --no-install-recommends dirmngr \t; } \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:46:14.217405495Z",
                    "created_by": "/bin/sh -c set -x \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver keyserver.ubuntu.com --recv-keys DD95CC430502E37EF840ACEEA5D32F012649A5A9 \t&& gpg --batch --export DD95CC430502E37EF840ACEEA5D32F012649A5A9 > /etc/apt/trusted.gpg.d/neurodebian.gpg \t&& rm -rf \"$GNUPGHOME\" \t&& apt-key list | grep neurodebian"
                },
                {
                    "created": "2024-05-14T14:46:14.750593926Z",
                    "created_by": "/bin/sh -c { \techo 'deb http://neuro.debian.net/debian bullseye main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel bullseye main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2024-05-14T14:46:18.273124259Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:82677505c894548130a3c97e95faa57399f02ea2fb97667d934fd6b807ea7108",
                    "sha256:92463cdfea38436ffa53d8e79afedc9ab601c5f60c4c37846ef716404944c143",
                    "sha256:5bd6218eda44b23193a6be0ad9dd4539d8489e504f1e08239fd9ef91b8113bf5",
                    "sha256:84f8961e41faeb9569029300f0e6f08e9af44dac880fd557c410fb1e7d84118b",
                    "sha256:3989ddc6d2850cd471ac9776b5456a270b2de77000b3f561d4a52d0065f7fb40"
                ]
            }
        },
        "nd110-non-free": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:60d48442c482e88767dccfa96815d04b4e0d26a56ddc0ecf5a564d40321da00a",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "c2f9ca74098e6ae6ccb6d6f744e1e0c8a8600424711bbc81e78a6fb69d25b593",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "[ -e /etc/apt/sources.list.d/debian.sources ] && srcs=/etc/apt/sources.list.d/debian.sources || srcs=/etc/apt/sources.list; sed -i -e 's,main *$,main contrib non-free,g' /etc/apt/sources.list.d/neurodebian.sources.list $srcs"
                ],
                "Image": "sha256:60d48442c482e88767dccfa96815d04b4e0d26a56ddc0ecf5a564d40321da00a",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2024-05-14T14:46:21.79886586Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-05-14T01:28:14.312373541Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fc7856fc1fcc8bba68d0c729e34f64f4f113195167d677167a52eaa2c9760a19 in / "
                },
                {
                    "created": "2024-05-14T01:28:14.866817241Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:46:12.879288279Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& { \t\twhich gpg \t\t|| apt-get install -y --no-install-recommends gnupg \t; } \t&& { \t\tgpg --version | grep -q '^gpg (GnuPG) 1\\.' \t\t|| apt-get install -y --no-install-recommends dirmngr \t; } \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:46:14.217405495Z",
                    "created_by": "/bin/sh -c set -x \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver keyserver.ubuntu.com --recv-keys DD95CC430502E37EF840ACEEA5D32F012649A5A9 \t&& gpg --batch --export DD95CC430502E37EF840ACEEA5D32F012649A5A9 > /etc/apt/trusted.gpg.d/neurodebian.gpg \t&& rm -rf \"$GNUPGHOME\" \t&& apt-key list | grep neurodebian"
                },
                {
                    "created": "2024-05-14T14:46:14.750593926Z",
                    "created_by": "/bin/sh -c { \techo 'deb http://neuro.debian.net/debian bullseye main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel bullseye main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2024-05-14T14:46:18.273124259Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:46:21.79886586Z",
                    "created_by": "/bin/sh -c [ -e /etc/apt/sources.list.d/debian.sources ] && srcs=/etc/apt/sources.list.d/debian.sources || srcs=/etc/apt/sources.list; sed -i -e 's,main *$,main contrib non-free,g' /etc/apt/sources.list.d/neurodebian.sources.list $srcs"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:82677505c894548130a3c97e95faa57399f02ea2fb97667d934fd6b807ea7108",
                    "sha256:92463cdfea38436ffa53d8e79afedc9ab601c5f60c4c37846ef716404944c143",
                    "sha256:5bd6218eda44b23193a6be0ad9dd4539d8489e504f1e08239fd9ef91b8113bf5",
                    "sha256:84f8961e41faeb9569029300f0e6f08e9af44dac880fd557c410fb1e7d84118b",
                    "sha256:3989ddc6d2850cd471ac9776b5456a270b2de77000b3f561d4a52d0065f7fb40",
                    "sha256:66e8c4570ac65434cbdab01ae1da280704299f261269eb2d4ee1a10489fd5dd1"
                ]
            }
        },
        "nd12.04": {
            "architecture": "amd64",
            "config": {
                "Hostname": "eb5b2868ea5d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:aa799db05f784778d693b843d366b4c3a21eac984b18a925a1332694136fda2b",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "container": "1c0148cf5214170d136c4c575ed4411daeb18b0ae2d5aa46bf10f2d39ef24016",
            "container_config": {
                "Hostname": "eb5b2868ea5d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "{ \techo 'deb http://neuro.debian.net/debian precise main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel precise main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:aa799db05f784778d693b843d366b4c3a21eac984b18a925a1332694136fda2b",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2017-04-13T16:57:43.608746806Z",
            "docker_version": "17.04.0-ce",
            "history": [
                {
                    "created": "2017-04-12T21:05:24.365202717Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6f12126281dd0028de93ca678c7a77561c8f4f7625315097fbd03a80f1d6020a in / "
                },
                {
                    "created": "2017-04-12T21:05:26.451371719Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2017-04-12T21:05:27.862743484Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-04-12T21:05:29.087104833Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2017-04-12T21:05:30.356729988Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2017-04-12T21:05:30.976274223Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-04-13T16:57:38.699243757Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& { \t\twhich gpg \t\t|| apt-get install -y --no-install-recommends gnupg2 \t\t|| apt-get install -y --no-install-recommends gnupg \t; } \t&& { \t\tgpg --version | grep -q '^gpg (GnuPG) 1\\.' \t\t|| apt-get install -y --no-install-recommends dirmngr \t; } \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-04-13T16:57:42.14650676Z",
                    "created_by": "/bin/sh -c set -x \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --keyserver ha.pool.sks-keyservers.net --recv-keys DD95CC430502E37EF840ACEEA5D32F012649A5A9 \t&& gpg --export DD95CC430502E37EF840ACEEA5D32F012649A5A9 > /etc/apt/trusted.gpg.d/neurodebian.gpg \t&& rm -r \"$GNUPGHOME\""
                },
                {
                    "created": "2017-04-13T16:57:43.608746806Z",
                    "created_by": "/bin/sh -c { \techo 'deb http://neuro.debian.net/debian precise main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel precise main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:58bcc73dcf4050a4955916a0dcb7e5f9c331bf547d31e22052f1b5fa16cf63f8",
                    "sha256:9dc188d975fd7c511e3e40db68fcc5eb6290df063f36998c956fd147163fd821",
                    "sha256:ee60293db08fc3111327cc7accc92798fd215ba7c148a6a7d6e1e3fd3b533efc",
                    "sha256:73b4683e66e8ba13317b022e51f16960e0d436df40a772611e4d17248a721771",
                    "sha256:3efd1f7c01f65eff325e5615c7b4913537017c633b0c83cba74f8ee1816df535",
                    "sha256:f04da8b1eb701d3f580e9bf9324f2a96b830c1457e70550aa57c24a84cd8fbf2",
                    "sha256:2d746c6596399c030559701353e6f05c8616292a78d6b8b21b48bc7072aabac5",
                    "sha256:45cda94ba3285c78effc0505737b843de96a40d9ba73e83c8359711f653e7168"
                ]
            }
        },
        "nd120": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:cd0727205ca15fce4808df0e08ef1c83cfda4ac1231d31b8478f3e92e69179a8",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "6de7490cd1206031ed0464a9422fae14ec1f9a030b9bb0214be9cce0a579cd73",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                ],
                "Image": "sha256:cd0727205ca15fce4808df0e08ef1c83cfda4ac1231d31b8478f3e92e69179a8",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2024-05-14T14:46:36.998325455Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-05-14T01:27:51.0519485Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b9a9fc37b874060c713002ae1ac220f097edd7c6576116c22bb15aad8229b1b3 in / "
                },
                {
                    "created": "2024-05-14T01:27:51.549080671Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:46:31.39395992Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& { \t\twhich gpg \t\t|| apt-get install -y --no-install-recommends gnupg \t; } \t&& { \t\tgpg --version | grep -q '^gpg (GnuPG) 1\\.' \t\t|| apt-get install -y --no-install-recommends dirmngr \t; } \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:46:32.759018056Z",
                    "created_by": "/bin/sh -c set -x \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver keyserver.ubuntu.com --recv-keys DD95CC430502E37EF840ACEEA5D32F012649A5A9 \t&& gpg --batch --export DD95CC430502E37EF840ACEEA5D32F012649A5A9 > /etc/apt/trusted.gpg.d/neurodebian.gpg \t&& rm -rf \"$GNUPGHOME\" \t&& apt-key list | grep neurodebian"
                },
                {
                    "created": "2024-05-14T14:46:33.310352466Z",
                    "created_by": "/bin/sh -c { \techo 'deb http://neuro.debian.net/debian bookworm main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel bookworm main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2024-05-14T14:46:36.998325455Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:bbe1a212f7e9f1baaef62491a51254f3adda514c22632ea719f62713fad80f77",
                    "sha256:dca0920997fe8182adb7b67989467bb7635d8fdc7fa11ec0015b14eaa1d94a8c",
                    "sha256:960a25f0a3b150d1263e3c652024a198ff5fee81ef6e41015848a43a88376315",
                    "sha256:2d1d5068558c1b4709c0a6a2a77bf71d0441022c3d1b2c2ce02fa462f57e43d9",
                    "sha256:597de530480527209bd968bd84359daa2343f1242193ba405a64020b94416d07"
                ]
            }
        },
        "nd120-non-free": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:7e8f567a8a10077ad6fa82626a7c70eab299a6bf62815f5cb1942e5095432a74",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "c105a5ff3dc1722ae96fdec4567f3d1df08432dca55719b1434de06d359ff03b",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "[ -e /etc/apt/sources.list.d/debian.sources ] && srcs=/etc/apt/sources.list.d/debian.sources || srcs=/etc/apt/sources.list; sed -i -e 's,main *$,main contrib non-free,g' /etc/apt/sources.list.d/neurodebian.sources.list $srcs"
                ],
                "Image": "sha256:7e8f567a8a10077ad6fa82626a7c70eab299a6bf62815f5cb1942e5095432a74",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2024-05-14T14:46:42.703411899Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-05-14T01:27:51.0519485Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b9a9fc37b874060c713002ae1ac220f097edd7c6576116c22bb15aad8229b1b3 in / "
                },
                {
                    "created": "2024-05-14T01:27:51.549080671Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:46:31.39395992Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& { \t\twhich gpg \t\t|| apt-get install -y --no-install-recommends gnupg \t; } \t&& { \t\tgpg --version | grep -q '^gpg (GnuPG) 1\\.' \t\t|| apt-get install -y --no-install-recommends dirmngr \t; } \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:46:32.759018056Z",
                    "created_by": "/bin/sh -c set -x \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver keyserver.ubuntu.com --recv-keys DD95CC430502E37EF840ACEEA5D32F012649A5A9 \t&& gpg --batch --export DD95CC430502E37EF840ACEEA5D32F012649A5A9 > /etc/apt/trusted.gpg.d/neurodebian.gpg \t&& rm -rf \"$GNUPGHOME\" \t&& apt-key list | grep neurodebian"
                },
                {
                    "created": "2024-05-14T14:46:33.310352466Z",
                    "created_by": "/bin/sh -c { \techo 'deb http://neuro.debian.net/debian bookworm main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel bookworm main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2024-05-14T14:46:36.998325455Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:46:42.703411899Z",
                    "created_by": "/bin/sh -c [ -e /etc/apt/sources.list.d/debian.sources ] && srcs=/etc/apt/sources.list.d/debian.sources || srcs=/etc/apt/sources.list; sed -i -e 's,main *$,main contrib non-free,g' /etc/apt/sources.list.d/neurodebian.sources.list $srcs"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:bbe1a212f7e9f1baaef62491a51254f3adda514c22632ea719f62713fad80f77",
                    "sha256:dca0920997fe8182adb7b67989467bb7635d8fdc7fa11ec0015b14eaa1d94a8c",
                    "sha256:960a25f0a3b150d1263e3c652024a198ff5fee81ef6e41015848a43a88376315",
                    "sha256:2d1d5068558c1b4709c0a6a2a77bf71d0441022c3d1b2c2ce02fa462f57e43d9",
                    "sha256:597de530480527209bd968bd84359daa2343f1242193ba405a64020b94416d07",
                    "sha256:1e98e7b2ad11ce7a72b546cf461ba317f15662d78e63e253e2f51865f73cfd4d"
                ]
            }
        },
        "nd14.04": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:caa88578613e27b3b8071511598d9e2d19457875f5fbfda334f588077bf71194",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "3d9e5f349d12f4eedf89b6b64fb1d799c6836c7ef347f3072944e57f2be00348",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:caa88578613e27b3b8071511598d9e2d19457875f5fbfda334f588077bf71194",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2020-09-16T23:16:59.015929848Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2019-12-19T04:23:42.629482432Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:276b5d943a4d284f8a7b249176a31f93d95e852480c2b851de287e53ff622bba in / "
                },
                {
                    "created": "2020-09-16T22:21:53.035583367Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-09-16T22:21:53.824929146Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-16T22:21:54.584398916Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-09-16T22:21:54.767014556Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-16T23:16:50.923412062Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& { \t\twhich gpg \t\t|| apt-get install -y --no-install-recommends gnupg \t; } \t&& { \t\tgpg --version | grep -q '^gpg (GnuPG) 1\\.' \t\t|| apt-get install -y --no-install-recommends dirmngr \t; } \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-09-16T23:16:51.80124832Z",
                    "created_by": "/bin/sh -c set -x \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys DD95CC430502E37EF840ACEEA5D32F012649A5A9 \t&& gpg --batch --export DD95CC430502E37EF840ACEEA5D32F012649A5A9 > /etc/apt/trusted.gpg.d/neurodebian.gpg \t&& rm -rf \"$GNUPGHOME\" \t&& apt-key list | grep neurodebian"
                },
                {
                    "created": "2020-09-16T23:16:52.651130861Z",
                    "created_by": "/bin/sh -c { \techo 'deb http://neuro.debian.net/debian trusty main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel trusty main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2020-09-16T23:16:59.015929848Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f2fa9f4cf8fd0a521d40e34492b522cee3f35004047e617c75fadeb8bfd1e6b7",
                    "sha256:45d8dc025525eb83384fbb6f3d49bac2e85f690a17f7fc9ab4d013e7236703bd",
                    "sha256:e156c976a2ba450a30da0df824a204113c6afcf773cb09bfa186f88cd63f19dd",
                    "sha256:5ef19f98a72fe32209f8155e977c0e5808ddbe85eb703670500f48b82c015edd",
                    "sha256:35930177943fc546036fee7e847b44220095baa35e16d0ca056c89b333d7a05d",
                    "sha256:7c184ff1fa970b7daf0f9d07282b83bc63d85caea8558441fdef20529bd3ee09",
                    "sha256:dcb84af988cf40386f234475b3455945dff94afac9581baf9de24803ac8d4bf9"
                ]
            }
        },
        "nd14.04-non-free": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9a08e59697a0190e47bbc5cb43d2a94dce470cc71a07584781f7390764239fcf",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "167594ebde6da314b9d60dd615e2f5da6b5b577fd46fb95dd85d8e6366b81418",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "sed -i -e 's,main *$,main contrib non-free,g' /etc/apt/sources.list.d/neurodebian.sources.list; grep -q 'deb .* multiverse$' /etc/apt/sources.list || sed -i -e 's,universe *$,universe multiverse,g' /etc/apt/sources.list"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9a08e59697a0190e47bbc5cb43d2a94dce470cc71a07584781f7390764239fcf",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2020-09-16T23:17:05.141125923Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2019-12-19T04:23:42.629482432Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:276b5d943a4d284f8a7b249176a31f93d95e852480c2b851de287e53ff622bba in / "
                },
                {
                    "created": "2020-09-16T22:21:53.035583367Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-09-16T22:21:53.824929146Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-16T22:21:54.584398916Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-09-16T22:21:54.767014556Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-16T23:16:50.923412062Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& { \t\twhich gpg \t\t|| apt-get install -y --no-install-recommends gnupg \t; } \t&& { \t\tgpg --version | grep -q '^gpg (GnuPG) 1\\.' \t\t|| apt-get install -y --no-install-recommends dirmngr \t; } \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-09-16T23:16:51.80124832Z",
                    "created_by": "/bin/sh -c set -x \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys DD95CC430502E37EF840ACEEA5D32F012649A5A9 \t&& gpg --batch --export DD95CC430502E37EF840ACEEA5D32F012649A5A9 > /etc/apt/trusted.gpg.d/neurodebian.gpg \t&& rm -rf \"$GNUPGHOME\" \t&& apt-key list | grep neurodebian"
                },
                {
                    "created": "2020-09-16T23:16:52.651130861Z",
                    "created_by": "/bin/sh -c { \techo 'deb http://neuro.debian.net/debian trusty main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel trusty main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2020-09-16T23:16:59.015929848Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-09-16T23:17:05.141125923Z",
                    "created_by": "/bin/sh -c sed -i -e 's,main *$,main contrib non-free,g' /etc/apt/sources.list.d/neurodebian.sources.list; grep -q 'deb .* multiverse$' /etc/apt/sources.list || sed -i -e 's,universe *$,universe multiverse,g' /etc/apt/sources.list"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f2fa9f4cf8fd0a521d40e34492b522cee3f35004047e617c75fadeb8bfd1e6b7",
                    "sha256:45d8dc025525eb83384fbb6f3d49bac2e85f690a17f7fc9ab4d013e7236703bd",
                    "sha256:e156c976a2ba450a30da0df824a204113c6afcf773cb09bfa186f88cd63f19dd",
                    "sha256:5ef19f98a72fe32209f8155e977c0e5808ddbe85eb703670500f48b82c015edd",
                    "sha256:35930177943fc546036fee7e847b44220095baa35e16d0ca056c89b333d7a05d",
                    "sha256:7c184ff1fa970b7daf0f9d07282b83bc63d85caea8558441fdef20529bd3ee09",
                    "sha256:dcb84af988cf40386f234475b3455945dff94afac9581baf9de24803ac8d4bf9",
                    "sha256:74d3de78e625b41a77bdd60f4bf84005ef0a484ad2fedb6595ccb01a4f6dec3f"
                ]
            }
        },
        "nd15.04": {
            "architecture": "amd64",
            "config": {
                "Hostname": "d2d404286fc4",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "1e3273b5a2f9205fd01eb5cf8dc1692d334a5f08f8e25d467abb1d568efa7543",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "container": "f601ae9a176f655883c8f02335f67d552607776e5328fb1b8cc574f979d1da39",
            "container_config": {
                "Hostname": "d2d404286fc4",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "apt-key adv --recv-keys --keyserver pgp.mit.edu 0xA5D32F012649A5A9"
                ],
                "Image": "1e3273b5a2f9205fd01eb5cf8dc1692d334a5f08f8e25d467abb1d568efa7543",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2016-02-17T00:24:37.421644795Z",
            "docker_version": "1.9.1",
            "history": [
                {
                    "created": "2016-01-26T17:48:17.324409116Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3f4708cf445dc1b537b8e9f400cb02bef84660811ecdb7c98930f68fee876ec4 in /"
                },
                {
                    "created": "2016-01-26T17:48:31.377192721Z",
                    "created_by": "/bin/sh -c echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes"
                },
                {
                    "created": "2016-01-26T17:48:33.59869621Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2016-01-26T17:48:34.465253028Z",
                    "created_by": "/bin/sh -c #(nop) CMD [\"/bin/bash\"]"
                },
                {
                    "created": "2016-02-17T00:24:23.797732987Z",
                    "created_by": "/bin/sh -c echo 'deb http://neuro.debian.net/debian vivid main' > /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2016-02-17T00:24:25.345683616Z",
                    "created_by": "/bin/sh -c echo 'deb http://neuro.debian.net/debian data main' >> /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2016-02-17T00:24:26.701625458Z",
                    "created_by": "/bin/sh -c echo '#deb-src http://neuro.debian.net/debian-devel vivid main' >> /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2016-02-17T00:24:37.421644795Z",
                    "created_by": "/bin/sh -c apt-key adv --recv-keys --keyserver pgp.mit.edu 0xA5D32F012649A5A9"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3cbe18655eb617bf6a146dbd75a63f33c191bf8c7761bd6a8d68d53549af334b",
                    "sha256:84cc3d400b0d610447fbdea63436bad60fb8361493a32db380bd5c5a79f92ef4",
                    "sha256:ed58a6b8d8d6a4e2ecb4da7d1bf17ae8006dac65917c6a050109ef0a5d7199e6",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e42c095ea460dc6ca8fdead24bc6c8fdf827631e58f35b2de5e0305a8201dffc",
                    "sha256:f7fb3dff3740496b0320eb4454a7492ad1aee1b8c6812a0ba64a1049b85b3212",
                    "sha256:5bbd13001d346b9c5caf2717151ad15d52ba898ce5da337f3b07f92431a9e128",
                    "sha256:38fb8914d86a1c992a88482d3a339776de7b5001766389d0c30961c0390ea664"
                ]
            }
        },
        "nd15.10": {
            "architecture": "amd64",
            "config": {
                "Hostname": "ca9015dc6bb1",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9ceacdf7c4648c8bbc9fb38c5647e94109a60f4d24b63ec5fa6de4a4cdfb2426",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "container": "fdac6bbd902f6b1446bd284abe07ba74cb47b807bff3f9474bbef38a8bb83103",
            "container_config": {
                "Hostname": "ca9015dc6bb1",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "apt-key adv --recv-keys --keyserver pgp.mit.edu 0xA5D32F012649A5A9"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9ceacdf7c4648c8bbc9fb38c5647e94109a60f4d24b63ec5fa6de4a4cdfb2426",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2016-07-22T17:58:31.232043247Z",
            "docker_version": "1.10.3",
            "history": [
                {
                    "created": "2016-07-08T18:39:16.468883148Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d5d47c6a963e950e735765bfaf16851fc7297115de6c17bdd61148288e5b8873 in /"
                },
                {
                    "created": "2016-07-22T15:19:09.514770186Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2016-07-22T15:19:11.200996745Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2016-07-22T15:19:12.895625947Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2016-07-22T15:19:13.510288415Z",
                    "created_by": "/bin/sh -c #(nop) CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2016-07-22T17:58:25.711933425Z",
                    "created_by": "/bin/sh -c echo 'deb http://neuro.debian.net/debian wily main' > /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2016-07-22T17:58:27.357448222Z",
                    "created_by": "/bin/sh -c echo 'deb http://neuro.debian.net/debian data main' >> /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2016-07-22T17:58:29.093594715Z",
                    "created_by": "/bin/sh -c echo '#deb-src http://neuro.debian.net/debian-devel wily main' >> /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2016-07-22T17:58:31.232043247Z",
                    "created_by": "/bin/sh -c apt-key adv --recv-keys --keyserver pgp.mit.edu 0xA5D32F012649A5A9"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f121afdbbd5dd49d4a88c402b1a1a4dca39c9ae75ed7f80a29ffd9739fc680a7",
                    "sha256:4b955941a4d0bfa4d3eed9ab5cf8e03479ece47a3f0c154439e93230b08a8048",
                    "sha256:af288f00b8a7386eadb431dddd75e0f75f129994e89cfa424a00cfc9c8a89c95",
                    "sha256:98d59071f692a7a8b02acfea340f4e63b8801d8914812df05334e4b264de2fdb",
                    "sha256:a3fd5258c34952a04f51946fa1f12abdd98066e8f215490a0496c5aafdc803dc",
                    "sha256:4ffccd8b16cea0b692f195cc27753522e35ea1eccc854e2517df8f2d81e2eaf1",
                    "sha256:c36f03e3cd2d0bffda9c38eefc754755f979e96d932f5021bef949d175748fc6",
                    "sha256:468cb019d6cb9290be2580dd4eb8b3dc8890fc4a6b5ada2a199859375fd3f257"
                ]
            }
        },
        "nd16.04": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:fa2b6d5b1a9c048bad7ddea16d9d22ed4013978a8508a5392c6afc7bf39e551d",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "5bcfb0c5c575d71fcc5d50f9c3e3af6b94cd4a184ab696caa59a0e09200d7c45",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                ],
                "Image": "sha256:fa2b6d5b1a9c048bad7ddea16d9d22ed4013978a8508a5392c6afc7bf39e551d",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2022-03-16T17:27:24.2318994Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2021-08-31T01:21:27.577690932Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:11b425d4c08e81a3e0cb2e0345d27cd5fc844dd83f1096af4cc05f635824ff5d in / "
                },
                {
                    "created": "2021-08-31T01:21:28.751673238Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-08-31T01:21:29.65334794Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-08-31T01:21:30.454442334Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-08-31T01:21:30.672229355Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-31T03:57:30.752706374Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& { \t\twhich gpg \t\t|| apt-get install -y --no-install-recommends gnupg \t; } \t&& { \t\tgpg --version | grep -q '^gpg (GnuPG) 1\\.' \t\t|| apt-get install -y --no-install-recommends dirmngr \t; } \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-16T17:27:09.469512206Z",
                    "created_by": "/bin/sh -c set -x \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver keyserver.ubuntu.com --recv-keys DD95CC430502E37EF840ACEEA5D32F012649A5A9 \t&& gpg --batch --export DD95CC430502E37EF840ACEEA5D32F012649A5A9 > /etc/apt/trusted.gpg.d/neurodebian.gpg \t&& rm -rf \"$GNUPGHOME\" \t&& apt-key list | grep neurodebian"
                },
                {
                    "created": "2022-03-16T17:27:10.012646041Z",
                    "created_by": "/bin/sh -c { \techo 'deb http://neuro.debian.net/debian xenial main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel xenial main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2022-03-16T17:27:24.2318994Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:be96a3f634de79f523f07c7e4e0216c28af45eb5776e7a6238a2392f71e01069",
                    "sha256:df54c846128da3c71cc11b2150a3df39ec86fb170e299765daf6bb016a0705c2",
                    "sha256:47ef83afae74745639f6738a05fe5320fcfca9e6c7765fba4f25e270bc0df9dc",
                    "sha256:1251204ef8fc20da275e09f6e3ab9205421d4ff34732f2d50a1d3e86d2995edd",
                    "sha256:cbd813a4f938af0e275b4fc100fb123b5e58927c1c04341f9b71ef10744f0ddf",
                    "sha256:3ba37269469d46862966af4d785f653c7c8762a296dcd45833ba5acf676488c2",
                    "sha256:e606cf68ad8eedad0af0a18671659267f57bb4a17ba43c6941cbc79f827e2e45",
                    "sha256:86051f5e43e38a951819c68cd1084241e052b93f31768d6b67af3ff4aac9fefc"
                ]
            }
        },
        "nd16.04-non-free": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:b60902017c278b0db41b17f8f1de27469127d1ea4898b2469f52647585af6120",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "858b4c6ca726f0d13ecaa3fa1d6bea9cb683ba0a1ad83bba6b113c55d4348750",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "[ -e /etc/apt/sources.list.d/debian.sources ] && srcs=/etc/apt/sources.list.d/debian.sources || srcs=/etc/apt/sources.list; sed -i -e 's,main *$,main contrib non-free,g' /etc/apt/sources.list.d/neurodebian.sources.list; grep -q 'deb .* multiverse$' $srcs || sed -i -e 's,universe *$,universe multiverse,g' $srcs"
                ],
                "Image": "sha256:b60902017c278b0db41b17f8f1de27469127d1ea4898b2469f52647585af6120",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2022-07-19T19:53:37.675398437Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2021-08-31T01:21:27.577690932Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:11b425d4c08e81a3e0cb2e0345d27cd5fc844dd83f1096af4cc05f635824ff5d in / "
                },
                {
                    "created": "2021-08-31T01:21:28.751673238Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-08-31T01:21:29.65334794Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-08-31T01:21:30.454442334Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-08-31T01:21:30.672229355Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-31T03:57:30.752706374Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& { \t\twhich gpg \t\t|| apt-get install -y --no-install-recommends gnupg \t; } \t&& { \t\tgpg --version | grep -q '^gpg (GnuPG) 1\\.' \t\t|| apt-get install -y --no-install-recommends dirmngr \t; } \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-16T17:27:09.469512206Z",
                    "created_by": "/bin/sh -c set -x \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver keyserver.ubuntu.com --recv-keys DD95CC430502E37EF840ACEEA5D32F012649A5A9 \t&& gpg --batch --export DD95CC430502E37EF840ACEEA5D32F012649A5A9 > /etc/apt/trusted.gpg.d/neurodebian.gpg \t&& rm -rf \"$GNUPGHOME\" \t&& apt-key list | grep neurodebian"
                },
                {
                    "created": "2022-03-16T17:27:10.012646041Z",
                    "created_by": "/bin/sh -c { \techo 'deb http://neuro.debian.net/debian xenial main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel xenial main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2022-03-16T17:27:24.2318994Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-07-19T19:53:37.675398437Z",
                    "created_by": "/bin/sh -c [ -e /etc/apt/sources.list.d/debian.sources ] && srcs=/etc/apt/sources.list.d/debian.sources || srcs=/etc/apt/sources.list; sed -i -e 's,main *$,main contrib non-free,g' /etc/apt/sources.list.d/neurodebian.sources.list; grep -q 'deb .* multiverse$' $srcs || sed -i -e 's,universe *$,universe multiverse,g' $srcs"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:be96a3f634de79f523f07c7e4e0216c28af45eb5776e7a6238a2392f71e01069",
                    "sha256:df54c846128da3c71cc11b2150a3df39ec86fb170e299765daf6bb016a0705c2",
                    "sha256:47ef83afae74745639f6738a05fe5320fcfca9e6c7765fba4f25e270bc0df9dc",
                    "sha256:1251204ef8fc20da275e09f6e3ab9205421d4ff34732f2d50a1d3e86d2995edd",
                    "sha256:cbd813a4f938af0e275b4fc100fb123b5e58927c1c04341f9b71ef10744f0ddf",
                    "sha256:3ba37269469d46862966af4d785f653c7c8762a296dcd45833ba5acf676488c2",
                    "sha256:e606cf68ad8eedad0af0a18671659267f57bb4a17ba43c6941cbc79f827e2e45",
                    "sha256:86051f5e43e38a951819c68cd1084241e052b93f31768d6b67af3ff4aac9fefc",
                    "sha256:18506bdd21d58172bfb31f75dee197cbe937f5c5763e83859a37d0b0fa61d2e2"
                ]
            }
        },
        "nd16.10": {
            "architecture": "amd64",
            "config": {
                "Hostname": "184d26dca371",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f6b451abdd3d84468331fa89761b1c9e9146dad6a64ae4b9fa797c98a70d8845",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "container": "d486b031d6d1b261857006ca6bd666661144d75a0d1fd33febb58aa561fcb73c",
            "container_config": {
                "Hostname": "184d26dca371",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "{ \techo 'deb http://neuro.debian.net/debian yakkety main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel yakkety main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f6b451abdd3d84468331fa89761b1c9e9146dad6a64ae4b9fa797c98a70d8845",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2017-07-23T18:17:31.675280143Z",
            "docker_version": "17.03.2-ce",
            "history": [
                {
                    "created": "2017-07-20T17:15:38.885687263Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6cd9e0a52cd1520005b0cfac3ca7e19b37e4c6f053561015a554c51619617f6f in / "
                },
                {
                    "created": "2017-07-20T17:15:44.510182868Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2017-07-20T17:15:45.612397252Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-07-20T17:15:53.69264668Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2017-07-20T17:15:54.862037997Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2017-07-20T17:15:55.309261093Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-07-23T18:17:28.301598271Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& { \t\twhich gpg \t\t|| apt-get install -y --no-install-recommends gnupg2 \t\t|| apt-get install -y --no-install-recommends gnupg \t; } \t&& { \t\tgpg --version | grep -q '^gpg (GnuPG) 1\\.' \t\t|| apt-get install -y --no-install-recommends dirmngr \t; } \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-07-23T18:17:31.031067242Z",
                    "created_by": "/bin/sh -c set -x \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --keyserver ha.pool.sks-keyservers.net --recv-keys DD95CC430502E37EF840ACEEA5D32F012649A5A9 \t&& gpg --export DD95CC430502E37EF840ACEEA5D32F012649A5A9 > /etc/apt/trusted.gpg.d/neurodebian.gpg \t&& rm -rf \"$GNUPGHOME\" \t&& apt-key list | grep neurodebian"
                },
                {
                    "created": "2017-07-23T18:17:31.675280143Z",
                    "created_by": "/bin/sh -c { \techo 'deb http://neuro.debian.net/debian yakkety main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel yakkety main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:57145c01eb80040fdd0a24cde20af4788605b49593188d4f7efab099af89a08e",
                    "sha256:31eed92f5a2397a9d2c2fec3af6083ca87939a4bcb347d68a58053e5fa40fa52",
                    "sha256:47a3ebbaa6445cee2aac1137894508bf7e994ee42a386c81c16eed931318f2e6",
                    "sha256:0ba4c05a8843756515ec38b4866a27c1cee8e3171574a9727c21ae7619a9781e",
                    "sha256:fcc11235a44151d2f468d120476b1512e6ce2c8206fa184deb28ab85973bb308",
                    "sha256:4b178d408d96caf1aefcff927719487c5f2e00982210ef306b337e19ccf86ed2",
                    "sha256:c376513150650081479d4042fcb09ef43510f51cbcae2b71da3ada3cd561fa57",
                    "sha256:470d986983320e738beea1e1c8f5a369eca8e22c4612ca53b8f073f5e0a2cd83"
                ]
            }
        },
        "nd17.04": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ebafcf15d703d7f40027e21b07d7d49a24f736957a0c09d594a6e339be8599c9",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "c263c36295701d4d56d63e6b6d972a63c550ef92078d745383100217c1117058",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "{ \techo 'deb http://neuro.debian.net/debian zesty main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel zesty main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ebafcf15d703d7f40027e21b07d7d49a24f736957a0c09d594a6e339be8599c9",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "created": "2017-12-14T22:21:16.26318279Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2017-12-14T21:00:08.343973378Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:796db5dd87a82ef3448e235015cbe46f6e917199753ab9fa0a7fc03d14da91b0 in / "
                },
                {
                    "created": "2017-12-14T21:00:09.105240401Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2017-12-14T21:00:09.781714006Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-12-14T21:00:10.466356993Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2017-12-14T21:00:11.114828681Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2017-12-14T21:00:11.319127622Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-14T22:21:10.099733605Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& { \t\twhich gpg \t\t|| apt-get install -y --no-install-recommends gnupg \t; } \t&& { \t\tgpg --version | grep -q '^gpg (GnuPG) 1\\.' \t\t|| apt-get install -y --no-install-recommends dirmngr \t; } \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-12-14T22:21:15.584574188Z",
                    "created_by": "/bin/sh -c set -x \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --keyserver ha.pool.sks-keyservers.net --recv-keys DD95CC430502E37EF840ACEEA5D32F012649A5A9 \t&& gpg --export DD95CC430502E37EF840ACEEA5D32F012649A5A9 > /etc/apt/trusted.gpg.d/neurodebian.gpg \t&& rm -rf \"$GNUPGHOME\" \t&& apt-key list | grep neurodebian"
                },
                {
                    "created": "2017-12-14T22:21:16.26318279Z",
                    "created_by": "/bin/sh -c { \techo 'deb http://neuro.debian.net/debian zesty main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel zesty main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:db8686e0ca43015a6a569c70f236a40f2a5292b9c416e83359bb4106536cc1e6",
                    "sha256:803030df23c1ac16f7546a8633ca5419c5aab233094e14c24ff4ea9f82dcead0",
                    "sha256:ba76b502dc9b0d1e0024cf79efcb9560f0ec1d8bb80f3cd05ddb0aebeedd7da2",
                    "sha256:b8e5935ae7cc48a3c6099f60efaef29b6dfea0ddd487c70359e4cd542dc98fca",
                    "sha256:3ff70ce53dac920467a9da893b0a2e93ff6920b93613dc1c6f76c075aae43371",
                    "sha256:2db477df849316e4b5fe089c1364d92b594e625a44ab6adcd5dd2644a08cd4b8",
                    "sha256:5b4e484825f318f1bef0c57043322955030979dce38753de9aeb5651086477cf",
                    "sha256:8635655cb65e855a00eb559b865d8eccee7936085dc6af6fffa4328921c7a584"
                ]
            }
        },
        "nd17.04-non-free": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f980c44174e17e1342b91b017934fc4074b191e4c0601ea2077be2889b4d016f",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "0b4ce0b350aa852b1a0d78301176976c6f45572d525e4307a2ebcd7ea7c9bb46",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "sed -i -e 's,main *$,main contrib non-free,g' /etc/apt/sources.list.d/neurodebian.sources.list; grep -q 'deb .* multiverse$' /etc/apt/sources.list || sed -i -e 's,universe *$,universe multiverse,g' /etc/apt/sources.list"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f980c44174e17e1342b91b017934fc4074b191e4c0601ea2077be2889b4d016f",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "created": "2017-12-14T22:21:26.982463489Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2017-12-14T21:00:08.343973378Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:796db5dd87a82ef3448e235015cbe46f6e917199753ab9fa0a7fc03d14da91b0 in / "
                },
                {
                    "created": "2017-12-14T21:00:09.105240401Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2017-12-14T21:00:09.781714006Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-12-14T21:00:10.466356993Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2017-12-14T21:00:11.114828681Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2017-12-14T21:00:11.319127622Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-14T22:21:10.099733605Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& { \t\twhich gpg \t\t|| apt-get install -y --no-install-recommends gnupg \t; } \t&& { \t\tgpg --version | grep -q '^gpg (GnuPG) 1\\.' \t\t|| apt-get install -y --no-install-recommends dirmngr \t; } \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-12-14T22:21:15.584574188Z",
                    "created_by": "/bin/sh -c set -x \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --keyserver ha.pool.sks-keyservers.net --recv-keys DD95CC430502E37EF840ACEEA5D32F012649A5A9 \t&& gpg --export DD95CC430502E37EF840ACEEA5D32F012649A5A9 > /etc/apt/trusted.gpg.d/neurodebian.gpg \t&& rm -rf \"$GNUPGHOME\" \t&& apt-key list | grep neurodebian"
                },
                {
                    "created": "2017-12-14T22:21:16.26318279Z",
                    "created_by": "/bin/sh -c { \techo 'deb http://neuro.debian.net/debian zesty main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel zesty main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2017-12-14T22:21:26.982463489Z",
                    "created_by": "/bin/sh -c sed -i -e 's,main *$,main contrib non-free,g' /etc/apt/sources.list.d/neurodebian.sources.list; grep -q 'deb .* multiverse$' /etc/apt/sources.list || sed -i -e 's,universe *$,universe multiverse,g' /etc/apt/sources.list"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:db8686e0ca43015a6a569c70f236a40f2a5292b9c416e83359bb4106536cc1e6",
                    "sha256:803030df23c1ac16f7546a8633ca5419c5aab233094e14c24ff4ea9f82dcead0",
                    "sha256:ba76b502dc9b0d1e0024cf79efcb9560f0ec1d8bb80f3cd05ddb0aebeedd7da2",
                    "sha256:b8e5935ae7cc48a3c6099f60efaef29b6dfea0ddd487c70359e4cd542dc98fca",
                    "sha256:3ff70ce53dac920467a9da893b0a2e93ff6920b93613dc1c6f76c075aae43371",
                    "sha256:2db477df849316e4b5fe089c1364d92b594e625a44ab6adcd5dd2644a08cd4b8",
                    "sha256:5b4e484825f318f1bef0c57043322955030979dce38753de9aeb5651086477cf",
                    "sha256:8635655cb65e855a00eb559b865d8eccee7936085dc6af6fffa4328921c7a584",
                    "sha256:fd6ec54004e0b5e6add9a4ddb17a5f826525db5e2171a68ca60d72f28ad840b0"
                ]
            }
        },
        "nd17.10": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e4a48d10802d8beb3acdba3ab18a4150fd85a49cefe9a5faf9fa289d21e3f813",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "cbb6d6716361af0119c4e4c77ae3ea2fd679b25c5c99b9144dc86555cf2a8627",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "{ \techo 'deb http://neuro.debian.net/debian artful main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel artful main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e4a48d10802d8beb3acdba3ab18a4150fd85a49cefe9a5faf9fa289d21e3f813",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "created": "2018-09-05T00:44:25.846445484Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-05T00:44:22.34936838Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& { \t\twhich gpg \t\t|| apt-get install -y --no-install-recommends gnupg \t; } \t&& { \t\tgpg --version | grep -q '^gpg (GnuPG) 1\\.' \t\t|| apt-get install -y --no-install-recommends dirmngr \t; } \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-09-05T00:44:25.051174821Z",
                    "created_by": "/bin/sh -c set -x \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --keyserver ha.pool.sks-keyservers.net --recv-keys DD95CC430502E37EF840ACEEA5D32F012649A5A9 \t&& gpg --export DD95CC430502E37EF840ACEEA5D32F012649A5A9 > /etc/apt/trusted.gpg.d/neurodebian.gpg \t&& rm -rf \"$GNUPGHOME\" \t&& apt-key list | grep neurodebian"
                },
                {
                    "created": "2018-09-05T00:44:25.846445484Z",
                    "created_by": "/bin/sh -c { \techo 'deb http://neuro.debian.net/debian artful main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel artful main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:65b95a7b6358ca4b313989d98c4ee20669b4ae7333728b86ce1c49275013af5f",
                    "sha256:6b3b9644bf5b42e2c38d94646b88df091db3dcf8d2529f45f570708f5c0f0322",
                    "sha256:119bcf5124d6cd1c5c36730a7081ecd64a2b59a83e197c1a5a27fc90a102f348"
                ]
            }
        },
        "nd17.10-non-free": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e5dc42008de5385a83530a80b28e75987a111a6bcf918735c97d886d8a5aee9d",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "5361c22ca0b7b16dc438846baf8a85116a3fbbdc05d94c08682036094e57d704",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "sed -i -e 's,main *$,main contrib non-free,g' /etc/apt/sources.list.d/neurodebian.sources.list; grep -q 'deb .* multiverse$' /etc/apt/sources.list || sed -i -e 's,universe *$,universe multiverse,g' /etc/apt/sources.list"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e5dc42008de5385a83530a80b28e75987a111a6bcf918735c97d886d8a5aee9d",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "created": "2018-09-05T00:44:31.954132074Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-05T00:44:22.34936838Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& { \t\twhich gpg \t\t|| apt-get install -y --no-install-recommends gnupg \t; } \t&& { \t\tgpg --version | grep -q '^gpg (GnuPG) 1\\.' \t\t|| apt-get install -y --no-install-recommends dirmngr \t; } \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-09-05T00:44:25.051174821Z",
                    "created_by": "/bin/sh -c set -x \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --keyserver ha.pool.sks-keyservers.net --recv-keys DD95CC430502E37EF840ACEEA5D32F012649A5A9 \t&& gpg --export DD95CC430502E37EF840ACEEA5D32F012649A5A9 > /etc/apt/trusted.gpg.d/neurodebian.gpg \t&& rm -rf \"$GNUPGHOME\" \t&& apt-key list | grep neurodebian"
                },
                {
                    "created": "2018-09-05T00:44:25.846445484Z",
                    "created_by": "/bin/sh -c { \techo 'deb http://neuro.debian.net/debian artful main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel artful main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2018-09-05T00:44:31.954132074Z",
                    "created_by": "/bin/sh -c sed -i -e 's,main *$,main contrib non-free,g' /etc/apt/sources.list.d/neurodebian.sources.list; grep -q 'deb .* multiverse$' /etc/apt/sources.list || sed -i -e 's,universe *$,universe multiverse,g' /etc/apt/sources.list"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:65b95a7b6358ca4b313989d98c4ee20669b4ae7333728b86ce1c49275013af5f",
                    "sha256:6b3b9644bf5b42e2c38d94646b88df091db3dcf8d2529f45f570708f5c0f0322",
                    "sha256:119bcf5124d6cd1c5c36730a7081ecd64a2b59a83e197c1a5a27fc90a102f348",
                    "sha256:8baea1b938515353e956a52ee0a1f6682bdec8ea39205632c9c74926e13929c2"
                ]
            }
        },
        "nd18.04": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:51c4887ae02cf4ee945b95d9c6202dddc411f0718b67d22d57e82dd13ef2e647",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "18.04"
                }
            },
            "container": "d16272a83caf01941e7b0e23eddddd25c0d861bbdadfbcacc930dd591803ad56",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                ],
                "Image": "sha256:51c4887ae02cf4ee945b95d9c6202dddc411f0718b67d22d57e82dd13ef2e647",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "18.04"
                }
            },
            "created": "2023-06-02T01:34:48.844126076Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2023-05-30T09:32:07.458866408Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:32:07.512060632Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:32:07.566627883Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:32:07.623484379Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=18.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:32:09.125568601Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3c74e7e08cbf9a87694ce6fa541af617599680fa54d9e48556fc0fbc120b4a83 in / "
                },
                {
                    "created": "2023-05-30T09:32:09.432301537Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-02T01:34:41.27771239Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& { \t\twhich gpg \t\t|| apt-get install -y --no-install-recommends gnupg \t; } \t&& { \t\tgpg --version | grep -q '^gpg (GnuPG) 1\\.' \t\t|| apt-get install -y --no-install-recommends dirmngr \t; } \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-06-02T01:34:42.668744757Z",
                    "created_by": "/bin/sh -c set -x \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver keyserver.ubuntu.com --recv-keys DD95CC430502E37EF840ACEEA5D32F012649A5A9 \t&& gpg --batch --export DD95CC430502E37EF840ACEEA5D32F012649A5A9 > /etc/apt/trusted.gpg.d/neurodebian.gpg \t&& rm -rf \"$GNUPGHOME\" \t&& apt-key list | grep neurodebian"
                },
                {
                    "created": "2023-06-02T01:34:43.201499415Z",
                    "created_by": "/bin/sh -c { \techo 'deb http://neuro.debian.net/debian bionic main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel bionic main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2023-06-02T01:34:48.844126076Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:548a79621a426b4eb077c926eabac5a8620c454fb230640253e1b44dc7dd7562",
                    "sha256:89e2f57b4381e9ff21ac4d2a622645878165f2108e8f8af3734082d1990e41f1",
                    "sha256:671f176caef7945cef018429769d2b65802152a7bc04b2b881d18f6baa7a6465",
                    "sha256:2a46a22d9a80a7143520523ac360c2b651f662de422c6e1b56dfe97ed9deed0a",
                    "sha256:887dc6727de650caf2958a21b19db28be0bef6e673e9e6050edbad325ba21008"
                ]
            }
        },
        "nd18.04-non-free": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:e54202678ffa323cabbfa7d9142d688755ff6767f3a44607c1eb821edd05ac91",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "18.04"
                }
            },
            "container": "69e79eecd1752aa45568c314fa6e9caeb02d16ca25c367b9c1a148a869bd4358",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "[ -e /etc/apt/sources.list.d/debian.sources ] && srcs=/etc/apt/sources.list.d/debian.sources || srcs=/etc/apt/sources.list; sed -i -e 's,main *$,main contrib non-free,g' /etc/apt/sources.list.d/neurodebian.sources.list; grep -q 'deb .* multiverse$' $srcs || sed -i -e 's,universe *$,universe multiverse,g' $srcs"
                ],
                "Image": "sha256:e54202678ffa323cabbfa7d9142d688755ff6767f3a44607c1eb821edd05ac91",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "18.04"
                }
            },
            "created": "2023-06-02T01:34:53.174851857Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2023-05-30T09:32:07.458866408Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:32:07.512060632Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:32:07.566627883Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:32:07.623484379Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=18.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:32:09.125568601Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3c74e7e08cbf9a87694ce6fa541af617599680fa54d9e48556fc0fbc120b4a83 in / "
                },
                {
                    "created": "2023-05-30T09:32:09.432301537Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-02T01:34:41.27771239Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& { \t\twhich gpg \t\t|| apt-get install -y --no-install-recommends gnupg \t; } \t&& { \t\tgpg --version | grep -q '^gpg (GnuPG) 1\\.' \t\t|| apt-get install -y --no-install-recommends dirmngr \t; } \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-06-02T01:34:42.668744757Z",
                    "created_by": "/bin/sh -c set -x \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver keyserver.ubuntu.com --recv-keys DD95CC430502E37EF840ACEEA5D32F012649A5A9 \t&& gpg --batch --export DD95CC430502E37EF840ACEEA5D32F012649A5A9 > /etc/apt/trusted.gpg.d/neurodebian.gpg \t&& rm -rf \"$GNUPGHOME\" \t&& apt-key list | grep neurodebian"
                },
                {
                    "created": "2023-06-02T01:34:43.201499415Z",
                    "created_by": "/bin/sh -c { \techo 'deb http://neuro.debian.net/debian bionic main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel bionic main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2023-06-02T01:34:48.844126076Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-06-02T01:34:53.174851857Z",
                    "created_by": "/bin/sh -c [ -e /etc/apt/sources.list.d/debian.sources ] && srcs=/etc/apt/sources.list.d/debian.sources || srcs=/etc/apt/sources.list; sed -i -e 's,main *$,main contrib non-free,g' /etc/apt/sources.list.d/neurodebian.sources.list; grep -q 'deb .* multiverse$' $srcs || sed -i -e 's,universe *$,universe multiverse,g' $srcs"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:548a79621a426b4eb077c926eabac5a8620c454fb230640253e1b44dc7dd7562",
                    "sha256:89e2f57b4381e9ff21ac4d2a622645878165f2108e8f8af3734082d1990e41f1",
                    "sha256:671f176caef7945cef018429769d2b65802152a7bc04b2b881d18f6baa7a6465",
                    "sha256:2a46a22d9a80a7143520523ac360c2b651f662de422c6e1b56dfe97ed9deed0a",
                    "sha256:887dc6727de650caf2958a21b19db28be0bef6e673e9e6050edbad325ba21008",
                    "sha256:452332fe10a25c1d226fab3df5f8fed0e4d4b71ae0e7ab4586a055f567ca2426"
                ]
            }
        },
        "nd18.10": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:45bdaec17db0ea174020380bc89457c328c4130f69d2aa6be345a3debf9ef506",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "9e182aed124acbbe05b09b64c31a3aa9b3954e5669b9d78dc14154f2fff26b92",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:45bdaec17db0ea174020380bc89457c328c4130f69d2aa6be345a3debf9ef506",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2019-07-23T15:44:28.079312032Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-07-23T15:21:30.934008049Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:13804c7325ebaad3133476c32ab4fa9676abc0550ebc6fb555283ddee2bfe24a in / "
                },
                {
                    "created": "2019-07-23T15:21:31.722791296Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2019-07-23T15:21:32.400166669Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-07-23T15:21:33.118640352Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-07-23T15:21:33.295626375Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-23T15:44:21.793768824Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& { \t\twhich gpg \t\t|| apt-get install -y --no-install-recommends gnupg \t; } \t&& { \t\tgpg --version | grep -q '^gpg (GnuPG) 1\\.' \t\t|| apt-get install -y --no-install-recommends dirmngr \t; } \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-07-23T15:44:22.699355858Z",
                    "created_by": "/bin/sh -c set -x \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys DD95CC430502E37EF840ACEEA5D32F012649A5A9 \t&& gpg --batch --export DD95CC430502E37EF840ACEEA5D32F012649A5A9 > /etc/apt/trusted.gpg.d/neurodebian.gpg \t&& rm -rf \"$GNUPGHOME\" \t&& apt-key list | grep neurodebian"
                },
                {
                    "created": "2019-07-23T15:44:23.402624906Z",
                    "created_by": "/bin/sh -c { \techo 'deb http://neuro.debian.net/debian cosmic main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel cosmic main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2019-07-23T15:44:28.079312032Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d33f208862dd35ea0d843ea338eedf2b5504220e0bc9aa2275a86f97241b2d9b",
                    "sha256:7027b2a028fc02466d63aefcca83a1f7e457dcd7c8be434c1d9933c17633e3bc",
                    "sha256:2181ca10496e8fcdb10a2ff5fe0af0e6f4616beecce178f6fd6b499a14083e1a",
                    "sha256:e338c474bd3b9f2dd78c2970dfe0a3b5f7df11886fccb02579911bfa5c0e8823",
                    "sha256:aa7f15869ab822600c77bf978a95f1966ac2ee59a66ef328cb33bfeba8ff48d7",
                    "sha256:f8fc4420f7a5aa99e0768cac423124231d1cbfc9ed562fadc1a19726954a2fcb",
                    "sha256:79c9838fddab8bc9b0a9d489f320928112082c9332e3673df755bd516a28e6e0",
                    "sha256:78b45069d54fc9bc2345edbd9212a5dfd7bab85f82eecda67fc6d53596cde6d9"
                ]
            }
        },
        "nd18.10-non-free": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:fedcb35153f4b46c5007deddc745d6c8103e4bcaafd9c2b239dbf6ea81be0755",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "90ded0e36bbad16f1ebab3a787f4b4ba7ad2447cf9273d7896d59ba1ccad1572",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "sed -i -e 's,main *$,main contrib non-free,g' /etc/apt/sources.list.d/neurodebian.sources.list; grep -q 'deb .* multiverse$' /etc/apt/sources.list || sed -i -e 's,universe *$,universe multiverse,g' /etc/apt/sources.list"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:fedcb35153f4b46c5007deddc745d6c8103e4bcaafd9c2b239dbf6ea81be0755",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2019-07-23T15:44:32.642696453Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-07-23T15:21:30.934008049Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:13804c7325ebaad3133476c32ab4fa9676abc0550ebc6fb555283ddee2bfe24a in / "
                },
                {
                    "created": "2019-07-23T15:21:31.722791296Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2019-07-23T15:21:32.400166669Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-07-23T15:21:33.118640352Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-07-23T15:21:33.295626375Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-23T15:44:21.793768824Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& { \t\twhich gpg \t\t|| apt-get install -y --no-install-recommends gnupg \t; } \t&& { \t\tgpg --version | grep -q '^gpg (GnuPG) 1\\.' \t\t|| apt-get install -y --no-install-recommends dirmngr \t; } \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-07-23T15:44:22.699355858Z",
                    "created_by": "/bin/sh -c set -x \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys DD95CC430502E37EF840ACEEA5D32F012649A5A9 \t&& gpg --batch --export DD95CC430502E37EF840ACEEA5D32F012649A5A9 > /etc/apt/trusted.gpg.d/neurodebian.gpg \t&& rm -rf \"$GNUPGHOME\" \t&& apt-key list | grep neurodebian"
                },
                {
                    "created": "2019-07-23T15:44:23.402624906Z",
                    "created_by": "/bin/sh -c { \techo 'deb http://neuro.debian.net/debian cosmic main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel cosmic main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2019-07-23T15:44:28.079312032Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-07-23T15:44:32.642696453Z",
                    "created_by": "/bin/sh -c sed -i -e 's,main *$,main contrib non-free,g' /etc/apt/sources.list.d/neurodebian.sources.list; grep -q 'deb .* multiverse$' /etc/apt/sources.list || sed -i -e 's,universe *$,universe multiverse,g' /etc/apt/sources.list"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d33f208862dd35ea0d843ea338eedf2b5504220e0bc9aa2275a86f97241b2d9b",
                    "sha256:7027b2a028fc02466d63aefcca83a1f7e457dcd7c8be434c1d9933c17633e3bc",
                    "sha256:2181ca10496e8fcdb10a2ff5fe0af0e6f4616beecce178f6fd6b499a14083e1a",
                    "sha256:e338c474bd3b9f2dd78c2970dfe0a3b5f7df11886fccb02579911bfa5c0e8823",
                    "sha256:aa7f15869ab822600c77bf978a95f1966ac2ee59a66ef328cb33bfeba8ff48d7",
                    "sha256:f8fc4420f7a5aa99e0768cac423124231d1cbfc9ed562fadc1a19726954a2fcb",
                    "sha256:79c9838fddab8bc9b0a9d489f320928112082c9332e3673df755bd516a28e6e0",
                    "sha256:78b45069d54fc9bc2345edbd9212a5dfd7bab85f82eecda67fc6d53596cde6d9",
                    "sha256:ffb60c5185988dff339ba71c9dc3265f228ff8a4555a509437ea035ae766aa0c"
                ]
            }
        },
        "nd19.04": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:05da62c21eb0b4511e52fbcb441b0a5cad83a38f303cbcc5db76f75ff86789ff",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "70e261ada56b5065c143ed45d608d964b3e6ecb30dace91cae259b52a94e7f79",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:05da62c21eb0b4511e52fbcb441b0a5cad83a38f303cbcc5db76f75ff86789ff",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2020-01-16T02:50:49.011752592Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2020-01-16T01:20:44.575307418Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:98c7df2bed4738dded17ef3fc4dd8f3b1e1d1d742a0245c9f1e518daea8e445e in / "
                },
                {
                    "created": "2020-01-16T01:20:45.383335345Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-01-16T01:20:46.068449313Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-01-16T01:20:46.764713103Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-01-16T01:20:46.938732934Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-16T02:50:42.518311847Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& { \t\twhich gpg \t\t|| apt-get install -y --no-install-recommends gnupg \t; } \t&& { \t\tgpg --version | grep -q '^gpg (GnuPG) 1\\.' \t\t|| apt-get install -y --no-install-recommends dirmngr \t; } \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-01-16T02:50:43.43041442Z",
                    "created_by": "/bin/sh -c set -x \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys DD95CC430502E37EF840ACEEA5D32F012649A5A9 \t&& gpg --batch --export DD95CC430502E37EF840ACEEA5D32F012649A5A9 > /etc/apt/trusted.gpg.d/neurodebian.gpg \t&& rm -rf \"$GNUPGHOME\" \t&& apt-key list | grep neurodebian"
                },
                {
                    "created": "2020-01-16T02:50:44.146620602Z",
                    "created_by": "/bin/sh -c { \techo 'deb http://neuro.debian.net/debian disco main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel disco main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2020-01-16T02:50:49.011752592Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:873cbe4bd21ee6f6ea264cfc50c0b35b0c3a00e2be3f82b30884c3b9da5db2db",
                    "sha256:363295e4406ae5b7cd0fa135a9c608204bc707229b5f720918f750046bb91e88",
                    "sha256:8ac4be6e0e4bc6c95feb8f6d0c314c91969b5ef7149a25a95f466aa77b185548",
                    "sha256:311180c0cfcf0c31f0c20044db3aa160c702d0aaf78bb4430e25ebb8e905e817",
                    "sha256:f84303077703acbc8d341fe77eeaa16bcf4a17f4376ebd820b1341fdec09a3c6",
                    "sha256:1376f2d222a0cd31f09ff4da1f67bb63b0cd3bc770bdf74e6b724a1859e83571",
                    "sha256:32209b375a724c31a40aba5da08ccd14e345a486c0e21967efc2b5ba1f4f7c46",
                    "sha256:07e5a2d5f93f4d19a8c66321e859f30506ae5d7bb16eee4e351fc69814490b69"
                ]
            }
        },
        "nd19.04-non-free": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6a0d73da3d53e313743e9c22d77eb6c1ec2933510686556950afc964887eb1b7",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "5e196265908fe11833ec93314cf3816143cbfffd361d2220d3d21b98d0200e69",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "sed -i -e 's,main *$,main contrib non-free,g' /etc/apt/sources.list.d/neurodebian.sources.list; grep -q 'deb .* multiverse$' /etc/apt/sources.list || sed -i -e 's,universe *$,universe multiverse,g' /etc/apt/sources.list"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6a0d73da3d53e313743e9c22d77eb6c1ec2933510686556950afc964887eb1b7",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2020-01-16T02:50:57.750836091Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2020-01-16T01:20:44.575307418Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:98c7df2bed4738dded17ef3fc4dd8f3b1e1d1d742a0245c9f1e518daea8e445e in / "
                },
                {
                    "created": "2020-01-16T01:20:45.383335345Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-01-16T01:20:46.068449313Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-01-16T01:20:46.764713103Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-01-16T01:20:46.938732934Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-16T02:50:42.518311847Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& { \t\twhich gpg \t\t|| apt-get install -y --no-install-recommends gnupg \t; } \t&& { \t\tgpg --version | grep -q '^gpg (GnuPG) 1\\.' \t\t|| apt-get install -y --no-install-recommends dirmngr \t; } \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-01-16T02:50:43.43041442Z",
                    "created_by": "/bin/sh -c set -x \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys DD95CC430502E37EF840ACEEA5D32F012649A5A9 \t&& gpg --batch --export DD95CC430502E37EF840ACEEA5D32F012649A5A9 > /etc/apt/trusted.gpg.d/neurodebian.gpg \t&& rm -rf \"$GNUPGHOME\" \t&& apt-key list | grep neurodebian"
                },
                {
                    "created": "2020-01-16T02:50:44.146620602Z",
                    "created_by": "/bin/sh -c { \techo 'deb http://neuro.debian.net/debian disco main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel disco main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2020-01-16T02:50:49.011752592Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-01-16T02:50:57.750836091Z",
                    "created_by": "/bin/sh -c sed -i -e 's,main *$,main contrib non-free,g' /etc/apt/sources.list.d/neurodebian.sources.list; grep -q 'deb .* multiverse$' /etc/apt/sources.list || sed -i -e 's,universe *$,universe multiverse,g' /etc/apt/sources.list"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:873cbe4bd21ee6f6ea264cfc50c0b35b0c3a00e2be3f82b30884c3b9da5db2db",
                    "sha256:363295e4406ae5b7cd0fa135a9c608204bc707229b5f720918f750046bb91e88",
                    "sha256:8ac4be6e0e4bc6c95feb8f6d0c314c91969b5ef7149a25a95f466aa77b185548",
                    "sha256:311180c0cfcf0c31f0c20044db3aa160c702d0aaf78bb4430e25ebb8e905e817",
                    "sha256:f84303077703acbc8d341fe77eeaa16bcf4a17f4376ebd820b1341fdec09a3c6",
                    "sha256:1376f2d222a0cd31f09ff4da1f67bb63b0cd3bc770bdf74e6b724a1859e83571",
                    "sha256:32209b375a724c31a40aba5da08ccd14e345a486c0e21967efc2b5ba1f4f7c46",
                    "sha256:07e5a2d5f93f4d19a8c66321e859f30506ae5d7bb16eee4e351fc69814490b69",
                    "sha256:b60a0896ece2cbefafcc33200fc85864e9deb9d736a6664ed765af0ee8abae89"
                ]
            }
        },
        "nd20.04": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:3c813c5c7f79af48004c5b6d39090aeba923fe131a09e63dfa34070db97802bc",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "20.04"
                }
            },
            "container": "acd501f4da4bb18f5a3ebd89983bf7de0a245baa02589cb3afefabbece911268",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                ],
                "Image": "sha256:3c813c5c7f79af48004c5b6d39090aeba923fe131a09e63dfa34070db97802bc",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "20.04"
                }
            },
            "created": "2024-05-02T02:33:28.745535874Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-04-27T14:03:39.495375794Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:03:39.518457955Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:03:39.540231445Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:03:39.564669578Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=20.04",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:03:41.34852592Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e5742fae181dc02a419e48d202fdd6a561b79ccbe7d3415e15e3d2c12e444a2a in / "
                },
                {
                    "created": "2024-04-27T14:03:41.56764926Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:33:21.254226864Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& { \t\twhich gpg \t\t|| apt-get install -y --no-install-recommends gnupg \t; } \t&& { \t\tgpg --version | grep -q '^gpg (GnuPG) 1\\.' \t\t|| apt-get install -y --no-install-recommends dirmngr \t; } \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-02T02:33:22.674923024Z",
                    "created_by": "/bin/sh -c set -x \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver keyserver.ubuntu.com --recv-keys DD95CC430502E37EF840ACEEA5D32F012649A5A9 \t&& gpg --batch --export DD95CC430502E37EF840ACEEA5D32F012649A5A9 > /etc/apt/trusted.gpg.d/neurodebian.gpg \t&& rm -rf \"$GNUPGHOME\" \t&& apt-key list | grep neurodebian"
                },
                {
                    "created": "2024-05-02T02:33:23.185633631Z",
                    "created_by": "/bin/sh -c { \techo 'deb http://neuro.debian.net/debian focal main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel focal main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2024-05-02T02:33:28.745535874Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4a1518ebc26e2e4c26f1c5d78a36d41d87d2fd4a7e4ad37c5f9033f2eb52f26b",
                    "sha256:8f55a2e6ff07fa743eddbdae739ce66af9b61043ed6338b24e46b0a521f35ef4",
                    "sha256:a00340299fe440626a675947dafe58ca84f31fffc3af9954acdab23436aa7dd0",
                    "sha256:f14e1f7331a8b3f0fcb29f2d94f6327549a85a548b61e4fe43b86b39f5e9755e",
                    "sha256:b8a2064f4e658fcfbd018650550744115b8fe46b8356c7c28100ad176fef0df2"
                ]
            }
        },
        "nd20.04-non-free": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:19022d18292ceafa850c5900b934d0a368787b6a3e397a2b80082c1b95836ea4",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "20.04"
                }
            },
            "container": "31fbf710cb3f238c4f7ef5e4989b423f04d67abcdc1dbbf3f6d9f51ae85fdc8e",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "[ -e /etc/apt/sources.list.d/debian.sources ] && srcs=/etc/apt/sources.list.d/debian.sources || srcs=/etc/apt/sources.list; sed -i -e 's,main *$,main contrib non-free,g' /etc/apt/sources.list.d/neurodebian.sources.list; grep -q 'deb .* multiverse$' $srcs || sed -i -e 's,universe *$,universe multiverse,g' $srcs"
                ],
                "Image": "sha256:19022d18292ceafa850c5900b934d0a368787b6a3e397a2b80082c1b95836ea4",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "20.04"
                }
            },
            "created": "2024-05-02T02:33:32.048473432Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-04-27T14:03:39.495375794Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:03:39.518457955Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:03:39.540231445Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:03:39.564669578Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=20.04",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:03:41.34852592Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e5742fae181dc02a419e48d202fdd6a561b79ccbe7d3415e15e3d2c12e444a2a in / "
                },
                {
                    "created": "2024-04-27T14:03:41.56764926Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:33:21.254226864Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& { \t\twhich gpg \t\t|| apt-get install -y --no-install-recommends gnupg \t; } \t&& { \t\tgpg --version | grep -q '^gpg (GnuPG) 1\\.' \t\t|| apt-get install -y --no-install-recommends dirmngr \t; } \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-02T02:33:22.674923024Z",
                    "created_by": "/bin/sh -c set -x \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver keyserver.ubuntu.com --recv-keys DD95CC430502E37EF840ACEEA5D32F012649A5A9 \t&& gpg --batch --export DD95CC430502E37EF840ACEEA5D32F012649A5A9 > /etc/apt/trusted.gpg.d/neurodebian.gpg \t&& rm -rf \"$GNUPGHOME\" \t&& apt-key list | grep neurodebian"
                },
                {
                    "created": "2024-05-02T02:33:23.185633631Z",
                    "created_by": "/bin/sh -c { \techo 'deb http://neuro.debian.net/debian focal main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel focal main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2024-05-02T02:33:28.745535874Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-02T02:33:32.048473432Z",
                    "created_by": "/bin/sh -c [ -e /etc/apt/sources.list.d/debian.sources ] && srcs=/etc/apt/sources.list.d/debian.sources || srcs=/etc/apt/sources.list; sed -i -e 's,main *$,main contrib non-free,g' /etc/apt/sources.list.d/neurodebian.sources.list; grep -q 'deb .* multiverse$' $srcs || sed -i -e 's,universe *$,universe multiverse,g' $srcs"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4a1518ebc26e2e4c26f1c5d78a36d41d87d2fd4a7e4ad37c5f9033f2eb52f26b",
                    "sha256:8f55a2e6ff07fa743eddbdae739ce66af9b61043ed6338b24e46b0a521f35ef4",
                    "sha256:a00340299fe440626a675947dafe58ca84f31fffc3af9954acdab23436aa7dd0",
                    "sha256:f14e1f7331a8b3f0fcb29f2d94f6327549a85a548b61e4fe43b86b39f5e9755e",
                    "sha256:b8a2064f4e658fcfbd018650550744115b8fe46b8356c7c28100ad176fef0df2",
                    "sha256:6bb57daa14aeacefbd8f40f88896b4a4d0bf4d900d6909de2fde7bd23ab7b47f"
                ]
            }
        },
        "nd20.10": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:e0008bc936724b63405392efcded5175188c0a3c556a5d5e295baba86e0cf0c8",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "7407de67e4776e753fb895b9ffddade5a99a4490f7878100f5b37f8d817c0a4a",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                ],
                "Image": "sha256:e0008bc936724b63405392efcded5175188c0a3c556a5d5e295baba86e0cf0c8",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2021-07-27T00:14:49.196519891Z",
            "docker_version": "20.10.7",
            "history": [
                {
                    "created": "2021-07-26T21:21:47.309451832Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:23ff7ae476ddf97e5dbaf417c06418ae4d8d49a88acb92738bf03fb4a22eeca3 in / "
                },
                {
                    "created": "2021-07-26T21:21:47.708101697Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-27T00:14:42.661973685Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& { \t\twhich gpg \t\t|| apt-get install -y --no-install-recommends gnupg \t; } \t&& { \t\tgpg --version | grep -q '^gpg (GnuPG) 1\\.' \t\t|| apt-get install -y --no-install-recommends dirmngr \t; } \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-07-27T00:14:44.065199296Z",
                    "created_by": "/bin/sh -c set -x \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys DD95CC430502E37EF840ACEEA5D32F012649A5A9 \t&& gpg --batch --export DD95CC430502E37EF840ACEEA5D32F012649A5A9 > /etc/apt/trusted.gpg.d/neurodebian.gpg \t&& rm -rf \"$GNUPGHOME\" \t&& apt-key list | grep neurodebian"
                },
                {
                    "created": "2021-07-27T00:14:44.842939117Z",
                    "created_by": "/bin/sh -c { \techo 'deb http://neuro.debian.net/debian groovy main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel groovy main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2021-07-27T00:14:49.196519891Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c7b30e8af03a4ee5b1bd49e5a92630fa850f742da311b9c635ead8ccf642d03b",
                    "sha256:a5f270b9fb14b6a3d1a6f59b8072dd3bd6893690b672699497e15609cb121a53",
                    "sha256:05443fe54f065463b5aca92a5ff389769431ff2f57c9a53ebc0ad3eb8e260b3f",
                    "sha256:652760a2a0a6143407b877f2a51f3d841c890309e50ee59d87a821a958b717ef",
                    "sha256:f661e1f25c9bc35f5633dfbaad8c7332ba8a907b4b74aaa0055e6a8f9f587237"
                ]
            }
        },
        "nd20.10-non-free": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:26bb0425f6d5672b1459a2513346efe4d6d883c4ab4b1788c4f0cac04baf61f8",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "78039bbdf96dc837a88c1f3b5456fec160f5bd8fe8d4edadf69abe4a2b077e16",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "sed -i -e 's,main *$,main contrib non-free,g' /etc/apt/sources.list.d/neurodebian.sources.list; grep -q 'deb .* multiverse$' /etc/apt/sources.list || sed -i -e 's,universe *$,universe multiverse,g' /etc/apt/sources.list"
                ],
                "Image": "sha256:26bb0425f6d5672b1459a2513346efe4d6d883c4ab4b1788c4f0cac04baf61f8",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2021-07-27T00:14:59.960199764Z",
            "docker_version": "20.10.7",
            "history": [
                {
                    "created": "2021-07-26T21:21:47.309451832Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:23ff7ae476ddf97e5dbaf417c06418ae4d8d49a88acb92738bf03fb4a22eeca3 in / "
                },
                {
                    "created": "2021-07-26T21:21:47.708101697Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-27T00:14:42.661973685Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& { \t\twhich gpg \t\t|| apt-get install -y --no-install-recommends gnupg \t; } \t&& { \t\tgpg --version | grep -q '^gpg (GnuPG) 1\\.' \t\t|| apt-get install -y --no-install-recommends dirmngr \t; } \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-07-27T00:14:44.065199296Z",
                    "created_by": "/bin/sh -c set -x \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys DD95CC430502E37EF840ACEEA5D32F012649A5A9 \t&& gpg --batch --export DD95CC430502E37EF840ACEEA5D32F012649A5A9 > /etc/apt/trusted.gpg.d/neurodebian.gpg \t&& rm -rf \"$GNUPGHOME\" \t&& apt-key list | grep neurodebian"
                },
                {
                    "created": "2021-07-27T00:14:44.842939117Z",
                    "created_by": "/bin/sh -c { \techo 'deb http://neuro.debian.net/debian groovy main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel groovy main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2021-07-27T00:14:49.196519891Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-07-27T00:14:59.960199764Z",
                    "created_by": "/bin/sh -c sed -i -e 's,main *$,main contrib non-free,g' /etc/apt/sources.list.d/neurodebian.sources.list; grep -q 'deb .* multiverse$' /etc/apt/sources.list || sed -i -e 's,universe *$,universe multiverse,g' /etc/apt/sources.list"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c7b30e8af03a4ee5b1bd49e5a92630fa850f742da311b9c635ead8ccf642d03b",
                    "sha256:a5f270b9fb14b6a3d1a6f59b8072dd3bd6893690b672699497e15609cb121a53",
                    "sha256:05443fe54f065463b5aca92a5ff389769431ff2f57c9a53ebc0ad3eb8e260b3f",
                    "sha256:652760a2a0a6143407b877f2a51f3d841c890309e50ee59d87a821a958b717ef",
                    "sha256:f661e1f25c9bc35f5633dfbaad8c7332ba8a907b4b74aaa0055e6a8f9f587237",
                    "sha256:44d7bb89a10433308eda04b0a5f1740de521621ea254e14d8b4026e66ace8352"
                ]
            }
        },
        "nd21.04": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:a53230a2f91cfbacbdacf619eb490dd009ab07423b78c2b70c73d838245b6665",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f582405d3e3b3ae9274b35be8264f9d78601e4f170b48248ac2772bc7ec4d535",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                ],
                "Image": "sha256:a53230a2f91cfbacbdacf619eb490dd009ab07423b78c2b70c73d838245b6665",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2022-02-02T07:57:35.678687692Z",
            "docker_version": "20.10.7",
            "history": [
                {
                    "created": "2022-02-02T02:14:55.796869148Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4cb90f4b06e581fee87fc3dd2291619028b279592d7fbb97885669d1fb7e89e8 in / "
                },
                {
                    "created": "2022-02-02T02:14:56.344576Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-02T07:56:49.276967637Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& { \t\twhich gpg \t\t|| apt-get install -y --no-install-recommends gnupg \t; } \t&& { \t\tgpg --version | grep -q '^gpg (GnuPG) 1\\.' \t\t|| apt-get install -y --no-install-recommends dirmngr \t; } \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-02-02T07:57:30.124633586Z",
                    "created_by": "/bin/sh -c set -x \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys DD95CC430502E37EF840ACEEA5D32F012649A5A9 \t&& gpg --batch --export DD95CC430502E37EF840ACEEA5D32F012649A5A9 > /etc/apt/trusted.gpg.d/neurodebian.gpg \t&& rm -rf \"$GNUPGHOME\" \t&& apt-key list | grep neurodebian"
                },
                {
                    "created": "2022-02-02T07:57:30.895463135Z",
                    "created_by": "/bin/sh -c { \techo 'deb http://neuro.debian.net/debian hirsute main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel hirsute main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2022-02-02T07:57:35.678687692Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:dca6a631e9bb9c6504724239850a6cb4e788ebdc85c6acff20ccdf89c047e0fc",
                    "sha256:a64d657d69fae03e247ef7676fd62d96da04604273c4f5de82a0b64a80607669",
                    "sha256:2073d44d4756aad237f7e637476e36dbda611f5ed87d8c845e8ba920fb2c2c97",
                    "sha256:b095646dfd8c8355d6a30d2c2b5ad91abb5e2811f0301cf2416d3b5d3044e7cb",
                    "sha256:1ce96d6fa48ac7baec8d1b4ab5e47a32a69891ae52df7badf82d547d1e248b8d"
                ]
            }
        },
        "nd21.04-non-free": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:00afef9c4f9f768e261ea882f092c0f49c804cf64fadec70e419aebe3ea0edb3",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "ced5970bae3042effe996eb546d71632f7486aaf0a60bd15b8a3af48319745e0",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "sed -i -e 's,main *$,main contrib non-free,g' /etc/apt/sources.list.d/neurodebian.sources.list; grep -q 'deb .* multiverse$' /etc/apt/sources.list || sed -i -e 's,universe *$,universe multiverse,g' /etc/apt/sources.list"
                ],
                "Image": "sha256:00afef9c4f9f768e261ea882f092c0f49c804cf64fadec70e419aebe3ea0edb3",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2022-02-02T07:57:48.972113784Z",
            "docker_version": "20.10.7",
            "history": [
                {
                    "created": "2022-02-02T02:14:55.796869148Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4cb90f4b06e581fee87fc3dd2291619028b279592d7fbb97885669d1fb7e89e8 in / "
                },
                {
                    "created": "2022-02-02T02:14:56.344576Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-02T07:56:49.276967637Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& { \t\twhich gpg \t\t|| apt-get install -y --no-install-recommends gnupg \t; } \t&& { \t\tgpg --version | grep -q '^gpg (GnuPG) 1\\.' \t\t|| apt-get install -y --no-install-recommends dirmngr \t; } \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-02-02T07:57:30.124633586Z",
                    "created_by": "/bin/sh -c set -x \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys DD95CC430502E37EF840ACEEA5D32F012649A5A9 \t&& gpg --batch --export DD95CC430502E37EF840ACEEA5D32F012649A5A9 > /etc/apt/trusted.gpg.d/neurodebian.gpg \t&& rm -rf \"$GNUPGHOME\" \t&& apt-key list | grep neurodebian"
                },
                {
                    "created": "2022-02-02T07:57:30.895463135Z",
                    "created_by": "/bin/sh -c { \techo 'deb http://neuro.debian.net/debian hirsute main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel hirsute main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2022-02-02T07:57:35.678687692Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-02-02T07:57:48.972113784Z",
                    "created_by": "/bin/sh -c sed -i -e 's,main *$,main contrib non-free,g' /etc/apt/sources.list.d/neurodebian.sources.list; grep -q 'deb .* multiverse$' /etc/apt/sources.list || sed -i -e 's,universe *$,universe multiverse,g' /etc/apt/sources.list"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:dca6a631e9bb9c6504724239850a6cb4e788ebdc85c6acff20ccdf89c047e0fc",
                    "sha256:a64d657d69fae03e247ef7676fd62d96da04604273c4f5de82a0b64a80607669",
                    "sha256:2073d44d4756aad237f7e637476e36dbda611f5ed87d8c845e8ba920fb2c2c97",
                    "sha256:b095646dfd8c8355d6a30d2c2b5ad91abb5e2811f0301cf2416d3b5d3044e7cb",
                    "sha256:1ce96d6fa48ac7baec8d1b4ab5e47a32a69891ae52df7badf82d547d1e248b8d",
                    "sha256:df09c3f8ba838227726bbcc5d2f09558ccf5583678fa96969afa0d3d0027b305"
                ]
            }
        },
        "nd21.10": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:e89af2dd342f6bb4ab380b7bf9a70691d18b73eb8ab18be79bc8188390a37e16",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "8a5ad3a778df477459900dbb9a3fb345c2695a0a8f5c637dd1cf89daacd1ad70",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                ],
                "Image": "sha256:e89af2dd342f6bb4ab380b7bf9a70691d18b73eb8ab18be79bc8188390a37e16",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2022-06-07T00:38:19.683746438Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-06-06T22:21:18.858949665Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d6b83520d39d5b64128115fc97a16a462c38d8e06ef69baad724eda9da91f934 in / "
                },
                {
                    "created": "2022-06-06T22:21:19.310066598Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-07T00:38:13.507009405Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& { \t\twhich gpg \t\t|| apt-get install -y --no-install-recommends gnupg \t; } \t&& { \t\tgpg --version | grep -q '^gpg (GnuPG) 1\\.' \t\t|| apt-get install -y --no-install-recommends dirmngr \t; } \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-07T00:38:14.708877847Z",
                    "created_by": "/bin/sh -c set -x \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver keyserver.ubuntu.com --recv-keys DD95CC430502E37EF840ACEEA5D32F012649A5A9 \t&& gpg --batch --export DD95CC430502E37EF840ACEEA5D32F012649A5A9 > /etc/apt/trusted.gpg.d/neurodebian.gpg \t&& rm -rf \"$GNUPGHOME\" \t&& apt-key list | grep neurodebian"
                },
                {
                    "created": "2022-06-07T00:38:15.240266258Z",
                    "created_by": "/bin/sh -c { \techo 'deb http://neuro.debian.net/debian impish main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel impish main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2022-06-07T00:38:19.683746438Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:80d20ffd08f4ffaac6989ef7aba7b484d01152df833a1eb9504852150022e9b4",
                    "sha256:85ef447345d805cf1aff08f2f2d7d4a3bf31346ddcb8fdda7095347ee2dba40e",
                    "sha256:f7661b84c18bf6c392791b184798ff38cb46583cade659fe0e372234b42fed83",
                    "sha256:32415b1054e996fe07018f7f0f97e327799daf001ba44496ddb390a80a4d1418",
                    "sha256:52b6d03aa7aa270726cd1012dd5b6c4f7a53042c724e97f5c23888b24c2909dd"
                ]
            }
        },
        "nd21.10-non-free": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:57e017fc712553f899766998fdb9db30eee355df9033c23dd72ba12b43aa47eb",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "fb649af926b252a91bcde3ade1b738267d23f00eee01fe15017aed0048e2e090",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "[ -e /etc/apt/sources.list.d/debian.sources ] && srcs=/etc/apt/sources.list.d/debian.sources || srcs=/etc/apt/sources.list; sed -i -e 's,main *$,main contrib non-free,g' /etc/apt/sources.list.d/neurodebian.sources.list; grep -q 'deb .* multiverse$' $srcs || sed -i -e 's,universe *$,universe multiverse,g' $srcs"
                ],
                "Image": "sha256:57e017fc712553f899766998fdb9db30eee355df9033c23dd72ba12b43aa47eb",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2022-07-19T19:53:52.636675279Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-06-06T22:21:18.858949665Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d6b83520d39d5b64128115fc97a16a462c38d8e06ef69baad724eda9da91f934 in / "
                },
                {
                    "created": "2022-06-06T22:21:19.310066598Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-07T00:38:13.507009405Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& { \t\twhich gpg \t\t|| apt-get install -y --no-install-recommends gnupg \t; } \t&& { \t\tgpg --version | grep -q '^gpg (GnuPG) 1\\.' \t\t|| apt-get install -y --no-install-recommends dirmngr \t; } \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-07T00:38:14.708877847Z",
                    "created_by": "/bin/sh -c set -x \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver keyserver.ubuntu.com --recv-keys DD95CC430502E37EF840ACEEA5D32F012649A5A9 \t&& gpg --batch --export DD95CC430502E37EF840ACEEA5D32F012649A5A9 > /etc/apt/trusted.gpg.d/neurodebian.gpg \t&& rm -rf \"$GNUPGHOME\" \t&& apt-key list | grep neurodebian"
                },
                {
                    "created": "2022-06-07T00:38:15.240266258Z",
                    "created_by": "/bin/sh -c { \techo 'deb http://neuro.debian.net/debian impish main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel impish main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2022-06-07T00:38:19.683746438Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-07-19T19:53:52.636675279Z",
                    "created_by": "/bin/sh -c [ -e /etc/apt/sources.list.d/debian.sources ] && srcs=/etc/apt/sources.list.d/debian.sources || srcs=/etc/apt/sources.list; sed -i -e 's,main *$,main contrib non-free,g' /etc/apt/sources.list.d/neurodebian.sources.list; grep -q 'deb .* multiverse$' $srcs || sed -i -e 's,universe *$,universe multiverse,g' $srcs"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:80d20ffd08f4ffaac6989ef7aba7b484d01152df833a1eb9504852150022e9b4",
                    "sha256:85ef447345d805cf1aff08f2f2d7d4a3bf31346ddcb8fdda7095347ee2dba40e",
                    "sha256:f7661b84c18bf6c392791b184798ff38cb46583cade659fe0e372234b42fed83",
                    "sha256:32415b1054e996fe07018f7f0f97e327799daf001ba44496ddb390a80a4d1418",
                    "sha256:52b6d03aa7aa270726cd1012dd5b6c4f7a53042c724e97f5c23888b24c2909dd",
                    "sha256:f80f8a22fd89185d50c75516ee3cd9fbf5133d611a3619aa1fb6e61915a15a7a"
                ]
            }
        },
        "nd22.04": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:8e1e8ce5c70f405c48554570ac5bdecf0830d8c2798cec40ac939ce42293e1d9",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                }
            },
            "container": "9e76ada0d2571bc8c261a7e4cf25e0d8403e6ca85e5b8474b897c3996ac9d60a",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                ],
                "Image": "sha256:8e1e8ce5c70f405c48554570ac5bdecf0830d8c2798cec40ac939ce42293e1d9",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                }
            },
            "created": "2024-05-02T02:34:00.482383481Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-04-27T13:18:35.154492474Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T13:18:35.173716357Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T13:18:35.206893769Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T13:18:35.24025223Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T13:18:37.180712343Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a5d32dc2ab15ff0d7dbd72af26e361eb1f3e87a0d29ec3a1ceab24ad7b3e6ba9 in / "
                },
                {
                    "created": "2024-04-27T13:18:37.512234142Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:33:53.451593096Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& { \t\twhich gpg \t\t|| apt-get install -y --no-install-recommends gnupg \t; } \t&& { \t\tgpg --version | grep -q '^gpg (GnuPG) 1\\.' \t\t|| apt-get install -y --no-install-recommends dirmngr \t; } \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-02T02:33:54.850685693Z",
                    "created_by": "/bin/sh -c set -x \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver keyserver.ubuntu.com --recv-keys DD95CC430502E37EF840ACEEA5D32F012649A5A9 \t&& gpg --batch --export DD95CC430502E37EF840ACEEA5D32F012649A5A9 > /etc/apt/trusted.gpg.d/neurodebian.gpg \t&& rm -rf \"$GNUPGHOME\" \t&& apt-key list | grep neurodebian"
                },
                {
                    "created": "2024-05-02T02:33:55.487692102Z",
                    "created_by": "/bin/sh -c { \techo 'deb http://neuro.debian.net/debian jammy main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel jammy main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2024-05-02T02:34:00.482383481Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:629ca62fb7c791374ce57626d6b8b62c76378be091a0daf1a60d32700b49add7",
                    "sha256:392065bd57c6c978d32a76332c16871d12b57b8d55c5904fa8cb16c98c9f3af2",
                    "sha256:5802d04e3ff0bcc49baac4df84d36d996683ad9bd00dc963c0ea0091a108fc53",
                    "sha256:cbb9dbad003e557b941f06c7954be4b5382a5c1b9cf777432eb4cda951226e08",
                    "sha256:07e82cd2e96046f3370630fcfaec7ba57e695b5b353513cac9bb7aba13579f88"
                ]
            }
        },
        "nd22.04-non-free": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:7744605e367e992e2da23c0d27aeeaba8400a1758d9a695f3120ab8ab7cd4c89",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                }
            },
            "container": "b48fc7d0eeec106c9064ed74c16934aab87532d88164561e0bf9297d56dbe826",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "[ -e /etc/apt/sources.list.d/debian.sources ] && srcs=/etc/apt/sources.list.d/debian.sources || srcs=/etc/apt/sources.list; sed -i -e 's,main *$,main contrib non-free,g' /etc/apt/sources.list.d/neurodebian.sources.list; grep -q 'deb .* multiverse$' $srcs || sed -i -e 's,universe *$,universe multiverse,g' $srcs"
                ],
                "Image": "sha256:7744605e367e992e2da23c0d27aeeaba8400a1758d9a695f3120ab8ab7cd4c89",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                }
            },
            "created": "2024-05-02T02:34:04.451556871Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-04-27T13:18:35.154492474Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T13:18:35.173716357Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T13:18:35.206893769Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T13:18:35.24025223Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T13:18:37.180712343Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a5d32dc2ab15ff0d7dbd72af26e361eb1f3e87a0d29ec3a1ceab24ad7b3e6ba9 in / "
                },
                {
                    "created": "2024-04-27T13:18:37.512234142Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T02:33:53.451593096Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& { \t\twhich gpg \t\t|| apt-get install -y --no-install-recommends gnupg \t; } \t&& { \t\tgpg --version | grep -q '^gpg (GnuPG) 1\\.' \t\t|| apt-get install -y --no-install-recommends dirmngr \t; } \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-02T02:33:54.850685693Z",
                    "created_by": "/bin/sh -c set -x \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver keyserver.ubuntu.com --recv-keys DD95CC430502E37EF840ACEEA5D32F012649A5A9 \t&& gpg --batch --export DD95CC430502E37EF840ACEEA5D32F012649A5A9 > /etc/apt/trusted.gpg.d/neurodebian.gpg \t&& rm -rf \"$GNUPGHOME\" \t&& apt-key list | grep neurodebian"
                },
                {
                    "created": "2024-05-02T02:33:55.487692102Z",
                    "created_by": "/bin/sh -c { \techo 'deb http://neuro.debian.net/debian jammy main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel jammy main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2024-05-02T02:34:00.482383481Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-02T02:34:04.451556871Z",
                    "created_by": "/bin/sh -c [ -e /etc/apt/sources.list.d/debian.sources ] && srcs=/etc/apt/sources.list.d/debian.sources || srcs=/etc/apt/sources.list; sed -i -e 's,main *$,main contrib non-free,g' /etc/apt/sources.list.d/neurodebian.sources.list; grep -q 'deb .* multiverse$' $srcs || sed -i -e 's,universe *$,universe multiverse,g' $srcs"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:629ca62fb7c791374ce57626d6b8b62c76378be091a0daf1a60d32700b49add7",
                    "sha256:392065bd57c6c978d32a76332c16871d12b57b8d55c5904fa8cb16c98c9f3af2",
                    "sha256:5802d04e3ff0bcc49baac4df84d36d996683ad9bd00dc963c0ea0091a108fc53",
                    "sha256:cbb9dbad003e557b941f06c7954be4b5382a5c1b9cf777432eb4cda951226e08",
                    "sha256:07e82cd2e96046f3370630fcfaec7ba57e695b5b353513cac9bb7aba13579f88",
                    "sha256:fe3aec1ac7083afa00bf6ed7217c8adeb9be80c36bd01ea7e18e480e079d53ce"
                ]
            }
        },
        "nd60": {
            "architecture": "amd64",
            "config": {
                "Hostname": "71f62d8ce24c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "378cf244526521142f2ba333f0457c17302267a333b46fc07e49c670bb7841a2",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "container": "7f57456a142fbb37ade9b1f09221aa630582b9d7894e707bdab43ab01f774724",
            "container_config": {
                "Hostname": "71f62d8ce24c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "apt-key adv --recv-keys --keyserver pgp.mit.edu 0xA5D32F012649A5A9"
                ],
                "Image": "378cf244526521142f2ba333f0457c17302267a333b46fc07e49c670bb7841a2",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2016-02-17T00:24:53.613599455Z",
            "docker_version": "1.9.1",
            "history": [
                {
                    "created": "2016-02-16T21:25:21.747984969Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:09d717d62608e18d79af6b6cd5aae36f675bd5c4f34452ab1693b56bfbfe2520 in /"
                },
                {
                    "created": "2016-02-16T21:25:24.035599122Z",
                    "created_by": "/bin/sh -c #(nop) CMD [\"/bin/bash\"]"
                },
                {
                    "created": "2016-02-17T00:24:48.95782193Z",
                    "created_by": "/bin/sh -c echo 'deb http://neuro.debian.net/debian squeeze main' > /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2016-02-17T00:24:50.345681858Z",
                    "created_by": "/bin/sh -c echo 'deb http://neuro.debian.net/debian data main' >> /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2016-02-17T00:24:51.790010352Z",
                    "created_by": "/bin/sh -c echo '#deb-src http://neuro.debian.net/debian-devel squeeze main' >> /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2016-02-17T00:24:53.613599455Z",
                    "created_by": "/bin/sh -c apt-key adv --recv-keys --keyserver pgp.mit.edu 0xA5D32F012649A5A9"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:085be35d9b38c9100656a58c1c3b952c110186ade2bf1e899cc951f7132a9584",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f4f98946463f93347ad73ee412d1ec25b0f449bdd3ffbb59d6c4c7ddb73a492d",
                    "sha256:4fac5c86d54197e1ad4528337cb8f72b6931d1f8cd90ae9de44a3e1c4477c255",
                    "sha256:9bccd77a19d142beb2712770d0dacc0d4bee45a270390337e21e4f022a8eafd3",
                    "sha256:fcc95d89469c3617f3b0c3ae7faf3947269a6a93e5f58e24e6280a3126dd774a"
                ]
            }
        },
        "nd70": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:81a08d340d89decc520130491485264f8e6e34365ed6efdcbda8a6c650235760",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "f313226d740c135527f37d1caf255a4ca7c2c0306694eb512039636723bf072d",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "{ \techo 'deb http://neuro.debian.net/debian wheezy main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel wheezy main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:81a08d340d89decc520130491485264f8e6e34365ed6efdcbda8a6c650235760",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "created": "2018-10-16T06:53:55.8025153Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-10-15T23:26:28.219753203Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5163482b7e1bd84981ddd31e96b6909dc030ab66fc6fe9f35882cdbe6eaba287 in / "
                },
                {
                    "created": "2018-10-15T23:26:28.530860604Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-16T06:53:54.435517162Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& { \t\twhich gpg \t\t|| apt-get install -y --no-install-recommends gnupg \t; } \t&& { \t\tgpg --version | grep -q '^gpg (GnuPG) 1\\.' \t\t|| apt-get install -y --no-install-recommends dirmngr \t; } \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-10-16T06:53:55.139514129Z",
                    "created_by": "/bin/sh -c set -x \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --keyserver ha.pool.sks-keyservers.net --recv-keys DD95CC430502E37EF840ACEEA5D32F012649A5A9 \t&& gpg --export DD95CC430502E37EF840ACEEA5D32F012649A5A9 > /etc/apt/trusted.gpg.d/neurodebian.gpg \t&& rm -rf \"$GNUPGHOME\" \t&& apt-key list | grep neurodebian"
                },
                {
                    "created": "2018-10-16T06:53:55.8025153Z",
                    "created_by": "/bin/sh -c { \techo 'deb http://neuro.debian.net/debian wheezy main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel wheezy main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6b24e385231b9cf6799755eae67714abcd484611c91e0d9ce1c2de1cb5667ae7",
                    "sha256:f8301149e8d7398ac044140d14f4f796785b11d00ceb20a21dbfe340b9bb0f6a",
                    "sha256:ad34e701339c141edca722f7dbcb9fd74a062da22740935747c5d15fd7d7a254",
                    "sha256:a3feb995121829383fdb24b935bf6f45b9a9b96aba65620bdd651fc08469de4f"
                ]
            }
        },
        "nd70-non-free": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6a20a66f2055620c455ff7121e685b5cf6b1168f6b5ec7df7aa19fb7958ee193",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "e321128fa678601eafea085a7cf6237758a13a8dd23c1c1324d92a7014f9cf31",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "sed -i -e 's,main *$,main contrib non-free,g' /etc/apt/sources.list.d/neurodebian.sources.list /etc/apt/sources.list"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6a20a66f2055620c455ff7121e685b5cf6b1168f6b5ec7df7aa19fb7958ee193",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "created": "2018-10-16T06:54:06.286407799Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-10-15T23:26:28.219753203Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5163482b7e1bd84981ddd31e96b6909dc030ab66fc6fe9f35882cdbe6eaba287 in / "
                },
                {
                    "created": "2018-10-15T23:26:28.530860604Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-16T06:53:54.435517162Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& { \t\twhich gpg \t\t|| apt-get install -y --no-install-recommends gnupg \t; } \t&& { \t\tgpg --version | grep -q '^gpg (GnuPG) 1\\.' \t\t|| apt-get install -y --no-install-recommends dirmngr \t; } \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-10-16T06:53:55.139514129Z",
                    "created_by": "/bin/sh -c set -x \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --keyserver ha.pool.sks-keyservers.net --recv-keys DD95CC430502E37EF840ACEEA5D32F012649A5A9 \t&& gpg --export DD95CC430502E37EF840ACEEA5D32F012649A5A9 > /etc/apt/trusted.gpg.d/neurodebian.gpg \t&& rm -rf \"$GNUPGHOME\" \t&& apt-key list | grep neurodebian"
                },
                {
                    "created": "2018-10-16T06:53:55.8025153Z",
                    "created_by": "/bin/sh -c { \techo 'deb http://neuro.debian.net/debian wheezy main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel wheezy main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2018-10-16T06:54:06.286407799Z",
                    "created_by": "/bin/sh -c sed -i -e 's,main *$,main contrib non-free,g' /etc/apt/sources.list.d/neurodebian.sources.list /etc/apt/sources.list"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6b24e385231b9cf6799755eae67714abcd484611c91e0d9ce1c2de1cb5667ae7",
                    "sha256:f8301149e8d7398ac044140d14f4f796785b11d00ceb20a21dbfe340b9bb0f6a",
                    "sha256:ad34e701339c141edca722f7dbcb9fd74a062da22740935747c5d15fd7d7a254",
                    "sha256:a3feb995121829383fdb24b935bf6f45b9a9b96aba65620bdd651fc08469de4f",
                    "sha256:8bc8d322e809693bb09246b874194ccfd0c344bcaa19834f255b12762e1e432b"
                ]
            }
        },
        "nd80": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:4b757f0270b9f5d26f12a9719e16c58c6b42a545235ab001336d08da7f6ff8c6",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "9ddc608359e3b638115fca1232b6aadbd06ae9b471378d5cd52429269ea8126d",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                ],
                "Image": "sha256:4b757f0270b9f5d26f12a9719e16c58c6b42a545235ab001336d08da7f6ff8c6",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2020-12-11T17:12:11.076353991Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-12-11T02:06:24.145764635Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e48eee8ab995f46a82f22f02d440c47dd43ef32a3571025bc45f86a2c91e7172 in / "
                },
                {
                    "created": "2020-12-11T02:06:25.153244847Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T17:09:59.720126089Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& { \t\twhich gpg \t\t|| apt-get install -y --no-install-recommends gnupg \t; } \t&& { \t\tgpg --version | grep -q '^gpg (GnuPG) 1\\.' \t\t|| apt-get install -y --no-install-recommends dirmngr \t; } \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-12-11T17:10:29.969535557Z",
                    "created_by": "/bin/sh -c set -x \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys DD95CC430502E37EF840ACEEA5D32F012649A5A9 \t&& gpg --batch --export DD95CC430502E37EF840ACEEA5D32F012649A5A9 > /etc/apt/trusted.gpg.d/neurodebian.gpg \t&& rm -rf \"$GNUPGHOME\" \t&& apt-key list | grep neurodebian"
                },
                {
                    "created": "2020-12-11T17:10:30.975905744Z",
                    "created_by": "/bin/sh -c { \techo 'deb http://neuro.debian.net/debian jessie main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel jessie main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2020-12-11T17:12:11.076353991Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:503aac83061aa88000ac78fab4a62c48b1e1cb3b1cc2cdb2f8347ccec39abfa9",
                    "sha256:a76edc688ef3a9ac32824f1221c322020a83224d9f224f6d94f9926b73db0778",
                    "sha256:6c808bec4c00477de36db060cd2853e58dfc2d07711fa70217d3ef99c7c0b714",
                    "sha256:52e1349cd4bd71a76d0f0666058e28436de7383011caa0571013a494d6d64b81",
                    "sha256:e3357f43220df5bf8e3731a49962327075dbc185a4b61ffa9f4064db4da38ba9"
                ]
            }
        },
        "nd80-non-free": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:99c2cbb8d7404f7d9a85232d3b0e1daec44e96ebf758d15977ccde8021ee48e7",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "9e27df4345b64e95682678e658c77b4e1349e2a057e71afb3d340f2b5dbf0836",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "sed -i -e 's,main *$,main contrib non-free,g' /etc/apt/sources.list.d/neurodebian.sources.list /etc/apt/sources.list"
                ],
                "Image": "sha256:99c2cbb8d7404f7d9a85232d3b0e1daec44e96ebf758d15977ccde8021ee48e7",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2020-12-11T17:12:15.872000727Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-12-11T02:06:24.145764635Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e48eee8ab995f46a82f22f02d440c47dd43ef32a3571025bc45f86a2c91e7172 in / "
                },
                {
                    "created": "2020-12-11T02:06:25.153244847Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T17:09:59.720126089Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& { \t\twhich gpg \t\t|| apt-get install -y --no-install-recommends gnupg \t; } \t&& { \t\tgpg --version | grep -q '^gpg (GnuPG) 1\\.' \t\t|| apt-get install -y --no-install-recommends dirmngr \t; } \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-12-11T17:10:29.969535557Z",
                    "created_by": "/bin/sh -c set -x \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys DD95CC430502E37EF840ACEEA5D32F012649A5A9 \t&& gpg --batch --export DD95CC430502E37EF840ACEEA5D32F012649A5A9 > /etc/apt/trusted.gpg.d/neurodebian.gpg \t&& rm -rf \"$GNUPGHOME\" \t&& apt-key list | grep neurodebian"
                },
                {
                    "created": "2020-12-11T17:10:30.975905744Z",
                    "created_by": "/bin/sh -c { \techo 'deb http://neuro.debian.net/debian jessie main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel jessie main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2020-12-11T17:12:11.076353991Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-12-11T17:12:15.872000727Z",
                    "created_by": "/bin/sh -c sed -i -e 's,main *$,main contrib non-free,g' /etc/apt/sources.list.d/neurodebian.sources.list /etc/apt/sources.list"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:503aac83061aa88000ac78fab4a62c48b1e1cb3b1cc2cdb2f8347ccec39abfa9",
                    "sha256:a76edc688ef3a9ac32824f1221c322020a83224d9f224f6d94f9926b73db0778",
                    "sha256:6c808bec4c00477de36db060cd2853e58dfc2d07711fa70217d3ef99c7c0b714",
                    "sha256:52e1349cd4bd71a76d0f0666058e28436de7383011caa0571013a494d6d64b81",
                    "sha256:e3357f43220df5bf8e3731a49962327075dbc185a4b61ffa9f4064db4da38ba9",
                    "sha256:c6b1b0691212c623f778d71bcc0caf2769dc1d0ec5428c1312f1edf287f1dc99"
                ]
            }
        },
        "nd90": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:1b6724221b75bff728daab70a749b3d9685e9c8f8298587dfc1e9df6cd4bcbbe",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "3a75f1947e9fd032097b7fb3ba1b41457ac5db3ae775328310bdf41c437aedf5",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                ],
                "Image": "sha256:1b6724221b75bff728daab70a749b3d9685e9c8f8298587dfc1e9df6cd4bcbbe",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2022-06-23T04:09:14.696743078Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-06-23T00:22:10.298769616Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4c5e0bec5f780d9c6bfbafcb9e6ed641781dd7f7c2853a0c49d6613e9fef9516 in / "
                },
                {
                    "created": "2022-06-23T00:22:10.793363229Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-23T04:09:07.044045278Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& { \t\twhich gpg \t\t|| apt-get install -y --no-install-recommends gnupg \t; } \t&& { \t\tgpg --version | grep -q '^gpg (GnuPG) 1\\.' \t\t|| apt-get install -y --no-install-recommends dirmngr \t; } \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-23T04:09:10.285875684Z",
                    "created_by": "/bin/sh -c set -x \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver keyserver.ubuntu.com --recv-keys DD95CC430502E37EF840ACEEA5D32F012649A5A9 \t&& gpg --batch --export DD95CC430502E37EF840ACEEA5D32F012649A5A9 > /etc/apt/trusted.gpg.d/neurodebian.gpg \t&& rm -rf \"$GNUPGHOME\" \t&& apt-key list | grep neurodebian"
                },
                {
                    "created": "2022-06-23T04:09:10.855308834Z",
                    "created_by": "/bin/sh -c { \techo 'deb http://neuro.debian.net/debian stretch main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel stretch main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2022-06-23T04:09:14.696743078Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:47dde6f41d1fcca77df950cac35c7103996a9333244a7406248c9b6898215469",
                    "sha256:28eeb7632ca204b5d0a88c3abf9929b8f98a622e3f72329eb0514db3f135f71e",
                    "sha256:edb3bb66cf9aaef0dcf1aa0b473dae2c39abdfb97cd138cf0032e8b7eb5a16a0",
                    "sha256:23845d06a0c3711f8c8bc4fd06922a1aec68a84e050937b29fe6ee1bdbb86f81",
                    "sha256:98def1aea10ed35042d3aaa8514d20cc916c9fd37962914c2def7b90e96837f3"
                ]
            }
        },
        "nd90-non-free": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:185c5bff05786bd3d11d21ca31760164f75a5b09c9450b12d40b814676b7a2f1",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "5e2c882c87250f85308bc0e44bd276a82c9731d90c8246641af5abdec6df1872",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "sed -i -e 's,main *$,main contrib non-free,g' /etc/apt/sources.list.d/neurodebian.sources.list /etc/apt/sources.list"
                ],
                "Image": "sha256:185c5bff05786bd3d11d21ca31760164f75a5b09c9450b12d40b814676b7a2f1",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2022-06-23T04:09:17.827132334Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-06-23T00:22:10.298769616Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4c5e0bec5f780d9c6bfbafcb9e6ed641781dd7f7c2853a0c49d6613e9fef9516 in / "
                },
                {
                    "created": "2022-06-23T00:22:10.793363229Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-23T04:09:07.044045278Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& { \t\twhich gpg \t\t|| apt-get install -y --no-install-recommends gnupg \t; } \t&& { \t\tgpg --version | grep -q '^gpg (GnuPG) 1\\.' \t\t|| apt-get install -y --no-install-recommends dirmngr \t; } \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-23T04:09:10.285875684Z",
                    "created_by": "/bin/sh -c set -x \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver keyserver.ubuntu.com --recv-keys DD95CC430502E37EF840ACEEA5D32F012649A5A9 \t&& gpg --batch --export DD95CC430502E37EF840ACEEA5D32F012649A5A9 > /etc/apt/trusted.gpg.d/neurodebian.gpg \t&& rm -rf \"$GNUPGHOME\" \t&& apt-key list | grep neurodebian"
                },
                {
                    "created": "2022-06-23T04:09:10.855308834Z",
                    "created_by": "/bin/sh -c { \techo 'deb http://neuro.debian.net/debian stretch main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel stretch main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2022-06-23T04:09:14.696743078Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-23T04:09:17.827132334Z",
                    "created_by": "/bin/sh -c sed -i -e 's,main *$,main contrib non-free,g' /etc/apt/sources.list.d/neurodebian.sources.list /etc/apt/sources.list"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:47dde6f41d1fcca77df950cac35c7103996a9333244a7406248c9b6898215469",
                    "sha256:28eeb7632ca204b5d0a88c3abf9929b8f98a622e3f72329eb0514db3f135f71e",
                    "sha256:edb3bb66cf9aaef0dcf1aa0b473dae2c39abdfb97cd138cf0032e8b7eb5a16a0",
                    "sha256:23845d06a0c3711f8c8bc4fd06922a1aec68a84e050937b29fe6ee1bdbb86f81",
                    "sha256:98def1aea10ed35042d3aaa8514d20cc916c9fd37962914c2def7b90e96837f3",
                    "sha256:285f9d48f3b54ec5751afd5c1ede6b9079d7bab8fa5216000729c83c12c1d3ea"
                ]
            }
        },
        "non-free": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:60d48442c482e88767dccfa96815d04b4e0d26a56ddc0ecf5a564d40321da00a",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "c2f9ca74098e6ae6ccb6d6f744e1e0c8a8600424711bbc81e78a6fb69d25b593",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "[ -e /etc/apt/sources.list.d/debian.sources ] && srcs=/etc/apt/sources.list.d/debian.sources || srcs=/etc/apt/sources.list; sed -i -e 's,main *$,main contrib non-free,g' /etc/apt/sources.list.d/neurodebian.sources.list $srcs"
                ],
                "Image": "sha256:60d48442c482e88767dccfa96815d04b4e0d26a56ddc0ecf5a564d40321da00a",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2024-05-14T14:46:21.79886586Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-05-14T01:28:14.312373541Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fc7856fc1fcc8bba68d0c729e34f64f4f113195167d677167a52eaa2c9760a19 in / "
                },
                {
                    "created": "2024-05-14T01:28:14.866817241Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:46:12.879288279Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& { \t\twhich gpg \t\t|| apt-get install -y --no-install-recommends gnupg \t; } \t&& { \t\tgpg --version | grep -q '^gpg (GnuPG) 1\\.' \t\t|| apt-get install -y --no-install-recommends dirmngr \t; } \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:46:14.217405495Z",
                    "created_by": "/bin/sh -c set -x \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver keyserver.ubuntu.com --recv-keys DD95CC430502E37EF840ACEEA5D32F012649A5A9 \t&& gpg --batch --export DD95CC430502E37EF840ACEEA5D32F012649A5A9 > /etc/apt/trusted.gpg.d/neurodebian.gpg \t&& rm -rf \"$GNUPGHOME\" \t&& apt-key list | grep neurodebian"
                },
                {
                    "created": "2024-05-14T14:46:14.750593926Z",
                    "created_by": "/bin/sh -c { \techo 'deb http://neuro.debian.net/debian bullseye main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel bullseye main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2024-05-14T14:46:18.273124259Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:46:21.79886586Z",
                    "created_by": "/bin/sh -c [ -e /etc/apt/sources.list.d/debian.sources ] && srcs=/etc/apt/sources.list.d/debian.sources || srcs=/etc/apt/sources.list; sed -i -e 's,main *$,main contrib non-free,g' /etc/apt/sources.list.d/neurodebian.sources.list $srcs"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:82677505c894548130a3c97e95faa57399f02ea2fb97667d934fd6b807ea7108",
                    "sha256:92463cdfea38436ffa53d8e79afedc9ab601c5f60c4c37846ef716404944c143",
                    "sha256:5bd6218eda44b23193a6be0ad9dd4539d8489e504f1e08239fd9ef91b8113bf5",
                    "sha256:84f8961e41faeb9569029300f0e6f08e9af44dac880fd557c410fb1e7d84118b",
                    "sha256:3989ddc6d2850cd471ac9776b5456a270b2de77000b3f561d4a52d0065f7fb40",
                    "sha256:66e8c4570ac65434cbdab01ae1da280704299f261269eb2d4ee1a10489fd5dd1"
                ]
            }
        },
        "precise": {
            "architecture": "amd64",
            "config": {
                "Hostname": "eb5b2868ea5d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:aa799db05f784778d693b843d366b4c3a21eac984b18a925a1332694136fda2b",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "container": "1c0148cf5214170d136c4c575ed4411daeb18b0ae2d5aa46bf10f2d39ef24016",
            "container_config": {
                "Hostname": "eb5b2868ea5d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "{ \techo 'deb http://neuro.debian.net/debian precise main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel precise main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:aa799db05f784778d693b843d366b4c3a21eac984b18a925a1332694136fda2b",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2017-04-13T16:57:43.608746806Z",
            "docker_version": "17.04.0-ce",
            "history": [
                {
                    "created": "2017-04-12T21:05:24.365202717Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6f12126281dd0028de93ca678c7a77561c8f4f7625315097fbd03a80f1d6020a in / "
                },
                {
                    "created": "2017-04-12T21:05:26.451371719Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2017-04-12T21:05:27.862743484Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-04-12T21:05:29.087104833Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2017-04-12T21:05:30.356729988Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2017-04-12T21:05:30.976274223Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-04-13T16:57:38.699243757Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& { \t\twhich gpg \t\t|| apt-get install -y --no-install-recommends gnupg2 \t\t|| apt-get install -y --no-install-recommends gnupg \t; } \t&& { \t\tgpg --version | grep -q '^gpg (GnuPG) 1\\.' \t\t|| apt-get install -y --no-install-recommends dirmngr \t; } \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-04-13T16:57:42.14650676Z",
                    "created_by": "/bin/sh -c set -x \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --keyserver ha.pool.sks-keyservers.net --recv-keys DD95CC430502E37EF840ACEEA5D32F012649A5A9 \t&& gpg --export DD95CC430502E37EF840ACEEA5D32F012649A5A9 > /etc/apt/trusted.gpg.d/neurodebian.gpg \t&& rm -r \"$GNUPGHOME\""
                },
                {
                    "created": "2017-04-13T16:57:43.608746806Z",
                    "created_by": "/bin/sh -c { \techo 'deb http://neuro.debian.net/debian precise main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel precise main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:58bcc73dcf4050a4955916a0dcb7e5f9c331bf547d31e22052f1b5fa16cf63f8",
                    "sha256:9dc188d975fd7c511e3e40db68fcc5eb6290df063f36998c956fd147163fd821",
                    "sha256:ee60293db08fc3111327cc7accc92798fd215ba7c148a6a7d6e1e3fd3b533efc",
                    "sha256:73b4683e66e8ba13317b022e51f16960e0d436df40a772611e4d17248a721771",
                    "sha256:3efd1f7c01f65eff325e5615c7b4913537017c633b0c83cba74f8ee1816df535",
                    "sha256:f04da8b1eb701d3f580e9bf9324f2a96b830c1457e70550aa57c24a84cd8fbf2",
                    "sha256:2d746c6596399c030559701353e6f05c8616292a78d6b8b21b48bc7072aabac5",
                    "sha256:45cda94ba3285c78effc0505737b843de96a40d9ba73e83c8359711f653e7168"
                ]
            }
        },
        "sid": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:202f73a2a832003d8b614595ad64d47a51ad4f1cc1b460d296234e34e13ab152",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "53000ccfb9a8280828f0263955bcbba3c7a087fdcd3e506329e237f3a4ec411c",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                ],
                "Image": "sha256:202f73a2a832003d8b614595ad64d47a51ad4f1cc1b460d296234e34e13ab152",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2024-05-14T14:47:02.314411175Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-05-14T01:29:36.1944077Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b10a84e4e404c6ca6a1a6782f9040f24bb7bfbb95055e8cd39600ef22a4a9284 in / "
                },
                {
                    "created": "2024-05-14T01:29:36.710877423Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:46:56.147843313Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& { \t\twhich gpg \t\t|| apt-get install -y --no-install-recommends gnupg \t; } \t&& { \t\tgpg --version | grep -q '^gpg (GnuPG) 1\\.' \t\t|| apt-get install -y --no-install-recommends dirmngr \t; } \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:46:57.63578334Z",
                    "created_by": "/bin/sh -c set -x \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver keyserver.ubuntu.com --recv-keys DD95CC430502E37EF840ACEEA5D32F012649A5A9 \t&& gpg --batch --export DD95CC430502E37EF840ACEEA5D32F012649A5A9 > /etc/apt/trusted.gpg.d/neurodebian.gpg \t&& rm -rf \"$GNUPGHOME\" \t&& apt-key list | grep neurodebian"
                },
                {
                    "created": "2024-05-14T14:46:58.17262112Z",
                    "created_by": "/bin/sh -c { \techo 'deb http://neuro.debian.net/debian sid main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel sid main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2024-05-14T14:47:02.314411175Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:678e6c87db0d22a9fd4bf4b8d8286ef39c95437540cdab90a377bf7cf09f9ef9",
                    "sha256:ec95801c991b00e75b8ade42b6ec2cf7842ed82acdee74f254db5bcfab5f3768",
                    "sha256:faaab260e9fb26428b584a04fc93fc36ed867809446f947a5ee210c58d936819",
                    "sha256:e4e6873783be3826aa7211e08924837921f56b19a6c410324decf7655d149c8f",
                    "sha256:4a2e6bf8ef6d09063005c42134e50252e0f882b928aa206d4aa767f47f8ec731"
                ]
            }
        },
        "sid-non-free": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:4d1517d1960ec1611d1f9ab01997c344fa3344f010ce98d0ca6f72c0b74095a4",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f53fa51757db6b87b1355eb36cd69b1cca5be8eff950b925e02f01ddf9df39fc",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "[ -e /etc/apt/sources.list.d/debian.sources ] && srcs=/etc/apt/sources.list.d/debian.sources || srcs=/etc/apt/sources.list; sed -i -e 's,main *$,main contrib non-free,g' /etc/apt/sources.list.d/neurodebian.sources.list $srcs"
                ],
                "Image": "sha256:4d1517d1960ec1611d1f9ab01997c344fa3344f010ce98d0ca6f72c0b74095a4",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2024-05-14T14:47:07.01628749Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-05-14T01:29:36.1944077Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b10a84e4e404c6ca6a1a6782f9040f24bb7bfbb95055e8cd39600ef22a4a9284 in / "
                },
                {
                    "created": "2024-05-14T01:29:36.710877423Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:46:56.147843313Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& { \t\twhich gpg \t\t|| apt-get install -y --no-install-recommends gnupg \t; } \t&& { \t\tgpg --version | grep -q '^gpg (GnuPG) 1\\.' \t\t|| apt-get install -y --no-install-recommends dirmngr \t; } \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:46:57.63578334Z",
                    "created_by": "/bin/sh -c set -x \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver keyserver.ubuntu.com --recv-keys DD95CC430502E37EF840ACEEA5D32F012649A5A9 \t&& gpg --batch --export DD95CC430502E37EF840ACEEA5D32F012649A5A9 > /etc/apt/trusted.gpg.d/neurodebian.gpg \t&& rm -rf \"$GNUPGHOME\" \t&& apt-key list | grep neurodebian"
                },
                {
                    "created": "2024-05-14T14:46:58.17262112Z",
                    "created_by": "/bin/sh -c { \techo 'deb http://neuro.debian.net/debian sid main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel sid main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2024-05-14T14:47:02.314411175Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:47:07.01628749Z",
                    "created_by": "/bin/sh -c [ -e /etc/apt/sources.list.d/debian.sources ] && srcs=/etc/apt/sources.list.d/debian.sources || srcs=/etc/apt/sources.list; sed -i -e 's,main *$,main contrib non-free,g' /etc/apt/sources.list.d/neurodebian.sources.list $srcs"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:678e6c87db0d22a9fd4bf4b8d8286ef39c95437540cdab90a377bf7cf09f9ef9",
                    "sha256:ec95801c991b00e75b8ade42b6ec2cf7842ed82acdee74f254db5bcfab5f3768",
                    "sha256:faaab260e9fb26428b584a04fc93fc36ed867809446f947a5ee210c58d936819",
                    "sha256:e4e6873783be3826aa7211e08924837921f56b19a6c410324decf7655d149c8f",
                    "sha256:4a2e6bf8ef6d09063005c42134e50252e0f882b928aa206d4aa767f47f8ec731",
                    "sha256:70b7cac5a4aba9b66e1fa9058bc8d01e54207fc66a46fa3b3e56d9539b0624fc"
                ]
            }
        },
        "squeeze": {
            "architecture": "amd64",
            "config": {
                "Hostname": "71f62d8ce24c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "378cf244526521142f2ba333f0457c17302267a333b46fc07e49c670bb7841a2",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "container": "7f57456a142fbb37ade9b1f09221aa630582b9d7894e707bdab43ab01f774724",
            "container_config": {
                "Hostname": "71f62d8ce24c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "apt-key adv --recv-keys --keyserver pgp.mit.edu 0xA5D32F012649A5A9"
                ],
                "Image": "378cf244526521142f2ba333f0457c17302267a333b46fc07e49c670bb7841a2",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2016-02-17T00:24:53.613599455Z",
            "docker_version": "1.9.1",
            "history": [
                {
                    "created": "2016-02-16T21:25:21.747984969Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:09d717d62608e18d79af6b6cd5aae36f675bd5c4f34452ab1693b56bfbfe2520 in /"
                },
                {
                    "created": "2016-02-16T21:25:24.035599122Z",
                    "created_by": "/bin/sh -c #(nop) CMD [\"/bin/bash\"]"
                },
                {
                    "created": "2016-02-17T00:24:48.95782193Z",
                    "created_by": "/bin/sh -c echo 'deb http://neuro.debian.net/debian squeeze main' > /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2016-02-17T00:24:50.345681858Z",
                    "created_by": "/bin/sh -c echo 'deb http://neuro.debian.net/debian data main' >> /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2016-02-17T00:24:51.790010352Z",
                    "created_by": "/bin/sh -c echo '#deb-src http://neuro.debian.net/debian-devel squeeze main' >> /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2016-02-17T00:24:53.613599455Z",
                    "created_by": "/bin/sh -c apt-key adv --recv-keys --keyserver pgp.mit.edu 0xA5D32F012649A5A9"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:085be35d9b38c9100656a58c1c3b952c110186ade2bf1e899cc951f7132a9584",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f4f98946463f93347ad73ee412d1ec25b0f449bdd3ffbb59d6c4c7ddb73a492d",
                    "sha256:4fac5c86d54197e1ad4528337cb8f72b6931d1f8cd90ae9de44a3e1c4477c255",
                    "sha256:9bccd77a19d142beb2712770d0dacc0d4bee45a270390337e21e4f022a8eafd3",
                    "sha256:fcc95d89469c3617f3b0c3ae7faf3947269a6a93e5f58e24e6280a3126dd774a"
                ]
            }
        },
        "stretch": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:1b6724221b75bff728daab70a749b3d9685e9c8f8298587dfc1e9df6cd4bcbbe",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "3a75f1947e9fd032097b7fb3ba1b41457ac5db3ae775328310bdf41c437aedf5",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                ],
                "Image": "sha256:1b6724221b75bff728daab70a749b3d9685e9c8f8298587dfc1e9df6cd4bcbbe",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2022-06-23T04:09:14.696743078Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-06-23T00:22:10.298769616Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4c5e0bec5f780d9c6bfbafcb9e6ed641781dd7f7c2853a0c49d6613e9fef9516 in / "
                },
                {
                    "created": "2022-06-23T00:22:10.793363229Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-23T04:09:07.044045278Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& { \t\twhich gpg \t\t|| apt-get install -y --no-install-recommends gnupg \t; } \t&& { \t\tgpg --version | grep -q '^gpg (GnuPG) 1\\.' \t\t|| apt-get install -y --no-install-recommends dirmngr \t; } \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-23T04:09:10.285875684Z",
                    "created_by": "/bin/sh -c set -x \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver keyserver.ubuntu.com --recv-keys DD95CC430502E37EF840ACEEA5D32F012649A5A9 \t&& gpg --batch --export DD95CC430502E37EF840ACEEA5D32F012649A5A9 > /etc/apt/trusted.gpg.d/neurodebian.gpg \t&& rm -rf \"$GNUPGHOME\" \t&& apt-key list | grep neurodebian"
                },
                {
                    "created": "2022-06-23T04:09:10.855308834Z",
                    "created_by": "/bin/sh -c { \techo 'deb http://neuro.debian.net/debian stretch main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel stretch main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2022-06-23T04:09:14.696743078Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:47dde6f41d1fcca77df950cac35c7103996a9333244a7406248c9b6898215469",
                    "sha256:28eeb7632ca204b5d0a88c3abf9929b8f98a622e3f72329eb0514db3f135f71e",
                    "sha256:edb3bb66cf9aaef0dcf1aa0b473dae2c39abdfb97cd138cf0032e8b7eb5a16a0",
                    "sha256:23845d06a0c3711f8c8bc4fd06922a1aec68a84e050937b29fe6ee1bdbb86f81",
                    "sha256:98def1aea10ed35042d3aaa8514d20cc916c9fd37962914c2def7b90e96837f3"
                ]
            }
        },
        "stretch-non-free": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:185c5bff05786bd3d11d21ca31760164f75a5b09c9450b12d40b814676b7a2f1",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "5e2c882c87250f85308bc0e44bd276a82c9731d90c8246641af5abdec6df1872",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "sed -i -e 's,main *$,main contrib non-free,g' /etc/apt/sources.list.d/neurodebian.sources.list /etc/apt/sources.list"
                ],
                "Image": "sha256:185c5bff05786bd3d11d21ca31760164f75a5b09c9450b12d40b814676b7a2f1",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2022-06-23T04:09:17.827132334Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-06-23T00:22:10.298769616Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4c5e0bec5f780d9c6bfbafcb9e6ed641781dd7f7c2853a0c49d6613e9fef9516 in / "
                },
                {
                    "created": "2022-06-23T00:22:10.793363229Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-23T04:09:07.044045278Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& { \t\twhich gpg \t\t|| apt-get install -y --no-install-recommends gnupg \t; } \t&& { \t\tgpg --version | grep -q '^gpg (GnuPG) 1\\.' \t\t|| apt-get install -y --no-install-recommends dirmngr \t; } \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-23T04:09:10.285875684Z",
                    "created_by": "/bin/sh -c set -x \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver keyserver.ubuntu.com --recv-keys DD95CC430502E37EF840ACEEA5D32F012649A5A9 \t&& gpg --batch --export DD95CC430502E37EF840ACEEA5D32F012649A5A9 > /etc/apt/trusted.gpg.d/neurodebian.gpg \t&& rm -rf \"$GNUPGHOME\" \t&& apt-key list | grep neurodebian"
                },
                {
                    "created": "2022-06-23T04:09:10.855308834Z",
                    "created_by": "/bin/sh -c { \techo 'deb http://neuro.debian.net/debian stretch main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel stretch main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2022-06-23T04:09:14.696743078Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-23T04:09:17.827132334Z",
                    "created_by": "/bin/sh -c sed -i -e 's,main *$,main contrib non-free,g' /etc/apt/sources.list.d/neurodebian.sources.list /etc/apt/sources.list"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:47dde6f41d1fcca77df950cac35c7103996a9333244a7406248c9b6898215469",
                    "sha256:28eeb7632ca204b5d0a88c3abf9929b8f98a622e3f72329eb0514db3f135f71e",
                    "sha256:edb3bb66cf9aaef0dcf1aa0b473dae2c39abdfb97cd138cf0032e8b7eb5a16a0",
                    "sha256:23845d06a0c3711f8c8bc4fd06922a1aec68a84e050937b29fe6ee1bdbb86f81",
                    "sha256:98def1aea10ed35042d3aaa8514d20cc916c9fd37962914c2def7b90e96837f3",
                    "sha256:285f9d48f3b54ec5751afd5c1ede6b9079d7bab8fa5216000729c83c12c1d3ea"
                ]
            }
        },
        "trusty": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:caa88578613e27b3b8071511598d9e2d19457875f5fbfda334f588077bf71194",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "3d9e5f349d12f4eedf89b6b64fb1d799c6836c7ef347f3072944e57f2be00348",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:caa88578613e27b3b8071511598d9e2d19457875f5fbfda334f588077bf71194",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2020-09-16T23:16:59.015929848Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2019-12-19T04:23:42.629482432Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:276b5d943a4d284f8a7b249176a31f93d95e852480c2b851de287e53ff622bba in / "
                },
                {
                    "created": "2020-09-16T22:21:53.035583367Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-09-16T22:21:53.824929146Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-16T22:21:54.584398916Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-09-16T22:21:54.767014556Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-16T23:16:50.923412062Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& { \t\twhich gpg \t\t|| apt-get install -y --no-install-recommends gnupg \t; } \t&& { \t\tgpg --version | grep -q '^gpg (GnuPG) 1\\.' \t\t|| apt-get install -y --no-install-recommends dirmngr \t; } \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-09-16T23:16:51.80124832Z",
                    "created_by": "/bin/sh -c set -x \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys DD95CC430502E37EF840ACEEA5D32F012649A5A9 \t&& gpg --batch --export DD95CC430502E37EF840ACEEA5D32F012649A5A9 > /etc/apt/trusted.gpg.d/neurodebian.gpg \t&& rm -rf \"$GNUPGHOME\" \t&& apt-key list | grep neurodebian"
                },
                {
                    "created": "2020-09-16T23:16:52.651130861Z",
                    "created_by": "/bin/sh -c { \techo 'deb http://neuro.debian.net/debian trusty main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel trusty main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2020-09-16T23:16:59.015929848Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f2fa9f4cf8fd0a521d40e34492b522cee3f35004047e617c75fadeb8bfd1e6b7",
                    "sha256:45d8dc025525eb83384fbb6f3d49bac2e85f690a17f7fc9ab4d013e7236703bd",
                    "sha256:e156c976a2ba450a30da0df824a204113c6afcf773cb09bfa186f88cd63f19dd",
                    "sha256:5ef19f98a72fe32209f8155e977c0e5808ddbe85eb703670500f48b82c015edd",
                    "sha256:35930177943fc546036fee7e847b44220095baa35e16d0ca056c89b333d7a05d",
                    "sha256:7c184ff1fa970b7daf0f9d07282b83bc63d85caea8558441fdef20529bd3ee09",
                    "sha256:dcb84af988cf40386f234475b3455945dff94afac9581baf9de24803ac8d4bf9"
                ]
            }
        },
        "trusty-non-free": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9a08e59697a0190e47bbc5cb43d2a94dce470cc71a07584781f7390764239fcf",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "167594ebde6da314b9d60dd615e2f5da6b5b577fd46fb95dd85d8e6366b81418",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "sed -i -e 's,main *$,main contrib non-free,g' /etc/apt/sources.list.d/neurodebian.sources.list; grep -q 'deb .* multiverse$' /etc/apt/sources.list || sed -i -e 's,universe *$,universe multiverse,g' /etc/apt/sources.list"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9a08e59697a0190e47bbc5cb43d2a94dce470cc71a07584781f7390764239fcf",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2020-09-16T23:17:05.141125923Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2019-12-19T04:23:42.629482432Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:276b5d943a4d284f8a7b249176a31f93d95e852480c2b851de287e53ff622bba in / "
                },
                {
                    "created": "2020-09-16T22:21:53.035583367Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-09-16T22:21:53.824929146Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-16T22:21:54.584398916Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-09-16T22:21:54.767014556Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-16T23:16:50.923412062Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& { \t\twhich gpg \t\t|| apt-get install -y --no-install-recommends gnupg \t; } \t&& { \t\tgpg --version | grep -q '^gpg (GnuPG) 1\\.' \t\t|| apt-get install -y --no-install-recommends dirmngr \t; } \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-09-16T23:16:51.80124832Z",
                    "created_by": "/bin/sh -c set -x \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys DD95CC430502E37EF840ACEEA5D32F012649A5A9 \t&& gpg --batch --export DD95CC430502E37EF840ACEEA5D32F012649A5A9 > /etc/apt/trusted.gpg.d/neurodebian.gpg \t&& rm -rf \"$GNUPGHOME\" \t&& apt-key list | grep neurodebian"
                },
                {
                    "created": "2020-09-16T23:16:52.651130861Z",
                    "created_by": "/bin/sh -c { \techo 'deb http://neuro.debian.net/debian trusty main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel trusty main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2020-09-16T23:16:59.015929848Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-09-16T23:17:05.141125923Z",
                    "created_by": "/bin/sh -c sed -i -e 's,main *$,main contrib non-free,g' /etc/apt/sources.list.d/neurodebian.sources.list; grep -q 'deb .* multiverse$' /etc/apt/sources.list || sed -i -e 's,universe *$,universe multiverse,g' /etc/apt/sources.list"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f2fa9f4cf8fd0a521d40e34492b522cee3f35004047e617c75fadeb8bfd1e6b7",
                    "sha256:45d8dc025525eb83384fbb6f3d49bac2e85f690a17f7fc9ab4d013e7236703bd",
                    "sha256:e156c976a2ba450a30da0df824a204113c6afcf773cb09bfa186f88cd63f19dd",
                    "sha256:5ef19f98a72fe32209f8155e977c0e5808ddbe85eb703670500f48b82c015edd",
                    "sha256:35930177943fc546036fee7e847b44220095baa35e16d0ca056c89b333d7a05d",
                    "sha256:7c184ff1fa970b7daf0f9d07282b83bc63d85caea8558441fdef20529bd3ee09",
                    "sha256:dcb84af988cf40386f234475b3455945dff94afac9581baf9de24803ac8d4bf9",
                    "sha256:74d3de78e625b41a77bdd60f4bf84005ef0a484ad2fedb6595ccb01a4f6dec3f"
                ]
            }
        },
        "vivid": {
            "architecture": "amd64",
            "config": {
                "Hostname": "d2d404286fc4",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "1e3273b5a2f9205fd01eb5cf8dc1692d334a5f08f8e25d467abb1d568efa7543",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "container": "f601ae9a176f655883c8f02335f67d552607776e5328fb1b8cc574f979d1da39",
            "container_config": {
                "Hostname": "d2d404286fc4",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "apt-key adv --recv-keys --keyserver pgp.mit.edu 0xA5D32F012649A5A9"
                ],
                "Image": "1e3273b5a2f9205fd01eb5cf8dc1692d334a5f08f8e25d467abb1d568efa7543",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2016-02-17T00:24:37.421644795Z",
            "docker_version": "1.9.1",
            "history": [
                {
                    "created": "2016-01-26T17:48:17.324409116Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3f4708cf445dc1b537b8e9f400cb02bef84660811ecdb7c98930f68fee876ec4 in /"
                },
                {
                    "created": "2016-01-26T17:48:31.377192721Z",
                    "created_by": "/bin/sh -c echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes"
                },
                {
                    "created": "2016-01-26T17:48:33.59869621Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2016-01-26T17:48:34.465253028Z",
                    "created_by": "/bin/sh -c #(nop) CMD [\"/bin/bash\"]"
                },
                {
                    "created": "2016-02-17T00:24:23.797732987Z",
                    "created_by": "/bin/sh -c echo 'deb http://neuro.debian.net/debian vivid main' > /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2016-02-17T00:24:25.345683616Z",
                    "created_by": "/bin/sh -c echo 'deb http://neuro.debian.net/debian data main' >> /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2016-02-17T00:24:26.701625458Z",
                    "created_by": "/bin/sh -c echo '#deb-src http://neuro.debian.net/debian-devel vivid main' >> /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2016-02-17T00:24:37.421644795Z",
                    "created_by": "/bin/sh -c apt-key adv --recv-keys --keyserver pgp.mit.edu 0xA5D32F012649A5A9"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3cbe18655eb617bf6a146dbd75a63f33c191bf8c7761bd6a8d68d53549af334b",
                    "sha256:84cc3d400b0d610447fbdea63436bad60fb8361493a32db380bd5c5a79f92ef4",
                    "sha256:ed58a6b8d8d6a4e2ecb4da7d1bf17ae8006dac65917c6a050109ef0a5d7199e6",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e42c095ea460dc6ca8fdead24bc6c8fdf827631e58f35b2de5e0305a8201dffc",
                    "sha256:f7fb3dff3740496b0320eb4454a7492ad1aee1b8c6812a0ba64a1049b85b3212",
                    "sha256:5bbd13001d346b9c5caf2717151ad15d52ba898ce5da337f3b07f92431a9e128",
                    "sha256:38fb8914d86a1c992a88482d3a339776de7b5001766389d0c30961c0390ea664"
                ]
            }
        },
        "wheezy": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:81a08d340d89decc520130491485264f8e6e34365ed6efdcbda8a6c650235760",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "f313226d740c135527f37d1caf255a4ca7c2c0306694eb512039636723bf072d",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "{ \techo 'deb http://neuro.debian.net/debian wheezy main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel wheezy main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:81a08d340d89decc520130491485264f8e6e34365ed6efdcbda8a6c650235760",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "created": "2018-10-16T06:53:55.8025153Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-10-15T23:26:28.219753203Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5163482b7e1bd84981ddd31e96b6909dc030ab66fc6fe9f35882cdbe6eaba287 in / "
                },
                {
                    "created": "2018-10-15T23:26:28.530860604Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-16T06:53:54.435517162Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& { \t\twhich gpg \t\t|| apt-get install -y --no-install-recommends gnupg \t; } \t&& { \t\tgpg --version | grep -q '^gpg (GnuPG) 1\\.' \t\t|| apt-get install -y --no-install-recommends dirmngr \t; } \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-10-16T06:53:55.139514129Z",
                    "created_by": "/bin/sh -c set -x \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --keyserver ha.pool.sks-keyservers.net --recv-keys DD95CC430502E37EF840ACEEA5D32F012649A5A9 \t&& gpg --export DD95CC430502E37EF840ACEEA5D32F012649A5A9 > /etc/apt/trusted.gpg.d/neurodebian.gpg \t&& rm -rf \"$GNUPGHOME\" \t&& apt-key list | grep neurodebian"
                },
                {
                    "created": "2018-10-16T06:53:55.8025153Z",
                    "created_by": "/bin/sh -c { \techo 'deb http://neuro.debian.net/debian wheezy main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel wheezy main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6b24e385231b9cf6799755eae67714abcd484611c91e0d9ce1c2de1cb5667ae7",
                    "sha256:f8301149e8d7398ac044140d14f4f796785b11d00ceb20a21dbfe340b9bb0f6a",
                    "sha256:ad34e701339c141edca722f7dbcb9fd74a062da22740935747c5d15fd7d7a254",
                    "sha256:a3feb995121829383fdb24b935bf6f45b9a9b96aba65620bdd651fc08469de4f"
                ]
            }
        },
        "wheezy-non-free": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6a20a66f2055620c455ff7121e685b5cf6b1168f6b5ec7df7aa19fb7958ee193",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "e321128fa678601eafea085a7cf6237758a13a8dd23c1c1324d92a7014f9cf31",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "sed -i -e 's,main *$,main contrib non-free,g' /etc/apt/sources.list.d/neurodebian.sources.list /etc/apt/sources.list"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6a20a66f2055620c455ff7121e685b5cf6b1168f6b5ec7df7aa19fb7958ee193",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "created": "2018-10-16T06:54:06.286407799Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-10-15T23:26:28.219753203Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5163482b7e1bd84981ddd31e96b6909dc030ab66fc6fe9f35882cdbe6eaba287 in / "
                },
                {
                    "created": "2018-10-15T23:26:28.530860604Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-16T06:53:54.435517162Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& { \t\twhich gpg \t\t|| apt-get install -y --no-install-recommends gnupg \t; } \t&& { \t\tgpg --version | grep -q '^gpg (GnuPG) 1\\.' \t\t|| apt-get install -y --no-install-recommends dirmngr \t; } \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-10-16T06:53:55.139514129Z",
                    "created_by": "/bin/sh -c set -x \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --keyserver ha.pool.sks-keyservers.net --recv-keys DD95CC430502E37EF840ACEEA5D32F012649A5A9 \t&& gpg --export DD95CC430502E37EF840ACEEA5D32F012649A5A9 > /etc/apt/trusted.gpg.d/neurodebian.gpg \t&& rm -rf \"$GNUPGHOME\" \t&& apt-key list | grep neurodebian"
                },
                {
                    "created": "2018-10-16T06:53:55.8025153Z",
                    "created_by": "/bin/sh -c { \techo 'deb http://neuro.debian.net/debian wheezy main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel wheezy main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2018-10-16T06:54:06.286407799Z",
                    "created_by": "/bin/sh -c sed -i -e 's,main *$,main contrib non-free,g' /etc/apt/sources.list.d/neurodebian.sources.list /etc/apt/sources.list"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6b24e385231b9cf6799755eae67714abcd484611c91e0d9ce1c2de1cb5667ae7",
                    "sha256:f8301149e8d7398ac044140d14f4f796785b11d00ceb20a21dbfe340b9bb0f6a",
                    "sha256:ad34e701339c141edca722f7dbcb9fd74a062da22740935747c5d15fd7d7a254",
                    "sha256:a3feb995121829383fdb24b935bf6f45b9a9b96aba65620bdd651fc08469de4f",
                    "sha256:8bc8d322e809693bb09246b874194ccfd0c344bcaa19834f255b12762e1e432b"
                ]
            }
        },
        "wily": {
            "architecture": "amd64",
            "config": {
                "Hostname": "ca9015dc6bb1",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9ceacdf7c4648c8bbc9fb38c5647e94109a60f4d24b63ec5fa6de4a4cdfb2426",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "container": "fdac6bbd902f6b1446bd284abe07ba74cb47b807bff3f9474bbef38a8bb83103",
            "container_config": {
                "Hostname": "ca9015dc6bb1",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "apt-key adv --recv-keys --keyserver pgp.mit.edu 0xA5D32F012649A5A9"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9ceacdf7c4648c8bbc9fb38c5647e94109a60f4d24b63ec5fa6de4a4cdfb2426",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2016-07-22T17:58:31.232043247Z",
            "docker_version": "1.10.3",
            "history": [
                {
                    "created": "2016-07-08T18:39:16.468883148Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d5d47c6a963e950e735765bfaf16851fc7297115de6c17bdd61148288e5b8873 in /"
                },
                {
                    "created": "2016-07-22T15:19:09.514770186Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2016-07-22T15:19:11.200996745Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2016-07-22T15:19:12.895625947Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2016-07-22T15:19:13.510288415Z",
                    "created_by": "/bin/sh -c #(nop) CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2016-07-22T17:58:25.711933425Z",
                    "created_by": "/bin/sh -c echo 'deb http://neuro.debian.net/debian wily main' > /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2016-07-22T17:58:27.357448222Z",
                    "created_by": "/bin/sh -c echo 'deb http://neuro.debian.net/debian data main' >> /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2016-07-22T17:58:29.093594715Z",
                    "created_by": "/bin/sh -c echo '#deb-src http://neuro.debian.net/debian-devel wily main' >> /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2016-07-22T17:58:31.232043247Z",
                    "created_by": "/bin/sh -c apt-key adv --recv-keys --keyserver pgp.mit.edu 0xA5D32F012649A5A9"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f121afdbbd5dd49d4a88c402b1a1a4dca39c9ae75ed7f80a29ffd9739fc680a7",
                    "sha256:4b955941a4d0bfa4d3eed9ab5cf8e03479ece47a3f0c154439e93230b08a8048",
                    "sha256:af288f00b8a7386eadb431dddd75e0f75f129994e89cfa424a00cfc9c8a89c95",
                    "sha256:98d59071f692a7a8b02acfea340f4e63b8801d8914812df05334e4b264de2fdb",
                    "sha256:a3fd5258c34952a04f51946fa1f12abdd98066e8f215490a0496c5aafdc803dc",
                    "sha256:4ffccd8b16cea0b692f195cc27753522e35ea1eccc854e2517df8f2d81e2eaf1",
                    "sha256:c36f03e3cd2d0bffda9c38eefc754755f979e96d932f5021bef949d175748fc6",
                    "sha256:468cb019d6cb9290be2580dd4eb8b3dc8890fc4a6b5ada2a199859375fd3f257"
                ]
            }
        },
        "xenial": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:fa2b6d5b1a9c048bad7ddea16d9d22ed4013978a8508a5392c6afc7bf39e551d",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "5bcfb0c5c575d71fcc5d50f9c3e3af6b94cd4a184ab696caa59a0e09200d7c45",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                ],
                "Image": "sha256:fa2b6d5b1a9c048bad7ddea16d9d22ed4013978a8508a5392c6afc7bf39e551d",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2022-03-16T17:27:24.2318994Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2021-08-31T01:21:27.577690932Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:11b425d4c08e81a3e0cb2e0345d27cd5fc844dd83f1096af4cc05f635824ff5d in / "
                },
                {
                    "created": "2021-08-31T01:21:28.751673238Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-08-31T01:21:29.65334794Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-08-31T01:21:30.454442334Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-08-31T01:21:30.672229355Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-31T03:57:30.752706374Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& { \t\twhich gpg \t\t|| apt-get install -y --no-install-recommends gnupg \t; } \t&& { \t\tgpg --version | grep -q '^gpg (GnuPG) 1\\.' \t\t|| apt-get install -y --no-install-recommends dirmngr \t; } \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-16T17:27:09.469512206Z",
                    "created_by": "/bin/sh -c set -x \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver keyserver.ubuntu.com --recv-keys DD95CC430502E37EF840ACEEA5D32F012649A5A9 \t&& gpg --batch --export DD95CC430502E37EF840ACEEA5D32F012649A5A9 > /etc/apt/trusted.gpg.d/neurodebian.gpg \t&& rm -rf \"$GNUPGHOME\" \t&& apt-key list | grep neurodebian"
                },
                {
                    "created": "2022-03-16T17:27:10.012646041Z",
                    "created_by": "/bin/sh -c { \techo 'deb http://neuro.debian.net/debian xenial main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel xenial main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2022-03-16T17:27:24.2318994Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:be96a3f634de79f523f07c7e4e0216c28af45eb5776e7a6238a2392f71e01069",
                    "sha256:df54c846128da3c71cc11b2150a3df39ec86fb170e299765daf6bb016a0705c2",
                    "sha256:47ef83afae74745639f6738a05fe5320fcfca9e6c7765fba4f25e270bc0df9dc",
                    "sha256:1251204ef8fc20da275e09f6e3ab9205421d4ff34732f2d50a1d3e86d2995edd",
                    "sha256:cbd813a4f938af0e275b4fc100fb123b5e58927c1c04341f9b71ef10744f0ddf",
                    "sha256:3ba37269469d46862966af4d785f653c7c8762a296dcd45833ba5acf676488c2",
                    "sha256:e606cf68ad8eedad0af0a18671659267f57bb4a17ba43c6941cbc79f827e2e45",
                    "sha256:86051f5e43e38a951819c68cd1084241e052b93f31768d6b67af3ff4aac9fefc"
                ]
            }
        },
        "xenial-non-free": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:b60902017c278b0db41b17f8f1de27469127d1ea4898b2469f52647585af6120",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "858b4c6ca726f0d13ecaa3fa1d6bea9cb683ba0a1ad83bba6b113c55d4348750",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "[ -e /etc/apt/sources.list.d/debian.sources ] && srcs=/etc/apt/sources.list.d/debian.sources || srcs=/etc/apt/sources.list; sed -i -e 's,main *$,main contrib non-free,g' /etc/apt/sources.list.d/neurodebian.sources.list; grep -q 'deb .* multiverse$' $srcs || sed -i -e 's,universe *$,universe multiverse,g' $srcs"
                ],
                "Image": "sha256:b60902017c278b0db41b17f8f1de27469127d1ea4898b2469f52647585af6120",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2022-07-19T19:53:37.675398437Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2021-08-31T01:21:27.577690932Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:11b425d4c08e81a3e0cb2e0345d27cd5fc844dd83f1096af4cc05f635824ff5d in / "
                },
                {
                    "created": "2021-08-31T01:21:28.751673238Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-08-31T01:21:29.65334794Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-08-31T01:21:30.454442334Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-08-31T01:21:30.672229355Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-31T03:57:30.752706374Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& { \t\twhich gpg \t\t|| apt-get install -y --no-install-recommends gnupg \t; } \t&& { \t\tgpg --version | grep -q '^gpg (GnuPG) 1\\.' \t\t|| apt-get install -y --no-install-recommends dirmngr \t; } \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-16T17:27:09.469512206Z",
                    "created_by": "/bin/sh -c set -x \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver keyserver.ubuntu.com --recv-keys DD95CC430502E37EF840ACEEA5D32F012649A5A9 \t&& gpg --batch --export DD95CC430502E37EF840ACEEA5D32F012649A5A9 > /etc/apt/trusted.gpg.d/neurodebian.gpg \t&& rm -rf \"$GNUPGHOME\" \t&& apt-key list | grep neurodebian"
                },
                {
                    "created": "2022-03-16T17:27:10.012646041Z",
                    "created_by": "/bin/sh -c { \techo 'deb http://neuro.debian.net/debian xenial main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel xenial main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2022-03-16T17:27:24.2318994Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-07-19T19:53:37.675398437Z",
                    "created_by": "/bin/sh -c [ -e /etc/apt/sources.list.d/debian.sources ] && srcs=/etc/apt/sources.list.d/debian.sources || srcs=/etc/apt/sources.list; sed -i -e 's,main *$,main contrib non-free,g' /etc/apt/sources.list.d/neurodebian.sources.list; grep -q 'deb .* multiverse$' $srcs || sed -i -e 's,universe *$,universe multiverse,g' $srcs"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:be96a3f634de79f523f07c7e4e0216c28af45eb5776e7a6238a2392f71e01069",
                    "sha256:df54c846128da3c71cc11b2150a3df39ec86fb170e299765daf6bb016a0705c2",
                    "sha256:47ef83afae74745639f6738a05fe5320fcfca9e6c7765fba4f25e270bc0df9dc",
                    "sha256:1251204ef8fc20da275e09f6e3ab9205421d4ff34732f2d50a1d3e86d2995edd",
                    "sha256:cbd813a4f938af0e275b4fc100fb123b5e58927c1c04341f9b71ef10744f0ddf",
                    "sha256:3ba37269469d46862966af4d785f653c7c8762a296dcd45833ba5acf676488c2",
                    "sha256:e606cf68ad8eedad0af0a18671659267f57bb4a17ba43c6941cbc79f827e2e45",
                    "sha256:86051f5e43e38a951819c68cd1084241e052b93f31768d6b67af3ff4aac9fefc",
                    "sha256:18506bdd21d58172bfb31f75dee197cbe937f5c5763e83859a37d0b0fa61d2e2"
                ]
            }
        },
        "yakkety": {
            "architecture": "amd64",
            "config": {
                "Hostname": "184d26dca371",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f6b451abdd3d84468331fa89761b1c9e9146dad6a64ae4b9fa797c98a70d8845",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "container": "d486b031d6d1b261857006ca6bd666661144d75a0d1fd33febb58aa561fcb73c",
            "container_config": {
                "Hostname": "184d26dca371",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "{ \techo 'deb http://neuro.debian.net/debian yakkety main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel yakkety main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f6b451abdd3d84468331fa89761b1c9e9146dad6a64ae4b9fa797c98a70d8845",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2017-07-23T18:17:31.675280143Z",
            "docker_version": "17.03.2-ce",
            "history": [
                {
                    "created": "2017-07-20T17:15:38.885687263Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6cd9e0a52cd1520005b0cfac3ca7e19b37e4c6f053561015a554c51619617f6f in / "
                },
                {
                    "created": "2017-07-20T17:15:44.510182868Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2017-07-20T17:15:45.612397252Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-07-20T17:15:53.69264668Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2017-07-20T17:15:54.862037997Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2017-07-20T17:15:55.309261093Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-07-23T18:17:28.301598271Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& { \t\twhich gpg \t\t|| apt-get install -y --no-install-recommends gnupg2 \t\t|| apt-get install -y --no-install-recommends gnupg \t; } \t&& { \t\tgpg --version | grep -q '^gpg (GnuPG) 1\\.' \t\t|| apt-get install -y --no-install-recommends dirmngr \t; } \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-07-23T18:17:31.031067242Z",
                    "created_by": "/bin/sh -c set -x \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --keyserver ha.pool.sks-keyservers.net --recv-keys DD95CC430502E37EF840ACEEA5D32F012649A5A9 \t&& gpg --export DD95CC430502E37EF840ACEEA5D32F012649A5A9 > /etc/apt/trusted.gpg.d/neurodebian.gpg \t&& rm -rf \"$GNUPGHOME\" \t&& apt-key list | grep neurodebian"
                },
                {
                    "created": "2017-07-23T18:17:31.675280143Z",
                    "created_by": "/bin/sh -c { \techo 'deb http://neuro.debian.net/debian yakkety main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel yakkety main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:57145c01eb80040fdd0a24cde20af4788605b49593188d4f7efab099af89a08e",
                    "sha256:31eed92f5a2397a9d2c2fec3af6083ca87939a4bcb347d68a58053e5fa40fa52",
                    "sha256:47a3ebbaa6445cee2aac1137894508bf7e994ee42a386c81c16eed931318f2e6",
                    "sha256:0ba4c05a8843756515ec38b4866a27c1cee8e3171574a9727c21ae7619a9781e",
                    "sha256:fcc11235a44151d2f468d120476b1512e6ce2c8206fa184deb28ab85973bb308",
                    "sha256:4b178d408d96caf1aefcff927719487c5f2e00982210ef306b337e19ccf86ed2",
                    "sha256:c376513150650081479d4042fcb09ef43510f51cbcae2b71da3ada3cd561fa57",
                    "sha256:470d986983320e738beea1e1c8f5a369eca8e22c4612ca53b8f073f5e0a2cd83"
                ]
            }
        },
        "zesty": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ebafcf15d703d7f40027e21b07d7d49a24f736957a0c09d594a6e339be8599c9",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "c263c36295701d4d56d63e6b6d972a63c550ef92078d745383100217c1117058",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "{ \techo 'deb http://neuro.debian.net/debian zesty main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel zesty main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ebafcf15d703d7f40027e21b07d7d49a24f736957a0c09d594a6e339be8599c9",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "created": "2017-12-14T22:21:16.26318279Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2017-12-14T21:00:08.343973378Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:796db5dd87a82ef3448e235015cbe46f6e917199753ab9fa0a7fc03d14da91b0 in / "
                },
                {
                    "created": "2017-12-14T21:00:09.105240401Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2017-12-14T21:00:09.781714006Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-12-14T21:00:10.466356993Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2017-12-14T21:00:11.114828681Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2017-12-14T21:00:11.319127622Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-14T22:21:10.099733605Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& { \t\twhich gpg \t\t|| apt-get install -y --no-install-recommends gnupg \t; } \t&& { \t\tgpg --version | grep -q '^gpg (GnuPG) 1\\.' \t\t|| apt-get install -y --no-install-recommends dirmngr \t; } \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-12-14T22:21:15.584574188Z",
                    "created_by": "/bin/sh -c set -x \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --keyserver ha.pool.sks-keyservers.net --recv-keys DD95CC430502E37EF840ACEEA5D32F012649A5A9 \t&& gpg --export DD95CC430502E37EF840ACEEA5D32F012649A5A9 > /etc/apt/trusted.gpg.d/neurodebian.gpg \t&& rm -rf \"$GNUPGHOME\" \t&& apt-key list | grep neurodebian"
                },
                {
                    "created": "2017-12-14T22:21:16.26318279Z",
                    "created_by": "/bin/sh -c { \techo 'deb http://neuro.debian.net/debian zesty main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel zesty main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:db8686e0ca43015a6a569c70f236a40f2a5292b9c416e83359bb4106536cc1e6",
                    "sha256:803030df23c1ac16f7546a8633ca5419c5aab233094e14c24ff4ea9f82dcead0",
                    "sha256:ba76b502dc9b0d1e0024cf79efcb9560f0ec1d8bb80f3cd05ddb0aebeedd7da2",
                    "sha256:b8e5935ae7cc48a3c6099f60efaef29b6dfea0ddd487c70359e4cd542dc98fca",
                    "sha256:3ff70ce53dac920467a9da893b0a2e93ff6920b93613dc1c6f76c075aae43371",
                    "sha256:2db477df849316e4b5fe089c1364d92b594e625a44ab6adcd5dd2644a08cd4b8",
                    "sha256:5b4e484825f318f1bef0c57043322955030979dce38753de9aeb5651086477cf",
                    "sha256:8635655cb65e855a00eb559b865d8eccee7936085dc6af6fffa4328921c7a584"
                ]
            }
        },
        "zesty-non-free": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f980c44174e17e1342b91b017934fc4074b191e4c0601ea2077be2889b4d016f",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "0b4ce0b350aa852b1a0d78301176976c6f45572d525e4307a2ebcd7ea7c9bb46",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "sed -i -e 's,main *$,main contrib non-free,g' /etc/apt/sources.list.d/neurodebian.sources.list; grep -q 'deb .* multiverse$' /etc/apt/sources.list || sed -i -e 's,universe *$,universe multiverse,g' /etc/apt/sources.list"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f980c44174e17e1342b91b017934fc4074b191e4c0601ea2077be2889b4d016f",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "created": "2017-12-14T22:21:26.982463489Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2017-12-14T21:00:08.343973378Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:796db5dd87a82ef3448e235015cbe46f6e917199753ab9fa0a7fc03d14da91b0 in / "
                },
                {
                    "created": "2017-12-14T21:00:09.105240401Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2017-12-14T21:00:09.781714006Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-12-14T21:00:10.466356993Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2017-12-14T21:00:11.114828681Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2017-12-14T21:00:11.319127622Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-14T22:21:10.099733605Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& { \t\twhich gpg \t\t|| apt-get install -y --no-install-recommends gnupg \t; } \t&& { \t\tgpg --version | grep -q '^gpg (GnuPG) 1\\.' \t\t|| apt-get install -y --no-install-recommends dirmngr \t; } \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-12-14T22:21:15.584574188Z",
                    "created_by": "/bin/sh -c set -x \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --keyserver ha.pool.sks-keyservers.net --recv-keys DD95CC430502E37EF840ACEEA5D32F012649A5A9 \t&& gpg --export DD95CC430502E37EF840ACEEA5D32F012649A5A9 > /etc/apt/trusted.gpg.d/neurodebian.gpg \t&& rm -rf \"$GNUPGHOME\" \t&& apt-key list | grep neurodebian"
                },
                {
                    "created": "2017-12-14T22:21:16.26318279Z",
                    "created_by": "/bin/sh -c { \techo 'deb http://neuro.debian.net/debian zesty main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel zesty main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2017-12-14T22:21:26.982463489Z",
                    "created_by": "/bin/sh -c sed -i -e 's,main *$,main contrib non-free,g' /etc/apt/sources.list.d/neurodebian.sources.list; grep -q 'deb .* multiverse$' /etc/apt/sources.list || sed -i -e 's,universe *$,universe multiverse,g' /etc/apt/sources.list"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:db8686e0ca43015a6a569c70f236a40f2a5292b9c416e83359bb4106536cc1e6",
                    "sha256:803030df23c1ac16f7546a8633ca5419c5aab233094e14c24ff4ea9f82dcead0",
                    "sha256:ba76b502dc9b0d1e0024cf79efcb9560f0ec1d8bb80f3cd05ddb0aebeedd7da2",
                    "sha256:b8e5935ae7cc48a3c6099f60efaef29b6dfea0ddd487c70359e4cd542dc98fca",
                    "sha256:3ff70ce53dac920467a9da893b0a2e93ff6920b93613dc1c6f76c075aae43371",
                    "sha256:2db477df849316e4b5fe089c1364d92b594e625a44ab6adcd5dd2644a08cd4b8",
                    "sha256:5b4e484825f318f1bef0c57043322955030979dce38753de9aeb5651086477cf",
                    "sha256:8635655cb65e855a00eb559b865d8eccee7936085dc6af6fffa4328921c7a584",
                    "sha256:fd6ec54004e0b5e6add9a4ddb17a5f826525db5e2171a68ca60d72f28ad840b0"
                ]
            }
        }
    }
}