{
    "manifests": {
        "22.11.1-4": {
            "mediaType": "application/vnd.oci.image.index.v1+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:e7403a70b3b0081eef18189a20ea5cce8801073d01553b5338d668b287a1289e",
                    "size": 675,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:cec2de3d419c638388f60b989f49aa6e6bd0c0caaa850af0b990c53812a765b8",
                    "size": 675,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:cac2414ca8a6be8dac61836be8669fd098d4a2b83f37855fb2e2c733a5ae100f",
                    "size": 675,
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:df7961630245dc1891197673edb6fa0df1c12f70f2257386d72eb7a1156bbc1b",
                    "size": 566,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:e7403a70b3b0081eef18189a20ea5cce8801073d01553b5338d668b287a1289e",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:f02219785540f5dc1a9bd6b901a4dc195dbe33a5c3d2f75958334193a6c3183e",
                    "size": 566,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:cec2de3d419c638388f60b989f49aa6e6bd0c0caaa850af0b990c53812a765b8",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:2f1e81f348df0a6c9d10305cb1b5879b6acc9c40ff5bae1afe144375b50a3453",
                    "size": 566,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:cac2414ca8a6be8dac61836be8669fd098d4a2b83f37855fb2e2c733a5ae100f",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                }
            ]
        },
        "22.9.0-0": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:7b812a363539ed8fa5f0638c42280a2c4c42936af77241d3dc577005c6147645",
                    "size": 741,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:91ed527fbec33757ee7b7a9bd705d0fd4d2be3b9dc914db88e43109bf28f457b",
                    "size": 741,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:ebd6f932cd48754cadd3d02a6f6fe16174dc8b6c46383a202e762d6329c3ae6d",
                    "size": 741,
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                }
            ]
        },
        "22.9.0-1": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:f0e3dcfaafd00b1de1bed46e052bb1614a17015928ca8cab3d4f45cefe29f784",
                    "size": 741,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:0739926b0c3362d9a413988561b2165fc387f84aba856f7d909166350cd8d17f",
                    "size": 741,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:1333910f132d77e206c8e969cb579309fa46a992002faca0ce8c8f3aac1bf574",
                    "size": 741,
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                }
            ]
        },
        "22.9.0-2": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:f36832243d5dbb6f7f43a990198a1cb4ee98f983d2eea45ceb1313c87b4bb717",
                    "size": 741,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:9bedab840924ce3b820303aac4dd28c114f941e463fe0947dc4870e16bd4ece0",
                    "size": 741,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:7e57e7df484507dddf16310b99c61a9673df774ab3fd5600cb41b422eca3fe7e",
                    "size": 741,
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                }
            ]
        },
        "22.9.0-3": {
            "mediaType": "application/vnd.oci.image.index.v1+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:2c824df2aafb09c07814f2557fff52e2cb41439f2799d44f92692cf7a133f92b",
                    "size": 675,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:71dc53f2d8f722476609ccf9b18a67ef6be7a00876f5ad0a8a4e6e840c597ce8",
                    "size": 675,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:4e504a09b0f784dba12491411c4521b1b4cba9745220fe596a72383932f26e5b",
                    "size": 675,
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:739606ef0106d2bed2e02d2a26328291a41fb8a407ee9e2f32472775e787c1b9",
                    "size": 566,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:2c824df2aafb09c07814f2557fff52e2cb41439f2799d44f92692cf7a133f92b",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:b401d4dc4e13b95ed43779273a2383176f2f24afc18ff0b6cd6f96d710606128",
                    "size": 566,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:71dc53f2d8f722476609ccf9b18a67ef6be7a00876f5ad0a8a4e6e840c597ce8",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:cae54cd421dadce48fbcf95129ba1efdffcb52f93259dc44ce330bd8f892ac88",
                    "size": 566,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:4e504a09b0f784dba12491411c4521b1b4cba9745220fe596a72383932f26e5b",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                }
            ]
        },
        "23.1.0-1": {
            "mediaType": "application/vnd.oci.image.index.v1+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:575d72d13e0e9321ba31395220a7e284e290248a30120f0298d450d53f49b173",
                    "size": 675,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:9fb6d720a8d20169c01747e44d9db36c3895593abba7c79959a6e847ff345903",
                    "size": 675,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:f71e1e88bb9ee385d229c335d4ba182d1f03762cf39c3ee5e6a6430b5775317a",
                    "size": 675,
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:fe144de21870ea3e4c858cb543f894a4e5dcc3a757b1861595ad439115d017a5",
                    "size": 566,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:575d72d13e0e9321ba31395220a7e284e290248a30120f0298d450d53f49b173",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:d84f9c944f3020ced781f2b0a4e188c1aeb97e81fac0e98172155c3eb5e40512",
                    "size": 566,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:9fb6d720a8d20169c01747e44d9db36c3895593abba7c79959a6e847ff345903",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:b2d16aebb65b763b2d338b6e5c362929e09d9b739e8993503ec7bd4b360f4d35",
                    "size": 566,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:f71e1e88bb9ee385d229c335d4ba182d1f03762cf39c3ee5e6a6430b5775317a",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                }
            ]
        },
        "23.1.0-2": {
            "mediaType": "application/vnd.oci.image.index.v1+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:f12161036c400d51e3aa863cc594a86c20088f162a50fda4e3e458824534de97",
                    "size": 675,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:e23872d0268e3df04696d5d61115eb15c2042e43af041d7d14c9a2a64578a721",
                    "size": 675,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:029d96c7a7d02067ad1dd68919b4faec0875dbe5606b86233c227a5249c14bf5",
                    "size": 675,
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:1577d4ea01093e065ebd7277d042d10950584768d53a255a40e87739eaa66772",
                    "size": 566,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:f12161036c400d51e3aa863cc594a86c20088f162a50fda4e3e458824534de97",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:5050f93b766d1f9ef60010dff8b97d11f55e2b32881a6bdfa3f2cc157d312049",
                    "size": 566,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:e23872d0268e3df04696d5d61115eb15c2042e43af041d7d14c9a2a64578a721",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:c1267cebd461e33f9e4930a2f85ed631a853f49173350367d5c55ae19668af47",
                    "size": 566,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:029d96c7a7d02067ad1dd68919b4faec0875dbe5606b86233c227a5249c14bf5",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                }
            ]
        },
        "23.1.0-3": {
            "mediaType": "application/vnd.oci.image.index.v1+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:bfc5977da689537ce9e6fa969a37e33d96a47494245654f0df777829a7d48403",
                    "size": 675,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:a62b56c95c4889b05816a915c886d43388d0b9145256e8f460ef899bce919954",
                    "size": 675,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:e2fde741f5d9788b2e9a1264df02faac3044477195758483836d6cc2b8621adf",
                    "size": 675,
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:8f64b82afbd07341595b05a03d3575660b82265fc76e47e6f7d4d4f00494edcd",
                    "size": 566,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:bfc5977da689537ce9e6fa969a37e33d96a47494245654f0df777829a7d48403",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:3f0e5019f01d4d896be9bf35a0ea0b7f62380d6f449cad5afdb6aa011863596f",
                    "size": 566,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:a62b56c95c4889b05816a915c886d43388d0b9145256e8f460ef899bce919954",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:de28ceed984e867369e1f565b2d97573db9a99174ec56ae6943934ba1fcbd77b",
                    "size": 566,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:e2fde741f5d9788b2e9a1264df02faac3044477195758483836d6cc2b8621adf",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                }
            ]
        },
        "23.1.0-4": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.oci.image.index.v1+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:890a290f13f9015b1ab59b0fd9a15d81635078fd7695fa1de57eafa235518c65",
                    "size": 675,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:036b20441ff0636d2983b9a99b4b28bbb85dfeec52f95293d40a0253078ab1f2",
                    "size": 675,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:e87b183b522ff196bab9db378bc8d526fed171dafebd07b31bcff94febd98f1b",
                    "size": 675,
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:5cc3da99b43608055728b28bbc8bf551610137e2175b8452002fe1111800ee49",
                    "size": 566,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:890a290f13f9015b1ab59b0fd9a15d81635078fd7695fa1de57eafa235518c65",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:c1f02a493139215d9b1012d18036befb4d965d420ca0b8320e9205b9d2c8c121",
                    "size": 566,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:036b20441ff0636d2983b9a99b4b28bbb85dfeec52f95293d40a0253078ab1f2",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:c51924eca6e52dc4615c926ce974cd986018388fd7f45f27cc97e96cd1eaaa11",
                    "size": 566,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:e87b183b522ff196bab9db378bc8d526fed171dafebd07b31bcff94febd98f1b",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                }
            ]
        },
        "23.11.0-0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.oci.image.index.v1+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:6fdaec62778bbf33c694c2d98c6f0b0909f420b5d091c1c010bcb0db69777c25",
                    "size": 676,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:4c487e557e26a9f64f18917b454c5dd8d2d44699c07b06826359c34d3163f985",
                    "size": 676,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:f9b9332b7900f051170b3a56610470935925990e67c968b58fa0cd25cfb13f73",
                    "size": 676,
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:33bf8c9c32708ca9f1bff03c1ff81ee536b0a21739ab97cdb399957a176e9141",
                    "size": 566,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:6fdaec62778bbf33c694c2d98c6f0b0909f420b5d091c1c010bcb0db69777c25",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:557463f9618a711aa001a0e76a7dc636ff7e810053458df8a0cc61eb8052b950",
                    "size": 566,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:4c487e557e26a9f64f18917b454c5dd8d2d44699c07b06826359c34d3163f985",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:2a71cdbcf06e520e0f5b6dbef837a78a5e7bd9752b33b9a16e74ed59d7ec4b4b",
                    "size": 566,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:f9b9332b7900f051170b3a56610470935925990e67c968b58fa0cd25cfb13f73",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                }
            ]
        },
        "23.3.1-0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.oci.image.index.v1+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:329ead26c06e531edfa6fbd612268efe1c849c648d956ff27d8f7fb65628b620",
                    "size": 676,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:095de69b16821af682090c40440e640c8a570e3a6ba6d7e993d51f61793eb3fe",
                    "size": 676,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:4d80435b739af0f003a8ec66d88fa3cb6730c557360216302fb033570f87b68b",
                    "size": 676,
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:4c43481942b76ff0072014555919718f5bb43104efc46a4a965a6a77b826e015",
                    "size": 566,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:329ead26c06e531edfa6fbd612268efe1c849c648d956ff27d8f7fb65628b620",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:77977d5292b9b36215fb4be2d9b2fb916bc0cb2976cfbb4552d1604198d656a4",
                    "size": 566,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:095de69b16821af682090c40440e640c8a570e3a6ba6d7e993d51f61793eb3fe",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:1ac5dec27df566450e75d5b776722eb08909bb1f28b948e35877f7bf6fb33ccd",
                    "size": 566,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:4d80435b739af0f003a8ec66d88fa3cb6730c557360216302fb033570f87b68b",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                }
            ]
        },
        "23.3.1-1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.oci.image.index.v1+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:597b228b79ab3380a2cda0a5482ab9a8b91c8fd65bd35f448bd186935dbf1554",
                    "size": 676,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:f471ced8d964ef55f2b3b787d8164a55a2af34de0bfeb266df4bef64e8aa6fdb",
                    "size": 676,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:f842c2e2056f799d349cb4ad98b6b6e72ea1bc8580a2da4b54df4d531f293cf5",
                    "size": 676,
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:4561fe2461f17fd26c222132e4c34209f7efeeaf47600e4b96bf522c6bc51f95",
                    "size": 566,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:597b228b79ab3380a2cda0a5482ab9a8b91c8fd65bd35f448bd186935dbf1554",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:9a4a22cf016ed8fabe0ae18773eea35adc2df8c5a41b18ac8465b2b7b5376971",
                    "size": 566,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:f471ced8d964ef55f2b3b787d8164a55a2af34de0bfeb266df4bef64e8aa6fdb",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:203b46bdab3e8b3d2e4dba0e77b37d4a2531fa3332e87c87b4aa60ce2fe09d0f",
                    "size": 566,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:f842c2e2056f799d349cb4ad98b6b6e72ea1bc8580a2da4b54df4d531f293cf5",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                }
            ]
        },
        "24.1.2-0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.oci.image.index.v1+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:c58e7e5771bf5252753a627606d2d07677fc502e5a1432295d5396104850468e",
                    "size": 676,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:80e49c7f1197fc1395cc007c55ebbdb59ea7f8ec5d4277aafc7c50c7f89dcdef",
                    "size": 676,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:6ed8f28726149f95a83af82c745aeed03ae401d5bde3d73c9f181113dcd38156",
                    "size": 676,
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:c90e113403544417f1d62853f84625dd9292eeeebfb9760b81b1b08b667e0489",
                    "size": 566,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:c58e7e5771bf5252753a627606d2d07677fc502e5a1432295d5396104850468e",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:be2377df70e485caf8c2f9bb0ab733b61200a5dd79b83d6a53a22fc54e8c3d7a",
                    "size": 566,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:80e49c7f1197fc1395cc007c55ebbdb59ea7f8ec5d4277aafc7c50c7f89dcdef",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:5b980f947d9fe05654849364655fb56902be0b8114573a8acecf69851a8da6ad",
                    "size": 566,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:6ed8f28726149f95a83af82c745aeed03ae401d5bde3d73c9f181113dcd38156",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                }
            ]
        },
        "24.3.0-0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.oci.image.index.v1+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:ca9f21810a1bd3e424ee40bd1441ee09f241375f02536af9b48b56f364ff9ef7",
                    "size": 676,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:e08a3fb42d3f1c94868b49aa01f95b1c8ca141060d0edef1f0fc2ff7f5664b84",
                    "size": 676,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:11955f91ad9e99a4e3202952478601d123c089f12f2d22b900d74af6e1b6d683",
                    "size": 676,
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:b43d608efead30865958675b69ab373d239a3d9db018b54ae66b34be7b35dd0b",
                    "size": 566,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:ca9f21810a1bd3e424ee40bd1441ee09f241375f02536af9b48b56f364ff9ef7",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:866567b071043a6519758b07683008e60dfb44601923f4dad2912db450719b69",
                    "size": 566,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:e08a3fb42d3f1c94868b49aa01f95b1c8ca141060d0edef1f0fc2ff7f5664b84",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:c601b6b8cb9389c6ca22f493b5ad8475451c8fcfb7f39d184466c1139bd2e54b",
                    "size": 566,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:11955f91ad9e99a4e3202952478601d123c089f12f2d22b900d74af6e1b6d683",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                }
            ]
        },
        "4.10.1-0": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:5be455af0a1713f0d38ec50a234d609f4d4abf3ebe479b7bff5cac53db879090",
                    "size": 1155,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:3daba5039d33c93efedf71951f394bd3b8e892fc85dd386e2686222fcb2dd610",
                    "size": 1155,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:c10f1ced7b168a95d496aa2bc1bd330b430dbd5ba6ee9e49b31478c35784d819",
                    "size": 1155,
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                }
            ]
        },
        "4.10.2-0": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:ccaf8e75f6a4fcdce7aa73219fd74137b54147f2eab7f9fa293cca57a686c565",
                    "size": 1155,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:d736cb1e790f60673c7b7db11468fd042d3b98643001a32f01101ad2aacbaea2",
                    "size": 1155,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:6d600b18f9b8f4b7ad16111aef959943d21e5fb3cd11e8556cbcd0bf0d281bc3",
                    "size": 1155,
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                }
            ]
        },
        "4.10.3-1": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:4e3107d7da3c363cfaa0f27d894f9f3d87d9853bb3a49d23eaf886c5d2f22cf4",
                    "size": 1155,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:46daf1babbed3fa8f54e1c3ebe6fecec38e32e282beb717545ee35ec87987b19",
                    "size": 1155,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:5f950b783bcfc4506d84b2dccf597740745e99a19dc6a10aa86a670db9287b7e",
                    "size": 1155,
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                }
            ]
        },
        "4.10.3-10": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:dea378e3d771bfd0fab7f104a2f8c40d3adaf9df84a8a5789eec4aa40f884418",
                    "size": 741,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:991e1c42119b85f07594c1fc3d9eccebbd5e57c2cb7b4b44b120a51e10d4a7f3",
                    "size": 741,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:070dbeb88d977da11300181024b5de33ba7884dba5ba3059c458ab203abb02f8",
                    "size": 741,
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                }
            ]
        },
        "4.10.3-2": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:b530b91f72fd3a3d89428b48ea6b61feb3a14858b279f06d2fd854fe680bb842",
                    "size": 741,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:85b39dfe651c96e7ca435efe7e4617285a5b94314df105247a6bae9d2a75d1c7",
                    "size": 741,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:f097625449b4a3c5580745a0de1ebb2b4ee1101dd06bf3eab6910c68f92ec662",
                    "size": 741,
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                }
            ]
        },
        "4.10.3-3": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:b9021dd4b389b5be99c3b62cbcea83dd4fd9fa8f09f0d1d3330ab70d9983e95a",
                    "size": 741,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:62c070e5d4965ac93cee60568aed286dfe39798a044c4d9f0480f204aa8c6509",
                    "size": 741,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:965ac74d5eda3727cd95a85617dde0d1b3f9abc396cfc22ac8a762fdd891536d",
                    "size": 741,
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                }
            ]
        },
        "4.10.3-4": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:ac81ab404c0f5a339b784126b88b6bf642f1f3a9a065b903dfc1671cf787b9b3",
                    "size": 741,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:ca3b13f1218741c60ede7f57f2e9b9abaa806b06095437ab68390316316438b0",
                    "size": 741,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:76bca8c995697ac964dbb6623ea8b932b8520666a39d1fc947dc30b41cae4551",
                    "size": 741,
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                }
            ]
        },
        "4.10.3-5": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:ca924a6874cf39f36cc6148da6f508fae3d5da2cb2918a84e18f87ed9134e273",
                    "size": 741,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:e3d343f63592100d3d4abcd276c97cdd64797b9ed10a94100157625bafd62319",
                    "size": 741,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:c36043eca7f79824be7b412f7ac1683127d204fc564bfef050c64a910a939ffa",
                    "size": 741,
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                }
            ]
        },
        "4.10.3-6": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:abcf53bd6a40dc0e95b74a1d07b1e861885b0d75edb36efe3ec5033a8c38f9f0",
                    "size": 741,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:c4c697fbe45d48b56a9cd92f183ecc4c54a0aa4ba37b0b8b6a21d40a47e45870",
                    "size": 741,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:d7cd65ce3066607c4e87cfbf1676671de0eeb1af59f0dbc499036304abff3af1",
                    "size": 741,
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                }
            ]
        },
        "4.10.3-7": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:f0ea2b96e0c088964599ae12f815e6a4640677c74cea38f492e8823d4fa071ed",
                    "size": 741,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:6600546897188ba887aefabb15e2c05e04c9d07972063726e8f53004c1e308ca",
                    "size": 741,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:0631dd078a9f309bcd21cf9e0bcabdd94201c3d70b65205b36bafcf9b8ed4ac5",
                    "size": 741,
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                }
            ]
        },
        "4.10.3-9": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:de4b9261cabf7f628df9b31352951cd746b873dba4c615df4093b300112b7182",
                    "size": 741,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:36d24bf07645c9fd6d54dcd302f70c4878668da421c93cf48e6a2f624cc75c35",
                    "size": 741,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:e15212b2b5dbb0ca9c20524b68bcb8a87bda09c6b8b5ba4976734605656fe802",
                    "size": 741,
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                }
            ]
        },
        "4.11.0-0": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:195b204a29a1e255635236804c25fdc047cd4864568c9d4abe2473ac6e2d2dcf",
                    "size": 741,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:402a0f584bb7e93f6365337d1e2936af1b2f87bf6238ee80e1cd0ce7c6020818",
                    "size": 741,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:08af09fb0255cc03e68e9c02b0eb1b870a7f6841ceca411ec2acc69be451b98b",
                    "size": 741,
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                }
            ]
        },
        "4.11.0-2": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:2fd1425f658a29db2acfcc53447ef719d50266ea7f60505125c0b5bad986db93",
                    "size": 741,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:387ccb9e02047f3da6c21970b24116aa1d135d49f40c10f11652f16a6aef2fb5",
                    "size": 741,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:bef214078e99c21aadca61369a9d4e9c82e6c8bb716bf84e5d19d56362079746",
                    "size": 741,
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                }
            ]
        },
        "4.11.0-4": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:47c3defb3a7c02bb7bd0acd574f15c721ba2bbdf54717b33d72749e75da0b44a",
                    "size": 741,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:54d198406537254bf8f36e71790b88c52675b6fd9dbee060579e3b6aa4c1fa9f",
                    "size": 741,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:b0b23c5bd2731321f1caea2d5d5081a13eb7945ffcad4f1c18c5a4ec8c0a90bd",
                    "size": 741,
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                }
            ]
        },
        "4.12.0-0": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:784f8a0484efe4036ec185b469c656c6bb61d3bb5cc5dddedc06e95083db8f03",
                    "size": 741,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:62e47ab765017844efbdcb75f1ea83c072d38be0d5e4972d7f6bfd470fa94d7f",
                    "size": 741,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:1ffaef05b07430db75e14c62ec779074a82bc06c46f3db16119e140fe925b3bc",
                    "size": 741,
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                }
            ]
        },
        "4.12.0-2": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:6345ac70f719afac3678401e98972abe0c2441060d3df889274579b2348bf105",
                    "size": 741,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:a1f8e1614750697888d2ea9c6cf16c1555cb4c3d094fa1872d6d7dd0db6ad553",
                    "size": 741,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:7e9d2117bc5472cd85726d5631c58738887b0f0d258750b14df7b1fb402f91fd",
                    "size": 741,
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                }
            ]
        },
        "4.13.0-1": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:bf9fa792b8b8d24530b46ec29b60df011e7674a5422f6c13c904428416319291",
                    "size": 741,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:a2bc71059ce41bcce597caa29babd4ffd28af9d27ce1819bf04efee8be7e041c",
                    "size": 741,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:e7dcab7c18dfcc107e45d31b8d24e6d88a3b99a8069785b485a1a7f28b92e9b4",
                    "size": 741,
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                }
            ]
        },
        "4.14.0-0": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:55d608f4c0ecfc8a3d1e5e8a2c560d3f4cd55bb4f78d49aac07e27b041631d25",
                    "size": 741,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:d5ddac071e1bfb83a5d7faedc5973bfa181083a84de037a025d226c65438fc34",
                    "size": 741,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:7c53f674c6651a6dc39d853ce975fd5a3d4345dab01a2975868a6c0d74b4931f",
                    "size": 741,
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                }
            ]
        },
        "4.9.2-5": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:eea62df8a63dcac35d02ffa3bc0745556b4d203fa3146a8abc9be0fb2ac00b82",
                    "size": 1155,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:dd9baf33f5d1b73fe98b706843ed1db4e242053f582dbec4a25ce8c3569cef5a",
                    "size": 1155,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:03db05673d031adf553589e2e18095b15c4ed4ed2d2754149f0c2306375de597",
                    "size": 1155,
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                }
            ]
        },
        "4.9.2-7": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:564b3b8cc9351e14e6c281e668ec87d4495258cd053ad050c4f68d90634fae4f",
                    "size": 1155,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:642f3bb5983e7ffd19a997b21d6f837b43e5959c90f5e8b57bfb05c2884361ab",
                    "size": 1155,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:0bced7d4d9f656023920ddae945fdd70ef638e97e584a47e73b7e93d00f0f181",
                    "size": 1155,
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                }
            ]
        },
        "latest": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.oci.image.index.v1+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:ca9f21810a1bd3e424ee40bd1441ee09f241375f02536af9b48b56f364ff9ef7",
                    "size": 676,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:e08a3fb42d3f1c94868b49aa01f95b1c8ca141060d0edef1f0fc2ff7f5664b84",
                    "size": 676,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:11955f91ad9e99a4e3202952478601d123c089f12f2d22b900d74af6e1b6d683",
                    "size": 676,
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:37ad5df702bf82e969ad645ad732967707c4492485659e998bc7d3cdfe20ec43",
                    "size": 566,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:ca9f21810a1bd3e424ee40bd1441ee09f241375f02536af9b48b56f364ff9ef7",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:3aac8f60c65bc66f0de9ec99a5eece7919f685e231f18a26948a56efe1681d1f",
                    "size": 566,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:e08a3fb42d3f1c94868b49aa01f95b1c8ca141060d0edef1f0fc2ff7f5664b84",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:f1a3ed30e7cff696d7feda0842092569e63ff09ad2760294fea6a0bb6ca0dec1",
                    "size": 566,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:11955f91ad9e99a4e3202952478601d123c089f12f2d22b900d74af6e1b6d683",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                }
            ]
        }
    },
    "tags": [
        "22.11.1-4",
        "22.9.0-0",
        "22.9.0-1",
        "22.9.0-2",
        "22.9.0-3",
        "23.1.0-1",
        "23.1.0-2",
        "23.1.0-3",
        "23.1.0-4",
        "23.11.0-0",
        "23.3.1-0",
        "23.3.1-1",
        "24.1.2-0",
        "24.3.0-0",
        "4.10.1-0",
        "4.10.2-0",
        "4.10.3-1",
        "4.10.3-10",
        "4.10.3-2",
        "4.10.3-3",
        "4.10.3-4",
        "4.10.3-5",
        "4.10.3-6",
        "4.10.3-7",
        "4.10.3-9",
        "4.11.0-0",
        "4.11.0-2",
        "4.11.0-4",
        "4.12.0-0",
        "4.12.0-2",
        "4.13.0-1",
        "4.14.0-0",
        "4.9.2-5",
        "4.9.2-7",
        "latest"
    ],
    "configs": {
        "22.11.1-4": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CONDA_DIR=/opt/conda",
                    "LANG=C.UTF-8",
                    "LC_ALL=C.UTF-8"
                ],
                "Entrypoint": [
                    "tini",
                    "--"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Labels": {
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "20.04"
                },
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2023-03-16T17:52:41.560257123Z",
            "history": [
                {
                    "created": "2023-03-08T04:41:24.616558596Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-08T04:41:24.68146178Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-08T04:41:24.736949919Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-08T04:41:24.79197019Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=20.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-08T04:41:26.82642813Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:20f2ff22b9a8ca9bec5178036c9ebc525a12cd4312daf5d14a9a631a30be20e1 in / "
                },
                {
                    "created": "2023-03-08T04:41:27.109028867Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-16T17:52:41.560257123Z",
                    "created_by": "ARG MINIFORGE_NAME=Miniforge3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-16T17:52:41.560257123Z",
                    "created_by": "ARG MINIFORGE_VERSION=22.11.1-4",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-16T17:52:41.560257123Z",
                    "created_by": "ARG TARGETPLATFORM",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-16T17:52:41.560257123Z",
                    "created_by": "ENV CONDA_DIR=/opt/conda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-16T17:52:41.560257123Z",
                    "created_by": "ENV LANG=C.UTF-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-16T17:52:41.560257123Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-16T17:52:41.560257123Z",
                    "created_by": "RUN |3 MINIFORGE_NAME=Miniforge3 MINIFORGE_VERSION=22.11.1-4 TARGETPLATFORM=linux/amd64 /bin/sh -c apt-get update > /dev/null &&     apt-get install --no-install-recommends --yes         wget bzip2 ca-certificates         git         tini         > /dev/null &&     apt-get clean &&     rm -rf /var/lib/apt/lists/* &&     wget --no-hsts --quiet https://github.com/conda-forge/miniforge/releases/download/${MINIFORGE_VERSION}/${MINIFORGE_NAME}-${MINIFORGE_VERSION}-Linux-$(uname -m).sh -O /tmp/miniforge.sh &&     /bin/bash /tmp/miniforge.sh -b -p ${CONDA_DIR} &&     rm /tmp/miniforge.sh &&     conda clean --tarballs --index-cache --packages --yes &&     find ${CONDA_DIR} -follow -type f -name '*.a' -delete &&     find ${CONDA_DIR} -follow -type f -name '*.pyc' -delete &&     conda clean --force-pkgs-dirs --all --yes  &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> /etc/skel/.bashrc &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-16T17:52:41.560257123Z",
                    "created_by": "ENTRYPOINT [\"tini\" \"--\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-16T17:52:41.560257123Z",
                    "created_by": "CMD [\"/bin/bash\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJzb3VyY2VzIjpbeyJ0eXBlIjoiZG9ja2VyLWltYWdlIiwicmVmIjoiZG9ja2VyLmlvL2xpYnJhcnkvdWJ1bnR1OmZvY2FsLTIwMjMwMzA4IiwicGluIjoic2hhMjU2OjI0YTBkZjQzNzMwMTU5OGQxYTRiNjJkZGY1OWZhMGVkMjk2OTE1MGQ3MGQ3NDhjODQyMjVlNjUwMWU5YzM2YjkifV19",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:62789ffcd78ce0eae545b2743541d5c063270fe9f45477acacf2031b93cea70f",
                    "sha256:9bacc3862c5300948bf40a9cac8452797dc43c07c79a562b91b07cb0a9cff746"
                ]
            }
        },
        "22.9.0-0": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CONDA_DIR=/opt/conda",
                    "LANG=C.UTF-8",
                    "LC_ALL=C.UTF-8"
                ],
                "Entrypoint": [
                    "tini",
                    "--"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2022-10-27T14:45:17.562600857Z",
            "history": [
                {
                    "created": "2022-10-25T01:53:34.67854161Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7633003155a1059419aa1a6756fafb6e4f419d65bff7feb7c945de1e29dccb1e in / "
                },
                {
                    "created": "2022-10-25T01:53:35.02678149Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-27T14:45:17.562600857Z",
                    "created_by": "ARG MINIFORGE_NAME=Miniforge3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-27T14:45:17.562600857Z",
                    "created_by": "ARG MINIFORGE_VERSION=22.9.0-0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-27T14:45:17.562600857Z",
                    "created_by": "ARG TARGETPLATFORM",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-27T14:45:17.562600857Z",
                    "created_by": "ENV CONDA_DIR=/opt/conda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-27T14:45:17.562600857Z",
                    "created_by": "ENV LANG=C.UTF-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-27T14:45:17.562600857Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-27T14:45:17.562600857Z",
                    "created_by": "RUN |3 MINIFORGE_NAME=Miniforge3 MINIFORGE_VERSION=22.9.0-0 TARGETPLATFORM=linux/amd64 /bin/sh -c apt-get update > /dev/null &&     apt-get install --no-install-recommends --yes         wget bzip2 ca-certificates         git         tini         > /dev/null &&     apt-get clean &&     rm -rf /var/lib/apt/lists/* &&     wget --no-hsts --quiet https://github.com/conda-forge/miniforge/releases/download/${MINIFORGE_VERSION}/${MINIFORGE_NAME}-${MINIFORGE_VERSION}-Linux-$(uname -m).sh -O /tmp/miniforge.sh &&     /bin/bash /tmp/miniforge.sh -b -p ${CONDA_DIR} &&     rm /tmp/miniforge.sh &&     conda clean --tarballs --index-cache --packages --yes &&     find ${CONDA_DIR} -follow -type f -name '*.a' -delete &&     find ${CONDA_DIR} -follow -type f -name '*.pyc' -delete &&     conda clean --force-pkgs-dirs --all --yes  &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> /etc/skel/.bashrc &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-10-27T14:45:17.562600857Z",
                    "created_by": "ENTRYPOINT [\"tini\" \"--\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-27T14:45:17.562600857Z",
                    "created_by": "CMD [\"/bin/bash\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJzb3VyY2VzIjpbeyJ0eXBlIjoiZG9ja2VyLWltYWdlIiwicmVmIjoiZG9ja2VyLmlvL2xpYnJhcnkvdWJ1bnR1OmZvY2FsLTIwMjIxMDE5IiwicGluIjoic2hhMjU2OjQ1MGUwNjY1ODhmNDJlYmUxNTUxZjNiMWE1MzUwMzRiNmFhNDZjZDkzNmZlN2YyYzZiMGQ3Mjk5N2VjNjFkYmQifV19",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f4462d5b2da2985f37409c9b257afd2b9fb82356ce4e43e804ee34214242e34a",
                    "sha256:6f0deb4860e6808c196a04af240734f1e54ad1e7cdc810aeb522875f4cf97ebc"
                ]
            }
        },
        "22.9.0-1": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CONDA_DIR=/opt/conda",
                    "LANG=C.UTF-8",
                    "LC_ALL=C.UTF-8"
                ],
                "Entrypoint": [
                    "tini",
                    "--"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2022-11-19T22:33:14.172653866Z",
            "history": [
                {
                    "created": "2022-10-25T01:53:34.67854161Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7633003155a1059419aa1a6756fafb6e4f419d65bff7feb7c945de1e29dccb1e in / "
                },
                {
                    "created": "2022-10-25T01:53:35.02678149Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-19T22:33:14.172653866Z",
                    "created_by": "ARG MINIFORGE_NAME=Miniforge3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-19T22:33:14.172653866Z",
                    "created_by": "ARG MINIFORGE_VERSION=22.9.0-2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-19T22:33:14.172653866Z",
                    "created_by": "ARG TARGETPLATFORM",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-19T22:33:14.172653866Z",
                    "created_by": "ENV CONDA_DIR=/opt/conda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-19T22:33:14.172653866Z",
                    "created_by": "ENV LANG=C.UTF-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-19T22:33:14.172653866Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-19T22:33:14.172653866Z",
                    "created_by": "RUN |3 MINIFORGE_NAME=Miniforge3 MINIFORGE_VERSION=22.9.0-1 TARGETPLATFORM=linux/amd64 /bin/sh -c apt-get update > /dev/null &&     apt-get install --no-install-recommends --yes         wget bzip2 ca-certificates         git         tini         > /dev/null &&     apt-get clean &&     rm -rf /var/lib/apt/lists/* &&     wget --no-hsts --quiet https://github.com/conda-forge/miniforge/releases/download/${MINIFORGE_VERSION}/${MINIFORGE_NAME}-${MINIFORGE_VERSION}-Linux-$(uname -m).sh -O /tmp/miniforge.sh &&     /bin/bash /tmp/miniforge.sh -b -p ${CONDA_DIR} &&     rm /tmp/miniforge.sh &&     conda clean --tarballs --index-cache --packages --yes &&     find ${CONDA_DIR} -follow -type f -name '*.a' -delete &&     find ${CONDA_DIR} -follow -type f -name '*.pyc' -delete &&     conda clean --force-pkgs-dirs --all --yes  &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> /etc/skel/.bashrc &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-11-19T22:33:14.172653866Z",
                    "created_by": "ENTRYPOINT [\"tini\" \"--\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-19T22:33:14.172653866Z",
                    "created_by": "CMD [\"/bin/bash\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJzb3VyY2VzIjpbeyJ0eXBlIjoiZG9ja2VyLWltYWdlIiwicmVmIjoiZG9ja2VyLmlvL2xpYnJhcnkvdWJ1bnR1OmZvY2FsLTIwMjIxMDE5IiwicGluIjoic2hhMjU2OjQ1MGUwNjY1ODhmNDJlYmUxNTUxZjNiMWE1MzUwMzRiNmFhNDZjZDkzNmZlN2YyYzZiMGQ3Mjk5N2VjNjFkYmQifV19",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f4462d5b2da2985f37409c9b257afd2b9fb82356ce4e43e804ee34214242e34a",
                    "sha256:09fbde07aa8e1d7fc4e77f3f5f517ce2ce351dc24b6d94ce34246b9db3301b1e"
                ]
            }
        },
        "22.9.0-3": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CONDA_DIR=/opt/conda",
                    "LANG=C.UTF-8",
                    "LC_ALL=C.UTF-8"
                ],
                "Entrypoint": [
                    "tini",
                    "--"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Labels": {
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "20.04"
                },
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2023-02-01T09:53:16.442620839Z",
            "history": [
                {
                    "created": "2023-01-26T13:19:55.524922848Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-26T13:19:55.620103398Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-26T13:19:55.735457902Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-26T13:19:55.803723269Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=20.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-26T13:19:57.695790187Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8b180a9b4497de0c6e131d6b48cf5c69a885379e63033ab9639d1655991e626c in / "
                },
                {
                    "created": "2023-01-26T13:19:57.976088931Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T09:53:16.442620839Z",
                    "created_by": "ARG MINIFORGE_NAME=Miniforge3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T09:53:16.442620839Z",
                    "created_by": "ARG MINIFORGE_VERSION=22.9.0-3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T09:53:16.442620839Z",
                    "created_by": "ARG TARGETPLATFORM",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T09:53:16.442620839Z",
                    "created_by": "ENV CONDA_DIR=/opt/conda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T09:53:16.442620839Z",
                    "created_by": "ENV LANG=C.UTF-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T09:53:16.442620839Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T09:53:16.442620839Z",
                    "created_by": "RUN |3 MINIFORGE_NAME=Miniforge3 MINIFORGE_VERSION=22.9.0-3 TARGETPLATFORM=linux/amd64 /bin/sh -c apt-get update > /dev/null &&     apt-get install --no-install-recommends --yes         wget bzip2 ca-certificates         git         tini         > /dev/null &&     apt-get clean &&     rm -rf /var/lib/apt/lists/* &&     wget --no-hsts --quiet https://github.com/conda-forge/miniforge/releases/download/${MINIFORGE_VERSION}/${MINIFORGE_NAME}-${MINIFORGE_VERSION}-Linux-$(uname -m).sh -O /tmp/miniforge.sh &&     /bin/bash /tmp/miniforge.sh -b -p ${CONDA_DIR} &&     rm /tmp/miniforge.sh &&     conda clean --tarballs --index-cache --packages --yes &&     find ${CONDA_DIR} -follow -type f -name '*.a' -delete &&     find ${CONDA_DIR} -follow -type f -name '*.pyc' -delete &&     conda clean --force-pkgs-dirs --all --yes  &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> /etc/skel/.bashrc &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-01T09:53:16.442620839Z",
                    "created_by": "ENTRYPOINT [\"tini\" \"--\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T09:53:16.442620839Z",
                    "created_by": "CMD [\"/bin/bash\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJzb3VyY2VzIjpbeyJ0eXBlIjoiZG9ja2VyLWltYWdlIiwicmVmIjoiZG9ja2VyLmlvL2xpYnJhcnkvdWJ1bnR1OmZvY2FsLTIwMjMwMTI2IiwicGluIjoic2hhMjU2OmIzMzMyNWEwMGM3YzI3YjIzYWU0OGNmMTdkMmM2NTRlMmMzMDgxMmIzNWU3ODQ2YzAwNjM4OTMxOGY2YTcxYzIifV19",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d543b8cad89e3428ac8852a13cb2dbfaf55b1e10fd95a9753e51faf393d60e81",
                    "sha256:94bbc1ac6badb6154c0a9ae5f94da65d1aaf86cab727e74fa9355b1262f85912"
                ]
            }
        },
        "23.1.0-1": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CONDA_DIR=/opt/conda",
                    "LANG=C.UTF-8",
                    "LC_ALL=C.UTF-8"
                ],
                "Entrypoint": [
                    "tini",
                    "--"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Labels": {
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "20.04"
                },
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2023-06-20T05:24:42.130644461Z",
            "history": [
                {
                    "created": "2023-04-13T13:05:13.496726073Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-13T13:05:13.557712287Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-13T13:05:13.637326115Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-13T13:05:13.704319522Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=20.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-13T13:05:15.451478418Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d05d1c0936b046937bd5755876db2f8da3ed8ccbcf464bb56c312fbc7ed78589 in / "
                },
                {
                    "created": "2023-04-13T13:05:15.714908196Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T05:24:42.130644461Z",
                    "created_by": "ARG MINIFORGE_NAME=Miniforge3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T05:24:42.130644461Z",
                    "created_by": "ARG MINIFORGE_VERSION=23.1.0-1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T05:24:42.130644461Z",
                    "created_by": "ARG TARGETPLATFORM",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T05:24:42.130644461Z",
                    "created_by": "ENV CONDA_DIR=/opt/conda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T05:24:42.130644461Z",
                    "created_by": "ENV LANG=C.UTF-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T05:24:42.130644461Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T05:24:42.130644461Z",
                    "created_by": "RUN |3 MINIFORGE_NAME=Miniforge3 MINIFORGE_VERSION=23.1.0-1 TARGETPLATFORM=linux/amd64 /bin/sh -c apt-get update > /dev/null &&     apt-get install --no-install-recommends --yes         wget bzip2 ca-certificates         git         tini         > /dev/null &&     apt-get clean &&     rm -rf /var/lib/apt/lists/* &&     wget --no-hsts --quiet https://github.com/conda-forge/miniforge/releases/download/${MINIFORGE_VERSION}/${MINIFORGE_NAME}-${MINIFORGE_VERSION}-Linux-$(uname -m).sh -O /tmp/miniforge.sh &&     /bin/bash /tmp/miniforge.sh -b -p ${CONDA_DIR} &&     rm /tmp/miniforge.sh &&     conda clean --tarballs --index-cache --packages --yes &&     find ${CONDA_DIR} -follow -type f -name '*.a' -delete &&     find ${CONDA_DIR} -follow -type f -name '*.pyc' -delete &&     conda clean --force-pkgs-dirs --all --yes  &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> /etc/skel/.bashrc &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-20T05:24:42.130644461Z",
                    "created_by": "ENTRYPOINT [\"tini\" \"--\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T05:24:42.130644461Z",
                    "created_by": "CMD [\"/bin/bash\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJzb3VyY2VzIjpbeyJ0eXBlIjoiZG9ja2VyLWltYWdlIiwicmVmIjoiZG9ja2VyLmlvL2xpYnJhcnkvdWJ1bnR1OmZvY2FsLTIwMjMwNDEyIiwicGluIjoic2hhMjU2OmRiOGJmNmY0ZmIzNTFhYTdhMjZlMjdiYTI2ODZjZjM1YTZhNDA5ZjY1NjAzZTU5ZDRjMjAzZTU4Mzg3ZGM2YjMifV19",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6f37ca73c74f2cef0ddefd960260f2033c16c84583c5507a4f37b1cf7631dc20",
                    "sha256:04951f7dd2f6b1e113b03d01bed3ea5ae2b6ace63d9c002086ef00b8ad69e160"
                ]
            }
        },
        "23.1.0-2": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CONDA_DIR=/opt/conda",
                    "LANG=C.UTF-8",
                    "LC_ALL=C.UTF-8"
                ],
                "Entrypoint": [
                    "tini",
                    "--"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Labels": {
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "20.04"
                },
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2023-06-27T19:57:43.524255281Z",
            "history": [
                {
                    "created": "2023-06-05T17:08:57.299070022Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T17:08:57.352553213Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T17:08:57.398862164Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T17:08:57.444423069Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=20.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T17:08:58.73643346Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:655d373cb551d0dd5d7867f88a4f98908dc3f16190986f693e88c423e6f21b8d in / "
                },
                {
                    "created": "2023-06-05T17:08:58.938601289Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-27T19:57:43.524255281Z",
                    "created_by": "ARG MINIFORGE_NAME=Miniforge3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-27T19:57:43.524255281Z",
                    "created_by": "ARG MINIFORGE_VERSION=23.1.0-2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-27T19:57:43.524255281Z",
                    "created_by": "ARG TARGETPLATFORM",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-27T19:57:43.524255281Z",
                    "created_by": "ENV CONDA_DIR=/opt/conda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-27T19:57:43.524255281Z",
                    "created_by": "ENV LANG=C.UTF-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-27T19:57:43.524255281Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-27T19:57:43.524255281Z",
                    "created_by": "RUN |3 MINIFORGE_NAME=Miniforge3 MINIFORGE_VERSION=23.1.0-2 TARGETPLATFORM=linux/amd64 /bin/sh -c apt-get update > /dev/null &&     apt-get install --no-install-recommends --yes         wget bzip2 ca-certificates         git         tini         > /dev/null &&     apt-get clean &&     rm -rf /var/lib/apt/lists/* &&     wget --no-hsts --quiet https://github.com/conda-forge/miniforge/releases/download/${MINIFORGE_VERSION}/${MINIFORGE_NAME}-${MINIFORGE_VERSION}-Linux-$(uname -m).sh -O /tmp/miniforge.sh &&     /bin/bash /tmp/miniforge.sh -b -p ${CONDA_DIR} &&     rm /tmp/miniforge.sh &&     conda clean --tarballs --index-cache --packages --yes &&     find ${CONDA_DIR} -follow -type f -name '*.a' -delete &&     find ${CONDA_DIR} -follow -type f -name '*.pyc' -delete &&     conda clean --force-pkgs-dirs --all --yes  &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> /etc/skel/.bashrc &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-27T19:57:43.524255281Z",
                    "created_by": "ENTRYPOINT [\"tini\" \"--\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-27T19:57:43.524255281Z",
                    "created_by": "CMD [\"/bin/bash\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJzb3VyY2VzIjpbeyJ0eXBlIjoiZG9ja2VyLWltYWdlIiwicmVmIjoiZG9ja2VyLmlvL2xpYnJhcnkvdWJ1bnR1OmZvY2FsLTIwMjMwNjA1IiwicGluIjoic2hhMjU2OmY4ZjY1ODQwN2MzNTczMzQ3MTU5NmYyNWZkYjRlZDc0OGI4MGU1NDVhYjU3ZTg0ZWZiZGIxZGJiYjAxYmQ3MGUifV19",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ec66d8cea54a2f4dfbbd8342ce082503bf8541e996a800c0d724b8dd2fea7f6a",
                    "sha256:cabdbe4ade461fd3178d2e4ea2030254c4ab0de85e07caaa9f1881a9635e2147"
                ]
            }
        },
        "23.1.0-3": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CONDA_DIR=/opt/conda",
                    "LANG=C.UTF-8",
                    "LC_ALL=C.UTF-8"
                ],
                "Entrypoint": [
                    "tini",
                    "--"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Labels": {
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "20.04"
                },
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2023-07-04T16:50:08.418219718Z",
            "history": [
                {
                    "created": "2023-06-28T09:59:08.268723252Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-28T09:59:08.336157128Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-28T09:59:08.397367339Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-28T09:59:08.466001389Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=20.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-28T09:59:10.116712823Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:12f97b7b044d0d1166dd59408c67f5610a764127aa8a01bc57db23bee48911af in / "
                },
                {
                    "created": "2023-06-28T09:59:10.356889385Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-04T16:50:08.418219718Z",
                    "created_by": "ARG MINIFORGE_NAME=Miniforge3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-04T16:50:08.418219718Z",
                    "created_by": "ARG MINIFORGE_VERSION=23.1.0-3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-04T16:50:08.418219718Z",
                    "created_by": "ARG TARGETPLATFORM",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-04T16:50:08.418219718Z",
                    "created_by": "ENV CONDA_DIR=/opt/conda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-04T16:50:08.418219718Z",
                    "created_by": "ENV LANG=C.UTF-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-04T16:50:08.418219718Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-04T16:50:08.418219718Z",
                    "created_by": "RUN |3 MINIFORGE_NAME=Miniforge3 MINIFORGE_VERSION=23.1.0-3 TARGETPLATFORM=linux/amd64 /bin/sh -c apt-get update > /dev/null &&     apt-get install --no-install-recommends --yes         wget bzip2 ca-certificates         git         tini         > /dev/null &&     apt-get clean &&     rm -rf /var/lib/apt/lists/* &&     wget --no-hsts --quiet https://github.com/conda-forge/miniforge/releases/download/${MINIFORGE_VERSION}/${MINIFORGE_NAME}-${MINIFORGE_VERSION}-Linux-$(uname -m).sh -O /tmp/miniforge.sh &&     /bin/bash /tmp/miniforge.sh -b -p ${CONDA_DIR} &&     rm /tmp/miniforge.sh &&     conda clean --tarballs --index-cache --packages --yes &&     find ${CONDA_DIR} -follow -type f -name '*.a' -delete &&     find ${CONDA_DIR} -follow -type f -name '*.pyc' -delete &&     conda clean --force-pkgs-dirs --all --yes  &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> /etc/skel/.bashrc &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-07-04T16:50:08.418219718Z",
                    "created_by": "ENTRYPOINT [\"tini\" \"--\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-04T16:50:08.418219718Z",
                    "created_by": "CMD [\"/bin/bash\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJzb3VyY2VzIjpbeyJ0eXBlIjoiZG9ja2VyLWltYWdlIiwicmVmIjoiZG9ja2VyLmlvL2xpYnJhcnkvdWJ1bnR1OmZvY2FsLTIwMjMwNjI0IiwicGluIjoic2hhMjU2OmM5ODIwYTQ0Yjk1MDk1NmE3OTBjMzU0NzAwYzExNjZhN2VjNjQ4YmMwZDIxNWZhNDM4ZDNhMzM5ODEyZjFkMDEifV19",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f5bb4f853c84f6579d86f72de5f1d43fc8866443d9a027e2106e3755acefd61c",
                    "sha256:c98b9e2d7a168a8aca3506ff6a7c921651e5df2791647e05e3619c1ecf144ee7"
                ]
            }
        },
        "23.1.0-4": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CONDA_DIR=/opt/conda",
                    "LANG=C.UTF-8",
                    "LC_ALL=C.UTF-8"
                ],
                "Entrypoint": [
                    "tini",
                    "--"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Labels": {
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "20.04"
                },
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2023-08-06T12:39:55.473424093Z",
            "history": [
                {
                    "created": "2023-08-01T06:16:43.955733321Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-01T06:16:44.018270958Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-01T06:16:44.073377052Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-01T06:16:44.123822186Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=20.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-01T06:16:45.820326219Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:233702cd816c07bc9fed02881b11fb3bdcaee41f3ce3ec1c9f0c4a060b155d5b in / "
                },
                {
                    "created": "2023-08-01T06:16:46.059984082Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-06T12:39:55.473424093Z",
                    "created_by": "ARG MINIFORGE_NAME=Miniforge3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-06T12:39:55.473424093Z",
                    "created_by": "ARG MINIFORGE_VERSION=23.1.0-4",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-06T12:39:55.473424093Z",
                    "created_by": "ARG TARGETPLATFORM",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-06T12:39:55.473424093Z",
                    "created_by": "ENV CONDA_DIR=/opt/conda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-06T12:39:55.473424093Z",
                    "created_by": "ENV LANG=C.UTF-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-06T12:39:55.473424093Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-06T12:39:55.473424093Z",
                    "created_by": "RUN |3 MINIFORGE_NAME=Miniforge3 MINIFORGE_VERSION=23.1.0-4 TARGETPLATFORM=linux/amd64 /bin/sh -c apt-get update > /dev/null &&     apt-get install --no-install-recommends --yes         wget bzip2 ca-certificates         git         tini         > /dev/null &&     apt-get clean &&     rm -rf /var/lib/apt/lists/* &&     wget --no-hsts --quiet https://github.com/conda-forge/miniforge/releases/download/${MINIFORGE_VERSION}/${MINIFORGE_NAME}-${MINIFORGE_VERSION}-Linux-$(uname -m).sh -O /tmp/miniforge.sh &&     /bin/bash /tmp/miniforge.sh -b -p ${CONDA_DIR} &&     rm /tmp/miniforge.sh &&     conda clean --tarballs --index-cache --packages --yes &&     find ${CONDA_DIR} -follow -type f -name '*.a' -delete &&     find ${CONDA_DIR} -follow -type f -name '*.pyc' -delete &&     conda clean --force-pkgs-dirs --all --yes  &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> /etc/skel/.bashrc &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-06T12:39:55.473424093Z",
                    "created_by": "ENTRYPOINT [\"tini\" \"--\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-06T12:39:55.473424093Z",
                    "created_by": "CMD [\"/bin/bash\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:954c82bdeb5fcc80094317528fa3fcbb1026aeff64f872527d35ec9b4343b84d",
                    "sha256:c1986b1b63570732da207ebe20a66db4f06d30fd1f2eaeb1874f2f002e7fb023"
                ]
            }
        },
        "23.11.0-0": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CONDA_DIR=/opt/conda",
                    "LANG=C.UTF-8",
                    "LC_ALL=C.UTF-8"
                ],
                "Entrypoint": [
                    "tini",
                    "--"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Labels": {
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "20.04"
                },
                "ArgsEscaped": true
            },
            "created": "2024-03-18T17:48:03.828963455Z",
            "history": [
                {
                    "created": "2024-02-16T21:32:49.66167695Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-16T21:32:49.694673293Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-16T21:32:49.719896531Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-16T21:32:49.758913757Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=20.04",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-16T21:32:52.17640841Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a25798f31219000d6a82d2c9258743926b1a400530d12dbb1eadf2c2519f9888 in / "
                },
                {
                    "created": "2024-02-16T21:32:52.391333754Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-18T17:48:03.828963455Z",
                    "created_by": "ARG MINIFORGE_NAME=Miniforge3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-18T17:48:03.828963455Z",
                    "created_by": "ARG MINIFORGE_VERSION=23.11.0-0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-18T17:48:03.828963455Z",
                    "created_by": "ARG TARGETPLATFORM",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-18T17:48:03.828963455Z",
                    "created_by": "ENV CONDA_DIR=/opt/conda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-18T17:48:03.828963455Z",
                    "created_by": "ENV LANG=C.UTF-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-18T17:48:03.828963455Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-18T17:48:03.828963455Z",
                    "created_by": "RUN |3 MINIFORGE_NAME=Miniforge3 MINIFORGE_VERSION=23.11.0-0 TARGETPLATFORM=linux/amd64 /bin/sh -c apt-get update > /dev/null &&     apt-get install --no-install-recommends --yes         wget bzip2 ca-certificates         git         tini         > /dev/null &&     apt-get clean &&     rm -rf /var/lib/apt/lists/* &&     wget --no-hsts --quiet https://github.com/conda-forge/miniforge/releases/download/${MINIFORGE_VERSION}/${MINIFORGE_NAME}-${MINIFORGE_VERSION}-Linux-$(uname -m).sh -O /tmp/miniforge.sh &&     /bin/bash /tmp/miniforge.sh -b -p ${CONDA_DIR} &&     rm /tmp/miniforge.sh &&     conda clean --tarballs --index-cache --packages --yes &&     find ${CONDA_DIR} -follow -type f -name '*.a' -delete &&     find ${CONDA_DIR} -follow -type f -name '*.pyc' -delete &&     conda clean --force-pkgs-dirs --all --yes  &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> /etc/skel/.bashrc &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-18T17:48:03.828963455Z",
                    "created_by": "ENTRYPOINT [\"tini\" \"--\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-18T17:48:03.828963455Z",
                    "created_by": "CMD [\"/bin/bash\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5faf9c0a9efe4675ecd21a4ec417d51077d5e75da9e673161a94e7d6cd43f92c",
                    "sha256:9855b1611ba442c19cd16ec98a6f11a1e6ea91a009ad6fde85f2374003c1fd22"
                ]
            }
        },
        "23.3.1-0": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CONDA_DIR=/opt/conda",
                    "LANG=C.UTF-8",
                    "LC_ALL=C.UTF-8"
                ],
                "Entrypoint": [
                    "tini",
                    "--"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Labels": {
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "20.04"
                },
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2023-08-21T00:41:01.76195751Z",
            "history": [
                {
                    "created": "2023-08-01T06:16:43.955733321Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-01T06:16:44.018270958Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-01T06:16:44.073377052Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-01T06:16:44.123822186Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=20.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-01T06:16:45.820326219Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:233702cd816c07bc9fed02881b11fb3bdcaee41f3ce3ec1c9f0c4a060b155d5b in / "
                },
                {
                    "created": "2023-08-01T06:16:46.059984082Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T00:41:01.76195751Z",
                    "created_by": "ARG MINIFORGE_NAME=Miniforge3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T00:41:01.76195751Z",
                    "created_by": "ARG MINIFORGE_VERSION=23.3.1-0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T00:41:01.76195751Z",
                    "created_by": "ARG TARGETPLATFORM",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T00:41:01.76195751Z",
                    "created_by": "ENV CONDA_DIR=/opt/conda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T00:41:01.76195751Z",
                    "created_by": "ENV LANG=C.UTF-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T00:41:01.76195751Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T00:41:01.76195751Z",
                    "created_by": "RUN |3 MINIFORGE_NAME=Miniforge3 MINIFORGE_VERSION=23.3.1-0 TARGETPLATFORM=linux/amd64 /bin/sh -c apt-get update > /dev/null &&     apt-get install --no-install-recommends --yes         wget bzip2 ca-certificates         git         tini         > /dev/null &&     apt-get clean &&     rm -rf /var/lib/apt/lists/* &&     wget --no-hsts --quiet https://github.com/conda-forge/miniforge/releases/download/${MINIFORGE_VERSION}/${MINIFORGE_NAME}-${MINIFORGE_VERSION}-Linux-$(uname -m).sh -O /tmp/miniforge.sh &&     /bin/bash /tmp/miniforge.sh -b -p ${CONDA_DIR} &&     rm /tmp/miniforge.sh &&     conda clean --tarballs --index-cache --packages --yes &&     find ${CONDA_DIR} -follow -type f -name '*.a' -delete &&     find ${CONDA_DIR} -follow -type f -name '*.pyc' -delete &&     conda clean --force-pkgs-dirs --all --yes  &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> /etc/skel/.bashrc &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T00:41:01.76195751Z",
                    "created_by": "ENTRYPOINT [\"tini\" \"--\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T00:41:01.76195751Z",
                    "created_by": "CMD [\"/bin/bash\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:954c82bdeb5fcc80094317528fa3fcbb1026aeff64f872527d35ec9b4343b84d",
                    "sha256:b60e53903c356d031a69b772129106bbf3deaf6bd038968239cc334abeb682ad"
                ]
            }
        },
        "23.3.1-1": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CONDA_DIR=/opt/conda",
                    "LANG=C.UTF-8",
                    "LC_ALL=C.UTF-8"
                ],
                "Entrypoint": [
                    "tini",
                    "--"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Labels": {
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "20.04"
                },
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2023-12-18T17:02:24.402598694Z",
            "history": [
                {
                    "created": "2023-12-13T10:27:43.956028683Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-13T10:27:44.019734751Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-13T10:27:44.068648223Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-13T10:27:44.112893577Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=20.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-13T10:27:45.59526847Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5696198fbfd4074852bdee76ffd84da75da8de76727cef4f0cdd265f7bee6b76 in / "
                },
                {
                    "created": "2023-12-13T10:27:45.793268447Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-18T17:02:24.402598694Z",
                    "created_by": "ARG MINIFORGE_NAME=Miniforge3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-18T17:02:24.402598694Z",
                    "created_by": "ARG MINIFORGE_VERSION=23.3.1-1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-18T17:02:24.402598694Z",
                    "created_by": "ARG TARGETPLATFORM",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-18T17:02:24.402598694Z",
                    "created_by": "ENV CONDA_DIR=/opt/conda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-18T17:02:24.402598694Z",
                    "created_by": "ENV LANG=C.UTF-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-18T17:02:24.402598694Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-18T17:02:24.402598694Z",
                    "created_by": "RUN |3 MINIFORGE_NAME=Miniforge3 MINIFORGE_VERSION=23.3.1-1 TARGETPLATFORM=linux/amd64 /bin/sh -c apt-get update > /dev/null &&     apt-get install --no-install-recommends --yes         wget bzip2 ca-certificates         git         tini         > /dev/null &&     apt-get clean &&     rm -rf /var/lib/apt/lists/* &&     wget --no-hsts --quiet https://github.com/conda-forge/miniforge/releases/download/${MINIFORGE_VERSION}/${MINIFORGE_NAME}-${MINIFORGE_VERSION}-Linux-$(uname -m).sh -O /tmp/miniforge.sh &&     /bin/bash /tmp/miniforge.sh -b -p ${CONDA_DIR} &&     rm /tmp/miniforge.sh &&     conda clean --tarballs --index-cache --packages --yes &&     find ${CONDA_DIR} -follow -type f -name '*.a' -delete &&     find ${CONDA_DIR} -follow -type f -name '*.pyc' -delete &&     conda clean --force-pkgs-dirs --all --yes  &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> /etc/skel/.bashrc &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-18T17:02:24.402598694Z",
                    "created_by": "ENTRYPOINT [\"tini\" \"--\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-18T17:02:24.402598694Z",
                    "created_by": "CMD [\"/bin/bash\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3a03f09d212915b240e9d216069aba5652ed4765c7e4b098c65e71860d47b8e1",
                    "sha256:8ea5de8755663b02dee503309d34b5269627944577ec18c85fad6bb299d188b8"
                ]
            }
        },
        "24.1.2-0": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CONDA_DIR=/opt/conda",
                    "LANG=C.UTF-8",
                    "LC_ALL=C.UTF-8"
                ],
                "Entrypoint": [
                    "tini",
                    "--"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Labels": {
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "20.04"
                },
                "ArgsEscaped": true
            },
            "created": "2024-04-16T18:27:23.483362429Z",
            "history": [
                {
                    "created": "2024-04-10T18:50:35.72773029Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-10T18:50:35.75382666Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-10T18:50:35.786388285Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-10T18:50:35.810453242Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=20.04",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-10T18:50:37.575221925Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ea2128e23dce0162557abadd80656bd5ae047d573095d1d4323eb4154490dfdc in / "
                },
                {
                    "created": "2024-04-10T18:50:37.922041804Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-16T18:27:23.483362429Z",
                    "created_by": "ARG MINIFORGE_NAME=Miniforge3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-16T18:27:23.483362429Z",
                    "created_by": "ARG MINIFORGE_VERSION=24.1.2-0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-16T18:27:23.483362429Z",
                    "created_by": "ARG TARGETPLATFORM",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-16T18:27:23.483362429Z",
                    "created_by": "ENV CONDA_DIR=/opt/conda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-16T18:27:23.483362429Z",
                    "created_by": "ENV LANG=C.UTF-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-16T18:27:23.483362429Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-16T18:27:23.483362429Z",
                    "created_by": "RUN |3 MINIFORGE_NAME=Miniforge3 MINIFORGE_VERSION=24.1.2-0 TARGETPLATFORM=linux/amd64 /bin/sh -c apt-get update > /dev/null &&     apt-get install --no-install-recommends --yes         wget bzip2 ca-certificates         git         tini         > /dev/null &&     apt-get clean &&     rm -rf /var/lib/apt/lists/* &&     wget --no-hsts --quiet https://github.com/conda-forge/miniforge/releases/download/${MINIFORGE_VERSION}/${MINIFORGE_NAME}-${MINIFORGE_VERSION}-Linux-$(uname -m).sh -O /tmp/miniforge.sh &&     /bin/bash /tmp/miniforge.sh -b -p ${CONDA_DIR} &&     rm /tmp/miniforge.sh &&     conda clean --tarballs --index-cache --packages --yes &&     find ${CONDA_DIR} -follow -type f -name '*.a' -delete &&     find ${CONDA_DIR} -follow -type f -name '*.pyc' -delete &&     conda clean --force-pkgs-dirs --all --yes  &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> /etc/skel/.bashrc &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-16T18:27:23.483362429Z",
                    "created_by": "ENTRYPOINT [\"tini\" \"--\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-16T18:27:23.483362429Z",
                    "created_by": "CMD [\"/bin/bash\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:106e8431b412f51ccd75ea46a2d5cb4343b23273cbcf50188377cb93aa9a6d82",
                    "sha256:77dd3e8a740c9d1f15fecd2c4e770f83e0f082131cb244b2008b48683b69e096"
                ]
            }
        },
        "24.3.0-0": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CONDA_DIR=/opt/conda",
                    "LANG=C.UTF-8",
                    "LC_ALL=C.UTF-8"
                ],
                "Entrypoint": [
                    "tini",
                    "--"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Labels": {
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "20.04"
                },
                "ArgsEscaped": true
            },
            "created": "2024-05-21T14:15:31.647971487Z",
            "history": [
                {
                    "created": "2024-04-27T14:03:39.495375794Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:03:39.518457955Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:03:39.540231445Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:03:39.564669578Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=20.04",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:03:41.34852592Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e5742fae181dc02a419e48d202fdd6a561b79ccbe7d3415e15e3d2c12e444a2a in / "
                },
                {
                    "created": "2024-04-27T14:03:41.56764926Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-21T14:15:31.647971487Z",
                    "created_by": "ARG MINIFORGE_NAME=Miniforge3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-21T14:15:31.647971487Z",
                    "created_by": "ARG MINIFORGE_VERSION=24.3.0-0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-21T14:15:31.647971487Z",
                    "created_by": "ARG TARGETPLATFORM",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-21T14:15:31.647971487Z",
                    "created_by": "ENV CONDA_DIR=/opt/conda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-21T14:15:31.647971487Z",
                    "created_by": "ENV LANG=C.UTF-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-21T14:15:31.647971487Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-21T14:15:31.647971487Z",
                    "created_by": "RUN |3 MINIFORGE_NAME=Miniforge3 MINIFORGE_VERSION=24.3.0-0 TARGETPLATFORM=linux/amd64 /bin/sh -c apt-get update > /dev/null &&     apt-get install --no-install-recommends --yes         wget bzip2 ca-certificates         git         tini         > /dev/null &&     apt-get clean &&     rm -rf /var/lib/apt/lists/* &&     wget --no-hsts --quiet https://github.com/conda-forge/miniforge/releases/download/${MINIFORGE_VERSION}/${MINIFORGE_NAME}-${MINIFORGE_VERSION}-Linux-$(uname -m).sh -O /tmp/miniforge.sh &&     /bin/bash /tmp/miniforge.sh -b -p ${CONDA_DIR} &&     rm /tmp/miniforge.sh &&     conda clean --tarballs --index-cache --packages --yes &&     find ${CONDA_DIR} -follow -type f -name '*.a' -delete &&     find ${CONDA_DIR} -follow -type f -name '*.pyc' -delete &&     conda clean --force-pkgs-dirs --all --yes  &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> /etc/skel/.bashrc &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-21T14:15:31.647971487Z",
                    "created_by": "ENTRYPOINT [\"tini\" \"--\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-21T14:15:31.647971487Z",
                    "created_by": "CMD [\"/bin/bash\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4a1518ebc26e2e4c26f1c5d78a36d41d87d2fd4a7e4ad37c5f9033f2eb52f26b",
                    "sha256:9a9f7b9bf898d46af5ab784820a3d6ada63917c7daa7244636716d7c13d4b3aa"
                ]
            }
        },
        "4.10.1-0": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CONDA_DIR=/opt/conda",
                    "LANG=C.UTF-8",
                    "LC_ALL=C.UTF-8"
                ],
                "Entrypoint": [
                    "tini",
                    "--"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2021-06-29T20:06:15.936666456Z",
            "history": [
                {
                    "created": "2021-01-21T03:38:20.003680095Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2a90223d9f00d31e31eff6b207c57af4b7d27276195b94bec991457a6998180c in / "
                },
                {
                    "created": "2021-01-21T03:38:21.115557643Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-01-21T03:38:22.166838465Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-21T03:38:23.18135616Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-01-21T03:38:23.37559427Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-29T20:06:15.936666456Z",
                    "created_by": "ARG MINIFORGE_NAME=Miniforge3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-29T20:06:15.936666456Z",
                    "created_by": "ARG MINIFORGE_VERSION=4.10.1-0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-29T20:06:15.936666456Z",
                    "created_by": "ARG TINI_VERSION=v0.18.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-29T20:06:15.936666456Z",
                    "created_by": "ARG TARGETPLATFORM",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-29T20:06:15.936666456Z",
                    "created_by": "ENV CONDA_DIR=/opt/conda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-29T20:06:15.936666456Z",
                    "created_by": "ENV LANG=C.UTF-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-29T20:06:15.936666456Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-29T20:06:15.936666456Z",
                    "created_by": "RUN |4 MINIFORGE_NAME=Miniforge3 MINIFORGE_VERSION=4.10.1-0 TINI_VERSION=v0.18.0 TARGETPLATFORM=linux/amd64 /bin/sh -c apt-get update > /dev/null &&     apt-get install --no-install-recommends --yes         wget bzip2 ca-certificates         git > /dev/null &&     apt-get clean &&     rm -rf /var/lib/apt/lists/* &&     TARGETARCH=\"$(echo ${TARGETPLATFORM} | cut -d / -f 2)\"; case ${TARGETARCH} in \"ppc64le\") TARGETARCH=\"ppc64el\" ;; *) ;; esac ;     wget --no-hsts --quiet https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini-${TARGETARCH} -O /usr/local/bin/tini &&     chmod +x /usr/local/bin/tini &&     wget --no-hsts --quiet https://github.com/conda-forge/miniforge/releases/download/${MINIFORGE_VERSION}/${MINIFORGE_NAME}-${MINIFORGE_VERSION}-Linux-$(uname -m).sh -O /tmp/miniforge.sh &&     /bin/bash /tmp/miniforge.sh -b -p ${CONDA_DIR} &&     rm /tmp/miniforge.sh &&     conda clean -tipsy &&     find ${CONDA_DIR} -follow -type f -name '*.a' -delete &&     find ${CONDA_DIR} -follow -type f -name '*.pyc' -delete &&     conda clean -afy &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> /etc/skel/.bashrc &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-29T20:06:15.936666456Z",
                    "created_by": "ENTRYPOINT [\"tini\" \"--\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-29T20:06:15.936666456Z",
                    "created_by": "CMD [\"/bin/bash\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9f32931c9d28f10104a8eb1330954ba90e76d92b02c5256521ba864feec14009",
                    "sha256:dbf2c0f42a39b60301f6d3936f7f8adb59bb97d31ec11cc4a049ce81155fef89",
                    "sha256:02473afd360bd5391fa51b6e7849ce88732ae29f50f3630c3551f528eba66d1e",
                    "sha256:92457fefdbe9ea71ab3bf4d5179b5e2b98cea9efd64969aee452f69716b68104"
                ]
            }
        },
        "4.10.2-0": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CONDA_DIR=/opt/conda",
                    "LANG=C.UTF-8",
                    "LC_ALL=C.UTF-8"
                ],
                "Entrypoint": [
                    "tini",
                    "--"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2021-06-30T05:50:22.877969079Z",
            "history": [
                {
                    "created": "2021-01-21T03:38:20.003680095Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2a90223d9f00d31e31eff6b207c57af4b7d27276195b94bec991457a6998180c in / "
                },
                {
                    "created": "2021-01-21T03:38:21.115557643Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-01-21T03:38:22.166838465Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-21T03:38:23.18135616Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-01-21T03:38:23.37559427Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-30T05:50:22.877969079Z",
                    "created_by": "ARG MINIFORGE_NAME=Miniforge3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-30T05:50:22.877969079Z",
                    "created_by": "ARG MINIFORGE_VERSION=4.10.2-0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-30T05:50:22.877969079Z",
                    "created_by": "ARG TINI_VERSION=v0.18.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-30T05:50:22.877969079Z",
                    "created_by": "ARG TARGETPLATFORM",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-30T05:50:22.877969079Z",
                    "created_by": "ENV CONDA_DIR=/opt/conda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-30T05:50:22.877969079Z",
                    "created_by": "ENV LANG=C.UTF-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-30T05:50:22.877969079Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-30T05:50:22.877969079Z",
                    "created_by": "RUN |4 MINIFORGE_NAME=Miniforge3 MINIFORGE_VERSION=4.10.2-0 TINI_VERSION=v0.18.0 TARGETPLATFORM=linux/amd64 /bin/sh -c apt-get update > /dev/null &&     apt-get install --no-install-recommends --yes         wget bzip2 ca-certificates         git > /dev/null &&     apt-get clean &&     rm -rf /var/lib/apt/lists/* &&     TARGETARCH=\"$(echo ${TARGETPLATFORM} | cut -d / -f 2)\"; case ${TARGETARCH} in \"ppc64le\") TARGETARCH=\"ppc64el\" ;; *) ;; esac ;     wget --no-hsts --quiet https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini-${TARGETARCH} -O /usr/local/bin/tini &&     chmod +x /usr/local/bin/tini &&     wget --no-hsts --quiet https://github.com/conda-forge/miniforge/releases/download/${MINIFORGE_VERSION}/${MINIFORGE_NAME}-${MINIFORGE_VERSION}-Linux-$(uname -m).sh -O /tmp/miniforge.sh &&     /bin/bash /tmp/miniforge.sh -b -p ${CONDA_DIR} &&     rm /tmp/miniforge.sh &&     conda clean -tipsy &&     find ${CONDA_DIR} -follow -type f -name '*.a' -delete &&     find ${CONDA_DIR} -follow -type f -name '*.pyc' -delete &&     conda clean -afy &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> /etc/skel/.bashrc &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-30T05:50:22.877969079Z",
                    "created_by": "ENTRYPOINT [\"tini\" \"--\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-30T05:50:22.877969079Z",
                    "created_by": "CMD [\"/bin/bash\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9f32931c9d28f10104a8eb1330954ba90e76d92b02c5256521ba864feec14009",
                    "sha256:dbf2c0f42a39b60301f6d3936f7f8adb59bb97d31ec11cc4a049ce81155fef89",
                    "sha256:02473afd360bd5391fa51b6e7849ce88732ae29f50f3630c3551f528eba66d1e",
                    "sha256:472e8bc6feebdd9b82476930803b88dbe2aae83b50964a6430b89a6b1dd1b730"
                ]
            }
        },
        "4.10.3-1": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CONDA_DIR=/opt/conda",
                    "LANG=C.UTF-8",
                    "LC_ALL=C.UTF-8"
                ],
                "Entrypoint": [
                    "tini",
                    "--"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2021-07-06T03:38:08.768988261Z",
            "history": [
                {
                    "created": "2021-01-21T03:38:20.003680095Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2a90223d9f00d31e31eff6b207c57af4b7d27276195b94bec991457a6998180c in / "
                },
                {
                    "created": "2021-01-21T03:38:21.115557643Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-01-21T03:38:22.166838465Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-21T03:38:23.18135616Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-01-21T03:38:23.37559427Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-06T03:38:08.768988261Z",
                    "created_by": "ARG MINIFORGE_NAME=Miniforge3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-06T03:38:08.768988261Z",
                    "created_by": "ARG MINIFORGE_VERSION=4.10.3-1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-06T03:38:08.768988261Z",
                    "created_by": "ARG TINI_VERSION=v0.18.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-06T03:38:08.768988261Z",
                    "created_by": "ARG TARGETPLATFORM",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-06T03:38:08.768988261Z",
                    "created_by": "ENV CONDA_DIR=/opt/conda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-06T03:38:08.768988261Z",
                    "created_by": "ENV LANG=C.UTF-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-06T03:38:08.768988261Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-06T03:38:08.768988261Z",
                    "created_by": "RUN |4 MINIFORGE_NAME=Miniforge3 MINIFORGE_VERSION=4.10.3-1 TINI_VERSION=v0.18.0 TARGETPLATFORM=linux/amd64 /bin/sh -c apt-get update > /dev/null &&     apt-get install --no-install-recommends --yes         wget bzip2 ca-certificates         git > /dev/null &&     apt-get clean &&     rm -rf /var/lib/apt/lists/* &&     TARGETARCH=\"$(echo ${TARGETPLATFORM} | cut -d / -f 2)\"; case ${TARGETARCH} in \"ppc64le\") TARGETARCH=\"ppc64el\" ;; *) ;; esac ;     wget --no-hsts --quiet https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini-${TARGETARCH} -O /usr/local/bin/tini &&     chmod +x /usr/local/bin/tini &&     wget --no-hsts --quiet https://github.com/conda-forge/miniforge/releases/download/${MINIFORGE_VERSION}/${MINIFORGE_NAME}-${MINIFORGE_VERSION}-Linux-$(uname -m).sh -O /tmp/miniforge.sh &&     /bin/bash /tmp/miniforge.sh -b -p ${CONDA_DIR} &&     rm /tmp/miniforge.sh &&     conda clean -tipsy &&     find ${CONDA_DIR} -follow -type f -name '*.a' -delete &&     find ${CONDA_DIR} -follow -type f -name '*.pyc' -delete &&     conda clean -afy &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> /etc/skel/.bashrc &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-07-06T03:38:08.768988261Z",
                    "created_by": "ENTRYPOINT [\"tini\" \"--\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-06T03:38:08.768988261Z",
                    "created_by": "CMD [\"/bin/bash\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9f32931c9d28f10104a8eb1330954ba90e76d92b02c5256521ba864feec14009",
                    "sha256:dbf2c0f42a39b60301f6d3936f7f8adb59bb97d31ec11cc4a049ce81155fef89",
                    "sha256:02473afd360bd5391fa51b6e7849ce88732ae29f50f3630c3551f528eba66d1e",
                    "sha256:5c41531b0badbd6cbef2f79b0357028a5fc10855b11bc4808d87d0f8ecea5cbf"
                ]
            }
        },
        "4.10.3-10": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CONDA_DIR=/opt/conda",
                    "LANG=C.UTF-8",
                    "LC_ALL=C.UTF-8"
                ],
                "Entrypoint": [
                    "tini",
                    "--"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2021-12-01T20:41:08.609010984Z",
            "history": [
                {
                    "created": "2021-10-16T00:37:47.226745473Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5d68d27cc15a80653c93d3a0b262a28112d47a46326ff5fc2dfbf7fa3b9a0ce8 in / "
                },
                {
                    "created": "2021-10-16T00:37:47.578710012Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-01T20:41:08.609010984Z",
                    "created_by": "ARG MINIFORGE_NAME=Miniforge3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-01T20:41:08.609010984Z",
                    "created_by": "ARG MINIFORGE_VERSION=4.10.3-10",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-01T20:41:08.609010984Z",
                    "created_by": "ARG TINI_VERSION=v0.18.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-01T20:41:08.609010984Z",
                    "created_by": "ARG TARGETPLATFORM",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-01T20:41:08.609010984Z",
                    "created_by": "ENV CONDA_DIR=/opt/conda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-01T20:41:08.609010984Z",
                    "created_by": "ENV LANG=C.UTF-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-01T20:41:08.609010984Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-01T20:41:08.609010984Z",
                    "created_by": "RUN |4 MINIFORGE_NAME=Miniforge3 MINIFORGE_VERSION=4.10.3-10 TINI_VERSION=v0.18.0 TARGETPLATFORM=linux/amd64 /bin/sh -c apt-get update > /dev/null &&     apt-get install --no-install-recommends --yes         wget bzip2 ca-certificates         git > /dev/null &&     apt-get clean &&     rm -rf /var/lib/apt/lists/* &&     TARGETARCH=\"$(echo ${TARGETPLATFORM} | cut -d / -f 2)\"; case ${TARGETARCH} in \"ppc64le\") TARGETARCH=\"ppc64el\" ;; *) ;; esac ;     wget --no-hsts --quiet https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini-${TARGETARCH} -O /usr/local/bin/tini &&     chmod +x /usr/local/bin/tini &&     wget --no-hsts --quiet https://github.com/conda-forge/miniforge/releases/download/${MINIFORGE_VERSION}/${MINIFORGE_NAME}-${MINIFORGE_VERSION}-Linux-$(uname -m).sh -O /tmp/miniforge.sh &&     /bin/bash /tmp/miniforge.sh -b -p ${CONDA_DIR} &&     rm /tmp/miniforge.sh &&     conda clean -tipsy &&     find ${CONDA_DIR} -follow -type f -name '*.a' -delete &&     find ${CONDA_DIR} -follow -type f -name '*.pyc' -delete &&     conda clean -afy &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> /etc/skel/.bashrc &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-12-01T20:41:08.609010984Z",
                    "created_by": "ENTRYPOINT [\"tini\" \"--\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-01T20:41:08.609010984Z",
                    "created_by": "CMD [\"/bin/bash\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9f54eef412758095c8079ac465d494a2872e02e90bf1fb5f12a1641c0d1bb78b",
                    "sha256:4028ac66d9739736ed8cd7cfcae1057de971af80dd191026274cf441030c9a43"
                ]
            }
        },
        "4.10.3-2": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CONDA_DIR=/opt/conda",
                    "LANG=C.UTF-8",
                    "LC_ALL=C.UTF-8"
                ],
                "Entrypoint": [
                    "tini",
                    "--"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2021-07-19T17:19:22.505954553Z",
            "history": [
                {
                    "created": "2021-07-13T22:29:34.335247052Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5c3d9d2597e01d1cee8513ff0e1344e7791e6f582be2cbd1d5777dd204780f1c in / "
                },
                {
                    "created": "2021-07-13T22:29:34.750851774Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T17:19:22.505954553Z",
                    "created_by": "ARG MINIFORGE_NAME=Miniforge3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T17:19:22.505954553Z",
                    "created_by": "ARG MINIFORGE_VERSION=4.10.3-2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T17:19:22.505954553Z",
                    "created_by": "ARG TINI_VERSION=v0.18.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T17:19:22.505954553Z",
                    "created_by": "ARG TARGETPLATFORM",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T17:19:22.505954553Z",
                    "created_by": "ENV CONDA_DIR=/opt/conda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T17:19:22.505954553Z",
                    "created_by": "ENV LANG=C.UTF-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T17:19:22.505954553Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T17:19:22.505954553Z",
                    "created_by": "RUN |4 MINIFORGE_NAME=Miniforge3 MINIFORGE_VERSION=4.10.3-2 TINI_VERSION=v0.18.0 TARGETPLATFORM=linux/amd64 /bin/sh -c apt-get update > /dev/null &&     apt-get install --no-install-recommends --yes         wget bzip2 ca-certificates         git > /dev/null &&     apt-get clean &&     rm -rf /var/lib/apt/lists/* &&     TARGETARCH=\"$(echo ${TARGETPLATFORM} | cut -d / -f 2)\"; case ${TARGETARCH} in \"ppc64le\") TARGETARCH=\"ppc64el\" ;; *) ;; esac ;     wget --no-hsts --quiet https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini-${TARGETARCH} -O /usr/local/bin/tini &&     chmod +x /usr/local/bin/tini &&     wget --no-hsts --quiet https://github.com/conda-forge/miniforge/releases/download/${MINIFORGE_VERSION}/${MINIFORGE_NAME}-${MINIFORGE_VERSION}-Linux-$(uname -m).sh -O /tmp/miniforge.sh &&     /bin/bash /tmp/miniforge.sh -b -p ${CONDA_DIR} &&     rm /tmp/miniforge.sh &&     conda clean -tipsy &&     find ${CONDA_DIR} -follow -type f -name '*.a' -delete &&     find ${CONDA_DIR} -follow -type f -name '*.pyc' -delete &&     conda clean -afy &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> /etc/skel/.bashrc &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-07-19T17:19:22.505954553Z",
                    "created_by": "ENTRYPOINT [\"tini\" \"--\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T17:19:22.505954553Z",
                    "created_by": "CMD [\"/bin/bash\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a70daca533d02f0886624703e70526b9ce8969b8cb87ff1eac163441fe071aa3",
                    "sha256:0206848fae6a62181a5b826a8f3357f5f75fd7b746bb2c2a4c62ed57a6a4c82a"
                ]
            }
        },
        "4.10.3-3": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CONDA_DIR=/opt/conda",
                    "LANG=C.UTF-8",
                    "LC_ALL=C.UTF-8"
                ],
                "Entrypoint": [
                    "tini",
                    "--"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2021-07-27T16:25:26.146222557Z",
            "history": [
                {
                    "created": "2021-07-26T21:21:39.951432409Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:524e8d93ad65f08a0cb0d144268350186e36f508006b05b8faf2e1289499b59f in / "
                },
                {
                    "created": "2021-07-26T21:21:40.307832875Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-27T16:25:26.146222557Z",
                    "created_by": "ARG MINIFORGE_NAME=Miniforge3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-27T16:25:26.146222557Z",
                    "created_by": "ARG MINIFORGE_VERSION=4.10.3-3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-27T16:25:26.146222557Z",
                    "created_by": "ARG TINI_VERSION=v0.18.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-27T16:25:26.146222557Z",
                    "created_by": "ARG TARGETPLATFORM",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-27T16:25:26.146222557Z",
                    "created_by": "ENV CONDA_DIR=/opt/conda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-27T16:25:26.146222557Z",
                    "created_by": "ENV LANG=C.UTF-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-27T16:25:26.146222557Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-27T16:25:26.146222557Z",
                    "created_by": "RUN |4 MINIFORGE_NAME=Miniforge3 MINIFORGE_VERSION=4.10.3-3 TINI_VERSION=v0.18.0 TARGETPLATFORM=linux/amd64 /bin/sh -c apt-get update > /dev/null &&     apt-get install --no-install-recommends --yes         wget bzip2 ca-certificates         git > /dev/null &&     apt-get clean &&     rm -rf /var/lib/apt/lists/* &&     TARGETARCH=\"$(echo ${TARGETPLATFORM} | cut -d / -f 2)\"; case ${TARGETARCH} in \"ppc64le\") TARGETARCH=\"ppc64el\" ;; *) ;; esac ;     wget --no-hsts --quiet https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini-${TARGETARCH} -O /usr/local/bin/tini &&     chmod +x /usr/local/bin/tini &&     wget --no-hsts --quiet https://github.com/conda-forge/miniforge/releases/download/${MINIFORGE_VERSION}/${MINIFORGE_NAME}-${MINIFORGE_VERSION}-Linux-$(uname -m).sh -O /tmp/miniforge.sh &&     /bin/bash /tmp/miniforge.sh -b -p ${CONDA_DIR} &&     rm /tmp/miniforge.sh &&     conda clean -tipsy &&     find ${CONDA_DIR} -follow -type f -name '*.a' -delete &&     find ${CONDA_DIR} -follow -type f -name '*.pyc' -delete &&     conda clean -afy &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> /etc/skel/.bashrc &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-07-27T16:25:26.146222557Z",
                    "created_by": "ENTRYPOINT [\"tini\" \"--\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-27T16:25:26.146222557Z",
                    "created_by": "CMD [\"/bin/bash\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7555a8182c42c7737a384cfe03a3c7329f646a3bf389c4bcd75379fc85e6c144",
                    "sha256:917192b88d132b72982e146e471ecf4c0bffee8fdfc204c4dbaee19a38620737"
                ]
            }
        },
        "4.10.3-4": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CONDA_DIR=/opt/conda",
                    "LANG=C.UTF-8",
                    "LC_ALL=C.UTF-8"
                ],
                "Entrypoint": [
                    "tini",
                    "--"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2021-08-03T06:14:25.556488626Z",
            "history": [
                {
                    "created": "2021-07-26T21:21:39.951432409Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:524e8d93ad65f08a0cb0d144268350186e36f508006b05b8faf2e1289499b59f in / "
                },
                {
                    "created": "2021-07-26T21:21:40.307832875Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-03T06:14:25.556488626Z",
                    "created_by": "ARG MINIFORGE_NAME=Miniforge3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-03T06:14:25.556488626Z",
                    "created_by": "ARG MINIFORGE_VERSION=4.10.3-4",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-03T06:14:25.556488626Z",
                    "created_by": "ARG TINI_VERSION=v0.18.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-03T06:14:25.556488626Z",
                    "created_by": "ARG TARGETPLATFORM",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-03T06:14:25.556488626Z",
                    "created_by": "ENV CONDA_DIR=/opt/conda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-03T06:14:25.556488626Z",
                    "created_by": "ENV LANG=C.UTF-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-03T06:14:25.556488626Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-03T06:14:25.556488626Z",
                    "created_by": "RUN |4 MINIFORGE_NAME=Miniforge3 MINIFORGE_VERSION=4.10.3-4 TINI_VERSION=v0.18.0 TARGETPLATFORM=linux/amd64 /bin/sh -c apt-get update > /dev/null &&     apt-get install --no-install-recommends --yes         wget bzip2 ca-certificates         git > /dev/null &&     apt-get clean &&     rm -rf /var/lib/apt/lists/* &&     TARGETARCH=\"$(echo ${TARGETPLATFORM} | cut -d / -f 2)\"; case ${TARGETARCH} in \"ppc64le\") TARGETARCH=\"ppc64el\" ;; *) ;; esac ;     wget --no-hsts --quiet https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini-${TARGETARCH} -O /usr/local/bin/tini &&     chmod +x /usr/local/bin/tini &&     wget --no-hsts --quiet https://github.com/conda-forge/miniforge/releases/download/${MINIFORGE_VERSION}/${MINIFORGE_NAME}-${MINIFORGE_VERSION}-Linux-$(uname -m).sh -O /tmp/miniforge.sh &&     /bin/bash /tmp/miniforge.sh -b -p ${CONDA_DIR} &&     rm /tmp/miniforge.sh &&     conda clean -tipsy &&     find ${CONDA_DIR} -follow -type f -name '*.a' -delete &&     find ${CONDA_DIR} -follow -type f -name '*.pyc' -delete &&     conda clean -afy &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> /etc/skel/.bashrc &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-08-03T06:14:25.556488626Z",
                    "created_by": "ENTRYPOINT [\"tini\" \"--\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-03T06:14:25.556488626Z",
                    "created_by": "CMD [\"/bin/bash\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7555a8182c42c7737a384cfe03a3c7329f646a3bf389c4bcd75379fc85e6c144",
                    "sha256:efe2f135efae175f93f44bd94a0c63a22ce2def954f0d776b127fdb5ae56bd4f"
                ]
            }
        },
        "4.10.3-5": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CONDA_DIR=/opt/conda",
                    "LANG=C.UTF-8",
                    "LC_ALL=C.UTF-8"
                ],
                "Entrypoint": [
                    "tini",
                    "--"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2021-08-31T17:16:22.834283886Z",
            "history": [
                {
                    "created": "2021-08-31T01:20:55.806655339Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d2abf27fe2e8b0b5f4da68c018560c73e11c53098329246e3e6fe176698ef941 in / "
                },
                {
                    "created": "2021-08-31T01:20:56.191693866Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-31T17:16:22.834283886Z",
                    "created_by": "ARG MINIFORGE_NAME=Miniforge3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-31T17:16:22.834283886Z",
                    "created_by": "ARG MINIFORGE_VERSION=4.10.3-5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-31T17:16:22.834283886Z",
                    "created_by": "ARG TINI_VERSION=v0.18.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-31T17:16:22.834283886Z",
                    "created_by": "ARG TARGETPLATFORM",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-31T17:16:22.834283886Z",
                    "created_by": "ENV CONDA_DIR=/opt/conda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-31T17:16:22.834283886Z",
                    "created_by": "ENV LANG=C.UTF-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-31T17:16:22.834283886Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-31T17:16:22.834283886Z",
                    "created_by": "RUN |4 MINIFORGE_NAME=Miniforge3 MINIFORGE_VERSION=4.10.3-5 TINI_VERSION=v0.18.0 TARGETPLATFORM=linux/amd64 /bin/sh -c apt-get update > /dev/null &&     apt-get install --no-install-recommends --yes         wget bzip2 ca-certificates         git > /dev/null &&     apt-get clean &&     rm -rf /var/lib/apt/lists/* &&     TARGETARCH=\"$(echo ${TARGETPLATFORM} | cut -d / -f 2)\"; case ${TARGETARCH} in \"ppc64le\") TARGETARCH=\"ppc64el\" ;; *) ;; esac ;     wget --no-hsts --quiet https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini-${TARGETARCH} -O /usr/local/bin/tini &&     chmod +x /usr/local/bin/tini &&     wget --no-hsts --quiet https://github.com/conda-forge/miniforge/releases/download/${MINIFORGE_VERSION}/${MINIFORGE_NAME}-${MINIFORGE_VERSION}-Linux-$(uname -m).sh -O /tmp/miniforge.sh &&     /bin/bash /tmp/miniforge.sh -b -p ${CONDA_DIR} &&     rm /tmp/miniforge.sh &&     conda clean -tipsy &&     find ${CONDA_DIR} -follow -type f -name '*.a' -delete &&     find ${CONDA_DIR} -follow -type f -name '*.pyc' -delete &&     conda clean -afy &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> /etc/skel/.bashrc &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-08-31T17:16:22.834283886Z",
                    "created_by": "ENTRYPOINT [\"tini\" \"--\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-31T17:16:22.834283886Z",
                    "created_by": "CMD [\"/bin/bash\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4942a1abcbfa1c325b1d7ed93d3cf6020f555be706672308a4a4a6b6d631d2e7",
                    "sha256:43c2b29a6ea13cfce625b775dedf696a5d8f31c618a5795c9fb202033f98a687"
                ]
            }
        },
        "4.10.3-6": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CONDA_DIR=/opt/conda",
                    "LANG=C.UTF-8",
                    "LC_ALL=C.UTF-8"
                ],
                "Entrypoint": [
                    "tini",
                    "--"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2021-09-29T12:16:58.589324964Z",
            "history": [
                {
                    "created": "2021-08-31T01:20:55.806655339Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d2abf27fe2e8b0b5f4da68c018560c73e11c53098329246e3e6fe176698ef941 in / "
                },
                {
                    "created": "2021-08-31T01:20:56.191693866Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-29T12:16:58.589324964Z",
                    "created_by": "ARG MINIFORGE_NAME=Miniforge3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-29T12:16:58.589324964Z",
                    "created_by": "ARG MINIFORGE_VERSION=4.10.3-6",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-29T12:16:58.589324964Z",
                    "created_by": "ARG TINI_VERSION=v0.18.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-29T12:16:58.589324964Z",
                    "created_by": "ARG TARGETPLATFORM",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-29T12:16:58.589324964Z",
                    "created_by": "ENV CONDA_DIR=/opt/conda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-29T12:16:58.589324964Z",
                    "created_by": "ENV LANG=C.UTF-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-29T12:16:58.589324964Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-29T12:16:58.589324964Z",
                    "created_by": "RUN |4 MINIFORGE_NAME=Miniforge3 MINIFORGE_VERSION=4.10.3-6 TINI_VERSION=v0.18.0 TARGETPLATFORM=linux/amd64 /bin/sh -c apt-get update > /dev/null &&     apt-get install --no-install-recommends --yes         wget bzip2 ca-certificates         git > /dev/null &&     apt-get clean &&     rm -rf /var/lib/apt/lists/* &&     TARGETARCH=\"$(echo ${TARGETPLATFORM} | cut -d / -f 2)\"; case ${TARGETARCH} in \"ppc64le\") TARGETARCH=\"ppc64el\" ;; *) ;; esac ;     wget --no-hsts --quiet https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini-${TARGETARCH} -O /usr/local/bin/tini &&     chmod +x /usr/local/bin/tini &&     wget --no-hsts --quiet https://github.com/conda-forge/miniforge/releases/download/${MINIFORGE_VERSION}/${MINIFORGE_NAME}-${MINIFORGE_VERSION}-Linux-$(uname -m).sh -O /tmp/miniforge.sh &&     /bin/bash /tmp/miniforge.sh -b -p ${CONDA_DIR} &&     rm /tmp/miniforge.sh &&     conda clean -tipsy &&     find ${CONDA_DIR} -follow -type f -name '*.a' -delete &&     find ${CONDA_DIR} -follow -type f -name '*.pyc' -delete &&     conda clean -afy &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> /etc/skel/.bashrc &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-09-29T12:16:58.589324964Z",
                    "created_by": "ENTRYPOINT [\"tini\" \"--\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-29T12:16:58.589324964Z",
                    "created_by": "CMD [\"/bin/bash\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4942a1abcbfa1c325b1d7ed93d3cf6020f555be706672308a4a4a6b6d631d2e7",
                    "sha256:1c1e739a079f0856d5ca4ad4e7cea0eb503305b74536df4921a370cfae0aae32"
                ]
            }
        },
        "4.10.3-7": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CONDA_DIR=/opt/conda",
                    "LANG=C.UTF-8",
                    "LC_ALL=C.UTF-8"
                ],
                "Entrypoint": [
                    "tini",
                    "--"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2021-10-18T18:39:51.471271903Z",
            "history": [
                {
                    "created": "2021-10-16T00:37:47.226745473Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5d68d27cc15a80653c93d3a0b262a28112d47a46326ff5fc2dfbf7fa3b9a0ce8 in / "
                },
                {
                    "created": "2021-10-16T00:37:47.578710012Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-18T18:39:51.471271903Z",
                    "created_by": "ARG MINIFORGE_NAME=Miniforge3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-18T18:39:51.471271903Z",
                    "created_by": "ARG MINIFORGE_VERSION=4.10.3-7",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-18T18:39:51.471271903Z",
                    "created_by": "ARG TINI_VERSION=v0.18.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-18T18:39:51.471271903Z",
                    "created_by": "ARG TARGETPLATFORM",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-18T18:39:51.471271903Z",
                    "created_by": "ENV CONDA_DIR=/opt/conda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-18T18:39:51.471271903Z",
                    "created_by": "ENV LANG=C.UTF-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-18T18:39:51.471271903Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-18T18:39:51.471271903Z",
                    "created_by": "RUN |4 MINIFORGE_NAME=Miniforge3 MINIFORGE_VERSION=4.10.3-7 TINI_VERSION=v0.18.0 TARGETPLATFORM=linux/amd64 /bin/sh -c apt-get update > /dev/null &&     apt-get install --no-install-recommends --yes         wget bzip2 ca-certificates         git > /dev/null &&     apt-get clean &&     rm -rf /var/lib/apt/lists/* &&     TARGETARCH=\"$(echo ${TARGETPLATFORM} | cut -d / -f 2)\"; case ${TARGETARCH} in \"ppc64le\") TARGETARCH=\"ppc64el\" ;; *) ;; esac ;     wget --no-hsts --quiet https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini-${TARGETARCH} -O /usr/local/bin/tini &&     chmod +x /usr/local/bin/tini &&     wget --no-hsts --quiet https://github.com/conda-forge/miniforge/releases/download/${MINIFORGE_VERSION}/${MINIFORGE_NAME}-${MINIFORGE_VERSION}-Linux-$(uname -m).sh -O /tmp/miniforge.sh &&     /bin/bash /tmp/miniforge.sh -b -p ${CONDA_DIR} &&     rm /tmp/miniforge.sh &&     conda clean -tipsy &&     find ${CONDA_DIR} -follow -type f -name '*.a' -delete &&     find ${CONDA_DIR} -follow -type f -name '*.pyc' -delete &&     conda clean -afy &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> /etc/skel/.bashrc &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-10-18T18:39:51.471271903Z",
                    "created_by": "ENTRYPOINT [\"tini\" \"--\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-18T18:39:51.471271903Z",
                    "created_by": "CMD [\"/bin/bash\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9f54eef412758095c8079ac465d494a2872e02e90bf1fb5f12a1641c0d1bb78b",
                    "sha256:af75d53d00d36d8f45d238a425a6b3aff448b11ef2ea5a824f3ca9f243117da2"
                ]
            }
        },
        "4.10.3-9": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CONDA_DIR=/opt/conda",
                    "LANG=C.UTF-8",
                    "LC_ALL=C.UTF-8"
                ],
                "Entrypoint": [
                    "tini",
                    "--"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2021-11-29T12:21:11.79866624Z",
            "history": [
                {
                    "created": "2021-10-16T00:37:47.226745473Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5d68d27cc15a80653c93d3a0b262a28112d47a46326ff5fc2dfbf7fa3b9a0ce8 in / "
                },
                {
                    "created": "2021-10-16T00:37:47.578710012Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-29T12:21:11.79866624Z",
                    "created_by": "ARG MINIFORGE_NAME=Miniforge3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-29T12:21:11.79866624Z",
                    "created_by": "ARG MINIFORGE_VERSION=4.10.3-9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-29T12:21:11.79866624Z",
                    "created_by": "ARG TINI_VERSION=v0.18.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-29T12:21:11.79866624Z",
                    "created_by": "ARG TARGETPLATFORM",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-29T12:21:11.79866624Z",
                    "created_by": "ENV CONDA_DIR=/opt/conda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-29T12:21:11.79866624Z",
                    "created_by": "ENV LANG=C.UTF-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-29T12:21:11.79866624Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-29T12:21:11.79866624Z",
                    "created_by": "RUN |4 MINIFORGE_NAME=Miniforge3 MINIFORGE_VERSION=4.10.3-9 TINI_VERSION=v0.18.0 TARGETPLATFORM=linux/amd64 /bin/sh -c apt-get update > /dev/null &&     apt-get install --no-install-recommends --yes         wget bzip2 ca-certificates         git > /dev/null &&     apt-get clean &&     rm -rf /var/lib/apt/lists/* &&     TARGETARCH=\"$(echo ${TARGETPLATFORM} | cut -d / -f 2)\"; case ${TARGETARCH} in \"ppc64le\") TARGETARCH=\"ppc64el\" ;; *) ;; esac ;     wget --no-hsts --quiet https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini-${TARGETARCH} -O /usr/local/bin/tini &&     chmod +x /usr/local/bin/tini &&     wget --no-hsts --quiet https://github.com/conda-forge/miniforge/releases/download/${MINIFORGE_VERSION}/${MINIFORGE_NAME}-${MINIFORGE_VERSION}-Linux-$(uname -m).sh -O /tmp/miniforge.sh &&     /bin/bash /tmp/miniforge.sh -b -p ${CONDA_DIR} &&     rm /tmp/miniforge.sh &&     conda clean -tipsy &&     find ${CONDA_DIR} -follow -type f -name '*.a' -delete &&     find ${CONDA_DIR} -follow -type f -name '*.pyc' -delete &&     conda clean -afy &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> /etc/skel/.bashrc &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-11-29T12:21:11.79866624Z",
                    "created_by": "ENTRYPOINT [\"tini\" \"--\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-29T12:21:11.79866624Z",
                    "created_by": "CMD [\"/bin/bash\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9f54eef412758095c8079ac465d494a2872e02e90bf1fb5f12a1641c0d1bb78b",
                    "sha256:12419bbf3f6705642702e8188c3fcc8a985162853ceeaa42478102b15c98a04f"
                ]
            }
        },
        "4.11.0-0": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CONDA_DIR=/opt/conda",
                    "LANG=C.UTF-8",
                    "LC_ALL=C.UTF-8"
                ],
                "Entrypoint": [
                    "tini",
                    "--"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2022-02-03T02:23:34.202925756Z",
            "history": [
                {
                    "created": "2022-02-02T02:14:45.667699167Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3ccf747d646089ed7fbb43c40c45dd43e86f0674115f856efada93c7e4a63624 in / "
                },
                {
                    "created": "2022-02-02T02:14:46.177066251Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-03T02:23:34.202925756Z",
                    "created_by": "ARG MINIFORGE_NAME=Miniforge3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-03T02:23:34.202925756Z",
                    "created_by": "ARG MINIFORGE_VERSION=4.11.0-0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-03T02:23:34.202925756Z",
                    "created_by": "ARG TINI_VERSION=v0.18.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-03T02:23:34.202925756Z",
                    "created_by": "ARG TARGETPLATFORM",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-03T02:23:34.202925756Z",
                    "created_by": "ENV CONDA_DIR=/opt/conda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-03T02:23:34.202925756Z",
                    "created_by": "ENV LANG=C.UTF-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-03T02:23:34.202925756Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-03T02:23:34.202925756Z",
                    "created_by": "RUN |4 MINIFORGE_NAME=Miniforge3 MINIFORGE_VERSION=4.11.0-0 TINI_VERSION=v0.18.0 TARGETPLATFORM=linux/amd64 /bin/sh -c apt-get update > /dev/null &&     apt-get install --no-install-recommends --yes         wget bzip2 ca-certificates         git > /dev/null &&     apt-get clean &&     rm -rf /var/lib/apt/lists/* &&     TARGETARCH=\"$(echo ${TARGETPLATFORM} | cut -d / -f 2)\"; case ${TARGETARCH} in \"ppc64le\") TARGETARCH=\"ppc64el\" ;; *) ;; esac ;     wget --no-hsts --quiet https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini-${TARGETARCH} -O /usr/local/bin/tini &&     chmod +x /usr/local/bin/tini &&     wget --no-hsts --quiet https://github.com/conda-forge/miniforge/releases/download/${MINIFORGE_VERSION}/${MINIFORGE_NAME}-${MINIFORGE_VERSION}-Linux-$(uname -m).sh -O /tmp/miniforge.sh &&     /bin/bash /tmp/miniforge.sh -b -p ${CONDA_DIR} &&     rm /tmp/miniforge.sh &&     conda clean -tipsy &&     find ${CONDA_DIR} -follow -type f -name '*.a' -delete &&     find ${CONDA_DIR} -follow -type f -name '*.pyc' -delete &&     conda clean -afy &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> /etc/skel/.bashrc &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-03T02:23:34.202925756Z",
                    "created_by": "ENTRYPOINT [\"tini\" \"--\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-03T02:23:34.202925756Z",
                    "created_by": "CMD [\"/bin/bash\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:36ffdceb4c77bf34325fb695e64ea447f688797f2f1e3af224c29593310578d2",
                    "sha256:40de7f1657242450a1534f785974b33490d28e867571182fd189ea52e4159993"
                ]
            }
        },
        "4.11.0-2": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CONDA_DIR=/opt/conda",
                    "LANG=C.UTF-8",
                    "LC_ALL=C.UTF-8"
                ],
                "Entrypoint": [
                    "tini",
                    "--"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2022-02-11T06:34:24.257766102Z",
            "history": [
                {
                    "created": "2022-02-02T02:14:45.667699167Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3ccf747d646089ed7fbb43c40c45dd43e86f0674115f856efada93c7e4a63624 in / "
                },
                {
                    "created": "2022-02-02T02:14:46.177066251Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-11T06:34:24.257766102Z",
                    "created_by": "ARG MINIFORGE_NAME=Miniforge3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-11T06:34:24.257766102Z",
                    "created_by": "ARG MINIFORGE_VERSION=4.11.0-2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-11T06:34:24.257766102Z",
                    "created_by": "ARG TINI_VERSION=v0.18.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-11T06:34:24.257766102Z",
                    "created_by": "ARG TARGETPLATFORM",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-11T06:34:24.257766102Z",
                    "created_by": "ENV CONDA_DIR=/opt/conda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-11T06:34:24.257766102Z",
                    "created_by": "ENV LANG=C.UTF-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-11T06:34:24.257766102Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-11T06:34:24.257766102Z",
                    "created_by": "RUN |4 MINIFORGE_NAME=Miniforge3 MINIFORGE_VERSION=4.11.0-2 TINI_VERSION=v0.18.0 TARGETPLATFORM=linux/amd64 /bin/sh -c apt-get update > /dev/null &&     apt-get install --no-install-recommends --yes         wget bzip2 ca-certificates         git > /dev/null &&     apt-get clean &&     rm -rf /var/lib/apt/lists/* &&     TARGETARCH=\"$(echo ${TARGETPLATFORM} | cut -d / -f 2)\"; case ${TARGETARCH} in \"ppc64le\") TARGETARCH=\"ppc64el\" ;; *) ;; esac ;     wget --no-hsts --quiet https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini-${TARGETARCH} -O /usr/local/bin/tini &&     chmod +x /usr/local/bin/tini &&     wget --no-hsts --quiet https://github.com/conda-forge/miniforge/releases/download/${MINIFORGE_VERSION}/${MINIFORGE_NAME}-${MINIFORGE_VERSION}-Linux-$(uname -m).sh -O /tmp/miniforge.sh &&     /bin/bash /tmp/miniforge.sh -b -p ${CONDA_DIR} &&     rm /tmp/miniforge.sh &&     conda clean -tipsy &&     find ${CONDA_DIR} -follow -type f -name '*.a' -delete &&     find ${CONDA_DIR} -follow -type f -name '*.pyc' -delete &&     conda clean -afy &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> /etc/skel/.bashrc &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-11T06:34:24.257766102Z",
                    "created_by": "ENTRYPOINT [\"tini\" \"--\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-11T06:34:24.257766102Z",
                    "created_by": "CMD [\"/bin/bash\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:36ffdceb4c77bf34325fb695e64ea447f688797f2f1e3af224c29593310578d2",
                    "sha256:49cce03efde5e8f555aadd27b1167b69b244f8dff98a37dfa3dbff5447f7e48d"
                ]
            }
        },
        "4.11.0-4": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CONDA_DIR=/opt/conda",
                    "LANG=C.UTF-8",
                    "LC_ALL=C.UTF-8"
                ],
                "Entrypoint": [
                    "tini",
                    "--"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2022-03-18T17:07:39.526772932Z",
            "history": [
                {
                    "created": "2022-03-18T05:30:40.063546094Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:1d3b09cf9e041d608a00c2dc25cdf3c388e436c5db607a3d124f2aa0f764fc69 in / "
                },
                {
                    "created": "2022-03-18T05:30:40.61165091Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-18T17:07:39.526772932Z",
                    "created_by": "ARG MINIFORGE_NAME=Miniforge3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-18T17:07:39.526772932Z",
                    "created_by": "ARG MINIFORGE_VERSION=4.11.0-4",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-18T17:07:39.526772932Z",
                    "created_by": "ARG TINI_VERSION=v0.18.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-18T17:07:39.526772932Z",
                    "created_by": "ARG TARGETPLATFORM",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-18T17:07:39.526772932Z",
                    "created_by": "ENV CONDA_DIR=/opt/conda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-18T17:07:39.526772932Z",
                    "created_by": "ENV LANG=C.UTF-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-18T17:07:39.526772932Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-18T17:07:39.526772932Z",
                    "created_by": "RUN |4 MINIFORGE_NAME=Miniforge3 MINIFORGE_VERSION=4.11.0-4 TINI_VERSION=v0.18.0 TARGETPLATFORM=linux/amd64 /bin/sh -c apt-get update > /dev/null &&     apt-get install --no-install-recommends --yes         wget bzip2 ca-certificates         git > /dev/null &&     apt-get clean &&     rm -rf /var/lib/apt/lists/* &&     TARGETARCH=\"$(echo ${TARGETPLATFORM} | cut -d / -f 2)\"; case ${TARGETARCH} in \"ppc64le\") TARGETARCH=\"ppc64el\" ;; *) ;; esac ;     wget --no-hsts --quiet https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini-${TARGETARCH} -O /usr/local/bin/tini &&     chmod +x /usr/local/bin/tini &&     wget --no-hsts --quiet https://github.com/conda-forge/miniforge/releases/download/${MINIFORGE_VERSION}/${MINIFORGE_NAME}-${MINIFORGE_VERSION}-Linux-$(uname -m).sh -O /tmp/miniforge.sh &&     /bin/bash /tmp/miniforge.sh -b -p ${CONDA_DIR} &&     rm /tmp/miniforge.sh &&     conda clean -tipsy &&     find ${CONDA_DIR} -follow -type f -name '*.a' -delete &&     find ${CONDA_DIR} -follow -type f -name '*.pyc' -delete &&     conda clean -afy &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> /etc/skel/.bashrc &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-03-18T17:07:39.526772932Z",
                    "created_by": "ENTRYPOINT [\"tini\" \"--\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-18T17:07:39.526772932Z",
                    "created_by": "CMD [\"/bin/bash\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJzb3VyY2VzIjpbeyJ0eXBlIjoiZG9ja2VyLWltYWdlIiwicmVmIjoiZG9ja2VyLmlvL2xpYnJhcnkvdWJ1bnR1OmZvY2FsLTIwMjIwMzE2IiwicGluIjoic2hhMjU2OmJlYTZkMTkxNjhiYmZkNmFmOGQ3N2MyY2MzYzU3MjExNGViNWQxMTNlNmY0MjI1NzNjOTNjYjYwNWEwZTJmZmIifV19",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:867d0767a47c392f80acb51572851923d6d3e55289828b0cd84a96ba342660c7",
                    "sha256:eb292067f15fbd229bbe4c5813f528c8d2c3441578b11c326b796bf544f90cdd"
                ]
            }
        },
        "4.12.0-0": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CONDA_DIR=/opt/conda",
                    "LANG=C.UTF-8",
                    "LC_ALL=C.UTF-8"
                ],
                "Entrypoint": [
                    "tini",
                    "--"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2022-05-09T19:03:55.000058942Z",
            "history": [
                {
                    "created": "2022-04-29T23:20:59.079732432Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7009ad0ee0bbe5ed7f381792e07347e260e6896aeee0d80597808065120fa96b in / "
                },
                {
                    "created": "2022-04-29T23:20:59.430653302Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-09T19:03:55.000058942Z",
                    "created_by": "ARG MINIFORGE_NAME=Miniforge3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-09T19:03:55.000058942Z",
                    "created_by": "ARG MINIFORGE_VERSION=4.12.0-0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-09T19:03:55.000058942Z",
                    "created_by": "ARG TINI_VERSION=v0.18.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-09T19:03:55.000058942Z",
                    "created_by": "ARG TARGETPLATFORM",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-09T19:03:55.000058942Z",
                    "created_by": "ENV CONDA_DIR=/opt/conda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-09T19:03:55.000058942Z",
                    "created_by": "ENV LANG=C.UTF-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-09T19:03:55.000058942Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-09T19:03:55.000058942Z",
                    "created_by": "RUN |4 MINIFORGE_NAME=Miniforge3 MINIFORGE_VERSION=4.12.0-0 TINI_VERSION=v0.18.0 TARGETPLATFORM=linux/amd64 /bin/sh -c apt-get update > /dev/null &&     apt-get install --no-install-recommends --yes         wget bzip2 ca-certificates         git > /dev/null &&     apt-get clean &&     rm -rf /var/lib/apt/lists/* &&     TARGETARCH=\"$(echo ${TARGETPLATFORM} | cut -d / -f 2)\"; case ${TARGETARCH} in \"ppc64le\") TARGETARCH=\"ppc64el\" ;; *) ;; esac ;     wget --no-hsts --quiet https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini-${TARGETARCH} -O /usr/local/bin/tini &&     chmod +x /usr/local/bin/tini &&     wget --no-hsts --quiet https://github.com/conda-forge/miniforge/releases/download/${MINIFORGE_VERSION}/${MINIFORGE_NAME}-${MINIFORGE_VERSION}-Linux-$(uname -m).sh -O /tmp/miniforge.sh &&     /bin/bash /tmp/miniforge.sh -b -p ${CONDA_DIR} &&     rm /tmp/miniforge.sh &&     conda clean -tipsy &&     find ${CONDA_DIR} -follow -type f -name '*.a' -delete &&     find ${CONDA_DIR} -follow -type f -name '*.pyc' -delete &&     conda clean -afy &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> /etc/skel/.bashrc &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-09T19:03:55.000058942Z",
                    "created_by": "ENTRYPOINT [\"tini\" \"--\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-09T19:03:55.000058942Z",
                    "created_by": "CMD [\"/bin/bash\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJzb3VyY2VzIjpbeyJ0eXBlIjoiZG9ja2VyLWltYWdlIiwicmVmIjoiZG9ja2VyLmlvL2xpYnJhcnkvdWJ1bnR1OmZvY2FsLTIwMjIwNDI2IiwicGluIjoic2hhMjU2OjQ3ZjE0NTM0YmRhMzQ0ZDlmZTZmZmQ2ZWZmYjk1ZWVmZTU3OWY0YmUwZDUwOGI3NDQ1Y2Y3N2Y2MWEwZTU3MjQifV19",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:bf8cedc62fb3ef98ad0dff2be56ca451dd3ea69abd0031ad3e0fe5d9f9e4dfff",
                    "sha256:069c876609951721734609ee2d1d75d7b9671641365e855fa82e4b5b7e1e9217"
                ]
            }
        },
        "4.12.0-2": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CONDA_DIR=/opt/conda",
                    "LANG=C.UTF-8",
                    "LC_ALL=C.UTF-8"
                ],
                "Entrypoint": [
                    "tini",
                    "--"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2022-06-12T11:01:51.405954591Z",
            "history": [
                {
                    "created": "2022-06-06T22:21:11.683921179Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:00dae10e79b05c4e1a3db053a1f85a4f38a39fe85cbbd88d74201a01a7dd59b5 in / "
                },
                {
                    "created": "2022-06-06T22:21:12.070779776Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-12T11:01:51.405954591Z",
                    "created_by": "ARG MINIFORGE_NAME=Miniforge3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-12T11:01:51.405954591Z",
                    "created_by": "ARG MINIFORGE_VERSION=4.12.0-2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-12T11:01:51.405954591Z",
                    "created_by": "ARG TINI_VERSION=v0.18.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-12T11:01:51.405954591Z",
                    "created_by": "ARG TARGETPLATFORM",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-12T11:01:51.405954591Z",
                    "created_by": "ENV CONDA_DIR=/opt/conda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-12T11:01:51.405954591Z",
                    "created_by": "ENV LANG=C.UTF-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-12T11:01:51.405954591Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-12T11:01:51.405954591Z",
                    "created_by": "RUN |4 MINIFORGE_NAME=Miniforge3 MINIFORGE_VERSION=4.12.0-2 TINI_VERSION=v0.18.0 TARGETPLATFORM=linux/amd64 /bin/sh -c apt-get update > /dev/null &&     apt-get install --no-install-recommends --yes         wget bzip2 ca-certificates         git > /dev/null &&     apt-get clean &&     rm -rf /var/lib/apt/lists/* &&     TARGETARCH=\"$(echo ${TARGETPLATFORM} | cut -d / -f 2)\"; case ${TARGETARCH} in \"ppc64le\") TARGETARCH=\"ppc64el\" ;; *) ;; esac ;     wget --no-hsts --quiet https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini-${TARGETARCH} -O /usr/local/bin/tini &&     chmod +x /usr/local/bin/tini &&     wget --no-hsts --quiet https://github.com/conda-forge/miniforge/releases/download/${MINIFORGE_VERSION}/${MINIFORGE_NAME}-${MINIFORGE_VERSION}-Linux-$(uname -m).sh -O /tmp/miniforge.sh &&     /bin/bash /tmp/miniforge.sh -b -p ${CONDA_DIR} &&     rm /tmp/miniforge.sh &&     conda clean -tipsy &&     find ${CONDA_DIR} -follow -type f -name '*.a' -delete &&     find ${CONDA_DIR} -follow -type f -name '*.pyc' -delete &&     conda clean -afy &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> /etc/skel/.bashrc &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-06-12T11:01:51.405954591Z",
                    "created_by": "ENTRYPOINT [\"tini\" \"--\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-12T11:01:51.405954591Z",
                    "created_by": "CMD [\"/bin/bash\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJzb3VyY2VzIjpbeyJ0eXBlIjoiZG9ja2VyLWltYWdlIiwicmVmIjoiZG9ja2VyLmlvL2xpYnJhcnkvdWJ1bnR1OmZvY2FsLTIwMjIwNTMxIiwicGluIjoic2hhMjU2OmZkOTJjMzZkM2NiOWIxZDAyN2M0ZDJhNzJjNmJmMDEyNWRhODI0MjVmYzJjYTM3YzQxNGQ0ZjAxMDE4MGRjMTkifV19",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:af7ed92504ae4c20128a0f01048d41d467fef5c795c38d0defdb998a187ed1d4",
                    "sha256:72450b317b21cd6153e9dae20e9674b5efbbf8def69825240f176f67ca9a0fc0"
                ]
            }
        },
        "4.13.0-1": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CONDA_DIR=/opt/conda",
                    "LANG=C.UTF-8",
                    "LC_ALL=C.UTF-8"
                ],
                "Entrypoint": [
                    "tini",
                    "--"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2022-09-03T14:08:59.294168075Z",
            "history": [
                {
                    "created": "2022-09-01T23:46:26.800519282Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ff6963f777661fb16cc12fb04a97c558bd94768a6e4ab5bd90e01f3086818853 in / "
                },
                {
                    "created": "2022-09-01T23:46:27.150780363Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-03T14:08:59.294168075Z",
                    "created_by": "ARG MINIFORGE_NAME=Miniforge3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-03T14:08:59.294168075Z",
                    "created_by": "ARG MINIFORGE_VERSION=4.13.0-1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-03T14:08:59.294168075Z",
                    "created_by": "ARG TINI_VERSION=v0.18.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-03T14:08:59.294168075Z",
                    "created_by": "ARG TARGETPLATFORM",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-03T14:08:59.294168075Z",
                    "created_by": "ENV CONDA_DIR=/opt/conda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-03T14:08:59.294168075Z",
                    "created_by": "ENV LANG=C.UTF-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-03T14:08:59.294168075Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-03T14:08:59.294168075Z",
                    "created_by": "RUN |4 MINIFORGE_NAME=Miniforge3 MINIFORGE_VERSION=4.13.0-1 TINI_VERSION=v0.18.0 TARGETPLATFORM=linux/amd64 /bin/sh -c apt-get update > /dev/null &&     apt-get install --no-install-recommends --yes         wget bzip2 ca-certificates         git > /dev/null &&     apt-get clean &&     rm -rf /var/lib/apt/lists/* &&     TARGETARCH=\"$(echo ${TARGETPLATFORM} | cut -d / -f 2)\"; case ${TARGETARCH} in \"ppc64le\") TARGETARCH=\"ppc64el\" ;; *) ;; esac ;     wget --no-hsts --quiet https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini-${TARGETARCH} -O /usr/local/bin/tini &&     chmod +x /usr/local/bin/tini &&     wget --no-hsts --quiet https://github.com/conda-forge/miniforge/releases/download/${MINIFORGE_VERSION}/${MINIFORGE_NAME}-${MINIFORGE_VERSION}-Linux-$(uname -m).sh -O /tmp/miniforge.sh &&     /bin/bash /tmp/miniforge.sh -b -p ${CONDA_DIR} &&     rm /tmp/miniforge.sh &&     conda clean --tarballs --index-cache --packages --yes &&     find ${CONDA_DIR} -follow -type f -name '*.a' -delete &&     find ${CONDA_DIR} -follow -type f -name '*.pyc' -delete &&     conda clean --force-pkgs-dirs --all --yes  &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> /etc/skel/.bashrc &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-09-03T14:08:59.294168075Z",
                    "created_by": "ENTRYPOINT [\"tini\" \"--\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-03T14:08:59.294168075Z",
                    "created_by": "CMD [\"/bin/bash\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJzb3VyY2VzIjpbeyJ0eXBlIjoiZG9ja2VyLWltYWdlIiwicmVmIjoiZG9ja2VyLmlvL2xpYnJhcnkvdWJ1bnR1OmZvY2FsLTIwMjIwODI2IiwicGluIjoic2hhMjU2OjM1YWIyYmY1NzgxNGU5ZmY0OWUzNjVlZmQ1YTU5MzViNjkxNWVlZGU1YzdmODU4MWU5ZTFiODVlMGVlY2JlMTYifV19",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b40ed86654e59e1012e1716d5384910f8c3bb58274b7b00fca564a53e9897ba3",
                    "sha256:41d7ecb77e3555bce5d9bb2262a1ef2af657742510aae9fa46d4387edc6964af"
                ]
            }
        },
        "4.14.0-0": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CONDA_DIR=/opt/conda",
                    "LANG=C.UTF-8",
                    "LC_ALL=C.UTF-8"
                ],
                "Entrypoint": [
                    "tini",
                    "--"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2022-10-26T07:57:09.575517169Z",
            "history": [
                {
                    "created": "2022-10-25T01:53:34.67854161Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7633003155a1059419aa1a6756fafb6e4f419d65bff7feb7c945de1e29dccb1e in / "
                },
                {
                    "created": "2022-10-25T01:53:35.02678149Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-26T07:57:09.575517169Z",
                    "created_by": "ARG MINIFORGE_NAME=Miniforge3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-26T07:57:09.575517169Z",
                    "created_by": "ARG MINIFORGE_VERSION=4.14.0-0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-26T07:57:09.575517169Z",
                    "created_by": "ARG TARGETPLATFORM",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-26T07:57:09.575517169Z",
                    "created_by": "ENV CONDA_DIR=/opt/conda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-26T07:57:09.575517169Z",
                    "created_by": "ENV LANG=C.UTF-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-26T07:57:09.575517169Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-26T07:57:09.575517169Z",
                    "created_by": "RUN |3 MINIFORGE_NAME=Miniforge3 MINIFORGE_VERSION=4.14.0-0 TARGETPLATFORM=linux/amd64 /bin/sh -c apt-get update > /dev/null &&     apt-get install --no-install-recommends --yes         wget bzip2 ca-certificates         git         tini         > /dev/null &&     apt-get clean &&     rm -rf /var/lib/apt/lists/* &&     wget --no-hsts --quiet https://github.com/conda-forge/miniforge/releases/download/${MINIFORGE_VERSION}/${MINIFORGE_NAME}-${MINIFORGE_VERSION}-Linux-$(uname -m).sh -O /tmp/miniforge.sh &&     /bin/bash /tmp/miniforge.sh -b -p ${CONDA_DIR} &&     rm /tmp/miniforge.sh &&     conda clean --tarballs --index-cache --packages --yes &&     find ${CONDA_DIR} -follow -type f -name '*.a' -delete &&     find ${CONDA_DIR} -follow -type f -name '*.pyc' -delete &&     conda clean --force-pkgs-dirs --all --yes  &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> /etc/skel/.bashrc &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-10-26T07:57:09.575517169Z",
                    "created_by": "ENTRYPOINT [\"tini\" \"--\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-26T07:57:09.575517169Z",
                    "created_by": "CMD [\"/bin/bash\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJzb3VyY2VzIjpbeyJ0eXBlIjoiZG9ja2VyLWltYWdlIiwicmVmIjoiZG9ja2VyLmlvL2xpYnJhcnkvdWJ1bnR1OmZvY2FsLTIwMjIxMDE5IiwicGluIjoic2hhMjU2OjQ1MGUwNjY1ODhmNDJlYmUxNTUxZjNiMWE1MzUwMzRiNmFhNDZjZDkzNmZlN2YyYzZiMGQ3Mjk5N2VjNjFkYmQifV19",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f4462d5b2da2985f37409c9b257afd2b9fb82356ce4e43e804ee34214242e34a",
                    "sha256:682de377f9a51ccddd5298f29e957faaaf56adbe118f916b716f40178cb9a78b"
                ]
            }
        },
        "4.9.2-5": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CONDA_DIR=/opt/conda",
                    "LANG=C.UTF-8",
                    "LC_ALL=C.UTF-8"
                ],
                "Entrypoint": [
                    "tini",
                    "--"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2021-03-31T10:32:44.017577778Z",
            "history": [
                {
                    "created": "2021-01-21T03:38:20.003680095Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2a90223d9f00d31e31eff6b207c57af4b7d27276195b94bec991457a6998180c in / "
                },
                {
                    "created": "2021-01-21T03:38:21.115557643Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-01-21T03:38:22.166838465Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-21T03:38:23.18135616Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-01-21T03:38:23.37559427Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T10:32:44.017577778Z",
                    "created_by": "ARG MINIFORGE_NAME=Miniforge3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T10:32:44.017577778Z",
                    "created_by": "ARG MINIFORGE_VERSION=4.9.2-5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T10:32:44.017577778Z",
                    "created_by": "ARG TINI_VERSION=v0.18.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T10:32:44.017577778Z",
                    "created_by": "ARG TARGETPLATFORM",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T10:32:44.017577778Z",
                    "created_by": "ENV CONDA_DIR=/opt/conda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T10:32:44.017577778Z",
                    "created_by": "ENV LANG=C.UTF-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T10:32:44.017577778Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T10:32:44.017577778Z",
                    "created_by": "RUN |4 MINIFORGE_NAME=Miniforge3 MINIFORGE_VERSION=4.9.2-5 TINI_VERSION=v0.18.0 TARGETPLATFORM=linux/amd64 /bin/sh -c apt-get update > /dev/null &&     apt-get install --no-install-recommends --yes         wget bzip2 ca-certificates         git > /dev/null &&     apt-get clean &&     rm -rf /var/lib/apt/lists/* &&     TARGETARCH=\"$(echo ${TARGETPLATFORM} | cut -d / -f 2)\"; case ${TARGETARCH} in \"ppc64le\") TARGETARCH=\"ppc64el\" ;; *) ;; esac ;     wget --no-hsts --quiet https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini-${TARGETARCH} -O /usr/local/bin/tini &&     chmod +x /usr/local/bin/tini &&     wget --no-hsts --quiet https://github.com/conda-forge/miniforge/releases/download/${MINIFORGE_VERSION}/${MINIFORGE_NAME}-${MINIFORGE_VERSION}-Linux-$(uname -m).sh -O /tmp/miniforge.sh &&     /bin/bash /tmp/miniforge.sh -b -p ${CONDA_DIR} &&     rm /tmp/miniforge.sh &&     conda clean -tipsy &&     find ${CONDA_DIR} -follow -type f -name '*.a' -delete &&     find ${CONDA_DIR} -follow -type f -name '*.pyc' -delete &&     conda clean -afy &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> /etc/skel/.bashrc &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-03-31T10:32:44.017577778Z",
                    "created_by": "ENTRYPOINT [\"tini\" \"--\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T10:32:44.017577778Z",
                    "created_by": "CMD [\"/bin/bash\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9f32931c9d28f10104a8eb1330954ba90e76d92b02c5256521ba864feec14009",
                    "sha256:dbf2c0f42a39b60301f6d3936f7f8adb59bb97d31ec11cc4a049ce81155fef89",
                    "sha256:02473afd360bd5391fa51b6e7849ce88732ae29f50f3630c3551f528eba66d1e",
                    "sha256:75373e57b76e32720e26be0f3d1064df5a5470cbf33a341812bd114e88bbb983"
                ]
            }
        },
        "4.9.2-7": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CONDA_DIR=/opt/conda",
                    "LANG=C.UTF-8",
                    "LC_ALL=C.UTF-8"
                ],
                "Entrypoint": [
                    "tini",
                    "--"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2021-03-31T14:09:55.629156656Z",
            "history": [
                {
                    "created": "2021-01-21T03:38:20.003680095Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2a90223d9f00d31e31eff6b207c57af4b7d27276195b94bec991457a6998180c in / "
                },
                {
                    "created": "2021-01-21T03:38:21.115557643Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-01-21T03:38:22.166838465Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-21T03:38:23.18135616Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-01-21T03:38:23.37559427Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T14:09:55.629156656Z",
                    "created_by": "ARG MINIFORGE_NAME=Miniforge3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T14:09:55.629156656Z",
                    "created_by": "ARG MINIFORGE_VERSION=4.9.2-7",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T14:09:55.629156656Z",
                    "created_by": "ARG TINI_VERSION=v0.18.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T14:09:55.629156656Z",
                    "created_by": "ARG TARGETPLATFORM",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T14:09:55.629156656Z",
                    "created_by": "ENV CONDA_DIR=/opt/conda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T14:09:55.629156656Z",
                    "created_by": "ENV LANG=C.UTF-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T14:09:55.629156656Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T14:09:55.629156656Z",
                    "created_by": "RUN |4 MINIFORGE_NAME=Miniforge3 MINIFORGE_VERSION=4.9.2-7 TINI_VERSION=v0.18.0 TARGETPLATFORM=linux/amd64 /bin/sh -c apt-get update > /dev/null &&     apt-get install --no-install-recommends --yes         wget bzip2 ca-certificates         git > /dev/null &&     apt-get clean &&     rm -rf /var/lib/apt/lists/* &&     TARGETARCH=\"$(echo ${TARGETPLATFORM} | cut -d / -f 2)\"; case ${TARGETARCH} in \"ppc64le\") TARGETARCH=\"ppc64el\" ;; *) ;; esac ;     wget --no-hsts --quiet https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini-${TARGETARCH} -O /usr/local/bin/tini &&     chmod +x /usr/local/bin/tini &&     wget --no-hsts --quiet https://github.com/conda-forge/miniforge/releases/download/${MINIFORGE_VERSION}/${MINIFORGE_NAME}-${MINIFORGE_VERSION}-Linux-$(uname -m).sh -O /tmp/miniforge.sh &&     /bin/bash /tmp/miniforge.sh -b -p ${CONDA_DIR} &&     rm /tmp/miniforge.sh &&     conda clean -tipsy &&     find ${CONDA_DIR} -follow -type f -name '*.a' -delete &&     find ${CONDA_DIR} -follow -type f -name '*.pyc' -delete &&     conda clean -afy &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> /etc/skel/.bashrc &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-03-31T14:09:55.629156656Z",
                    "created_by": "ENTRYPOINT [\"tini\" \"--\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T14:09:55.629156656Z",
                    "created_by": "CMD [\"/bin/bash\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9f32931c9d28f10104a8eb1330954ba90e76d92b02c5256521ba864feec14009",
                    "sha256:dbf2c0f42a39b60301f6d3936f7f8adb59bb97d31ec11cc4a049ce81155fef89",
                    "sha256:02473afd360bd5391fa51b6e7849ce88732ae29f50f3630c3551f528eba66d1e",
                    "sha256:470c92edfff38e4c1bcdf371f42f3a4a050986272f414690b068a6595d88dee7"
                ]
            }
        },
        "latest": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CONDA_DIR=/opt/conda",
                    "LANG=C.UTF-8",
                    "LC_ALL=C.UTF-8"
                ],
                "Entrypoint": [
                    "tini",
                    "--"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Labels": {
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "20.04"
                },
                "ArgsEscaped": true
            },
            "created": "2024-05-21T14:15:31.647971487Z",
            "history": [
                {
                    "created": "2024-04-27T14:03:39.495375794Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:03:39.518457955Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:03:39.540231445Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:03:39.564669578Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=20.04",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:03:41.34852592Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e5742fae181dc02a419e48d202fdd6a561b79ccbe7d3415e15e3d2c12e444a2a in / "
                },
                {
                    "created": "2024-04-27T14:03:41.56764926Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-21T14:15:31.647971487Z",
                    "created_by": "ARG MINIFORGE_NAME=Miniforge3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-21T14:15:31.647971487Z",
                    "created_by": "ARG MINIFORGE_VERSION=24.3.0-0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-21T14:15:31.647971487Z",
                    "created_by": "ARG TARGETPLATFORM",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-21T14:15:31.647971487Z",
                    "created_by": "ENV CONDA_DIR=/opt/conda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-21T14:15:31.647971487Z",
                    "created_by": "ENV LANG=C.UTF-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-21T14:15:31.647971487Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-21T14:15:31.647971487Z",
                    "created_by": "RUN |3 MINIFORGE_NAME=Miniforge3 MINIFORGE_VERSION=24.3.0-0 TARGETPLATFORM=linux/amd64 /bin/sh -c apt-get update > /dev/null &&     apt-get install --no-install-recommends --yes         wget bzip2 ca-certificates         git         tini         > /dev/null &&     apt-get clean &&     rm -rf /var/lib/apt/lists/* &&     wget --no-hsts --quiet https://github.com/conda-forge/miniforge/releases/download/${MINIFORGE_VERSION}/${MINIFORGE_NAME}-${MINIFORGE_VERSION}-Linux-$(uname -m).sh -O /tmp/miniforge.sh &&     /bin/bash /tmp/miniforge.sh -b -p ${CONDA_DIR} &&     rm /tmp/miniforge.sh &&     conda clean --tarballs --index-cache --packages --yes &&     find ${CONDA_DIR} -follow -type f -name '*.a' -delete &&     find ${CONDA_DIR} -follow -type f -name '*.pyc' -delete &&     conda clean --force-pkgs-dirs --all --yes  &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> /etc/skel/.bashrc &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-21T14:15:31.647971487Z",
                    "created_by": "ENTRYPOINT [\"tini\" \"--\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-21T14:15:31.647971487Z",
                    "created_by": "CMD [\"/bin/bash\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4a1518ebc26e2e4c26f1c5d78a36d41d87d2fd4a7e4ad37c5f9033f2eb52f26b",
                    "sha256:9a9f7b9bf898d46af5ab784820a3d6ada63917c7daa7244636716d7c13d4b3aa"
                ]
            }
        }
    }
}