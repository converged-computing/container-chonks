{
    "manifests": {
        "22.11.1-4": {
            "mediaType": "application/vnd.oci.image.index.v1+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:e04585f81e0530838e531156b46610ea6f10d16e83d59ccd01b3603c6a567b37",
                    "size": 676,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:f4a1eb5f1ae0d42ededcf069694dac94a8724ceb04596bc7ace0664ee65164b1",
                    "size": 676,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:151a3a1a6a9d161f0dea550b588c97405fb6c594416de0fef14d7a17b21132be",
                    "size": 676,
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:12d80e8638face2afa75a38bed95fbccac11d9d70461cf2aa5a3ce0f300d848b",
                    "size": 566,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:e04585f81e0530838e531156b46610ea6f10d16e83d59ccd01b3603c6a567b37",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:f7511594e3946028d4098f11d1ad7aad8e3bf3224ce4711b240a91f79352ff7f",
                    "size": 566,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:f4a1eb5f1ae0d42ededcf069694dac94a8724ceb04596bc7ace0664ee65164b1",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:9779a57b6018b5c0e1855d24a9c3a7a7080c041ebeceb33cf238ecf4179dd036",
                    "size": 566,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:151a3a1a6a9d161f0dea550b588c97405fb6c594416de0fef14d7a17b21132be",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                }
            ]
        },
        "22.9.0-0": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:a47ec6f68360e60d4f35b018a0a98728a2ed7fdadc7867dbd9f127e05e5f725c",
                    "size": 742,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:7c1e383cfed1e95c79baba4a3e1a49ca0d4bbd1f2995a17a60101412ec3a64e9",
                    "size": 742,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:311b56519291b3ae5a14a676b89402eefb86d92227eb37a22b4c7ac292ea3e58",
                    "size": 742,
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                }
            ]
        },
        "22.9.0-1": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:233fc52f1b5a64676937b2bd94897076a759e4d60a6aa726e4bf429312eb2381",
                    "size": 742,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:99944388b49b47fc1d9fd260d6f73d2596562d02ba99f8151585046c867c7784",
                    "size": 742,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:ac70b9a1c813dd2d6f58348c26c0e53a174c28bf8fd8b43d3237d332c3356461",
                    "size": 742,
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                }
            ]
        },
        "22.9.0-2": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:647b8f80c8510aeb07e80b2ca08cb0c5d689c6724e513261a96ed0d43d7c7427",
                    "size": 742,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:a119fe148b8a276397cb7423797f8ee82670e64b071dc39c918b6c3513bd0174",
                    "size": 742,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:8b6c789b0a1a051de34ef40ced2008bb6c76a0d22448c00031273e953e451ab7",
                    "size": 742,
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                }
            ]
        },
        "22.9.0-3": {
            "mediaType": "application/vnd.oci.image.index.v1+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:87c801c1fe5c229a0cdd098baad1a07092807ac406ccffa3806d6a51f308fef1",
                    "size": 676,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:5c86854e4bda5e17db54295fa9ba18a73dd8002bbaf92470793d951da7d35eae",
                    "size": 676,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:77508c9d6f3ad2c046196dfcfb38c6f9c8391259ba4021ddcdb002b990cd7a49",
                    "size": 676,
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:074798fa4d66127ec741a63d62d3533acc51056ab9d5092080bd4f0957fd3420",
                    "size": 566,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:87c801c1fe5c229a0cdd098baad1a07092807ac406ccffa3806d6a51f308fef1",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:da8634671cc1768406e925922547c45c37f6534e89333a862fdbad6a15d521e3",
                    "size": 566,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:5c86854e4bda5e17db54295fa9ba18a73dd8002bbaf92470793d951da7d35eae",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:4c4995ae24ec9456d6d2f51f5a60d5b77a76dd0422a209fba1a454323b6fedc2",
                    "size": 566,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:77508c9d6f3ad2c046196dfcfb38c6f9c8391259ba4021ddcdb002b990cd7a49",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                }
            ]
        },
        "23.1.0-1": {
            "mediaType": "application/vnd.oci.image.index.v1+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:4fbdce1e64bda2507906edf655187756e4deac97da8aa6e76bb2f07b24db14fc",
                    "size": 676,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:9ee5bf121f7b9ba97920eeb35cc24729adc199e77679a219aa506d251c3d1474",
                    "size": 676,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:a276d38c9f57efd8abf853fc337a2ca553a7f3cbc40024b79e5e9101d304da86",
                    "size": 676,
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:9d2aba88f9146003881374f6868f59a04e45a5a6c0cf3b8031f5af3095d2939b",
                    "size": 566,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:4fbdce1e64bda2507906edf655187756e4deac97da8aa6e76bb2f07b24db14fc",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:e9af7823819f6c45e9b1fb7d348171aac695fe5416c2c5b34e6fa6e73800ba4e",
                    "size": 566,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:9ee5bf121f7b9ba97920eeb35cc24729adc199e77679a219aa506d251c3d1474",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:74bab54a8ad6b3291b84349a5a5d61eab85e02b37b5405f08125106e1b095c9e",
                    "size": 566,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:a276d38c9f57efd8abf853fc337a2ca553a7f3cbc40024b79e5e9101d304da86",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                }
            ]
        },
        "23.1.0-2": {
            "mediaType": "application/vnd.oci.image.index.v1+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:46dcda1bb74c4b5826295972a170f806df1f3dc6907741f23975f18026139f93",
                    "size": 676,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:38b293872774a5c4961d3b862338c3ca0181387fd7c9a4bb65ae6442aa4f9d10",
                    "size": 676,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:2423ef5318fdd5eed0f02bfc47b317817de2c22811de70abd7a5f5a0649f833a",
                    "size": 676,
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:ac14ec9191217c912541c8f6c2e0f33f555128b7cb7015d26a354718352fb021",
                    "size": 566,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:46dcda1bb74c4b5826295972a170f806df1f3dc6907741f23975f18026139f93",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:8225396d5d3b7fe2cc6f9a6db62376d5e6b0df6806736a04c6aa0a431e7471be",
                    "size": 566,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:38b293872774a5c4961d3b862338c3ca0181387fd7c9a4bb65ae6442aa4f9d10",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:83588b0ec55e88d5c7e40999f3697c95724088502f8fb324a5b91b3ef7d4767d",
                    "size": 566,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:2423ef5318fdd5eed0f02bfc47b317817de2c22811de70abd7a5f5a0649f833a",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                }
            ]
        },
        "23.1.0-3": {
            "mediaType": "application/vnd.oci.image.index.v1+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:b3b7967d15cce5a29c59526c818b28f4b38ab115c7275e0331c786a8ff013227",
                    "size": 676,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:bd1cc2b37a8ed351ca1c72969434c623d6317f968dcac53353a5e74f6fa50be8",
                    "size": 676,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:1d360e384b4ec797378a6c4b77580a0f28c26101bdb894b9b237fe99c4ffd990",
                    "size": 676,
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:662097292a120289878451c0f72140744e95e87b6e3830c34f5d15b75367fbe6",
                    "size": 566,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:b3b7967d15cce5a29c59526c818b28f4b38ab115c7275e0331c786a8ff013227",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:81ba995ffb445d2de90e82785e66b75b2d00955b30b33e2bb601bf69ef84c280",
                    "size": 566,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:bd1cc2b37a8ed351ca1c72969434c623d6317f968dcac53353a5e74f6fa50be8",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:6f62a53c9f248ccdea1604336af4aeb2c589a47573fe6cdb1b4c915b4ea40f72",
                    "size": 566,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:1d360e384b4ec797378a6c4b77580a0f28c26101bdb894b9b237fe99c4ffd990",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                }
            ]
        },
        "23.1.0-4": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.oci.image.index.v1+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:ff75cd5a6b94687187f2cbe0ac8b43c18f91378fe07a6dae2ddea7b1fafee529",
                    "size": 676,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:a41c90c58d0bfbe3182c1dce9869198f06cd5b96d042e76bd6d74eae0254830f",
                    "size": 676,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:8c6248791170fc2d1af41f3aab0f44a503ab8cff2c190577bd20e6c4c4f989bb",
                    "size": 676,
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:a97b8c18ecb929a20b887d6ca65885eca421125cd73ae8a553d57565cbd90af9",
                    "size": 566,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:ff75cd5a6b94687187f2cbe0ac8b43c18f91378fe07a6dae2ddea7b1fafee529",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:6180660b695e7829925a452f8444337cab77a2f794334aa2e05b3f435b4c23d3",
                    "size": 566,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:a41c90c58d0bfbe3182c1dce9869198f06cd5b96d042e76bd6d74eae0254830f",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:b7c66fca7fe9efdd168272f0a2fbe361b291cd69bdb3a53d96f37c529387d25a",
                    "size": 566,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:8c6248791170fc2d1af41f3aab0f44a503ab8cff2c190577bd20e6c4c4f989bb",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                }
            ]
        },
        "23.11.0-0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.oci.image.index.v1+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:d006edcc6c5dcc38010d99d821c41d8ee701a5bea55c5b725c4d8fd97380dcbb",
                    "size": 676,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:0ccfda3d6b0948572cea927613285740847092c883cb63304b59da1cb8d4725c",
                    "size": 676,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:371966431ff5a6935b537d97cfcb61ec9be58e77bbaebf1d88e0d02e70b69ae6",
                    "size": 676,
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:5979c6d62c67628aa5c944abe8d6ea4a8a3a5d45b6e82f3bb5864dceeaa6e9ac",
                    "size": 566,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:d006edcc6c5dcc38010d99d821c41d8ee701a5bea55c5b725c4d8fd97380dcbb",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:5de3ebab1f205b717ea10b6a700d4de85b7339600bbbad829b4534b13e74cc3c",
                    "size": 566,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:0ccfda3d6b0948572cea927613285740847092c883cb63304b59da1cb8d4725c",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:9791dd375ba6823a6dd6338dfaba866a84f3e05b271ba8f2087cd31d83bcce88",
                    "size": 566,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:371966431ff5a6935b537d97cfcb61ec9be58e77bbaebf1d88e0d02e70b69ae6",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                }
            ]
        },
        "23.3.1-0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.oci.image.index.v1+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:b93a59fdb06a862f4a6860ce6088e7f4247478772badf3bb8c4ce28122d48d1a",
                    "size": 676,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:1aaab8c905734b5e9310d3220e54c4100099275c0cac8618fc67bacca3f9728b",
                    "size": 676,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:30045d9798319a90f603eacbf695d4d1cd62218bfc74b8baaa6bd9f080dfbb22",
                    "size": 676,
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:6aa56b9ff71d33a5aeb53a07d7ccf34e9c4e8232c5c6e94f76d52d32d68fa7f0",
                    "size": 566,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:b93a59fdb06a862f4a6860ce6088e7f4247478772badf3bb8c4ce28122d48d1a",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:0becdeeffa5d6da7126be64772e55cee29d33d44e2c7e8d9ccb10c8818bcb277",
                    "size": 566,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:1aaab8c905734b5e9310d3220e54c4100099275c0cac8618fc67bacca3f9728b",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:9b53998ca2773b7e9833955eeb3be1df8fe45f89097c9e19fd7cd43f5d3a5221",
                    "size": 566,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:30045d9798319a90f603eacbf695d4d1cd62218bfc74b8baaa6bd9f080dfbb22",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                }
            ]
        },
        "23.3.1-1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.oci.image.index.v1+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:05f83fc1119fe48f3d6bcf3f17de88b8d37bab37c81e743d0f2967eadbef646b",
                    "size": 676,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:c4d85b833cfaca05ab957e40eac267e32771c407c87936f81996f5f99cf11e58",
                    "size": 676,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:7139758f9cdae9f45eff19cc72850ac922a42d0f37c8bea6c67412f0748fd82f",
                    "size": 676,
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:80d1d91ed43d7e0588924d22d4676dfccf9732225671a7aa5d07c19c9aa5e7ed",
                    "size": 566,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:05f83fc1119fe48f3d6bcf3f17de88b8d37bab37c81e743d0f2967eadbef646b",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:a0103945b7fe4c22d7e11f372f3604a127cf66eeec56acf6751de0346e6c2655",
                    "size": 566,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:c4d85b833cfaca05ab957e40eac267e32771c407c87936f81996f5f99cf11e58",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:5a9c797e25075615e20af7405a224f32c2b51c96e0f94445f3f9f38c195d854b",
                    "size": 566,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:7139758f9cdae9f45eff19cc72850ac922a42d0f37c8bea6c67412f0748fd82f",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                }
            ]
        },
        "24.1.2-0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.oci.image.index.v1+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:8e24efda9a383559454925ceb8f233b7051f42a3f1560dcd9bdd7ee01cbc5732",
                    "size": 676,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:a8dbda4724fb7796bf658eee656b02a17fec907e69b936adda8ee6193843c2a4",
                    "size": 676,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:0cec13eefe0958285a6fa597fbc69c19b1520a862bde46f6ecdf02e1af0e89b6",
                    "size": 676,
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:89a95efab194b7dd698d8f00fe4ccb01fa2cf209e74050607ff1ba6fe0ae2600",
                    "size": 566,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:8e24efda9a383559454925ceb8f233b7051f42a3f1560dcd9bdd7ee01cbc5732",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:b6d96a938badbde1024449ef090989ae0a0b60b59ff0c540b393a802b975f0dd",
                    "size": 566,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:a8dbda4724fb7796bf658eee656b02a17fec907e69b936adda8ee6193843c2a4",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:b7ac5033acafced6b63759f43bcbccf2fcb6dcbd74598807407aeebd2ab28bc4",
                    "size": 566,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:0cec13eefe0958285a6fa597fbc69c19b1520a862bde46f6ecdf02e1af0e89b6",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                }
            ]
        },
        "24.3.0-0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.oci.image.index.v1+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:0ef3e6b48bd72b0ba0e2b90ca27397a8938fa07e8c1d7cbf4138b1050ec472be",
                    "size": 676,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:6c4af0861222adeaefd6b139f1b76b1dedba10accc0207bcdc730212c4b70098",
                    "size": 676,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:03937e1327503db0489739c630150ae5dbdceff0b8e9cd1208fddc529b334ccc",
                    "size": 676,
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:29f7117219f2e4d576ea29fcdb0b5dbcd6b1f17a9c95bc20654e2d9f8ee251cd",
                    "size": 566,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:0ef3e6b48bd72b0ba0e2b90ca27397a8938fa07e8c1d7cbf4138b1050ec472be",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:898371c66b0c5267dc7bc1aa705a09e471424acc73907ebff593205d52711ccf",
                    "size": 566,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:6c4af0861222adeaefd6b139f1b76b1dedba10accc0207bcdc730212c4b70098",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:e631b9700ffb5450aa95ebba887f8aae74ba957b3ebf392573bbc85b0084c585",
                    "size": 566,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:03937e1327503db0489739c630150ae5dbdceff0b8e9cd1208fddc529b334ccc",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                }
            ]
        },
        "4.10.1-0": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:1bfaa113751afb721d372f31b03851be437f820d379ab25999cda28f3cffb135",
                    "size": 1156,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:cc6c8c305177ec63880d9b177cd9538843f70d43cfa612dcb8113a7643c7aa5d",
                    "size": 1156,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:9163dc45d6d7cba76f2d4e7646a16056cd8c44fffda687881a44e4185a3905b2",
                    "size": 1156,
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                }
            ]
        },
        "4.10.2-0": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:bdf8f559c044bcab8f320de7504c74056e5a4d5c9e97f5731505c314e420d187",
                    "size": 1156,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:3a46a2445f428166abc2db8e55610474f3a00aa77f5a06b9eb87b41a0d90a0da",
                    "size": 1156,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:f207860f790113c2a52a1d68b9bc0a2e240738d47ece40585d19aec60e0ca1a7",
                    "size": 1156,
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                }
            ]
        },
        "4.10.3-1": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:7e917d031cd344c58088395844f455e46a971dee3322badf1d436e559cc87e83",
                    "size": 1156,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:803a4ea1d0330b8ffe65aac0cb3b1ec07dc530e2a13f1bffdf3f52e9a1dce35f",
                    "size": 1156,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:ba8eaa9bc6f0e78d33f1c8c970b4c906710dce4343455b4d4735e32302db6d20",
                    "size": 1156,
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                }
            ]
        },
        "4.10.3-10": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:328d70a4e5405698c48744fb7910bbec8a2b4ad5b27775b72bf60c2a5ef1ee19",
                    "size": 741,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:58a9b505456a70494db171a6cf84036600b45539213559fb0c8e3adbe0032b61",
                    "size": 742,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:19ecb7b3312e6d985f937f3b183cd5a22ff1da9c11de08cdb6e1bec4eefbd9fa",
                    "size": 742,
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                }
            ]
        },
        "4.10.3-2": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:87887f824bb29fc7a6be8689cd48d91d0ba866fac5d235b250140f0fc85a869c",
                    "size": 742,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:c135192c45d23ebb10f9d6f5fa0304e459716a18a84e799c0cccfbca61a7299d",
                    "size": 742,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:12279eefdf5a7f6d60bd788a7a5019a4c51f5ff7894f86de0f1d34fc3e06c013",
                    "size": 742,
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                }
            ]
        },
        "4.10.3-3": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:4709ca0ca38dc05d4e72df3d8617d357d28d2b91aec9bcebbf520bf07b60b8db",
                    "size": 742,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:ca2cb6e61d94f60f2d808996caedda0bf68964e3df32784565114db1ac8d24c3",
                    "size": 742,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:d626b9baae892bc77ab1d627ea934145315f736a2c0d08c6705bb9e0ff2ca894",
                    "size": 742,
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                }
            ]
        },
        "4.10.3-4": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:8e3c0b205f48de06fb954e9c441e339fb2dd9c4517416fca5e270653d7478647",
                    "size": 741,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:b717bde703802c13c6b21359117dd8d19f36ace40888eeb82fc15ce116c2ae2d",
                    "size": 742,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:834a001f3d644aa064e3da60a7c7892fcd6d07b35ff446ce719c9040cba74489",
                    "size": 742,
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                }
            ]
        },
        "4.10.3-5": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:2e2507a791edf7268da89a9116017d453b8744e1985c547b4a059fc032ad8e3e",
                    "size": 741,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:df2fa1138b6222e5a5a62a88daec8a7e8d0f57d2dab453a1254472c5104e295a",
                    "size": 742,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:a97659c8a76ac840e0394b4fe95502c017d783da24b6d80991b4c6d602865d06",
                    "size": 742,
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                }
            ]
        },
        "4.10.3-6": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:4b9f2d305cec4f0e6a9e4775eb1c76c3a1431ccf6c4e827be3d59d28944f546c",
                    "size": 741,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:dff4352cd872318757a9182d702b16a45fb60eb74e6fe60bd7d70e54370175a5",
                    "size": 742,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:60463762865caf007b7cb6718310f454dfbe7e8f9af9891a47d1fe9d058d8a26",
                    "size": 742,
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                }
            ]
        },
        "4.10.3-7": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:50d389e19b2afff9bdbfc1081208a9e8df242d7829aec8bd1c37819502f9dced",
                    "size": 741,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:d1f0a1778c84298cff48db81da133e59557e4c72ab69a8a35b73f72eee4273de",
                    "size": 742,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:4a5a8ce316eebfbd604b0e509187998a492b8c9ce2046d1b5493098fb2ac7362",
                    "size": 742,
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                }
            ]
        },
        "4.10.3-9": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:8b8a61cd57df266870125d92c989e47d2f6fcab092a64e56ac6d21d3d90453d3",
                    "size": 741,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:4c7b4ea2c59c6dd1bec2bdd209d4b25097c8769495a97e595dd3386ace4fe715",
                    "size": 742,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:c9f0f3fa798e4d54b27f5ece96d1f6df4ed7bffddaa2117b753ed43018570dc8",
                    "size": 742,
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                }
            ]
        },
        "4.11.0-0": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:57d33b50eae1c0205621135c78d39700caf17f215d0e9a18d6f8bd810cb010eb",
                    "size": 741,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:2b04331b86634bbd51efec901162769ef909852a4f27e28a94e0e37a172473c7",
                    "size": 742,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:f1a3a96c536e0d6a1575fd83816dad270c02243f6ca5d2537e32b7abd06bed09",
                    "size": 742,
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                }
            ]
        },
        "4.11.0-2": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:ddd2c9949d9a12327d6dad703a5755457bb790fb6033554b677cfd6b83291e9e",
                    "size": 742,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:062399ec289e31c8cfe8265b33b529821731ee2c4d7eef044d6220bdd7204aad",
                    "size": 742,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:4ff1dd289675cac95179ed7cac49050308ff5e0365061b60c5b158be6a5ef9b0",
                    "size": 742,
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                }
            ]
        },
        "4.11.0-4": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:db850e9d58bb3f5fca8d547293b679458c8e2d491cc6179c2a8cabb986d3de2a",
                    "size": 742,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:92f4a2cba859d3b4dbad899fd5cedafb6ae2050e81a32afb39ca5079405d3c9d",
                    "size": 742,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:4d43f2dbd77aa3967f9413d17154a65d1070c3268780804bda3e60f774d1fdf2",
                    "size": 742,
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                }
            ]
        },
        "4.12.0-0": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:e8180e8f631138e8556ead656e3889ff47b206673fcc8aaffa32c1ca8487ccad",
                    "size": 742,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:21e8a5386dbd8a0e12e9a5e5cf307ccff80c616c6f52a7ddbcb997b504ddffff",
                    "size": 742,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:8a9b1438f2979f5965b7e2e3ab8b8fa5cb3c60d21bef5ff2316bd2a03fe98667",
                    "size": 742,
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                }
            ]
        },
        "4.12.0-2": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:cddce8ee813e4d219dcdc94869acd1071429b9132fbf48386055b4c6845383e4",
                    "size": 742,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:9983ad9575ed441e1cc4e020365dacf2525318a8f66c17e8978d74bb31d4ed54",
                    "size": 742,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:5c38b9444516b55ece75ebede9cdc717edfef1ea1ba407b4f24f9cc8da366058",
                    "size": 742,
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                }
            ]
        },
        "4.13.0-1": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:84cef84bc6dfcea1d60a20528f479a45a05dd9a8c536e017c632ba9751717159",
                    "size": 742,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:7ee318e3a9125a3385e8e01d4bbb97ef7dcf5e178ab9ecaef927845598b461bb",
                    "size": 742,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:c090fe781c9488f39a0869761dc2e2228ba37d0adcd776486eff87ad8ce7371f",
                    "size": 742,
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                }
            ]
        },
        "4.14.0-0": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:a2dfaf91ed4800354c7fa77327e7084ca32798752267948e01b483f8194c8319",
                    "size": 742,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:badc98235b6da671ebf9efc5db6b437140cb33505f441471afba824b397b78e9",
                    "size": 742,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:d056d579387f173d985b35dfa69bb08feb0768b5411435466f57f4954a641124",
                    "size": 742,
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                }
            ]
        },
        "4.9.2-5": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:f0085e77f9e9a6b3d1b1a5e2350a7f9c650d517622c90d2ff7cfd842f3a131aa",
                    "size": 1156,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:5229415002a1bacd88a30764ab691f1710f79f2dd5a70e1f1f92811f6f66570b",
                    "size": 1156,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:c8332ab04a60bd88b9b9b319499cdcb68634dff1673524c3a2a774d04df2ae4b",
                    "size": 1156,
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                }
            ]
        },
        "4.9.2-7": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:6179e0a8de0dff8840ba54a9fde65ec2af0f25180312f8c788cc26df7defb09e",
                    "size": 1156,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:cf4e1836aa4f9beb8fbe5aa2a1e83656f1507683588dd3fc76a00fc7c9cd5d5c",
                    "size": 1156,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:ee67ef068bc086b6c9223549b90073945d5388ecc2d30dd8512536c1691e225d",
                    "size": 1156,
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                }
            ]
        },
        "latest": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.oci.image.index.v1+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:0ef3e6b48bd72b0ba0e2b90ca27397a8938fa07e8c1d7cbf4138b1050ec472be",
                    "size": 676,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:6c4af0861222adeaefd6b139f1b76b1dedba10accc0207bcdc730212c4b70098",
                    "size": 676,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:03937e1327503db0489739c630150ae5dbdceff0b8e9cd1208fddc529b334ccc",
                    "size": 676,
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:c9d08272af660c970722c8d65785e6480c86ec9a1f1f6f51f86a48b85455467c",
                    "size": 566,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:0ef3e6b48bd72b0ba0e2b90ca27397a8938fa07e8c1d7cbf4138b1050ec472be",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:c1a1506f6156e5a36124cbaeefc7a1967f5a6e0a61bf50057bddda171ecf4c56",
                    "size": 566,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:6c4af0861222adeaefd6b139f1b76b1dedba10accc0207bcdc730212c4b70098",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:c06999ddc1cca4af64998929dd3c06324ed5e19dbe82acfbb3ea5a4654fd2355",
                    "size": 566,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:03937e1327503db0489739c630150ae5dbdceff0b8e9cd1208fddc529b334ccc",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                }
            ]
        }
    },
    "tags": [
        "22.11.1-4",
        "22.9.0-0",
        "22.9.0-1",
        "22.9.0-2",
        "22.9.0-3",
        "23.1.0-1",
        "23.1.0-2",
        "23.1.0-3",
        "23.1.0-4",
        "23.11.0-0",
        "23.3.1-0",
        "23.3.1-1",
        "24.1.2-0",
        "24.3.0-0",
        "4.10.1-0",
        "4.10.2-0",
        "4.10.3-1",
        "4.10.3-10",
        "4.10.3-2",
        "4.10.3-3",
        "4.10.3-4",
        "4.10.3-5",
        "4.10.3-6",
        "4.10.3-7",
        "4.10.3-9",
        "4.11.0-0",
        "4.11.0-2",
        "4.11.0-4",
        "4.12.0-0",
        "4.12.0-2",
        "4.13.0-1",
        "4.14.0-0",
        "4.9.2-5",
        "4.9.2-7",
        "latest"
    ],
    "configs": {
        "22.11.1-4": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CONDA_DIR=/opt/conda",
                    "LANG=C.UTF-8",
                    "LC_ALL=C.UTF-8"
                ],
                "Entrypoint": [
                    "tini",
                    "--"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Labels": {
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "20.04"
                },
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2023-03-16T17:52:53.105259304Z",
            "history": [
                {
                    "created": "2023-03-08T04:41:24.616558596Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-08T04:41:24.68146178Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-08T04:41:24.736949919Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-08T04:41:24.79197019Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=20.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-08T04:41:26.82642813Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:20f2ff22b9a8ca9bec5178036c9ebc525a12cd4312daf5d14a9a631a30be20e1 in / "
                },
                {
                    "created": "2023-03-08T04:41:27.109028867Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-16T17:52:53.105259304Z",
                    "created_by": "ARG MINIFORGE_NAME=Miniforge3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-16T17:52:53.105259304Z",
                    "created_by": "ARG MINIFORGE_VERSION=22.11.1-4",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-16T17:52:53.105259304Z",
                    "created_by": "ARG TARGETPLATFORM",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-16T17:52:53.105259304Z",
                    "created_by": "ENV CONDA_DIR=/opt/conda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-16T17:52:53.105259304Z",
                    "created_by": "ENV LANG=C.UTF-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-16T17:52:53.105259304Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-16T17:52:53.105259304Z",
                    "created_by": "RUN |3 MINIFORGE_NAME=Mambaforge MINIFORGE_VERSION=22.11.1-4 TARGETPLATFORM=linux/amd64 /bin/sh -c apt-get update > /dev/null &&     apt-get install --no-install-recommends --yes         wget bzip2 ca-certificates         git         tini         > /dev/null &&     apt-get clean &&     rm -rf /var/lib/apt/lists/* &&     wget --no-hsts --quiet https://github.com/conda-forge/miniforge/releases/download/${MINIFORGE_VERSION}/${MINIFORGE_NAME}-${MINIFORGE_VERSION}-Linux-$(uname -m).sh -O /tmp/miniforge.sh &&     /bin/bash /tmp/miniforge.sh -b -p ${CONDA_DIR} &&     rm /tmp/miniforge.sh &&     conda clean --tarballs --index-cache --packages --yes &&     find ${CONDA_DIR} -follow -type f -name '*.a' -delete &&     find ${CONDA_DIR} -follow -type f -name '*.pyc' -delete &&     conda clean --force-pkgs-dirs --all --yes  &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> /etc/skel/.bashrc &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-16T17:52:53.105259304Z",
                    "created_by": "ENTRYPOINT [\"tini\" \"--\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-16T17:52:53.105259304Z",
                    "created_by": "CMD [\"/bin/bash\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJzb3VyY2VzIjpbeyJ0eXBlIjoiZG9ja2VyLWltYWdlIiwicmVmIjoiZG9ja2VyLmlvL2xpYnJhcnkvdWJ1bnR1OmZvY2FsLTIwMjMwMzA4IiwicGluIjoic2hhMjU2OjI0YTBkZjQzNzMwMTU5OGQxYTRiNjJkZGY1OWZhMGVkMjk2OTE1MGQ3MGQ3NDhjODQyMjVlNjUwMWU5YzM2YjkifV19",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:62789ffcd78ce0eae545b2743541d5c063270fe9f45477acacf2031b93cea70f",
                    "sha256:1423ec9c8ae3905a1628b315a72e95fd20b6eac93e2ff500edbd516c7a500e55"
                ]
            }
        },
        "22.9.0-0": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CONDA_DIR=/opt/conda",
                    "LANG=C.UTF-8",
                    "LC_ALL=C.UTF-8"
                ],
                "Entrypoint": [
                    "tini",
                    "--"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2022-10-27T14:45:21.33527733Z",
            "history": [
                {
                    "created": "2022-10-25T01:53:34.67854161Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7633003155a1059419aa1a6756fafb6e4f419d65bff7feb7c945de1e29dccb1e in / "
                },
                {
                    "created": "2022-10-25T01:53:35.02678149Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-27T14:45:21.33527733Z",
                    "created_by": "ARG MINIFORGE_NAME=Miniforge3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-27T14:45:21.33527733Z",
                    "created_by": "ARG MINIFORGE_VERSION=22.9.0-0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-27T14:45:21.33527733Z",
                    "created_by": "ARG TARGETPLATFORM",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-27T14:45:21.33527733Z",
                    "created_by": "ENV CONDA_DIR=/opt/conda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-27T14:45:21.33527733Z",
                    "created_by": "ENV LANG=C.UTF-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-27T14:45:21.33527733Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-27T14:45:21.33527733Z",
                    "created_by": "RUN |3 MINIFORGE_NAME=Mambaforge MINIFORGE_VERSION=22.9.0-0 TARGETPLATFORM=linux/amd64 /bin/sh -c apt-get update > /dev/null &&     apt-get install --no-install-recommends --yes         wget bzip2 ca-certificates         git         tini         > /dev/null &&     apt-get clean &&     rm -rf /var/lib/apt/lists/* &&     wget --no-hsts --quiet https://github.com/conda-forge/miniforge/releases/download/${MINIFORGE_VERSION}/${MINIFORGE_NAME}-${MINIFORGE_VERSION}-Linux-$(uname -m).sh -O /tmp/miniforge.sh &&     /bin/bash /tmp/miniforge.sh -b -p ${CONDA_DIR} &&     rm /tmp/miniforge.sh &&     conda clean --tarballs --index-cache --packages --yes &&     find ${CONDA_DIR} -follow -type f -name '*.a' -delete &&     find ${CONDA_DIR} -follow -type f -name '*.pyc' -delete &&     conda clean --force-pkgs-dirs --all --yes  &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> /etc/skel/.bashrc &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-10-27T14:45:21.33527733Z",
                    "created_by": "ENTRYPOINT [\"tini\" \"--\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-27T14:45:21.33527733Z",
                    "created_by": "CMD [\"/bin/bash\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJzb3VyY2VzIjpbeyJ0eXBlIjoiZG9ja2VyLWltYWdlIiwicmVmIjoiZG9ja2VyLmlvL2xpYnJhcnkvdWJ1bnR1OmZvY2FsLTIwMjIxMDE5IiwicGluIjoic2hhMjU2OjQ1MGUwNjY1ODhmNDJlYmUxNTUxZjNiMWE1MzUwMzRiNmFhNDZjZDkzNmZlN2YyYzZiMGQ3Mjk5N2VjNjFkYmQifV19",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f4462d5b2da2985f37409c9b257afd2b9fb82356ce4e43e804ee34214242e34a",
                    "sha256:f55132f5382686106df76c89a7c5380993e2bb6b739b185ac2fdcca7cb46cda4"
                ]
            }
        },
        "22.9.0-1": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CONDA_DIR=/opt/conda",
                    "LANG=C.UTF-8",
                    "LC_ALL=C.UTF-8"
                ],
                "Entrypoint": [
                    "tini",
                    "--"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2022-11-19T22:33:24.423790165Z",
            "history": [
                {
                    "created": "2022-10-25T01:53:34.67854161Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7633003155a1059419aa1a6756fafb6e4f419d65bff7feb7c945de1e29dccb1e in / "
                },
                {
                    "created": "2022-10-25T01:53:35.02678149Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-19T22:33:24.423790165Z",
                    "created_by": "ARG MINIFORGE_NAME=Miniforge3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-19T22:33:24.423790165Z",
                    "created_by": "ARG MINIFORGE_VERSION=22.9.0-2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-19T22:33:24.423790165Z",
                    "created_by": "ARG TARGETPLATFORM",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-19T22:33:24.423790165Z",
                    "created_by": "ENV CONDA_DIR=/opt/conda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-19T22:33:24.423790165Z",
                    "created_by": "ENV LANG=C.UTF-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-19T22:33:24.423790165Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-19T22:33:24.423790165Z",
                    "created_by": "RUN |3 MINIFORGE_NAME=Mambaforge MINIFORGE_VERSION=22.9.0-1 TARGETPLATFORM=linux/amd64 /bin/sh -c apt-get update > /dev/null &&     apt-get install --no-install-recommends --yes         wget bzip2 ca-certificates         git         tini         > /dev/null &&     apt-get clean &&     rm -rf /var/lib/apt/lists/* &&     wget --no-hsts --quiet https://github.com/conda-forge/miniforge/releases/download/${MINIFORGE_VERSION}/${MINIFORGE_NAME}-${MINIFORGE_VERSION}-Linux-$(uname -m).sh -O /tmp/miniforge.sh &&     /bin/bash /tmp/miniforge.sh -b -p ${CONDA_DIR} &&     rm /tmp/miniforge.sh &&     conda clean --tarballs --index-cache --packages --yes &&     find ${CONDA_DIR} -follow -type f -name '*.a' -delete &&     find ${CONDA_DIR} -follow -type f -name '*.pyc' -delete &&     conda clean --force-pkgs-dirs --all --yes  &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> /etc/skel/.bashrc &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-11-19T22:33:24.423790165Z",
                    "created_by": "ENTRYPOINT [\"tini\" \"--\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-19T22:33:24.423790165Z",
                    "created_by": "CMD [\"/bin/bash\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJzb3VyY2VzIjpbeyJ0eXBlIjoiZG9ja2VyLWltYWdlIiwicmVmIjoiZG9ja2VyLmlvL2xpYnJhcnkvdWJ1bnR1OmZvY2FsLTIwMjIxMDE5IiwicGluIjoic2hhMjU2OjQ1MGUwNjY1ODhmNDJlYmUxNTUxZjNiMWE1MzUwMzRiNmFhNDZjZDkzNmZlN2YyYzZiMGQ3Mjk5N2VjNjFkYmQifV19",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f4462d5b2da2985f37409c9b257afd2b9fb82356ce4e43e804ee34214242e34a",
                    "sha256:bbd98c1ddd9b82558f61f3955818cc7f7b09f071a7539dec7f0acd22e32cbdc7"
                ]
            }
        },
        "22.9.0-2": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CONDA_DIR=/opt/conda",
                    "LANG=C.UTF-8",
                    "LC_ALL=C.UTF-8"
                ],
                "Entrypoint": [
                    "tini",
                    "--"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2022-12-09T17:44:47.133165146Z",
            "history": [
                {
                    "created": "2022-12-09T01:20:21.30286184Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9d282119af0c42bc823c95b4192a3350cf2cad670622017356dd2e637762e425 in / "
                },
                {
                    "created": "2022-12-09T01:20:21.654215477Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-09T17:44:47.133165146Z",
                    "created_by": "ARG MINIFORGE_NAME=Miniforge3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-09T17:44:47.133165146Z",
                    "created_by": "ARG MINIFORGE_VERSION=22.9.0-2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-09T17:44:47.133165146Z",
                    "created_by": "ARG TARGETPLATFORM",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-09T17:44:47.133165146Z",
                    "created_by": "ENV CONDA_DIR=/opt/conda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-09T17:44:47.133165146Z",
                    "created_by": "ENV LANG=C.UTF-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-09T17:44:47.133165146Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-09T17:44:47.133165146Z",
                    "created_by": "RUN |3 MINIFORGE_NAME=Mambaforge MINIFORGE_VERSION=22.9.0-2 TARGETPLATFORM=linux/amd64 /bin/sh -c apt-get update > /dev/null &&     apt-get install --no-install-recommends --yes         wget bzip2 ca-certificates         git         tini         > /dev/null &&     apt-get clean &&     rm -rf /var/lib/apt/lists/* &&     wget --no-hsts --quiet https://github.com/conda-forge/miniforge/releases/download/${MINIFORGE_VERSION}/${MINIFORGE_NAME}-${MINIFORGE_VERSION}-Linux-$(uname -m).sh -O /tmp/miniforge.sh &&     /bin/bash /tmp/miniforge.sh -b -p ${CONDA_DIR} &&     rm /tmp/miniforge.sh &&     conda clean --tarballs --index-cache --packages --yes &&     find ${CONDA_DIR} -follow -type f -name '*.a' -delete &&     find ${CONDA_DIR} -follow -type f -name '*.pyc' -delete &&     conda clean --force-pkgs-dirs --all --yes  &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> /etc/skel/.bashrc &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-09T17:44:47.133165146Z",
                    "created_by": "ENTRYPOINT [\"tini\" \"--\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-09T17:44:47.133165146Z",
                    "created_by": "CMD [\"/bin/bash\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJzb3VyY2VzIjpbeyJ0eXBlIjoiZG9ja2VyLWltYWdlIiwicmVmIjoiZG9ja2VyLmlvL2xpYnJhcnkvdWJ1bnR1OmZvY2FsLTIwMjIxMTMwIiwicGluIjoic2hhMjU2OjBlMDQwMmNkMTNmNjgxMzdlZGIwMjY2ZTFkMmM2ODJmMjE3ODE0NDIwZjJkNDNkMzAwZWQ4ZjY1NDc5YjE0ZmIifV19",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0002c93bdb3704dd9e36ce5153ef637f84de253015f3ee330468dccdeacad60b",
                    "sha256:9815e560f9dde1708f3fb5d1b48f74c1725b0841a44c81d62b8de8094e7ca304"
                ]
            }
        },
        "22.9.0-3": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CONDA_DIR=/opt/conda",
                    "LANG=C.UTF-8",
                    "LC_ALL=C.UTF-8"
                ],
                "Entrypoint": [
                    "tini",
                    "--"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Labels": {
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "20.04"
                },
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2023-02-01T09:53:03.69488215Z",
            "history": [
                {
                    "created": "2023-01-26T13:19:55.524922848Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-26T13:19:55.620103398Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-26T13:19:55.735457902Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-26T13:19:55.803723269Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=20.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-26T13:19:57.695790187Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8b180a9b4497de0c6e131d6b48cf5c69a885379e63033ab9639d1655991e626c in / "
                },
                {
                    "created": "2023-01-26T13:19:57.976088931Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T09:53:03.69488215Z",
                    "created_by": "ARG MINIFORGE_NAME=Miniforge3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T09:53:03.69488215Z",
                    "created_by": "ARG MINIFORGE_VERSION=22.9.0-3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T09:53:03.69488215Z",
                    "created_by": "ARG TARGETPLATFORM",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T09:53:03.69488215Z",
                    "created_by": "ENV CONDA_DIR=/opt/conda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T09:53:03.69488215Z",
                    "created_by": "ENV LANG=C.UTF-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T09:53:03.69488215Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T09:53:03.69488215Z",
                    "created_by": "RUN |3 MINIFORGE_NAME=Mambaforge MINIFORGE_VERSION=22.9.0-3 TARGETPLATFORM=linux/amd64 /bin/sh -c apt-get update > /dev/null &&     apt-get install --no-install-recommends --yes         wget bzip2 ca-certificates         git         tini         > /dev/null &&     apt-get clean &&     rm -rf /var/lib/apt/lists/* &&     wget --no-hsts --quiet https://github.com/conda-forge/miniforge/releases/download/${MINIFORGE_VERSION}/${MINIFORGE_NAME}-${MINIFORGE_VERSION}-Linux-$(uname -m).sh -O /tmp/miniforge.sh &&     /bin/bash /tmp/miniforge.sh -b -p ${CONDA_DIR} &&     rm /tmp/miniforge.sh &&     conda clean --tarballs --index-cache --packages --yes &&     find ${CONDA_DIR} -follow -type f -name '*.a' -delete &&     find ${CONDA_DIR} -follow -type f -name '*.pyc' -delete &&     conda clean --force-pkgs-dirs --all --yes  &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> /etc/skel/.bashrc &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-01T09:53:03.69488215Z",
                    "created_by": "ENTRYPOINT [\"tini\" \"--\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T09:53:03.69488215Z",
                    "created_by": "CMD [\"/bin/bash\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJzb3VyY2VzIjpbeyJ0eXBlIjoiZG9ja2VyLWltYWdlIiwicmVmIjoiZG9ja2VyLmlvL2xpYnJhcnkvdWJ1bnR1OmZvY2FsLTIwMjMwMTI2IiwicGluIjoic2hhMjU2OmIzMzMyNWEwMGM3YzI3YjIzYWU0OGNmMTdkMmM2NTRlMmMzMDgxMmIzNWU3ODQ2YzAwNjM4OTMxOGY2YTcxYzIifV19",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d543b8cad89e3428ac8852a13cb2dbfaf55b1e10fd95a9753e51faf393d60e81",
                    "sha256:063e4b68e86bd4cc5d1b6ce1c85460ee8665eaa81aca2a9dd005c844fc597c6c"
                ]
            }
        },
        "23.1.0-1": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CONDA_DIR=/opt/conda",
                    "LANG=C.UTF-8",
                    "LC_ALL=C.UTF-8"
                ],
                "Entrypoint": [
                    "tini",
                    "--"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Labels": {
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "20.04"
                },
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2023-06-20T05:24:38.787081352Z",
            "history": [
                {
                    "created": "2023-04-13T13:05:13.496726073Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-13T13:05:13.557712287Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-13T13:05:13.637326115Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-13T13:05:13.704319522Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=20.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-13T13:05:15.451478418Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d05d1c0936b046937bd5755876db2f8da3ed8ccbcf464bb56c312fbc7ed78589 in / "
                },
                {
                    "created": "2023-04-13T13:05:15.714908196Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T05:24:38.787081352Z",
                    "created_by": "ARG MINIFORGE_NAME=Miniforge3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T05:24:38.787081352Z",
                    "created_by": "ARG MINIFORGE_VERSION=23.1.0-1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T05:24:38.787081352Z",
                    "created_by": "ARG TARGETPLATFORM",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T05:24:38.787081352Z",
                    "created_by": "ENV CONDA_DIR=/opt/conda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T05:24:38.787081352Z",
                    "created_by": "ENV LANG=C.UTF-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T05:24:38.787081352Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T05:24:38.787081352Z",
                    "created_by": "RUN |3 MINIFORGE_NAME=Mambaforge MINIFORGE_VERSION=23.1.0-1 TARGETPLATFORM=linux/amd64 /bin/sh -c apt-get update > /dev/null &&     apt-get install --no-install-recommends --yes         wget bzip2 ca-certificates         git         tini         > /dev/null &&     apt-get clean &&     rm -rf /var/lib/apt/lists/* &&     wget --no-hsts --quiet https://github.com/conda-forge/miniforge/releases/download/${MINIFORGE_VERSION}/${MINIFORGE_NAME}-${MINIFORGE_VERSION}-Linux-$(uname -m).sh -O /tmp/miniforge.sh &&     /bin/bash /tmp/miniforge.sh -b -p ${CONDA_DIR} &&     rm /tmp/miniforge.sh &&     conda clean --tarballs --index-cache --packages --yes &&     find ${CONDA_DIR} -follow -type f -name '*.a' -delete &&     find ${CONDA_DIR} -follow -type f -name '*.pyc' -delete &&     conda clean --force-pkgs-dirs --all --yes  &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> /etc/skel/.bashrc &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-20T05:24:38.787081352Z",
                    "created_by": "ENTRYPOINT [\"tini\" \"--\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T05:24:38.787081352Z",
                    "created_by": "CMD [\"/bin/bash\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJzb3VyY2VzIjpbeyJ0eXBlIjoiZG9ja2VyLWltYWdlIiwicmVmIjoiZG9ja2VyLmlvL2xpYnJhcnkvdWJ1bnR1OmZvY2FsLTIwMjMwNDEyIiwicGluIjoic2hhMjU2OmRiOGJmNmY0ZmIzNTFhYTdhMjZlMjdiYTI2ODZjZjM1YTZhNDA5ZjY1NjAzZTU5ZDRjMjAzZTU4Mzg3ZGM2YjMifV19",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6f37ca73c74f2cef0ddefd960260f2033c16c84583c5507a4f37b1cf7631dc20",
                    "sha256:31db187b4b573fbd25ea579059bcbd3f8866cecb87615d9a50e6d90fb28539bb"
                ]
            }
        },
        "23.1.0-2": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CONDA_DIR=/opt/conda",
                    "LANG=C.UTF-8",
                    "LC_ALL=C.UTF-8"
                ],
                "Entrypoint": [
                    "tini",
                    "--"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Labels": {
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "20.04"
                },
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2023-06-27T19:57:35.011312503Z",
            "history": [
                {
                    "created": "2023-06-05T17:08:57.299070022Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T17:08:57.352553213Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T17:08:57.398862164Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T17:08:57.444423069Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=20.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T17:08:58.73643346Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:655d373cb551d0dd5d7867f88a4f98908dc3f16190986f693e88c423e6f21b8d in / "
                },
                {
                    "created": "2023-06-05T17:08:58.938601289Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-27T19:57:35.011312503Z",
                    "created_by": "ARG MINIFORGE_NAME=Miniforge3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-27T19:57:35.011312503Z",
                    "created_by": "ARG MINIFORGE_VERSION=23.1.0-2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-27T19:57:35.011312503Z",
                    "created_by": "ARG TARGETPLATFORM",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-27T19:57:35.011312503Z",
                    "created_by": "ENV CONDA_DIR=/opt/conda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-27T19:57:35.011312503Z",
                    "created_by": "ENV LANG=C.UTF-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-27T19:57:35.011312503Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-27T19:57:35.011312503Z",
                    "created_by": "RUN |3 MINIFORGE_NAME=Mambaforge MINIFORGE_VERSION=23.1.0-2 TARGETPLATFORM=linux/amd64 /bin/sh -c apt-get update > /dev/null &&     apt-get install --no-install-recommends --yes         wget bzip2 ca-certificates         git         tini         > /dev/null &&     apt-get clean &&     rm -rf /var/lib/apt/lists/* &&     wget --no-hsts --quiet https://github.com/conda-forge/miniforge/releases/download/${MINIFORGE_VERSION}/${MINIFORGE_NAME}-${MINIFORGE_VERSION}-Linux-$(uname -m).sh -O /tmp/miniforge.sh &&     /bin/bash /tmp/miniforge.sh -b -p ${CONDA_DIR} &&     rm /tmp/miniforge.sh &&     conda clean --tarballs --index-cache --packages --yes &&     find ${CONDA_DIR} -follow -type f -name '*.a' -delete &&     find ${CONDA_DIR} -follow -type f -name '*.pyc' -delete &&     conda clean --force-pkgs-dirs --all --yes  &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> /etc/skel/.bashrc &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-27T19:57:35.011312503Z",
                    "created_by": "ENTRYPOINT [\"tini\" \"--\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-27T19:57:35.011312503Z",
                    "created_by": "CMD [\"/bin/bash\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJzb3VyY2VzIjpbeyJ0eXBlIjoiZG9ja2VyLWltYWdlIiwicmVmIjoiZG9ja2VyLmlvL2xpYnJhcnkvdWJ1bnR1OmZvY2FsLTIwMjMwNjA1IiwicGluIjoic2hhMjU2OmY4ZjY1ODQwN2MzNTczMzQ3MTU5NmYyNWZkYjRlZDc0OGI4MGU1NDVhYjU3ZTg0ZWZiZGIxZGJiYjAxYmQ3MGUifV19",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ec66d8cea54a2f4dfbbd8342ce082503bf8541e996a800c0d724b8dd2fea7f6a",
                    "sha256:358d31174d3e31e1131cf37dbddd5a11615aba8824e057c6e1d5f68cb5edb92f"
                ]
            }
        },
        "23.1.0-3": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CONDA_DIR=/opt/conda",
                    "LANG=C.UTF-8",
                    "LC_ALL=C.UTF-8"
                ],
                "Entrypoint": [
                    "tini",
                    "--"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Labels": {
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "20.04"
                },
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2023-07-04T16:50:13.045277642Z",
            "history": [
                {
                    "created": "2023-06-28T09:59:08.268723252Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-28T09:59:08.336157128Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-28T09:59:08.397367339Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-28T09:59:08.466001389Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=20.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-28T09:59:10.116712823Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:12f97b7b044d0d1166dd59408c67f5610a764127aa8a01bc57db23bee48911af in / "
                },
                {
                    "created": "2023-06-28T09:59:10.356889385Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-04T16:50:13.045277642Z",
                    "created_by": "ARG MINIFORGE_NAME=Miniforge3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-04T16:50:13.045277642Z",
                    "created_by": "ARG MINIFORGE_VERSION=23.1.0-3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-04T16:50:13.045277642Z",
                    "created_by": "ARG TARGETPLATFORM",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-04T16:50:13.045277642Z",
                    "created_by": "ENV CONDA_DIR=/opt/conda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-04T16:50:13.045277642Z",
                    "created_by": "ENV LANG=C.UTF-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-04T16:50:13.045277642Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-04T16:50:13.045277642Z",
                    "created_by": "RUN |3 MINIFORGE_NAME=Mambaforge MINIFORGE_VERSION=23.1.0-3 TARGETPLATFORM=linux/amd64 /bin/sh -c apt-get update > /dev/null &&     apt-get install --no-install-recommends --yes         wget bzip2 ca-certificates         git         tini         > /dev/null &&     apt-get clean &&     rm -rf /var/lib/apt/lists/* &&     wget --no-hsts --quiet https://github.com/conda-forge/miniforge/releases/download/${MINIFORGE_VERSION}/${MINIFORGE_NAME}-${MINIFORGE_VERSION}-Linux-$(uname -m).sh -O /tmp/miniforge.sh &&     /bin/bash /tmp/miniforge.sh -b -p ${CONDA_DIR} &&     rm /tmp/miniforge.sh &&     conda clean --tarballs --index-cache --packages --yes &&     find ${CONDA_DIR} -follow -type f -name '*.a' -delete &&     find ${CONDA_DIR} -follow -type f -name '*.pyc' -delete &&     conda clean --force-pkgs-dirs --all --yes  &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> /etc/skel/.bashrc &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-07-04T16:50:13.045277642Z",
                    "created_by": "ENTRYPOINT [\"tini\" \"--\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-04T16:50:13.045277642Z",
                    "created_by": "CMD [\"/bin/bash\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJzb3VyY2VzIjpbeyJ0eXBlIjoiZG9ja2VyLWltYWdlIiwicmVmIjoiZG9ja2VyLmlvL2xpYnJhcnkvdWJ1bnR1OmZvY2FsLTIwMjMwNjI0IiwicGluIjoic2hhMjU2OmM5ODIwYTQ0Yjk1MDk1NmE3OTBjMzU0NzAwYzExNjZhN2VjNjQ4YmMwZDIxNWZhNDM4ZDNhMzM5ODEyZjFkMDEifV19",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f5bb4f853c84f6579d86f72de5f1d43fc8866443d9a027e2106e3755acefd61c",
                    "sha256:d6c6e150b1d62d31086ef0e88e66e2c50945c514405a4a62e4965c9dc37016f3"
                ]
            }
        },
        "23.1.0-4": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CONDA_DIR=/opt/conda",
                    "LANG=C.UTF-8",
                    "LC_ALL=C.UTF-8"
                ],
                "Entrypoint": [
                    "tini",
                    "--"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Labels": {
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "20.04"
                },
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2023-08-06T12:40:07.46379984Z",
            "history": [
                {
                    "created": "2023-08-01T06:16:43.955733321Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-01T06:16:44.018270958Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-01T06:16:44.073377052Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-01T06:16:44.123822186Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=20.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-01T06:16:45.820326219Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:233702cd816c07bc9fed02881b11fb3bdcaee41f3ce3ec1c9f0c4a060b155d5b in / "
                },
                {
                    "created": "2023-08-01T06:16:46.059984082Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-06T12:40:07.46379984Z",
                    "created_by": "ARG MINIFORGE_NAME=Miniforge3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-06T12:40:07.46379984Z",
                    "created_by": "ARG MINIFORGE_VERSION=23.1.0-4",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-06T12:40:07.46379984Z",
                    "created_by": "ARG TARGETPLATFORM",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-06T12:40:07.46379984Z",
                    "created_by": "ENV CONDA_DIR=/opt/conda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-06T12:40:07.46379984Z",
                    "created_by": "ENV LANG=C.UTF-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-06T12:40:07.46379984Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-06T12:40:07.46379984Z",
                    "created_by": "RUN |3 MINIFORGE_NAME=Mambaforge MINIFORGE_VERSION=23.1.0-4 TARGETPLATFORM=linux/amd64 /bin/sh -c apt-get update > /dev/null &&     apt-get install --no-install-recommends --yes         wget bzip2 ca-certificates         git         tini         > /dev/null &&     apt-get clean &&     rm -rf /var/lib/apt/lists/* &&     wget --no-hsts --quiet https://github.com/conda-forge/miniforge/releases/download/${MINIFORGE_VERSION}/${MINIFORGE_NAME}-${MINIFORGE_VERSION}-Linux-$(uname -m).sh -O /tmp/miniforge.sh &&     /bin/bash /tmp/miniforge.sh -b -p ${CONDA_DIR} &&     rm /tmp/miniforge.sh &&     conda clean --tarballs --index-cache --packages --yes &&     find ${CONDA_DIR} -follow -type f -name '*.a' -delete &&     find ${CONDA_DIR} -follow -type f -name '*.pyc' -delete &&     conda clean --force-pkgs-dirs --all --yes  &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> /etc/skel/.bashrc &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-06T12:40:07.46379984Z",
                    "created_by": "ENTRYPOINT [\"tini\" \"--\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-06T12:40:07.46379984Z",
                    "created_by": "CMD [\"/bin/bash\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:954c82bdeb5fcc80094317528fa3fcbb1026aeff64f872527d35ec9b4343b84d",
                    "sha256:3ed76913833b28007549cbe5775f8b116bd4b32596d1a0fee64dd42546703182"
                ]
            }
        },
        "23.11.0-0": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CONDA_DIR=/opt/conda",
                    "LANG=C.UTF-8",
                    "LC_ALL=C.UTF-8"
                ],
                "Entrypoint": [
                    "tini",
                    "--"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Labels": {
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "20.04"
                },
                "ArgsEscaped": true
            },
            "created": "2024-03-18T17:48:21.305697053Z",
            "history": [
                {
                    "created": "2024-02-16T21:32:49.66167695Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-16T21:32:49.694673293Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-16T21:32:49.719896531Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-16T21:32:49.758913757Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=20.04",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-16T21:32:52.17640841Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a25798f31219000d6a82d2c9258743926b1a400530d12dbb1eadf2c2519f9888 in / "
                },
                {
                    "created": "2024-02-16T21:32:52.391333754Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-18T17:48:21.305697053Z",
                    "created_by": "ARG MINIFORGE_NAME=Miniforge3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-18T17:48:21.305697053Z",
                    "created_by": "ARG MINIFORGE_VERSION=23.11.0-0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-18T17:48:21.305697053Z",
                    "created_by": "ARG TARGETPLATFORM",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-18T17:48:21.305697053Z",
                    "created_by": "ENV CONDA_DIR=/opt/conda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-18T17:48:21.305697053Z",
                    "created_by": "ENV LANG=C.UTF-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-18T17:48:21.305697053Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-18T17:48:21.305697053Z",
                    "created_by": "RUN |3 MINIFORGE_NAME=Mambaforge MINIFORGE_VERSION=23.11.0-0 TARGETPLATFORM=linux/amd64 /bin/sh -c apt-get update > /dev/null &&     apt-get install --no-install-recommends --yes         wget bzip2 ca-certificates         git         tini         > /dev/null &&     apt-get clean &&     rm -rf /var/lib/apt/lists/* &&     wget --no-hsts --quiet https://github.com/conda-forge/miniforge/releases/download/${MINIFORGE_VERSION}/${MINIFORGE_NAME}-${MINIFORGE_VERSION}-Linux-$(uname -m).sh -O /tmp/miniforge.sh &&     /bin/bash /tmp/miniforge.sh -b -p ${CONDA_DIR} &&     rm /tmp/miniforge.sh &&     conda clean --tarballs --index-cache --packages --yes &&     find ${CONDA_DIR} -follow -type f -name '*.a' -delete &&     find ${CONDA_DIR} -follow -type f -name '*.pyc' -delete &&     conda clean --force-pkgs-dirs --all --yes  &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> /etc/skel/.bashrc &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-18T17:48:21.305697053Z",
                    "created_by": "ENTRYPOINT [\"tini\" \"--\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-18T17:48:21.305697053Z",
                    "created_by": "CMD [\"/bin/bash\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5faf9c0a9efe4675ecd21a4ec417d51077d5e75da9e673161a94e7d6cd43f92c",
                    "sha256:72ad4a7119b71d89abaeb98536d0486e6f1c1f98c6418f54f9f4285bd006648c"
                ]
            }
        },
        "23.3.1-0": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CONDA_DIR=/opt/conda",
                    "LANG=C.UTF-8",
                    "LC_ALL=C.UTF-8"
                ],
                "Entrypoint": [
                    "tini",
                    "--"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Labels": {
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "20.04"
                },
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2023-08-21T00:40:59.469200324Z",
            "history": [
                {
                    "created": "2023-08-01T06:16:43.955733321Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-01T06:16:44.018270958Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-01T06:16:44.073377052Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-01T06:16:44.123822186Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=20.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-01T06:16:45.820326219Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:233702cd816c07bc9fed02881b11fb3bdcaee41f3ce3ec1c9f0c4a060b155d5b in / "
                },
                {
                    "created": "2023-08-01T06:16:46.059984082Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T00:40:59.469200324Z",
                    "created_by": "ARG MINIFORGE_NAME=Miniforge3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T00:40:59.469200324Z",
                    "created_by": "ARG MINIFORGE_VERSION=23.3.1-0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T00:40:59.469200324Z",
                    "created_by": "ARG TARGETPLATFORM",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T00:40:59.469200324Z",
                    "created_by": "ENV CONDA_DIR=/opt/conda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T00:40:59.469200324Z",
                    "created_by": "ENV LANG=C.UTF-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T00:40:59.469200324Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T00:40:59.469200324Z",
                    "created_by": "RUN |3 MINIFORGE_NAME=Mambaforge MINIFORGE_VERSION=23.3.1-0 TARGETPLATFORM=linux/amd64 /bin/sh -c apt-get update > /dev/null &&     apt-get install --no-install-recommends --yes         wget bzip2 ca-certificates         git         tini         > /dev/null &&     apt-get clean &&     rm -rf /var/lib/apt/lists/* &&     wget --no-hsts --quiet https://github.com/conda-forge/miniforge/releases/download/${MINIFORGE_VERSION}/${MINIFORGE_NAME}-${MINIFORGE_VERSION}-Linux-$(uname -m).sh -O /tmp/miniforge.sh &&     /bin/bash /tmp/miniforge.sh -b -p ${CONDA_DIR} &&     rm /tmp/miniforge.sh &&     conda clean --tarballs --index-cache --packages --yes &&     find ${CONDA_DIR} -follow -type f -name '*.a' -delete &&     find ${CONDA_DIR} -follow -type f -name '*.pyc' -delete &&     conda clean --force-pkgs-dirs --all --yes  &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> /etc/skel/.bashrc &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T00:40:59.469200324Z",
                    "created_by": "ENTRYPOINT [\"tini\" \"--\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T00:40:59.469200324Z",
                    "created_by": "CMD [\"/bin/bash\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:954c82bdeb5fcc80094317528fa3fcbb1026aeff64f872527d35ec9b4343b84d",
                    "sha256:7be2efa765cf9ae225ef78967a3ecb6bdd362cd1fffcef5fa781145b5b66f98f"
                ]
            }
        },
        "23.3.1-1": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CONDA_DIR=/opt/conda",
                    "LANG=C.UTF-8",
                    "LC_ALL=C.UTF-8"
                ],
                "Entrypoint": [
                    "tini",
                    "--"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Labels": {
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "20.04"
                },
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2023-12-18T17:02:04.239889829Z",
            "history": [
                {
                    "created": "2023-12-13T10:27:43.956028683Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-13T10:27:44.019734751Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-13T10:27:44.068648223Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-13T10:27:44.112893577Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=20.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-13T10:27:45.59526847Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5696198fbfd4074852bdee76ffd84da75da8de76727cef4f0cdd265f7bee6b76 in / "
                },
                {
                    "created": "2023-12-13T10:27:45.793268447Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-18T17:02:04.239889829Z",
                    "created_by": "ARG MINIFORGE_NAME=Miniforge3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-18T17:02:04.239889829Z",
                    "created_by": "ARG MINIFORGE_VERSION=23.3.1-1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-18T17:02:04.239889829Z",
                    "created_by": "ARG TARGETPLATFORM",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-18T17:02:04.239889829Z",
                    "created_by": "ENV CONDA_DIR=/opt/conda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-18T17:02:04.239889829Z",
                    "created_by": "ENV LANG=C.UTF-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-18T17:02:04.239889829Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-18T17:02:04.239889829Z",
                    "created_by": "RUN |3 MINIFORGE_NAME=Mambaforge MINIFORGE_VERSION=23.3.1-1 TARGETPLATFORM=linux/amd64 /bin/sh -c apt-get update > /dev/null &&     apt-get install --no-install-recommends --yes         wget bzip2 ca-certificates         git         tini         > /dev/null &&     apt-get clean &&     rm -rf /var/lib/apt/lists/* &&     wget --no-hsts --quiet https://github.com/conda-forge/miniforge/releases/download/${MINIFORGE_VERSION}/${MINIFORGE_NAME}-${MINIFORGE_VERSION}-Linux-$(uname -m).sh -O /tmp/miniforge.sh &&     /bin/bash /tmp/miniforge.sh -b -p ${CONDA_DIR} &&     rm /tmp/miniforge.sh &&     conda clean --tarballs --index-cache --packages --yes &&     find ${CONDA_DIR} -follow -type f -name '*.a' -delete &&     find ${CONDA_DIR} -follow -type f -name '*.pyc' -delete &&     conda clean --force-pkgs-dirs --all --yes  &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> /etc/skel/.bashrc &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-18T17:02:04.239889829Z",
                    "created_by": "ENTRYPOINT [\"tini\" \"--\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-18T17:02:04.239889829Z",
                    "created_by": "CMD [\"/bin/bash\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3a03f09d212915b240e9d216069aba5652ed4765c7e4b098c65e71860d47b8e1",
                    "sha256:957b015001e8eab5cb596340e3d1d34bb5e01b0dba2c804dae5227754b0e9408"
                ]
            }
        },
        "24.1.2-0": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CONDA_DIR=/opt/conda",
                    "LANG=C.UTF-8",
                    "LC_ALL=C.UTF-8"
                ],
                "Entrypoint": [
                    "tini",
                    "--"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Labels": {
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "20.04"
                },
                "ArgsEscaped": true
            },
            "created": "2024-04-16T18:27:45.292430305Z",
            "history": [
                {
                    "created": "2024-04-10T18:50:35.72773029Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-10T18:50:35.75382666Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-10T18:50:35.786388285Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-10T18:50:35.810453242Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=20.04",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-10T18:50:37.575221925Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ea2128e23dce0162557abadd80656bd5ae047d573095d1d4323eb4154490dfdc in / "
                },
                {
                    "created": "2024-04-10T18:50:37.922041804Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-16T18:27:45.292430305Z",
                    "created_by": "ARG MINIFORGE_NAME=Miniforge3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-16T18:27:45.292430305Z",
                    "created_by": "ARG MINIFORGE_VERSION=24.1.2-0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-16T18:27:45.292430305Z",
                    "created_by": "ARG TARGETPLATFORM",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-16T18:27:45.292430305Z",
                    "created_by": "ENV CONDA_DIR=/opt/conda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-16T18:27:45.292430305Z",
                    "created_by": "ENV LANG=C.UTF-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-16T18:27:45.292430305Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-16T18:27:45.292430305Z",
                    "created_by": "RUN |3 MINIFORGE_NAME=Mambaforge MINIFORGE_VERSION=24.1.2-0 TARGETPLATFORM=linux/amd64 /bin/sh -c apt-get update > /dev/null &&     apt-get install --no-install-recommends --yes         wget bzip2 ca-certificates         git         tini         > /dev/null &&     apt-get clean &&     rm -rf /var/lib/apt/lists/* &&     wget --no-hsts --quiet https://github.com/conda-forge/miniforge/releases/download/${MINIFORGE_VERSION}/${MINIFORGE_NAME}-${MINIFORGE_VERSION}-Linux-$(uname -m).sh -O /tmp/miniforge.sh &&     /bin/bash /tmp/miniforge.sh -b -p ${CONDA_DIR} &&     rm /tmp/miniforge.sh &&     conda clean --tarballs --index-cache --packages --yes &&     find ${CONDA_DIR} -follow -type f -name '*.a' -delete &&     find ${CONDA_DIR} -follow -type f -name '*.pyc' -delete &&     conda clean --force-pkgs-dirs --all --yes  &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> /etc/skel/.bashrc &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-16T18:27:45.292430305Z",
                    "created_by": "ENTRYPOINT [\"tini\" \"--\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-16T18:27:45.292430305Z",
                    "created_by": "CMD [\"/bin/bash\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:106e8431b412f51ccd75ea46a2d5cb4343b23273cbcf50188377cb93aa9a6d82",
                    "sha256:e619f2d5eb00d0ce645934cd19df3320626c6a9ba2221f046c8ab69a198bf1c5"
                ]
            }
        },
        "24.3.0-0": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CONDA_DIR=/opt/conda",
                    "LANG=C.UTF-8",
                    "LC_ALL=C.UTF-8"
                ],
                "Entrypoint": [
                    "tini",
                    "--"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Labels": {
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "20.04"
                },
                "ArgsEscaped": true
            },
            "created": "2024-05-21T14:15:45.964880778Z",
            "history": [
                {
                    "created": "2024-04-27T14:03:39.495375794Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:03:39.518457955Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:03:39.540231445Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:03:39.564669578Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=20.04",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:03:41.34852592Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e5742fae181dc02a419e48d202fdd6a561b79ccbe7d3415e15e3d2c12e444a2a in / "
                },
                {
                    "created": "2024-04-27T14:03:41.56764926Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-21T14:15:45.964880778Z",
                    "created_by": "ARG MINIFORGE_NAME=Miniforge3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-21T14:15:45.964880778Z",
                    "created_by": "ARG MINIFORGE_VERSION=24.3.0-0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-21T14:15:45.964880778Z",
                    "created_by": "ARG TARGETPLATFORM",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-21T14:15:45.964880778Z",
                    "created_by": "ENV CONDA_DIR=/opt/conda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-21T14:15:45.964880778Z",
                    "created_by": "ENV LANG=C.UTF-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-21T14:15:45.964880778Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-21T14:15:45.964880778Z",
                    "created_by": "RUN |3 MINIFORGE_NAME=Mambaforge MINIFORGE_VERSION=24.3.0-0 TARGETPLATFORM=linux/amd64 /bin/sh -c apt-get update > /dev/null &&     apt-get install --no-install-recommends --yes         wget bzip2 ca-certificates         git         tini         > /dev/null &&     apt-get clean &&     rm -rf /var/lib/apt/lists/* &&     wget --no-hsts --quiet https://github.com/conda-forge/miniforge/releases/download/${MINIFORGE_VERSION}/${MINIFORGE_NAME}-${MINIFORGE_VERSION}-Linux-$(uname -m).sh -O /tmp/miniforge.sh &&     /bin/bash /tmp/miniforge.sh -b -p ${CONDA_DIR} &&     rm /tmp/miniforge.sh &&     conda clean --tarballs --index-cache --packages --yes &&     find ${CONDA_DIR} -follow -type f -name '*.a' -delete &&     find ${CONDA_DIR} -follow -type f -name '*.pyc' -delete &&     conda clean --force-pkgs-dirs --all --yes  &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> /etc/skel/.bashrc &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-21T14:15:45.964880778Z",
                    "created_by": "ENTRYPOINT [\"tini\" \"--\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-21T14:15:45.964880778Z",
                    "created_by": "CMD [\"/bin/bash\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4a1518ebc26e2e4c26f1c5d78a36d41d87d2fd4a7e4ad37c5f9033f2eb52f26b",
                    "sha256:da4f6b3d60aa198b006a844ff052e0a59c81288b3ffa9783ef81ad10d92ce23d"
                ]
            }
        },
        "4.10.1-0": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CONDA_DIR=/opt/conda",
                    "LANG=C.UTF-8",
                    "LC_ALL=C.UTF-8"
                ],
                "Entrypoint": [
                    "tini",
                    "--"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2021-06-23T19:20:58.306040397Z",
            "history": [
                {
                    "created": "2021-01-21T03:38:20.003680095Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2a90223d9f00d31e31eff6b207c57af4b7d27276195b94bec991457a6998180c in / "
                },
                {
                    "created": "2021-01-21T03:38:21.115557643Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-01-21T03:38:22.166838465Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-21T03:38:23.18135616Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-01-21T03:38:23.37559427Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-23T19:20:58.306040397Z",
                    "created_by": "ARG MINIFORGE_NAME=Miniforge3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-23T19:20:58.306040397Z",
                    "created_by": "ARG MINIFORGE_VERSION=4.10.1-0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-23T19:20:58.306040397Z",
                    "created_by": "ARG TINI_VERSION=v0.18.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-23T19:20:58.306040397Z",
                    "created_by": "ARG TARGETPLATFORM",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-23T19:20:58.306040397Z",
                    "created_by": "ENV CONDA_DIR=/opt/conda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-23T19:20:58.306040397Z",
                    "created_by": "ENV LANG=C.UTF-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-23T19:20:58.306040397Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-23T19:20:58.306040397Z",
                    "created_by": "RUN |4 MINIFORGE_NAME=Mambaforge MINIFORGE_VERSION=4.10.1-0 TINI_VERSION=v0.18.0 TARGETPLATFORM=linux/amd64 /bin/sh -c apt-get update > /dev/null &&     apt-get install --no-install-recommends --yes         wget bzip2 ca-certificates         git > /dev/null &&     apt-get clean &&     rm -rf /var/lib/apt/lists/* &&     TARGETARCH=\"$(echo ${TARGETPLATFORM} | cut -d / -f 2)\"; case ${TARGETARCH} in \"ppc64le\") TARGETARCH=\"ppc64el\" ;; *) ;; esac ;     wget --no-hsts --quiet https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini-${TARGETARCH} -O /usr/local/bin/tini &&     chmod +x /usr/local/bin/tini &&     wget --no-hsts --quiet https://github.com/conda-forge/miniforge/releases/download/${MINIFORGE_VERSION}/${MINIFORGE_NAME}-${MINIFORGE_VERSION}-Linux-$(uname -m).sh -O /tmp/miniforge.sh &&     /bin/bash /tmp/miniforge.sh -b -p ${CONDA_DIR} &&     rm /tmp/miniforge.sh &&     conda clean -tipsy &&     find ${CONDA_DIR} -follow -type f -name '*.a' -delete &&     find ${CONDA_DIR} -follow -type f -name '*.pyc' -delete &&     conda clean -afy &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> /etc/skel/.bashrc &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-23T19:20:58.306040397Z",
                    "created_by": "ENTRYPOINT [\"tini\" \"--\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-23T19:20:58.306040397Z",
                    "created_by": "CMD [\"/bin/bash\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9f32931c9d28f10104a8eb1330954ba90e76d92b02c5256521ba864feec14009",
                    "sha256:dbf2c0f42a39b60301f6d3936f7f8adb59bb97d31ec11cc4a049ce81155fef89",
                    "sha256:02473afd360bd5391fa51b6e7849ce88732ae29f50f3630c3551f528eba66d1e",
                    "sha256:3f17fa2a5f0e6ee6a2f3d84e643747e871ee1b8f697a761589ffc6ed6561a218"
                ]
            }
        },
        "4.10.2-0": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CONDA_DIR=/opt/conda",
                    "LANG=C.UTF-8",
                    "LC_ALL=C.UTF-8"
                ],
                "Entrypoint": [
                    "tini",
                    "--"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2021-06-30T05:50:18.633396575Z",
            "history": [
                {
                    "created": "2021-01-21T03:38:20.003680095Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2a90223d9f00d31e31eff6b207c57af4b7d27276195b94bec991457a6998180c in / "
                },
                {
                    "created": "2021-01-21T03:38:21.115557643Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-01-21T03:38:22.166838465Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-21T03:38:23.18135616Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-01-21T03:38:23.37559427Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-30T05:50:18.633396575Z",
                    "created_by": "ARG MINIFORGE_NAME=Miniforge3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-30T05:50:18.633396575Z",
                    "created_by": "ARG MINIFORGE_VERSION=4.10.2-0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-30T05:50:18.633396575Z",
                    "created_by": "ARG TINI_VERSION=v0.18.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-30T05:50:18.633396575Z",
                    "created_by": "ARG TARGETPLATFORM",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-30T05:50:18.633396575Z",
                    "created_by": "ENV CONDA_DIR=/opt/conda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-30T05:50:18.633396575Z",
                    "created_by": "ENV LANG=C.UTF-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-30T05:50:18.633396575Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-30T05:50:18.633396575Z",
                    "created_by": "RUN |4 MINIFORGE_NAME=Mambaforge MINIFORGE_VERSION=4.10.2-0 TINI_VERSION=v0.18.0 TARGETPLATFORM=linux/amd64 /bin/sh -c apt-get update > /dev/null &&     apt-get install --no-install-recommends --yes         wget bzip2 ca-certificates         git > /dev/null &&     apt-get clean &&     rm -rf /var/lib/apt/lists/* &&     TARGETARCH=\"$(echo ${TARGETPLATFORM} | cut -d / -f 2)\"; case ${TARGETARCH} in \"ppc64le\") TARGETARCH=\"ppc64el\" ;; *) ;; esac ;     wget --no-hsts --quiet https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini-${TARGETARCH} -O /usr/local/bin/tini &&     chmod +x /usr/local/bin/tini &&     wget --no-hsts --quiet https://github.com/conda-forge/miniforge/releases/download/${MINIFORGE_VERSION}/${MINIFORGE_NAME}-${MINIFORGE_VERSION}-Linux-$(uname -m).sh -O /tmp/miniforge.sh &&     /bin/bash /tmp/miniforge.sh -b -p ${CONDA_DIR} &&     rm /tmp/miniforge.sh &&     conda clean -tipsy &&     find ${CONDA_DIR} -follow -type f -name '*.a' -delete &&     find ${CONDA_DIR} -follow -type f -name '*.pyc' -delete &&     conda clean -afy &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> /etc/skel/.bashrc &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-30T05:50:18.633396575Z",
                    "created_by": "ENTRYPOINT [\"tini\" \"--\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-30T05:50:18.633396575Z",
                    "created_by": "CMD [\"/bin/bash\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9f32931c9d28f10104a8eb1330954ba90e76d92b02c5256521ba864feec14009",
                    "sha256:dbf2c0f42a39b60301f6d3936f7f8adb59bb97d31ec11cc4a049ce81155fef89",
                    "sha256:02473afd360bd5391fa51b6e7849ce88732ae29f50f3630c3551f528eba66d1e",
                    "sha256:fd2a769330927e94180ecadc4590f16eca888290a8e8a6cb570956867552df1f"
                ]
            }
        },
        "4.10.3-1": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CONDA_DIR=/opt/conda",
                    "LANG=C.UTF-8",
                    "LC_ALL=C.UTF-8"
                ],
                "Entrypoint": [
                    "tini",
                    "--"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2021-07-06T03:38:10.948664474Z",
            "history": [
                {
                    "created": "2021-01-21T03:38:20.003680095Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2a90223d9f00d31e31eff6b207c57af4b7d27276195b94bec991457a6998180c in / "
                },
                {
                    "created": "2021-01-21T03:38:21.115557643Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-01-21T03:38:22.166838465Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-21T03:38:23.18135616Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-01-21T03:38:23.37559427Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-06T03:38:10.948664474Z",
                    "created_by": "ARG MINIFORGE_NAME=Miniforge3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-06T03:38:10.948664474Z",
                    "created_by": "ARG MINIFORGE_VERSION=4.10.3-1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-06T03:38:10.948664474Z",
                    "created_by": "ARG TINI_VERSION=v0.18.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-06T03:38:10.948664474Z",
                    "created_by": "ARG TARGETPLATFORM",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-06T03:38:10.948664474Z",
                    "created_by": "ENV CONDA_DIR=/opt/conda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-06T03:38:10.948664474Z",
                    "created_by": "ENV LANG=C.UTF-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-06T03:38:10.948664474Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-06T03:38:10.948664474Z",
                    "created_by": "RUN |4 MINIFORGE_NAME=Mambaforge MINIFORGE_VERSION=4.10.3-1 TINI_VERSION=v0.18.0 TARGETPLATFORM=linux/amd64 /bin/sh -c apt-get update > /dev/null &&     apt-get install --no-install-recommends --yes         wget bzip2 ca-certificates         git > /dev/null &&     apt-get clean &&     rm -rf /var/lib/apt/lists/* &&     TARGETARCH=\"$(echo ${TARGETPLATFORM} | cut -d / -f 2)\"; case ${TARGETARCH} in \"ppc64le\") TARGETARCH=\"ppc64el\" ;; *) ;; esac ;     wget --no-hsts --quiet https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini-${TARGETARCH} -O /usr/local/bin/tini &&     chmod +x /usr/local/bin/tini &&     wget --no-hsts --quiet https://github.com/conda-forge/miniforge/releases/download/${MINIFORGE_VERSION}/${MINIFORGE_NAME}-${MINIFORGE_VERSION}-Linux-$(uname -m).sh -O /tmp/miniforge.sh &&     /bin/bash /tmp/miniforge.sh -b -p ${CONDA_DIR} &&     rm /tmp/miniforge.sh &&     conda clean -tipsy &&     find ${CONDA_DIR} -follow -type f -name '*.a' -delete &&     find ${CONDA_DIR} -follow -type f -name '*.pyc' -delete &&     conda clean -afy &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> /etc/skel/.bashrc &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-07-06T03:38:10.948664474Z",
                    "created_by": "ENTRYPOINT [\"tini\" \"--\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-06T03:38:10.948664474Z",
                    "created_by": "CMD [\"/bin/bash\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9f32931c9d28f10104a8eb1330954ba90e76d92b02c5256521ba864feec14009",
                    "sha256:dbf2c0f42a39b60301f6d3936f7f8adb59bb97d31ec11cc4a049ce81155fef89",
                    "sha256:02473afd360bd5391fa51b6e7849ce88732ae29f50f3630c3551f528eba66d1e",
                    "sha256:b8f37fa61d451dc5cedd27c65a7e0962cdc9d8341a16ede3418d919e4dba817a"
                ]
            }
        },
        "4.10.3-10": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CONDA_DIR=/opt/conda",
                    "LANG=C.UTF-8",
                    "LC_ALL=C.UTF-8"
                ],
                "Entrypoint": [
                    "tini",
                    "--"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2021-12-01T20:41:13.062427089Z",
            "history": [
                {
                    "created": "2021-10-16T00:37:47.226745473Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5d68d27cc15a80653c93d3a0b262a28112d47a46326ff5fc2dfbf7fa3b9a0ce8 in / "
                },
                {
                    "created": "2021-10-16T00:37:47.578710012Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-01T20:41:13.062427089Z",
                    "created_by": "ARG MINIFORGE_NAME=Miniforge3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-01T20:41:13.062427089Z",
                    "created_by": "ARG MINIFORGE_VERSION=4.10.3-10",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-01T20:41:13.062427089Z",
                    "created_by": "ARG TINI_VERSION=v0.18.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-01T20:41:13.062427089Z",
                    "created_by": "ARG TARGETPLATFORM",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-01T20:41:13.062427089Z",
                    "created_by": "ENV CONDA_DIR=/opt/conda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-01T20:41:13.062427089Z",
                    "created_by": "ENV LANG=C.UTF-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-01T20:41:13.062427089Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-01T20:41:13.062427089Z",
                    "created_by": "RUN |4 MINIFORGE_NAME=Mambaforge MINIFORGE_VERSION=4.10.3-10 TINI_VERSION=v0.18.0 TARGETPLATFORM=linux/amd64 /bin/sh -c apt-get update > /dev/null &&     apt-get install --no-install-recommends --yes         wget bzip2 ca-certificates         git > /dev/null &&     apt-get clean &&     rm -rf /var/lib/apt/lists/* &&     TARGETARCH=\"$(echo ${TARGETPLATFORM} | cut -d / -f 2)\"; case ${TARGETARCH} in \"ppc64le\") TARGETARCH=\"ppc64el\" ;; *) ;; esac ;     wget --no-hsts --quiet https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini-${TARGETARCH} -O /usr/local/bin/tini &&     chmod +x /usr/local/bin/tini &&     wget --no-hsts --quiet https://github.com/conda-forge/miniforge/releases/download/${MINIFORGE_VERSION}/${MINIFORGE_NAME}-${MINIFORGE_VERSION}-Linux-$(uname -m).sh -O /tmp/miniforge.sh &&     /bin/bash /tmp/miniforge.sh -b -p ${CONDA_DIR} &&     rm /tmp/miniforge.sh &&     conda clean -tipsy &&     find ${CONDA_DIR} -follow -type f -name '*.a' -delete &&     find ${CONDA_DIR} -follow -type f -name '*.pyc' -delete &&     conda clean -afy &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> /etc/skel/.bashrc &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-12-01T20:41:13.062427089Z",
                    "created_by": "ENTRYPOINT [\"tini\" \"--\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-01T20:41:13.062427089Z",
                    "created_by": "CMD [\"/bin/bash\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9f54eef412758095c8079ac465d494a2872e02e90bf1fb5f12a1641c0d1bb78b",
                    "sha256:ca6b529951004a6e87bdc3eb83b092999228b7581b20983d15b8317a531c4d1c"
                ]
            }
        },
        "4.10.3-2": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CONDA_DIR=/opt/conda",
                    "LANG=C.UTF-8",
                    "LC_ALL=C.UTF-8"
                ],
                "Entrypoint": [
                    "tini",
                    "--"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2021-07-19T17:19:33.551508148Z",
            "history": [
                {
                    "created": "2021-07-13T22:29:34.335247052Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5c3d9d2597e01d1cee8513ff0e1344e7791e6f582be2cbd1d5777dd204780f1c in / "
                },
                {
                    "created": "2021-07-13T22:29:34.750851774Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T17:19:33.551508148Z",
                    "created_by": "ARG MINIFORGE_NAME=Miniforge3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T17:19:33.551508148Z",
                    "created_by": "ARG MINIFORGE_VERSION=4.10.3-2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T17:19:33.551508148Z",
                    "created_by": "ARG TINI_VERSION=v0.18.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T17:19:33.551508148Z",
                    "created_by": "ARG TARGETPLATFORM",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T17:19:33.551508148Z",
                    "created_by": "ENV CONDA_DIR=/opt/conda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T17:19:33.551508148Z",
                    "created_by": "ENV LANG=C.UTF-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T17:19:33.551508148Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T17:19:33.551508148Z",
                    "created_by": "RUN |4 MINIFORGE_NAME=Mambaforge MINIFORGE_VERSION=4.10.3-2 TINI_VERSION=v0.18.0 TARGETPLATFORM=linux/amd64 /bin/sh -c apt-get update > /dev/null &&     apt-get install --no-install-recommends --yes         wget bzip2 ca-certificates         git > /dev/null &&     apt-get clean &&     rm -rf /var/lib/apt/lists/* &&     TARGETARCH=\"$(echo ${TARGETPLATFORM} | cut -d / -f 2)\"; case ${TARGETARCH} in \"ppc64le\") TARGETARCH=\"ppc64el\" ;; *) ;; esac ;     wget --no-hsts --quiet https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini-${TARGETARCH} -O /usr/local/bin/tini &&     chmod +x /usr/local/bin/tini &&     wget --no-hsts --quiet https://github.com/conda-forge/miniforge/releases/download/${MINIFORGE_VERSION}/${MINIFORGE_NAME}-${MINIFORGE_VERSION}-Linux-$(uname -m).sh -O /tmp/miniforge.sh &&     /bin/bash /tmp/miniforge.sh -b -p ${CONDA_DIR} &&     rm /tmp/miniforge.sh &&     conda clean -tipsy &&     find ${CONDA_DIR} -follow -type f -name '*.a' -delete &&     find ${CONDA_DIR} -follow -type f -name '*.pyc' -delete &&     conda clean -afy &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> /etc/skel/.bashrc &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-07-19T17:19:33.551508148Z",
                    "created_by": "ENTRYPOINT [\"tini\" \"--\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T17:19:33.551508148Z",
                    "created_by": "CMD [\"/bin/bash\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a70daca533d02f0886624703e70526b9ce8969b8cb87ff1eac163441fe071aa3",
                    "sha256:b137e39b4360822101d04d28758779c46d29378357d635d4e9e0567147752052"
                ]
            }
        },
        "4.10.3-3": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CONDA_DIR=/opt/conda",
                    "LANG=C.UTF-8",
                    "LC_ALL=C.UTF-8"
                ],
                "Entrypoint": [
                    "tini",
                    "--"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2021-07-27T16:25:48.338459835Z",
            "history": [
                {
                    "created": "2021-07-26T21:21:39.951432409Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:524e8d93ad65f08a0cb0d144268350186e36f508006b05b8faf2e1289499b59f in / "
                },
                {
                    "created": "2021-07-26T21:21:40.307832875Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-27T16:25:48.338459835Z",
                    "created_by": "ARG MINIFORGE_NAME=Miniforge3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-27T16:25:48.338459835Z",
                    "created_by": "ARG MINIFORGE_VERSION=4.10.3-3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-27T16:25:48.338459835Z",
                    "created_by": "ARG TINI_VERSION=v0.18.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-27T16:25:48.338459835Z",
                    "created_by": "ARG TARGETPLATFORM",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-27T16:25:48.338459835Z",
                    "created_by": "ENV CONDA_DIR=/opt/conda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-27T16:25:48.338459835Z",
                    "created_by": "ENV LANG=C.UTF-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-27T16:25:48.338459835Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-27T16:25:48.338459835Z",
                    "created_by": "RUN |4 MINIFORGE_NAME=Mambaforge MINIFORGE_VERSION=4.10.3-3 TINI_VERSION=v0.18.0 TARGETPLATFORM=linux/amd64 /bin/sh -c apt-get update > /dev/null &&     apt-get install --no-install-recommends --yes         wget bzip2 ca-certificates         git > /dev/null &&     apt-get clean &&     rm -rf /var/lib/apt/lists/* &&     TARGETARCH=\"$(echo ${TARGETPLATFORM} | cut -d / -f 2)\"; case ${TARGETARCH} in \"ppc64le\") TARGETARCH=\"ppc64el\" ;; *) ;; esac ;     wget --no-hsts --quiet https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini-${TARGETARCH} -O /usr/local/bin/tini &&     chmod +x /usr/local/bin/tini &&     wget --no-hsts --quiet https://github.com/conda-forge/miniforge/releases/download/${MINIFORGE_VERSION}/${MINIFORGE_NAME}-${MINIFORGE_VERSION}-Linux-$(uname -m).sh -O /tmp/miniforge.sh &&     /bin/bash /tmp/miniforge.sh -b -p ${CONDA_DIR} &&     rm /tmp/miniforge.sh &&     conda clean -tipsy &&     find ${CONDA_DIR} -follow -type f -name '*.a' -delete &&     find ${CONDA_DIR} -follow -type f -name '*.pyc' -delete &&     conda clean -afy &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> /etc/skel/.bashrc &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-07-27T16:25:48.338459835Z",
                    "created_by": "ENTRYPOINT [\"tini\" \"--\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-27T16:25:48.338459835Z",
                    "created_by": "CMD [\"/bin/bash\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7555a8182c42c7737a384cfe03a3c7329f646a3bf389c4bcd75379fc85e6c144",
                    "sha256:165ef8422cf4b2ff0296360cdf746332738acaf8d0fdaf9e15fdbf9a788a4253"
                ]
            }
        },
        "4.10.3-4": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CONDA_DIR=/opt/conda",
                    "LANG=C.UTF-8",
                    "LC_ALL=C.UTF-8"
                ],
                "Entrypoint": [
                    "tini",
                    "--"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2021-08-03T06:14:27.579346494Z",
            "history": [
                {
                    "created": "2021-07-26T21:21:39.951432409Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:524e8d93ad65f08a0cb0d144268350186e36f508006b05b8faf2e1289499b59f in / "
                },
                {
                    "created": "2021-07-26T21:21:40.307832875Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-03T06:14:27.579346494Z",
                    "created_by": "ARG MINIFORGE_NAME=Miniforge3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-03T06:14:27.579346494Z",
                    "created_by": "ARG MINIFORGE_VERSION=4.10.3-4",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-03T06:14:27.579346494Z",
                    "created_by": "ARG TINI_VERSION=v0.18.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-03T06:14:27.579346494Z",
                    "created_by": "ARG TARGETPLATFORM",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-03T06:14:27.579346494Z",
                    "created_by": "ENV CONDA_DIR=/opt/conda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-03T06:14:27.579346494Z",
                    "created_by": "ENV LANG=C.UTF-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-03T06:14:27.579346494Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-03T06:14:27.579346494Z",
                    "created_by": "RUN |4 MINIFORGE_NAME=Mambaforge MINIFORGE_VERSION=4.10.3-4 TINI_VERSION=v0.18.0 TARGETPLATFORM=linux/amd64 /bin/sh -c apt-get update > /dev/null &&     apt-get install --no-install-recommends --yes         wget bzip2 ca-certificates         git > /dev/null &&     apt-get clean &&     rm -rf /var/lib/apt/lists/* &&     TARGETARCH=\"$(echo ${TARGETPLATFORM} | cut -d / -f 2)\"; case ${TARGETARCH} in \"ppc64le\") TARGETARCH=\"ppc64el\" ;; *) ;; esac ;     wget --no-hsts --quiet https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini-${TARGETARCH} -O /usr/local/bin/tini &&     chmod +x /usr/local/bin/tini &&     wget --no-hsts --quiet https://github.com/conda-forge/miniforge/releases/download/${MINIFORGE_VERSION}/${MINIFORGE_NAME}-${MINIFORGE_VERSION}-Linux-$(uname -m).sh -O /tmp/miniforge.sh &&     /bin/bash /tmp/miniforge.sh -b -p ${CONDA_DIR} &&     rm /tmp/miniforge.sh &&     conda clean -tipsy &&     find ${CONDA_DIR} -follow -type f -name '*.a' -delete &&     find ${CONDA_DIR} -follow -type f -name '*.pyc' -delete &&     conda clean -afy &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> /etc/skel/.bashrc &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-08-03T06:14:27.579346494Z",
                    "created_by": "ENTRYPOINT [\"tini\" \"--\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-03T06:14:27.579346494Z",
                    "created_by": "CMD [\"/bin/bash\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7555a8182c42c7737a384cfe03a3c7329f646a3bf389c4bcd75379fc85e6c144",
                    "sha256:831a3d0d916bc29080d498a1db6cc4d6699221ec1d7d015749534762b8377459"
                ]
            }
        },
        "4.10.3-5": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CONDA_DIR=/opt/conda",
                    "LANG=C.UTF-8",
                    "LC_ALL=C.UTF-8"
                ],
                "Entrypoint": [
                    "tini",
                    "--"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2021-08-31T17:16:20.920659529Z",
            "history": [
                {
                    "created": "2021-08-31T01:20:55.806655339Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d2abf27fe2e8b0b5f4da68c018560c73e11c53098329246e3e6fe176698ef941 in / "
                },
                {
                    "created": "2021-08-31T01:20:56.191693866Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-31T17:16:20.920659529Z",
                    "created_by": "ARG MINIFORGE_NAME=Miniforge3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-31T17:16:20.920659529Z",
                    "created_by": "ARG MINIFORGE_VERSION=4.10.3-5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-31T17:16:20.920659529Z",
                    "created_by": "ARG TINI_VERSION=v0.18.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-31T17:16:20.920659529Z",
                    "created_by": "ARG TARGETPLATFORM",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-31T17:16:20.920659529Z",
                    "created_by": "ENV CONDA_DIR=/opt/conda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-31T17:16:20.920659529Z",
                    "created_by": "ENV LANG=C.UTF-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-31T17:16:20.920659529Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-31T17:16:20.920659529Z",
                    "created_by": "RUN |4 MINIFORGE_NAME=Mambaforge MINIFORGE_VERSION=4.10.3-5 TINI_VERSION=v0.18.0 TARGETPLATFORM=linux/amd64 /bin/sh -c apt-get update > /dev/null &&     apt-get install --no-install-recommends --yes         wget bzip2 ca-certificates         git > /dev/null &&     apt-get clean &&     rm -rf /var/lib/apt/lists/* &&     TARGETARCH=\"$(echo ${TARGETPLATFORM} | cut -d / -f 2)\"; case ${TARGETARCH} in \"ppc64le\") TARGETARCH=\"ppc64el\" ;; *) ;; esac ;     wget --no-hsts --quiet https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini-${TARGETARCH} -O /usr/local/bin/tini &&     chmod +x /usr/local/bin/tini &&     wget --no-hsts --quiet https://github.com/conda-forge/miniforge/releases/download/${MINIFORGE_VERSION}/${MINIFORGE_NAME}-${MINIFORGE_VERSION}-Linux-$(uname -m).sh -O /tmp/miniforge.sh &&     /bin/bash /tmp/miniforge.sh -b -p ${CONDA_DIR} &&     rm /tmp/miniforge.sh &&     conda clean -tipsy &&     find ${CONDA_DIR} -follow -type f -name '*.a' -delete &&     find ${CONDA_DIR} -follow -type f -name '*.pyc' -delete &&     conda clean -afy &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> /etc/skel/.bashrc &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-08-31T17:16:20.920659529Z",
                    "created_by": "ENTRYPOINT [\"tini\" \"--\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-31T17:16:20.920659529Z",
                    "created_by": "CMD [\"/bin/bash\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4942a1abcbfa1c325b1d7ed93d3cf6020f555be706672308a4a4a6b6d631d2e7",
                    "sha256:05dff0238062235c3a69c210f31d9fe5b601019b2cd5ad87816b10ad2214a274"
                ]
            }
        },
        "4.10.3-6": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CONDA_DIR=/opt/conda",
                    "LANG=C.UTF-8",
                    "LC_ALL=C.UTF-8"
                ],
                "Entrypoint": [
                    "tini",
                    "--"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2021-09-29T12:17:09.186265124Z",
            "history": [
                {
                    "created": "2021-08-31T01:20:55.806655339Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d2abf27fe2e8b0b5f4da68c018560c73e11c53098329246e3e6fe176698ef941 in / "
                },
                {
                    "created": "2021-08-31T01:20:56.191693866Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-29T12:17:09.186265124Z",
                    "created_by": "ARG MINIFORGE_NAME=Miniforge3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-29T12:17:09.186265124Z",
                    "created_by": "ARG MINIFORGE_VERSION=4.10.3-6",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-29T12:17:09.186265124Z",
                    "created_by": "ARG TINI_VERSION=v0.18.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-29T12:17:09.186265124Z",
                    "created_by": "ARG TARGETPLATFORM",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-29T12:17:09.186265124Z",
                    "created_by": "ENV CONDA_DIR=/opt/conda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-29T12:17:09.186265124Z",
                    "created_by": "ENV LANG=C.UTF-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-29T12:17:09.186265124Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-29T12:17:09.186265124Z",
                    "created_by": "RUN |4 MINIFORGE_NAME=Mambaforge MINIFORGE_VERSION=4.10.3-6 TINI_VERSION=v0.18.0 TARGETPLATFORM=linux/amd64 /bin/sh -c apt-get update > /dev/null &&     apt-get install --no-install-recommends --yes         wget bzip2 ca-certificates         git > /dev/null &&     apt-get clean &&     rm -rf /var/lib/apt/lists/* &&     TARGETARCH=\"$(echo ${TARGETPLATFORM} | cut -d / -f 2)\"; case ${TARGETARCH} in \"ppc64le\") TARGETARCH=\"ppc64el\" ;; *) ;; esac ;     wget --no-hsts --quiet https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini-${TARGETARCH} -O /usr/local/bin/tini &&     chmod +x /usr/local/bin/tini &&     wget --no-hsts --quiet https://github.com/conda-forge/miniforge/releases/download/${MINIFORGE_VERSION}/${MINIFORGE_NAME}-${MINIFORGE_VERSION}-Linux-$(uname -m).sh -O /tmp/miniforge.sh &&     /bin/bash /tmp/miniforge.sh -b -p ${CONDA_DIR} &&     rm /tmp/miniforge.sh &&     conda clean -tipsy &&     find ${CONDA_DIR} -follow -type f -name '*.a' -delete &&     find ${CONDA_DIR} -follow -type f -name '*.pyc' -delete &&     conda clean -afy &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> /etc/skel/.bashrc &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-09-29T12:17:09.186265124Z",
                    "created_by": "ENTRYPOINT [\"tini\" \"--\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-29T12:17:09.186265124Z",
                    "created_by": "CMD [\"/bin/bash\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4942a1abcbfa1c325b1d7ed93d3cf6020f555be706672308a4a4a6b6d631d2e7",
                    "sha256:dff50819aa08de84a5faf496daf236563aa60a418761afd849c955e8b46beab7"
                ]
            }
        },
        "4.10.3-7": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CONDA_DIR=/opt/conda",
                    "LANG=C.UTF-8",
                    "LC_ALL=C.UTF-8"
                ],
                "Entrypoint": [
                    "tini",
                    "--"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2021-10-18T18:40:07.435569147Z",
            "history": [
                {
                    "created": "2021-10-16T00:37:47.226745473Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5d68d27cc15a80653c93d3a0b262a28112d47a46326ff5fc2dfbf7fa3b9a0ce8 in / "
                },
                {
                    "created": "2021-10-16T00:37:47.578710012Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-18T18:40:07.435569147Z",
                    "created_by": "ARG MINIFORGE_NAME=Miniforge3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-18T18:40:07.435569147Z",
                    "created_by": "ARG MINIFORGE_VERSION=4.10.3-7",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-18T18:40:07.435569147Z",
                    "created_by": "ARG TINI_VERSION=v0.18.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-18T18:40:07.435569147Z",
                    "created_by": "ARG TARGETPLATFORM",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-18T18:40:07.435569147Z",
                    "created_by": "ENV CONDA_DIR=/opt/conda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-18T18:40:07.435569147Z",
                    "created_by": "ENV LANG=C.UTF-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-18T18:40:07.435569147Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-18T18:40:07.435569147Z",
                    "created_by": "RUN |4 MINIFORGE_NAME=Mambaforge MINIFORGE_VERSION=4.10.3-7 TINI_VERSION=v0.18.0 TARGETPLATFORM=linux/amd64 /bin/sh -c apt-get update > /dev/null &&     apt-get install --no-install-recommends --yes         wget bzip2 ca-certificates         git > /dev/null &&     apt-get clean &&     rm -rf /var/lib/apt/lists/* &&     TARGETARCH=\"$(echo ${TARGETPLATFORM} | cut -d / -f 2)\"; case ${TARGETARCH} in \"ppc64le\") TARGETARCH=\"ppc64el\" ;; *) ;; esac ;     wget --no-hsts --quiet https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini-${TARGETARCH} -O /usr/local/bin/tini &&     chmod +x /usr/local/bin/tini &&     wget --no-hsts --quiet https://github.com/conda-forge/miniforge/releases/download/${MINIFORGE_VERSION}/${MINIFORGE_NAME}-${MINIFORGE_VERSION}-Linux-$(uname -m).sh -O /tmp/miniforge.sh &&     /bin/bash /tmp/miniforge.sh -b -p ${CONDA_DIR} &&     rm /tmp/miniforge.sh &&     conda clean -tipsy &&     find ${CONDA_DIR} -follow -type f -name '*.a' -delete &&     find ${CONDA_DIR} -follow -type f -name '*.pyc' -delete &&     conda clean -afy &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> /etc/skel/.bashrc &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-10-18T18:40:07.435569147Z",
                    "created_by": "ENTRYPOINT [\"tini\" \"--\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-18T18:40:07.435569147Z",
                    "created_by": "CMD [\"/bin/bash\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9f54eef412758095c8079ac465d494a2872e02e90bf1fb5f12a1641c0d1bb78b",
                    "sha256:e3adfc1057265899d717681a92f136ea417956b73d7d46c9fab95ad86a7d7bcd"
                ]
            }
        },
        "4.10.3-9": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CONDA_DIR=/opt/conda",
                    "LANG=C.UTF-8",
                    "LC_ALL=C.UTF-8"
                ],
                "Entrypoint": [
                    "tini",
                    "--"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2021-11-29T12:21:16.810699527Z",
            "history": [
                {
                    "created": "2021-10-16T00:37:47.226745473Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5d68d27cc15a80653c93d3a0b262a28112d47a46326ff5fc2dfbf7fa3b9a0ce8 in / "
                },
                {
                    "created": "2021-10-16T00:37:47.578710012Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-29T12:21:16.810699527Z",
                    "created_by": "ARG MINIFORGE_NAME=Miniforge3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-29T12:21:16.810699527Z",
                    "created_by": "ARG MINIFORGE_VERSION=4.10.3-9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-29T12:21:16.810699527Z",
                    "created_by": "ARG TINI_VERSION=v0.18.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-29T12:21:16.810699527Z",
                    "created_by": "ARG TARGETPLATFORM",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-29T12:21:16.810699527Z",
                    "created_by": "ENV CONDA_DIR=/opt/conda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-29T12:21:16.810699527Z",
                    "created_by": "ENV LANG=C.UTF-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-29T12:21:16.810699527Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-29T12:21:16.810699527Z",
                    "created_by": "RUN |4 MINIFORGE_NAME=Mambaforge MINIFORGE_VERSION=4.10.3-9 TINI_VERSION=v0.18.0 TARGETPLATFORM=linux/amd64 /bin/sh -c apt-get update > /dev/null &&     apt-get install --no-install-recommends --yes         wget bzip2 ca-certificates         git > /dev/null &&     apt-get clean &&     rm -rf /var/lib/apt/lists/* &&     TARGETARCH=\"$(echo ${TARGETPLATFORM} | cut -d / -f 2)\"; case ${TARGETARCH} in \"ppc64le\") TARGETARCH=\"ppc64el\" ;; *) ;; esac ;     wget --no-hsts --quiet https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini-${TARGETARCH} -O /usr/local/bin/tini &&     chmod +x /usr/local/bin/tini &&     wget --no-hsts --quiet https://github.com/conda-forge/miniforge/releases/download/${MINIFORGE_VERSION}/${MINIFORGE_NAME}-${MINIFORGE_VERSION}-Linux-$(uname -m).sh -O /tmp/miniforge.sh &&     /bin/bash /tmp/miniforge.sh -b -p ${CONDA_DIR} &&     rm /tmp/miniforge.sh &&     conda clean -tipsy &&     find ${CONDA_DIR} -follow -type f -name '*.a' -delete &&     find ${CONDA_DIR} -follow -type f -name '*.pyc' -delete &&     conda clean -afy &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> /etc/skel/.bashrc &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-11-29T12:21:16.810699527Z",
                    "created_by": "ENTRYPOINT [\"tini\" \"--\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-29T12:21:16.810699527Z",
                    "created_by": "CMD [\"/bin/bash\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9f54eef412758095c8079ac465d494a2872e02e90bf1fb5f12a1641c0d1bb78b",
                    "sha256:6be980bd146e42b33bfb586d3a160fc7d79e0fbb81a895838bb079879c867ea9"
                ]
            }
        },
        "4.11.0-0": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CONDA_DIR=/opt/conda",
                    "LANG=C.UTF-8",
                    "LC_ALL=C.UTF-8"
                ],
                "Entrypoint": [
                    "tini",
                    "--"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2022-02-03T02:23:37.683298135Z",
            "history": [
                {
                    "created": "2022-02-02T02:14:45.667699167Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3ccf747d646089ed7fbb43c40c45dd43e86f0674115f856efada93c7e4a63624 in / "
                },
                {
                    "created": "2022-02-02T02:14:46.177066251Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-03T02:23:37.683298135Z",
                    "created_by": "ARG MINIFORGE_NAME=Miniforge3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-03T02:23:37.683298135Z",
                    "created_by": "ARG MINIFORGE_VERSION=4.11.0-0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-03T02:23:37.683298135Z",
                    "created_by": "ARG TINI_VERSION=v0.18.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-03T02:23:37.683298135Z",
                    "created_by": "ARG TARGETPLATFORM",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-03T02:23:37.683298135Z",
                    "created_by": "ENV CONDA_DIR=/opt/conda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-03T02:23:37.683298135Z",
                    "created_by": "ENV LANG=C.UTF-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-03T02:23:37.683298135Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-03T02:23:37.683298135Z",
                    "created_by": "RUN |4 MINIFORGE_NAME=Mambaforge MINIFORGE_VERSION=4.11.0-0 TINI_VERSION=v0.18.0 TARGETPLATFORM=linux/amd64 /bin/sh -c apt-get update > /dev/null &&     apt-get install --no-install-recommends --yes         wget bzip2 ca-certificates         git > /dev/null &&     apt-get clean &&     rm -rf /var/lib/apt/lists/* &&     TARGETARCH=\"$(echo ${TARGETPLATFORM} | cut -d / -f 2)\"; case ${TARGETARCH} in \"ppc64le\") TARGETARCH=\"ppc64el\" ;; *) ;; esac ;     wget --no-hsts --quiet https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini-${TARGETARCH} -O /usr/local/bin/tini &&     chmod +x /usr/local/bin/tini &&     wget --no-hsts --quiet https://github.com/conda-forge/miniforge/releases/download/${MINIFORGE_VERSION}/${MINIFORGE_NAME}-${MINIFORGE_VERSION}-Linux-$(uname -m).sh -O /tmp/miniforge.sh &&     /bin/bash /tmp/miniforge.sh -b -p ${CONDA_DIR} &&     rm /tmp/miniforge.sh &&     conda clean -tipsy &&     find ${CONDA_DIR} -follow -type f -name '*.a' -delete &&     find ${CONDA_DIR} -follow -type f -name '*.pyc' -delete &&     conda clean -afy &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> /etc/skel/.bashrc &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-03T02:23:37.683298135Z",
                    "created_by": "ENTRYPOINT [\"tini\" \"--\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-03T02:23:37.683298135Z",
                    "created_by": "CMD [\"/bin/bash\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:36ffdceb4c77bf34325fb695e64ea447f688797f2f1e3af224c29593310578d2",
                    "sha256:3f635ec842a91af621882ab1dd66d8049888deabc205c7d31895489a2157fb35"
                ]
            }
        },
        "4.11.0-2": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CONDA_DIR=/opt/conda",
                    "LANG=C.UTF-8",
                    "LC_ALL=C.UTF-8"
                ],
                "Entrypoint": [
                    "tini",
                    "--"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2022-02-11T06:34:07.969817314Z",
            "history": [
                {
                    "created": "2022-02-02T02:14:45.667699167Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3ccf747d646089ed7fbb43c40c45dd43e86f0674115f856efada93c7e4a63624 in / "
                },
                {
                    "created": "2022-02-02T02:14:46.177066251Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-11T06:34:07.969817314Z",
                    "created_by": "ARG MINIFORGE_NAME=Miniforge3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-11T06:34:07.969817314Z",
                    "created_by": "ARG MINIFORGE_VERSION=4.11.0-2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-11T06:34:07.969817314Z",
                    "created_by": "ARG TINI_VERSION=v0.18.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-11T06:34:07.969817314Z",
                    "created_by": "ARG TARGETPLATFORM",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-11T06:34:07.969817314Z",
                    "created_by": "ENV CONDA_DIR=/opt/conda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-11T06:34:07.969817314Z",
                    "created_by": "ENV LANG=C.UTF-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-11T06:34:07.969817314Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-11T06:34:07.969817314Z",
                    "created_by": "RUN |4 MINIFORGE_NAME=Mambaforge MINIFORGE_VERSION=4.11.0-2 TINI_VERSION=v0.18.0 TARGETPLATFORM=linux/amd64 /bin/sh -c apt-get update > /dev/null &&     apt-get install --no-install-recommends --yes         wget bzip2 ca-certificates         git > /dev/null &&     apt-get clean &&     rm -rf /var/lib/apt/lists/* &&     TARGETARCH=\"$(echo ${TARGETPLATFORM} | cut -d / -f 2)\"; case ${TARGETARCH} in \"ppc64le\") TARGETARCH=\"ppc64el\" ;; *) ;; esac ;     wget --no-hsts --quiet https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini-${TARGETARCH} -O /usr/local/bin/tini &&     chmod +x /usr/local/bin/tini &&     wget --no-hsts --quiet https://github.com/conda-forge/miniforge/releases/download/${MINIFORGE_VERSION}/${MINIFORGE_NAME}-${MINIFORGE_VERSION}-Linux-$(uname -m).sh -O /tmp/miniforge.sh &&     /bin/bash /tmp/miniforge.sh -b -p ${CONDA_DIR} &&     rm /tmp/miniforge.sh &&     conda clean -tipsy &&     find ${CONDA_DIR} -follow -type f -name '*.a' -delete &&     find ${CONDA_DIR} -follow -type f -name '*.pyc' -delete &&     conda clean -afy &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> /etc/skel/.bashrc &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-11T06:34:07.969817314Z",
                    "created_by": "ENTRYPOINT [\"tini\" \"--\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-11T06:34:07.969817314Z",
                    "created_by": "CMD [\"/bin/bash\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:36ffdceb4c77bf34325fb695e64ea447f688797f2f1e3af224c29593310578d2",
                    "sha256:c384c8fbc06e1f8102959298f4e3001bc7314e804d2dca235905f292c5235180"
                ]
            }
        },
        "4.11.0-4": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CONDA_DIR=/opt/conda",
                    "LANG=C.UTF-8",
                    "LC_ALL=C.UTF-8"
                ],
                "Entrypoint": [
                    "tini",
                    "--"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2022-03-18T17:07:45.790194582Z",
            "history": [
                {
                    "created": "2022-03-18T05:30:40.063546094Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:1d3b09cf9e041d608a00c2dc25cdf3c388e436c5db607a3d124f2aa0f764fc69 in / "
                },
                {
                    "created": "2022-03-18T05:30:40.61165091Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-18T17:07:45.790194582Z",
                    "created_by": "ARG MINIFORGE_NAME=Miniforge3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-18T17:07:45.790194582Z",
                    "created_by": "ARG MINIFORGE_VERSION=4.11.0-4",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-18T17:07:45.790194582Z",
                    "created_by": "ARG TINI_VERSION=v0.18.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-18T17:07:45.790194582Z",
                    "created_by": "ARG TARGETPLATFORM",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-18T17:07:45.790194582Z",
                    "created_by": "ENV CONDA_DIR=/opt/conda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-18T17:07:45.790194582Z",
                    "created_by": "ENV LANG=C.UTF-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-18T17:07:45.790194582Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-18T17:07:45.790194582Z",
                    "created_by": "RUN |4 MINIFORGE_NAME=Mambaforge MINIFORGE_VERSION=4.11.0-4 TINI_VERSION=v0.18.0 TARGETPLATFORM=linux/amd64 /bin/sh -c apt-get update > /dev/null &&     apt-get install --no-install-recommends --yes         wget bzip2 ca-certificates         git > /dev/null &&     apt-get clean &&     rm -rf /var/lib/apt/lists/* &&     TARGETARCH=\"$(echo ${TARGETPLATFORM} | cut -d / -f 2)\"; case ${TARGETARCH} in \"ppc64le\") TARGETARCH=\"ppc64el\" ;; *) ;; esac ;     wget --no-hsts --quiet https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini-${TARGETARCH} -O /usr/local/bin/tini &&     chmod +x /usr/local/bin/tini &&     wget --no-hsts --quiet https://github.com/conda-forge/miniforge/releases/download/${MINIFORGE_VERSION}/${MINIFORGE_NAME}-${MINIFORGE_VERSION}-Linux-$(uname -m).sh -O /tmp/miniforge.sh &&     /bin/bash /tmp/miniforge.sh -b -p ${CONDA_DIR} &&     rm /tmp/miniforge.sh &&     conda clean -tipsy &&     find ${CONDA_DIR} -follow -type f -name '*.a' -delete &&     find ${CONDA_DIR} -follow -type f -name '*.pyc' -delete &&     conda clean -afy &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> /etc/skel/.bashrc &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-03-18T17:07:45.790194582Z",
                    "created_by": "ENTRYPOINT [\"tini\" \"--\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-18T17:07:45.790194582Z",
                    "created_by": "CMD [\"/bin/bash\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJzb3VyY2VzIjpbeyJ0eXBlIjoiZG9ja2VyLWltYWdlIiwicmVmIjoiZG9ja2VyLmlvL2xpYnJhcnkvdWJ1bnR1OmZvY2FsLTIwMjIwMzE2IiwicGluIjoic2hhMjU2OmJlYTZkMTkxNjhiYmZkNmFmOGQ3N2MyY2MzYzU3MjExNGViNWQxMTNlNmY0MjI1NzNjOTNjYjYwNWEwZTJmZmIifV19",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:867d0767a47c392f80acb51572851923d6d3e55289828b0cd84a96ba342660c7",
                    "sha256:176849c6ed1d6e3ccf070ea0fc80e8a61e49d42ec2697aeae5ab6575a21bb0ff"
                ]
            }
        },
        "4.12.0-0": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CONDA_DIR=/opt/conda",
                    "LANG=C.UTF-8",
                    "LC_ALL=C.UTF-8"
                ],
                "Entrypoint": [
                    "tini",
                    "--"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2022-05-09T19:04:15.608783103Z",
            "history": [
                {
                    "created": "2022-04-29T23:20:59.079732432Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7009ad0ee0bbe5ed7f381792e07347e260e6896aeee0d80597808065120fa96b in / "
                },
                {
                    "created": "2022-04-29T23:20:59.430653302Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-09T19:04:15.608783103Z",
                    "created_by": "ARG MINIFORGE_NAME=Miniforge3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-09T19:04:15.608783103Z",
                    "created_by": "ARG MINIFORGE_VERSION=4.12.0-0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-09T19:04:15.608783103Z",
                    "created_by": "ARG TINI_VERSION=v0.18.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-09T19:04:15.608783103Z",
                    "created_by": "ARG TARGETPLATFORM",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-09T19:04:15.608783103Z",
                    "created_by": "ENV CONDA_DIR=/opt/conda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-09T19:04:15.608783103Z",
                    "created_by": "ENV LANG=C.UTF-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-09T19:04:15.608783103Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-09T19:04:15.608783103Z",
                    "created_by": "RUN |4 MINIFORGE_NAME=Mambaforge MINIFORGE_VERSION=4.12.0-0 TINI_VERSION=v0.18.0 TARGETPLATFORM=linux/amd64 /bin/sh -c apt-get update > /dev/null &&     apt-get install --no-install-recommends --yes         wget bzip2 ca-certificates         git > /dev/null &&     apt-get clean &&     rm -rf /var/lib/apt/lists/* &&     TARGETARCH=\"$(echo ${TARGETPLATFORM} | cut -d / -f 2)\"; case ${TARGETARCH} in \"ppc64le\") TARGETARCH=\"ppc64el\" ;; *) ;; esac ;     wget --no-hsts --quiet https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini-${TARGETARCH} -O /usr/local/bin/tini &&     chmod +x /usr/local/bin/tini &&     wget --no-hsts --quiet https://github.com/conda-forge/miniforge/releases/download/${MINIFORGE_VERSION}/${MINIFORGE_NAME}-${MINIFORGE_VERSION}-Linux-$(uname -m).sh -O /tmp/miniforge.sh &&     /bin/bash /tmp/miniforge.sh -b -p ${CONDA_DIR} &&     rm /tmp/miniforge.sh &&     conda clean -tipsy &&     find ${CONDA_DIR} -follow -type f -name '*.a' -delete &&     find ${CONDA_DIR} -follow -type f -name '*.pyc' -delete &&     conda clean -afy &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> /etc/skel/.bashrc &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-09T19:04:15.608783103Z",
                    "created_by": "ENTRYPOINT [\"tini\" \"--\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-09T19:04:15.608783103Z",
                    "created_by": "CMD [\"/bin/bash\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJzb3VyY2VzIjpbeyJ0eXBlIjoiZG9ja2VyLWltYWdlIiwicmVmIjoiZG9ja2VyLmlvL2xpYnJhcnkvdWJ1bnR1OmZvY2FsLTIwMjIwNDI2IiwicGluIjoic2hhMjU2OjQ3ZjE0NTM0YmRhMzQ0ZDlmZTZmZmQ2ZWZmYjk1ZWVmZTU3OWY0YmUwZDUwOGI3NDQ1Y2Y3N2Y2MWEwZTU3MjQifV19",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:bf8cedc62fb3ef98ad0dff2be56ca451dd3ea69abd0031ad3e0fe5d9f9e4dfff",
                    "sha256:3aee53e23b122eaf5a7a317d74c9ff0e9e2b6f4fa9531a7e20ed5dd179b6cea3"
                ]
            }
        },
        "4.12.0-2": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CONDA_DIR=/opt/conda",
                    "LANG=C.UTF-8",
                    "LC_ALL=C.UTF-8"
                ],
                "Entrypoint": [
                    "tini",
                    "--"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2022-06-12T11:02:13.092659993Z",
            "history": [
                {
                    "created": "2022-06-06T22:21:11.683921179Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:00dae10e79b05c4e1a3db053a1f85a4f38a39fe85cbbd88d74201a01a7dd59b5 in / "
                },
                {
                    "created": "2022-06-06T22:21:12.070779776Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-12T11:02:13.092659993Z",
                    "created_by": "ARG MINIFORGE_NAME=Miniforge3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-12T11:02:13.092659993Z",
                    "created_by": "ARG MINIFORGE_VERSION=4.12.0-2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-12T11:02:13.092659993Z",
                    "created_by": "ARG TINI_VERSION=v0.18.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-12T11:02:13.092659993Z",
                    "created_by": "ARG TARGETPLATFORM",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-12T11:02:13.092659993Z",
                    "created_by": "ENV CONDA_DIR=/opt/conda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-12T11:02:13.092659993Z",
                    "created_by": "ENV LANG=C.UTF-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-12T11:02:13.092659993Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-12T11:02:13.092659993Z",
                    "created_by": "RUN |4 MINIFORGE_NAME=Mambaforge MINIFORGE_VERSION=4.12.0-2 TINI_VERSION=v0.18.0 TARGETPLATFORM=linux/amd64 /bin/sh -c apt-get update > /dev/null &&     apt-get install --no-install-recommends --yes         wget bzip2 ca-certificates         git > /dev/null &&     apt-get clean &&     rm -rf /var/lib/apt/lists/* &&     TARGETARCH=\"$(echo ${TARGETPLATFORM} | cut -d / -f 2)\"; case ${TARGETARCH} in \"ppc64le\") TARGETARCH=\"ppc64el\" ;; *) ;; esac ;     wget --no-hsts --quiet https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini-${TARGETARCH} -O /usr/local/bin/tini &&     chmod +x /usr/local/bin/tini &&     wget --no-hsts --quiet https://github.com/conda-forge/miniforge/releases/download/${MINIFORGE_VERSION}/${MINIFORGE_NAME}-${MINIFORGE_VERSION}-Linux-$(uname -m).sh -O /tmp/miniforge.sh &&     /bin/bash /tmp/miniforge.sh -b -p ${CONDA_DIR} &&     rm /tmp/miniforge.sh &&     conda clean -tipsy &&     find ${CONDA_DIR} -follow -type f -name '*.a' -delete &&     find ${CONDA_DIR} -follow -type f -name '*.pyc' -delete &&     conda clean -afy &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> /etc/skel/.bashrc &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-06-12T11:02:13.092659993Z",
                    "created_by": "ENTRYPOINT [\"tini\" \"--\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-12T11:02:13.092659993Z",
                    "created_by": "CMD [\"/bin/bash\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJzb3VyY2VzIjpbeyJ0eXBlIjoiZG9ja2VyLWltYWdlIiwicmVmIjoiZG9ja2VyLmlvL2xpYnJhcnkvdWJ1bnR1OmZvY2FsLTIwMjIwNTMxIiwicGluIjoic2hhMjU2OmZkOTJjMzZkM2NiOWIxZDAyN2M0ZDJhNzJjNmJmMDEyNWRhODI0MjVmYzJjYTM3YzQxNGQ0ZjAxMDE4MGRjMTkifV19",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:af7ed92504ae4c20128a0f01048d41d467fef5c795c38d0defdb998a187ed1d4",
                    "sha256:81129c32bd60c42d6450897297cd1de345473bd21a595b426b44f17bf5257eeb"
                ]
            }
        },
        "4.13.0-1": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CONDA_DIR=/opt/conda",
                    "LANG=C.UTF-8",
                    "LC_ALL=C.UTF-8"
                ],
                "Entrypoint": [
                    "tini",
                    "--"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2022-09-03T14:09:03.922424223Z",
            "history": [
                {
                    "created": "2022-09-01T23:46:26.800519282Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ff6963f777661fb16cc12fb04a97c558bd94768a6e4ab5bd90e01f3086818853 in / "
                },
                {
                    "created": "2022-09-01T23:46:27.150780363Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-03T14:09:03.922424223Z",
                    "created_by": "ARG MINIFORGE_NAME=Miniforge3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-03T14:09:03.922424223Z",
                    "created_by": "ARG MINIFORGE_VERSION=4.13.0-1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-03T14:09:03.922424223Z",
                    "created_by": "ARG TINI_VERSION=v0.18.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-03T14:09:03.922424223Z",
                    "created_by": "ARG TARGETPLATFORM",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-03T14:09:03.922424223Z",
                    "created_by": "ENV CONDA_DIR=/opt/conda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-03T14:09:03.922424223Z",
                    "created_by": "ENV LANG=C.UTF-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-03T14:09:03.922424223Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-03T14:09:03.922424223Z",
                    "created_by": "RUN |4 MINIFORGE_NAME=Mambaforge MINIFORGE_VERSION=4.13.0-1 TINI_VERSION=v0.18.0 TARGETPLATFORM=linux/amd64 /bin/sh -c apt-get update > /dev/null &&     apt-get install --no-install-recommends --yes         wget bzip2 ca-certificates         git > /dev/null &&     apt-get clean &&     rm -rf /var/lib/apt/lists/* &&     TARGETARCH=\"$(echo ${TARGETPLATFORM} | cut -d / -f 2)\"; case ${TARGETARCH} in \"ppc64le\") TARGETARCH=\"ppc64el\" ;; *) ;; esac ;     wget --no-hsts --quiet https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini-${TARGETARCH} -O /usr/local/bin/tini &&     chmod +x /usr/local/bin/tini &&     wget --no-hsts --quiet https://github.com/conda-forge/miniforge/releases/download/${MINIFORGE_VERSION}/${MINIFORGE_NAME}-${MINIFORGE_VERSION}-Linux-$(uname -m).sh -O /tmp/miniforge.sh &&     /bin/bash /tmp/miniforge.sh -b -p ${CONDA_DIR} &&     rm /tmp/miniforge.sh &&     conda clean --tarballs --index-cache --packages --yes &&     find ${CONDA_DIR} -follow -type f -name '*.a' -delete &&     find ${CONDA_DIR} -follow -type f -name '*.pyc' -delete &&     conda clean --force-pkgs-dirs --all --yes  &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> /etc/skel/.bashrc &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-09-03T14:09:03.922424223Z",
                    "created_by": "ENTRYPOINT [\"tini\" \"--\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-03T14:09:03.922424223Z",
                    "created_by": "CMD [\"/bin/bash\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJzb3VyY2VzIjpbeyJ0eXBlIjoiZG9ja2VyLWltYWdlIiwicmVmIjoiZG9ja2VyLmlvL2xpYnJhcnkvdWJ1bnR1OmZvY2FsLTIwMjIwODI2IiwicGluIjoic2hhMjU2OjM1YWIyYmY1NzgxNGU5ZmY0OWUzNjVlZmQ1YTU5MzViNjkxNWVlZGU1YzdmODU4MWU5ZTFiODVlMGVlY2JlMTYifV19",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b40ed86654e59e1012e1716d5384910f8c3bb58274b7b00fca564a53e9897ba3",
                    "sha256:535de9500085030b9cf9b53ae3fa41fcebf230e8503b4200033c3cc6b86ca019"
                ]
            }
        },
        "4.14.0-0": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CONDA_DIR=/opt/conda",
                    "LANG=C.UTF-8",
                    "LC_ALL=C.UTF-8"
                ],
                "Entrypoint": [
                    "tini",
                    "--"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2022-10-26T07:57:30.859488339Z",
            "history": [
                {
                    "created": "2022-10-25T01:53:34.67854161Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7633003155a1059419aa1a6756fafb6e4f419d65bff7feb7c945de1e29dccb1e in / "
                },
                {
                    "created": "2022-10-25T01:53:35.02678149Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-26T07:57:30.859488339Z",
                    "created_by": "ARG MINIFORGE_NAME=Miniforge3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-26T07:57:30.859488339Z",
                    "created_by": "ARG MINIFORGE_VERSION=4.14.0-0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-26T07:57:30.859488339Z",
                    "created_by": "ARG TARGETPLATFORM",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-26T07:57:30.859488339Z",
                    "created_by": "ENV CONDA_DIR=/opt/conda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-26T07:57:30.859488339Z",
                    "created_by": "ENV LANG=C.UTF-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-26T07:57:30.859488339Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-26T07:57:30.859488339Z",
                    "created_by": "RUN |3 MINIFORGE_NAME=Mambaforge MINIFORGE_VERSION=4.14.0-0 TARGETPLATFORM=linux/amd64 /bin/sh -c apt-get update > /dev/null &&     apt-get install --no-install-recommends --yes         wget bzip2 ca-certificates         git         tini         > /dev/null &&     apt-get clean &&     rm -rf /var/lib/apt/lists/* &&     wget --no-hsts --quiet https://github.com/conda-forge/miniforge/releases/download/${MINIFORGE_VERSION}/${MINIFORGE_NAME}-${MINIFORGE_VERSION}-Linux-$(uname -m).sh -O /tmp/miniforge.sh &&     /bin/bash /tmp/miniforge.sh -b -p ${CONDA_DIR} &&     rm /tmp/miniforge.sh &&     conda clean --tarballs --index-cache --packages --yes &&     find ${CONDA_DIR} -follow -type f -name '*.a' -delete &&     find ${CONDA_DIR} -follow -type f -name '*.pyc' -delete &&     conda clean --force-pkgs-dirs --all --yes  &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> /etc/skel/.bashrc &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-10-26T07:57:30.859488339Z",
                    "created_by": "ENTRYPOINT [\"tini\" \"--\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-26T07:57:30.859488339Z",
                    "created_by": "CMD [\"/bin/bash\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJzb3VyY2VzIjpbeyJ0eXBlIjoiZG9ja2VyLWltYWdlIiwicmVmIjoiZG9ja2VyLmlvL2xpYnJhcnkvdWJ1bnR1OmZvY2FsLTIwMjIxMDE5IiwicGluIjoic2hhMjU2OjQ1MGUwNjY1ODhmNDJlYmUxNTUxZjNiMWE1MzUwMzRiNmFhNDZjZDkzNmZlN2YyYzZiMGQ3Mjk5N2VjNjFkYmQifV19",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f4462d5b2da2985f37409c9b257afd2b9fb82356ce4e43e804ee34214242e34a",
                    "sha256:a5e5cbb2f293aaa3dcffb34f53aa789bbea226b15cd4314b54b82de48caf5e60"
                ]
            }
        },
        "4.9.2-5": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CONDA_DIR=/opt/conda",
                    "LANG=C.UTF-8",
                    "LC_ALL=C.UTF-8"
                ],
                "Entrypoint": [
                    "tini",
                    "--"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2021-03-31T10:32:57.007965216Z",
            "history": [
                {
                    "created": "2021-01-21T03:38:20.003680095Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2a90223d9f00d31e31eff6b207c57af4b7d27276195b94bec991457a6998180c in / "
                },
                {
                    "created": "2021-01-21T03:38:21.115557643Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-01-21T03:38:22.166838465Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-21T03:38:23.18135616Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-01-21T03:38:23.37559427Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T10:32:57.007965216Z",
                    "created_by": "ARG MINIFORGE_NAME=Miniforge3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T10:32:57.007965216Z",
                    "created_by": "ARG MINIFORGE_VERSION=4.9.2-5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T10:32:57.007965216Z",
                    "created_by": "ARG TINI_VERSION=v0.18.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T10:32:57.007965216Z",
                    "created_by": "ARG TARGETPLATFORM",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T10:32:57.007965216Z",
                    "created_by": "ENV CONDA_DIR=/opt/conda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T10:32:57.007965216Z",
                    "created_by": "ENV LANG=C.UTF-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T10:32:57.007965216Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T10:32:57.007965216Z",
                    "created_by": "RUN |4 MINIFORGE_NAME=Mambaforge MINIFORGE_VERSION=4.9.2-5 TINI_VERSION=v0.18.0 TARGETPLATFORM=linux/amd64 /bin/sh -c apt-get update > /dev/null &&     apt-get install --no-install-recommends --yes         wget bzip2 ca-certificates         git > /dev/null &&     apt-get clean &&     rm -rf /var/lib/apt/lists/* &&     TARGETARCH=\"$(echo ${TARGETPLATFORM} | cut -d / -f 2)\"; case ${TARGETARCH} in \"ppc64le\") TARGETARCH=\"ppc64el\" ;; *) ;; esac ;     wget --no-hsts --quiet https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini-${TARGETARCH} -O /usr/local/bin/tini &&     chmod +x /usr/local/bin/tini &&     wget --no-hsts --quiet https://github.com/conda-forge/miniforge/releases/download/${MINIFORGE_VERSION}/${MINIFORGE_NAME}-${MINIFORGE_VERSION}-Linux-$(uname -m).sh -O /tmp/miniforge.sh &&     /bin/bash /tmp/miniforge.sh -b -p ${CONDA_DIR} &&     rm /tmp/miniforge.sh &&     conda clean -tipsy &&     find ${CONDA_DIR} -follow -type f -name '*.a' -delete &&     find ${CONDA_DIR} -follow -type f -name '*.pyc' -delete &&     conda clean -afy &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> /etc/skel/.bashrc &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-03-31T10:32:57.007965216Z",
                    "created_by": "ENTRYPOINT [\"tini\" \"--\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T10:32:57.007965216Z",
                    "created_by": "CMD [\"/bin/bash\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9f32931c9d28f10104a8eb1330954ba90e76d92b02c5256521ba864feec14009",
                    "sha256:dbf2c0f42a39b60301f6d3936f7f8adb59bb97d31ec11cc4a049ce81155fef89",
                    "sha256:02473afd360bd5391fa51b6e7849ce88732ae29f50f3630c3551f528eba66d1e",
                    "sha256:4037f5fd11474a4cef4841db0b73afbf515e3febb6d253e18a3a6b92969c4de5"
                ]
            }
        },
        "4.9.2-7": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CONDA_DIR=/opt/conda",
                    "LANG=C.UTF-8",
                    "LC_ALL=C.UTF-8"
                ],
                "Entrypoint": [
                    "tini",
                    "--"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2021-03-31T14:09:51.574499047Z",
            "history": [
                {
                    "created": "2021-01-21T03:38:20.003680095Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2a90223d9f00d31e31eff6b207c57af4b7d27276195b94bec991457a6998180c in / "
                },
                {
                    "created": "2021-01-21T03:38:21.115557643Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-01-21T03:38:22.166838465Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-21T03:38:23.18135616Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-01-21T03:38:23.37559427Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T14:09:51.574499047Z",
                    "created_by": "ARG MINIFORGE_NAME=Miniforge3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T14:09:51.574499047Z",
                    "created_by": "ARG MINIFORGE_VERSION=4.9.2-7",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T14:09:51.574499047Z",
                    "created_by": "ARG TINI_VERSION=v0.18.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T14:09:51.574499047Z",
                    "created_by": "ARG TARGETPLATFORM",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T14:09:51.574499047Z",
                    "created_by": "ENV CONDA_DIR=/opt/conda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T14:09:51.574499047Z",
                    "created_by": "ENV LANG=C.UTF-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T14:09:51.574499047Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T14:09:51.574499047Z",
                    "created_by": "RUN |4 MINIFORGE_NAME=Mambaforge MINIFORGE_VERSION=4.9.2-7 TINI_VERSION=v0.18.0 TARGETPLATFORM=linux/amd64 /bin/sh -c apt-get update > /dev/null &&     apt-get install --no-install-recommends --yes         wget bzip2 ca-certificates         git > /dev/null &&     apt-get clean &&     rm -rf /var/lib/apt/lists/* &&     TARGETARCH=\"$(echo ${TARGETPLATFORM} | cut -d / -f 2)\"; case ${TARGETARCH} in \"ppc64le\") TARGETARCH=\"ppc64el\" ;; *) ;; esac ;     wget --no-hsts --quiet https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini-${TARGETARCH} -O /usr/local/bin/tini &&     chmod +x /usr/local/bin/tini &&     wget --no-hsts --quiet https://github.com/conda-forge/miniforge/releases/download/${MINIFORGE_VERSION}/${MINIFORGE_NAME}-${MINIFORGE_VERSION}-Linux-$(uname -m).sh -O /tmp/miniforge.sh &&     /bin/bash /tmp/miniforge.sh -b -p ${CONDA_DIR} &&     rm /tmp/miniforge.sh &&     conda clean -tipsy &&     find ${CONDA_DIR} -follow -type f -name '*.a' -delete &&     find ${CONDA_DIR} -follow -type f -name '*.pyc' -delete &&     conda clean -afy &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> /etc/skel/.bashrc &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-03-31T14:09:51.574499047Z",
                    "created_by": "ENTRYPOINT [\"tini\" \"--\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T14:09:51.574499047Z",
                    "created_by": "CMD [\"/bin/bash\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9f32931c9d28f10104a8eb1330954ba90e76d92b02c5256521ba864feec14009",
                    "sha256:dbf2c0f42a39b60301f6d3936f7f8adb59bb97d31ec11cc4a049ce81155fef89",
                    "sha256:02473afd360bd5391fa51b6e7849ce88732ae29f50f3630c3551f528eba66d1e",
                    "sha256:b4e0b64104ba794239bb7fac2cff68e70e3f8f0e351f34b7bb0916c3d7d901c7"
                ]
            }
        },
        "latest": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CONDA_DIR=/opt/conda",
                    "LANG=C.UTF-8",
                    "LC_ALL=C.UTF-8"
                ],
                "Entrypoint": [
                    "tini",
                    "--"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Labels": {
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "20.04"
                },
                "ArgsEscaped": true
            },
            "created": "2024-05-21T14:15:45.964880778Z",
            "history": [
                {
                    "created": "2024-04-27T14:03:39.495375794Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:03:39.518457955Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:03:39.540231445Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:03:39.564669578Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=20.04",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-27T14:03:41.34852592Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e5742fae181dc02a419e48d202fdd6a561b79ccbe7d3415e15e3d2c12e444a2a in / "
                },
                {
                    "created": "2024-04-27T14:03:41.56764926Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-21T14:15:45.964880778Z",
                    "created_by": "ARG MINIFORGE_NAME=Miniforge3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-21T14:15:45.964880778Z",
                    "created_by": "ARG MINIFORGE_VERSION=24.3.0-0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-21T14:15:45.964880778Z",
                    "created_by": "ARG TARGETPLATFORM",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-21T14:15:45.964880778Z",
                    "created_by": "ENV CONDA_DIR=/opt/conda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-21T14:15:45.964880778Z",
                    "created_by": "ENV LANG=C.UTF-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-21T14:15:45.964880778Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-21T14:15:45.964880778Z",
                    "created_by": "RUN |3 MINIFORGE_NAME=Mambaforge MINIFORGE_VERSION=24.3.0-0 TARGETPLATFORM=linux/amd64 /bin/sh -c apt-get update > /dev/null &&     apt-get install --no-install-recommends --yes         wget bzip2 ca-certificates         git         tini         > /dev/null &&     apt-get clean &&     rm -rf /var/lib/apt/lists/* &&     wget --no-hsts --quiet https://github.com/conda-forge/miniforge/releases/download/${MINIFORGE_VERSION}/${MINIFORGE_NAME}-${MINIFORGE_VERSION}-Linux-$(uname -m).sh -O /tmp/miniforge.sh &&     /bin/bash /tmp/miniforge.sh -b -p ${CONDA_DIR} &&     rm /tmp/miniforge.sh &&     conda clean --tarballs --index-cache --packages --yes &&     find ${CONDA_DIR} -follow -type f -name '*.a' -delete &&     find ${CONDA_DIR} -follow -type f -name '*.pyc' -delete &&     conda clean --force-pkgs-dirs --all --yes  &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> /etc/skel/.bashrc &&     echo \". ${CONDA_DIR}/etc/profile.d/conda.sh && conda activate base\" >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-21T14:15:45.964880778Z",
                    "created_by": "ENTRYPOINT [\"tini\" \"--\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-21T14:15:45.964880778Z",
                    "created_by": "CMD [\"/bin/bash\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4a1518ebc26e2e4c26f1c5d78a36d41d87d2fd4a7e4ad37c5f9033f2eb52f26b",
                    "sha256:da4f6b3d60aa198b006a844ff052e0a59c81288b3ffa9783ef81ad10d92ce23d"
                ]
            }
        }
    }
}