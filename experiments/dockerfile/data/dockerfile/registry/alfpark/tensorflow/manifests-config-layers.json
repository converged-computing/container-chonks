{
    "manifests": {
        "0.10.0-cpu": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9613,
                "digest": "sha256:04f2e2d40e9e77d193227ee7a332c7b5e292e8ee043cd17fa4e1c971ccc4af23"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 65699277,
                    "digest": "sha256:6c953ac5d795ea26fd59dc5bdf4d335625c69f8bcfbdd8307d6009c2e61779c9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 71477,
                    "digest": "sha256:3eed5ff20a90a40b0cb7909e79128740f1320d29bec2ae9e025a1d375555db15"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 360,
                    "digest": "sha256:f8419ea7c1b5d667cf26c2c5ec0bfb3502872e5afc6aa85caf2b8c7650bdc8d9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 681,
                    "digest": "sha256:51900bc9e720db035e12f6c425dd9c06928a9d1eb565c86572b3aab93d24cfca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 111978737,
                    "digest": "sha256:d117131919f2c11904b5e129762492ca7a159d48f909adb0e62d06168628f7a7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3413785,
                    "digest": "sha256:95473e60e60e98935ded2eef7d5e87ba872ecf3aa9191c75dd23a09fcea74529"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 33644256,
                    "digest": "sha256:eff071fe422fb9648277fbe7ab3dbbe307a3c504ff30121bf05818dca4a23c38"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 35788001,
                    "digest": "sha256:65d68f432174740c1633b66a4bd02be54861a8d43d7d539b5eeb45cdb1920395"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 36358978,
                    "digest": "sha256:ebbfb0d25a926237fc98764c50a6f85c850bd0026e9992d3fb8966bd401d16e7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 740,
                    "digest": "sha256:113d81906609a3ca9086334cf52e40d65197605fc3fff9d5ffdd4ba920fe08e3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 176178,
                    "digest": "sha256:8805d60eadbd5a9e10ff21fd7709b24f47fcccc0e1e704df800f7bed71f52393"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 529,
                    "digest": "sha256:40c23801f197220a5c36c41989e08d97947932a98278448ab75000c5cde8352a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 228,
                    "digest": "sha256:aa3a936de16207af9490461a1cf6feb1b6215c072746a288ab1656f7901246bb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3156373,
                    "digest": "sha256:fcaf38b6c7e2125193e06bb2760e6a4b194bd5e66dc5c83bd73fee0d75ae3e1c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4561,
                    "digest": "sha256:8e2b6d07ef26d8d9857a82e0787cbbf3a509e8ff475fa3163c48c6dcd2a641dd"
                }
            ]
        },
        "0.10.0-gpu": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 17908,
                "digest": "sha256:4d5310e230b01da8bb0e2bf29643ff991d7047191812ce59939d680dd965a7c4"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 65699939,
                    "digest": "sha256:064f9af025390d8da3dfab763fac261dd67f8807343613239d66304cda8f5d16"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 71563,
                    "digest": "sha256:390957b2f4f0cd72b8577795cd8076cdc21d45c7823bbb5c895a494ae6038267"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 362,
                    "digest": "sha256:cee0974db2b868f0408f7e3eaba93c11fce3a38f612674477653b04c10369da0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 680,
                    "digest": "sha256:c8144262002cd241e607d7d3ecda450ce4ae8edf7dac8dbf46897d498ac667d8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12952,
                    "digest": "sha256:e624b70487a7e10a0705388af6f3f7917a9b0614890cdd043e11cd761e09a4cb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 246001818,
                    "digest": "sha256:9f90534140ee5cac41c020274185a2eb37c531d96b35926522c58602c8de5d2c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4548,
                    "digest": "sha256:28941e3517689457a44a8a13c9a1d15961a3c6741757d0ca718998634dea9ef0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 181,
                    "digest": "sha256:c8c9d72224eca5c214064bb9ac2f82e439a75c4c28df7eb32e79783d8c11fc85"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 349282306,
                    "digest": "sha256:3ad11479dbad5ed645ac04fee4030e6668dfa05cc28a3ca71ed8dabd720f4b84"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 36943,
                    "digest": "sha256:bdb483854d423f477aee8dcae3b7ec277e9cb4a9a25656a4e9c2b7d5a6fb783e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 250,
                    "digest": "sha256:9e9d6ac901ba9d1a448843f5f377cf96e1bd4064c917ffdccc9ba1da36b03ed3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 80518262,
                    "digest": "sha256:88ef71d8c1b5339a928625c1164c6c801644952c75f521267a97e210920cae8f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 64610431,
                    "digest": "sha256:47045c70fa21a2d75e5eda6a0c38180b83b1b656e989c3d73cdf152a8e974cf0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3414071,
                    "digest": "sha256:5eb3e2a452c19374a97e4199518f9a2fe60e081ad49003a7e9c126bf3beb037f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 33688575,
                    "digest": "sha256:b5c5c1882230fac8db0ce4f87670a9b2bc0cc618d5fa0ea858bbd8188b55a8df"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 100766773,
                    "digest": "sha256:b9af3769bf7e7b6b4be978ce640d88dfaf08b09284aeb15af0da05427bd12019"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 101776943,
                    "digest": "sha256:d1e152ae4c9003bfe85dd0b2498abcae5ab71cbcad0abeb4b1e50887a8dacd40"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 741,
                    "digest": "sha256:7e74c6633ec2f63a8d839dac114a224791e921b4f35841c354055ef4602e3df0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 176176,
                    "digest": "sha256:31368df632b6185790b42e0a5041e55921c683bfe7d58a5ba210f0ebc65a251a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 527,
                    "digest": "sha256:b5dfebfe6b99325341f90dfe2ead5cb2e265334c785b4e2c475db7bc0a662980"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 228,
                    "digest": "sha256:251599557c59bfa3b145602aa8718575cdaa37744872891103ac902cdb753029"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3165882,
                    "digest": "sha256:41a7d99ebe2ac5e496cf10db037b41ddc58645d4b59ae336c6ce53cbc4603de8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4639,
                    "digest": "sha256:5ad824042e8a1f359cc5c36d09f0cfadcc5efda8df0b445f163c4b4a6a766d26"
                }
            ]
        },
        "0.11.0-cpu": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9626,
                "digest": "sha256:f224d3bb43da88fb18ad5f367f2cedda5c88bc5b3b4f5930a5aff58b021e6403"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 65699277,
                    "digest": "sha256:6c953ac5d795ea26fd59dc5bdf4d335625c69f8bcfbdd8307d6009c2e61779c9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 71477,
                    "digest": "sha256:3eed5ff20a90a40b0cb7909e79128740f1320d29bec2ae9e025a1d375555db15"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 360,
                    "digest": "sha256:f8419ea7c1b5d667cf26c2c5ec0bfb3502872e5afc6aa85caf2b8c7650bdc8d9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 681,
                    "digest": "sha256:51900bc9e720db035e12f6c425dd9c06928a9d1eb565c86572b3aab93d24cfca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 95424561,
                    "digest": "sha256:ebb77ce6e1c6769c1849194c1319dc6978e19575c76fd1fa942a623b6f2996a4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4845336,
                    "digest": "sha256:c145c1f339f57690f80bd64e86caa3b00e0635a6a383bc8be7726a3baf22a0d2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 92179702,
                    "digest": "sha256:9528c5352798ec3a134be13b66bc4dc71e7cdd029e268ae3cdfeb0719a4c8b8b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 38994762,
                    "digest": "sha256:c1f8f4c880d49d70a8280860e3bc5ee559a95d4e1dc44f9128b638eb2240324c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40157520,
                    "digest": "sha256:f5d83de9c6786bff4160679ed4bde332970367225ede609944bbe686edb1c25b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 757,
                    "digest": "sha256:d819f1ec59a06c001b37e66dd1639c591e606029ea7584fac704ff741cda249b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 264000,
                    "digest": "sha256:bfc1d5e3de1cf70353afb2b81fbbeab16bad961352b86f60901bc1da1396f2b4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 527,
                    "digest": "sha256:182b64c1f020de1cb4b2783b3a13fbeb07ec4087bc911352d0f5ef40c8eec8cf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 229,
                    "digest": "sha256:a2d6f1a07d2c993335f39f49a6234dc1f8990b2e9905f0585eca75d2c9ed4784"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3143723,
                    "digest": "sha256:b07619ac91441160703e468fa93b5121cdafbb98f1ca4696ccd00755029b9888"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4569,
                    "digest": "sha256:bb1d333b63ed6fdb2b108cc915bfeae8df96c22bb7f4e1783d21b31fef623dc5"
                }
            ]
        },
        "0.11.0-gpu": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 19459,
                "digest": "sha256:5c84edc82fa6757b3ef2735c3cfceb7ca5b97bf9c583f3bc04134248dbb23145"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 65702665,
                    "digest": "sha256:ba76e97bb96ceeb4c4d76ecd4940c368f968e8df3637d8ff4fd0e0e57c8896c5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 71557,
                    "digest": "sha256:4d6181e6b42361332273bca37f0d1b983e3b45375b57db2c2a28fad62cc78bed"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 362,
                    "digest": "sha256:4854897be9ac6e924eab65553a8f81ed556f855c184f379dfb584742f0f3096b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 681,
                    "digest": "sha256:4458f3097eefd9eae329e0c03584452127ad692ce35aa75fb64dc4308ace7e76"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 163,
                    "digest": "sha256:9989a8de1a9ecee5a5a075078dff0a2ffa6426039b4d03949f29afcf80f85906"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 13194,
                    "digest": "sha256:97b9fecc40a90a21029e1573ba908696e3c84d7b00ad572a7f694685e39163ee"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 421437390,
                    "digest": "sha256:49174734b90f6ebfd43c55ce02efe85ff6edbfc0792996a94217889fe12a6d1e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5180,
                    "digest": "sha256:380d7a401db46a6985c94b784a545ca283f1939347bfa40fec9a52eca60b2343"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 181,
                    "digest": "sha256:214581faccc52e88b68262d5c46872bd9459783483e0469d825990c72167e616"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 442253034,
                    "digest": "sha256:e767bb63d75cb31fd8fa6baf0c39fd779cc41e07e211983375712f7832ba5a63"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4510201,
                    "digest": "sha256:1558afb290dbc3592f5d1b5c8fa7838804255ed55f174da5aaeb530960e65e04"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102076354,
                    "digest": "sha256:b2ab614aa41eb92c1832d0cb51db862521c7eb2ed83fba99b40154f699072374"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 130591851,
                    "digest": "sha256:674569a09ad225e9257469d51e5a5e55c6a3c68e416be0b8c3d03225821d04c2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 110056267,
                    "digest": "sha256:24239105b14345a237d01fdb46e9aee376736bf2b25cd7cb8ece3f66af4d1e24"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 759,
                    "digest": "sha256:6233641723201310aced63e7f46056669a0c47e8083534f1c13e1aa8ad3cff4b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 527,
                    "digest": "sha256:17d504c4c38efcae5437f7c13227456e25274e55f96bc1c79f9520aba69751cd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 94636874,
                    "digest": "sha256:b36f049258a22e28903e26fb447d0fc6a9aa65f434511cc6d512d7752ad992c4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 182801547,
                    "digest": "sha256:ff271ab68104c1393d6f45d2a9e9e924f944162d49656827ed5852eafd50a7be"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 97,
                    "digest": "sha256:efd05a34c2954e039909d15e87243b373a5c6bf04356ce0d33a177cf184d2831"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 232,
                    "digest": "sha256:2348cadd669160f99d67e670ff26614cd243533bc44e51a3060f897a764ebe6d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3258098,
                    "digest": "sha256:bed6ea4bc96d9b78d6ed3efbd7cdc19193f51055bed25ee4f2486946cd8ed33d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4644,
                    "digest": "sha256:6fe999219e53b02639909e8c28d2e687c673fabc52f930afeb9b0f1685147dd4"
                }
            ]
        },
        "0.11.0-gpu-base": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 17209,
                "digest": "sha256:e8ad6528e6327e83bd76e3c9dbf7cb6f3ec0e91982cbca420bc169d9cd45c6ef"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 65702665,
                    "digest": "sha256:ba76e97bb96ceeb4c4d76ecd4940c368f968e8df3637d8ff4fd0e0e57c8896c5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 71557,
                    "digest": "sha256:4d6181e6b42361332273bca37f0d1b983e3b45375b57db2c2a28fad62cc78bed"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 362,
                    "digest": "sha256:4854897be9ac6e924eab65553a8f81ed556f855c184f379dfb584742f0f3096b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 681,
                    "digest": "sha256:4458f3097eefd9eae329e0c03584452127ad692ce35aa75fb64dc4308ace7e76"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 163,
                    "digest": "sha256:9989a8de1a9ecee5a5a075078dff0a2ffa6426039b4d03949f29afcf80f85906"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 13194,
                    "digest": "sha256:97b9fecc40a90a21029e1573ba908696e3c84d7b00ad572a7f694685e39163ee"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 421437390,
                    "digest": "sha256:49174734b90f6ebfd43c55ce02efe85ff6edbfc0792996a94217889fe12a6d1e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5180,
                    "digest": "sha256:380d7a401db46a6985c94b784a545ca283f1939347bfa40fec9a52eca60b2343"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 181,
                    "digest": "sha256:214581faccc52e88b68262d5c46872bd9459783483e0469d825990c72167e616"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 442253034,
                    "digest": "sha256:e767bb63d75cb31fd8fa6baf0c39fd779cc41e07e211983375712f7832ba5a63"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4510201,
                    "digest": "sha256:1558afb290dbc3592f5d1b5c8fa7838804255ed55f174da5aaeb530960e65e04"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102076354,
                    "digest": "sha256:b2ab614aa41eb92c1832d0cb51db862521c7eb2ed83fba99b40154f699072374"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 130591851,
                    "digest": "sha256:674569a09ad225e9257469d51e5a5e55c6a3c68e416be0b8c3d03225821d04c2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 110056267,
                    "digest": "sha256:24239105b14345a237d01fdb46e9aee376736bf2b25cd7cb8ece3f66af4d1e24"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 759,
                    "digest": "sha256:6233641723201310aced63e7f46056669a0c47e8083534f1c13e1aa8ad3cff4b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 527,
                    "digest": "sha256:17d504c4c38efcae5437f7c13227456e25274e55f96bc1c79f9520aba69751cd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 94636874,
                    "digest": "sha256:b36f049258a22e28903e26fb447d0fc6a9aa65f434511cc6d512d7752ad992c4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 182801547,
                    "digest": "sha256:ff271ab68104c1393d6f45d2a9e9e924f944162d49656827ed5852eafd50a7be"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 97,
                    "digest": "sha256:efd05a34c2954e039909d15e87243b373a5c6bf04356ce0d33a177cf184d2831"
                }
            ]
        },
        "1.0.0-cpu": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9664,
                "digest": "sha256:ac9ea1bb88da11f42d51a4749d301b98132c4cd2d61ae6ce212df5e018581bd7"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 67118594,
                    "digest": "sha256:e9c78118c413ddc65f49c3025a1852fd53a6d25c2428f3fbe7152079ad551ee8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 72619,
                    "digest": "sha256:bd9fb224f209c9d45c3097cd4777acf6ac0863ed2c99f05a1874b0300a0de780"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 362,
                    "digest": "sha256:7987fdea00fa8076fa037c14f0a7ad88216cec43270fee1c8d695ea862c789ac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 673,
                    "digest": "sha256:81bb0895464777aad742d99cf791f6e1307ae063e8464e58de3c38251fd16ef7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 161,
                    "digest": "sha256:e2bb6d79d0b0dafbeda0cf535bd63a8bc4cc99311d1d4df63d028013b99ee8aa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 96671144,
                    "digest": "sha256:9830006ff959dc6518078a5db25d87a504f7696831fad055556e8945c82c5242"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4937153,
                    "digest": "sha256:260710ff9f4a31597c315a98f9007b5d8452c54b8039697671215865dd28f9f1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 115517748,
                    "digest": "sha256:9a9c92f6f823f78bf8530754ffc07c5e5fc042435556a5bce77b2ff51f341564"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50090253,
                    "digest": "sha256:d4b439c797bba273c9499ef57f106b80caa6599172bf79f436082e3db769f03f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 763,
                    "digest": "sha256:98214e0a172809e9043bfddab534bcceab9021b8c6d8ef665a79199cb59702b0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 226365,
                    "digest": "sha256:cd8bf3f99a52d754cc9ce37ee61a3a4d2730d8903f9b9c582bc573f615ccb0c2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 528,
                    "digest": "sha256:2173955c36c4bc5f812617adbe3f6dfebd8513a19ba71556169e10b80c9509ab"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 230,
                    "digest": "sha256:b0586f5c92228e2ed59a36bc0b42f1f9e596a9fe205e5430e2e967a75cf63a19"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3176303,
                    "digest": "sha256:96f532d7e5b64aa868fcfc1d1f561e84f0fbd692a1db91b9ccf7894dd6385d14"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4573,
                    "digest": "sha256:1a654769522b399d2896f72e1c533c1627835df438a4e50e1ebbe6f247936dd3"
                }
            ]
        },
        "1.0.0-gpu": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 20432,
                "digest": "sha256:47d6670f34a8718c04d7be4c7bda9263995589c0f3dbbc63f29dcb27cdaf3c14"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50308178,
                    "digest": "sha256:8aec416115fdbd74102c9090bcfe03bfe8926876642d8846c8b917959ea9b552"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 820,
                    "digest": "sha256:695f074e24e392178d364af5ea2405dda7ab0035284001b49939afac5106c187"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 517,
                    "digest": "sha256:946d6c48c2a7d60cb2f4d1c4d3a8131086b412d11a9def59d0bcc0892428dde9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 680,
                    "digest": "sha256:bc7277e579f03a13476b4d2dc6607124f7e67341dbd58f9d1cd6555bec086c04"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 161,
                    "digest": "sha256:2508cbcde94b50cd53356e8730bb508ddb43c76664a35dc29e69bb8b56a0f531"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 13174,
                    "digest": "sha256:28e379776cbb3e9730e97c96314616a851c6e3be20c238817f18e09d2e143305"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 421460272,
                    "digest": "sha256:88096e148c8eb03e973f86c11acbf1fd1b2ce9236d168823cf41469e8545d70a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4258,
                    "digest": "sha256:b97016fdf1398d231cd520abc9134ef028074bc91f9d210fe14b94ec23179751"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 184,
                    "digest": "sha256:ea085ec57d435ec1e0ffbad91b66e1d6978a1be2062986714e1dbf04196beae0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 456095630,
                    "digest": "sha256:761363b510bb8c13f58c243081f4fa68e85c710a8ba04aa5c0e87a1e5fb06c15"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4180050,
                    "digest": "sha256:2cc000ffaeee055f3788065da8fd3db9d4c6e5a498a793fd763c40b3e9ee0366"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 104816656,
                    "digest": "sha256:406cd85d2cadc6ad030dd07457209cef2989b5a8c54bbb8d6c78a45ab5e405f5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 76070691,
                    "digest": "sha256:afd2b9589459255a1eadc427ed34db7fb5872210bab38afd4a6ad9592f83df2f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4934952,
                    "digest": "sha256:72efd457395fd1c1821310e2893d24456d25496a71c3694ebec4b613162ba057"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 109568077,
                    "digest": "sha256:8a9cddfbf54dc99b7d2953e04c61619e2f4622e697cdff4bc721f9189473a55f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 766,
                    "digest": "sha256:373f3d490fb3a570987661a13ee72f5e1991b84add078a8a7ade7d930d308542"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 530,
                    "digest": "sha256:d9d3cf7a6aadad1963ea7c7d27734c805eb443388af0a0ec6f52e53a8c335428"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 105987662,
                    "digest": "sha256:daab910f2205afc3c9b02948bcbeb760fbf9846712122aa92a998f5e28b506f2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 148,
                    "digest": "sha256:2765dc19e4d1601a13dcb6e280cf9cc87f5ce4f152b153ec553ec64ee874743b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 190,
                    "digest": "sha256:0ba8e137125f9fd6396ef73f5b98c4dade715b80a3c9f3502848c6ca81ff3027"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 118632863,
                    "digest": "sha256:5683cd5dbb66ae36e6d4cf4191f3385b7169704017ff793ffcf7ab4cbcfe9ae2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102425021,
                    "digest": "sha256:0f681ead35e5b3b3ffa1c8ad5de0fd27f8b1cfd8256f6a551a471dab455fd422"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 114829684,
                    "digest": "sha256:ed25a57d20d847b8940832626e67306c5a9337e5dae1a67e4c53ac400b996fc7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 229,
                    "digest": "sha256:42863d4927d963ab1d1debbb936e8c01832b6a0229dddaba262e886434a04d82"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3329889,
                    "digest": "sha256:3cee1a148fdc51324e93fd169b0baae98612c4357aad46924b54354767d1f0e1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4691,
                    "digest": "sha256:01110b54051d9b4ebf6a52c3e235ec54378d07e01a0e1b4a13a20d5d3eb78cb3"
                }
            ]
        },
        "1.0.0-gpu-base": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 18119,
                "digest": "sha256:5cd63dea1ac227807cde7629dd5d8ba85911aec9f45e95412367e27917b37597"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50308178,
                    "digest": "sha256:8aec416115fdbd74102c9090bcfe03bfe8926876642d8846c8b917959ea9b552"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 820,
                    "digest": "sha256:695f074e24e392178d364af5ea2405dda7ab0035284001b49939afac5106c187"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 517,
                    "digest": "sha256:946d6c48c2a7d60cb2f4d1c4d3a8131086b412d11a9def59d0bcc0892428dde9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 680,
                    "digest": "sha256:bc7277e579f03a13476b4d2dc6607124f7e67341dbd58f9d1cd6555bec086c04"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 161,
                    "digest": "sha256:2508cbcde94b50cd53356e8730bb508ddb43c76664a35dc29e69bb8b56a0f531"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 13174,
                    "digest": "sha256:28e379776cbb3e9730e97c96314616a851c6e3be20c238817f18e09d2e143305"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 421460272,
                    "digest": "sha256:88096e148c8eb03e973f86c11acbf1fd1b2ce9236d168823cf41469e8545d70a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4258,
                    "digest": "sha256:b97016fdf1398d231cd520abc9134ef028074bc91f9d210fe14b94ec23179751"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 184,
                    "digest": "sha256:ea085ec57d435ec1e0ffbad91b66e1d6978a1be2062986714e1dbf04196beae0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 456095630,
                    "digest": "sha256:761363b510bb8c13f58c243081f4fa68e85c710a8ba04aa5c0e87a1e5fb06c15"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4180050,
                    "digest": "sha256:2cc000ffaeee055f3788065da8fd3db9d4c6e5a498a793fd763c40b3e9ee0366"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 104816656,
                    "digest": "sha256:406cd85d2cadc6ad030dd07457209cef2989b5a8c54bbb8d6c78a45ab5e405f5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 76070691,
                    "digest": "sha256:afd2b9589459255a1eadc427ed34db7fb5872210bab38afd4a6ad9592f83df2f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4934952,
                    "digest": "sha256:72efd457395fd1c1821310e2893d24456d25496a71c3694ebec4b613162ba057"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 109568077,
                    "digest": "sha256:8a9cddfbf54dc99b7d2953e04c61619e2f4622e697cdff4bc721f9189473a55f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 766,
                    "digest": "sha256:373f3d490fb3a570987661a13ee72f5e1991b84add078a8a7ade7d930d308542"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 530,
                    "digest": "sha256:d9d3cf7a6aadad1963ea7c7d27734c805eb443388af0a0ec6f52e53a8c335428"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 105987662,
                    "digest": "sha256:daab910f2205afc3c9b02948bcbeb760fbf9846712122aa92a998f5e28b506f2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 148,
                    "digest": "sha256:2765dc19e4d1601a13dcb6e280cf9cc87f5ce4f152b153ec553ec64ee874743b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 190,
                    "digest": "sha256:0ba8e137125f9fd6396ef73f5b98c4dade715b80a3c9f3502848c6ca81ff3027"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 118632863,
                    "digest": "sha256:5683cd5dbb66ae36e6d4cf4191f3385b7169704017ff793ffcf7ab4cbcfe9ae2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102425021,
                    "digest": "sha256:0f681ead35e5b3b3ffa1c8ad5de0fd27f8b1cfd8256f6a551a471dab455fd422"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 114829684,
                    "digest": "sha256:ed25a57d20d847b8940832626e67306c5a9337e5dae1a67e4c53ac400b996fc7"
                }
            ]
        },
        "1.2.1-cpu": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9983,
                "digest": "sha256:95f7569b88de366c87143026654b106f219bf73668a763d2a92fa3a421de7f1b"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47103294,
                    "digest": "sha256:75c416ea735c42a4a0b2c8f31946a1918adc7853373c411abbec424391fb989c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 814,
                    "digest": "sha256:c6ff40b6d658359b7b428e76db4b9f6f921e47dda0a9a25537c09cc0f031c206"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 513,
                    "digest": "sha256:a7050fc1f338be18d965236f3bf937073e82d3846e362b4525815be483984ffb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:f0ffb5cf6ba990b18c314f5758f6e68609f1e32b3d35769b74264150d317b728"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 163,
                    "digest": "sha256:be232718519c940b04bc576366a58df53418d8e8bdb605f4e3ca66775735fdca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 129501456,
                    "digest": "sha256:b4e0181d645f8118e1b24ee140d9ee9e924d83a643cb1fd4bb9e0d13336fd161"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4887899,
                    "digest": "sha256:b8b858f78bcc7a272fce7044941142f248f17812c625fdc00f1150d393a178b1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 145622312,
                    "digest": "sha256:a07e45b2de14e59b2f85b5d8bc415389dd0e046c18f7afe1e4e36a320cc4626d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 41892702,
                    "digest": "sha256:c66c0604c69c9edb4ef1051ec5dfa55daf249c180365bea4da780990d95d49fe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 764,
                    "digest": "sha256:cebe94c7b896bf39c4371450c5463d59e2fbc8669ff5eb7ed111af7dfdce5a6b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 226382,
                    "digest": "sha256:8dea0da806bcd2563777d9e04f96890b8a8f62c8158807cb0df7f34b9a7f9e74"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 528,
                    "digest": "sha256:03d97fc3f0f92697ec2a846c9441bc2dab3dc2cbf54199d632a3446055482c15"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 230,
                    "digest": "sha256:0ad16c4866f8b09efe45038897e39901559255fd689380af6976a6cfa665bf51"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3360895,
                    "digest": "sha256:e0e18eef6b1a866280c6bf3ef9e5dcc54e269f5cd7909544cabe88ce79d9ef0f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4615,
                    "digest": "sha256:d003e840671f78bfca74b96cadecdaea57a4dfe7e008f37448810df749b1346d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4614,
                    "digest": "sha256:0ea6e4a4db594b6bde3461ef0e5eb36b8aff29fd4c5e822987e5845f5e906808"
                }
            ]
        },
        "1.2.1-gpu": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 16845,
                "digest": "sha256:b5fdf7fa14baf95da0329823f971e7002f38cc5a49b39b411ca4fa63e1a8780e"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47103294,
                    "digest": "sha256:75c416ea735c42a4a0b2c8f31946a1918adc7853373c411abbec424391fb989c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 814,
                    "digest": "sha256:c6ff40b6d658359b7b428e76db4b9f6f921e47dda0a9a25537c09cc0f031c206"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 513,
                    "digest": "sha256:a7050fc1f338be18d965236f3bf937073e82d3846e362b4525815be483984ffb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:f0ffb5cf6ba990b18c314f5758f6e68609f1e32b3d35769b74264150d317b728"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 163,
                    "digest": "sha256:be232718519c940b04bc576366a58df53418d8e8bdb605f4e3ca66775735fdca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 13176,
                    "digest": "sha256:9ade9f89bf41ed810472e75e4fe790ad84d22a98f22087de8df7eb969d067cb3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 452855431,
                    "digest": "sha256:7dcfe528dec5a6f29812c0e7ceb46bad4d0def9d9d00955f02d70c40d2247313"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4288,
                    "digest": "sha256:c078e464a0cffb80a7d8b04e946948b6d3753d18249adaa77ac9bf023d068aca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 184,
                    "digest": "sha256:e43961bc2bb6ce2202ebeeec2c4cea26c344847e707a581821aabf59991af268"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 465406051,
                    "digest": "sha256:67667fc22019b3ab08dc1716ed3676033253f6f18e3a872015c31092f11ce97f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 260,
                    "digest": "sha256:8ee4553caa7790718747ed77c22c2f29a87b98fb46876d5bfcf196dbf660bf8b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 104906732,
                    "digest": "sha256:60011b3e742f5acd01621c810589717f814376724789c3ef957a09f80540ccd5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 67442846,
                    "digest": "sha256:06cc283ab82ef582bef6a3910c9f0639aaa6f341e77ac50379329d613bba821b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4887855,
                    "digest": "sha256:900dfb2c942a041bb134305147e08dacc3030dbf87c98721fff879e0e03b578a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 145623700,
                    "digest": "sha256:7e78e7dde67cf0f399e8a3956c34edcf7db100006c0801161b179afc09bfc6aa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 96966365,
                    "digest": "sha256:ac7b03c46541dc9a5073beb2008da3bf9f7dc0d7ad1e49d87f02b734ed49e874"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 763,
                    "digest": "sha256:ca223eeacf456cd875c04b42a2e979333c84d5895886cb68f463f3fec49a5be7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 226384,
                    "digest": "sha256:bfe2132c76a415104bcce5e4af95ea29a5cfeb8d54b9ba0fd4a9ed165bd67d5c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 528,
                    "digest": "sha256:a77918567a279851c471f091d456ccdb3179a88032fe11d1bcbab0ef49befedd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 231,
                    "digest": "sha256:4e7ebbfbebc77151c22b7a905a521a07f3d8b904a9838d9d08523cddf15fec39"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3367112,
                    "digest": "sha256:8c4b4d1b26b9b1f3f410392e8e2e09c8011d885ea3043a2b1f3528f70525bb57"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4773,
                    "digest": "sha256:ea2ef3a35ca0e0866d8118430ba5bb9728f620dd5f7ac7bbe24a3dac4a084fec"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4772,
                    "digest": "sha256:58be7bffeca5f0c007db25dd54908db916ebc133d2dee2945c930b4949d0adde"
                }
            ]
        }
    },
    "tags": [
        "0.10.0-cpu",
        "0.10.0-gpu",
        "0.11.0-cpu",
        "0.11.0-gpu",
        "0.11.0-gpu-base",
        "1.0.0-cpu",
        "1.0.0-gpu",
        "1.0.0-gpu-base",
        "1.2.1-cpu",
        "1.2.1-gpu"
    ],
    "configs": {
        "0.10.0-cpu": {
            "architecture": "amd64",
            "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
            "config": {
                "Hostname": "fff5562e8198",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "23/tcp": {},
                    "6006/tcp": {},
                    "8888/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "TENSORFLOW_VERSION=0.10.0"
                ],
                "Cmd": [
                    "/usr/sbin/sshd",
                    "-D",
                    "-p",
                    "23"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a39aca84f703ba212f4d47ebdfd34fdc7806bfde3883b60725be0b91f76f457b",
                "Volumes": null,
                "WorkingDir": "/notebooks",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "container": "90af90ee816e5e406d80e0201643897a39d43289c3c90e1acfc898a393370b78",
            "container_config": {
                "Hostname": "fff5562e8198",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "23/tcp": {},
                    "6006/tcp": {},
                    "8888/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "TENSORFLOW_VERSION=0.10.0"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/usr/sbin/sshd\" \"-D\" \"-p\" \"23\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a39aca84f703ba212f4d47ebdfd34fdc7806bfde3883b60725be0b91f76f457b",
                "Volumes": null,
                "WorkingDir": "/notebooks",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2016-10-21T01:55:11.415091126Z",
            "docker_version": "1.12.2",
            "history": [
                {
                    "created": "2016-05-27T14:12:54.717569308Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:aca501360d0937bc49db603ee7e5b4f28865957690eb86cef8d769fdcec5c027 in /"
                },
                {
                    "created": "2016-05-27T14:12:59.725216339Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes"
                },
                {
                    "created": "2016-05-27T14:13:01.465351773Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2016-05-27T14:13:03.365180939Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2016-05-27T14:13:04.103044105Z",
                    "created_by": "/bin/sh -c #(nop) CMD [\"/bin/bash\"]"
                },
                {
                    "created": "2016-09-09T07:29:13.66039207Z",
                    "author": "Craig Citro <craigcitro@google.com>",
                    "created_by": "/bin/sh -c #(nop) MAINTAINER Craig Citro <craigcitro@google.com>",
                    "empty_layer": true
                },
                {
                    "created": "2016-09-09T07:30:37.093753502Z",
                    "author": "Craig Citro <craigcitro@google.com>",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends         build-essential         curl         libfreetype6-dev         libpng12-dev         libzmq3-dev         pkg-config         python         python-dev         python-numpy         python-pip         python-scipy         rsync         unzip         &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2016-09-09T07:30:46.369418446Z",
                    "author": "Craig Citro <craigcitro@google.com>",
                    "created_by": "/bin/sh -c curl -O https://bootstrap.pypa.io/get-pip.py &&     python get-pip.py &&     rm get-pip.py"
                },
                {
                    "created": "2016-09-09T07:31:11.301702859Z",
                    "author": "Craig Citro <craigcitro@google.com>",
                    "created_by": "/bin/sh -c pip --no-cache-dir install         ipykernel         jupyter         matplotlib         &&     python -m ipykernel.kernelspec"
                },
                {
                    "created": "2016-09-09T07:31:17.50847425Z",
                    "author": "Craig Citro <craigcitro@google.com>",
                    "created_by": "/bin/sh -c #(nop) ENV TENSORFLOW_VERSION=0.10.0",
                    "empty_layer": true
                },
                {
                    "created": "2016-09-09T07:31:26.348786478Z",
                    "author": "Craig Citro <craigcitro@google.com>",
                    "created_by": "/bin/sh -c #(nop) COPY file:ebaccc86a2a560a89dd788e86c847ce3bff379bca1ec44d5843ccaec2bdef29c in /"
                },
                {
                    "created": "2016-09-09T07:31:43.31279841Z",
                    "author": "Craig Citro <craigcitro@google.com>",
                    "created_by": "/bin/sh -c pip --no-cache-dir install /tensorflow-0.10.0-cp27-none-linux_x86_64.whl"
                },
                {
                    "created": "2016-09-09T07:31:50.184628984Z",
                    "author": "Craig Citro <craigcitro@google.com>",
                    "created_by": "/bin/sh -c #(nop) COPY file:42ef21582f99ebcfc71a1ecc99f033b23d8f15e4e897386dac74aabe7ce3e682 in /root/.jupyter/"
                },
                {
                    "created": "2016-09-09T07:31:57.060815383Z",
                    "author": "Craig Citro <craigcitro@google.com>",
                    "created_by": "/bin/sh -c #(nop) COPY dir:b36780fa00b266f35154646376862e4d912ff4277345551e4263b5866aeb4557 in /notebooks"
                },
                {
                    "created": "2016-09-09T07:32:03.968630478Z",
                    "author": "Craig Citro <craigcitro@google.com>",
                    "created_by": "/bin/sh -c #(nop) COPY file:5485384c641ba7bf763511ad514a0634b4fae9a859906153e69f4c136bb34d41 in /"
                },
                {
                    "created": "2016-09-09T07:32:10.644366292Z",
                    "author": "Craig Citro <craigcitro@google.com>",
                    "created_by": "/bin/sh -c #(nop) EXPOSE 6006/tcp",
                    "empty_layer": true
                },
                {
                    "created": "2016-09-09T07:32:19.396274679Z",
                    "author": "Craig Citro <craigcitro@google.com>",
                    "created_by": "/bin/sh -c #(nop) EXPOSE 8888/tcp",
                    "empty_layer": true
                },
                {
                    "created": "2016-09-09T07:32:28.000512588Z",
                    "author": "Craig Citro <craigcitro@google.com>",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /notebooks",
                    "empty_layer": true
                },
                {
                    "created": "2016-09-09T07:32:36.604424955Z",
                    "author": "Craig Citro <craigcitro@google.com>",
                    "created_by": "/bin/sh -c #(nop) CMD [\"/run_jupyter.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2016-09-13T14:57:48.65626327Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop)  MAINTAINER Fred Park <https://github.com/Azure/batch-shipyard>",
                    "empty_layer": true
                },
                {
                    "created": "2016-09-13T14:57:49.400640451Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop) COPY file:f9d192962354de09a1bc694d3d322fce378fc25eaadf3f1d2cb0bae0e304bbac in /root/.ssh/config "
                },
                {
                    "created": "2016-09-13T15:01:03.946157647Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends         openssh-client         openssh-server     && apt-get clean     && rm -rf /var/lib/apt/lists/*     && mkdir /var/run/sshd     && ssh-keygen -A     && sed -i 's/PermitRootLogin without-password/PermitRootLogin yes/' /etc/ssh/sshd_config     && sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd     && ssh-keygen -f /root/.ssh/id_rsa -t rsa -N ''     && chmod 600 /root/.ssh/config     && chmod 700 /root/.ssh     && cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys"
                },
                {
                    "created": "2016-10-21T01:55:10.379755715Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop) COPY multi:3bff3f2a250484d0a989b0d71c9f88fdd4fd76f5aec7942417378232953f85ab in /sw/ "
                },
                {
                    "created": "2016-10-21T01:55:10.943119007Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 23/tcp",
                    "empty_layer": true
                },
                {
                    "created": "2016-10-21T01:55:11.415091126Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/usr/sbin/sshd\" \"-D\" \"-p\" \"23\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a7e1c363defb1f80633f3688e945754fc4c8f1543f07114befb5e0175d569f4c",
                    "sha256:dc109d4b4ccf69361d29292fb15e52707507b520aba8cd43a564182f26725d74",
                    "sha256:9f7ab087e6e6574225f863b6013579a76bd0c80c92fefe7aea92c4207b6486cb",
                    "sha256:6f8be37bd578bbabe570b0181602971b0ea3509b79a1a3dd5528a4e3fc33dd6f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5745bf03047fe6ab9b1b3783d1448fd4f19cb13fb7d115e080ad7605c1effcf3",
                    "sha256:499d65302018365ec381fafdc052ed96e54a295d2e80fc22883858573ef3d614",
                    "sha256:e25434e921007853e50b3b78f5a00cc83bb65cefb246038d917c44e2650735e4",
                    "sha256:8c0cd2a42ab52538e7a82dc4d3b4442779ddd1390f41e58ad82881be34b3a86e",
                    "sha256:0754aafdcd7d11efa098c548102ab6bffb0fabf65395a5d6771c19d9e24d8d2b",
                    "sha256:82222b60467ddff45d63e6675a61003eb10537c34382aeee3844e4b2219503c1",
                    "sha256:2cc1b952de10cbfe1e8fe5a8319a057347fdba23cfda85fe32202984f6c07197",
                    "sha256:31239e25eda2300f03fadb1a322f4068b132e77df76c40e7b9890ff69c4b6dea",
                    "sha256:d9fb37b8e43eb6d1453596db984594fcc3c1abafd643574952c5919a481a5959",
                    "sha256:187c1ae649bf8daaf03e3e3b4757f0ed3b1ce122933bd3e5c0c02b5e039380e9",
                    "sha256:56a53085958925858910e1297a354e9efd1256256252cf5d355386cc595934d4"
                ]
            }
        },
        "0.10.0-gpu": {
            "architecture": "amd64",
            "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
            "config": {
                "Hostname": "26cb43ba6817",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "23/tcp": {},
                    "6006/tcp": {},
                    "8888/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NVIDIA_GPGKEY_SUM=bd841d59a27a406e513db7d405550894188a4c1cd96bf8aa4f82f1b39e0b5c1c",
                    "NVIDIA_GPGKEY_FPR=889bee522da690103c4b085ed88c3d385c37d3be",
                    "CUDA_VERSION=7.5",
                    "CUDA_PKG_VERSION=7-5=7.5-18",
                    "LD_LIBRARY_PATH=/usr/local/nvidia/lib:/usr/local/nvidia/lib64:",
                    "LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "CUDNN_VERSION=5",
                    "TENSORFLOW_VERSION=0.10.0"
                ],
                "Cmd": [
                    "/usr/sbin/sshd",
                    "-D",
                    "-p",
                    "23"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:8cd5eaf038ca2d8f3931cc231d1de442847da998bac757e222f54a1e61817093",
                "Volumes": null,
                "WorkingDir": "/notebooks",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {
                    "com.nvidia.cuda.version": "7.5",
                    "com.nvidia.cudnn.version": "5",
                    "com.nvidia.volumes.needed": "nvidia_driver"
                }
            },
            "container": "8b62af2fee93d83d78e8b24d9e00ec4fc3f708f672a99f20777e786e01649040",
            "container_config": {
                "Hostname": "26cb43ba6817",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "23/tcp": {},
                    "6006/tcp": {},
                    "8888/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NVIDIA_GPGKEY_SUM=bd841d59a27a406e513db7d405550894188a4c1cd96bf8aa4f82f1b39e0b5c1c",
                    "NVIDIA_GPGKEY_FPR=889bee522da690103c4b085ed88c3d385c37d3be",
                    "CUDA_VERSION=7.5",
                    "CUDA_PKG_VERSION=7-5=7.5-18",
                    "LD_LIBRARY_PATH=/usr/local/nvidia/lib:/usr/local/nvidia/lib64:",
                    "LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "CUDNN_VERSION=5",
                    "TENSORFLOW_VERSION=0.10.0"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/usr/sbin/sshd\" \"-D\" \"-p\" \"23\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:8cd5eaf038ca2d8f3931cc231d1de442847da998bac757e222f54a1e61817093",
                "Volumes": null,
                "WorkingDir": "/notebooks",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {
                    "com.nvidia.cuda.version": "7.5",
                    "com.nvidia.cudnn.version": "5",
                    "com.nvidia.volumes.needed": "nvidia_driver"
                }
            },
            "created": "2016-10-28T06:22:34.791131293Z",
            "docker_version": "1.12.2",
            "history": [
                {
                    "created": "2016-08-11T17:45:54.149228599Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4f5a660d3f5141588daa0e87c9c8b924c5ec31e9350710371cf454c862a78c50 in /"
                },
                {
                    "created": "2016-08-11T17:45:57.371688215Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2016-08-11T17:46:00.168646934Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2016-08-11T17:46:02.838204871Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2016-08-11T17:46:03.815995225Z",
                    "created_by": "/bin/sh -c #(nop) CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2016-08-12T04:59:12.586009362Z",
                    "author": "NVIDIA CORPORATION <digits@nvidia.com>",
                    "created_by": "/bin/sh -c #(nop)  MAINTAINER NVIDIA CORPORATION <digits@nvidia.com>",
                    "empty_layer": true
                },
                {
                    "created": "2016-08-12T04:59:12.726017737Z",
                    "author": "NVIDIA CORPORATION <digits@nvidia.com>",
                    "created_by": "/bin/sh -c #(nop)  LABEL com.nvidia.volumes.needed=nvidia_driver",
                    "empty_layer": true
                },
                {
                    "created": "2016-08-12T05:02:44.254012795Z",
                    "author": "NVIDIA CORPORATION <digits@nvidia.com>",
                    "created_by": "/bin/sh -c #(nop)  ENV NVIDIA_GPGKEY_SUM=bd841d59a27a406e513db7d405550894188a4c1cd96bf8aa4f82f1b39e0b5c1c",
                    "empty_layer": true
                },
                {
                    "created": "2016-08-12T05:02:44.398022378Z",
                    "author": "NVIDIA CORPORATION <digits@nvidia.com>",
                    "created_by": "/bin/sh -c #(nop)  ENV NVIDIA_GPGKEY_FPR=889bee522da690103c4b085ed88c3d385c37d3be",
                    "empty_layer": true
                },
                {
                    "created": "2016-08-12T05:02:46.362623757Z",
                    "author": "NVIDIA CORPORATION <digits@nvidia.com>",
                    "created_by": "/bin/sh -c apt-key adv --fetch-keys http://developer.download.nvidia.com/compute/cuda/repos/GPGKEY &&     apt-key adv --export --no-emit-version -a $NVIDIA_GPGKEY_FPR | tail -n +2 > cudasign.pub &&     echo \"$NVIDIA_GPGKEY_SUM  cudasign.pub\" | sha256sum -c --strict - && rm cudasign.pub &&     echo \"deb http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1404/x86_64 /\" > /etc/apt/sources.list.d/cuda.list"
                },
                {
                    "created": "2016-08-12T05:02:46.48205202Z",
                    "author": "NVIDIA CORPORATION <digits@nvidia.com>",
                    "created_by": "/bin/sh -c #(nop)  ENV CUDA_VERSION=7.5",
                    "empty_layer": true
                },
                {
                    "created": "2016-08-12T05:02:46.622083775Z",
                    "author": "NVIDIA CORPORATION <digits@nvidia.com>",
                    "created_by": "/bin/sh -c #(nop)  LABEL com.nvidia.cuda.version=7.5",
                    "empty_layer": true
                },
                {
                    "created": "2016-08-12T05:02:46.762009794Z",
                    "author": "NVIDIA CORPORATION <digits@nvidia.com>",
                    "created_by": "/bin/sh -c #(nop)  ENV CUDA_PKG_VERSION=7-5=7.5-18",
                    "empty_layer": true
                },
                {
                    "created": "2016-08-12T05:03:30.505746513Z",
                    "author": "NVIDIA CORPORATION <digits@nvidia.com>",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends --force-yes         cuda-nvrtc-$CUDA_PKG_VERSION         cuda-cusolver-$CUDA_PKG_VERSION         cuda-cublas-$CUDA_PKG_VERSION         cuda-cufft-$CUDA_PKG_VERSION         cuda-curand-$CUDA_PKG_VERSION         cuda-cusparse-$CUDA_PKG_VERSION         cuda-npp-$CUDA_PKG_VERSION         cuda-cudart-$CUDA_PKG_VERSION &&     ln -s cuda-$CUDA_VERSION /usr/local/cuda &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2016-08-12T05:03:31.086842364Z",
                    "author": "NVIDIA CORPORATION <digits@nvidia.com>",
                    "created_by": "/bin/sh -c echo \"/usr/local/cuda/lib\" >> /etc/ld.so.conf.d/cuda.conf &&     echo \"/usr/local/cuda/lib64\" >> /etc/ld.so.conf.d/cuda.conf &&     ldconfig"
                },
                {
                    "created": "2016-08-12T05:03:31.730434666Z",
                    "author": "NVIDIA CORPORATION <digits@nvidia.com>",
                    "created_by": "/bin/sh -c echo \"/usr/local/nvidia/lib\" >> /etc/ld.so.conf.d/nvidia.conf &&     echo \"/usr/local/nvidia/lib64\" >> /etc/ld.so.conf.d/nvidia.conf"
                },
                {
                    "created": "2016-08-12T05:03:31.886018636Z",
                    "author": "NVIDIA CORPORATION <digits@nvidia.com>",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2016-08-12T05:03:32.038073802Z",
                    "author": "NVIDIA CORPORATION <digits@nvidia.com>",
                    "created_by": "/bin/sh -c #(nop)  ENV LD_LIBRARY_PATH=/usr/local/nvidia/lib:/usr/local/nvidia/lib64:",
                    "empty_layer": true
                },
                {
                    "created": "2016-08-12T05:03:32.282046798Z",
                    "author": "NVIDIA CORPORATION <digits@nvidia.com>",
                    "created_by": "/bin/sh -c #(nop)  MAINTAINER NVIDIA CORPORATION <digits@nvidia.com>",
                    "empty_layer": true
                },
                {
                    "created": "2016-08-12T05:11:19.557598071Z",
                    "author": "NVIDIA CORPORATION <digits@nvidia.com>",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends --force-yes         cuda-core-$CUDA_PKG_VERSION         cuda-misc-headers-$CUDA_PKG_VERSION         cuda-command-line-tools-$CUDA_PKG_VERSION         cuda-license-$CUDA_PKG_VERSION         cuda-nvrtc-dev-$CUDA_PKG_VERSION         cuda-cusolver-dev-$CUDA_PKG_VERSION         cuda-cublas-dev-$CUDA_PKG_VERSION         cuda-cufft-dev-$CUDA_PKG_VERSION         cuda-curand-dev-$CUDA_PKG_VERSION         cuda-cusparse-dev-$CUDA_PKG_VERSION         cuda-npp-dev-$CUDA_PKG_VERSION         cuda-cudart-dev-$CUDA_PKG_VERSION         cuda-driver-dev-$CUDA_PKG_VERSION &&     cd /tmp && apt-get download gpu-deployment-kit &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2016-08-12T05:11:20.374870275Z",
                    "author": "NVIDIA CORPORATION <digits@nvidia.com>",
                    "created_by": "/bin/sh -c mkdir /tmp/gpu-deployment-kit && cd /tmp/gpu-deployment-kit &&     dpkg -x /tmp/gpu-deployment-kit_*.deb . &&     mv usr/include/nvidia/gdk/* /usr/local/cuda/include &&     mv usr/src/gdk/nvml/lib/* /usr/local/cuda/lib64/stubs &&     rm -rf /tmp/gpu-deployment-kit*"
                },
                {
                    "created": "2016-08-12T05:11:20.518028855Z",
                    "author": "NVIDIA CORPORATION <digits@nvidia.com>",
                    "created_by": "/bin/sh -c #(nop)  ENV LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "empty_layer": true
                },
                {
                    "created": "2016-08-12T05:11:20.738057417Z",
                    "author": "NVIDIA CORPORATION <digits@nvidia.com>",
                    "created_by": "/bin/sh -c #(nop)  MAINTAINER NVIDIA CORPORATION <digits@nvidia.com>",
                    "empty_layer": true
                },
                {
                    "created": "2016-08-12T05:11:21.178473206Z",
                    "author": "NVIDIA CORPORATION <digits@nvidia.com>",
                    "created_by": "/bin/sh -c echo \"deb http://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1404/x86_64 /\" > /etc/apt/sources.list.d/nvidia-ml.list"
                },
                {
                    "created": "2016-08-12T05:11:21.321968447Z",
                    "author": "NVIDIA CORPORATION <digits@nvidia.com>",
                    "created_by": "/bin/sh -c #(nop)  ENV CUDNN_VERSION=5",
                    "empty_layer": true
                },
                {
                    "created": "2016-08-12T05:11:21.494059094Z",
                    "author": "NVIDIA CORPORATION <digits@nvidia.com>",
                    "created_by": "/bin/sh -c #(nop)  LABEL com.nvidia.cudnn.version=5",
                    "empty_layer": true
                },
                {
                    "created": "2016-08-12T05:11:56.787599329Z",
                    "author": "NVIDIA CORPORATION <digits@nvidia.com>",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends --force-yes             libcudnn5-dev=5.1.3-1+cuda7.5 &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2016-09-09T19:48:58.158692861Z",
                    "author": "Craig Citro <craigcitro@google.com>",
                    "created_by": "/bin/sh -c #(nop)  MAINTAINER Craig Citro <craigcitro@google.com>",
                    "empty_layer": true
                },
                {
                    "created": "2016-09-09T19:49:50.683604922Z",
                    "author": "Craig Citro <craigcitro@google.com>",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends         build-essential         curl         libfreetype6-dev         libpng12-dev         libzmq3-dev         pkg-config         python         python-dev         python-numpy         python-pip         python-scipy         rsync         unzip         &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2016-09-09T19:49:57.719669398Z",
                    "author": "Craig Citro <craigcitro@google.com>",
                    "created_by": "/bin/sh -c curl -O https://bootstrap.pypa.io/get-pip.py &&     python get-pip.py &&     rm get-pip.py"
                },
                {
                    "created": "2016-09-09T19:50:18.843389244Z",
                    "author": "Craig Citro <craigcitro@google.com>",
                    "created_by": "/bin/sh -c pip --no-cache-dir install         ipykernel         jupyter         matplotlib         &&     python -m ipykernel.kernelspec"
                },
                {
                    "created": "2016-09-09T19:50:22.694739879Z",
                    "author": "Craig Citro <craigcitro@google.com>",
                    "created_by": "/bin/sh -c #(nop)  ENV TENSORFLOW_VERSION=0.10.0",
                    "empty_layer": true
                },
                {
                    "created": "2016-09-09T19:50:29.654666328Z",
                    "author": "Craig Citro <craigcitro@google.com>",
                    "created_by": "/bin/sh -c #(nop) COPY file:894d67adfdf6b48d21b19f93bddac34aa8fb2be44b8aa7cd5f5653d7e5ccf4b9 in / "
                },
                {
                    "created": "2016-09-09T19:50:47.247689611Z",
                    "author": "Craig Citro <craigcitro@google.com>",
                    "created_by": "/bin/sh -c pip --no-cache-dir install /tensorflow-0.10.0-cp27-none-linux_x86_64.whl"
                },
                {
                    "created": "2016-09-09T19:50:51.666749558Z",
                    "author": "Craig Citro <craigcitro@google.com>",
                    "created_by": "/bin/sh -c #(nop) COPY file:42ef21582f99ebcfc71a1ecc99f033b23d8f15e4e897386dac74aabe7ce3e682 in /root/.jupyter/ "
                },
                {
                    "created": "2016-09-09T19:50:56.102958599Z",
                    "author": "Craig Citro <craigcitro@google.com>",
                    "created_by": "/bin/sh -c #(nop) COPY dir:b36780fa00b266f35154646376862e4d912ff4277345551e4263b5866aeb4557 in /notebooks "
                },
                {
                    "created": "2016-09-09T19:51:00.682583862Z",
                    "author": "Craig Citro <craigcitro@google.com>",
                    "created_by": "/bin/sh -c #(nop) COPY file:5485384c641ba7bf763511ad514a0634b4fae9a859906153e69f4c136bb34d41 in / "
                },
                {
                    "created": "2016-09-09T19:51:04.814632984Z",
                    "author": "Craig Citro <craigcitro@google.com>",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 6006/tcp",
                    "empty_layer": true
                },
                {
                    "created": "2016-09-09T19:51:09.97861957Z",
                    "author": "Craig Citro <craigcitro@google.com>",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8888/tcp",
                    "empty_layer": true
                },
                {
                    "created": "2016-09-09T19:51:15.402678772Z",
                    "author": "Craig Citro <craigcitro@google.com>",
                    "created_by": "/bin/sh -c #(nop)  WORKDIR /notebooks",
                    "empty_layer": true
                },
                {
                    "created": "2016-09-09T19:51:20.862637401Z",
                    "author": "Craig Citro <craigcitro@google.com>",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/run_jupyter.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2016-09-13T15:06:26.876375033Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop)  MAINTAINER Fred Park <https://github.com/Azure/batch-shipyard>",
                    "empty_layer": true
                },
                {
                    "created": "2016-09-13T15:06:27.560580182Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop) COPY file:f9d192962354de09a1bc694d3d322fce378fc25eaadf3f1d2cb0bae0e304bbac in /root/.ssh/config "
                },
                {
                    "created": "2016-09-13T15:08:26.974143847Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends         openssh-client         openssh-server     && apt-get clean     && rm -rf /var/lib/apt/lists/*     && mkdir /var/run/sshd     && ssh-keygen -A     && sed -i 's/PermitRootLogin without-password/PermitRootLogin yes/' /etc/ssh/sshd_config     && sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd     && ssh-keygen -f /root/.ssh/id_rsa -t rsa -N ''     && chmod 600 /root/.ssh/config     && chmod 700 /root/.ssh     && cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys"
                },
                {
                    "created": "2016-10-28T06:22:33.69149565Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop) COPY multi:7b7068c965118baca92a142044ab5889e84b1da789506572243640258b130303 in /sw/ "
                },
                {
                    "created": "2016-10-28T06:22:34.239102458Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 23/tcp",
                    "empty_layer": true
                },
                {
                    "created": "2016-10-28T06:22:34.791131293Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/usr/sbin/sshd\" \"-D\" \"-p\" \"23\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8a14f84e58378f5982f4e1ac39bebda2ac9025349026fc0adb8444385051c958",
                    "sha256:dbaa8ea1faf96b94cd08a124ffe622a13e6d67ec70026f01264b1e302095ef2e",
                    "sha256:df9a135a69491b787653269e3a228480063abd4a3ca3a74218f8a04f69da9c87",
                    "sha256:447f88c8358fbd8211f0f48c6afd38901e1dfb9ebd5ca6ab748613978acfa114",
                    "sha256:4879f9e69b7b25195cad4cfca48fb29f3edbd32fdda2c7dae490f5d09eb3f0f5",
                    "sha256:bb7a85340d3499b475ba08e2fffcabea945e03e5779858593dcb18f6e2d2b71f",
                    "sha256:57bae0ded36736841759e7e5cffdb9c3489037aff99069c88b5ad3aa40a3fe24",
                    "sha256:f52cb3bfefcab3f34a49c908ce680665fdb4fdf921459c1a1b019e9c851e1885",
                    "sha256:3cb03963580ed77475b1a0280399ec4784c92bb3c7ce6283c24ef8dda2935a69",
                    "sha256:4a4a4559c337ec1030e90b1b71984b4760269757e20bed91b9f021d4b0854982",
                    "sha256:7382e4c811ba11cb976aa4f44aefc9adaec3f68f4928b05e62b761e507c285a6",
                    "sha256:590864984dd22bafcdf75f271390c4487eff27686fff3b366c6505c3c276b86e",
                    "sha256:1536f7efc52e8e578e5576f0f6738c615391ce786add83008cd57d23ca5bb0b1",
                    "sha256:f54f0ef6ab000b082e6f9198976c00210a4f845d0762d69de629a27966e10946",
                    "sha256:acfde5b6b6f745c386406d9440b1fe134d8482bd546b3f33bb730c5e987ade79",
                    "sha256:4b6c363f1ac1750503a6076b356418c89a5db29f1a10029b825cd558d154d676",
                    "sha256:32fc9f72fc3ee659c1709fb4a97e7df242f463e9bd4086b4d2af577259dd8112",
                    "sha256:75c054fedd35d3c444603490aff17fa190b5cba1495b241f0dab5c7522618cd4",
                    "sha256:6dd0ac3f1a2b81ffbd4ca24e5745306abf41c2cf03ef180050f963558da6ffd3",
                    "sha256:e7dea60035566052018724ccf5e855c1948481f6753c0cd55e08ee03ce929603",
                    "sha256:16d42424f7a1bfb6ccc835db8ac28c091d378c055861d6cf2ca541e2f6c22fd6",
                    "sha256:17e785367daf60270a1a2ec5f36458743417e8782421ab13412844e495d42966",
                    "sha256:0c0ad6b9e003bad220b949f7562feb2bab0c6473c78710868ce764bb92cc0673"
                ]
            }
        },
        "0.11.0-cpu": {
            "architecture": "amd64",
            "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
            "config": {
                "Hostname": "fff5562e8198",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "23/tcp": {},
                    "6006/tcp": {},
                    "8888/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "TENSORFLOW_VERSION=0.11.0"
                ],
                "Cmd": [
                    "/usr/sbin/sshd",
                    "-D",
                    "-p",
                    "23"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:60069e172b32d86544726dd5fae1c550f58ae75acee1d8cd25e68990d666f703",
                "Volumes": null,
                "WorkingDir": "/notebooks",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "container": "1583ea71621967373eb89ad7ae600e4fb541a0c26045a01a0a40b4b5b79b5e1d",
            "container_config": {
                "Hostname": "fff5562e8198",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "23/tcp": {},
                    "6006/tcp": {},
                    "8888/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "TENSORFLOW_VERSION=0.11.0"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/usr/sbin/sshd\" \"-D\" \"-p\" \"23\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:60069e172b32d86544726dd5fae1c550f58ae75acee1d8cd25e68990d666f703",
                "Volumes": null,
                "WorkingDir": "/notebooks",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2016-11-20T18:46:31.687086579Z",
            "docker_version": "1.12.3",
            "history": [
                {
                    "created": "2016-05-27T14:12:54.717569308Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:aca501360d0937bc49db603ee7e5b4f28865957690eb86cef8d769fdcec5c027 in /"
                },
                {
                    "created": "2016-05-27T14:12:59.725216339Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes"
                },
                {
                    "created": "2016-05-27T14:13:01.465351773Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2016-05-27T14:13:03.365180939Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2016-05-27T14:13:04.103044105Z",
                    "created_by": "/bin/sh -c #(nop) CMD [\"/bin/bash\"]"
                },
                {
                    "created": "2016-11-09T02:39:09.928071981Z",
                    "author": "Craig Citro <craigcitro@google.com>",
                    "created_by": "/bin/sh -c #(nop)  MAINTAINER Craig Citro <craigcitro@google.com>",
                    "empty_layer": true
                },
                {
                    "created": "2016-11-09T02:40:11.933835267Z",
                    "author": "Craig Citro <craigcitro@google.com>",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends         build-essential         curl         libfreetype6-dev         libpng12-dev         libzmq3-dev         pkg-config         python         python-dev         rsync         software-properties-common         unzip         &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2016-11-09T02:40:21.0809805Z",
                    "author": "Craig Citro <craigcitro@google.com>",
                    "created_by": "/bin/sh -c curl -O https://bootstrap.pypa.io/get-pip.py &&     python get-pip.py &&     rm get-pip.py"
                },
                {
                    "created": "2016-11-09T02:41:08.265537429Z",
                    "author": "Craig Citro <craigcitro@google.com>",
                    "created_by": "/bin/sh -c pip --no-cache-dir install         ipykernel         jupyter         matplotlib         numpy         scipy         &&     python -m ipykernel.kernelspec"
                },
                {
                    "created": "2016-11-09T02:41:13.308101968Z",
                    "author": "Craig Citro <craigcitro@google.com>",
                    "created_by": "/bin/sh -c #(nop)  ENV TENSORFLOW_VERSION=0.11.0",
                    "empty_layer": true
                },
                {
                    "created": "2016-11-09T02:41:20.508272563Z",
                    "author": "Craig Citro <craigcitro@google.com>",
                    "created_by": "/bin/sh -c #(nop) COPY file:cff88a2b30b47a5f38406797e93a4d767371f9e458728206df786bee2164d6fb in / "
                },
                {
                    "created": "2016-11-09T02:41:36.636713745Z",
                    "author": "Craig Citro <craigcitro@google.com>",
                    "created_by": "/bin/sh -c pip --no-cache-dir install /tensorflow-0.11.0-cp27-none-linux_x86_64.whl"
                },
                {
                    "created": "2016-11-09T02:41:42.236178088Z",
                    "author": "Craig Citro <craigcitro@google.com>",
                    "created_by": "/bin/sh -c #(nop) COPY file:822af972b63c441e3a61eb98118da21f4767bc038349d21719ae254bd82947e7 in /root/.jupyter/ "
                },
                {
                    "created": "2016-11-09T02:41:47.924389509Z",
                    "author": "Craig Citro <craigcitro@google.com>",
                    "created_by": "/bin/sh -c #(nop) COPY dir:81b815fbec17134ca9d9360b46020b0842f72e55944c4840bbaba9899d42ddd9 in /notebooks "
                },
                {
                    "created": "2016-11-09T02:41:53.568140744Z",
                    "author": "Craig Citro <craigcitro@google.com>",
                    "created_by": "/bin/sh -c #(nop) COPY file:5485384c641ba7bf763511ad514a0634b4fae9a859906153e69f4c136bb34d41 in / "
                },
                {
                    "created": "2016-11-09T02:41:59.068066883Z",
                    "author": "Craig Citro <craigcitro@google.com>",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 6006/tcp",
                    "empty_layer": true
                },
                {
                    "created": "2016-11-09T02:42:05.820085867Z",
                    "author": "Craig Citro <craigcitro@google.com>",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8888/tcp",
                    "empty_layer": true
                },
                {
                    "created": "2016-11-09T02:42:12.592119028Z",
                    "author": "Craig Citro <craigcitro@google.com>",
                    "created_by": "/bin/sh -c #(nop)  WORKDIR /notebooks",
                    "empty_layer": true
                },
                {
                    "created": "2016-11-09T02:42:19.38799657Z",
                    "author": "Craig Citro <craigcitro@google.com>",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/run_jupyter.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2016-11-20T18:45:57.875073497Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop)  MAINTAINER Fred Park <https://github.com/Azure/batch-shipyard>",
                    "empty_layer": true
                },
                {
                    "created": "2016-11-20T18:45:58.051269098Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop) COPY file:f9d192962354de09a1bc694d3d322fce378fc25eaadf3f1d2cb0bae0e304bbac in /root/.ssh/config "
                },
                {
                    "created": "2016-11-20T18:46:31.154348887Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends         openssh-client         openssh-server     && apt-get clean     && rm -rf /var/lib/apt/lists/*     && mkdir /var/run/sshd     && ssh-keygen -A     && sed -i 's/PermitRootLogin without-password/PermitRootLogin yes/' /etc/ssh/sshd_config     && sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd     && ssh-keygen -f /root/.ssh/id_rsa -t rsa -N ''     && chmod 600 /root/.ssh/config     && chmod 700 /root/.ssh     && cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys"
                },
                {
                    "created": "2016-11-20T18:46:31.415255895Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop) COPY multi:3bff3f2a250484d0a989b0d71c9f88fdd4fd76f5aec7942417378232953f85ab in /sw/ "
                },
                {
                    "created": "2016-11-20T18:46:31.551073887Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 23/tcp",
                    "empty_layer": true
                },
                {
                    "created": "2016-11-20T18:46:31.687086579Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/usr/sbin/sshd\" \"-D\" \"-p\" \"23\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a7e1c363defb1f80633f3688e945754fc4c8f1543f07114befb5e0175d569f4c",
                    "sha256:dc109d4b4ccf69361d29292fb15e52707507b520aba8cd43a564182f26725d74",
                    "sha256:9f7ab087e6e6574225f863b6013579a76bd0c80c92fefe7aea92c4207b6486cb",
                    "sha256:6f8be37bd578bbabe570b0181602971b0ea3509b79a1a3dd5528a4e3fc33dd6f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:6aa0c2c47eaff0e8d9a841c6328f87497f2489b03aa4cb5a531d0dd3d523afc5",
                    "sha256:96c0b219314f1815aecd1befad962950c2e365b7c5cf4340547648efc4f8ba00",
                    "sha256:dd25a558843fd6f6dcf2a7eb91077bb8ddb2cb1b11dc526ca68c047723b9fd39",
                    "sha256:d7f5fba82311244a234b0ca6a2bc0127768fbccaf471c3d730e2200e34b7b9bf",
                    "sha256:27804d9026208bbb8ef708b6736029659476caba349a169e08574771e1650348",
                    "sha256:4c2ff1196dc7a0dbb10044e0107f6ce230b2a281d6e07856b4d9e674847499dd",
                    "sha256:648f36714538496965e4e0d093787afdbd20d08522f5e9e10e47bed57df7da76",
                    "sha256:1259e134199c529183dcc1100fad6e4edae3dcec9c2fd8ba11df2e7f7ba3850e",
                    "sha256:7c93ef4a178572ff459dd292fde5a58b097ef44b8479235fdc03da26f734e6d1",
                    "sha256:aa763133a465c320b50487d0886203436025bc265d3d450bac2d07437025673d",
                    "sha256:86b71a3f5d593130b45521400b9c0fcb7010304a577b374b6710be84486a5169"
                ]
            }
        },
        "0.11.0-gpu": {
            "architecture": "amd64",
            "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
            "config": {
                "Hostname": "2d7c95057d66",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "23/tcp": {},
                    "6006/tcp": {},
                    "8888/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CUDA_VERSION=8.0",
                    "CUDA_PKG_VERSION=8-0=8.0.44-1",
                    "LD_LIBRARY_PATH=/usr/local/cuda/extras/CUPTI/lib64:/usr/local/nvidia/lib:/usr/local/nvidia/lib64:",
                    "LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "CUDNN_VERSION=5",
                    "BAZELRC=/root/.bazelrc",
                    "BAZEL_VERSION=0.3.2",
                    "TF_NEED_CUDA=1",
                    "TF_CUDA_COMPUTE_CAPABILITIES=3.7,5.2"
                ],
                "Cmd": [
                    "/usr/sbin/sshd",
                    "-D",
                    "-p",
                    "23"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:13714e0f932885da135cc7356e861b4d750a49b82e9a682b17df79fb12899b27",
                "Volumes": null,
                "WorkingDir": "/notebooks",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {
                    "com.nvidia.cuda.version": "8.0",
                    "com.nvidia.cudnn.version": "5",
                    "com.nvidia.volumes.needed": "nvidia_driver"
                }
            },
            "container": "47311c9bb050dc3da4d72399545f700d665b11373b15338f1158637b96ed1a2d",
            "container_config": {
                "Hostname": "2d7c95057d66",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "23/tcp": {},
                    "6006/tcp": {},
                    "8888/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CUDA_VERSION=8.0",
                    "CUDA_PKG_VERSION=8-0=8.0.44-1",
                    "LD_LIBRARY_PATH=/usr/local/cuda/extras/CUPTI/lib64:/usr/local/nvidia/lib:/usr/local/nvidia/lib64:",
                    "LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "CUDNN_VERSION=5",
                    "BAZELRC=/root/.bazelrc",
                    "BAZEL_VERSION=0.3.2",
                    "TF_NEED_CUDA=1",
                    "TF_CUDA_COMPUTE_CAPABILITIES=3.7,5.2"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/usr/sbin/sshd\" \"-D\" \"-p\" \"23\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:13714e0f932885da135cc7356e861b4d750a49b82e9a682b17df79fb12899b27",
                "Volumes": null,
                "WorkingDir": "/notebooks",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {
                    "com.nvidia.cuda.version": "8.0",
                    "com.nvidia.cudnn.version": "5",
                    "com.nvidia.volumes.needed": "nvidia_driver"
                }
            },
            "created": "2016-11-20T19:05:49.711041861Z",
            "docker_version": "1.12.3",
            "history": [
                {
                    "created": "2016-11-16T20:57:47.651039681Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:79ae73b5e33a497a33c1664e8e7129548273ee9d6ac9336b6ec940808a22a781 in / "
                },
                {
                    "created": "2016-11-16T20:57:50.300607544Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2016-11-16T20:57:51.332259947Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2016-11-16T20:57:52.808160255Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2016-11-16T20:57:53.781622136Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2016-11-16T20:57:54.170783313Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2016-11-18T00:15:22.81368778Z",
                    "author": "NVIDIA CORPORATION <digits@nvidia.com>",
                    "created_by": "/bin/sh -c #(nop)  MAINTAINER NVIDIA CORPORATION <digits@nvidia.com>",
                    "empty_layer": true
                },
                {
                    "created": "2016-11-18T00:15:22.997744421Z",
                    "author": "NVIDIA CORPORATION <digits@nvidia.com>",
                    "created_by": "/bin/sh -c #(nop)  LABEL com.nvidia.volumes.needed=nvidia_driver",
                    "empty_layer": true
                },
                {
                    "created": "2016-11-18T00:15:30.850779253Z",
                    "author": "NVIDIA CORPORATION <digits@nvidia.com>",
                    "created_by": "/bin/sh -c NVIDIA_GPGKEY_SUM=d1be581509378368edeec8c1eb2958702feedf3bc3d17011adbf24efacce4ab5 &&     NVIDIA_GPGKEY_FPR=ae09fe4bbd223a84b2ccfce3f60f4b3d7fa2af80 &&     apt-key adv --fetch-keys http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1404/x86_64/7fa2af80.pub &&     apt-key adv --export --no-emit-version -a $NVIDIA_GPGKEY_FPR | tail -n +2 > cudasign.pub &&     echo \"$NVIDIA_GPGKEY_SUM  cudasign.pub\" | sha256sum -c --strict - && rm cudasign.pub &&     echo \"deb http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1404/x86_64 /\" > /etc/apt/sources.list.d/cuda.list"
                },
                {
                    "created": "2016-11-18T00:15:31.014870465Z",
                    "author": "NVIDIA CORPORATION <digits@nvidia.com>",
                    "created_by": "/bin/sh -c #(nop)  ENV CUDA_VERSION=8.0",
                    "empty_layer": true
                },
                {
                    "created": "2016-11-18T00:15:31.176929442Z",
                    "author": "NVIDIA CORPORATION <digits@nvidia.com>",
                    "created_by": "/bin/sh -c #(nop)  LABEL com.nvidia.cuda.version=8.0",
                    "empty_layer": true
                },
                {
                    "created": "2016-11-18T00:15:31.339543104Z",
                    "author": "NVIDIA CORPORATION <digits@nvidia.com>",
                    "created_by": "/bin/sh -c #(nop)  ENV CUDA_PKG_VERSION=8-0=8.0.44-1",
                    "empty_layer": true
                },
                {
                    "created": "2016-11-18T00:16:07.975614816Z",
                    "author": "NVIDIA CORPORATION <digits@nvidia.com>",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends         cuda-nvrtc-$CUDA_PKG_VERSION         cuda-nvgraph-$CUDA_PKG_VERSION         cuda-cusolver-$CUDA_PKG_VERSION         cuda-cublas-$CUDA_PKG_VERSION         cuda-cufft-$CUDA_PKG_VERSION         cuda-curand-$CUDA_PKG_VERSION         cuda-cusparse-$CUDA_PKG_VERSION         cuda-npp-$CUDA_PKG_VERSION         cuda-cudart-$CUDA_PKG_VERSION &&     ln -s cuda-$CUDA_VERSION /usr/local/cuda &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2016-11-18T00:16:08.685361394Z",
                    "author": "NVIDIA CORPORATION <digits@nvidia.com>",
                    "created_by": "/bin/sh -c echo \"/usr/local/cuda/lib\" >> /etc/ld.so.conf.d/cuda.conf &&     echo \"/usr/local/cuda/lib64\" >> /etc/ld.so.conf.d/cuda.conf &&     ldconfig"
                },
                {
                    "created": "2016-11-18T00:16:09.301815674Z",
                    "author": "NVIDIA CORPORATION <digits@nvidia.com>",
                    "created_by": "/bin/sh -c echo \"/usr/local/nvidia/lib\" >> /etc/ld.so.conf.d/nvidia.conf &&     echo \"/usr/local/nvidia/lib64\" >> /etc/ld.so.conf.d/nvidia.conf"
                },
                {
                    "created": "2016-11-18T00:16:09.461137936Z",
                    "author": "NVIDIA CORPORATION <digits@nvidia.com>",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2016-11-18T00:16:09.613282177Z",
                    "author": "NVIDIA CORPORATION <digits@nvidia.com>",
                    "created_by": "/bin/sh -c #(nop)  ENV LD_LIBRARY_PATH=/usr/local/nvidia/lib:/usr/local/nvidia/lib64:",
                    "empty_layer": true
                },
                {
                    "created": "2016-11-18T00:16:09.86176256Z",
                    "author": "NVIDIA CORPORATION <digits@nvidia.com>",
                    "created_by": "/bin/sh -c #(nop)  MAINTAINER NVIDIA CORPORATION <digits@nvidia.com>",
                    "empty_layer": true
                },
                {
                    "created": "2016-11-18T00:23:11.224215858Z",
                    "author": "NVIDIA CORPORATION <digits@nvidia.com>",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends         cuda-core-$CUDA_PKG_VERSION         cuda-misc-headers-$CUDA_PKG_VERSION         cuda-command-line-tools-$CUDA_PKG_VERSION         cuda-nvrtc-dev-$CUDA_PKG_VERSION         cuda-nvml-dev-$CUDA_PKG_VERSION         cuda-nvgraph-dev-$CUDA_PKG_VERSION         cuda-cusolver-dev-$CUDA_PKG_VERSION         cuda-cublas-dev-$CUDA_PKG_VERSION         cuda-cufft-dev-$CUDA_PKG_VERSION         cuda-curand-dev-$CUDA_PKG_VERSION         cuda-cusparse-dev-$CUDA_PKG_VERSION         cuda-npp-dev-$CUDA_PKG_VERSION         cuda-cudart-dev-$CUDA_PKG_VERSION         cuda-driver-dev-$CUDA_PKG_VERSION &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2016-11-18T00:23:11.545788402Z",
                    "author": "NVIDIA CORPORATION <digits@nvidia.com>",
                    "created_by": "/bin/sh -c #(nop)  ENV LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "empty_layer": true
                },
                {
                    "created": "2016-11-18T00:23:11.781796747Z",
                    "author": "NVIDIA CORPORATION <digits@nvidia.com>",
                    "created_by": "/bin/sh -c #(nop)  MAINTAINER NVIDIA CORPORATION <digits@nvidia.com>",
                    "empty_layer": true
                },
                {
                    "created": "2016-11-18T00:23:48.796595736Z",
                    "author": "NVIDIA CORPORATION <digits@nvidia.com>",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y         curl &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2016-11-18T00:23:48.97723503Z",
                    "author": "NVIDIA CORPORATION <digits@nvidia.com>",
                    "created_by": "/bin/sh -c #(nop)  ENV CUDNN_VERSION=5",
                    "empty_layer": true
                },
                {
                    "created": "2016-11-18T00:23:49.113051705Z",
                    "author": "NVIDIA CORPORATION <digits@nvidia.com>",
                    "created_by": "/bin/sh -c #(nop)  LABEL com.nvidia.cudnn.version=5",
                    "empty_layer": true
                },
                {
                    "created": "2016-11-18T00:24:14.434424364Z",
                    "author": "NVIDIA CORPORATION <digits@nvidia.com>",
                    "created_by": "/bin/sh -c CUDNN_DOWNLOAD_SUM=a87cb2df2e5e7cc0a05e266734e679ee1a2fadad6f06af82a76ed81a23b102c8 &&     curl -fsSL http://developer.download.nvidia.com/compute/redist/cudnn/v5.1/cudnn-8.0-linux-x64-v5.1.tgz -O &&     echo \"$CUDNN_DOWNLOAD_SUM  cudnn-8.0-linux-x64-v5.1.tgz\" | sha256sum -c --strict - &&     tar -xzf cudnn-8.0-linux-x64-v5.1.tgz -C /usr/local &&     rm cudnn-8.0-linux-x64-v5.1.tgz &&     ldconfig"
                },
                {
                    "created": "2016-11-20T17:39:10.343077231Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop)  MAINTAINER Fred Park <https://github.com/Azure/batch-shipyard>",
                    "empty_layer": true
                },
                {
                    "created": "2016-11-20T18:03:49.616741113Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends         build-essential         curl         git         libcurl3-dev         libfreetype6-dev         libpng12-dev         libzmq3-dev         pkg-config         python         python-dev         rsync         software-properties-common         swig         unzip         zip         zlib1g-dev         &&     add-apt-repository -y ppa:openjdk-r/ppa &&     apt-get update && apt-get install -y --no-install-recommends         openjdk-8-jdk openjdk-8-jre-headless         &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2016-11-20T18:04:39.510389368Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c curl -fSsL https://bootstrap.pypa.io/get-pip.py | python &&     pip install --no-cache-dir         ipykernel         jupyter         matplotlib         numpy         scipy         sklearn         &&     python -m ipykernel.kernelspec"
                },
                {
                    "created": "2016-11-20T18:04:39.951147083Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop) COPY file:e0c7238ae4e538a661775594792bf0d1ea9f947ea01f38a468d69ae1abcdd95f in /root/.jupyter/ "
                },
                {
                    "created": "2016-11-20T18:04:40.123126498Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop) COPY file:02ce3596d15dc8db89ce583c5f76e7e36379774030a659c3e23b2d42f79c8ee6 in / "
                },
                {
                    "created": "2016-11-20T18:04:40.239086439Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop)  ENV BAZELRC=/root/.bazelrc",
                    "empty_layer": true
                },
                {
                    "created": "2016-11-20T18:04:40.359058371Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop)  ENV BAZEL_VERSION=0.3.2",
                    "empty_layer": true
                },
                {
                    "created": "2016-11-20T18:04:55.555744514Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c echo \"startup --batch\" >>/root/.bazelrc &&     echo \"build --spawn_strategy=standalone --genrule_strategy=standalone\" >>/root/.bazelrc &&     cd / &&     mkdir /bazel &&     cd /bazel &&     curl -fSsL -O https://github.com/bazelbuild/bazel/releases/download/$BAZEL_VERSION/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh &&     curl -fSsL -o /bazel/LICENSE.txt https://raw.githubusercontent.com/bazelbuild/bazel/master/LICENSE.txt &&     chmod +x bazel-*.sh &&     ./bazel-$BAZEL_VERSION-installer-linux-x86_64.sh &&     cd / &&     rm -f /bazel/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh"
                },
                {
                    "created": "2016-11-20T18:04:55.699002794Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop)  ENV LD_LIBRARY_PATH=/usr/local/cuda/extras/CUPTI/lib64:/usr/local/nvidia/lib:/usr/local/nvidia/lib64:",
                    "empty_layer": true
                },
                {
                    "created": "2016-11-20T18:04:55.842926972Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop)  ENV TF_NEED_CUDA=1",
                    "empty_layer": true
                },
                {
                    "created": "2016-11-20T18:04:55.967184395Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop)  ENV TF_CUDA_COMPUTE_CAPABILITIES=3.7,5.2",
                    "empty_layer": true
                },
                {
                    "created": "2016-11-20T18:30:50.276057374Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c cd / &&     git clone https://github.com/tensorflow/tensorflow.git &&     cd tensorflow &&     git checkout r0.11 &&     tensorflow/tools/ci_build/builds/configured GPU     bazel build -c opt --config=cuda tensorflow/tools/pip_package:build_pip_package &&     bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/pip &&     pip install --upgrade /tmp/pip/tensorflow-*.whl &&     rm -rf /tmp/pip &&     rm -rf /root/.cache"
                },
                {
                    "created": "2016-11-20T18:30:50.890931072Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 6006/tcp",
                    "empty_layer": true
                },
                {
                    "created": "2016-11-20T18:30:51.01902768Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8888/tcp",
                    "empty_layer": true
                },
                {
                    "created": "2016-11-20T18:30:51.143038798Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop)  WORKDIR /notebooks"
                },
                {
                    "created": "2016-11-20T18:30:51.266931615Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/run_jupyter.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2016-11-20T19:05:09.883077254Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop)  MAINTAINER Fred Park <https://github.com/Azure/batch-shipyard>",
                    "empty_layer": true
                },
                {
                    "created": "2016-11-20T19:05:10.115221528Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop) COPY file:f9d192962354de09a1bc694d3d322fce378fc25eaadf3f1d2cb0bae0e304bbac in /root/.ssh/config "
                },
                {
                    "created": "2016-11-20T19:05:49.169530889Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends         openssh-client         openssh-server     && apt-get clean     && rm -rf /var/lib/apt/lists/*     && mkdir /var/run/sshd     && ssh-keygen -A     && sed -i 's/PermitRootLogin without-password/PermitRootLogin yes/' /etc/ssh/sshd_config     && sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd     && ssh-keygen -f /root/.ssh/id_rsa -t rsa -N ''     && chmod 600 /root/.ssh/config     && chmod 700 /root/.ssh     && cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys"
                },
                {
                    "created": "2016-11-20T19:05:49.443220668Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop) COPY multi:7b7068c965118baca92a142044ab5889e84b1da789506572243640258b130303 in /sw/ "
                },
                {
                    "created": "2016-11-20T19:05:49.562986897Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 23/tcp",
                    "empty_layer": true
                },
                {
                    "created": "2016-11-20T19:05:49.711041861Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/usr/sbin/sshd\" \"-D\" \"-p\" \"23\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b257bb4b4aeaa5590b31c125581c301d69352345c09fe860a35de4c7cf212ae7",
                    "sha256:b290ed9f4e14da32eb9cbf0b3193577fe5b9f5ef97439940bfa5b75e9172c693",
                    "sha256:b6aa0652e3251e555aa012b5278df3ba1a02286dd7cbf451cc54744f11f047d2",
                    "sha256:e24c95bed6509393de8605699a09d1d7eee22a1ba5dfa93f8f55ff08ff578d7b",
                    "sha256:814604a03e94d40e68118a3f6c8d9b3a2036f15a5bdb2d72e9de15534672bece",
                    "sha256:a4c67a68849756dc0641f70ec9d716efd736bcee76138c8a1eca391dad63aa7c",
                    "sha256:99ec873bb084c75ff1f2f9cba650c74cd0fa8ed48f809902c6054698aa950a05",
                    "sha256:f4d0fba0953a55f2a4409d159bee47b24a0cf76f70704c25b54fb90d58fe0b55",
                    "sha256:c3753fa9a2875bf3499a7ba7f49f90304062124169485ea3301aaa48a262d2a0",
                    "sha256:2d32cdcce0935260503bdd1cf38dd4f2045d8082e8b44ea5999ffb71b7b0f951",
                    "sha256:21cce6fcb71be36feda760db6f5e3ca536807a54f59cb2aa5ab69f125f74664b",
                    "sha256:e273ef58a78f1e8c1e878de27ec80f77926630ec1e79ec4a8f50454d7f6d3a68",
                    "sha256:6e3dfc54c05c42363233e3f77e9304a5bdf8b8cdf1648c6bc7848d515203c4c2",
                    "sha256:9baabca017f707cf36c113c002f8cda40efac52c4ab9cf2dd2841637e3bbb917",
                    "sha256:a3d1e6924d7ee59ae7dd52f3dcbabb035346089f8c2ece36f43e4fd93178d496",
                    "sha256:d78708d034c8d13ceb7ba6fa33d5710d06e5e55ecd6437a06ead88712d5cea08",
                    "sha256:5acf4200f3d9c550308c9fc605112541a30bda58c9d47e73a642e843f77c343f",
                    "sha256:c1832ec0ddd15c32534e94ec7e1586faf86b92924617a34386cd0fc87709f9d2",
                    "sha256:8d390e1b2d41dc6f6e9221a3710c4cc1fea2bc3b3d6b27f662800e3d3ed9c4d0",
                    "sha256:218b984162315073113c4ed54e946c3ada4bc4ede0ae9f7f31fc32d9d9ce800d",
                    "sha256:24910231f59da291157823577f7f0405096610164d30d0b9e2cf5c569987bad9",
                    "sha256:37a7868471d2778e28182c3032cde8d3bf0decdb3e93188f37494034e183f30f"
                ]
            }
        },
        "0.11.0-gpu-base": {
            "architecture": "amd64",
            "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
            "config": {
                "Hostname": "2d7c95057d66",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "6006/tcp": {},
                    "8888/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CUDA_VERSION=8.0",
                    "CUDA_PKG_VERSION=8-0=8.0.44-1",
                    "LD_LIBRARY_PATH=/usr/local/cuda/extras/CUPTI/lib64:/usr/local/nvidia/lib:/usr/local/nvidia/lib64:",
                    "LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "CUDNN_VERSION=5",
                    "BAZELRC=/root/.bazelrc",
                    "BAZEL_VERSION=0.3.2",
                    "TF_NEED_CUDA=1",
                    "TF_CUDA_COMPUTE_CAPABILITIES=3.7,5.2"
                ],
                "Cmd": [
                    "/run_jupyter.sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b05544c0e179b42a89f6b15ff635d0f39b38a1eefd765e92f8697249b99854f6",
                "Volumes": null,
                "WorkingDir": "/notebooks",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {
                    "com.nvidia.cuda.version": "8.0",
                    "com.nvidia.cudnn.version": "5",
                    "com.nvidia.volumes.needed": "nvidia_driver"
                }
            },
            "container": "900fbb7ca21d5b48621a8cfa7392b17d6f560a154d1b6245aea4cff896cd277f",
            "container_config": {
                "Hostname": "2d7c95057d66",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "6006/tcp": {},
                    "8888/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CUDA_VERSION=8.0",
                    "CUDA_PKG_VERSION=8-0=8.0.44-1",
                    "LD_LIBRARY_PATH=/usr/local/cuda/extras/CUPTI/lib64:/usr/local/nvidia/lib:/usr/local/nvidia/lib64:",
                    "LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "CUDNN_VERSION=5",
                    "BAZELRC=/root/.bazelrc",
                    "BAZEL_VERSION=0.3.2",
                    "TF_NEED_CUDA=1",
                    "TF_CUDA_COMPUTE_CAPABILITIES=3.7,5.2"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/run_jupyter.sh\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b05544c0e179b42a89f6b15ff635d0f39b38a1eefd765e92f8697249b99854f6",
                "Volumes": null,
                "WorkingDir": "/notebooks",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {
                    "com.nvidia.cuda.version": "8.0",
                    "com.nvidia.cudnn.version": "5",
                    "com.nvidia.volumes.needed": "nvidia_driver"
                }
            },
            "created": "2016-11-20T18:30:51.266931615Z",
            "docker_version": "1.12.3",
            "history": [
                {
                    "created": "2016-11-16T20:57:47.651039681Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:79ae73b5e33a497a33c1664e8e7129548273ee9d6ac9336b6ec940808a22a781 in / "
                },
                {
                    "created": "2016-11-16T20:57:50.300607544Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2016-11-16T20:57:51.332259947Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2016-11-16T20:57:52.808160255Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2016-11-16T20:57:53.781622136Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2016-11-16T20:57:54.170783313Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2016-11-18T00:15:22.81368778Z",
                    "author": "NVIDIA CORPORATION <digits@nvidia.com>",
                    "created_by": "/bin/sh -c #(nop)  MAINTAINER NVIDIA CORPORATION <digits@nvidia.com>",
                    "empty_layer": true
                },
                {
                    "created": "2016-11-18T00:15:22.997744421Z",
                    "author": "NVIDIA CORPORATION <digits@nvidia.com>",
                    "created_by": "/bin/sh -c #(nop)  LABEL com.nvidia.volumes.needed=nvidia_driver",
                    "empty_layer": true
                },
                {
                    "created": "2016-11-18T00:15:30.850779253Z",
                    "author": "NVIDIA CORPORATION <digits@nvidia.com>",
                    "created_by": "/bin/sh -c NVIDIA_GPGKEY_SUM=d1be581509378368edeec8c1eb2958702feedf3bc3d17011adbf24efacce4ab5 &&     NVIDIA_GPGKEY_FPR=ae09fe4bbd223a84b2ccfce3f60f4b3d7fa2af80 &&     apt-key adv --fetch-keys http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1404/x86_64/7fa2af80.pub &&     apt-key adv --export --no-emit-version -a $NVIDIA_GPGKEY_FPR | tail -n +2 > cudasign.pub &&     echo \"$NVIDIA_GPGKEY_SUM  cudasign.pub\" | sha256sum -c --strict - && rm cudasign.pub &&     echo \"deb http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1404/x86_64 /\" > /etc/apt/sources.list.d/cuda.list"
                },
                {
                    "created": "2016-11-18T00:15:31.014870465Z",
                    "author": "NVIDIA CORPORATION <digits@nvidia.com>",
                    "created_by": "/bin/sh -c #(nop)  ENV CUDA_VERSION=8.0",
                    "empty_layer": true
                },
                {
                    "created": "2016-11-18T00:15:31.176929442Z",
                    "author": "NVIDIA CORPORATION <digits@nvidia.com>",
                    "created_by": "/bin/sh -c #(nop)  LABEL com.nvidia.cuda.version=8.0",
                    "empty_layer": true
                },
                {
                    "created": "2016-11-18T00:15:31.339543104Z",
                    "author": "NVIDIA CORPORATION <digits@nvidia.com>",
                    "created_by": "/bin/sh -c #(nop)  ENV CUDA_PKG_VERSION=8-0=8.0.44-1",
                    "empty_layer": true
                },
                {
                    "created": "2016-11-18T00:16:07.975614816Z",
                    "author": "NVIDIA CORPORATION <digits@nvidia.com>",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends         cuda-nvrtc-$CUDA_PKG_VERSION         cuda-nvgraph-$CUDA_PKG_VERSION         cuda-cusolver-$CUDA_PKG_VERSION         cuda-cublas-$CUDA_PKG_VERSION         cuda-cufft-$CUDA_PKG_VERSION         cuda-curand-$CUDA_PKG_VERSION         cuda-cusparse-$CUDA_PKG_VERSION         cuda-npp-$CUDA_PKG_VERSION         cuda-cudart-$CUDA_PKG_VERSION &&     ln -s cuda-$CUDA_VERSION /usr/local/cuda &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2016-11-18T00:16:08.685361394Z",
                    "author": "NVIDIA CORPORATION <digits@nvidia.com>",
                    "created_by": "/bin/sh -c echo \"/usr/local/cuda/lib\" >> /etc/ld.so.conf.d/cuda.conf &&     echo \"/usr/local/cuda/lib64\" >> /etc/ld.so.conf.d/cuda.conf &&     ldconfig"
                },
                {
                    "created": "2016-11-18T00:16:09.301815674Z",
                    "author": "NVIDIA CORPORATION <digits@nvidia.com>",
                    "created_by": "/bin/sh -c echo \"/usr/local/nvidia/lib\" >> /etc/ld.so.conf.d/nvidia.conf &&     echo \"/usr/local/nvidia/lib64\" >> /etc/ld.so.conf.d/nvidia.conf"
                },
                {
                    "created": "2016-11-18T00:16:09.461137936Z",
                    "author": "NVIDIA CORPORATION <digits@nvidia.com>",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2016-11-18T00:16:09.613282177Z",
                    "author": "NVIDIA CORPORATION <digits@nvidia.com>",
                    "created_by": "/bin/sh -c #(nop)  ENV LD_LIBRARY_PATH=/usr/local/nvidia/lib:/usr/local/nvidia/lib64:",
                    "empty_layer": true
                },
                {
                    "created": "2016-11-18T00:16:09.86176256Z",
                    "author": "NVIDIA CORPORATION <digits@nvidia.com>",
                    "created_by": "/bin/sh -c #(nop)  MAINTAINER NVIDIA CORPORATION <digits@nvidia.com>",
                    "empty_layer": true
                },
                {
                    "created": "2016-11-18T00:23:11.224215858Z",
                    "author": "NVIDIA CORPORATION <digits@nvidia.com>",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends         cuda-core-$CUDA_PKG_VERSION         cuda-misc-headers-$CUDA_PKG_VERSION         cuda-command-line-tools-$CUDA_PKG_VERSION         cuda-nvrtc-dev-$CUDA_PKG_VERSION         cuda-nvml-dev-$CUDA_PKG_VERSION         cuda-nvgraph-dev-$CUDA_PKG_VERSION         cuda-cusolver-dev-$CUDA_PKG_VERSION         cuda-cublas-dev-$CUDA_PKG_VERSION         cuda-cufft-dev-$CUDA_PKG_VERSION         cuda-curand-dev-$CUDA_PKG_VERSION         cuda-cusparse-dev-$CUDA_PKG_VERSION         cuda-npp-dev-$CUDA_PKG_VERSION         cuda-cudart-dev-$CUDA_PKG_VERSION         cuda-driver-dev-$CUDA_PKG_VERSION &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2016-11-18T00:23:11.545788402Z",
                    "author": "NVIDIA CORPORATION <digits@nvidia.com>",
                    "created_by": "/bin/sh -c #(nop)  ENV LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "empty_layer": true
                },
                {
                    "created": "2016-11-18T00:23:11.781796747Z",
                    "author": "NVIDIA CORPORATION <digits@nvidia.com>",
                    "created_by": "/bin/sh -c #(nop)  MAINTAINER NVIDIA CORPORATION <digits@nvidia.com>",
                    "empty_layer": true
                },
                {
                    "created": "2016-11-18T00:23:48.796595736Z",
                    "author": "NVIDIA CORPORATION <digits@nvidia.com>",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y         curl &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2016-11-18T00:23:48.97723503Z",
                    "author": "NVIDIA CORPORATION <digits@nvidia.com>",
                    "created_by": "/bin/sh -c #(nop)  ENV CUDNN_VERSION=5",
                    "empty_layer": true
                },
                {
                    "created": "2016-11-18T00:23:49.113051705Z",
                    "author": "NVIDIA CORPORATION <digits@nvidia.com>",
                    "created_by": "/bin/sh -c #(nop)  LABEL com.nvidia.cudnn.version=5",
                    "empty_layer": true
                },
                {
                    "created": "2016-11-18T00:24:14.434424364Z",
                    "author": "NVIDIA CORPORATION <digits@nvidia.com>",
                    "created_by": "/bin/sh -c CUDNN_DOWNLOAD_SUM=a87cb2df2e5e7cc0a05e266734e679ee1a2fadad6f06af82a76ed81a23b102c8 &&     curl -fsSL http://developer.download.nvidia.com/compute/redist/cudnn/v5.1/cudnn-8.0-linux-x64-v5.1.tgz -O &&     echo \"$CUDNN_DOWNLOAD_SUM  cudnn-8.0-linux-x64-v5.1.tgz\" | sha256sum -c --strict - &&     tar -xzf cudnn-8.0-linux-x64-v5.1.tgz -C /usr/local &&     rm cudnn-8.0-linux-x64-v5.1.tgz &&     ldconfig"
                },
                {
                    "created": "2016-11-20T17:39:10.343077231Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop)  MAINTAINER Fred Park <https://github.com/Azure/batch-shipyard>",
                    "empty_layer": true
                },
                {
                    "created": "2016-11-20T18:03:49.616741113Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends         build-essential         curl         git         libcurl3-dev         libfreetype6-dev         libpng12-dev         libzmq3-dev         pkg-config         python         python-dev         rsync         software-properties-common         swig         unzip         zip         zlib1g-dev         &&     add-apt-repository -y ppa:openjdk-r/ppa &&     apt-get update && apt-get install -y --no-install-recommends         openjdk-8-jdk openjdk-8-jre-headless         &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2016-11-20T18:04:39.510389368Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c curl -fSsL https://bootstrap.pypa.io/get-pip.py | python &&     pip install --no-cache-dir         ipykernel         jupyter         matplotlib         numpy         scipy         sklearn         &&     python -m ipykernel.kernelspec"
                },
                {
                    "created": "2016-11-20T18:04:39.951147083Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop) COPY file:e0c7238ae4e538a661775594792bf0d1ea9f947ea01f38a468d69ae1abcdd95f in /root/.jupyter/ "
                },
                {
                    "created": "2016-11-20T18:04:40.123126498Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop) COPY file:02ce3596d15dc8db89ce583c5f76e7e36379774030a659c3e23b2d42f79c8ee6 in / "
                },
                {
                    "created": "2016-11-20T18:04:40.239086439Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop)  ENV BAZELRC=/root/.bazelrc",
                    "empty_layer": true
                },
                {
                    "created": "2016-11-20T18:04:40.359058371Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop)  ENV BAZEL_VERSION=0.3.2",
                    "empty_layer": true
                },
                {
                    "created": "2016-11-20T18:04:55.555744514Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c echo \"startup --batch\" >>/root/.bazelrc &&     echo \"build --spawn_strategy=standalone --genrule_strategy=standalone\" >>/root/.bazelrc &&     cd / &&     mkdir /bazel &&     cd /bazel &&     curl -fSsL -O https://github.com/bazelbuild/bazel/releases/download/$BAZEL_VERSION/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh &&     curl -fSsL -o /bazel/LICENSE.txt https://raw.githubusercontent.com/bazelbuild/bazel/master/LICENSE.txt &&     chmod +x bazel-*.sh &&     ./bazel-$BAZEL_VERSION-installer-linux-x86_64.sh &&     cd / &&     rm -f /bazel/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh"
                },
                {
                    "created": "2016-11-20T18:04:55.699002794Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop)  ENV LD_LIBRARY_PATH=/usr/local/cuda/extras/CUPTI/lib64:/usr/local/nvidia/lib:/usr/local/nvidia/lib64:",
                    "empty_layer": true
                },
                {
                    "created": "2016-11-20T18:04:55.842926972Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop)  ENV TF_NEED_CUDA=1",
                    "empty_layer": true
                },
                {
                    "created": "2016-11-20T18:04:55.967184395Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop)  ENV TF_CUDA_COMPUTE_CAPABILITIES=3.7,5.2",
                    "empty_layer": true
                },
                {
                    "created": "2016-11-20T18:30:50.276057374Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c cd / &&     git clone https://github.com/tensorflow/tensorflow.git &&     cd tensorflow &&     git checkout r0.11 &&     tensorflow/tools/ci_build/builds/configured GPU     bazel build -c opt --config=cuda tensorflow/tools/pip_package:build_pip_package &&     bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/pip &&     pip install --upgrade /tmp/pip/tensorflow-*.whl &&     rm -rf /tmp/pip &&     rm -rf /root/.cache"
                },
                {
                    "created": "2016-11-20T18:30:50.890931072Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 6006/tcp",
                    "empty_layer": true
                },
                {
                    "created": "2016-11-20T18:30:51.01902768Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8888/tcp",
                    "empty_layer": true
                },
                {
                    "created": "2016-11-20T18:30:51.143038798Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop)  WORKDIR /notebooks"
                },
                {
                    "created": "2016-11-20T18:30:51.266931615Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/run_jupyter.sh\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b257bb4b4aeaa5590b31c125581c301d69352345c09fe860a35de4c7cf212ae7",
                    "sha256:b290ed9f4e14da32eb9cbf0b3193577fe5b9f5ef97439940bfa5b75e9172c693",
                    "sha256:b6aa0652e3251e555aa012b5278df3ba1a02286dd7cbf451cc54744f11f047d2",
                    "sha256:e24c95bed6509393de8605699a09d1d7eee22a1ba5dfa93f8f55ff08ff578d7b",
                    "sha256:814604a03e94d40e68118a3f6c8d9b3a2036f15a5bdb2d72e9de15534672bece",
                    "sha256:a4c67a68849756dc0641f70ec9d716efd736bcee76138c8a1eca391dad63aa7c",
                    "sha256:99ec873bb084c75ff1f2f9cba650c74cd0fa8ed48f809902c6054698aa950a05",
                    "sha256:f4d0fba0953a55f2a4409d159bee47b24a0cf76f70704c25b54fb90d58fe0b55",
                    "sha256:c3753fa9a2875bf3499a7ba7f49f90304062124169485ea3301aaa48a262d2a0",
                    "sha256:2d32cdcce0935260503bdd1cf38dd4f2045d8082e8b44ea5999ffb71b7b0f951",
                    "sha256:21cce6fcb71be36feda760db6f5e3ca536807a54f59cb2aa5ab69f125f74664b",
                    "sha256:e273ef58a78f1e8c1e878de27ec80f77926630ec1e79ec4a8f50454d7f6d3a68",
                    "sha256:6e3dfc54c05c42363233e3f77e9304a5bdf8b8cdf1648c6bc7848d515203c4c2",
                    "sha256:9baabca017f707cf36c113c002f8cda40efac52c4ab9cf2dd2841637e3bbb917",
                    "sha256:a3d1e6924d7ee59ae7dd52f3dcbabb035346089f8c2ece36f43e4fd93178d496",
                    "sha256:d78708d034c8d13ceb7ba6fa33d5710d06e5e55ecd6437a06ead88712d5cea08",
                    "sha256:5acf4200f3d9c550308c9fc605112541a30bda58c9d47e73a642e843f77c343f",
                    "sha256:c1832ec0ddd15c32534e94ec7e1586faf86b92924617a34386cd0fc87709f9d2",
                    "sha256:8d390e1b2d41dc6f6e9221a3710c4cc1fea2bc3b3d6b27f662800e3d3ed9c4d0"
                ]
            }
        },
        "1.0.0-cpu": {
            "architecture": "amd64",
            "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
            "config": {
                "Hostname": "afef2623e56c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "23/tcp": {},
                    "6006/tcp": {},
                    "8888/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/usr/sbin/sshd",
                    "-D",
                    "-p",
                    "23"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:40e17ab8469ce621784ce27686db244c8618f07587e220b6e56c9ea6e2dabc4c",
                "Volumes": null,
                "WorkingDir": "/notebooks",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "container": "850b676de07e0330594cd1f4ef798e75f59fd77d3b1c8c23a60bd009dc13c962",
            "container_config": {
                "Hostname": "afef2623e56c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "23/tcp": {},
                    "6006/tcp": {},
                    "8888/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/usr/sbin/sshd\" \"-D\" \"-p\" \"23\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:40e17ab8469ce621784ce27686db244c8618f07587e220b6e56c9ea6e2dabc4c",
                "Volumes": null,
                "WorkingDir": "/notebooks",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2017-02-17T21:05:37.710180994Z",
            "docker_version": "1.13.1",
            "history": [
                {
                    "created": "2016-10-13T21:13:01.438134224Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bc2e0eb31424a88aadc42486b6762c321e3457527daa43bcad45819d38c3a2ed in / "
                },
                {
                    "created": "2016-10-13T21:13:02.70997358Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2016-10-13T21:13:03.638737787Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2016-10-13T21:13:04.957317149Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2016-10-13T21:13:05.870189842Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2016-10-13T21:13:06.201891855Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-02-12T00:02:52.411783236Z",
                    "author": "Craig Citro <craigcitro@google.com>",
                    "created_by": "/bin/sh -c #(nop)  MAINTAINER Craig Citro <craigcitro@google.com>",
                    "empty_layer": true
                },
                {
                    "created": "2017-02-12T00:03:53.846235073Z",
                    "author": "Craig Citro <craigcitro@google.com>",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends         build-essential         curl         libfreetype6-dev         libpng12-dev         libzmq3-dev         pkg-config         python         python-dev         rsync         software-properties-common         unzip         &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-02-12T00:04:23.956516793Z",
                    "author": "Craig Citro <craigcitro@google.com>",
                    "created_by": "/bin/sh -c curl -O https://bootstrap.pypa.io/get-pip.py &&     python get-pip.py &&     rm get-pip.py"
                },
                {
                    "created": "2017-02-12T00:05:22.737061139Z",
                    "author": "Craig Citro <craigcitro@google.com>",
                    "created_by": "/bin/sh -c pip --no-cache-dir install         ipykernel         jupyter         matplotlib         numpy         scipy         sklearn         Pillow         &&     python -m ipykernel.kernelspec"
                },
                {
                    "created": "2017-02-12T00:05:40.860741042Z",
                    "author": "Craig Citro <craigcitro@google.com>",
                    "created_by": "/bin/sh -c pip --no-cache-dir install http://ci.tensorflow.org/view/Release/job/release-matrix-cpu/TF_BUILD_CONTAINER_TYPE=CPU,TF_BUILD_IS_OPT=OPT,TF_BUILD_IS_PIP=PIP,TF_BUILD_PYTHON_VERSION=PYTHON2,label=cpu-slave/lastSuccessfulBuild/artifact/pip_test/whl/tensorflow-1.0.0-cp27-cp27mu-manylinux1_x86_64.whl"
                },
                {
                    "created": "2017-02-12T00:05:47.129675119Z",
                    "author": "Craig Citro <craigcitro@google.com>",
                    "created_by": "/bin/sh -c #(nop) COPY file:822af972b63c441e3a61eb98118da21f4767bc038349d21719ae254bd82947e7 in /root/.jupyter/ "
                },
                {
                    "created": "2017-02-12T00:05:53.454037041Z",
                    "author": "Craig Citro <craigcitro@google.com>",
                    "created_by": "/bin/sh -c #(nop) COPY dir:2e2cc85c2b8caa7b4b867ab50d6b1c0ab8e84032d1121425291c63b674f172e9 in /notebooks "
                },
                {
                    "created": "2017-02-12T00:06:02.485438613Z",
                    "author": "Craig Citro <craigcitro@google.com>",
                    "created_by": "/bin/sh -c #(nop) COPY file:5485384c641ba7bf763511ad514a0634b4fae9a859906153e69f4c136bb34d41 in / "
                },
                {
                    "created": "2017-02-12T00:06:17.361201428Z",
                    "author": "Craig Citro <craigcitro@google.com>",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 6006/tcp",
                    "empty_layer": true
                },
                {
                    "created": "2017-02-12T00:06:27.767759589Z",
                    "author": "Craig Citro <craigcitro@google.com>",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8888/tcp",
                    "empty_layer": true
                },
                {
                    "created": "2017-02-12T00:06:32.547866979Z",
                    "author": "Craig Citro <craigcitro@google.com>",
                    "created_by": "/bin/sh -c #(nop)  WORKDIR /notebooks",
                    "empty_layer": true
                },
                {
                    "created": "2017-02-12T00:06:37.351893075Z",
                    "author": "Craig Citro <craigcitro@google.com>",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/run_jupyter.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-02-16T16:19:35.219923846Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop)  MAINTAINER Fred Park <https://github.com/Azure/batch-shipyard>",
                    "empty_layer": true
                },
                {
                    "created": "2017-02-16T16:19:42.256476206Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop) COPY file:f9d192962354de09a1bc694d3d322fce378fc25eaadf3f1d2cb0bae0e304bbac in /root/.ssh/config "
                },
                {
                    "created": "2017-02-17T21:05:17.527308425Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends         openssh-client         openssh-server         iproute2     && apt-get clean     && rm -rf /var/lib/apt/lists/*     && mkdir /var/run/sshd     && ssh-keygen -A     && sed -i 's/PermitRootLogin without-password/PermitRootLogin yes/' /etc/ssh/sshd_config     && sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd     && ssh-keygen -f /root/.ssh/id_rsa -t rsa -N ''     && chmod 600 /root/.ssh/config     && chmod 700 /root/.ssh     && cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys"
                },
                {
                    "created": "2017-02-17T21:05:23.677321162Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop) COPY multi:3bff3f2a250484d0a989b0d71c9f88fdd4fd76f5aec7942417378232953f85ab in /sw/ "
                },
                {
                    "created": "2017-02-17T21:05:29.840866175Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 23/tcp",
                    "empty_layer": true
                },
                {
                    "created": "2017-02-17T21:05:37.710180994Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/usr/sbin/sshd\" \"-D\" \"-p\" \"23\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a85f35566a268e6f4411c5157ffcffe4f5918b068b04d79fdd80003901ca39da",
                    "sha256:eaaf7298332642da0f8190fa4b96ad46c04b9c1d1682bc3a35d77bded2b1e0a9",
                    "sha256:33a212e8aa5642d3a2ddead146e85912407fc5bbb2a896dab11fcf329177a999",
                    "sha256:f1f25d8c6e56dc4891df147a77f57e756873b57f33ce95e6a0acbe47117c0c8a",
                    "sha256:67852b7d2cf5f0885293fa9df91ebfd8ef0c42ba11a5155f94806f3a96c5e916",
                    "sha256:dcb0270334089a581d3509913f41bf120542149289830ada3e789d4dbab8f899",
                    "sha256:1ab5caaa7176b68752a9d2b916d3be7048677c65b4e902fdbeb005786dbe2e16",
                    "sha256:831ab422bc8a1e21d466be8280fa6db42c5bac19bd296d597a12629a6f336fe9",
                    "sha256:0a459c4d1bf26109f0be1a07b517dcf6805ad8c76e6e81e799945641fbb44da9",
                    "sha256:088e4bb123316de25aca4c04de80dfb13c066d084c47e9b053d1bce65768f3fe",
                    "sha256:012c3e1edec65eeda3b77c506ff7479649a38fed4c84adc0ce7b82df2ebca29f",
                    "sha256:7c731a9406358c7f76b16ddae7a8af8ec36ce05a91a85a5fe342ad28d631801d",
                    "sha256:5b280673520ae45843821d6099b447b63f518ff4c24016e21740a8c01320a808",
                    "sha256:e183ff2dadd8a0a188bbc2a2b8f601852b88e8f926ce6a13f6de918bb7b2f654",
                    "sha256:9e31199c53e7f35be084ea9becbfe0809f867d6f93496f0e02bfdb5ac21b483e"
                ]
            }
        },
        "1.0.0-gpu": {
            "architecture": "amd64",
            "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
            "config": {
                "Hostname": "e7eddde82bec",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "23/tcp": {},
                    "6006/tcp": {},
                    "8888/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CUDA_VERSION=8.0",
                    "CUDA_PKG_VERSION=8-0=8.0.61-1",
                    "LD_LIBRARY_PATH=/usr/local/cuda/extras/CUPTI/lib64:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "CUDNN_VERSION=5",
                    "BAZELRC=/root/.bazelrc",
                    "BAZEL_VERSION=0.4.2",
                    "CI_BUILD_PYTHON=python",
                    "TF_NEED_CUDA=1",
                    "TF_CUDA_COMPUTE_CAPABILITIES=3.0,3.5,3.7,5.2"
                ],
                "Cmd": [
                    "/usr/sbin/sshd",
                    "-D",
                    "-p",
                    "23"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:5ad092a88a8a2b3cb0dc4bcc5f8787bf26de784333bd6552181a3fb36e0d4747",
                "Volumes": null,
                "WorkingDir": "/root",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {
                    "com.nvidia.build.id": "10473905",
                    "com.nvidia.build.ref": "3052cba66deff8aa48fb79d87fd14da5b2f72022",
                    "com.nvidia.cuda.version": "8.0",
                    "com.nvidia.cudnn.version": "5",
                    "com.nvidia.volumes.needed": "nvidia_driver",
                    "maintainer": "NVIDIA CORPORATION <cudatools@nvidia.com>"
                }
            },
            "container": "4605b5da5f844543918fc493ca07c15bfa3d08a77e57104f6f8bc031a3dc8e1f",
            "container_config": {
                "Hostname": "e7eddde82bec",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "23/tcp": {},
                    "6006/tcp": {},
                    "8888/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CUDA_VERSION=8.0",
                    "CUDA_PKG_VERSION=8-0=8.0.61-1",
                    "LD_LIBRARY_PATH=/usr/local/cuda/extras/CUPTI/lib64:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "CUDNN_VERSION=5",
                    "BAZELRC=/root/.bazelrc",
                    "BAZEL_VERSION=0.4.2",
                    "CI_BUILD_PYTHON=python",
                    "TF_NEED_CUDA=1",
                    "TF_CUDA_COMPUTE_CAPABILITIES=3.0,3.5,3.7,5.2"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/usr/sbin/sshd\" \"-D\" \"-p\" \"23\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:5ad092a88a8a2b3cb0dc4bcc5f8787bf26de784333bd6552181a3fb36e0d4747",
                "Volumes": null,
                "WorkingDir": "/root",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {
                    "com.nvidia.build.id": "10473905",
                    "com.nvidia.build.ref": "3052cba66deff8aa48fb79d87fd14da5b2f72022",
                    "com.nvidia.cuda.version": "8.0",
                    "com.nvidia.cudnn.version": "5",
                    "com.nvidia.volumes.needed": "nvidia_driver",
                    "maintainer": "NVIDIA CORPORATION <cudatools@nvidia.com>"
                }
            },
            "created": "2017-02-17T20:57:41.586662793Z",
            "docker_version": "1.13.1",
            "history": [
                {
                    "created": "2017-01-20T21:43:23.747537902Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:68f83d996c38a09c0ffbfd8b5b49c87fd39ec085992a00de3a27a820eb5d9383 in / "
                },
                {
                    "created": "2017-01-20T21:43:38.544258706Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2017-01-20T21:43:40.020403765Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-01-20T21:43:54.043690682Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2017-01-20T21:43:55.471877709Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2017-01-20T21:44:07.761052116Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-02-14T17:37:50.272438391Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NVIDIA CORPORATION <cudatools@nvidia.com>",
                    "empty_layer": true
                },
                {
                    "created": "2017-02-14T17:37:55.627132362Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL com.nvidia.volumes.needed=nvidia_driver",
                    "empty_layer": true
                },
                {
                    "created": "2017-02-14T17:38:02.401468059Z",
                    "created_by": "/bin/sh -c NVIDIA_GPGKEY_SUM=d1be581509378368edeec8c1eb2958702feedf3bc3d17011adbf24efacce4ab5 &&     NVIDIA_GPGKEY_FPR=ae09fe4bbd223a84b2ccfce3f60f4b3d7fa2af80 &&     apt-key adv --fetch-keys http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64/7fa2af80.pub &&     apt-key adv --export --no-emit-version -a $NVIDIA_GPGKEY_FPR | tail -n +5 > cudasign.pub &&     echo \"$NVIDIA_GPGKEY_SUM  cudasign.pub\" | sha256sum -c --strict - && rm cudasign.pub &&     echo \"deb http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64 /\" > /etc/apt/sources.list.d/cuda.list"
                },
                {
                    "created": "2017-02-14T17:38:08.120115748Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CUDA_VERSION=8.0",
                    "empty_layer": true
                },
                {
                    "created": "2017-02-14T17:38:14.611328605Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL com.nvidia.cuda.version=8.0",
                    "empty_layer": true
                },
                {
                    "created": "2017-02-14T17:38:19.545991501Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CUDA_PKG_VERSION=8-0=8.0.61-1",
                    "empty_layer": true
                },
                {
                    "created": "2017-02-14T17:40:02.396453399Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends         cuda-nvrtc-$CUDA_PKG_VERSION         cuda-nvgraph-$CUDA_PKG_VERSION         cuda-cusolver-$CUDA_PKG_VERSION         cuda-cublas-$CUDA_PKG_VERSION         cuda-cufft-$CUDA_PKG_VERSION         cuda-curand-$CUDA_PKG_VERSION         cuda-cusparse-$CUDA_PKG_VERSION         cuda-npp-$CUDA_PKG_VERSION         cuda-cudart-$CUDA_PKG_VERSION &&     ln -s cuda-$CUDA_VERSION /usr/local/cuda &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-02-14T17:40:39.409757973Z",
                    "created_by": "/bin/sh -c echo \"/usr/local/cuda/lib64\" >> /etc/ld.so.conf.d/cuda.conf &&     ldconfig"
                },
                {
                    "created": "2017-02-14T17:41:20.353658873Z",
                    "created_by": "/bin/sh -c echo \"/usr/local/nvidia/lib\" >> /etc/ld.so.conf.d/nvidia.conf &&     echo \"/usr/local/nvidia/lib64\" >> /etc/ld.so.conf.d/nvidia.conf"
                },
                {
                    "created": "2017-02-14T17:41:59.214906588Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2017-02-14T17:42:26.542830923Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LD_LIBRARY_PATH=/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "empty_layer": true
                },
                {
                    "created": "2017-02-14T17:42:54.448817359Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL com.nvidia.build.id=10473905 com.nvidia.build.ref=3052cba66deff8aa48fb79d87fd14da5b2f72022",
                    "empty_layer": true
                },
                {
                    "created": "2017-02-14T17:43:22.616957176Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NVIDIA CORPORATION <cudatools@nvidia.com>",
                    "empty_layer": true
                },
                {
                    "created": "2017-02-14T17:46:31.983765238Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends         cuda-core-$CUDA_PKG_VERSION         cuda-misc-headers-$CUDA_PKG_VERSION         cuda-command-line-tools-$CUDA_PKG_VERSION         cuda-nvrtc-dev-$CUDA_PKG_VERSION         cuda-nvml-dev-$CUDA_PKG_VERSION         cuda-nvgraph-dev-$CUDA_PKG_VERSION         cuda-cusolver-dev-$CUDA_PKG_VERSION         cuda-cublas-dev-$CUDA_PKG_VERSION         cuda-cufft-dev-$CUDA_PKG_VERSION         cuda-curand-dev-$CUDA_PKG_VERSION         cuda-cusparse-dev-$CUDA_PKG_VERSION         cuda-npp-dev-$CUDA_PKG_VERSION         cuda-cudart-dev-$CUDA_PKG_VERSION         cuda-driver-dev-$CUDA_PKG_VERSION &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-02-14T17:48:31.36059021Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "empty_layer": true
                },
                {
                    "created": "2017-02-14T18:01:05.215621843Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NVIDIA CORPORATION <cudatools@nvidia.com>",
                    "empty_layer": true
                },
                {
                    "created": "2017-02-14T18:02:53.373176572Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends         curl &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-02-14T18:04:57.093029328Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CUDNN_VERSION=5",
                    "empty_layer": true
                },
                {
                    "created": "2017-02-14T18:07:00.30960779Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL com.nvidia.cudnn.version=5",
                    "empty_layer": true
                },
                {
                    "created": "2017-02-14T18:08:52.955100549Z",
                    "created_by": "/bin/sh -c CUDNN_DOWNLOAD_SUM=c10719b36f2dd6e9ddc63e3189affaa1a94d7d027e63b71c3f64d449ab0645ce &&     curl -fsSL http://developer.download.nvidia.com/compute/redist/cudnn/v5.1/cudnn-8.0-linux-x64-v5.1.tgz -O &&     echo \"$CUDNN_DOWNLOAD_SUM  cudnn-8.0-linux-x64-v5.1.tgz\" | sha256sum -c --strict - &&     tar -xzf cudnn-8.0-linux-x64-v5.1.tgz -C /usr/local &&     rm cudnn-8.0-linux-x64-v5.1.tgz &&     ldconfig"
                },
                {
                    "created": "2017-02-16T20:43:27.768908489Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop)  MAINTAINER Fred Park <https://github.com/Azure/batch-shipyard>",
                    "empty_layer": true
                },
                {
                    "created": "2017-02-16T20:46:30.836472653Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends         build-essential         curl         git         libcurl3-dev         libfreetype6-dev         libpng12-dev         libzmq3-dev         pkg-config         python-dev         rsync         software-properties-common         unzip         zip         zlib1g-dev         &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-02-16T20:46:52.349436121Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c curl -fSsL -O https://bootstrap.pypa.io/get-pip.py &&     python get-pip.py &&     rm get-pip.py"
                },
                {
                    "created": "2017-02-16T20:47:59.547952827Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c pip --no-cache-dir install         ipykernel         jupyter         matplotlib         numpy         scipy         sklearn         &&     python -m ipykernel.kernelspec"
                },
                {
                    "created": "2017-02-16T20:48:08.038526239Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop) COPY file:e0c7238ae4e538a661775594792bf0d1ea9f947ea01f38a468d69ae1abcdd95f in /root/.jupyter/ "
                },
                {
                    "created": "2017-02-16T20:48:13.022045726Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop) COPY file:02ce3596d15dc8db89ce583c5f76e7e36379774030a659c3e23b2d42f79c8ee6 in / "
                },
                {
                    "created": "2017-02-16T20:53:27.566594677Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c add-apt-repository -y ppa:openjdk-r/ppa &&     apt-get update &&     apt-get install -y --no-install-recommends openjdk-8-jdk openjdk-8-jre-headless &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-02-16T20:53:37.407804293Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c echo \"startup --batch\" >>/root/.bazelrc"
                },
                {
                    "created": "2017-02-16T20:53:44.915852522Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c echo \"build --spawn_strategy=standalone --genrule_strategy=standalone\"     >>/root/.bazelrc"
                },
                {
                    "created": "2017-02-16T20:53:50.232115801Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop)  ENV BAZELRC=/root/.bazelrc",
                    "empty_layer": true
                },
                {
                    "created": "2017-02-16T20:53:56.774548346Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop)  ENV BAZEL_VERSION=0.4.2",
                    "empty_layer": true
                },
                {
                    "created": "2017-02-16T20:54:03.590572882Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /",
                    "empty_layer": true
                },
                {
                    "created": "2017-02-16T20:54:22.44843883Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c mkdir /bazel &&     cd /bazel &&     curl -fSsL -O https://github.com/bazelbuild/bazel/releases/download/$BAZEL_VERSION/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh &&     curl -fSsL -o /bazel/LICENSE.txt https://raw.githubusercontent.com/bazelbuild/bazel/master/LICENSE.txt &&     chmod +x bazel-*.sh &&     ./bazel-$BAZEL_VERSION-installer-linux-x86_64.sh &&     cd / &&     rm -f /bazel/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh"
                },
                {
                    "created": "2017-02-16T20:54:47.05602846Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c git clone https://github.com/tensorflow/tensorflow.git &&     cd tensorflow &&     git checkout r1.0"
                },
                {
                    "created": "2017-02-16T20:54:54.556094222Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /tensorflow",
                    "empty_layer": true
                },
                {
                    "created": "2017-02-16T20:55:02.260291088Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop)  ENV CI_BUILD_PYTHON=python",
                    "empty_layer": true
                },
                {
                    "created": "2017-02-16T20:55:10.247480689Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop)  ENV LD_LIBRARY_PATH=/usr/local/cuda/extras/CUPTI/lib64:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "empty_layer": true
                },
                {
                    "created": "2017-02-16T20:55:18.405640325Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop)  ENV TF_NEED_CUDA=1",
                    "empty_layer": true
                },
                {
                    "created": "2017-02-16T20:55:26.173064043Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop)  ENV TF_CUDA_COMPUTE_CAPABILITIES=3.0,3.5,3.7,5.2",
                    "empty_layer": true
                },
                {
                    "created": "2017-02-16T21:47:23.834224398Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c tensorflow/tools/ci_build/builds/configured GPU     bazel build -c opt --config=cuda tensorflow/tools/pip_package:build_pip_package &&     bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/pip &&     pip --no-cache-dir install --upgrade /tmp/pip/tensorflow-*.whl &&     rm -rf /tmp/pip &&     rm -rf /root/.cache"
                },
                {
                    "created": "2017-02-16T21:47:36.700791249Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /root",
                    "empty_layer": true
                },
                {
                    "created": "2017-02-16T21:47:45.413349953Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 6006/tcp",
                    "empty_layer": true
                },
                {
                    "created": "2017-02-16T21:47:54.35038589Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8888/tcp",
                    "empty_layer": true
                },
                {
                    "created": "2017-02-16T21:48:05.438000481Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/bash",
                    "empty_layer": true
                },
                {
                    "created": "2017-02-17T17:12:12.81330397Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop)  MAINTAINER Fred Park <https://github.com/Azure/batch-shipyard>",
                    "empty_layer": true
                },
                {
                    "created": "2017-02-17T17:12:21.961780627Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop) COPY file:f9d192962354de09a1bc694d3d322fce378fc25eaadf3f1d2cb0bae0e304bbac in /root/.ssh/config "
                },
                {
                    "created": "2017-02-17T19:26:20.579320507Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends         openssh-client         openssh-server         iproute2     && apt-get clean     && rm -rf /var/lib/apt/lists/*     && mkdir /var/run/sshd     && ssh-keygen -A     && sed -i 's/PermitRootLogin without-password/PermitRootLogin yes/' /etc/ssh/sshd_config     && sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd     && ssh-keygen -f /root/.ssh/id_rsa -t rsa -N ''     && chmod 600 /root/.ssh/config     && chmod 700 /root/.ssh     && cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys"
                },
                {
                    "created": "2017-02-17T20:57:25.161797516Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop) COPY multi:989288b38049426770db7cc2b91d803fff702485aad25967aef0b07e93307996 in /sw/ "
                },
                {
                    "created": "2017-02-17T20:57:32.236965522Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 23/tcp",
                    "empty_layer": true
                },
                {
                    "created": "2017-02-17T20:57:41.586662793Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/usr/sbin/sshd\" \"-D\" \"-p\" \"23\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4f03495a4d7de505ccb8b8e4cfd0a8ac201491e1f67ae54b65584e0012aaab9c",
                    "sha256:59f161c3069d1520deabd5823f48146232909b35573a26b9c43c63300dd814b0",
                    "sha256:af605e724c5ab75671f9d21e708cff705ada13a2d1f248dd9b9d998ea35d38c8",
                    "sha256:d195a7a18c704692929ebea51f235431042a294a42f2c4910b480b1e1d710cf1",
                    "sha256:5eb5bd4c5014f8aec0e909341c163d4c44baf750e31691e7c8fdc2beb6c55de9",
                    "sha256:77e11969c3ba3d0405f0bb675e601c836e5a75df263bba274dfe5f5426fc4247",
                    "sha256:1e372b1f9e18687b6f8428e1118d75e28291962a1bbf714155113b2c0aa176ab",
                    "sha256:511859354421ca9193b27db568135f45e798d6ff46b3a4b1f0b54815510be22e",
                    "sha256:65ebe9011e0a73046529ef47edf268b4644ec6d50a8ee6b984095b4e6288f047",
                    "sha256:da5089a08875316717c29164c8b247cef0850df1250b365e8c985ec838e6d988",
                    "sha256:b0f179dffee3597f52208a0755c50dfecd05f6229b9863b714ce2b38c54aa813",
                    "sha256:467cbad459fbdc1485f0b7386328d44de99321a33968658588948d5fc6d53ca5",
                    "sha256:d0b5658124dbd3385b6c7d7ff0408613d95f6749caef30b8fc5a3998c1ab2b9f",
                    "sha256:9b58d21599120ca4a9cf293260d65cca29891ac454c8fe0dd19082376f6e3595",
                    "sha256:22ebc83c902fca12e042e8f80f7eefd81490fe103caa5b1eebbc3fce1e69cd90",
                    "sha256:a93f6a9ffb6e55e4dca5ef9d3c19d25145625045521b72f05e81824af4a29752",
                    "sha256:d7c63e9f08d82adafce29ea61a129d3bc31af43ca11d38f8ea49d931c43feca0",
                    "sha256:79d1cb2c742af1e8631a7b4082922c7acd53ccb8d0c64360774538978f78a0ec",
                    "sha256:3d57e2a1114ca189568df5c3dcd30ac960c4494b9671416f1d86935b400297ba",
                    "sha256:d78d99cbeeadde1a58bf544546cad982706ed2f651859e083985fbf0e0ff78ad",
                    "sha256:9e5cdc2b09ba1858453a996d9c0007e69cc4c4d6f4cbfd0822da529f5bc9dad2",
                    "sha256:ddf88605b0c28a8ba822585a686f0857488c250bd699197904e48bae9914fb14",
                    "sha256:b15019bef3b6cd8d86361b5b24b5bcfe4c7a2d2c85eb4e57375125bbf3514634",
                    "sha256:803aeb5519168edffc20f11858ea48de46673534e5d67e84ceb7ae5ecbfc6295",
                    "sha256:e940591016199675b5bfea6758e2ffbe65059e5bd6fafb12ba25407c7ca009e6",
                    "sha256:192cdf2f4739eb8f35ec0d43bd4667bb9fa72c367a3818fd78dd862e4b3bbda3"
                ]
            }
        },
        "1.0.0-gpu-base": {
            "architecture": "amd64",
            "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
            "config": {
                "Hostname": "e7eddde82bec",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "6006/tcp": {},
                    "8888/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CUDA_VERSION=8.0",
                    "CUDA_PKG_VERSION=8-0=8.0.61-1",
                    "LD_LIBRARY_PATH=/usr/local/cuda/extras/CUPTI/lib64:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "CUDNN_VERSION=5",
                    "BAZELRC=/root/.bazelrc",
                    "BAZEL_VERSION=0.4.2",
                    "CI_BUILD_PYTHON=python",
                    "TF_NEED_CUDA=1",
                    "TF_CUDA_COMPUTE_CAPABILITIES=3.0,3.5,3.7,5.2"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d32791c552162e431d779c06d802cb68675dfc6eea2f3c32623f621b48f5891a",
                "Volumes": null,
                "WorkingDir": "/root",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {
                    "com.nvidia.build.id": "10473905",
                    "com.nvidia.build.ref": "3052cba66deff8aa48fb79d87fd14da5b2f72022",
                    "com.nvidia.cuda.version": "8.0",
                    "com.nvidia.cudnn.version": "5",
                    "com.nvidia.volumes.needed": "nvidia_driver",
                    "maintainer": "NVIDIA CORPORATION <cudatools@nvidia.com>"
                }
            },
            "container": "2733ecbd4dc57617c194536953f60a54c947e62d99b1bb5b2875a0c5cdd1d74d",
            "container_config": {
                "Hostname": "e7eddde82bec",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "6006/tcp": {},
                    "8888/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CUDA_VERSION=8.0",
                    "CUDA_PKG_VERSION=8-0=8.0.61-1",
                    "LD_LIBRARY_PATH=/usr/local/cuda/extras/CUPTI/lib64:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "CUDNN_VERSION=5",
                    "BAZELRC=/root/.bazelrc",
                    "BAZEL_VERSION=0.4.2",
                    "CI_BUILD_PYTHON=python",
                    "TF_NEED_CUDA=1",
                    "TF_CUDA_COMPUTE_CAPABILITIES=3.0,3.5,3.7,5.2"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d32791c552162e431d779c06d802cb68675dfc6eea2f3c32623f621b48f5891a",
                "Volumes": null,
                "WorkingDir": "/root",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {
                    "com.nvidia.build.id": "10473905",
                    "com.nvidia.build.ref": "3052cba66deff8aa48fb79d87fd14da5b2f72022",
                    "com.nvidia.cuda.version": "8.0",
                    "com.nvidia.cudnn.version": "5",
                    "com.nvidia.volumes.needed": "nvidia_driver",
                    "maintainer": "NVIDIA CORPORATION <cudatools@nvidia.com>"
                }
            },
            "created": "2017-02-16T21:48:05.438000481Z",
            "docker_version": "1.13.1",
            "history": [
                {
                    "created": "2017-01-20T21:43:23.747537902Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:68f83d996c38a09c0ffbfd8b5b49c87fd39ec085992a00de3a27a820eb5d9383 in / "
                },
                {
                    "created": "2017-01-20T21:43:38.544258706Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2017-01-20T21:43:40.020403765Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-01-20T21:43:54.043690682Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2017-01-20T21:43:55.471877709Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2017-01-20T21:44:07.761052116Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-02-14T17:37:50.272438391Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NVIDIA CORPORATION <cudatools@nvidia.com>",
                    "empty_layer": true
                },
                {
                    "created": "2017-02-14T17:37:55.627132362Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL com.nvidia.volumes.needed=nvidia_driver",
                    "empty_layer": true
                },
                {
                    "created": "2017-02-14T17:38:02.401468059Z",
                    "created_by": "/bin/sh -c NVIDIA_GPGKEY_SUM=d1be581509378368edeec8c1eb2958702feedf3bc3d17011adbf24efacce4ab5 &&     NVIDIA_GPGKEY_FPR=ae09fe4bbd223a84b2ccfce3f60f4b3d7fa2af80 &&     apt-key adv --fetch-keys http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64/7fa2af80.pub &&     apt-key adv --export --no-emit-version -a $NVIDIA_GPGKEY_FPR | tail -n +5 > cudasign.pub &&     echo \"$NVIDIA_GPGKEY_SUM  cudasign.pub\" | sha256sum -c --strict - && rm cudasign.pub &&     echo \"deb http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64 /\" > /etc/apt/sources.list.d/cuda.list"
                },
                {
                    "created": "2017-02-14T17:38:08.120115748Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CUDA_VERSION=8.0",
                    "empty_layer": true
                },
                {
                    "created": "2017-02-14T17:38:14.611328605Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL com.nvidia.cuda.version=8.0",
                    "empty_layer": true
                },
                {
                    "created": "2017-02-14T17:38:19.545991501Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CUDA_PKG_VERSION=8-0=8.0.61-1",
                    "empty_layer": true
                },
                {
                    "created": "2017-02-14T17:40:02.396453399Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends         cuda-nvrtc-$CUDA_PKG_VERSION         cuda-nvgraph-$CUDA_PKG_VERSION         cuda-cusolver-$CUDA_PKG_VERSION         cuda-cublas-$CUDA_PKG_VERSION         cuda-cufft-$CUDA_PKG_VERSION         cuda-curand-$CUDA_PKG_VERSION         cuda-cusparse-$CUDA_PKG_VERSION         cuda-npp-$CUDA_PKG_VERSION         cuda-cudart-$CUDA_PKG_VERSION &&     ln -s cuda-$CUDA_VERSION /usr/local/cuda &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-02-14T17:40:39.409757973Z",
                    "created_by": "/bin/sh -c echo \"/usr/local/cuda/lib64\" >> /etc/ld.so.conf.d/cuda.conf &&     ldconfig"
                },
                {
                    "created": "2017-02-14T17:41:20.353658873Z",
                    "created_by": "/bin/sh -c echo \"/usr/local/nvidia/lib\" >> /etc/ld.so.conf.d/nvidia.conf &&     echo \"/usr/local/nvidia/lib64\" >> /etc/ld.so.conf.d/nvidia.conf"
                },
                {
                    "created": "2017-02-14T17:41:59.214906588Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2017-02-14T17:42:26.542830923Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LD_LIBRARY_PATH=/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "empty_layer": true
                },
                {
                    "created": "2017-02-14T17:42:54.448817359Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL com.nvidia.build.id=10473905 com.nvidia.build.ref=3052cba66deff8aa48fb79d87fd14da5b2f72022",
                    "empty_layer": true
                },
                {
                    "created": "2017-02-14T17:43:22.616957176Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NVIDIA CORPORATION <cudatools@nvidia.com>",
                    "empty_layer": true
                },
                {
                    "created": "2017-02-14T17:46:31.983765238Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends         cuda-core-$CUDA_PKG_VERSION         cuda-misc-headers-$CUDA_PKG_VERSION         cuda-command-line-tools-$CUDA_PKG_VERSION         cuda-nvrtc-dev-$CUDA_PKG_VERSION         cuda-nvml-dev-$CUDA_PKG_VERSION         cuda-nvgraph-dev-$CUDA_PKG_VERSION         cuda-cusolver-dev-$CUDA_PKG_VERSION         cuda-cublas-dev-$CUDA_PKG_VERSION         cuda-cufft-dev-$CUDA_PKG_VERSION         cuda-curand-dev-$CUDA_PKG_VERSION         cuda-cusparse-dev-$CUDA_PKG_VERSION         cuda-npp-dev-$CUDA_PKG_VERSION         cuda-cudart-dev-$CUDA_PKG_VERSION         cuda-driver-dev-$CUDA_PKG_VERSION &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-02-14T17:48:31.36059021Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "empty_layer": true
                },
                {
                    "created": "2017-02-14T18:01:05.215621843Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NVIDIA CORPORATION <cudatools@nvidia.com>",
                    "empty_layer": true
                },
                {
                    "created": "2017-02-14T18:02:53.373176572Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends         curl &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-02-14T18:04:57.093029328Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CUDNN_VERSION=5",
                    "empty_layer": true
                },
                {
                    "created": "2017-02-14T18:07:00.30960779Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL com.nvidia.cudnn.version=5",
                    "empty_layer": true
                },
                {
                    "created": "2017-02-14T18:08:52.955100549Z",
                    "created_by": "/bin/sh -c CUDNN_DOWNLOAD_SUM=c10719b36f2dd6e9ddc63e3189affaa1a94d7d027e63b71c3f64d449ab0645ce &&     curl -fsSL http://developer.download.nvidia.com/compute/redist/cudnn/v5.1/cudnn-8.0-linux-x64-v5.1.tgz -O &&     echo \"$CUDNN_DOWNLOAD_SUM  cudnn-8.0-linux-x64-v5.1.tgz\" | sha256sum -c --strict - &&     tar -xzf cudnn-8.0-linux-x64-v5.1.tgz -C /usr/local &&     rm cudnn-8.0-linux-x64-v5.1.tgz &&     ldconfig"
                },
                {
                    "created": "2017-02-16T20:43:27.768908489Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop)  MAINTAINER Fred Park <https://github.com/Azure/batch-shipyard>",
                    "empty_layer": true
                },
                {
                    "created": "2017-02-16T20:46:30.836472653Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends         build-essential         curl         git         libcurl3-dev         libfreetype6-dev         libpng12-dev         libzmq3-dev         pkg-config         python-dev         rsync         software-properties-common         unzip         zip         zlib1g-dev         &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-02-16T20:46:52.349436121Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c curl -fSsL -O https://bootstrap.pypa.io/get-pip.py &&     python get-pip.py &&     rm get-pip.py"
                },
                {
                    "created": "2017-02-16T20:47:59.547952827Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c pip --no-cache-dir install         ipykernel         jupyter         matplotlib         numpy         scipy         sklearn         &&     python -m ipykernel.kernelspec"
                },
                {
                    "created": "2017-02-16T20:48:08.038526239Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop) COPY file:e0c7238ae4e538a661775594792bf0d1ea9f947ea01f38a468d69ae1abcdd95f in /root/.jupyter/ "
                },
                {
                    "created": "2017-02-16T20:48:13.022045726Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop) COPY file:02ce3596d15dc8db89ce583c5f76e7e36379774030a659c3e23b2d42f79c8ee6 in / "
                },
                {
                    "created": "2017-02-16T20:53:27.566594677Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c add-apt-repository -y ppa:openjdk-r/ppa &&     apt-get update &&     apt-get install -y --no-install-recommends openjdk-8-jdk openjdk-8-jre-headless &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-02-16T20:53:37.407804293Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c echo \"startup --batch\" >>/root/.bazelrc"
                },
                {
                    "created": "2017-02-16T20:53:44.915852522Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c echo \"build --spawn_strategy=standalone --genrule_strategy=standalone\"     >>/root/.bazelrc"
                },
                {
                    "created": "2017-02-16T20:53:50.232115801Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop)  ENV BAZELRC=/root/.bazelrc",
                    "empty_layer": true
                },
                {
                    "created": "2017-02-16T20:53:56.774548346Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop)  ENV BAZEL_VERSION=0.4.2",
                    "empty_layer": true
                },
                {
                    "created": "2017-02-16T20:54:03.590572882Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /",
                    "empty_layer": true
                },
                {
                    "created": "2017-02-16T20:54:22.44843883Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c mkdir /bazel &&     cd /bazel &&     curl -fSsL -O https://github.com/bazelbuild/bazel/releases/download/$BAZEL_VERSION/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh &&     curl -fSsL -o /bazel/LICENSE.txt https://raw.githubusercontent.com/bazelbuild/bazel/master/LICENSE.txt &&     chmod +x bazel-*.sh &&     ./bazel-$BAZEL_VERSION-installer-linux-x86_64.sh &&     cd / &&     rm -f /bazel/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh"
                },
                {
                    "created": "2017-02-16T20:54:47.05602846Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c git clone https://github.com/tensorflow/tensorflow.git &&     cd tensorflow &&     git checkout r1.0"
                },
                {
                    "created": "2017-02-16T20:54:54.556094222Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /tensorflow",
                    "empty_layer": true
                },
                {
                    "created": "2017-02-16T20:55:02.260291088Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop)  ENV CI_BUILD_PYTHON=python",
                    "empty_layer": true
                },
                {
                    "created": "2017-02-16T20:55:10.247480689Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop)  ENV LD_LIBRARY_PATH=/usr/local/cuda/extras/CUPTI/lib64:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "empty_layer": true
                },
                {
                    "created": "2017-02-16T20:55:18.405640325Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop)  ENV TF_NEED_CUDA=1",
                    "empty_layer": true
                },
                {
                    "created": "2017-02-16T20:55:26.173064043Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop)  ENV TF_CUDA_COMPUTE_CAPABILITIES=3.0,3.5,3.7,5.2",
                    "empty_layer": true
                },
                {
                    "created": "2017-02-16T21:47:23.834224398Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c tensorflow/tools/ci_build/builds/configured GPU     bazel build -c opt --config=cuda tensorflow/tools/pip_package:build_pip_package &&     bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/pip &&     pip --no-cache-dir install --upgrade /tmp/pip/tensorflow-*.whl &&     rm -rf /tmp/pip &&     rm -rf /root/.cache"
                },
                {
                    "created": "2017-02-16T21:47:36.700791249Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /root",
                    "empty_layer": true
                },
                {
                    "created": "2017-02-16T21:47:45.413349953Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 6006/tcp",
                    "empty_layer": true
                },
                {
                    "created": "2017-02-16T21:47:54.35038589Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8888/tcp",
                    "empty_layer": true
                },
                {
                    "created": "2017-02-16T21:48:05.438000481Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/bash",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4f03495a4d7de505ccb8b8e4cfd0a8ac201491e1f67ae54b65584e0012aaab9c",
                    "sha256:59f161c3069d1520deabd5823f48146232909b35573a26b9c43c63300dd814b0",
                    "sha256:af605e724c5ab75671f9d21e708cff705ada13a2d1f248dd9b9d998ea35d38c8",
                    "sha256:d195a7a18c704692929ebea51f235431042a294a42f2c4910b480b1e1d710cf1",
                    "sha256:5eb5bd4c5014f8aec0e909341c163d4c44baf750e31691e7c8fdc2beb6c55de9",
                    "sha256:77e11969c3ba3d0405f0bb675e601c836e5a75df263bba274dfe5f5426fc4247",
                    "sha256:1e372b1f9e18687b6f8428e1118d75e28291962a1bbf714155113b2c0aa176ab",
                    "sha256:511859354421ca9193b27db568135f45e798d6ff46b3a4b1f0b54815510be22e",
                    "sha256:65ebe9011e0a73046529ef47edf268b4644ec6d50a8ee6b984095b4e6288f047",
                    "sha256:da5089a08875316717c29164c8b247cef0850df1250b365e8c985ec838e6d988",
                    "sha256:b0f179dffee3597f52208a0755c50dfecd05f6229b9863b714ce2b38c54aa813",
                    "sha256:467cbad459fbdc1485f0b7386328d44de99321a33968658588948d5fc6d53ca5",
                    "sha256:d0b5658124dbd3385b6c7d7ff0408613d95f6749caef30b8fc5a3998c1ab2b9f",
                    "sha256:9b58d21599120ca4a9cf293260d65cca29891ac454c8fe0dd19082376f6e3595",
                    "sha256:22ebc83c902fca12e042e8f80f7eefd81490fe103caa5b1eebbc3fce1e69cd90",
                    "sha256:a93f6a9ffb6e55e4dca5ef9d3c19d25145625045521b72f05e81824af4a29752",
                    "sha256:d7c63e9f08d82adafce29ea61a129d3bc31af43ca11d38f8ea49d931c43feca0",
                    "sha256:79d1cb2c742af1e8631a7b4082922c7acd53ccb8d0c64360774538978f78a0ec",
                    "sha256:3d57e2a1114ca189568df5c3dcd30ac960c4494b9671416f1d86935b400297ba",
                    "sha256:d78d99cbeeadde1a58bf544546cad982706ed2f651859e083985fbf0e0ff78ad",
                    "sha256:9e5cdc2b09ba1858453a996d9c0007e69cc4c4d6f4cbfd0822da529f5bc9dad2",
                    "sha256:ddf88605b0c28a8ba822585a686f0857488c250bd699197904e48bae9914fb14",
                    "sha256:b15019bef3b6cd8d86361b5b24b5bcfe4c7a2d2c85eb4e57375125bbf3514634"
                ]
            }
        },
        "1.2.1-cpu": {
            "architecture": "amd64",
            "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
            "config": {
                "Hostname": "d4f93cc44884",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "23/tcp": {},
                    "6006/tcp": {},
                    "8888/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/usr/sbin/sshd",
                    "-D",
                    "-p",
                    "23"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:214ab6671059d9b923d502e9bffd7bf813c70281eeab23f05ea3e95ebadd5a6e",
                "Volumes": null,
                "WorkingDir": "/notebooks",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "container": "4015c715fc39bf2bd62e5e8ff4cee712c101330fe1035028788fe5eefb4e8e62",
            "container_config": {
                "Hostname": "d4f93cc44884",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "23/tcp": {},
                    "6006/tcp": {},
                    "8888/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "chmod 755 /shipyard     && chmod 777 /shipyard/*"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:214ab6671059d9b923d502e9bffd7bf813c70281eeab23f05ea3e95ebadd5a6e",
                "Volumes": null,
                "WorkingDir": "/notebooks",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2017-08-02T17:25:10.87412429Z",
            "docker_version": "17.05.0-ce",
            "history": [
                {
                    "created": "2017-06-20T23:18:13.495195899Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c251a21fbe3a651352aff2e222db19b7b179e1640cf4e9b75f55fd6f85f40366 in / "
                },
                {
                    "created": "2017-06-20T23:18:35.848222735Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2017-06-20T23:18:37.558735642Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-06-20T23:18:39.245423699Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2017-06-20T23:19:03.64264843Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2017-06-20T23:19:04.474198922Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-06-29T23:37:50.309984023Z",
                    "author": "Craig Citro <craigcitro@google.com>",
                    "created_by": "/bin/sh -c #(nop)  MAINTAINER Craig Citro <craigcitro@google.com>",
                    "empty_layer": true
                },
                {
                    "created": "2017-06-29T23:38:44.550518053Z",
                    "author": "Craig Citro <craigcitro@google.com>",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends         build-essential         curl         libfreetype6-dev         libpng12-dev         libzmq3-dev         pkg-config         python         python-dev         rsync         software-properties-common         unzip         &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-06-29T23:38:52.374085549Z",
                    "author": "Craig Citro <craigcitro@google.com>",
                    "created_by": "/bin/sh -c curl -O https://bootstrap.pypa.io/get-pip.py &&     python get-pip.py &&     rm get-pip.py"
                },
                {
                    "created": "2017-06-29T23:39:45.694858692Z",
                    "author": "Craig Citro <craigcitro@google.com>",
                    "created_by": "/bin/sh -c pip --no-cache-dir install         ipykernel         jupyter         matplotlib         numpy         scipy         sklearn         pandas         Pillow         &&     python -m ipykernel.kernelspec"
                },
                {
                    "created": "2017-06-29T23:40:07.270363807Z",
                    "author": "Craig Citro <craigcitro@google.com>",
                    "created_by": "/bin/sh -c pip --no-cache-dir install http://ci.tensorflow.org/view/Release/job/release-matrix-cpu/TF_BUILD_CONTAINER_TYPE=CPU,TF_BUILD_IS_OPT=OPT,TF_BUILD_IS_PIP=PIP,TF_BUILD_PYTHON_VERSION=PYTHON2,label=cpu-slave/lastSuccessfulBuild/artifact/pip_test/whl/tensorflow-1.2.1-cp27-cp27mu-manylinux1_x86_64.whl"
                },
                {
                    "created": "2017-06-29T23:40:11.354067549Z",
                    "author": "Craig Citro <craigcitro@google.com>",
                    "created_by": "/bin/sh -c #(nop) COPY file:822af972b63c441e3a61eb98118da21f4767bc038349d21719ae254bd82947e7 in /root/.jupyter/ "
                },
                {
                    "created": "2017-06-29T23:40:15.414230922Z",
                    "author": "Craig Citro <craigcitro@google.com>",
                    "created_by": "/bin/sh -c #(nop) COPY dir:90818ee3162f8926d05c24f0da68540907b736d979c19bb7e0a1694ecf5ab5f6 in /notebooks "
                },
                {
                    "created": "2017-06-29T23:40:19.481835788Z",
                    "author": "Craig Citro <craigcitro@google.com>",
                    "created_by": "/bin/sh -c #(nop) COPY file:5485384c641ba7bf763511ad514a0634b4fae9a859906153e69f4c136bb34d41 in / "
                },
                {
                    "created": "2017-06-29T23:40:23.349906616Z",
                    "author": "Craig Citro <craigcitro@google.com>",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 6006/tcp",
                    "empty_layer": true
                },
                {
                    "created": "2017-06-29T23:40:27.66992647Z",
                    "author": "Craig Citro <craigcitro@google.com>",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8888/tcp",
                    "empty_layer": true
                },
                {
                    "created": "2017-06-29T23:40:32.009843935Z",
                    "author": "Craig Citro <craigcitro@google.com>",
                    "created_by": "/bin/sh -c #(nop)  WORKDIR /notebooks",
                    "empty_layer": true
                },
                {
                    "created": "2017-06-29T23:40:36.333779089Z",
                    "author": "Craig Citro <craigcitro@google.com>",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/run_jupyter.sh\" \"--allow-root\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-08-02T16:38:39.406499292Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop)  MAINTAINER Fred Park <https://github.com/Azure/batch-shipyard>",
                    "empty_layer": true
                },
                {
                    "created": "2017-08-02T16:38:46.724574911Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop) COPY file:f9d192962354de09a1bc694d3d322fce378fc25eaadf3f1d2cb0bae0e304bbac in /root/.ssh/config "
                },
                {
                    "created": "2017-08-02T16:39:41.514995815Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends         openssh-client         openssh-server         iproute2     && apt-get clean     && rm -rf /var/lib/apt/lists/*     && mkdir /var/run/sshd     && ssh-keygen -A     && sed -i 's/PermitRootLogin without-password/PermitRootLogin yes/' /etc/ssh/sshd_config     && sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd     && ssh-keygen -f /root/.ssh/id_rsa -t rsa -N ''     && chmod 600 /root/.ssh/config     && chmod 700 /root/.ssh     && cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys"
                },
                {
                    "created": "2017-08-02T17:24:40.049505152Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 23/tcp",
                    "empty_layer": true
                },
                {
                    "created": "2017-08-02T17:24:48.607463322Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/usr/sbin/sshd\" \"-D\" \"-p\" \"23\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-08-02T17:24:59.924014825Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop) COPY multi:c689a2e1a110739362c2c2d9d5c0f8c0278b7473904bab9ed6d403a711f31fe0 in /shipyard/ "
                },
                {
                    "created": "2017-08-02T17:25:10.87412429Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c chmod 755 /shipyard     && chmod 777 /shipyard/*"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cb11ba6054003d39da5c681006ea346e04fb3444086331176bf57255f149c670",
                    "sha256:5a4c2c9a24fc72cc78b3dabee0ae32be12ab197732df433ecb81cef8a00b5f87",
                    "sha256:182d2a55830d06a1f25899b81a3fc83dfc4e30eb5c8cad164e0024657dba7528",
                    "sha256:6f9cf951edf547ab4895ee15110108dd6659952b1479a95bd348c204035da461",
                    "sha256:0566c118947e4983e51c1deddc184238cb372d4318c75a15f9a143a89797c04a",
                    "sha256:887b25a3a313c1428d2be277663e98e8d056d2e6d9f62ebe7baf46f6526a7937",
                    "sha256:49eca0033d2d918be97fdbef3dfbe31a1362b5fd80e5efefcce6e07a2312ad11",
                    "sha256:cf49be111bd5c143b3fc2d48860429e7504bbf06ffc2b8d16e80ae5ced772fdf",
                    "sha256:bdd0b00a962fb9213d438762ad8e10ad6df661d6ea8122ac51c865d1662643a4",
                    "sha256:85d5cd1263555fddfe9602cad1c5569ff7a5228e6049a179357412251a418d44",
                    "sha256:5178693e13e36b9011d54810bf58d2e9a43be46dc595fb2d253c967c9b668095",
                    "sha256:47a8182444dd7f5df3032cd361863fd81badd7baabb32d37967d94a4384734b2",
                    "sha256:a51de25fd3437b06e55f0b285601b0347182bacc87cb37d00e9d478999d8c716",
                    "sha256:a21c8113c3b33ec479752649cae493c9816ca3f86f8f6458fdcb225ea0b7c17a",
                    "sha256:6c487734cfb61eb7835841930e244d9ace72c60488d1d07d4f4da7d233de6a26",
                    "sha256:2e62844d0cd92eab3bbfeeb725326ee3a46f49d402000cdc165f9bebd9d963fd"
                ]
            }
        },
        "1.2.1-gpu": {
            "architecture": "amd64",
            "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
            "config": {
                "Hostname": "d4f93cc44884",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "23/tcp": {},
                    "6006/tcp": {},
                    "8888/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CUDA_VERSION=8.0.61",
                    "CUDA_PKG_VERSION=8-0=8.0.61-1",
                    "LD_LIBRARY_PATH=/usr/local/cuda/extras/CUPTI/lib64:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "CUDNN_VERSION=5.1.10"
                ],
                "Cmd": [
                    "/usr/sbin/sshd",
                    "-D",
                    "-p",
                    "23"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:42d3e62094caba240f3ceb3864c8e8ac8c35b04f33058a36c161c34b0a08a549",
                "Volumes": null,
                "WorkingDir": "/notebooks",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {
                    "com.nvidia.build.id": "20511715",
                    "com.nvidia.build.ref": "8cbbe3f50991afed6055bb714f79783fab77af54",
                    "com.nvidia.cuda.version": "8.0.61",
                    "com.nvidia.cudnn.version": "5.1.10",
                    "com.nvidia.volumes.needed": "nvidia_driver",
                    "maintainer": "NVIDIA CORPORATION <cudatools@nvidia.com>"
                }
            },
            "container": "632407d1a9c56a03b3c39277a665355f0c860ae7c5452302d7909f4643778816",
            "container_config": {
                "Hostname": "d4f93cc44884",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "23/tcp": {},
                    "6006/tcp": {},
                    "8888/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CUDA_VERSION=8.0.61",
                    "CUDA_PKG_VERSION=8-0=8.0.61-1",
                    "LD_LIBRARY_PATH=/usr/local/cuda/extras/CUPTI/lib64:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "CUDNN_VERSION=5.1.10"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "chmod 755 /shipyard     && chmod 777 /shipyard/*"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:42d3e62094caba240f3ceb3864c8e8ac8c35b04f33058a36c161c34b0a08a549",
                "Volumes": null,
                "WorkingDir": "/notebooks",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {
                    "com.nvidia.build.id": "20511715",
                    "com.nvidia.build.ref": "8cbbe3f50991afed6055bb714f79783fab77af54",
                    "com.nvidia.cuda.version": "8.0.61",
                    "com.nvidia.cudnn.version": "5.1.10",
                    "com.nvidia.volumes.needed": "nvidia_driver",
                    "maintainer": "NVIDIA CORPORATION <cudatools@nvidia.com>"
                }
            },
            "created": "2017-08-02T17:21:55.243644346Z",
            "docker_version": "17.05.0-ce",
            "history": [
                {
                    "created": "2017-06-20T23:18:13.495195899Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c251a21fbe3a651352aff2e222db19b7b179e1640cf4e9b75f55fd6f85f40366 in / "
                },
                {
                    "created": "2017-06-20T23:18:35.848222735Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2017-06-20T23:18:37.558735642Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-06-20T23:18:39.245423699Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2017-06-20T23:19:03.64264843Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2017-06-20T23:19:04.474198922Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-06-29T16:29:49.764455999Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NVIDIA CORPORATION <cudatools@nvidia.com>",
                    "empty_layer": true
                },
                {
                    "created": "2017-06-29T16:29:54.153407821Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL com.nvidia.volumes.needed=nvidia_driver",
                    "empty_layer": true
                },
                {
                    "created": "2017-06-29T16:30:00.384349928Z",
                    "created_by": "/bin/sh -c NVIDIA_GPGKEY_SUM=d1be581509378368edeec8c1eb2958702feedf3bc3d17011adbf24efacce4ab5 &&     NVIDIA_GPGKEY_FPR=ae09fe4bbd223a84b2ccfce3f60f4b3d7fa2af80 &&     apt-key adv --fetch-keys http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64/7fa2af80.pub &&     apt-key adv --export --no-emit-version -a $NVIDIA_GPGKEY_FPR | tail -n +5 > cudasign.pub &&     echo \"$NVIDIA_GPGKEY_SUM  cudasign.pub\" | sha256sum -c --strict - && rm cudasign.pub &&     echo \"deb http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64 /\" > /etc/apt/sources.list.d/cuda.list"
                },
                {
                    "created": "2017-06-29T16:30:05.936238261Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CUDA_VERSION=8.0.61",
                    "empty_layer": true
                },
                {
                    "created": "2017-06-29T16:30:11.863997566Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL com.nvidia.cuda.version=8.0.61",
                    "empty_layer": true
                },
                {
                    "created": "2017-06-29T16:30:16.952859976Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CUDA_PKG_VERSION=8-0=8.0.61-1",
                    "empty_layer": true
                },
                {
                    "created": "2017-06-29T16:32:56.016854841Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends         cuda-nvrtc-$CUDA_PKG_VERSION         cuda-nvgraph-$CUDA_PKG_VERSION         cuda-cusolver-$CUDA_PKG_VERSION         cuda-cublas-8-0=8.0.61.2-1         cuda-cufft-$CUDA_PKG_VERSION         cuda-curand-$CUDA_PKG_VERSION         cuda-cusparse-$CUDA_PKG_VERSION         cuda-npp-$CUDA_PKG_VERSION         cuda-cudart-$CUDA_PKG_VERSION &&     ln -s cuda-8.0 /usr/local/cuda &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-06-29T16:33:18.4136373Z",
                    "created_by": "/bin/sh -c echo \"/usr/local/cuda/lib64\" >> /etc/ld.so.conf.d/cuda.conf &&     ldconfig"
                },
                {
                    "created": "2017-06-29T16:33:39.619781704Z",
                    "created_by": "/bin/sh -c echo \"/usr/local/nvidia/lib\" >> /etc/ld.so.conf.d/nvidia.conf &&     echo \"/usr/local/nvidia/lib64\" >> /etc/ld.so.conf.d/nvidia.conf"
                },
                {
                    "created": "2017-06-29T16:34:00.640024003Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2017-06-29T16:34:13.850346425Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LD_LIBRARY_PATH=/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "empty_layer": true
                },
                {
                    "created": "2017-06-29T16:34:29.504025326Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL com.nvidia.build.id=20511715 com.nvidia.build.ref=8cbbe3f50991afed6055bb714f79783fab77af54",
                    "empty_layer": true
                },
                {
                    "created": "2017-06-29T16:34:44.200397451Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NVIDIA CORPORATION <cudatools@nvidia.com>",
                    "empty_layer": true
                },
                {
                    "created": "2017-06-29T16:37:41.945061917Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends         cuda-core-$CUDA_PKG_VERSION         cuda-misc-headers-$CUDA_PKG_VERSION         cuda-command-line-tools-$CUDA_PKG_VERSION         cuda-nvrtc-dev-$CUDA_PKG_VERSION         cuda-nvml-dev-$CUDA_PKG_VERSION         cuda-nvgraph-dev-$CUDA_PKG_VERSION         cuda-cusolver-dev-$CUDA_PKG_VERSION         cuda-cublas-dev-8-0=8.0.61.2-1         cuda-cufft-dev-$CUDA_PKG_VERSION         cuda-curand-dev-$CUDA_PKG_VERSION         cuda-cusparse-dev-$CUDA_PKG_VERSION         cuda-npp-dev-$CUDA_PKG_VERSION         cuda-cudart-dev-$CUDA_PKG_VERSION         cuda-driver-dev-$CUDA_PKG_VERSION &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-06-29T16:38:52.716783031Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "empty_layer": true
                },
                {
                    "created": "2017-06-29T16:44:11.567971539Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NVIDIA CORPORATION <cudatools@nvidia.com>",
                    "empty_layer": true
                },
                {
                    "created": "2017-06-29T16:44:38.088357214Z",
                    "created_by": "/bin/sh -c echo \"deb http://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1604/x86_64 /\" > /etc/apt/sources.list.d/nvidia-ml.list"
                },
                {
                    "created": "2017-06-29T16:45:00.945775432Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CUDNN_VERSION=5.1.10",
                    "empty_layer": true
                },
                {
                    "created": "2017-06-29T16:45:28.153732472Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL com.nvidia.cudnn.version=5.1.10",
                    "empty_layer": true
                },
                {
                    "created": "2017-06-29T16:46:13.092516596Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends             libcudnn5=$CUDNN_VERSION-1+cuda8.0             libcudnn5-dev=$CUDNN_VERSION-1+cuda8.0 &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-06-29T23:18:18.869636111Z",
                    "author": "Craig Citro <craigcitro@google.com>",
                    "created_by": "/bin/sh -c #(nop)  MAINTAINER Craig Citro <craigcitro@google.com>",
                    "empty_layer": true
                },
                {
                    "created": "2017-06-29T23:18:51.006989986Z",
                    "author": "Craig Citro <craigcitro@google.com>",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends         build-essential         curl         libfreetype6-dev         libpng12-dev         libzmq3-dev         pkg-config         python         python-dev         rsync         software-properties-common         unzip         &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-06-29T23:18:58.79791816Z",
                    "author": "Craig Citro <craigcitro@google.com>",
                    "created_by": "/bin/sh -c curl -O https://bootstrap.pypa.io/get-pip.py &&     python get-pip.py &&     rm get-pip.py"
                },
                {
                    "created": "2017-06-29T23:19:41.662792296Z",
                    "author": "Craig Citro <craigcitro@google.com>",
                    "created_by": "/bin/sh -c pip --no-cache-dir install         ipykernel         jupyter         matplotlib         numpy         scipy         sklearn         pandas         Pillow         &&     python -m ipykernel.kernelspec"
                },
                {
                    "created": "2017-06-29T23:20:08.574633726Z",
                    "author": "Craig Citro <craigcitro@google.com>",
                    "created_by": "/bin/sh -c pip --no-cache-dir install http://ci.tensorflow.org/view/Release/job/release-matrix-linux-gpu/TF_BUILD_CONTAINER_TYPE=GPU,TF_BUILD_IS_OPT=OPT,TF_BUILD_IS_PIP=PIP,TF_BUILD_PYTHON_VERSION=PYTHON2,label=gpu-linux/lastSuccessfulBuild/artifact/pip_test/whl/tensorflow_gpu-1.2.1-cp27-cp27mu-manylinux1_x86_64.whl"
                },
                {
                    "created": "2017-06-29T23:20:13.741959325Z",
                    "author": "Craig Citro <craigcitro@google.com>",
                    "created_by": "/bin/sh -c #(nop) COPY file:822af972b63c441e3a61eb98118da21f4767bc038349d21719ae254bd82947e7 in /root/.jupyter/ "
                },
                {
                    "created": "2017-06-29T23:20:18.902010973Z",
                    "author": "Craig Citro <craigcitro@google.com>",
                    "created_by": "/bin/sh -c #(nop) COPY dir:90818ee3162f8926d05c24f0da68540907b736d979c19bb7e0a1694ecf5ab5f6 in /notebooks "
                },
                {
                    "created": "2017-06-29T23:20:24.125939218Z",
                    "author": "Craig Citro <craigcitro@google.com>",
                    "created_by": "/bin/sh -c #(nop) COPY file:5485384c641ba7bf763511ad514a0634b4fae9a859906153e69f4c136bb34d41 in / "
                },
                {
                    "created": "2017-06-29T23:20:29.069900324Z",
                    "author": "Craig Citro <craigcitro@google.com>",
                    "created_by": "/bin/sh -c #(nop)  ENV LD_LIBRARY_PATH=/usr/local/cuda/extras/CUPTI/lib64:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "empty_layer": true
                },
                {
                    "created": "2017-06-29T23:20:35.445757329Z",
                    "author": "Craig Citro <craigcitro@google.com>",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 6006/tcp",
                    "empty_layer": true
                },
                {
                    "created": "2017-06-29T23:20:41.665744092Z",
                    "author": "Craig Citro <craigcitro@google.com>",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8888/tcp",
                    "empty_layer": true
                },
                {
                    "created": "2017-06-29T23:20:47.933709896Z",
                    "author": "Craig Citro <craigcitro@google.com>",
                    "created_by": "/bin/sh -c #(nop)  WORKDIR /notebooks",
                    "empty_layer": true
                },
                {
                    "created": "2017-06-29T23:20:54.201887686Z",
                    "author": "Craig Citro <craigcitro@google.com>",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/run_jupyter.sh\" \"--allow-root\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-08-02T15:12:11.73290525Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop)  MAINTAINER Fred Park <https://github.com/Azure/batch-shipyard>",
                    "empty_layer": true
                },
                {
                    "created": "2017-08-02T15:12:22.082305469Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop) COPY file:f9d192962354de09a1bc694d3d322fce378fc25eaadf3f1d2cb0bae0e304bbac in /root/.ssh/config "
                },
                {
                    "created": "2017-08-02T15:13:21.739897546Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends         openssh-client         openssh-server         iproute2     && apt-get clean     && rm -rf /var/lib/apt/lists/*     && mkdir /var/run/sshd     && ssh-keygen -A     && sed -i 's/PermitRootLogin without-password/PermitRootLogin yes/' /etc/ssh/sshd_config     && sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd     && ssh-keygen -f /root/.ssh/id_rsa -t rsa -N ''     && chmod 600 /root/.ssh/config     && chmod 700 /root/.ssh     && cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys"
                },
                {
                    "created": "2017-08-02T17:09:54.623542361Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 23/tcp",
                    "empty_layer": true
                },
                {
                    "created": "2017-08-02T17:10:01.952460443Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/usr/sbin/sshd\" \"-D\" \"-p\" \"23\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-08-02T17:21:47.006960378Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c #(nop) COPY multi:b80766cbc97b3756273f3cc7ad5f588811bd16f449dc96f6209200c2310daab2 in /shipyard/ "
                },
                {
                    "created": "2017-08-02T17:21:55.243644346Z",
                    "author": "Fred Park <https://github.com/Azure/batch-shipyard>",
                    "created_by": "/bin/sh -c chmod 755 /shipyard     && chmod 777 /shipyard/*"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cb11ba6054003d39da5c681006ea346e04fb3444086331176bf57255f149c670",
                    "sha256:5a4c2c9a24fc72cc78b3dabee0ae32be12ab197732df433ecb81cef8a00b5f87",
                    "sha256:182d2a55830d06a1f25899b81a3fc83dfc4e30eb5c8cad164e0024657dba7528",
                    "sha256:6f9cf951edf547ab4895ee15110108dd6659952b1479a95bd348c204035da461",
                    "sha256:0566c118947e4983e51c1deddc184238cb372d4318c75a15f9a143a89797c04a",
                    "sha256:2b56a277a23a98c803b2da41ca90afb1052b3bb9f6a6ee134842191f30998b87",
                    "sha256:167df449a4145f5038b4206b3aa40992a0dbf3cc88c7660c9325ae2004941d49",
                    "sha256:d350ff92f413b87c7c90aec62b703b8a77b1799b9886ae8b07f2b25297b07a1c",
                    "sha256:9ee965bfab4b1fe4cdbf4e6135e7a68f09270bfa614db78c5aa0d2a23ffc0716",
                    "sha256:27e1a51ca60e0fccb5711e4fb6a35cc2933f88376fd5b3aaf1f453311aa9f17a",
                    "sha256:6ed64a52e9680800d2b0035e7ddc44796b4affe1b9980f1faced73a1874c9d38",
                    "sha256:09049fc65d12ffd59aa8d7bf4ff0d80acde0da9e2942f83e60ae2ec1531ac2a4",
                    "sha256:2942135f3131d175873f3d859fa99163b33fed6ce5f478a1702ffec0a3dce1bf",
                    "sha256:374a5241a462da15864a75a6791fbe6d6f3c656f35815784ce379a31a5537bdf",
                    "sha256:84cd88259a32efa98b02b70567ee36ca8531c0ea43082f610a5715d0d2f0677b",
                    "sha256:904a52daa045995e77deaab71edd7d2ba40f0c64f43dbe6ee84e95fa2de1e0b3",
                    "sha256:da24cd35d16856c4896ae29d46a02b086bb799ecf5bdf21ceb5886514a67b3a2",
                    "sha256:fd643aeb691b33fcf17b877ec9d282c50ddd26a026326f790db68bdb5c483742",
                    "sha256:c7072bb30d82274ab29c26a2bb1c04da186d44da2ef0afd82414ee2aaa2988e2",
                    "sha256:b887cee38c956b8a0e481ec200b2cbd8fa580b58d97c19bdfebece339344b180",
                    "sha256:edc5ab7b6e4e7f5bf771779b7579d57840516715de06fedc6eaadcb9ebc00dd8",
                    "sha256:58581fa399cd9a2380c21d6a247c799da4900abfc00db1d4d113f3a6ec69a15c",
                    "sha256:ac591e55c49dc5cc065afe53ef008df6b121ccc86cb0417924e8a56f88a27cce"
                ]
            }
        }
    }
}