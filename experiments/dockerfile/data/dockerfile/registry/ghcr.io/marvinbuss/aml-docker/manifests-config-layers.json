{
    "manifests": {
        "latest": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8099,
                "digest": "sha256:006d8ea55f516780a97d07eb2ef21ab8e4e69b065f18caf951350493496dc43d"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27092121,
                    "digest": "sha256:bf59529304463f62efa7179fa1a32718a611528cc4ce9f30c0d1bbc6724ec3fb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2749965,
                    "digest": "sha256:385bb58d08e62a5f1ce007200cd30794be92530c300519417607392423a316df"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10419184,
                    "digest": "sha256:ab14b629693da79014bf92f40229e2ad0c31a0c5e4e11d68c5c6f184c5d57097"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 233,
                    "digest": "sha256:7a5d07f2fd13fb183676364da34f5d87bbf7bc175359fa672dda3042082ad802"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2407576,
                    "digest": "sha256:25a245937421e366dd7b88de82eaaa5a4610549c0a9cd7025d41fa43a2ef039f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 164,
                    "digest": "sha256:8a59c49a3eabd577cc54518239f9affa643380705c2ce2da3bbbc3754d54e21e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 251530086,
                    "digest": "sha256:382638cf65a05b5a589d25597e11210a4542578b634f06f3c89451aaad5aec38"
                }
            ]
        },
        "1.13.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8097,
                "digest": "sha256:6c3798cb1f457edb960439acda413edb508b43a32cdcdc55ff1a5237555bae8c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27092121,
                    "digest": "sha256:bf59529304463f62efa7179fa1a32718a611528cc4ce9f30c0d1bbc6724ec3fb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2749965,
                    "digest": "sha256:385bb58d08e62a5f1ce007200cd30794be92530c300519417607392423a316df"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10419184,
                    "digest": "sha256:ab14b629693da79014bf92f40229e2ad0c31a0c5e4e11d68c5c6f184c5d57097"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 233,
                    "digest": "sha256:7a5d07f2fd13fb183676364da34f5d87bbf7bc175359fa672dda3042082ad802"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2407576,
                    "digest": "sha256:25a245937421e366dd7b88de82eaaa5a4610549c0a9cd7025d41fa43a2ef039f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 163,
                    "digest": "sha256:47e575e2ecc5965a08118a3204d699ef877017c3948a0e75f846fb02bbee8eaa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 251530853,
                    "digest": "sha256:e032b1bf793fe31d8d2a1776d6edf8e0f6ed0b958875de1e7cf25761792a58fc"
                }
            ]
        },
        "1.14.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8098,
                "digest": "sha256:a09cc731d78c266f4f6f4a0fa0a9ed2d979e1271b9f7f7c43aeb0bc8d3a99334"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27092161,
                    "digest": "sha256:d121f8d1c4128ebc1e95e5bfad90a0189b84eadbbb2fbaad20cbb26d20b2c8a2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2749988,
                    "digest": "sha256:ca572574cc82ba635292c0aba70b719de39faffe7a40a802bb0f8c22663b51ac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10419236,
                    "digest": "sha256:776716b0aa87537801fc2287d4c3796c233bfe1ce6568038494d101ed2e3f291"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 233,
                    "digest": "sha256:c37461631ba3a30c811c3427aa9e32b65c94551d6d8d2fbd26bc39bc54c98219"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2408198,
                    "digest": "sha256:bdb458dd27ea53bf3830e3e158cff3c11d3580fa6bf7b9691022da4e963ab4c3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 163,
                    "digest": "sha256:fbf386ef5e18cbbf298e13261b2f463e7f6a2dc7844a77e7668e533021c02568"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 252555493,
                    "digest": "sha256:acd8669ab9b961a5becc9b0612a56af529aca5ee58073b56627af5377fa054e7"
                }
            ]
        },
        "1.15.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8734,
                "digest": "sha256:663100a3780382a82ac9df721244652d4bc48d907c880f9c6e6741af521db229"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27092161,
                    "digest": "sha256:d121f8d1c4128ebc1e95e5bfad90a0189b84eadbbb2fbaad20cbb26d20b2c8a2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2749988,
                    "digest": "sha256:ca572574cc82ba635292c0aba70b719de39faffe7a40a802bb0f8c22663b51ac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10062557,
                    "digest": "sha256:2bec6349c99d9ce28745c68ca3b7739db00f66cbacb488b9dfd6c548fb5058c1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 233,
                    "digest": "sha256:087ac0b72728719a9249ebec6f2970597890a512fe16a8168e33aa3eac8090f7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2408145,
                    "digest": "sha256:6ca52d7c92b3065641ebfed14427f514fe20b9dcef29a3b586b5b0ff98e7cb0d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 163,
                    "digest": "sha256:9528f0d3f1b98e08774fa470f9c5498354de812450766ec5bb9c456a23d2ccef"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 247096891,
                    "digest": "sha256:6a21dd44a48667b7368947bed5fc713f80c5d5cc8962ab206b0710888bc5ed69"
                }
            ]
        },
        "1.16.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8098,
                "digest": "sha256:a8e52e2cb46fb89d30c7083cc438ba14116ad76c0961bc0ba367d377485f31d3"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27092228,
                    "digest": "sha256:bb79b6b2107fea8e8a47133a660b78e3a546998fcf0427be39ac9a0af4a97e90"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2749957,
                    "digest": "sha256:35e30c3f3e2ba36796040283e56c23ff46f138194bc599eb319ee4d19b557939"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10636499,
                    "digest": "sha256:cb732bb8dce0dc75dc641d11c8db91912c88100f641b0aabec59cce2997cfbb9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 230,
                    "digest": "sha256:dc97f433b6ed38dd3e6f14d715671e42a5f4d53884202fe921867d356b896d87"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2408281,
                    "digest": "sha256:47cbb0c1e92a485ed2db07972a39eae528a282fa5d9a21fb0936ddc69a2fd4e7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 164,
                    "digest": "sha256:4d37cac87ec6525e0f6932ad2db9c609206db1000bda283477d6e08917962cf9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 247792577,
                    "digest": "sha256:9e7429ae964a4fac6d80da3edcd1b0298328f76ce876e8807344158c264a046f"
                }
            ]
        },
        "1.17.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8099,
                "digest": "sha256:7c5969588fd941df0a092328301dea73015388bbd2911469e14bc03779cf045c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27092228,
                    "digest": "sha256:bb79b6b2107fea8e8a47133a660b78e3a546998fcf0427be39ac9a0af4a97e90"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2749957,
                    "digest": "sha256:35e30c3f3e2ba36796040283e56c23ff46f138194bc599eb319ee4d19b557939"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10636499,
                    "digest": "sha256:cb732bb8dce0dc75dc641d11c8db91912c88100f641b0aabec59cce2997cfbb9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 230,
                    "digest": "sha256:dc97f433b6ed38dd3e6f14d715671e42a5f4d53884202fe921867d356b896d87"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2409223,
                    "digest": "sha256:d8634511c1f04ee4e990eb316c3c1097b08c77cbc8afa5f81dcfb69d16844e4b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 164,
                    "digest": "sha256:1b137e5beb185991b9923d3f489f5804f7279b44bca458a011b8d928908d92bb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 248166524,
                    "digest": "sha256:baa48dd26188ac775ccefcea0bbd535127e6cba5678495d4ec0dba318d9ee91e"
                }
            ]
        },
        "1.18.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8097,
                "digest": "sha256:053ac4e9fdeac3538c5c6519ed0746d3b3c1f3ec0b2d99b4001cf0750fdf51a3"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27092228,
                    "digest": "sha256:bb79b6b2107fea8e8a47133a660b78e3a546998fcf0427be39ac9a0af4a97e90"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2749957,
                    "digest": "sha256:35e30c3f3e2ba36796040283e56c23ff46f138194bc599eb319ee4d19b557939"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10636499,
                    "digest": "sha256:cb732bb8dce0dc75dc641d11c8db91912c88100f641b0aabec59cce2997cfbb9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 230,
                    "digest": "sha256:dc97f433b6ed38dd3e6f14d715671e42a5f4d53884202fe921867d356b896d87"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2409223,
                    "digest": "sha256:d8634511c1f04ee4e990eb316c3c1097b08c77cbc8afa5f81dcfb69d16844e4b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 165,
                    "digest": "sha256:bc21a00d9dd03cf404f1ab6c758244807e514ba73596203bb846dd46aa467049"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 248371728,
                    "digest": "sha256:bb645c4f85a82c48f328e1517af532542d03dbf46e7253a8fd8fe12048804f08"
                }
            ]
        },
        "1.19.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8074,
                "digest": "sha256:949eb254869d2ee8e86ab88c170ffd5442a1810a726c14ad460a851d71b0d216"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27099295,
                    "digest": "sha256:6ec7b7d162b24bd6df88abde89ceb6d7bbc2be927f025c9dd061af2b0c328cfe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2750201,
                    "digest": "sha256:80ff6536d04b44548c6b469e46e74013f30644af5fe48d7eb611c67077bb3ee9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10634671,
                    "digest": "sha256:2d04da85e4856018cdf1a31b410c1e7c5c92a10f4396eac1bc47713f873a0ae4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 232,
                    "digest": "sha256:998aa32a5c8a60011e9449193d3486cb6bd8370d454a4871bbc7cf8c78fd977d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2426524,
                    "digest": "sha256:7733ef26f344e0c4bcbe047812df2bd76c962fef9b08ff8a420111668c662da3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 165,
                    "digest": "sha256:3fbab2c639a9551dec19a052d5304e62679d527f9d8f5cec5dc5c974a60d6245"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 271247283,
                    "digest": "sha256:7108498534a2f20fca6a95aaaceaba12d57757357db9a63173636b027796de2a"
                }
            ]
        },
        "1.20.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8068,
                "digest": "sha256:31a9c83e0d298b15e58935c3267175a818b4ed6a38851386c05332132760b6db"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27108069,
                    "digest": "sha256:a076a628af6f7dcabc536bee373c0d9b48d9f0516788e64080c4e841746e6ce6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2750195,
                    "digest": "sha256:a36ca90be64c5f3c8c72bc27f50e550b97080affa4657a3c1cbbbb02a1c014f5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10682105,
                    "digest": "sha256:44f7d13c37e7a15be5b086fbb34e20509ff373fbe1ac5c803c7383946a567413"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 232,
                    "digest": "sha256:b0d4acfb9127afa5719ba03577ee8c88b34f8112cbb0748cc9ac6cb956d0e7ce"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2451087,
                    "digest": "sha256:1b9127658757e4c67c1b7c0c824328be5b057c8894733111b4bae0a6eba0b75c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 164,
                    "digest": "sha256:3c539f063881c720eeff9cd2078776b3a7e7bbeec4d35888c8970f534e2303bc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 273420045,
                    "digest": "sha256:703c9dd826f8ab8de837dbf89a857be71e9a8c0195ee180e77529a53e1e6ed95"
                }
            ]
        },
        "1.21.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8069,
                "digest": "sha256:f46766582f67ac99fa87a0244cbeda91ff0165cb56025525cdc8302509d258a7"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27108069,
                    "digest": "sha256:a076a628af6f7dcabc536bee373c0d9b48d9f0516788e64080c4e841746e6ce6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2750195,
                    "digest": "sha256:a36ca90be64c5f3c8c72bc27f50e550b97080affa4657a3c1cbbbb02a1c014f5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10682105,
                    "digest": "sha256:44f7d13c37e7a15be5b086fbb34e20509ff373fbe1ac5c803c7383946a567413"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 232,
                    "digest": "sha256:b0d4acfb9127afa5719ba03577ee8c88b34f8112cbb0748cc9ac6cb956d0e7ce"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2452112,
                    "digest": "sha256:22d3225f2588dfbee7b1283e9c65cc5d4044b29ce97e6f4bb3785af74164d0de"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 163,
                    "digest": "sha256:8196f241ecceb809057fd1fcf618ac97a3295f347b17daaf0797c8cd6afb999c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 273713026,
                    "digest": "sha256:f2eb2d5e9f1b199735e6bd38fe34ab432483d26f439237bed91f0edd57c8365b"
                }
            ]
        },
        "1.22.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8072,
                "digest": "sha256:7ff447072e96df527c684eacc27d25595f7f0e4b90b8d6f58fd674c439b64176"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27101001,
                    "digest": "sha256:6f28985ad1843afd6fd4fe0b42a30bfab63c27d302362e7341e3316e8ba25ced"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2769503,
                    "digest": "sha256:f586441522802f606558738287532b0218f46c62f5da61e1bf7b491df86a7ce4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10681945,
                    "digest": "sha256:456500070a3e1a0926e1923e0b34d1bacca0c86b86f73013d71121874517e61e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 232,
                    "digest": "sha256:9229690cc337bfcbd90ac7651892aaa30f89c8d1b4f80cccaf63690f1eeab3f0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2452997,
                    "digest": "sha256:47da0924d2de4b4daf72673d7404b7e6f6bb9b8d99ae3989735cb3fe4b73ca55"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:10a8f96379ca098fbfbbd7535af94919a6f67ace0122cbd17af34dd773a103a2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 275160812,
                    "digest": "sha256:fe23659e9640fa572fdfd02f3543cf7bef8544dfb81882d1f79be4d75829accb"
                }
            ]
        },
        "1.23.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8073,
                "digest": "sha256:ab43d8f1076077f3b7cacedb8cb11bb91c99ee00840e4775bb8b23be727e4cec"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27100996,
                    "digest": "sha256:ac2522cc72690febc428fb46fb39a4efc5e0a721c3ad15d9992b01515f2fad1a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2769674,
                    "digest": "sha256:8edbc159ce3659ac23c5aed9f82e145c8124705a83cf4d0b9546239c3eaaca33"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10684164,
                    "digest": "sha256:0e6f0a09ecb9f387f39124eb9d983ccb20d35b09ad539777260528c55a94b2b0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 233,
                    "digest": "sha256:cb3ef6c5b062533a9376b5f8c57ac3b2efe48a61d67546995a5d4f42ea63b672"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2453142,
                    "digest": "sha256:10b895c4ca736ae94bf460697cff4cbd4d9d7470f368629eb2e462623b821fd2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 163,
                    "digest": "sha256:852db7ba46bcad68c9dc10ce7e22003018d920aa409b8ae3d21a915e0fbfed35"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 275133676,
                    "digest": "sha256:29ad763716e9808453b17e3a102be8b8e3602f76e3b7c13cea95fd3c64da0240"
                }
            ]
        },
        "1.24.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8085,
                "digest": "sha256:76f615f18f130219057964df2a7efde5eac20e04c1ad4acfeac5c972cb197901"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27139373,
                    "digest": "sha256:f7ec5a41d630a33a2d1db59b95d89d93de7ae5a619a3a8571b78457e48266eba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2769589,
                    "digest": "sha256:6f318b7b4c32e5bbdcf826cefc687951e49af93c21b726f1ac537d6a74f86aa5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10690574,
                    "digest": "sha256:65be07e2a755b449f878b2df8f385d1f2df981db4443de655ed5eb4936f47d0c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 233,
                    "digest": "sha256:d843bb564d1d08cefc14ec28a27e4cdd6b02c3f9d3f5cab64cf3b32d3cbf8062"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2599596,
                    "digest": "sha256:e842f4dd41ec38705cc409a22f168b996966ee738c3dbc5b32f53fff87bb8f91"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:9916708567f1bed22845a5dfe3b7e29d6799105d339cc4b43c6b26049b5cc279"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 276437665,
                    "digest": "sha256:9dccfe6c55bcc1da1ed0e67e7d4080a9c5e2f39671d9041f3b70763df769df6d"
                }
            ]
        },
        "1.25.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8094,
                "digest": "sha256:591206febdc0880e38c156d9a2785af3f708369af5b358ab95e502bd9a0fd090"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27139373,
                    "digest": "sha256:f7ec5a41d630a33a2d1db59b95d89d93de7ae5a619a3a8571b78457e48266eba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2769589,
                    "digest": "sha256:6f318b7b4c32e5bbdcf826cefc687951e49af93c21b726f1ac537d6a74f86aa5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10726990,
                    "digest": "sha256:228460e72d67ea59ca912b4dd18a86f0e1e137174b896a165e7ce9f263389bf8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 234,
                    "digest": "sha256:10553512e2cdd6ae088b9c7b63eaf850302996e709766dc1d562f0fb488f90c1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2599886,
                    "digest": "sha256:e964f44a8ccc834a6e3c5cb95d2e04fa9f04f64aa5cc99e915faea6decdd5bf7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 163,
                    "digest": "sha256:3e5e28d30a8f592140cbdf10b5aa5b88ff7571204bf33d2b59ffd07c355aa0a1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 276501448,
                    "digest": "sha256:54c80d1c1a8ff9bf512774d4969c980e6768caf519f6fa5257a9a4562bd8d94d"
                }
            ]
        },
        "1.26.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8093,
                "digest": "sha256:7bc7d1c775dce6ff6b2b807cafe3809cf1e60e119764acbcf192328c7db98bdb"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27145915,
                    "digest": "sha256:69692152171afee1fd341febc390747cfca2ff302f2881d8b394e786af605696"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2769644,
                    "digest": "sha256:66a3c154490aa1f5ce65f9ce452f5f38176c3f111ed0db0ea1dae8b49cbd7395"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10727164,
                    "digest": "sha256:3e35bdfb65b21f9c8c09ff302524ad3beb876ce49357162d742dccdbb228df9e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 233,
                    "digest": "sha256:f2c4c435507305290e1abbb5f643bc7e8c7a1c1002d4dec6df88afd21a99299f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2635636,
                    "digest": "sha256:65d67526c337aec6f9d91bf6311b1804dad18d7abf983b32335403a7ce0b4b0e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:b2e218f9993ba69e5d2c27f0d73005ec19c4d1b8eb6f551bde6d37ea644bd850"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 278635198,
                    "digest": "sha256:d07e9d724c7e42f58197884f83c332052784322693b4ec062b201726b8b601fb"
                }
            ]
        },
        "1.27.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8093,
                "digest": "sha256:022fcec75cb9cedec328e09ae5ee846c3f79a470b802862a6432a9cf5c6c4476"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27145915,
                    "digest": "sha256:69692152171afee1fd341febc390747cfca2ff302f2881d8b394e786af605696"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2769644,
                    "digest": "sha256:66a3c154490aa1f5ce65f9ce452f5f38176c3f111ed0db0ea1dae8b49cbd7395"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10727164,
                    "digest": "sha256:3e35bdfb65b21f9c8c09ff302524ad3beb876ce49357162d742dccdbb228df9e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 233,
                    "digest": "sha256:f2c4c435507305290e1abbb5f643bc7e8c7a1c1002d4dec6df88afd21a99299f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2635636,
                    "digest": "sha256:65d67526c337aec6f9d91bf6311b1804dad18d7abf983b32335403a7ce0b4b0e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 163,
                    "digest": "sha256:11dec9f952e2b74c2d074ebf4f5ab1f328ed9892548c65501d8b12f8c84e6e58"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 279831209,
                    "digest": "sha256:6825c68b5176bc4a0f11c5dc50a19d32f62ef8bc43819abdef8280bfb3437113"
                }
            ]
        },
        "1.28.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8092,
                "digest": "sha256:eb0c7a7d5c39d675bfc5b05a32a83d449b0554a2901aa3947b0fe4976a885024"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27145851,
                    "digest": "sha256:b4d181a07f8025e00e0cb28f1cc14613da2ce26450b80c54aea537fa93cf3bda"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2769653,
                    "digest": "sha256:de8ecf497b753094723ccf9cea8a46076e7cb845f333df99a6f4f397c93c6ea9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10727611,
                    "digest": "sha256:6ea9cb12457214a5eda82bc4aad8fc1b20c0cee03042d4b6b6da946a94af3274"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 234,
                    "digest": "sha256:9a8aa9d08ec5d2bb15de97e33b599bb4472ccd7d58fe4f15f0dfd7d4fd08fa6d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2635574,
                    "digest": "sha256:360b2e4ced966675f720b48dee317e200ed394abc8b95609a31bfb5225b4f746"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 164,
                    "digest": "sha256:e9f89e660fdc3fb1ee0c33bbb2d4b8996df5c27a18f673aebe0738606123306d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 287292558,
                    "digest": "sha256:c19132b293b45702a3cdd034ee04c0d95dcaa1951785606b7545f98bad97a7fa"
                }
            ]
        },
        "1.29.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8092,
                "digest": "sha256:de2788072f55936c56c132771093c6a63154e15aee73bf61db3d859784c6b43f"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27145851,
                    "digest": "sha256:b4d181a07f8025e00e0cb28f1cc14613da2ce26450b80c54aea537fa93cf3bda"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2769653,
                    "digest": "sha256:de8ecf497b753094723ccf9cea8a46076e7cb845f333df99a6f4f397c93c6ea9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10727611,
                    "digest": "sha256:6ea9cb12457214a5eda82bc4aad8fc1b20c0cee03042d4b6b6da946a94af3274"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 234,
                    "digest": "sha256:9a8aa9d08ec5d2bb15de97e33b599bb4472ccd7d58fe4f15f0dfd7d4fd08fa6d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2635574,
                    "digest": "sha256:360b2e4ced966675f720b48dee317e200ed394abc8b95609a31bfb5225b4f746"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 163,
                    "digest": "sha256:d83aae0764e97bb9b30ccdb777778bcdc436b1aaff3119b9f02e3cfcfdfd1520"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 287027820,
                    "digest": "sha256:cf12d16a2450d9241754720a5f8ca308ebd5818998375c7dc4eb04feeaa7279f"
                }
            ]
        },
        "1.30.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8091,
                "digest": "sha256:0b88e154111e5107078dbd8ae6bf6efd0ddf1bda8aa4fea0aaf71ace8c071eea"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27145795,
                    "digest": "sha256:33847f680f63fb1b343a9fc782e267b5abdbdb50d65d4b9bd2a136291d67cf75"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2769657,
                    "digest": "sha256:e8124950597ef414e28733cf0103e563f8aad1e6fddab87b952df575843fb83d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10727314,
                    "digest": "sha256:cc636c24d49da06278107a1de68a5c7ed1c5c9af7add17b605017eeb8e784fe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 233,
                    "digest": "sha256:1fbf3ac5d4b602d4798356c6c470d5e04a4229a1c7cb7fd215574d3f605f6c12"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2635036,
                    "digest": "sha256:937cec37db4e8c538c6af32d5ef83c1010e38d30b53078cfa18f2f88276b24f5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 161,
                    "digest": "sha256:ad169896ab439f7bdbf1a0acfdfb23fe627ba3d57bb33fd8c5e8b326922389d5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 287984882,
                    "digest": "sha256:088b3266a9af5b063921c7b122855fa4639f7ea095579b14c8e3745f5256fda5"
                }
            ]
        },
        "1.31.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8090,
                "digest": "sha256:2237593a51636b9949b3f2fd3168b8e9844f27d17baefcc17a121f17b10c4b2d"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31361314,
                    "digest": "sha256:99046ad9247f8a1cbd1048d9099d026191ad9cda63c08aadeb704b7000a51717"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1075866,
                    "digest": "sha256:9202170ba44ed748bb05d5e0de4a8c1ed1de21c247bc5b55c8323424d28f411f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10767983,
                    "digest": "sha256:6bdca8728bf12f003e1740f21512fcae48806cd51bb48ac0f2bbc2da276d411f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 233,
                    "digest": "sha256:804f2ebd542d674b43114a3fb1fb8a5f92ff64228ce1c81482fb78f46705bca8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2640035,
                    "digest": "sha256:7dca75a5a024e2c34077cc60e7ea324999500103b3155f3eea7c152150bacc0c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 163,
                    "digest": "sha256:4e88e88ac2bec24e69c7a23fad6db674e71a003211e63dd7a060b8b4f24c979c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 288158284,
                    "digest": "sha256:3926151f69944a1bca5587b61bbf340cf7eec8860dc0df49fba0c37badd94a79"
                }
            ]
        },
        "1.32.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8089,
                "digest": "sha256:34a74e3faf6122fb9f6487a8a40b80745bc4569c246be452ddc77ed76199b872"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31361314,
                    "digest": "sha256:99046ad9247f8a1cbd1048d9099d026191ad9cda63c08aadeb704b7000a51717"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1075866,
                    "digest": "sha256:9202170ba44ed748bb05d5e0de4a8c1ed1de21c247bc5b55c8323424d28f411f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10767983,
                    "digest": "sha256:6bdca8728bf12f003e1740f21512fcae48806cd51bb48ac0f2bbc2da276d411f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 233,
                    "digest": "sha256:804f2ebd542d674b43114a3fb1fb8a5f92ff64228ce1c81482fb78f46705bca8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2640035,
                    "digest": "sha256:7dca75a5a024e2c34077cc60e7ea324999500103b3155f3eea7c152150bacc0c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 161,
                    "digest": "sha256:a0bf810c1596692034f667461fc1279fc81e1735c29ed9284ee489502d8bab5b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 287805142,
                    "digest": "sha256:5487dc0acf0f4db54bb09a898532b6c406f24b3c37d1d144bf315910415a3f62"
                }
            ]
        },
        "1.33.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8090,
                "digest": "sha256:6e3779003061156f8cdee96b112dbf080cb0150993243af7ac52f33a43e156a1"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31361314,
                    "digest": "sha256:99046ad9247f8a1cbd1048d9099d026191ad9cda63c08aadeb704b7000a51717"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1075866,
                    "digest": "sha256:9202170ba44ed748bb05d5e0de4a8c1ed1de21c247bc5b55c8323424d28f411f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10767983,
                    "digest": "sha256:6bdca8728bf12f003e1740f21512fcae48806cd51bb48ac0f2bbc2da276d411f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 233,
                    "digest": "sha256:804f2ebd542d674b43114a3fb1fb8a5f92ff64228ce1c81482fb78f46705bca8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2640035,
                    "digest": "sha256:7dca75a5a024e2c34077cc60e7ea324999500103b3155f3eea7c152150bacc0c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 163,
                    "digest": "sha256:7937481104b8390bc670e7ab44d5d0eaaf0a185bf6cee86c9d5bfabd8a32be96"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 288873031,
                    "digest": "sha256:c390db994f71079355f1be8b1eb90d61c91cc30dcb7111a59448504bcfb93107"
                }
            ]
        },
        "master": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8343,
                "digest": "sha256:289ba268dcbd538f914f6db2524a3a288fdb7dfb2fd28cbdd3cbc716db83f317"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31368702,
                    "digest": "sha256:f8416d8bac72cefc0ce17bd2dc0c03aa43e123d309db92ee23be9382192cf2ed"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1075878,
                    "digest": "sha256:3d1fe1074eaea82869a876619334a5448c477356bf832b4623ac4261013dbba7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10768935,
                    "digest": "sha256:01ee43ff2a967d8a9e1b48c780c5d50d496925335550d3b0aacc2d038466e04a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 233,
                    "digest": "sha256:83c2515dd8ac2d3a7aa7d22a83e1bcd66cd3c57622c1f30511ff387ff7cb0a5c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2640410,
                    "digest": "sha256:84e6817918949878ae2289b9f8f19371be21ad04d3ab5dcb8c6acf33c341fd65"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 163,
                    "digest": "sha256:5568495f5df66a5d1bca0ad4841ce71715970b3ecb20e6617775e049a8f4bdc0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 289862415,
                    "digest": "sha256:6beba259b2ba98ab82be9d7aa903a65a2ff3d533d6586e2d939f096ee47d2e79"
                }
            ]
        },
        "1.34.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8343,
                "digest": "sha256:283da82789cee36b7b538a0bb5edbf3cff3d454dd4874ce13af5ba63ca966f4b"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31368702,
                    "digest": "sha256:f8416d8bac72cefc0ce17bd2dc0c03aa43e123d309db92ee23be9382192cf2ed"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1075878,
                    "digest": "sha256:3d1fe1074eaea82869a876619334a5448c477356bf832b4623ac4261013dbba7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10768935,
                    "digest": "sha256:01ee43ff2a967d8a9e1b48c780c5d50d496925335550d3b0aacc2d038466e04a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 233,
                    "digest": "sha256:83c2515dd8ac2d3a7aa7d22a83e1bcd66cd3c57622c1f30511ff387ff7cb0a5c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2640410,
                    "digest": "sha256:84e6817918949878ae2289b9f8f19371be21ad04d3ab5dcb8c6acf33c341fd65"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 163,
                    "digest": "sha256:3744ecafe46350e74d64d6846be3b1b3eaf6e59ac02f16b0e29867ab421a212e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 289861807,
                    "digest": "sha256:5c6579ac9c4d0e4a02a0795a6f1f51e9bfd87985a50de11eebe0ea010c6e53ef"
                }
            ]
        }
    },
    "tags": [
        "latest",
        "1.13.0",
        "1.14.0",
        "1.15.0",
        "1.16.0",
        "1.17.0",
        "1.18.0",
        "1.19.0",
        "1.20.0",
        "1.21.0",
        "1.22.0",
        "1.23.0",
        "1.24.0",
        "1.25.0",
        "1.26.0",
        "1.27.0",
        "1.28.0",
        "1.29.0",
        "1.30.0",
        "1.31.0",
        "1.32.0",
        "1.33.0",
        "master",
        "1.34.0"
    ],
    "configs": {
        "latest": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8",
                    "GPG_KEY=E3FF2839C048B25C084DEBE9B26995E310250568",
                    "PYTHON_VERSION=3.8.5",
                    "PYTHON_PIP_VERSION=20.2.2",
                    "PYTHON_GET_PIP_URL=https://github.com/pypa/get-pip/raw/5578af97f8b2b466f4cdbebe18a3ba2d48ad1434/get-pip.py",
                    "PYTHON_GET_PIP_SHA256=d4d62a0850fe0c2e6325b2cc20d818c580563de5a2038f917e3cb0e25280b4d1"
                ],
                "Cmd": [
                    "python3"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a13b43d4289918027f32e4c724de5b5da8ee4b5891e943d4aa46d3ef5aa88517",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "a050efb4b519ef24a5cf936dce9412c5d21ee0a90ebf3afb26d04a84edcba7ec",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8",
                    "GPG_KEY=E3FF2839C048B25C084DEBE9B26995E310250568",
                    "PYTHON_VERSION=3.8.5",
                    "PYTHON_PIP_VERSION=20.2.2",
                    "PYTHON_GET_PIP_URL=https://github.com/pypa/get-pip/raw/5578af97f8b2b466f4cdbebe18a3ba2d48ad1434/get-pip.py",
                    "PYTHON_GET_PIP_SHA256=d4d62a0850fe0c2e6325b2cc20d818c580563de5a2038f917e3cb0e25280b4d1"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "pip install -r requirements.txt"
                ],
                "Image": "sha256:a13b43d4289918027f32e4c724de5b5da8ee4b5891e943d4aa46d3ef5aa88517",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2020-09-01T14:30:30.869639082Z",
            "docker_version": "19.03.12+azure",
            "history": [
                {
                    "created": "2020-08-04T15:42:51.236961617Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3af3091e7d2bb40bc1e6550eb5ea290badc6bbf3339105626f245a963cc11450 in / "
                },
                {
                    "created": "2020-08-04T15:42:51.474369117Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-04T15:53:44.149069144Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-04T15:53:44.338185908Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-04T15:53:51.153670354Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tnetbase \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-08-04T15:53:51.346546383Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GPG_KEY=E3FF2839C048B25C084DEBE9B26995E310250568",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-04T16:14:25.935028498Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_VERSION=3.8.5",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-04T16:25:37.158851089Z",
                    "created_by": "/bin/sh -c set -ex \t\t&& savedAptMark=\"$(apt-mark showmanual)\" \t&& apt-get update && apt-get install -y --no-install-recommends \t\tdpkg-dev \t\tgcc \t\tlibbluetooth-dev \t\tlibbz2-dev \t\tlibc6-dev \t\tlibexpat1-dev \t\tlibffi-dev \t\tlibgdbm-dev \t\tliblzma-dev \t\tlibncursesw5-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tmake \t\ttk-dev \t\tuuid-dev \t\twget \t\txz-utils \t\tzlib1g-dev \t\t$(command -v gpg > /dev/null || echo 'gnupg dirmngr') \t\t&& wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \t&& wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$GPG_KEY\" \t&& gpg --batch --verify python.tar.xz.asc python.tar.xz \t&& { command -v gpgconf > /dev/null && gpgconf --kill all || :; } \t&& rm -rf \"$GNUPGHOME\" python.tar.xz.asc \t&& mkdir -p /usr/src/python \t&& tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \t&& rm python.tar.xz \t\t&& cd /usr/src/python \t&& gnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \t&& ./configure \t\t--build=\"$gnuArch\" \t\t--enable-loadable-sqlite-extensions \t\t--enable-optimizations \t\t--enable-option-checking=fatal \t\t--enable-shared \t\t--with-system-expat \t\t--with-system-ffi \t\t--without-ensurepip \t&& make -j \"$(nproc)\" \t\tLDFLAGS=\"-Wl,--strip-all\" \t&& make install \t&& rm -rf /usr/src/python \t\t&& find /usr/local -depth \t\t\\( \t\t\t\\( -type d -a \\( -name test -o -name tests -o -name idle_test \\) \\) \t\t\t-o \\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' -o -name '*.a' \\) \\) \t\t\t-o \\( -type f -a -name 'wininst-*.exe' \\) \t\t\\) -exec rm -rf '{}' + \t\t&& ldconfig \t\t&& apt-mark auto '.*' > /dev/null \t&& apt-mark manual $savedAptMark \t&& find /usr/local -type f -executable -not \\( -name '*tkinter*' \\) -exec ldd '{}' ';' \t\t| awk '/=>/ { print $(NF-1) }' \t\t| sort -u \t\t| xargs -r dpkg-query --search \t\t| cut -d: -f1 \t\t| sort -u \t\t| xargs -r apt-mark manual \t&& apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false \t&& rm -rf /var/lib/apt/lists/* \t\t&& python3 --version"
                },
                {
                    "created": "2020-08-04T16:25:37.997255005Z",
                    "created_by": "/bin/sh -c cd /usr/local/bin \t&& ln -s idle3 idle \t&& ln -s pydoc3 pydoc \t&& ln -s python3 python \t&& ln -s python3-config python-config"
                },
                {
                    "created": "2020-08-11T20:36:50.630596784Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_PIP_VERSION=20.2.2",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-11T20:36:50.81078053Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_GET_PIP_URL=https://github.com/pypa/get-pip/raw/5578af97f8b2b466f4cdbebe18a3ba2d48ad1434/get-pip.py",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-11T20:36:50.978617282Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_GET_PIP_SHA256=d4d62a0850fe0c2e6325b2cc20d818c580563de5a2038f917e3cb0e25280b4d1",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-11T20:37:03.493595682Z",
                    "created_by": "/bin/sh -c set -ex; \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends wget; \t\twget -O get-pip.py \"$PYTHON_GET_PIP_URL\"; \techo \"$PYTHON_GET_PIP_SHA256 *get-pip.py\" | sha256sum --check --strict -; \t\tapt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \trm -rf /var/lib/apt/lists/*; \t\tpython get-pip.py \t\t--disable-pip-version-check \t\t--no-cache-dir \t\t\"pip==$PYTHON_PIP_VERSION\" \t; \tpip --version; \t\tfind /usr/local -depth \t\t\\( \t\t\t\\( -type d -a \\( -name test -o -name tests -o -name idle_test \\) \\) \t\t\t-o \t\t\t\\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' \\) \\) \t\t\\) -exec rm -rf '{}' +; \trm -f get-pip.py"
                },
                {
                    "created": "2020-08-11T20:37:03.694213868Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"python3\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-01T14:29:54.000146951Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:983c395a4f895b891f0e865da03e4bddcb5fa918203467b271746e6e273494e8 in requirements.txt "
                },
                {
                    "created": "2020-09-01T14:30:30.869639082Z",
                    "created_by": "/bin/sh -c pip install -r requirements.txt"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d0f104dc0a1f9c744b65b23b3fd4d4d3236b4656e67f776fe13f8ad8423b955c",
                    "sha256:2b99e24030638bb97d187a8266695a95cda7853c01aeb4700fbad54a4c80acc0",
                    "sha256:98ff2784e9f5382c99cdeac9799e06a6f9c35a66de86005991d3261694495def",
                    "sha256:1e441fe06d9010689dcdd9d65a7a586c56a73f2a849cb6c11d285570cece4556",
                    "sha256:3e0762bebc7151d5e5240243ced5c696a0f3a5084d72f70a467349bc8e7f5a04",
                    "sha256:68d2454d319390942a11935e567b7f78b63fae4b7464e4f6edc3f02a65159f04",
                    "sha256:a26183e982890a4867c96e5460c9e51abe2dc4659c9cf5c30cdef9915dca167b"
                ]
            }
        },
        "1.13.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8",
                    "GPG_KEY=E3FF2839C048B25C084DEBE9B26995E310250568",
                    "PYTHON_VERSION=3.8.5",
                    "PYTHON_PIP_VERSION=20.2.2",
                    "PYTHON_GET_PIP_URL=https://github.com/pypa/get-pip/raw/5578af97f8b2b466f4cdbebe18a3ba2d48ad1434/get-pip.py",
                    "PYTHON_GET_PIP_SHA256=d4d62a0850fe0c2e6325b2cc20d818c580563de5a2038f917e3cb0e25280b4d1"
                ],
                "Cmd": [
                    "python3"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:8de885830604d74edfd96e063478a01a9c536a9aba3436c21f15f54cdf7ea424",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "582262b42f2ff6bd43ad330d4fee844abfd05a8a9c1d94ea1a3359eeb25b6e91",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8",
                    "GPG_KEY=E3FF2839C048B25C084DEBE9B26995E310250568",
                    "PYTHON_VERSION=3.8.5",
                    "PYTHON_PIP_VERSION=20.2.2",
                    "PYTHON_GET_PIP_URL=https://github.com/pypa/get-pip/raw/5578af97f8b2b466f4cdbebe18a3ba2d48ad1434/get-pip.py",
                    "PYTHON_GET_PIP_SHA256=d4d62a0850fe0c2e6325b2cc20d818c580563de5a2038f917e3cb0e25280b4d1"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "pip install -r requirements.txt"
                ],
                "Image": "sha256:8de885830604d74edfd96e063478a01a9c536a9aba3436c21f15f54cdf7ea424",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2020-09-01T14:39:00.69059097Z",
            "docker_version": "19.03.12+azure",
            "history": [
                {
                    "created": "2020-08-04T15:42:51.236961617Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3af3091e7d2bb40bc1e6550eb5ea290badc6bbf3339105626f245a963cc11450 in / "
                },
                {
                    "created": "2020-08-04T15:42:51.474369117Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-04T15:53:44.149069144Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-04T15:53:44.338185908Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-04T15:53:51.153670354Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tnetbase \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-08-04T15:53:51.346546383Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GPG_KEY=E3FF2839C048B25C084DEBE9B26995E310250568",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-04T16:14:25.935028498Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_VERSION=3.8.5",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-04T16:25:37.158851089Z",
                    "created_by": "/bin/sh -c set -ex \t\t&& savedAptMark=\"$(apt-mark showmanual)\" \t&& apt-get update && apt-get install -y --no-install-recommends \t\tdpkg-dev \t\tgcc \t\tlibbluetooth-dev \t\tlibbz2-dev \t\tlibc6-dev \t\tlibexpat1-dev \t\tlibffi-dev \t\tlibgdbm-dev \t\tliblzma-dev \t\tlibncursesw5-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tmake \t\ttk-dev \t\tuuid-dev \t\twget \t\txz-utils \t\tzlib1g-dev \t\t$(command -v gpg > /dev/null || echo 'gnupg dirmngr') \t\t&& wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \t&& wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$GPG_KEY\" \t&& gpg --batch --verify python.tar.xz.asc python.tar.xz \t&& { command -v gpgconf > /dev/null && gpgconf --kill all || :; } \t&& rm -rf \"$GNUPGHOME\" python.tar.xz.asc \t&& mkdir -p /usr/src/python \t&& tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \t&& rm python.tar.xz \t\t&& cd /usr/src/python \t&& gnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \t&& ./configure \t\t--build=\"$gnuArch\" \t\t--enable-loadable-sqlite-extensions \t\t--enable-optimizations \t\t--enable-option-checking=fatal \t\t--enable-shared \t\t--with-system-expat \t\t--with-system-ffi \t\t--without-ensurepip \t&& make -j \"$(nproc)\" \t\tLDFLAGS=\"-Wl,--strip-all\" \t&& make install \t&& rm -rf /usr/src/python \t\t&& find /usr/local -depth \t\t\\( \t\t\t\\( -type d -a \\( -name test -o -name tests -o -name idle_test \\) \\) \t\t\t-o \\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' -o -name '*.a' \\) \\) \t\t\t-o \\( -type f -a -name 'wininst-*.exe' \\) \t\t\\) -exec rm -rf '{}' + \t\t&& ldconfig \t\t&& apt-mark auto '.*' > /dev/null \t&& apt-mark manual $savedAptMark \t&& find /usr/local -type f -executable -not \\( -name '*tkinter*' \\) -exec ldd '{}' ';' \t\t| awk '/=>/ { print $(NF-1) }' \t\t| sort -u \t\t| xargs -r dpkg-query --search \t\t| cut -d: -f1 \t\t| sort -u \t\t| xargs -r apt-mark manual \t&& apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false \t&& rm -rf /var/lib/apt/lists/* \t\t&& python3 --version"
                },
                {
                    "created": "2020-08-04T16:25:37.997255005Z",
                    "created_by": "/bin/sh -c cd /usr/local/bin \t&& ln -s idle3 idle \t&& ln -s pydoc3 pydoc \t&& ln -s python3 python \t&& ln -s python3-config python-config"
                },
                {
                    "created": "2020-08-11T20:36:50.630596784Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_PIP_VERSION=20.2.2",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-11T20:36:50.81078053Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_GET_PIP_URL=https://github.com/pypa/get-pip/raw/5578af97f8b2b466f4cdbebe18a3ba2d48ad1434/get-pip.py",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-11T20:36:50.978617282Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_GET_PIP_SHA256=d4d62a0850fe0c2e6325b2cc20d818c580563de5a2038f917e3cb0e25280b4d1",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-11T20:37:03.493595682Z",
                    "created_by": "/bin/sh -c set -ex; \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends wget; \t\twget -O get-pip.py \"$PYTHON_GET_PIP_URL\"; \techo \"$PYTHON_GET_PIP_SHA256 *get-pip.py\" | sha256sum --check --strict -; \t\tapt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \trm -rf /var/lib/apt/lists/*; \t\tpython get-pip.py \t\t--disable-pip-version-check \t\t--no-cache-dir \t\t\"pip==$PYTHON_PIP_VERSION\" \t; \tpip --version; \t\tfind /usr/local -depth \t\t\\( \t\t\t\\( -type d -a \\( -name test -o -name tests -o -name idle_test \\) \\) \t\t\t-o \t\t\t\\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' \\) \\) \t\t\\) -exec rm -rf '{}' +; \trm -f get-pip.py"
                },
                {
                    "created": "2020-08-11T20:37:03.694213868Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"python3\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-01T14:38:24.025800802Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:983c395a4f895b891f0e865da03e4bddcb5fa918203467b271746e6e273494e8 in requirements.txt "
                },
                {
                    "created": "2020-09-01T14:39:00.69059097Z",
                    "created_by": "/bin/sh -c pip install -r requirements.txt"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d0f104dc0a1f9c744b65b23b3fd4d4d3236b4656e67f776fe13f8ad8423b955c",
                    "sha256:2b99e24030638bb97d187a8266695a95cda7853c01aeb4700fbad54a4c80acc0",
                    "sha256:98ff2784e9f5382c99cdeac9799e06a6f9c35a66de86005991d3261694495def",
                    "sha256:1e441fe06d9010689dcdd9d65a7a586c56a73f2a849cb6c11d285570cece4556",
                    "sha256:3e0762bebc7151d5e5240243ced5c696a0f3a5084d72f70a467349bc8e7f5a04",
                    "sha256:dd84de42c3eddf668a33649387ea31664c5472d131054c29a14ba3578f6ef803",
                    "sha256:e6066370db2d5f11dea509be30fbf395a2b0ad4c3d39b9ae9cfcd232fd7bbf5e"
                ]
            }
        },
        "1.14.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8",
                    "GPG_KEY=E3FF2839C048B25C084DEBE9B26995E310250568",
                    "PYTHON_VERSION=3.8.5",
                    "PYTHON_PIP_VERSION=20.2.3",
                    "PYTHON_GET_PIP_URL=https://github.com/pypa/get-pip/raw/fa7dc83944936bf09a0e4cb5d5ec852c0d256599/get-pip.py",
                    "PYTHON_GET_PIP_SHA256=6e0bb0a2c2533361d7f297ed547237caf1b7507f197835974c0dd7eba998c53c"
                ],
                "Cmd": [
                    "python3"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:25f207eef2450985ba6b15aba1e0f84d5e6432eded61d576ec6d21de7f73986a",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "4dc61b61a69ff9a6465e0b5df2f42b4498ec3223cc80a549cc30b1aede57fa66",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8",
                    "GPG_KEY=E3FF2839C048B25C084DEBE9B26995E310250568",
                    "PYTHON_VERSION=3.8.5",
                    "PYTHON_PIP_VERSION=20.2.3",
                    "PYTHON_GET_PIP_URL=https://github.com/pypa/get-pip/raw/fa7dc83944936bf09a0e4cb5d5ec852c0d256599/get-pip.py",
                    "PYTHON_GET_PIP_SHA256=6e0bb0a2c2533361d7f297ed547237caf1b7507f197835974c0dd7eba998c53c"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "pip install -r requirements.txt"
                ],
                "Image": "sha256:25f207eef2450985ba6b15aba1e0f84d5e6432eded61d576ec6d21de7f73986a",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2020-09-24T06:45:29.669234375Z",
            "docker_version": "19.03.12+azure",
            "history": [
                {
                    "created": "2020-09-10T00:23:29.698339558Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e7407f2294ad23634565820b9669b18ff2a2ca0212a7ec84b9c89d8550859954 in / "
                },
                {
                    "created": "2020-09-10T00:23:30.055763036Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-10T16:28:20.510277013Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-10T16:28:20.695103547Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-10T16:28:29.482362607Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tnetbase \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-09-10T16:28:29.684917367Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GPG_KEY=E3FF2839C048B25C084DEBE9B26995E310250568",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-10T16:48:29.730010099Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_VERSION=3.8.5",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-10T16:59:53.7539873Z",
                    "created_by": "/bin/sh -c set -ex \t\t&& savedAptMark=\"$(apt-mark showmanual)\" \t&& apt-get update && apt-get install -y --no-install-recommends \t\tdpkg-dev \t\tgcc \t\tlibbluetooth-dev \t\tlibbz2-dev \t\tlibc6-dev \t\tlibexpat1-dev \t\tlibffi-dev \t\tlibgdbm-dev \t\tliblzma-dev \t\tlibncursesw5-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tmake \t\ttk-dev \t\tuuid-dev \t\twget \t\txz-utils \t\tzlib1g-dev \t\t$(command -v gpg > /dev/null || echo 'gnupg dirmngr') \t\t&& wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \t&& wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$GPG_KEY\" \t&& gpg --batch --verify python.tar.xz.asc python.tar.xz \t&& { command -v gpgconf > /dev/null && gpgconf --kill all || :; } \t&& rm -rf \"$GNUPGHOME\" python.tar.xz.asc \t&& mkdir -p /usr/src/python \t&& tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \t&& rm python.tar.xz \t\t&& cd /usr/src/python \t&& gnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \t&& ./configure \t\t--build=\"$gnuArch\" \t\t--enable-loadable-sqlite-extensions \t\t--enable-optimizations \t\t--enable-option-checking=fatal \t\t--enable-shared \t\t--with-system-expat \t\t--with-system-ffi \t\t--without-ensurepip \t&& make -j \"$(nproc)\" \t\tLDFLAGS=\"-Wl,--strip-all\" \t&& make install \t&& rm -rf /usr/src/python \t\t&& find /usr/local -depth \t\t\\( \t\t\t\\( -type d -a \\( -name test -o -name tests -o -name idle_test \\) \\) \t\t\t-o \\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' -o -name '*.a' \\) \\) \t\t\t-o \\( -type f -a -name 'wininst-*.exe' \\) \t\t\\) -exec rm -rf '{}' + \t\t&& ldconfig \t\t&& apt-mark auto '.*' > /dev/null \t&& apt-mark manual $savedAptMark \t&& find /usr/local -type f -executable -not \\( -name '*tkinter*' \\) -exec ldd '{}' ';' \t\t| awk '/=>/ { print $(NF-1) }' \t\t| sort -u \t\t| xargs -r dpkg-query --search \t\t| cut -d: -f1 \t\t| sort -u \t\t| xargs -r apt-mark manual \t&& apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false \t&& rm -rf /var/lib/apt/lists/* \t\t&& python3 --version"
                },
                {
                    "created": "2020-09-10T16:59:54.582067685Z",
                    "created_by": "/bin/sh -c cd /usr/local/bin \t&& ln -s idle3 idle \t&& ln -s pydoc3 pydoc \t&& ln -s python3 python \t&& ln -s python3-config python-config"
                },
                {
                    "created": "2020-09-10T16:59:54.758995024Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_PIP_VERSION=20.2.3",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-10T16:59:54.936288746Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_GET_PIP_URL=https://github.com/pypa/get-pip/raw/fa7dc83944936bf09a0e4cb5d5ec852c0d256599/get-pip.py",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-10T16:59:55.123717489Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_GET_PIP_SHA256=6e0bb0a2c2533361d7f297ed547237caf1b7507f197835974c0dd7eba998c53c",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-10T17:00:10.349517417Z",
                    "created_by": "/bin/sh -c set -ex; \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends wget; \t\twget -O get-pip.py \"$PYTHON_GET_PIP_URL\"; \techo \"$PYTHON_GET_PIP_SHA256 *get-pip.py\" | sha256sum --check --strict -; \t\tapt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \trm -rf /var/lib/apt/lists/*; \t\tpython get-pip.py \t\t--disable-pip-version-check \t\t--no-cache-dir \t\t\"pip==$PYTHON_PIP_VERSION\" \t; \tpip --version; \t\tfind /usr/local -depth \t\t\\( \t\t\t\\( -type d -a \\( -name test -o -name tests -o -name idle_test \\) \\) \t\t\t-o \t\t\t\\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' \\) \\) \t\t\\) -exec rm -rf '{}' +; \trm -f get-pip.py"
                },
                {
                    "created": "2020-09-10T17:00:10.671212229Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"python3\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-24T06:44:54.137540146Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ebb2ed835fa5b69d673819e19ab39caa60af11650117434eefadbfeadf6daa43 in requirements.txt "
                },
                {
                    "created": "2020-09-24T06:45:29.669234375Z",
                    "created_by": "/bin/sh -c pip install -r requirements.txt"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:07cab433985205f29909739f511777a810f4a9aff486355b71308bb654cdc868",
                    "sha256:bd8e6688d36c5ce97cc1916cc00d53c7feeaf0157ad78c9de4f953a47a69fea8",
                    "sha256:6280b41d048dbab4f4efc8955c6f436365c3dfda76df40fee359ef63d9860b41",
                    "sha256:9f72a1f4c21f8510c9429dc6ce909a7f957c0f2559c0e98e184d76d2a07822a7",
                    "sha256:bb38c3f3fcc567fc2ab66e13e10fda8a637dae8803d2facbb5dff40d0ac2c5ce",
                    "sha256:7152836c05fe88a0066db7bdf83669f78413945ff101b7aba929cbeb8fe74d7f",
                    "sha256:a11897ef7dc884080c4dbfff5f3943c6b9ca1cfc4d042dbb921b463ce8af4ba9"
                ]
            }
        },
        "1.15.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8",
                    "GPG_KEY=0D96DF4D4110E5C43FBFB17F2D347EA6AA65421D",
                    "PYTHON_VERSION=3.7.9",
                    "PYTHON_PIP_VERSION=20.2.3",
                    "PYTHON_GET_PIP_URL=https://github.com/pypa/get-pip/raw/fa7dc83944936bf09a0e4cb5d5ec852c0d256599/get-pip.py",
                    "PYTHON_GET_PIP_SHA256=6e0bb0a2c2533361d7f297ed547237caf1b7507f197835974c0dd7eba998c53c"
                ],
                "Cmd": [
                    "python3"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:405c226dfdfc93bce42ae139b5a2c7625721c1a25ea5e75b4a2ec8a2b8a98356",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "cb1c9a884841615410a948a71856a156f09f511557a7edd9a487aaa570289308",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8",
                    "GPG_KEY=0D96DF4D4110E5C43FBFB17F2D347EA6AA65421D",
                    "PYTHON_VERSION=3.7.9",
                    "PYTHON_PIP_VERSION=20.2.3",
                    "PYTHON_GET_PIP_URL=https://github.com/pypa/get-pip/raw/fa7dc83944936bf09a0e4cb5d5ec852c0d256599/get-pip.py",
                    "PYTHON_GET_PIP_SHA256=6e0bb0a2c2533361d7f297ed547237caf1b7507f197835974c0dd7eba998c53c"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "pip install -r requirements.txt"
                ],
                "Image": "sha256:405c226dfdfc93bce42ae139b5a2c7625721c1a25ea5e75b4a2ec8a2b8a98356",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2020-10-10T21:41:46.132988562Z",
            "docker_version": "19.03.13+azure",
            "history": [
                {
                    "created": "2020-09-10T00:23:29.698339558Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e7407f2294ad23634565820b9669b18ff2a2ca0212a7ec84b9c89d8550859954 in / "
                },
                {
                    "created": "2020-09-10T00:23:30.055763036Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-10T16:28:20.510277013Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-10T16:28:20.695103547Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-10T16:28:29.482362607Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tnetbase \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-09-10T17:11:30.987867628Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GPG_KEY=0D96DF4D4110E5C43FBFB17F2D347EA6AA65421D",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-10T17:11:31.18825836Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_VERSION=3.7.9",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-10T17:23:32.106018849Z",
                    "created_by": "/bin/sh -c set -ex \t\t&& savedAptMark=\"$(apt-mark showmanual)\" \t&& apt-get update && apt-get install -y --no-install-recommends \t\tdpkg-dev \t\tgcc \t\tlibbluetooth-dev \t\tlibbz2-dev \t\tlibc6-dev \t\tlibexpat1-dev \t\tlibffi-dev \t\tlibgdbm-dev \t\tliblzma-dev \t\tlibncursesw5-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tmake \t\ttk-dev \t\tuuid-dev \t\twget \t\txz-utils \t\tzlib1g-dev \t\t$(command -v gpg > /dev/null || echo 'gnupg dirmngr') \t\t&& wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \t&& wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$GPG_KEY\" \t&& gpg --batch --verify python.tar.xz.asc python.tar.xz \t&& { command -v gpgconf > /dev/null && gpgconf --kill all || :; } \t&& rm -rf \"$GNUPGHOME\" python.tar.xz.asc \t&& mkdir -p /usr/src/python \t&& tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \t&& rm python.tar.xz \t\t&& cd /usr/src/python \t&& gnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \t&& ./configure \t\t--build=\"$gnuArch\" \t\t--enable-loadable-sqlite-extensions \t\t--enable-optimizations \t\t--enable-option-checking=fatal \t\t--enable-shared \t\t--with-system-expat \t\t--with-system-ffi \t\t--without-ensurepip \t&& make -j \"$(nproc)\" \t\tLDFLAGS=\"-Wl,--strip-all\" \t\tPROFILE_TASK='-m test.regrtest --pgo \t\t\ttest_array \t\t\ttest_base64 \t\t\ttest_binascii \t\t\ttest_binhex \t\t\ttest_binop \t\t\ttest_bytes \t\t\ttest_c_locale_coercion \t\t\ttest_class \t\t\ttest_cmath \t\t\ttest_codecs \t\t\ttest_compile \t\t\ttest_complex \t\t\ttest_csv \t\t\ttest_decimal \t\t\ttest_dict \t\t\ttest_float \t\t\ttest_fstring \t\t\ttest_hashlib \t\t\ttest_io \t\t\ttest_iter \t\t\ttest_json \t\t\ttest_long \t\t\ttest_math \t\t\ttest_memoryview \t\t\ttest_pickle \t\t\ttest_re \t\t\ttest_set \t\t\ttest_slice \t\t\ttest_struct \t\t\ttest_threading \t\t\ttest_time \t\t\ttest_traceback \t\t\ttest_unicode \t\t' \t&& make install \t&& rm -rf /usr/src/python \t\t&& find /usr/local -depth \t\t\\( \t\t\t\\( -type d -a \\( -name test -o -name tests -o -name idle_test \\) \\) \t\t\t-o \\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' -o -name '*.a' \\) \\) \t\t\t-o \\( -type f -a -name 'wininst-*.exe' \\) \t\t\\) -exec rm -rf '{}' + \t\t&& ldconfig \t\t&& apt-mark auto '.*' > /dev/null \t&& apt-mark manual $savedAptMark \t&& find /usr/local -type f -executable -not \\( -name '*tkinter*' \\) -exec ldd '{}' ';' \t\t| awk '/=>/ { print $(NF-1) }' \t\t| sort -u \t\t| xargs -r dpkg-query --search \t\t| cut -d: -f1 \t\t| sort -u \t\t| xargs -r apt-mark manual \t&& apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false \t&& rm -rf /var/lib/apt/lists/* \t\t&& python3 --version"
                },
                {
                    "created": "2020-09-10T17:23:32.90431504Z",
                    "created_by": "/bin/sh -c cd /usr/local/bin \t&& ln -s idle3 idle \t&& ln -s pydoc3 pydoc \t&& ln -s python3 python \t&& ln -s python3-config python-config"
                },
                {
                    "created": "2020-09-10T17:23:33.082966555Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_PIP_VERSION=20.2.3",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-10T17:23:33.283493538Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_GET_PIP_URL=https://github.com/pypa/get-pip/raw/fa7dc83944936bf09a0e4cb5d5ec852c0d256599/get-pip.py",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-10T17:23:33.467514773Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_GET_PIP_SHA256=6e0bb0a2c2533361d7f297ed547237caf1b7507f197835974c0dd7eba998c53c",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-10T17:23:49.620868454Z",
                    "created_by": "/bin/sh -c set -ex; \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends wget; \t\twget -O get-pip.py \"$PYTHON_GET_PIP_URL\"; \techo \"$PYTHON_GET_PIP_SHA256 *get-pip.py\" | sha256sum --check --strict -; \t\tapt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \trm -rf /var/lib/apt/lists/*; \t\tpython get-pip.py \t\t--disable-pip-version-check \t\t--no-cache-dir \t\t\"pip==$PYTHON_PIP_VERSION\" \t; \tpip --version; \t\tfind /usr/local -depth \t\t\\( \t\t\t\\( -type d -a \\( -name test -o -name tests -o -name idle_test \\) \\) \t\t\t-o \t\t\t\\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' \\) \\) \t\t\\) -exec rm -rf '{}' +; \trm -f get-pip.py"
                },
                {
                    "created": "2020-09-10T17:23:49.914331962Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"python3\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-10T21:41:11.00019621Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:89f38b55fe2140ca0d3e0d3cd00f469c6ac682898b8373dc7c1360d745346b82 in requirements.txt "
                },
                {
                    "created": "2020-10-10T21:41:46.132988562Z",
                    "created_by": "/bin/sh -c pip install -r requirements.txt"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:07cab433985205f29909739f511777a810f4a9aff486355b71308bb654cdc868",
                    "sha256:bd8e6688d36c5ce97cc1916cc00d53c7feeaf0157ad78c9de4f953a47a69fea8",
                    "sha256:84ca87503449123f067af6f4272c63da4f0615d838becdb3ceaa8222e00421c2",
                    "sha256:0c12857805ec5f2a5d12ec2e323d2be9ec5e8a28a4f64531c82db3fc26a327d7",
                    "sha256:8b13e5632dc84fcd6adf586969026805ed838866ba7466fa5bcc559a118569be",
                    "sha256:439c6867ef4f5185333bdae84e2b003a1f32facb7a5197b9a1a18092b1956f32",
                    "sha256:321500a97fd948d5f55b3b6711604a7692509f41875771a62e9e2f3492489ea5"
                ]
            }
        },
        "1.16.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8",
                    "GPG_KEY=E3FF2839C048B25C084DEBE9B26995E310250568",
                    "PYTHON_VERSION=3.8.6",
                    "PYTHON_PIP_VERSION=20.2.3",
                    "PYTHON_GET_PIP_URL=https://github.com/pypa/get-pip/raw/fa7dc83944936bf09a0e4cb5d5ec852c0d256599/get-pip.py",
                    "PYTHON_GET_PIP_SHA256=6e0bb0a2c2533361d7f297ed547237caf1b7507f197835974c0dd7eba998c53c"
                ],
                "Cmd": [
                    "python3"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:fc37c3cd02c0062715dd8d6e3e3e4f6bf688e637ae8d23f0bc9870a4024bc31e",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "74042cb34c2e33030836692286650cab01abb12b3047ddbc9582f968f287a29b",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8",
                    "GPG_KEY=E3FF2839C048B25C084DEBE9B26995E310250568",
                    "PYTHON_VERSION=3.8.6",
                    "PYTHON_PIP_VERSION=20.2.3",
                    "PYTHON_GET_PIP_URL=https://github.com/pypa/get-pip/raw/fa7dc83944936bf09a0e4cb5d5ec852c0d256599/get-pip.py",
                    "PYTHON_GET_PIP_SHA256=6e0bb0a2c2533361d7f297ed547237caf1b7507f197835974c0dd7eba998c53c"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "pip install -r requirements.txt"
                ],
                "Image": "sha256:fc37c3cd02c0062715dd8d6e3e3e4f6bf688e637ae8d23f0bc9870a4024bc31e",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2020-10-17T14:55:11.076528096Z",
            "docker_version": "19.03.13+azure",
            "history": [
                {
                    "created": "2020-10-13T01:39:05.233816802Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0dc53e7886c35bc21ae6c4f6cedda54d56ae9c9e9cd367678f1a72e68b3c43d4 in / "
                },
                {
                    "created": "2020-10-13T01:39:05.467867564Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-13T19:52:56.998888486Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-13T19:52:57.198074275Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-13T19:53:04.993114403Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tnetbase \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-10-13T20:15:21.842681525Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GPG_KEY=E3FF2839C048B25C084DEBE9B26995E310250568",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-13T20:39:19.792004477Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_VERSION=3.8.6",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-13T20:50:24.389498228Z",
                    "created_by": "/bin/sh -c set -ex \t\t&& savedAptMark=\"$(apt-mark showmanual)\" \t&& apt-get update && apt-get install -y --no-install-recommends \t\tdpkg-dev \t\tgcc \t\tlibbluetooth-dev \t\tlibbz2-dev \t\tlibc6-dev \t\tlibexpat1-dev \t\tlibffi-dev \t\tlibgdbm-dev \t\tliblzma-dev \t\tlibncursesw5-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tmake \t\ttk-dev \t\tuuid-dev \t\twget \t\txz-utils \t\tzlib1g-dev \t\t$(command -v gpg > /dev/null || echo 'gnupg dirmngr') \t\t&& wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \t&& wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$GPG_KEY\" \t&& gpg --batch --verify python.tar.xz.asc python.tar.xz \t&& { command -v gpgconf > /dev/null && gpgconf --kill all || :; } \t&& rm -rf \"$GNUPGHOME\" python.tar.xz.asc \t&& mkdir -p /usr/src/python \t&& tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \t&& rm python.tar.xz \t\t&& cd /usr/src/python \t&& gnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \t&& ./configure \t\t--build=\"$gnuArch\" \t\t--enable-loadable-sqlite-extensions \t\t--enable-optimizations \t\t--enable-option-checking=fatal \t\t--enable-shared \t\t--with-system-expat \t\t--with-system-ffi \t\t--without-ensurepip \t&& make -j \"$(nproc)\" \t\tLDFLAGS=\"-Wl,--strip-all\" \t&& make install \t&& rm -rf /usr/src/python \t\t&& find /usr/local -depth \t\t\\( \t\t\t\\( -type d -a \\( -name test -o -name tests -o -name idle_test \\) \\) \t\t\t-o \\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' -o -name '*.a' \\) \\) \t\t\t-o \\( -type f -a -name 'wininst-*.exe' \\) \t\t\\) -exec rm -rf '{}' + \t\t&& ldconfig \t\t&& apt-mark auto '.*' > /dev/null \t&& apt-mark manual $savedAptMark \t&& find /usr/local -type f -executable -not \\( -name '*tkinter*' \\) -exec ldd '{}' ';' \t\t| awk '/=>/ { print $(NF-1) }' \t\t| sort -u \t\t| xargs -r dpkg-query --search \t\t| cut -d: -f1 \t\t| sort -u \t\t| xargs -r apt-mark manual \t&& apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false \t&& rm -rf /var/lib/apt/lists/* \t\t&& python3 --version"
                },
                {
                    "created": "2020-10-13T20:50:25.22740955Z",
                    "created_by": "/bin/sh -c cd /usr/local/bin \t&& ln -s idle3 idle \t&& ln -s pydoc3 pydoc \t&& ln -s python3 python \t&& ln -s python3-config python-config"
                },
                {
                    "created": "2020-10-13T20:50:25.423401689Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_PIP_VERSION=20.2.3",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-13T20:50:25.613182689Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_GET_PIP_URL=https://github.com/pypa/get-pip/raw/fa7dc83944936bf09a0e4cb5d5ec852c0d256599/get-pip.py",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-13T20:50:25.800601628Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_GET_PIP_SHA256=6e0bb0a2c2533361d7f297ed547237caf1b7507f197835974c0dd7eba998c53c",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-13T20:50:41.700276891Z",
                    "created_by": "/bin/sh -c set -ex; \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends wget; \t\twget -O get-pip.py \"$PYTHON_GET_PIP_URL\"; \techo \"$PYTHON_GET_PIP_SHA256 *get-pip.py\" | sha256sum --check --strict -; \t\tapt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \trm -rf /var/lib/apt/lists/*; \t\tpython get-pip.py \t\t--disable-pip-version-check \t\t--no-cache-dir \t\t\"pip==$PYTHON_PIP_VERSION\" \t; \tpip --version; \t\tfind /usr/local -depth \t\t\\( \t\t\t\\( -type d -a \\( -name test -o -name tests -o -name idle_test \\) \\) \t\t\t-o \t\t\t\\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' \\) \\) \t\t\\) -exec rm -rf '{}' +; \trm -f get-pip.py"
                },
                {
                    "created": "2020-10-13T20:50:42.230286084Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"python3\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-17T14:54:35.07797588Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2f540a6848f2ae553d759b9cca622f67a41f11afa345bf6014c5d0538c83c505 in requirements.txt "
                },
                {
                    "created": "2020-10-17T14:55:11.076528096Z",
                    "created_by": "/bin/sh -c pip install -r requirements.txt"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d0fe97fa8b8cefdffcef1d62b65aba51a6c87b6679628a2b50fc6a7a579f764c",
                    "sha256:225ef82ca30ae331967b6c3de80fbc37ddff461223c94494f54b62f60b0139f3",
                    "sha256:322c3996a80bef7ea105ccdb5a82fe002691c7ef1fb71e3f9ac8ae23e9fe65ad",
                    "sha256:06b60c6e6ffd81bf330dd17b4516284afc66be418e478ade73a80111a3f14888",
                    "sha256:06eeb698874963de67f59d50a76d834555090696c5283d63672852c3b8cd24f5",
                    "sha256:ec1595d55eb7f176e656975cf750929854b4b591327f9334ddc9b4820644a08b",
                    "sha256:1e5b521be26e23d22ff3d683866015791d20e7870ff6293c2da6020071550438"
                ]
            }
        },
        "1.17.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8",
                    "GPG_KEY=E3FF2839C048B25C084DEBE9B26995E310250568",
                    "PYTHON_VERSION=3.8.6",
                    "PYTHON_PIP_VERSION=20.2.4",
                    "PYTHON_GET_PIP_URL=https://github.com/pypa/get-pip/raw/fa7dc83944936bf09a0e4cb5d5ec852c0d256599/get-pip.py",
                    "PYTHON_GET_PIP_SHA256=6e0bb0a2c2533361d7f297ed547237caf1b7507f197835974c0dd7eba998c53c"
                ],
                "Cmd": [
                    "python3"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:594231985c087b4f68aa915d340c974f95fde760253b0512749f180e134ae088",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "d10dc97661371f1ce42379ab3358c1963dd5454faf4a3e13f10b0715b0a3c380",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8",
                    "GPG_KEY=E3FF2839C048B25C084DEBE9B26995E310250568",
                    "PYTHON_VERSION=3.8.6",
                    "PYTHON_PIP_VERSION=20.2.4",
                    "PYTHON_GET_PIP_URL=https://github.com/pypa/get-pip/raw/fa7dc83944936bf09a0e4cb5d5ec852c0d256599/get-pip.py",
                    "PYTHON_GET_PIP_SHA256=6e0bb0a2c2533361d7f297ed547237caf1b7507f197835974c0dd7eba998c53c"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "pip install -r requirements.txt"
                ],
                "Image": "sha256:594231985c087b4f68aa915d340c974f95fde760253b0512749f180e134ae088",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2020-11-06T07:39:35.739693011Z",
            "docker_version": "19.03.13+azure",
            "history": [
                {
                    "created": "2020-10-13T01:39:05.233816802Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0dc53e7886c35bc21ae6c4f6cedda54d56ae9c9e9cd367678f1a72e68b3c43d4 in / "
                },
                {
                    "created": "2020-10-13T01:39:05.467867564Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-13T19:52:56.998888486Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-13T19:52:57.198074275Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-13T19:53:04.993114403Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tnetbase \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-10-13T20:15:21.842681525Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GPG_KEY=E3FF2839C048B25C084DEBE9B26995E310250568",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-13T20:39:19.792004477Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_VERSION=3.8.6",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-13T20:50:24.389498228Z",
                    "created_by": "/bin/sh -c set -ex \t\t&& savedAptMark=\"$(apt-mark showmanual)\" \t&& apt-get update && apt-get install -y --no-install-recommends \t\tdpkg-dev \t\tgcc \t\tlibbluetooth-dev \t\tlibbz2-dev \t\tlibc6-dev \t\tlibexpat1-dev \t\tlibffi-dev \t\tlibgdbm-dev \t\tliblzma-dev \t\tlibncursesw5-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tmake \t\ttk-dev \t\tuuid-dev \t\twget \t\txz-utils \t\tzlib1g-dev \t\t$(command -v gpg > /dev/null || echo 'gnupg dirmngr') \t\t&& wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \t&& wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$GPG_KEY\" \t&& gpg --batch --verify python.tar.xz.asc python.tar.xz \t&& { command -v gpgconf > /dev/null && gpgconf --kill all || :; } \t&& rm -rf \"$GNUPGHOME\" python.tar.xz.asc \t&& mkdir -p /usr/src/python \t&& tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \t&& rm python.tar.xz \t\t&& cd /usr/src/python \t&& gnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \t&& ./configure \t\t--build=\"$gnuArch\" \t\t--enable-loadable-sqlite-extensions \t\t--enable-optimizations \t\t--enable-option-checking=fatal \t\t--enable-shared \t\t--with-system-expat \t\t--with-system-ffi \t\t--without-ensurepip \t&& make -j \"$(nproc)\" \t\tLDFLAGS=\"-Wl,--strip-all\" \t&& make install \t&& rm -rf /usr/src/python \t\t&& find /usr/local -depth \t\t\\( \t\t\t\\( -type d -a \\( -name test -o -name tests -o -name idle_test \\) \\) \t\t\t-o \\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' -o -name '*.a' \\) \\) \t\t\t-o \\( -type f -a -name 'wininst-*.exe' \\) \t\t\\) -exec rm -rf '{}' + \t\t&& ldconfig \t\t&& apt-mark auto '.*' > /dev/null \t&& apt-mark manual $savedAptMark \t&& find /usr/local -type f -executable -not \\( -name '*tkinter*' \\) -exec ldd '{}' ';' \t\t| awk '/=>/ { print $(NF-1) }' \t\t| sort -u \t\t| xargs -r dpkg-query --search \t\t| cut -d: -f1 \t\t| sort -u \t\t| xargs -r apt-mark manual \t&& apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false \t&& rm -rf /var/lib/apt/lists/* \t\t&& python3 --version"
                },
                {
                    "created": "2020-10-13T20:50:25.22740955Z",
                    "created_by": "/bin/sh -c cd /usr/local/bin \t&& ln -s idle3 idle \t&& ln -s pydoc3 pydoc \t&& ln -s python3 python \t&& ln -s python3-config python-config"
                },
                {
                    "created": "2020-10-20T17:49:50.184521069Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_PIP_VERSION=20.2.4",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-03T21:36:18.075109142Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_GET_PIP_URL=https://github.com/pypa/get-pip/raw/fa7dc83944936bf09a0e4cb5d5ec852c0d256599/get-pip.py",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-03T21:36:18.247875899Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_GET_PIP_SHA256=6e0bb0a2c2533361d7f297ed547237caf1b7507f197835974c0dd7eba998c53c",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-03T21:36:30.979207684Z",
                    "created_by": "/bin/sh -c set -ex; \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends wget; \t\twget -O get-pip.py \"$PYTHON_GET_PIP_URL\"; \techo \"$PYTHON_GET_PIP_SHA256 *get-pip.py\" | sha256sum --check --strict -; \t\tapt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \trm -rf /var/lib/apt/lists/*; \t\tpython get-pip.py \t\t--disable-pip-version-check \t\t--no-cache-dir \t\t\"pip==$PYTHON_PIP_VERSION\" \t; \tpip --version; \t\tfind /usr/local -depth \t\t\\( \t\t\t\\( -type d -a \\( -name test -o -name tests -o -name idle_test \\) \\) \t\t\t-o \t\t\t\\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' \\) \\) \t\t\\) -exec rm -rf '{}' +; \trm -f get-pip.py"
                },
                {
                    "created": "2020-11-03T21:36:31.212991622Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"python3\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-06T07:39:00.263840211Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ed970d1a3b3ff3dc14f911033884d9fcc905faa1bb81dd59b2493d0ed16dde7e in requirements.txt "
                },
                {
                    "created": "2020-11-06T07:39:35.739693011Z",
                    "created_by": "/bin/sh -c pip install -r requirements.txt"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d0fe97fa8b8cefdffcef1d62b65aba51a6c87b6679628a2b50fc6a7a579f764c",
                    "sha256:225ef82ca30ae331967b6c3de80fbc37ddff461223c94494f54b62f60b0139f3",
                    "sha256:322c3996a80bef7ea105ccdb5a82fe002691c7ef1fb71e3f9ac8ae23e9fe65ad",
                    "sha256:06b60c6e6ffd81bf330dd17b4516284afc66be418e478ade73a80111a3f14888",
                    "sha256:3196f0b198cb352c1c40acbeb52552af86979d49b89fb4158af9b98c95cc9614",
                    "sha256:c4797771244f58025e5b490db8c7f453d1776ff065d6b85ffc07c1d9c0a9062c",
                    "sha256:b225bd5a4b2ef4b54090dd06a394b651e936129a6adc2528f1ea380d1c5acc93"
                ]
            }
        },
        "1.18.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8",
                    "GPG_KEY=E3FF2839C048B25C084DEBE9B26995E310250568",
                    "PYTHON_VERSION=3.8.6",
                    "PYTHON_PIP_VERSION=20.2.4",
                    "PYTHON_GET_PIP_URL=https://github.com/pypa/get-pip/raw/fa7dc83944936bf09a0e4cb5d5ec852c0d256599/get-pip.py",
                    "PYTHON_GET_PIP_SHA256=6e0bb0a2c2533361d7f297ed547237caf1b7507f197835974c0dd7eba998c53c"
                ],
                "Cmd": [
                    "python3"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:764347f6a4c05a5f5ee7d25522fda972b2c637e2460f1ca1a0a772fa59f4d450",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f6d42cb8054794c92ad950181fe3d961faf1c23c585431ecdb593dbf7f444d65",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8",
                    "GPG_KEY=E3FF2839C048B25C084DEBE9B26995E310250568",
                    "PYTHON_VERSION=3.8.6",
                    "PYTHON_PIP_VERSION=20.2.4",
                    "PYTHON_GET_PIP_URL=https://github.com/pypa/get-pip/raw/fa7dc83944936bf09a0e4cb5d5ec852c0d256599/get-pip.py",
                    "PYTHON_GET_PIP_SHA256=6e0bb0a2c2533361d7f297ed547237caf1b7507f197835974c0dd7eba998c53c"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "pip install -r requirements.txt"
                ],
                "Image": "sha256:764347f6a4c05a5f5ee7d25522fda972b2c637e2460f1ca1a0a772fa59f4d450",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2020-11-16T15:30:48.74967768Z",
            "docker_version": "19.03.13+azure",
            "history": [
                {
                    "created": "2020-10-13T01:39:05.233816802Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0dc53e7886c35bc21ae6c4f6cedda54d56ae9c9e9cd367678f1a72e68b3c43d4 in / "
                },
                {
                    "created": "2020-10-13T01:39:05.467867564Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-13T19:52:56.998888486Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-13T19:52:57.198074275Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-13T19:53:04.993114403Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tnetbase \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-10-13T20:15:21.842681525Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GPG_KEY=E3FF2839C048B25C084DEBE9B26995E310250568",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-13T20:39:19.792004477Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_VERSION=3.8.6",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-13T20:50:24.389498228Z",
                    "created_by": "/bin/sh -c set -ex \t\t&& savedAptMark=\"$(apt-mark showmanual)\" \t&& apt-get update && apt-get install -y --no-install-recommends \t\tdpkg-dev \t\tgcc \t\tlibbluetooth-dev \t\tlibbz2-dev \t\tlibc6-dev \t\tlibexpat1-dev \t\tlibffi-dev \t\tlibgdbm-dev \t\tliblzma-dev \t\tlibncursesw5-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tmake \t\ttk-dev \t\tuuid-dev \t\twget \t\txz-utils \t\tzlib1g-dev \t\t$(command -v gpg > /dev/null || echo 'gnupg dirmngr') \t\t&& wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \t&& wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$GPG_KEY\" \t&& gpg --batch --verify python.tar.xz.asc python.tar.xz \t&& { command -v gpgconf > /dev/null && gpgconf --kill all || :; } \t&& rm -rf \"$GNUPGHOME\" python.tar.xz.asc \t&& mkdir -p /usr/src/python \t&& tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \t&& rm python.tar.xz \t\t&& cd /usr/src/python \t&& gnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \t&& ./configure \t\t--build=\"$gnuArch\" \t\t--enable-loadable-sqlite-extensions \t\t--enable-optimizations \t\t--enable-option-checking=fatal \t\t--enable-shared \t\t--with-system-expat \t\t--with-system-ffi \t\t--without-ensurepip \t&& make -j \"$(nproc)\" \t\tLDFLAGS=\"-Wl,--strip-all\" \t&& make install \t&& rm -rf /usr/src/python \t\t&& find /usr/local -depth \t\t\\( \t\t\t\\( -type d -a \\( -name test -o -name tests -o -name idle_test \\) \\) \t\t\t-o \\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' -o -name '*.a' \\) \\) \t\t\t-o \\( -type f -a -name 'wininst-*.exe' \\) \t\t\\) -exec rm -rf '{}' + \t\t&& ldconfig \t\t&& apt-mark auto '.*' > /dev/null \t&& apt-mark manual $savedAptMark \t&& find /usr/local -type f -executable -not \\( -name '*tkinter*' \\) -exec ldd '{}' ';' \t\t| awk '/=>/ { print $(NF-1) }' \t\t| sort -u \t\t| xargs -r dpkg-query --search \t\t| cut -d: -f1 \t\t| sort -u \t\t| xargs -r apt-mark manual \t&& apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false \t&& rm -rf /var/lib/apt/lists/* \t\t&& python3 --version"
                },
                {
                    "created": "2020-10-13T20:50:25.22740955Z",
                    "created_by": "/bin/sh -c cd /usr/local/bin \t&& ln -s idle3 idle \t&& ln -s pydoc3 pydoc \t&& ln -s python3 python \t&& ln -s python3-config python-config"
                },
                {
                    "created": "2020-10-20T17:49:50.184521069Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_PIP_VERSION=20.2.4",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-03T21:36:18.075109142Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_GET_PIP_URL=https://github.com/pypa/get-pip/raw/fa7dc83944936bf09a0e4cb5d5ec852c0d256599/get-pip.py",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-03T21:36:18.247875899Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_GET_PIP_SHA256=6e0bb0a2c2533361d7f297ed547237caf1b7507f197835974c0dd7eba998c53c",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-03T21:36:30.979207684Z",
                    "created_by": "/bin/sh -c set -ex; \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends wget; \t\twget -O get-pip.py \"$PYTHON_GET_PIP_URL\"; \techo \"$PYTHON_GET_PIP_SHA256 *get-pip.py\" | sha256sum --check --strict -; \t\tapt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \trm -rf /var/lib/apt/lists/*; \t\tpython get-pip.py \t\t--disable-pip-version-check \t\t--no-cache-dir \t\t\"pip==$PYTHON_PIP_VERSION\" \t; \tpip --version; \t\tfind /usr/local -depth \t\t\\( \t\t\t\\( -type d -a \\( -name test -o -name tests -o -name idle_test \\) \\) \t\t\t-o \t\t\t\\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' \\) \\) \t\t\\) -exec rm -rf '{}' +; \trm -f get-pip.py"
                },
                {
                    "created": "2020-11-03T21:36:31.212991622Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"python3\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-16T15:30:12.000164646Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cba0b00dfac1e9cdd31217c5dbe7e94b162f8ce1194486b1278e60a1e0548ac8 in requirements.txt "
                },
                {
                    "created": "2020-11-16T15:30:48.74967768Z",
                    "created_by": "/bin/sh -c pip install -r requirements.txt"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d0fe97fa8b8cefdffcef1d62b65aba51a6c87b6679628a2b50fc6a7a579f764c",
                    "sha256:225ef82ca30ae331967b6c3de80fbc37ddff461223c94494f54b62f60b0139f3",
                    "sha256:322c3996a80bef7ea105ccdb5a82fe002691c7ef1fb71e3f9ac8ae23e9fe65ad",
                    "sha256:06b60c6e6ffd81bf330dd17b4516284afc66be418e478ade73a80111a3f14888",
                    "sha256:3196f0b198cb352c1c40acbeb52552af86979d49b89fb4158af9b98c95cc9614",
                    "sha256:7d88804cc6e1d20d695856c0d14f6f7acd7931b69b8831554c4794f6166b5d4e",
                    "sha256:050d2d17a5868c2136266a2d51f2bc5cca2df056df402512986b70b0b704f48e"
                ]
            }
        },
        "1.19.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8",
                    "GPG_KEY=E3FF2839C048B25C084DEBE9B26995E310250568",
                    "PYTHON_VERSION=3.8.6",
                    "PYTHON_PIP_VERSION=20.3.3",
                    "PYTHON_GET_PIP_URL=https://github.com/pypa/get-pip/raw/5f38681f7f5872e4032860b54e9cc11cf0374932/get-pip.py",
                    "PYTHON_GET_PIP_SHA256=6a0b13826862f33c13b614a921d36253bfa1ae779c5fbf569876f3585057e9d2"
                ],
                "Cmd": [
                    "python3"
                ],
                "Image": "sha256:c1857b6a3049efb6500e6e786335bbe2a7b08acb6cba6b83920776097e3f3bf4",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "ffcbb6265b4bcc0840b0d2c671ea5441c7423ad6d9654be7fe16254535e7fbf0",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8",
                    "GPG_KEY=E3FF2839C048B25C084DEBE9B26995E310250568",
                    "PYTHON_VERSION=3.8.6",
                    "PYTHON_PIP_VERSION=20.3.3",
                    "PYTHON_GET_PIP_URL=https://github.com/pypa/get-pip/raw/5f38681f7f5872e4032860b54e9cc11cf0374932/get-pip.py",
                    "PYTHON_GET_PIP_SHA256=6a0b13826862f33c13b614a921d36253bfa1ae779c5fbf569876f3585057e9d2"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "pip install -r requirements.txt"
                ],
                "Image": "sha256:c1857b6a3049efb6500e6e786335bbe2a7b08acb6cba6b83920776097e3f3bf4",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2020-12-20T09:20:09.949546659Z",
            "docker_version": "19.03.13+azure",
            "history": [
                {
                    "created": "2020-12-11T02:06:10.265777742Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3a7bff4e139bcacc5831fd70a035c130a91b5da001dd91c08b2acd635c7064e8 in / "
                },
                {
                    "created": "2020-12-11T02:06:10.555529649Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T13:53:18.987628235Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T13:53:19.163052571Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T14:31:08.761252982Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tnetbase \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-12-11T14:31:08.958733488Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GPG_KEY=E3FF2839C048B25C084DEBE9B26995E310250568",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T14:31:09.162972596Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_VERSION=3.8.6",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T14:39:27.240824783Z",
                    "created_by": "/bin/sh -c set -ex \t\t&& savedAptMark=\"$(apt-mark showmanual)\" \t&& apt-get update && apt-get install -y --no-install-recommends \t\tdpkg-dev \t\tgcc \t\tlibbluetooth-dev \t\tlibbz2-dev \t\tlibc6-dev \t\tlibexpat1-dev \t\tlibffi-dev \t\tlibgdbm-dev \t\tliblzma-dev \t\tlibncursesw5-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tmake \t\ttk-dev \t\tuuid-dev \t\twget \t\txz-utils \t\tzlib1g-dev \t\t$(command -v gpg > /dev/null || echo 'gnupg dirmngr') \t\t&& wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \t&& wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$GPG_KEY\" \t&& gpg --batch --verify python.tar.xz.asc python.tar.xz \t&& { command -v gpgconf > /dev/null && gpgconf --kill all || :; } \t&& rm -rf \"$GNUPGHOME\" python.tar.xz.asc \t&& mkdir -p /usr/src/python \t&& tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \t&& rm python.tar.xz \t\t&& cd /usr/src/python \t&& gnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \t&& ./configure \t\t--build=\"$gnuArch\" \t\t--enable-loadable-sqlite-extensions \t\t--enable-optimizations \t\t--enable-option-checking=fatal \t\t--enable-shared \t\t--with-system-expat \t\t--with-system-ffi \t\t--without-ensurepip \t&& make -j \"$(nproc)\" \t\tLDFLAGS=\"-Wl,--strip-all\" \t&& make install \t&& rm -rf /usr/src/python \t\t&& find /usr/local -depth \t\t\\( \t\t\t\\( -type d -a \\( -name test -o -name tests -o -name idle_test \\) \\) \t\t\t-o \\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' -o -name '*.a' \\) \\) \t\t\t-o \\( -type f -a -name 'wininst-*.exe' \\) \t\t\\) -exec rm -rf '{}' + \t\t&& ldconfig \t\t&& apt-mark auto '.*' > /dev/null \t&& apt-mark manual $savedAptMark \t&& find /usr/local -type f -executable -not \\( -name '*tkinter*' \\) -exec ldd '{}' ';' \t\t| awk '/=>/ { print $(NF-1) }' \t\t| sort -u \t\t| xargs -r dpkg-query --search \t\t| cut -d: -f1 \t\t| sort -u \t\t| xargs -r apt-mark manual \t&& apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false \t&& rm -rf /var/lib/apt/lists/* \t\t&& python3 --version"
                },
                {
                    "created": "2020-12-11T14:39:28.237328478Z",
                    "created_by": "/bin/sh -c cd /usr/local/bin \t&& ln -s idle3 idle \t&& ln -s pydoc3 pydoc \t&& ln -s python3 python \t&& ln -s python3-config python-config"
                },
                {
                    "created": "2020-12-15T22:32:56.575249418Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_PIP_VERSION=20.3.3",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-15T22:32:56.767173831Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_GET_PIP_URL=https://github.com/pypa/get-pip/raw/5f38681f7f5872e4032860b54e9cc11cf0374932/get-pip.py",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-15T22:32:56.943078201Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_GET_PIP_SHA256=6a0b13826862f33c13b614a921d36253bfa1ae779c5fbf569876f3585057e9d2",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-15T22:33:10.267272919Z",
                    "created_by": "/bin/sh -c set -ex; \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends wget; \t\twget -O get-pip.py \"$PYTHON_GET_PIP_URL\"; \techo \"$PYTHON_GET_PIP_SHA256 *get-pip.py\" | sha256sum --check --strict -; \t\tapt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \trm -rf /var/lib/apt/lists/*; \t\tpython get-pip.py \t\t--disable-pip-version-check \t\t--no-cache-dir \t\t\"pip==$PYTHON_PIP_VERSION\" \t; \tpip --version; \t\tfind /usr/local -depth \t\t\\( \t\t\t\\( -type d -a \\( -name test -o -name tests -o -name idle_test \\) \\) \t\t\t-o \t\t\t\\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' \\) \\) \t\t\\) -exec rm -rf '{}' +; \trm -f get-pip.py"
                },
                {
                    "created": "2020-12-15T22:33:10.464322917Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"python3\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-20T09:19:26.000178751Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:640a73312de2d770a4c2faebd74d0474a813aed06094da97777ff6c1119075d1 in requirements.txt "
                },
                {
                    "created": "2020-12-20T09:20:09.949546659Z",
                    "created_by": "/bin/sh -c pip install -r requirements.txt"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:87c8a1d8f54f3aa4e05569e8919397b65056aa71cdf48b7f061432c98475eee9",
                    "sha256:b986ceddf07ce9486d4f577e350ee369fac8f50ebc2f1f8e4529abf2e1b29836",
                    "sha256:1eaab9ab89e007dec6e79e0a460d3e37d17be0f673872cd5bbb6e1225add6063",
                    "sha256:603d0695860fcde6bc2a238d16286cc3e0b89b3b982be589350b6a4316cabaa2",
                    "sha256:27eeb099e9e712bf56e607fe69b1f9a1e74593f8fc5f09af9b8bc4f730d77d35",
                    "sha256:2365fcb5d9ec08d220781e1989890257b57b8b4c60cbc72b313548cda0fe33ea",
                    "sha256:6c2c12582ee75fa43c6bc94309146d17f2000f7f3da55c1f7c84117e2ba69eb4"
                ]
            }
        },
        "1.20.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8",
                    "GPG_KEY=E3FF2839C048B25C084DEBE9B26995E310250568",
                    "PYTHON_VERSION=3.8.7",
                    "PYTHON_PIP_VERSION=21.0",
                    "PYTHON_GET_PIP_URL=https://github.com/pypa/get-pip/raw/8cc88aca7d9775fce279e8b84ef163cf1d3e8a2e/get-pip.py",
                    "PYTHON_GET_PIP_SHA256=ffb67da2e976f48dd29714fc64812d1ac419eb7d48079737166dd95640d1debd"
                ],
                "Cmd": [
                    "python3"
                ],
                "Image": "sha256:2b0e594c519499334c0e99be3bb6b6d192cf1990fdaee437503aa3720d1cded4",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "60f536c3ebe1f8826062487c9ff2223df593f495a05b94501586012204bb9e28",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8",
                    "GPG_KEY=E3FF2839C048B25C084DEBE9B26995E310250568",
                    "PYTHON_VERSION=3.8.7",
                    "PYTHON_PIP_VERSION=21.0",
                    "PYTHON_GET_PIP_URL=https://github.com/pypa/get-pip/raw/8cc88aca7d9775fce279e8b84ef163cf1d3e8a2e/get-pip.py",
                    "PYTHON_GET_PIP_SHA256=ffb67da2e976f48dd29714fc64812d1ac419eb7d48079737166dd95640d1debd"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "pip install -r requirements.txt"
                ],
                "Image": "sha256:2b0e594c519499334c0e99be3bb6b6d192cf1990fdaee437503aa3720d1cded4",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2021-01-31T08:48:05.347596869Z",
            "docker_version": "19.03.14+azure",
            "history": [
                {
                    "created": "2021-01-12T00:32:51.692277281Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:422aca8901ae3d869a815051cea7f1e4c0204fad16884e7cd01da57d142f2e3a in / "
                },
                {
                    "created": "2021-01-12T00:32:51.939863901Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-12T16:21:17.593414941Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-12T16:21:17.795781227Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-12T17:07:51.518161896Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tnetbase \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-01-12T17:07:51.728407315Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GPG_KEY=E3FF2839C048B25C084DEBE9B26995E310250568",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-12T17:07:51.942686541Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_VERSION=3.8.7",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-12T17:17:46.884226815Z",
                    "created_by": "/bin/sh -c set -ex \t\t&& savedAptMark=\"$(apt-mark showmanual)\" \t&& apt-get update && apt-get install -y --no-install-recommends \t\tdpkg-dev \t\tgcc \t\tlibbluetooth-dev \t\tlibbz2-dev \t\tlibc6-dev \t\tlibexpat1-dev \t\tlibffi-dev \t\tlibgdbm-dev \t\tliblzma-dev \t\tlibncursesw5-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tmake \t\ttk-dev \t\tuuid-dev \t\twget \t\txz-utils \t\tzlib1g-dev \t\t$(command -v gpg > /dev/null || echo 'gnupg dirmngr') \t\t&& wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \t&& wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$GPG_KEY\" \t&& gpg --batch --verify python.tar.xz.asc python.tar.xz \t&& { command -v gpgconf > /dev/null && gpgconf --kill all || :; } \t&& rm -rf \"$GNUPGHOME\" python.tar.xz.asc \t&& mkdir -p /usr/src/python \t&& tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \t&& rm python.tar.xz \t\t&& cd /usr/src/python \t&& gnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \t&& ./configure \t\t--build=\"$gnuArch\" \t\t--enable-loadable-sqlite-extensions \t\t--enable-optimizations \t\t--enable-option-checking=fatal \t\t--enable-shared \t\t--with-system-expat \t\t--with-system-ffi \t\t--without-ensurepip \t&& make -j \"$(nproc)\" \t\tLDFLAGS=\"-Wl,--strip-all\" \t&& make install \t&& rm -rf /usr/src/python \t\t&& find /usr/local -depth \t\t\\( \t\t\t\\( -type d -a \\( -name test -o -name tests -o -name idle_test \\) \\) \t\t\t-o \\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' -o -name '*.a' \\) \\) \t\t\t-o \\( -type f -a -name 'wininst-*.exe' \\) \t\t\\) -exec rm -rf '{}' + \t\t&& ldconfig \t\t&& apt-mark auto '.*' > /dev/null \t&& apt-mark manual $savedAptMark \t&& find /usr/local -type f -executable -not \\( -name '*tkinter*' \\) -exec ldd '{}' ';' \t\t| awk '/=>/ { print $(NF-1) }' \t\t| sort -u \t\t| xargs -r dpkg-query --search \t\t| cut -d: -f1 \t\t| sort -u \t\t| xargs -r apt-mark manual \t&& apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false \t&& rm -rf /var/lib/apt/lists/* \t\t&& python3 --version"
                },
                {
                    "created": "2021-01-12T17:17:48.148158188Z",
                    "created_by": "/bin/sh -c cd /usr/local/bin \t&& ln -s idle3 idle \t&& ln -s pydoc3 pydoc \t&& ln -s python3 python \t&& ln -s python3-config python-config"
                },
                {
                    "created": "2021-01-25T23:29:46.802204651Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_PIP_VERSION=21.0",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-25T23:29:47.010394311Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_GET_PIP_URL=https://github.com/pypa/get-pip/raw/8cc88aca7d9775fce279e8b84ef163cf1d3e8a2e/get-pip.py",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-25T23:29:47.202594726Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_GET_PIP_SHA256=ffb67da2e976f48dd29714fc64812d1ac419eb7d48079737166dd95640d1debd",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-25T23:30:00.767923594Z",
                    "created_by": "/bin/sh -c set -ex; \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends wget; \t\twget -O get-pip.py \"$PYTHON_GET_PIP_URL\"; \techo \"$PYTHON_GET_PIP_SHA256 *get-pip.py\" | sha256sum --check --strict -; \t\tapt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \trm -rf /var/lib/apt/lists/*; \t\tpython get-pip.py \t\t--disable-pip-version-check \t\t--no-cache-dir \t\t\"pip==$PYTHON_PIP_VERSION\" \t; \tpip --version; \t\tfind /usr/local -depth \t\t\\( \t\t\t\\( -type d -a \\( -name test -o -name tests -o -name idle_test \\) \\) \t\t\t-o \t\t\t\\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' \\) \\) \t\t\\) -exec rm -rf '{}' +; \trm -f get-pip.py"
                },
                {
                    "created": "2021-01-25T23:30:00.976487546Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"python3\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-31T08:47:24.000265764Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:eb5057bd01079d096fae42a3d5d6484e534fcefa230540b1ddee5af5b05f9b1e in requirements.txt "
                },
                {
                    "created": "2021-01-31T08:48:05.347596869Z",
                    "created_by": "/bin/sh -c pip install -r requirements.txt"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cb42413394c4059335228c137fe884ff3ab8946a014014309676c25e3ac86864",
                    "sha256:477e7db04777f1397ff1e9a0297a75e0f8492268738d75564f37b8cbe2454eb6",
                    "sha256:ba441d17b7908fe61d7588b914e63d6aa3e05e5942b771774068eff371e4ba38",
                    "sha256:b64b3bf8eaca6020dbf220da8ed2b3ba1010f75d34c6f625f1a4ba20b9fc83cc",
                    "sha256:24284177bf76da9536d256101305847d77d4693efddb2e7f478ab9857be9203c",
                    "sha256:e15bb4750f59d9ab0cfe97b64cef7b2334c9d51d9a34de994ed64dc65144087e",
                    "sha256:d94064619ee7102150e3197c0e5b6e79b8d8ecd1bde81a248688badaa9393b89"
                ]
            }
        },
        "1.21.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8",
                    "GPG_KEY=E3FF2839C048B25C084DEBE9B26995E310250568",
                    "PYTHON_VERSION=3.8.7",
                    "PYTHON_PIP_VERSION=21.0.1",
                    "PYTHON_GET_PIP_URL=https://github.com/pypa/get-pip/raw/4be3fe44ad9dedc028629ed1497052d65d281b8e/get-pip.py",
                    "PYTHON_GET_PIP_SHA256=8006625804f55e1bd99ad4214fd07082fee27a1c35945648a58f9087a714e9d4"
                ],
                "Cmd": [
                    "python3"
                ],
                "Image": "sha256:26bd08ae6b9cdfe2a90eced713c9375083e6abe7a77cb3e791c2412558dbf87f",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "7cdbf07f87fa366b7a77ebb423253a4801a594f71ca59682211552987c9eb516",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8",
                    "GPG_KEY=E3FF2839C048B25C084DEBE9B26995E310250568",
                    "PYTHON_VERSION=3.8.7",
                    "PYTHON_PIP_VERSION=21.0.1",
                    "PYTHON_GET_PIP_URL=https://github.com/pypa/get-pip/raw/4be3fe44ad9dedc028629ed1497052d65d281b8e/get-pip.py",
                    "PYTHON_GET_PIP_SHA256=8006625804f55e1bd99ad4214fd07082fee27a1c35945648a58f9087a714e9d4"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "pip install -r requirements.txt"
                ],
                "Image": "sha256:26bd08ae6b9cdfe2a90eced713c9375083e6abe7a77cb3e791c2412558dbf87f",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2021-02-02T22:45:46.6301705Z",
            "docker_version": "19.03.14+azure",
            "history": [
                {
                    "created": "2021-01-12T00:32:51.692277281Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:422aca8901ae3d869a815051cea7f1e4c0204fad16884e7cd01da57d142f2e3a in / "
                },
                {
                    "created": "2021-01-12T00:32:51.939863901Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-12T16:21:17.593414941Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-12T16:21:17.795781227Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-12T17:07:51.518161896Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tnetbase \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-01-12T17:07:51.728407315Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GPG_KEY=E3FF2839C048B25C084DEBE9B26995E310250568",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-12T17:07:51.942686541Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_VERSION=3.8.7",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-12T17:17:46.884226815Z",
                    "created_by": "/bin/sh -c set -ex \t\t&& savedAptMark=\"$(apt-mark showmanual)\" \t&& apt-get update && apt-get install -y --no-install-recommends \t\tdpkg-dev \t\tgcc \t\tlibbluetooth-dev \t\tlibbz2-dev \t\tlibc6-dev \t\tlibexpat1-dev \t\tlibffi-dev \t\tlibgdbm-dev \t\tliblzma-dev \t\tlibncursesw5-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tmake \t\ttk-dev \t\tuuid-dev \t\twget \t\txz-utils \t\tzlib1g-dev \t\t$(command -v gpg > /dev/null || echo 'gnupg dirmngr') \t\t&& wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \t&& wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$GPG_KEY\" \t&& gpg --batch --verify python.tar.xz.asc python.tar.xz \t&& { command -v gpgconf > /dev/null && gpgconf --kill all || :; } \t&& rm -rf \"$GNUPGHOME\" python.tar.xz.asc \t&& mkdir -p /usr/src/python \t&& tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \t&& rm python.tar.xz \t\t&& cd /usr/src/python \t&& gnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \t&& ./configure \t\t--build=\"$gnuArch\" \t\t--enable-loadable-sqlite-extensions \t\t--enable-optimizations \t\t--enable-option-checking=fatal \t\t--enable-shared \t\t--with-system-expat \t\t--with-system-ffi \t\t--without-ensurepip \t&& make -j \"$(nproc)\" \t\tLDFLAGS=\"-Wl,--strip-all\" \t&& make install \t&& rm -rf /usr/src/python \t\t&& find /usr/local -depth \t\t\\( \t\t\t\\( -type d -a \\( -name test -o -name tests -o -name idle_test \\) \\) \t\t\t-o \\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' -o -name '*.a' \\) \\) \t\t\t-o \\( -type f -a -name 'wininst-*.exe' \\) \t\t\\) -exec rm -rf '{}' + \t\t&& ldconfig \t\t&& apt-mark auto '.*' > /dev/null \t&& apt-mark manual $savedAptMark \t&& find /usr/local -type f -executable -not \\( -name '*tkinter*' \\) -exec ldd '{}' ';' \t\t| awk '/=>/ { print $(NF-1) }' \t\t| sort -u \t\t| xargs -r dpkg-query --search \t\t| cut -d: -f1 \t\t| sort -u \t\t| xargs -r apt-mark manual \t&& apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false \t&& rm -rf /var/lib/apt/lists/* \t\t&& python3 --version"
                },
                {
                    "created": "2021-01-12T17:17:48.148158188Z",
                    "created_by": "/bin/sh -c cd /usr/local/bin \t&& ln -s idle3 idle \t&& ln -s pydoc3 pydoc \t&& ln -s python3 python \t&& ln -s python3-config python-config"
                },
                {
                    "created": "2021-02-02T00:20:15.714918783Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_PIP_VERSION=21.0.1",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-02T00:20:15.975312389Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_GET_PIP_URL=https://github.com/pypa/get-pip/raw/4be3fe44ad9dedc028629ed1497052d65d281b8e/get-pip.py",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-02T00:20:16.191702473Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_GET_PIP_SHA256=8006625804f55e1bd99ad4214fd07082fee27a1c35945648a58f9087a714e9d4",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-02T00:20:30.21927852Z",
                    "created_by": "/bin/sh -c set -ex; \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends wget; \t\twget -O get-pip.py \"$PYTHON_GET_PIP_URL\"; \techo \"$PYTHON_GET_PIP_SHA256 *get-pip.py\" | sha256sum --check --strict -; \t\tapt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \trm -rf /var/lib/apt/lists/*; \t\tpython get-pip.py \t\t--disable-pip-version-check \t\t--no-cache-dir \t\t\"pip==$PYTHON_PIP_VERSION\" \t; \tpip --version; \t\tfind /usr/local -depth \t\t\\( \t\t\t\\( -type d -a \\( -name test -o -name tests -o -name idle_test \\) \\) \t\t\t-o \t\t\t\\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' \\) \\) \t\t\\) -exec rm -rf '{}' +; \trm -f get-pip.py"
                },
                {
                    "created": "2021-02-02T00:20:30.425022464Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"python3\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-02T22:45:09.034833132Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4c13e316396fc64c66da8cf0c06e7d40c356bcf861fb5655dc59c3c437d437e0 in requirements.txt "
                },
                {
                    "created": "2021-02-02T22:45:46.6301705Z",
                    "created_by": "/bin/sh -c pip install -r requirements.txt"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cb42413394c4059335228c137fe884ff3ab8946a014014309676c25e3ac86864",
                    "sha256:477e7db04777f1397ff1e9a0297a75e0f8492268738d75564f37b8cbe2454eb6",
                    "sha256:ba441d17b7908fe61d7588b914e63d6aa3e05e5942b771774068eff371e4ba38",
                    "sha256:b64b3bf8eaca6020dbf220da8ed2b3ba1010f75d34c6f625f1a4ba20b9fc83cc",
                    "sha256:5b0dd5ce8f8ddbe1d45025d211243a6f75fff5cce972cb2bf835a68be2484cb3",
                    "sha256:0a48cf75669c1ba88f93a25a421862d4f008887664eab584b6eb463cdc262a78",
                    "sha256:b88dd597a1a1aef814ed45a6513f40fac45f2315a2b97b11bd0d2843d133c294"
                ]
            }
        },
        "1.22.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8",
                    "GPG_KEY=E3FF2839C048B25C084DEBE9B26995E310250568",
                    "PYTHON_VERSION=3.8.8",
                    "PYTHON_PIP_VERSION=21.0.1",
                    "PYTHON_GET_PIP_URL=https://github.com/pypa/get-pip/raw/b60e2320d9e8d02348525bd74e871e466afdf77c/get-pip.py",
                    "PYTHON_GET_PIP_SHA256=c3b81e5d06371e135fb3156dc7d8fd6270735088428c4a9a5ec1f342e2024565"
                ],
                "Cmd": [
                    "python3"
                ],
                "Image": "sha256:59e6549bf8f1d8057bf0ea39db6767be008ce03afbf1079e2f6e8b892e2f7e55",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "edd9f07f1f69068431bfa35cc0c401a5009a85e92678da228046555071590fe2",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8",
                    "GPG_KEY=E3FF2839C048B25C084DEBE9B26995E310250568",
                    "PYTHON_VERSION=3.8.8",
                    "PYTHON_PIP_VERSION=21.0.1",
                    "PYTHON_GET_PIP_URL=https://github.com/pypa/get-pip/raw/b60e2320d9e8d02348525bd74e871e466afdf77c/get-pip.py",
                    "PYTHON_GET_PIP_SHA256=c3b81e5d06371e135fb3156dc7d8fd6270735088428c4a9a5ec1f342e2024565"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "pip install -r requirements.txt"
                ],
                "Image": "sha256:59e6549bf8f1d8057bf0ea39db6767be008ce03afbf1079e2f6e8b892e2f7e55",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2021-03-14T11:54:29.260455525Z",
            "docker_version": "20.10.3+azure",
            "history": [
                {
                    "created": "2021-03-12T02:20:40.804976973Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3c32f1cd03198e141dd233a7ffd13444157d4150ad917d548f3ee9bf5953ce22 in / "
                },
                {
                    "created": "2021-03-12T02:20:41.106312024Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-12T18:11:50.794015176Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-12T18:11:51.006758438Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-12T19:35:17.610243257Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tnetbase \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-03-12T19:35:17.82817228Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GPG_KEY=E3FF2839C048B25C084DEBE9B26995E310250568",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-12T19:35:18.034047603Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_VERSION=3.8.8",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-12T19:45:17.118505691Z",
                    "created_by": "/bin/sh -c set -ex \t\t&& savedAptMark=\"$(apt-mark showmanual)\" \t&& apt-get update && apt-get install -y --no-install-recommends \t\tdpkg-dev \t\tgcc \t\tlibbluetooth-dev \t\tlibbz2-dev \t\tlibc6-dev \t\tlibexpat1-dev \t\tlibffi-dev \t\tlibgdbm-dev \t\tliblzma-dev \t\tlibncursesw5-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tmake \t\ttk-dev \t\tuuid-dev \t\twget \t\txz-utils \t\tzlib1g-dev \t\t$(command -v gpg > /dev/null || echo 'gnupg dirmngr') \t\t&& wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \t&& wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$GPG_KEY\" \t&& gpg --batch --verify python.tar.xz.asc python.tar.xz \t&& { command -v gpgconf > /dev/null && gpgconf --kill all || :; } \t&& rm -rf \"$GNUPGHOME\" python.tar.xz.asc \t&& mkdir -p /usr/src/python \t&& tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \t&& rm python.tar.xz \t\t&& cd /usr/src/python \t&& gnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \t&& ./configure \t\t--build=\"$gnuArch\" \t\t--enable-loadable-sqlite-extensions \t\t--enable-optimizations \t\t--enable-option-checking=fatal \t\t--enable-shared \t\t--with-system-expat \t\t--with-system-ffi \t\t--without-ensurepip \t&& make -j \"$(nproc)\" \t\tLDFLAGS=\"-Wl,--strip-all\" \t&& make install \t&& rm -rf /usr/src/python \t\t&& find /usr/local -depth \t\t\\( \t\t\t\\( -type d -a \\( -name test -o -name tests -o -name idle_test \\) \\) \t\t\t-o \\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' -o -name '*.a' \\) \\) \t\t\t-o \\( -type f -a -name 'wininst-*.exe' \\) \t\t\\) -exec rm -rf '{}' + \t\t&& ldconfig \t\t&& apt-mark auto '.*' > /dev/null \t&& apt-mark manual $savedAptMark \t&& find /usr/local -type f -executable -not \\( -name '*tkinter*' \\) -exec ldd '{}' ';' \t\t| awk '/=>/ { print $(NF-1) }' \t\t| sort -u \t\t| xargs -r dpkg-query --search \t\t| cut -d: -f1 \t\t| sort -u \t\t| xargs -r apt-mark manual \t&& apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false \t&& rm -rf /var/lib/apt/lists/* \t\t&& python3 --version"
                },
                {
                    "created": "2021-03-12T19:45:18.247293456Z",
                    "created_by": "/bin/sh -c cd /usr/local/bin \t&& ln -s idle3 idle \t&& ln -s pydoc3 pydoc \t&& ln -s python3 python \t&& ln -s python3-config python-config"
                },
                {
                    "created": "2021-03-12T19:45:18.447835212Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_PIP_VERSION=21.0.1",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-12T19:45:18.654880781Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_GET_PIP_URL=https://github.com/pypa/get-pip/raw/b60e2320d9e8d02348525bd74e871e466afdf77c/get-pip.py",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-12T19:45:18.859410411Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_GET_PIP_SHA256=c3b81e5d06371e135fb3156dc7d8fd6270735088428c4a9a5ec1f342e2024565",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-12T19:45:38.864576012Z",
                    "created_by": "/bin/sh -c set -ex; \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends wget; \t\twget -O get-pip.py \"$PYTHON_GET_PIP_URL\"; \techo \"$PYTHON_GET_PIP_SHA256 *get-pip.py\" | sha256sum --check --strict -; \t\tapt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \trm -rf /var/lib/apt/lists/*; \t\tpython get-pip.py \t\t--disable-pip-version-check \t\t--no-cache-dir \t\t\"pip==$PYTHON_PIP_VERSION\" \t; \tpip --version; \t\tfind /usr/local -depth \t\t\\( \t\t\t\\( -type d -a \\( -name test -o -name tests -o -name idle_test \\) \\) \t\t\t-o \t\t\t\\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' \\) \\) \t\t\\) -exec rm -rf '{}' +; \trm -f get-pip.py"
                },
                {
                    "created": "2021-03-12T19:45:39.284831188Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"python3\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-14T11:53:50.000241673Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2071d59f3819d38aa8746e73731fda85d89be804b7090dd5d4a026fe34626f8e in requirements.txt "
                },
                {
                    "created": "2021-03-14T11:54:29.260455525Z",
                    "created_by": "/bin/sh -c pip install -r requirements.txt"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:14a1ca976738392ffa2ae4e54934ba28ab9cb756e924ad9297a4795a4adbfdf6",
                    "sha256:f3427ce9393ded70087612997dab771321187084e15c5f90375e98744102fafd",
                    "sha256:3c9c1e0b1647b820c5a3f6a9fe96763f653b38e7c97b1dcaadb4b9a5bdd1d49c",
                    "sha256:b0fdf826a39a7f932d0b5f03bdb70c98d439e3b4ae7639a2589b66b9c55ae683",
                    "sha256:88d9943798ba3e502c1e0e1e21c3e2bf66644df2097de670ae117ee545f29f66",
                    "sha256:52bba973a1457d632323488ef5b9c0a44f0fe4a0d6b5f68fb43803a670a1db11",
                    "sha256:5633238c1756da37de0e6edddaa8d4c295bb277fb40704f95c02288b01f78f37"
                ]
            }
        },
        "1.23.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8",
                    "GPG_KEY=E3FF2839C048B25C084DEBE9B26995E310250568",
                    "PYTHON_VERSION=3.8.8",
                    "PYTHON_PIP_VERSION=21.0.1",
                    "PYTHON_GET_PIP_URL=https://github.com/pypa/get-pip/raw/b60e2320d9e8d02348525bd74e871e466afdf77c/get-pip.py",
                    "PYTHON_GET_PIP_SHA256=c3b81e5d06371e135fb3156dc7d8fd6270735088428c4a9a5ec1f342e2024565"
                ],
                "Cmd": [
                    "python3"
                ],
                "Image": "sha256:edd38ae2ecbf8f35c9869fb8cefe85b632480dcebeb40f89160ef310a61d3f3e",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "80bc3d84220963a06287641606aaf39d446b052283aabfed6a0471e40901c651",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8",
                    "GPG_KEY=E3FF2839C048B25C084DEBE9B26995E310250568",
                    "PYTHON_VERSION=3.8.8",
                    "PYTHON_PIP_VERSION=21.0.1",
                    "PYTHON_GET_PIP_URL=https://github.com/pypa/get-pip/raw/b60e2320d9e8d02348525bd74e871e466afdf77c/get-pip.py",
                    "PYTHON_GET_PIP_SHA256=c3b81e5d06371e135fb3156dc7d8fd6270735088428c4a9a5ec1f342e2024565"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "pip install -r requirements.txt"
                ],
                "Image": "sha256:edd38ae2ecbf8f35c9869fb8cefe85b632480dcebeb40f89160ef310a61d3f3e",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2021-03-31T11:30:10.202802758Z",
            "docker_version": "20.10.5+azure",
            "history": [
                {
                    "created": "2021-03-26T15:20:59.194594051Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b2085f4b0a7cb0e5754874c712254e5cd941062b27b8d7ed2080520196b91597 in / "
                },
                {
                    "created": "2021-03-26T15:20:59.718709229Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-27T02:33:51.850018417Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-27T02:33:52.055246206Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-27T02:52:29.067882771Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tnetbase \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-03-27T02:52:29.591760951Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GPG_KEY=E3FF2839C048B25C084DEBE9B26995E310250568",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-27T02:52:29.959566951Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_VERSION=3.8.8",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-27T03:02:46.474444247Z",
                    "created_by": "/bin/sh -c set -ex \t\t&& savedAptMark=\"$(apt-mark showmanual)\" \t&& apt-get update && apt-get install -y --no-install-recommends \t\tdpkg-dev \t\tgcc \t\tlibbluetooth-dev \t\tlibbz2-dev \t\tlibc6-dev \t\tlibexpat1-dev \t\tlibffi-dev \t\tlibgdbm-dev \t\tliblzma-dev \t\tlibncursesw5-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tmake \t\ttk-dev \t\tuuid-dev \t\twget \t\txz-utils \t\tzlib1g-dev \t\t$(command -v gpg > /dev/null || echo 'gnupg dirmngr') \t\t&& wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \t&& wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$GPG_KEY\" \t&& gpg --batch --verify python.tar.xz.asc python.tar.xz \t&& { command -v gpgconf > /dev/null && gpgconf --kill all || :; } \t&& rm -rf \"$GNUPGHOME\" python.tar.xz.asc \t&& mkdir -p /usr/src/python \t&& tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \t&& rm python.tar.xz \t\t&& cd /usr/src/python \t&& gnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \t&& ./configure \t\t--build=\"$gnuArch\" \t\t--enable-loadable-sqlite-extensions \t\t--enable-optimizations \t\t--enable-option-checking=fatal \t\t--enable-shared \t\t--with-system-expat \t\t--with-system-ffi \t\t--without-ensurepip \t&& make -j \"$(nproc)\" \t\tLDFLAGS=\"-Wl,--strip-all\" \t&& make install \t&& rm -rf /usr/src/python \t\t&& find /usr/local -depth \t\t\\( \t\t\t\\( -type d -a \\( -name test -o -name tests -o -name idle_test \\) \\) \t\t\t-o \\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' -o -name '*.a' \\) \\) \t\t\t-o \\( -type f -a -name 'wininst-*.exe' \\) \t\t\\) -exec rm -rf '{}' + \t\t&& ldconfig \t\t&& apt-mark auto '.*' > /dev/null \t&& apt-mark manual $savedAptMark \t&& find /usr/local -type f -executable -not \\( -name '*tkinter*' \\) -exec ldd '{}' ';' \t\t| awk '/=>/ { print $(NF-1) }' \t\t| sort -u \t\t| xargs -r dpkg-query --search \t\t| cut -d: -f1 \t\t| sort -u \t\t| xargs -r apt-mark manual \t&& apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false \t&& rm -rf /var/lib/apt/lists/* \t\t&& python3 --version"
                },
                {
                    "created": "2021-03-27T03:02:47.931286575Z",
                    "created_by": "/bin/sh -c cd /usr/local/bin \t&& ln -s idle3 idle \t&& ln -s pydoc3 pydoc \t&& ln -s python3 python \t&& ln -s python3-config python-config"
                },
                {
                    "created": "2021-03-27T03:02:48.178728453Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_PIP_VERSION=21.0.1",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-27T03:02:48.418219599Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_GET_PIP_URL=https://github.com/pypa/get-pip/raw/b60e2320d9e8d02348525bd74e871e466afdf77c/get-pip.py",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-27T03:02:48.652149207Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_GET_PIP_SHA256=c3b81e5d06371e135fb3156dc7d8fd6270735088428c4a9a5ec1f342e2024565",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-27T03:03:06.672859283Z",
                    "created_by": "/bin/sh -c set -ex; \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends wget; \t\twget -O get-pip.py \"$PYTHON_GET_PIP_URL\"; \techo \"$PYTHON_GET_PIP_SHA256 *get-pip.py\" | sha256sum --check --strict -; \t\tapt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \trm -rf /var/lib/apt/lists/*; \t\tpython get-pip.py \t\t--disable-pip-version-check \t\t--no-cache-dir \t\t\"pip==$PYTHON_PIP_VERSION\" \t; \tpip --version; \t\tfind /usr/local -depth \t\t\\( \t\t\t\\( -type d -a \\( -name test -o -name tests -o -name idle_test \\) \\) \t\t\t-o \t\t\t\\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' \\) \\) \t\t\\) -exec rm -rf '{}' +; \trm -f get-pip.py"
                },
                {
                    "created": "2021-03-27T03:03:06.951880236Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"python3\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T11:29:28.000141538Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c2ae031b0d8c54bd3e3961fe93a0a5d9935a9192219a32e259c427f534123b42 in requirements.txt "
                },
                {
                    "created": "2021-03-31T11:30:10.202802758Z",
                    "created_by": "/bin/sh -c pip install -r requirements.txt"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0270c2d5ad7267d4e20b234f5252bae2aa22b5fa0742b35a286d70532106269a",
                    "sha256:8ffaa1c076e917998a77fc3377958db9e1552eafbcd2ed83b05f9dc2d60cea01",
                    "sha256:ba16072796528ba8a3fd6c308701ac6e9a1f54eff1ee8d8afb2e16ed95146fab",
                    "sha256:7b59bbd0616db644418e91356efbe59f2766dab9372775b7f193545a6cb9efad",
                    "sha256:feb56ab674f479ef47efff4144f478059e14a930c93974fda5e6a7b9c9b57128",
                    "sha256:bb011d6334f8eedfb9d183d757dc1f25f12669c1b4a5e79357c3850de099c871",
                    "sha256:4e8ae34123573026ad83757686a3911114ea2a1547546dd2ef2a15861d32b9de"
                ]
            }
        },
        "1.24.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8",
                    "GPG_KEY=E3FF2839C048B25C084DEBE9B26995E310250568",
                    "PYTHON_VERSION=3.8.9",
                    "PYTHON_PIP_VERSION=21.1",
                    "PYTHON_GET_PIP_URL=https://github.com/pypa/get-pip/raw/ab9dde151f662745c13461f00c453dcf32a51ea9/public/get-pip.py",
                    "PYTHON_GET_PIP_SHA256=0ed17e859b835ad5bf00851f4dc8bbc3520c13dfff6c131d410cdb3a92ff0af9"
                ],
                "Cmd": [
                    "python3"
                ],
                "Image": "sha256:9f5304e8020c12563fb3c4ccf4e0d90ebb49254e225a8e83b179834559602a50",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "cb660fd2db1b18e4560e4699d62ec6528bd3c430c096cd1e39d71e5a035c16a7",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8",
                    "GPG_KEY=E3FF2839C048B25C084DEBE9B26995E310250568",
                    "PYTHON_VERSION=3.8.9",
                    "PYTHON_PIP_VERSION=21.1",
                    "PYTHON_GET_PIP_URL=https://github.com/pypa/get-pip/raw/ab9dde151f662745c13461f00c453dcf32a51ea9/public/get-pip.py",
                    "PYTHON_GET_PIP_SHA256=0ed17e859b835ad5bf00851f4dc8bbc3520c13dfff6c131d410cdb3a92ff0af9"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "pip install -r requirements.txt"
                ],
                "Image": "sha256:9f5304e8020c12563fb3c4ccf4e0d90ebb49254e225a8e83b179834559602a50",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2021-04-28T08:57:22.763026588Z",
            "docker_version": "20.10.6+azure",
            "history": [
                {
                    "created": "2021-04-10T01:20:22.165237076Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c855b3c65f5ba94d548d7d2659094eeb63fbf7f8419ac8e07712c3320c38b62c in / "
                },
                {
                    "created": "2021-04-10T01:20:22.511428053Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-10T15:15:47.733380242Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-10T15:15:47.913608596Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-10T15:48:31.467075915Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tnetbase \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-04-10T15:48:31.706139328Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GPG_KEY=E3FF2839C048B25C084DEBE9B26995E310250568",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-10T15:48:31.881561204Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_VERSION=3.8.9",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-10T15:56:01.263585806Z",
                    "created_by": "/bin/sh -c set -ex \t\t&& savedAptMark=\"$(apt-mark showmanual)\" \t&& apt-get update && apt-get install -y --no-install-recommends \t\tdpkg-dev \t\tgcc \t\tlibbluetooth-dev \t\tlibbz2-dev \t\tlibc6-dev \t\tlibexpat1-dev \t\tlibffi-dev \t\tlibgdbm-dev \t\tliblzma-dev \t\tlibncursesw5-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tmake \t\ttk-dev \t\tuuid-dev \t\twget \t\txz-utils \t\tzlib1g-dev \t\t$(command -v gpg > /dev/null || echo 'gnupg dirmngr') \t\t&& wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \t&& wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys \"$GPG_KEY\" \t&& gpg --batch --verify python.tar.xz.asc python.tar.xz \t&& { command -v gpgconf > /dev/null && gpgconf --kill all || :; } \t&& rm -rf \"$GNUPGHOME\" python.tar.xz.asc \t&& mkdir -p /usr/src/python \t&& tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \t&& rm python.tar.xz \t\t&& cd /usr/src/python \t&& gnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \t&& ./configure \t\t--build=\"$gnuArch\" \t\t--enable-loadable-sqlite-extensions \t\t--enable-optimizations \t\t--enable-option-checking=fatal \t\t--enable-shared \t\t--with-system-expat \t\t--with-system-ffi \t\t--without-ensurepip \t&& make -j \"$(nproc)\" \t\tLDFLAGS=\"-Wl,--strip-all\" \t&& make install \t&& rm -rf /usr/src/python \t\t&& find /usr/local -depth \t\t\\( \t\t\t\\( -type d -a \\( -name test -o -name tests -o -name idle_test \\) \\) \t\t\t-o \\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' -o -name '*.a' \\) \\) \t\t\t-o \\( -type f -a -name 'wininst-*.exe' \\) \t\t\\) -exec rm -rf '{}' + \t\t&& ldconfig \t\t&& apt-mark auto '.*' > /dev/null \t&& apt-mark manual $savedAptMark \t&& find /usr/local -type f -executable -not \\( -name '*tkinter*' \\) -exec ldd '{}' ';' \t\t| awk '/=>/ { print $(NF-1) }' \t\t| sort -u \t\t| xargs -r dpkg-query --search \t\t| cut -d: -f1 \t\t| sort -u \t\t| xargs -r apt-mark manual \t&& apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false \t&& rm -rf /var/lib/apt/lists/* \t\t&& python3 --version"
                },
                {
                    "created": "2021-04-10T15:56:02.545956857Z",
                    "created_by": "/bin/sh -c cd /usr/local/bin \t&& ln -s idle3 idle \t&& ln -s pydoc3 pydoc \t&& ln -s python3 python \t&& ln -s python3-config python-config"
                },
                {
                    "created": "2021-04-27T22:52:37.281907038Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_PIP_VERSION=21.1",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-27T22:52:37.465679136Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_GET_PIP_URL=https://github.com/pypa/get-pip/raw/ab9dde151f662745c13461f00c453dcf32a51ea9/public/get-pip.py",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-27T22:52:37.666036692Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_GET_PIP_SHA256=0ed17e859b835ad5bf00851f4dc8bbc3520c13dfff6c131d410cdb3a92ff0af9",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-27T22:52:49.397139291Z",
                    "created_by": "/bin/sh -c set -ex; \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends wget; \t\twget -O get-pip.py \"$PYTHON_GET_PIP_URL\"; \techo \"$PYTHON_GET_PIP_SHA256 *get-pip.py\" | sha256sum --check --strict -; \t\tapt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \trm -rf /var/lib/apt/lists/*; \t\tpython get-pip.py \t\t--disable-pip-version-check \t\t--no-cache-dir \t\t\"pip==$PYTHON_PIP_VERSION\" \t; \tpip --version; \t\tfind /usr/local -depth \t\t\\( \t\t\t\\( -type d -a \\( -name test -o -name tests -o -name idle_test \\) \\) \t\t\t-o \t\t\t\\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' \\) \\) \t\t\\) -exec rm -rf '{}' +; \trm -f get-pip.py"
                },
                {
                    "created": "2021-04-27T22:52:49.625466503Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"python3\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-28T08:56:44.000149247Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d81dcbcda90dec934ff1c3d02ea80be986b141b202b303c397ffcc7c68cce781 in requirements.txt "
                },
                {
                    "created": "2021-04-28T08:57:22.763026588Z",
                    "created_by": "/bin/sh -c pip install -r requirements.txt"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7e718b9c0c8c2e6420fe9c4d1d551088e314fe923dce4b2caf75891d82fb227d",
                    "sha256:8433845af46db7d7bc786f7d94d67a3171ebf3f0bbf4bbb10da857ca9747ea1b",
                    "sha256:31d3d1b0e2ede9fa0b125c979b12eaed3e81660bccf0981593ded0a71085e931",
                    "sha256:5deb24372b401511ff7389989f4f9b5bbbdd6958e1db0561b56add36645bd037",
                    "sha256:a87579b8a56e2e80f13ba9eeb26b0e20207815cf39d397e71bfbc2e63936959c",
                    "sha256:e5bb5132df78f33f796ed5b0792825c164f84973b037b50c7e9fc3ea42171f44",
                    "sha256:8fdc36750401c05b33d94d9d5fed36defb9c028c39d05d2f6b27b527e9e5cff0"
                ]
            }
        },
        "1.25.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8",
                    "GPG_KEY=E3FF2839C048B25C084DEBE9B26995E310250568",
                    "PYTHON_VERSION=3.8.10",
                    "PYTHON_PIP_VERSION=21.1.1",
                    "PYTHON_GET_PIP_URL=https://github.com/pypa/get-pip/raw/1954f15b3f102ace496a34a013ea76b061535bd2/public/get-pip.py",
                    "PYTHON_GET_PIP_SHA256=f499d76e0149a673fb8246d88e116db589afbd291739bd84f2cd9a7bca7b6993"
                ],
                "Cmd": [
                    "python3"
                ],
                "Image": "sha256:902075ff8ff8266452b16f4b95802852f84f69f99252f384c32e5c3fdfa3b1db",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "9beb061477e7a8d42bbcd77250d4998081ae1b998d550118a6459c79c2df49d0",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8",
                    "GPG_KEY=E3FF2839C048B25C084DEBE9B26995E310250568",
                    "PYTHON_VERSION=3.8.10",
                    "PYTHON_PIP_VERSION=21.1.1",
                    "PYTHON_GET_PIP_URL=https://github.com/pypa/get-pip/raw/1954f15b3f102ace496a34a013ea76b061535bd2/public/get-pip.py",
                    "PYTHON_GET_PIP_SHA256=f499d76e0149a673fb8246d88e116db589afbd291739bd84f2cd9a7bca7b6993"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "pip install -r requirements.txt"
                ],
                "Image": "sha256:902075ff8ff8266452b16f4b95802852f84f69f99252f384c32e5c3fdfa3b1db",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2021-05-10T06:44:59.260355939Z",
            "docker_version": "20.10.6+azure",
            "history": [
                {
                    "created": "2021-04-10T01:20:22.165237076Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c855b3c65f5ba94d548d7d2659094eeb63fbf7f8419ac8e07712c3320c38b62c in / "
                },
                {
                    "created": "2021-04-10T01:20:22.511428053Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-10T15:15:47.733380242Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-10T15:15:47.913608596Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-10T15:48:31.467075915Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tnetbase \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-04-10T15:48:31.706139328Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GPG_KEY=E3FF2839C048B25C084DEBE9B26995E310250568",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-04T18:52:28.391881856Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_VERSION=3.8.10",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-04T19:00:42.091825161Z",
                    "created_by": "/bin/sh -c set -ex \t\t&& savedAptMark=\"$(apt-mark showmanual)\" \t&& apt-get update && apt-get install -y --no-install-recommends \t\tdpkg-dev \t\tgcc \t\tlibbluetooth-dev \t\tlibbz2-dev \t\tlibc6-dev \t\tlibexpat1-dev \t\tlibffi-dev \t\tlibgdbm-dev \t\tliblzma-dev \t\tlibncursesw5-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tmake \t\ttk-dev \t\tuuid-dev \t\twget \t\txz-utils \t\tzlib1g-dev \t\t$(command -v gpg > /dev/null || echo 'gnupg dirmngr') \t\t&& wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \t&& wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys \"$GPG_KEY\" \t&& gpg --batch --verify python.tar.xz.asc python.tar.xz \t&& { command -v gpgconf > /dev/null && gpgconf --kill all || :; } \t&& rm -rf \"$GNUPGHOME\" python.tar.xz.asc \t&& mkdir -p /usr/src/python \t&& tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \t&& rm python.tar.xz \t\t&& cd /usr/src/python \t&& gnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \t&& ./configure \t\t--build=\"$gnuArch\" \t\t--enable-loadable-sqlite-extensions \t\t--enable-optimizations \t\t--enable-option-checking=fatal \t\t--enable-shared \t\t--with-system-expat \t\t--with-system-ffi \t\t--without-ensurepip \t&& make -j \"$(nproc)\" \t\tLDFLAGS=\"-Wl,--strip-all\" \t&& make install \t&& rm -rf /usr/src/python \t\t&& find /usr/local -depth \t\t\\( \t\t\t\\( -type d -a \\( -name test -o -name tests -o -name idle_test \\) \\) \t\t\t-o \\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' -o -name '*.a' \\) \\) \t\t\t-o \\( -type f -a -name 'wininst-*.exe' \\) \t\t\\) -exec rm -rf '{}' + \t\t&& ldconfig \t\t&& apt-mark auto '.*' > /dev/null \t&& apt-mark manual $savedAptMark \t&& find /usr/local -type f -executable -not \\( -name '*tkinter*' \\) -exec ldd '{}' ';' \t\t| awk '/=>/ { print $(NF-1) }' \t\t| sort -u \t\t| xargs -r dpkg-query --search \t\t| cut -d: -f1 \t\t| sort -u \t\t| xargs -r apt-mark manual \t&& apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false \t&& rm -rf /var/lib/apt/lists/* \t\t&& python3 --version"
                },
                {
                    "created": "2021-05-04T19:00:43.172181801Z",
                    "created_by": "/bin/sh -c cd /usr/local/bin \t&& ln -s idle3 idle \t&& ln -s pydoc3 pydoc \t&& ln -s python3 python \t&& ln -s python3-config python-config"
                },
                {
                    "created": "2021-05-04T19:00:43.370860779Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_PIP_VERSION=21.1.1",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-04T19:00:43.597471097Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_GET_PIP_URL=https://github.com/pypa/get-pip/raw/1954f15b3f102ace496a34a013ea76b061535bd2/public/get-pip.py",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-04T19:00:43.774924856Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_GET_PIP_SHA256=f499d76e0149a673fb8246d88e116db589afbd291739bd84f2cd9a7bca7b6993",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-04T19:00:55.458374947Z",
                    "created_by": "/bin/sh -c set -ex; \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends wget; \t\twget -O get-pip.py \"$PYTHON_GET_PIP_URL\"; \techo \"$PYTHON_GET_PIP_SHA256 *get-pip.py\" | sha256sum --check --strict -; \t\tapt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \trm -rf /var/lib/apt/lists/*; \t\tpython get-pip.py \t\t--disable-pip-version-check \t\t--no-cache-dir \t\t\"pip==$PYTHON_PIP_VERSION\" \t; \tpip --version; \t\tfind /usr/local -depth \t\t\\( \t\t\t\\( -type d -a \\( -name test -o -name tests -o -name idle_test \\) \\) \t\t\t-o \t\t\t\\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' \\) \\) \t\t\\) -exec rm -rf '{}' +; \trm -f get-pip.py"
                },
                {
                    "created": "2021-05-04T19:00:55.699304381Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"python3\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-10T06:44:23.000169497Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0127db7994734105736781e1cbd0b32e259d5aec947b76fa02da6d5216cd2d65 in requirements.txt "
                },
                {
                    "created": "2021-05-10T06:44:59.260355939Z",
                    "created_by": "/bin/sh -c pip install -r requirements.txt"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7e718b9c0c8c2e6420fe9c4d1d551088e314fe923dce4b2caf75891d82fb227d",
                    "sha256:8433845af46db7d7bc786f7d94d67a3171ebf3f0bbf4bbb10da857ca9747ea1b",
                    "sha256:183486b232d7f25865a3e4a177e5df8f79289d37dbb59069d6ae920ab3eb17ad",
                    "sha256:bc26e91ff721fc65fd6d126eadc296c79d0512c8b9f6a07aaa42c0419a9199f1",
                    "sha256:3f625543bd4d1c64b8a3ebac855d5e788e796c79974088f94968ea722cbbcb14",
                    "sha256:d0d30cbbb77c6b8dcef1bf395889a50b934cf1524d20abfcd2df7835cdd62575",
                    "sha256:946cbb5fde785f3eade2c5158f3707be0e23893f8972b58c5764c95a82c03b0b"
                ]
            }
        },
        "1.26.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8",
                    "GPG_KEY=E3FF2839C048B25C084DEBE9B26995E310250568",
                    "PYTHON_VERSION=3.8.10",
                    "PYTHON_PIP_VERSION=21.1.2",
                    "PYTHON_GET_PIP_URL=https://github.com/pypa/get-pip/raw/936e08ce004d0b2fae8952c50f7ccce1bc578ce5/public/get-pip.py",
                    "PYTHON_GET_PIP_SHA256=8890955d56a8262348470a76dc432825f61a84a54e2985a86cd520f656a6e220"
                ],
                "Cmd": [
                    "python3"
                ],
                "Image": "sha256:d7cf9c713aecae842cf0c61f1f1ca8b4d4359c08d47234073ac8cf6e69d1a87f",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "601b96831382a6b3771bf57557a3c8479c1cd044aef66c7e90a5931668e2c3c2",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8",
                    "GPG_KEY=E3FF2839C048B25C084DEBE9B26995E310250568",
                    "PYTHON_VERSION=3.8.10",
                    "PYTHON_PIP_VERSION=21.1.2",
                    "PYTHON_GET_PIP_URL=https://github.com/pypa/get-pip/raw/936e08ce004d0b2fae8952c50f7ccce1bc578ce5/public/get-pip.py",
                    "PYTHON_GET_PIP_SHA256=8890955d56a8262348470a76dc432825f61a84a54e2985a86cd520f656a6e220"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "pip install -r requirements.txt"
                ],
                "Image": "sha256:d7cf9c713aecae842cf0c61f1f1ca8b4d4359c08d47234073ac8cf6e69d1a87f",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2021-06-02T06:53:09.234835122Z",
            "docker_version": "20.10.6+azure",
            "history": [
                {
                    "created": "2021-05-12T01:21:22.128649612Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7362e0e50f30ff45463ea38bb265cb8f6b7cd422eb2d09de7384efa0b59614be in / "
                },
                {
                    "created": "2021-05-12T01:21:22.552826465Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-12T15:05:32.437057361Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-12T15:05:32.723226803Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-12T15:48:35.693174945Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tnetbase \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-05-12T15:48:35.914086768Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GPG_KEY=E3FF2839C048B25C084DEBE9B26995E310250568",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-12T15:48:36.128286788Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_VERSION=3.8.10",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-12T15:57:56.005345481Z",
                    "created_by": "/bin/sh -c set -ex \t\t&& savedAptMark=\"$(apt-mark showmanual)\" \t&& apt-get update && apt-get install -y --no-install-recommends \t\tdpkg-dev \t\tgcc \t\tlibbluetooth-dev \t\tlibbz2-dev \t\tlibc6-dev \t\tlibexpat1-dev \t\tlibffi-dev \t\tlibgdbm-dev \t\tliblzma-dev \t\tlibncursesw5-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tmake \t\ttk-dev \t\tuuid-dev \t\twget \t\txz-utils \t\tzlib1g-dev \t\t$(command -v gpg > /dev/null || echo 'gnupg dirmngr') \t\t&& wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \t&& wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys \"$GPG_KEY\" \t&& gpg --batch --verify python.tar.xz.asc python.tar.xz \t&& { command -v gpgconf > /dev/null && gpgconf --kill all || :; } \t&& rm -rf \"$GNUPGHOME\" python.tar.xz.asc \t&& mkdir -p /usr/src/python \t&& tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \t&& rm python.tar.xz \t\t&& cd /usr/src/python \t&& gnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \t&& ./configure \t\t--build=\"$gnuArch\" \t\t--enable-loadable-sqlite-extensions \t\t--enable-optimizations \t\t--enable-option-checking=fatal \t\t--enable-shared \t\t--with-system-expat \t\t--with-system-ffi \t\t--without-ensurepip \t&& make -j \"$(nproc)\" \t\tLDFLAGS=\"-Wl,--strip-all\" \t&& make install \t&& rm -rf /usr/src/python \t\t&& find /usr/local -depth \t\t\\( \t\t\t\\( -type d -a \\( -name test -o -name tests -o -name idle_test \\) \\) \t\t\t-o \\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' -o -name '*.a' \\) \\) \t\t\t-o \\( -type f -a -name 'wininst-*.exe' \\) \t\t\\) -exec rm -rf '{}' + \t\t&& ldconfig \t\t&& apt-mark auto '.*' > /dev/null \t&& apt-mark manual $savedAptMark \t&& find /usr/local -type f -executable -not \\( -name '*tkinter*' \\) -exec ldd '{}' ';' \t\t| awk '/=>/ { print $(NF-1) }' \t\t| sort -u \t\t| xargs -r dpkg-query --search \t\t| cut -d: -f1 \t\t| sort -u \t\t| xargs -r apt-mark manual \t&& apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false \t&& rm -rf /var/lib/apt/lists/* \t\t&& python3 --version"
                },
                {
                    "created": "2021-05-12T15:57:57.817380732Z",
                    "created_by": "/bin/sh -c cd /usr/local/bin \t&& ln -s idle3 idle \t&& ln -s pydoc3 pydoc \t&& ln -s python3 python \t&& ln -s python3-config python-config"
                },
                {
                    "created": "2021-05-24T19:34:11.693290701Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_PIP_VERSION=21.1.2",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-24T19:34:11.891185895Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_GET_PIP_URL=https://github.com/pypa/get-pip/raw/936e08ce004d0b2fae8952c50f7ccce1bc578ce5/public/get-pip.py",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-24T19:34:12.110560029Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_GET_PIP_SHA256=8890955d56a8262348470a76dc432825f61a84a54e2985a86cd520f656a6e220",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-24T19:34:23.745065331Z",
                    "created_by": "/bin/sh -c set -ex; \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends wget; \t\twget -O get-pip.py \"$PYTHON_GET_PIP_URL\"; \techo \"$PYTHON_GET_PIP_SHA256 *get-pip.py\" | sha256sum --check --strict -; \t\tapt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \trm -rf /var/lib/apt/lists/*; \t\tpython get-pip.py \t\t--disable-pip-version-check \t\t--no-cache-dir \t\t\"pip==$PYTHON_PIP_VERSION\" \t; \tpip --version; \t\tfind /usr/local -depth \t\t\\( \t\t\t\\( -type d -a \\( -name test -o -name tests -o -name idle_test \\) \\) \t\t\t-o \t\t\t\\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' \\) \\) \t\t\\) -exec rm -rf '{}' +; \trm -f get-pip.py"
                },
                {
                    "created": "2021-05-24T19:34:23.987184594Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"python3\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-02T06:52:31.00013171Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c1a56ac5d291b222fa50b6a20eb4c43f66801aa55ca05eee0effe2c17ca3ff5f in requirements.txt "
                },
                {
                    "created": "2021-06-02T06:53:09.234835122Z",
                    "created_by": "/bin/sh -c pip install -r requirements.txt"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:02c055ef67f5904019f43a41ea5f099996d8e7633749b6e606c400526b2c4b33",
                    "sha256:f9ef7f1bcb199f8d36e3d939a8b83c53aa79f7caa71d16f92e918a24c6fa45d6",
                    "sha256:747aa001f428a2164f7d5e9586417964d03ca02bc3b42d824692fcca598b6bfc",
                    "sha256:88fb2db345cddefec6f15874cd8448236e2f8b6c390d68c6baab31a7cb5776e2",
                    "sha256:490c2f015c3ea8c7797fca00846a0effd86806d1476609192920c4d320d0a282",
                    "sha256:ef7e26279c7d4d1eea6402bb723b6960b364cd70eea158aa4ccaf46a41b9e99f",
                    "sha256:aed38a6570f448a135021baa19d128b7c8f9c7c2b328e73c9fc2527c575daa52"
                ]
            }
        },
        "1.27.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8",
                    "GPG_KEY=E3FF2839C048B25C084DEBE9B26995E310250568",
                    "PYTHON_VERSION=3.8.10",
                    "PYTHON_PIP_VERSION=21.1.2",
                    "PYTHON_GET_PIP_URL=https://github.com/pypa/get-pip/raw/936e08ce004d0b2fae8952c50f7ccce1bc578ce5/public/get-pip.py",
                    "PYTHON_GET_PIP_SHA256=8890955d56a8262348470a76dc432825f61a84a54e2985a86cd520f656a6e220"
                ],
                "Cmd": [
                    "python3"
                ],
                "Image": "sha256:39a69782930713a26947de92be8c079d1c43d1084fcc225dbe10703968bf5f4c",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "fb51917c5e8b73a8375e9789b42c535a21451f30df4976ac5b3c2e283a51d11e",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8",
                    "GPG_KEY=E3FF2839C048B25C084DEBE9B26995E310250568",
                    "PYTHON_VERSION=3.8.10",
                    "PYTHON_PIP_VERSION=21.1.2",
                    "PYTHON_GET_PIP_URL=https://github.com/pypa/get-pip/raw/936e08ce004d0b2fae8952c50f7ccce1bc578ce5/public/get-pip.py",
                    "PYTHON_GET_PIP_SHA256=8890955d56a8262348470a76dc432825f61a84a54e2985a86cd520f656a6e220"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "pip install -r requirements.txt"
                ],
                "Image": "sha256:39a69782930713a26947de92be8c079d1c43d1084fcc225dbe10703968bf5f4c",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2021-06-23T07:33:43.066061602Z",
            "docker_version": "20.10.6+azure",
            "history": [
                {
                    "created": "2021-05-12T01:21:22.128649612Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7362e0e50f30ff45463ea38bb265cb8f6b7cd422eb2d09de7384efa0b59614be in / "
                },
                {
                    "created": "2021-05-12T01:21:22.552826465Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-12T15:05:32.437057361Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-12T15:05:32.723226803Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-12T15:48:35.693174945Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tnetbase \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-05-12T15:48:35.914086768Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GPG_KEY=E3FF2839C048B25C084DEBE9B26995E310250568",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-12T15:48:36.128286788Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_VERSION=3.8.10",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-12T15:57:56.005345481Z",
                    "created_by": "/bin/sh -c set -ex \t\t&& savedAptMark=\"$(apt-mark showmanual)\" \t&& apt-get update && apt-get install -y --no-install-recommends \t\tdpkg-dev \t\tgcc \t\tlibbluetooth-dev \t\tlibbz2-dev \t\tlibc6-dev \t\tlibexpat1-dev \t\tlibffi-dev \t\tlibgdbm-dev \t\tliblzma-dev \t\tlibncursesw5-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tmake \t\ttk-dev \t\tuuid-dev \t\twget \t\txz-utils \t\tzlib1g-dev \t\t$(command -v gpg > /dev/null || echo 'gnupg dirmngr') \t\t&& wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \t&& wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys \"$GPG_KEY\" \t&& gpg --batch --verify python.tar.xz.asc python.tar.xz \t&& { command -v gpgconf > /dev/null && gpgconf --kill all || :; } \t&& rm -rf \"$GNUPGHOME\" python.tar.xz.asc \t&& mkdir -p /usr/src/python \t&& tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \t&& rm python.tar.xz \t\t&& cd /usr/src/python \t&& gnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \t&& ./configure \t\t--build=\"$gnuArch\" \t\t--enable-loadable-sqlite-extensions \t\t--enable-optimizations \t\t--enable-option-checking=fatal \t\t--enable-shared \t\t--with-system-expat \t\t--with-system-ffi \t\t--without-ensurepip \t&& make -j \"$(nproc)\" \t\tLDFLAGS=\"-Wl,--strip-all\" \t&& make install \t&& rm -rf /usr/src/python \t\t&& find /usr/local -depth \t\t\\( \t\t\t\\( -type d -a \\( -name test -o -name tests -o -name idle_test \\) \\) \t\t\t-o \\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' -o -name '*.a' \\) \\) \t\t\t-o \\( -type f -a -name 'wininst-*.exe' \\) \t\t\\) -exec rm -rf '{}' + \t\t&& ldconfig \t\t&& apt-mark auto '.*' > /dev/null \t&& apt-mark manual $savedAptMark \t&& find /usr/local -type f -executable -not \\( -name '*tkinter*' \\) -exec ldd '{}' ';' \t\t| awk '/=>/ { print $(NF-1) }' \t\t| sort -u \t\t| xargs -r dpkg-query --search \t\t| cut -d: -f1 \t\t| sort -u \t\t| xargs -r apt-mark manual \t&& apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false \t&& rm -rf /var/lib/apt/lists/* \t\t&& python3 --version"
                },
                {
                    "created": "2021-05-12T15:57:57.817380732Z",
                    "created_by": "/bin/sh -c cd /usr/local/bin \t&& ln -s idle3 idle \t&& ln -s pydoc3 pydoc \t&& ln -s python3 python \t&& ln -s python3-config python-config"
                },
                {
                    "created": "2021-05-24T19:34:11.693290701Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_PIP_VERSION=21.1.2",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-24T19:34:11.891185895Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_GET_PIP_URL=https://github.com/pypa/get-pip/raw/936e08ce004d0b2fae8952c50f7ccce1bc578ce5/public/get-pip.py",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-24T19:34:12.110560029Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_GET_PIP_SHA256=8890955d56a8262348470a76dc432825f61a84a54e2985a86cd520f656a6e220",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-24T19:34:23.745065331Z",
                    "created_by": "/bin/sh -c set -ex; \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends wget; \t\twget -O get-pip.py \"$PYTHON_GET_PIP_URL\"; \techo \"$PYTHON_GET_PIP_SHA256 *get-pip.py\" | sha256sum --check --strict -; \t\tapt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \trm -rf /var/lib/apt/lists/*; \t\tpython get-pip.py \t\t--disable-pip-version-check \t\t--no-cache-dir \t\t\"pip==$PYTHON_PIP_VERSION\" \t; \tpip --version; \t\tfind /usr/local -depth \t\t\\( \t\t\t\\( -type d -a \\( -name test -o -name tests -o -name idle_test \\) \\) \t\t\t-o \t\t\t\\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' \\) \\) \t\t\\) -exec rm -rf '{}' +; \trm -f get-pip.py"
                },
                {
                    "created": "2021-05-24T19:34:23.987184594Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"python3\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-23T07:33:06.27900212Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3b773af14c179b00a7b8db9d4e0ca1381334c998a8b769271be75543d71d5edb in requirements.txt "
                },
                {
                    "created": "2021-06-23T07:33:43.066061602Z",
                    "created_by": "/bin/sh -c pip install -r requirements.txt"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:02c055ef67f5904019f43a41ea5f099996d8e7633749b6e606c400526b2c4b33",
                    "sha256:f9ef7f1bcb199f8d36e3d939a8b83c53aa79f7caa71d16f92e918a24c6fa45d6",
                    "sha256:747aa001f428a2164f7d5e9586417964d03ca02bc3b42d824692fcca598b6bfc",
                    "sha256:88fb2db345cddefec6f15874cd8448236e2f8b6c390d68c6baab31a7cb5776e2",
                    "sha256:490c2f015c3ea8c7797fca00846a0effd86806d1476609192920c4d320d0a282",
                    "sha256:d9e75d7c3496abaf0055eb82a79e19731391d6f53c24079a05ca182d8f598bc4",
                    "sha256:ac46c74c880bd9c3c33a4a2bbc35f5c4f222a0fde3eb4065306c5456882bfecc"
                ]
            }
        },
        "1.28.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8",
                    "GPG_KEY=E3FF2839C048B25C084DEBE9B26995E310250568",
                    "PYTHON_VERSION=3.8.11",
                    "PYTHON_PIP_VERSION=21.1.3",
                    "PYTHON_GET_PIP_URL=https://github.com/pypa/get-pip/raw/a1675ab6c2bd898ed82b1f58c486097f763c74a9/public/get-pip.py",
                    "PYTHON_GET_PIP_SHA256=6665659241292b2147b58922b9ffe11dda66b39d52d8a6f3aa310bc1d60ea6f7"
                ],
                "Cmd": [
                    "python3"
                ],
                "Image": "sha256:bc2cade3fe5f78f83c430d20d386becc1ce4fd3965570daad7ceecbc8990a296",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "c7b05d03849093b015dc2b22ddbd952eabbb675352367c9f5e558f546e97442d",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8",
                    "GPG_KEY=E3FF2839C048B25C084DEBE9B26995E310250568",
                    "PYTHON_VERSION=3.8.11",
                    "PYTHON_PIP_VERSION=21.1.3",
                    "PYTHON_GET_PIP_URL=https://github.com/pypa/get-pip/raw/a1675ab6c2bd898ed82b1f58c486097f763c74a9/public/get-pip.py",
                    "PYTHON_GET_PIP_SHA256=6665659241292b2147b58922b9ffe11dda66b39d52d8a6f3aa310bc1d60ea6f7"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "pip install -r requirements.txt"
                ],
                "Image": "sha256:bc2cade3fe5f78f83c430d20d386becc1ce4fd3965570daad7ceecbc8990a296",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2021-07-11T08:55:30.027779016Z",
            "docker_version": "20.10.6+azure",
            "history": [
                {
                    "created": "2021-06-23T00:20:40.386610922Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4903a19c327468b0e08e4f463cfc162c66b85b4618b5803d71365862f6302e0b in / "
                },
                {
                    "created": "2021-06-23T00:20:40.842961608Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-23T14:43:51.561852163Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-23T14:43:51.773609603Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-23T15:21:07.900625849Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tnetbase \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-06-23T15:21:08.145535987Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GPG_KEY=E3FF2839C048B25C084DEBE9B26995E310250568",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-29T19:56:29.930082051Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_VERSION=3.8.11",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-29T20:06:39.532726429Z",
                    "created_by": "/bin/sh -c set -ex \t\t&& savedAptMark=\"$(apt-mark showmanual)\" \t&& apt-get update && apt-get install -y --no-install-recommends \t\tdpkg-dev \t\tgcc \t\tlibbluetooth-dev \t\tlibbz2-dev \t\tlibc6-dev \t\tlibexpat1-dev \t\tlibffi-dev \t\tlibgdbm-dev \t\tliblzma-dev \t\tlibncursesw5-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tmake \t\ttk-dev \t\tuuid-dev \t\twget \t\txz-utils \t\tzlib1g-dev \t\t$(command -v gpg > /dev/null || echo 'gnupg dirmngr') \t\t&& wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \t&& wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys \"$GPG_KEY\" \t&& gpg --batch --verify python.tar.xz.asc python.tar.xz \t&& { command -v gpgconf > /dev/null && gpgconf --kill all || :; } \t&& rm -rf \"$GNUPGHOME\" python.tar.xz.asc \t&& mkdir -p /usr/src/python \t&& tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \t&& rm python.tar.xz \t\t&& cd /usr/src/python \t&& gnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \t&& ./configure \t\t--build=\"$gnuArch\" \t\t--enable-loadable-sqlite-extensions \t\t--enable-optimizations \t\t--enable-option-checking=fatal \t\t--enable-shared \t\t--with-system-expat \t\t--with-system-ffi \t\t--without-ensurepip \t&& make -j \"$(nproc)\" \t\tLDFLAGS=\"-Wl,--strip-all\" \t&& make install \t&& rm -rf /usr/src/python \t\t&& find /usr/local -depth \t\t\\( \t\t\t\\( -type d -a \\( -name test -o -name tests -o -name idle_test \\) \\) \t\t\t-o \\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' -o -name '*.a' \\) \\) \t\t\t-o \\( -type f -a -name 'wininst-*.exe' \\) \t\t\\) -exec rm -rf '{}' + \t\t&& ldconfig \t\t&& apt-mark auto '.*' > /dev/null \t&& apt-mark manual $savedAptMark \t&& find /usr/local -type f -executable -not \\( -name '*tkinter*' \\) -exec ldd '{}' ';' \t\t| awk '/=>/ { print $(NF-1) }' \t\t| sort -u \t\t| xargs -r dpkg-query --search \t\t| cut -d: -f1 \t\t| sort -u \t\t| xargs -r apt-mark manual \t&& apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false \t&& rm -rf /var/lib/apt/lists/* \t\t&& python3 --version"
                },
                {
                    "created": "2021-06-29T20:06:40.70350062Z",
                    "created_by": "/bin/sh -c cd /usr/local/bin \t&& ln -s idle3 idle \t&& ln -s pydoc3 pydoc \t&& ln -s python3 python \t&& ln -s python3-config python-config"
                },
                {
                    "created": "2021-06-29T20:06:40.92777307Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_PIP_VERSION=21.1.3",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-29T20:06:41.161681081Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_GET_PIP_URL=https://github.com/pypa/get-pip/raw/a1675ab6c2bd898ed82b1f58c486097f763c74a9/public/get-pip.py",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-29T20:06:41.377401026Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_GET_PIP_SHA256=6665659241292b2147b58922b9ffe11dda66b39d52d8a6f3aa310bc1d60ea6f7",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-29T20:06:54.897373019Z",
                    "created_by": "/bin/sh -c set -ex; \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends wget; \t\twget -O get-pip.py \"$PYTHON_GET_PIP_URL\"; \techo \"$PYTHON_GET_PIP_SHA256 *get-pip.py\" | sha256sum --check --strict -; \t\tapt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \trm -rf /var/lib/apt/lists/*; \t\tpython get-pip.py \t\t--disable-pip-version-check \t\t--no-cache-dir \t\t\"pip==$PYTHON_PIP_VERSION\" \t; \tpip --version; \t\tfind /usr/local -depth \t\t\\( \t\t\t\\( -type d -a \\( -name test -o -name tests -o -name idle_test \\) \\) \t\t\t-o \t\t\t\\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' \\) \\) \t\t\\) -exec rm -rf '{}' +; \trm -f get-pip.py"
                },
                {
                    "created": "2021-06-29T20:06:55.231096425Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"python3\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-11T08:54:52.000266081Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:dc51e54dd666936845f9f05c09402bdd87467750d68bd29dafad8a995431f5dd in requirements.txt "
                },
                {
                    "created": "2021-07-11T08:55:30.027779016Z",
                    "created_by": "/bin/sh -c pip install -r requirements.txt"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:764055ebc9a7a290b64d17cf9ea550f1099c202d83795aa967428ebdf335c9f7",
                    "sha256:537313a13d9080fc30444461b8aac5f03b9cbb0e2352b3c3098d5eca5f42688f",
                    "sha256:2138286d3aea914658cda630abbc7c2b8d2f89220ac98f92181393da307a1959",
                    "sha256:8dd62b771c62257bd906b2adac7b47dbf70c8062d436ee7f827db4ae9f5d6cdf",
                    "sha256:abbd1e0c6d6b400268044022875460767bee31458a59cae2a2bf3b9f7c90a250",
                    "sha256:5697756094e46d2c70b47a595ef9ab8d7f993182e15ab47183abf407f010d7fe",
                    "sha256:1e414dfbb7908d31d12ca23029ec641500f17d2f44f567dddff1834f15225039"
                ]
            }
        },
        "1.29.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8",
                    "GPG_KEY=E3FF2839C048B25C084DEBE9B26995E310250568",
                    "PYTHON_VERSION=3.8.11",
                    "PYTHON_PIP_VERSION=21.1.3",
                    "PYTHON_GET_PIP_URL=https://github.com/pypa/get-pip/raw/a1675ab6c2bd898ed82b1f58c486097f763c74a9/public/get-pip.py",
                    "PYTHON_GET_PIP_SHA256=6665659241292b2147b58922b9ffe11dda66b39d52d8a6f3aa310bc1d60ea6f7"
                ],
                "Cmd": [
                    "python3"
                ],
                "Image": "sha256:4cacfd30cc5bf0abe9232e1b9749caf4f7e7d3b18a10e0936ca2a2a644c3b5ae",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "889341085dd54d5f755c691708265d6130042a246f779a5c27a49e7c30cdbecd",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8",
                    "GPG_KEY=E3FF2839C048B25C084DEBE9B26995E310250568",
                    "PYTHON_VERSION=3.8.11",
                    "PYTHON_PIP_VERSION=21.1.3",
                    "PYTHON_GET_PIP_URL=https://github.com/pypa/get-pip/raw/a1675ab6c2bd898ed82b1f58c486097f763c74a9/public/get-pip.py",
                    "PYTHON_GET_PIP_SHA256=6665659241292b2147b58922b9ffe11dda66b39d52d8a6f3aa310bc1d60ea6f7"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "pip install -r requirements.txt"
                ],
                "Image": "sha256:4cacfd30cc5bf0abe9232e1b9749caf4f7e7d3b18a10e0936ca2a2a644c3b5ae",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2021-07-18T16:28:20.026331194Z",
            "docker_version": "20.10.7+azure",
            "history": [
                {
                    "created": "2021-06-23T00:20:40.386610922Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4903a19c327468b0e08e4f463cfc162c66b85b4618b5803d71365862f6302e0b in / "
                },
                {
                    "created": "2021-06-23T00:20:40.842961608Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-23T14:43:51.561852163Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-23T14:43:51.773609603Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-23T15:21:07.900625849Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tnetbase \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-06-23T15:21:08.145535987Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GPG_KEY=E3FF2839C048B25C084DEBE9B26995E310250568",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-29T19:56:29.930082051Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_VERSION=3.8.11",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-29T20:06:39.532726429Z",
                    "created_by": "/bin/sh -c set -ex \t\t&& savedAptMark=\"$(apt-mark showmanual)\" \t&& apt-get update && apt-get install -y --no-install-recommends \t\tdpkg-dev \t\tgcc \t\tlibbluetooth-dev \t\tlibbz2-dev \t\tlibc6-dev \t\tlibexpat1-dev \t\tlibffi-dev \t\tlibgdbm-dev \t\tliblzma-dev \t\tlibncursesw5-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tmake \t\ttk-dev \t\tuuid-dev \t\twget \t\txz-utils \t\tzlib1g-dev \t\t$(command -v gpg > /dev/null || echo 'gnupg dirmngr') \t\t&& wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \t&& wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys \"$GPG_KEY\" \t&& gpg --batch --verify python.tar.xz.asc python.tar.xz \t&& { command -v gpgconf > /dev/null && gpgconf --kill all || :; } \t&& rm -rf \"$GNUPGHOME\" python.tar.xz.asc \t&& mkdir -p /usr/src/python \t&& tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \t&& rm python.tar.xz \t\t&& cd /usr/src/python \t&& gnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \t&& ./configure \t\t--build=\"$gnuArch\" \t\t--enable-loadable-sqlite-extensions \t\t--enable-optimizations \t\t--enable-option-checking=fatal \t\t--enable-shared \t\t--with-system-expat \t\t--with-system-ffi \t\t--without-ensurepip \t&& make -j \"$(nproc)\" \t\tLDFLAGS=\"-Wl,--strip-all\" \t&& make install \t&& rm -rf /usr/src/python \t\t&& find /usr/local -depth \t\t\\( \t\t\t\\( -type d -a \\( -name test -o -name tests -o -name idle_test \\) \\) \t\t\t-o \\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' -o -name '*.a' \\) \\) \t\t\t-o \\( -type f -a -name 'wininst-*.exe' \\) \t\t\\) -exec rm -rf '{}' + \t\t&& ldconfig \t\t&& apt-mark auto '.*' > /dev/null \t&& apt-mark manual $savedAptMark \t&& find /usr/local -type f -executable -not \\( -name '*tkinter*' \\) -exec ldd '{}' ';' \t\t| awk '/=>/ { print $(NF-1) }' \t\t| sort -u \t\t| xargs -r dpkg-query --search \t\t| cut -d: -f1 \t\t| sort -u \t\t| xargs -r apt-mark manual \t&& apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false \t&& rm -rf /var/lib/apt/lists/* \t\t&& python3 --version"
                },
                {
                    "created": "2021-06-29T20:06:40.70350062Z",
                    "created_by": "/bin/sh -c cd /usr/local/bin \t&& ln -s idle3 idle \t&& ln -s pydoc3 pydoc \t&& ln -s python3 python \t&& ln -s python3-config python-config"
                },
                {
                    "created": "2021-06-29T20:06:40.92777307Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_PIP_VERSION=21.1.3",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-29T20:06:41.161681081Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_GET_PIP_URL=https://github.com/pypa/get-pip/raw/a1675ab6c2bd898ed82b1f58c486097f763c74a9/public/get-pip.py",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-29T20:06:41.377401026Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_GET_PIP_SHA256=6665659241292b2147b58922b9ffe11dda66b39d52d8a6f3aa310bc1d60ea6f7",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-29T20:06:54.897373019Z",
                    "created_by": "/bin/sh -c set -ex; \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends wget; \t\twget -O get-pip.py \"$PYTHON_GET_PIP_URL\"; \techo \"$PYTHON_GET_PIP_SHA256 *get-pip.py\" | sha256sum --check --strict -; \t\tapt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \trm -rf /var/lib/apt/lists/*; \t\tpython get-pip.py \t\t--disable-pip-version-check \t\t--no-cache-dir \t\t\"pip==$PYTHON_PIP_VERSION\" \t; \tpip --version; \t\tfind /usr/local -depth \t\t\\( \t\t\t\\( -type d -a \\( -name test -o -name tests -o -name idle_test \\) \\) \t\t\t-o \t\t\t\\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' \\) \\) \t\t\\) -exec rm -rf '{}' +; \trm -f get-pip.py"
                },
                {
                    "created": "2021-06-29T20:06:55.231096425Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"python3\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-18T16:27:42.000243243Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0fca820ac46f50639d9779c1ec4847fd457c6bc06f11e4a53df1bf4cad415862 in requirements.txt "
                },
                {
                    "created": "2021-07-18T16:28:20.026331194Z",
                    "created_by": "/bin/sh -c pip install -r requirements.txt"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:764055ebc9a7a290b64d17cf9ea550f1099c202d83795aa967428ebdf335c9f7",
                    "sha256:537313a13d9080fc30444461b8aac5f03b9cbb0e2352b3c3098d5eca5f42688f",
                    "sha256:2138286d3aea914658cda630abbc7c2b8d2f89220ac98f92181393da307a1959",
                    "sha256:8dd62b771c62257bd906b2adac7b47dbf70c8062d436ee7f827db4ae9f5d6cdf",
                    "sha256:abbd1e0c6d6b400268044022875460767bee31458a59cae2a2bf3b9f7c90a250",
                    "sha256:6bc53fcf4fe29a72352db4dabdb9579c4e550d313579f2a76ffa1bf600051023",
                    "sha256:4a3e94522f05b3381bad7d48e3c078cbbb85360262f05f8a8a64f9a5a671f539"
                ]
            }
        },
        "1.30.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8",
                    "GPG_KEY=E3FF2839C048B25C084DEBE9B26995E310250568",
                    "PYTHON_VERSION=3.8.11",
                    "PYTHON_PIP_VERSION=21.2.1",
                    "PYTHON_GET_PIP_URL=https://github.com/pypa/get-pip/raw/a1675ab6c2bd898ed82b1f58c486097f763c74a9/public/get-pip.py",
                    "PYTHON_GET_PIP_SHA256=6665659241292b2147b58922b9ffe11dda66b39d52d8a6f3aa310bc1d60ea6f7"
                ],
                "Cmd": [
                    "python3"
                ],
                "Image": "sha256:2f884c9a31731f8bb333b272f28bcb4832b1ffc534669c3428cc5252152d6b60",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "0100d4ecbae9efad1c6034f3ead102bc7de6ea1d5983e5ba32e138649dfde6e6",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8",
                    "GPG_KEY=E3FF2839C048B25C084DEBE9B26995E310250568",
                    "PYTHON_VERSION=3.8.11",
                    "PYTHON_PIP_VERSION=21.2.1",
                    "PYTHON_GET_PIP_URL=https://github.com/pypa/get-pip/raw/a1675ab6c2bd898ed82b1f58c486097f763c74a9/public/get-pip.py",
                    "PYTHON_GET_PIP_SHA256=6665659241292b2147b58922b9ffe11dda66b39d52d8a6f3aa310bc1d60ea6f7"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "pip install -r requirements.txt"
                ],
                "Image": "sha256:2f884c9a31731f8bb333b272f28bcb4832b1ffc534669c3428cc5252152d6b60",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2021-07-31T09:53:43.939370621Z",
            "docker_version": "20.10.7+azure",
            "history": [
                {
                    "created": "2021-07-22T00:45:43.828746523Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:45f5dfa135c848a348382413cb8b66a3b1dac3276814fbbe4684b39101d1b148 in / "
                },
                {
                    "created": "2021-07-22T00:45:44.255062023Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-22T14:58:41.930216909Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-22T14:58:42.362893725Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-22T15:33:21.595777326Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tnetbase \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-07-22T15:33:21.826893339Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GPG_KEY=E3FF2839C048B25C084DEBE9B26995E310250568",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-22T15:33:22.020071306Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_VERSION=3.8.11",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-22T15:42:34.986665431Z",
                    "created_by": "/bin/sh -c set -ex \t\t&& savedAptMark=\"$(apt-mark showmanual)\" \t&& apt-get update && apt-get install -y --no-install-recommends \t\tdpkg-dev \t\tgcc \t\tlibbluetooth-dev \t\tlibbz2-dev \t\tlibc6-dev \t\tlibexpat1-dev \t\tlibffi-dev \t\tlibgdbm-dev \t\tliblzma-dev \t\tlibncursesw5-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tmake \t\ttk-dev \t\tuuid-dev \t\twget \t\txz-utils \t\tzlib1g-dev \t\t$(command -v gpg > /dev/null || echo 'gnupg dirmngr') \t\t&& wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \t&& wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys \"$GPG_KEY\" \t&& gpg --batch --verify python.tar.xz.asc python.tar.xz \t&& { command -v gpgconf > /dev/null && gpgconf --kill all || :; } \t&& rm -rf \"$GNUPGHOME\" python.tar.xz.asc \t&& mkdir -p /usr/src/python \t&& tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \t&& rm python.tar.xz \t\t&& cd /usr/src/python \t&& gnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \t&& ./configure \t\t--build=\"$gnuArch\" \t\t--enable-loadable-sqlite-extensions \t\t--enable-optimizations \t\t--enable-option-checking=fatal \t\t--enable-shared \t\t--with-system-expat \t\t--with-system-ffi \t\t--without-ensurepip \t&& make -j \"$(nproc)\" \t\tLDFLAGS=\"-Wl,--strip-all\" \t&& make install \t&& rm -rf /usr/src/python \t\t&& find /usr/local -depth \t\t\\( \t\t\t\\( -type d -a \\( -name test -o -name tests -o -name idle_test \\) \\) \t\t\t-o \\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' -o -name '*.a' \\) \\) \t\t\t-o \\( -type f -a -name 'wininst-*.exe' \\) \t\t\\) -exec rm -rf '{}' + \t\t&& ldconfig \t\t&& apt-mark auto '.*' > /dev/null \t&& apt-mark manual $savedAptMark \t&& find /usr/local -type f -executable -not \\( -name '*tkinter*' \\) -exec ldd '{}' ';' \t\t| awk '/=>/ { print $(NF-1) }' \t\t| sort -u \t\t| xargs -r dpkg-query --search \t\t| cut -d: -f1 \t\t| sort -u \t\t| xargs -r apt-mark manual \t&& apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false \t&& rm -rf /var/lib/apt/lists/* \t\t&& python3 --version"
                },
                {
                    "created": "2021-07-22T15:42:36.388460415Z",
                    "created_by": "/bin/sh -c cd /usr/local/bin \t&& ln -s idle3 idle \t&& ln -s pydoc3 pydoc \t&& ln -s python3 python \t&& ln -s python3-config python-config"
                },
                {
                    "created": "2021-07-26T19:34:51.4311778Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_PIP_VERSION=21.2.1",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-26T19:34:51.629840284Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_GET_PIP_URL=https://github.com/pypa/get-pip/raw/a1675ab6c2bd898ed82b1f58c486097f763c74a9/public/get-pip.py",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-26T19:34:51.84001414Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_GET_PIP_SHA256=6665659241292b2147b58922b9ffe11dda66b39d52d8a6f3aa310bc1d60ea6f7",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-26T19:35:03.102748698Z",
                    "created_by": "/bin/sh -c set -ex; \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends wget; \t\twget -O get-pip.py \"$PYTHON_GET_PIP_URL\"; \techo \"$PYTHON_GET_PIP_SHA256 *get-pip.py\" | sha256sum --check --strict -; \t\tapt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \trm -rf /var/lib/apt/lists/*; \t\tpython get-pip.py \t\t--disable-pip-version-check \t\t--no-cache-dir \t\t\"pip==$PYTHON_PIP_VERSION\" \t; \tpip --version; \t\tfind /usr/local -depth \t\t\\( \t\t\t\\( -type d -a \\( -name test -o -name tests -o -name idle_test \\) \\) \t\t\t-o \t\t\t\\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' \\) \\) \t\t\\) -exec rm -rf '{}' +; \trm -f get-pip.py"
                },
                {
                    "created": "2021-07-26T19:35:03.341322972Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"python3\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-31T09:53:12.000205996Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3a6cbd5fb6f23d2142e7d5891398444f11cb0155eeeec1dc80d82b96d9114ba5 in requirements.txt "
                },
                {
                    "created": "2021-07-31T09:53:43.939370621Z",
                    "created_by": "/bin/sh -c pip install -r requirements.txt"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:814bff7343242acfd20a2c841e041dd57c50f0cf844d4abd2329f78b992197f4",
                    "sha256:53264a515eacb9341fcbeb6580001dbc8962705c04cb6d95f5a6db12168f6ef1",
                    "sha256:122f23a262d8f449ca85e9777340a1d7389cf6ac6ece192dcae0018c17407300",
                    "sha256:3d87bad46e85858c70d5cae9f1d0e59bbcbfdbad53da0b3c1711ea0a75f3a2df",
                    "sha256:512501fe563c5db200df97e1bd700872c3c0f027a3f9db033691d51b679f0dbe",
                    "sha256:975525879afd975c00681d8d05c1bdc2087946897fd358de169fa641c8224214",
                    "sha256:2afeede272ad97d550bf703c39dd48c6d3b0d8df759747c76927133e4cbc4eae"
                ]
            }
        },
        "1.31.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8",
                    "GPG_KEY=E3FF2839C048B25C084DEBE9B26995E310250568",
                    "PYTHON_VERSION=3.8.11",
                    "PYTHON_PIP_VERSION=21.2.4",
                    "PYTHON_GET_PIP_URL=https://github.com/pypa/get-pip/raw/c20b0cfd643cd4a19246ccf204e2997af70f6b21/public/get-pip.py",
                    "PYTHON_GET_PIP_SHA256=fa6f3fb93cce234cd4e8dd2beb54a51ab9c247653b52855a48dd44e6b21ff28b"
                ],
                "Cmd": [
                    "python3"
                ],
                "Image": "sha256:df9db781dbeac8324f158de405b2668f5ee6c133c2f791fc02ac8f71af85d1a2",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "29f17b0a1c7d5cb473434c5abc127ca1a63a78151b138df85eb9a1e6a6e07121",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8",
                    "GPG_KEY=E3FF2839C048B25C084DEBE9B26995E310250568",
                    "PYTHON_VERSION=3.8.11",
                    "PYTHON_PIP_VERSION=21.2.4",
                    "PYTHON_GET_PIP_URL=https://github.com/pypa/get-pip/raw/c20b0cfd643cd4a19246ccf204e2997af70f6b21/public/get-pip.py",
                    "PYTHON_GET_PIP_SHA256=fa6f3fb93cce234cd4e8dd2beb54a51ab9c247653b52855a48dd44e6b21ff28b"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "pip install -r requirements.txt"
                ],
                "Image": "sha256:df9db781dbeac8324f158de405b2668f5ee6c133c2f791fc02ac8f71af85d1a2",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2021-08-22T17:52:03.185655866Z",
            "docker_version": "20.10.7+azure",
            "history": [
                {
                    "created": "2021-08-17T01:23:40.730762031Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5e8343ab9a73edc27c2889634896e792ab289b85c206de0fc31183fdc0a32ac7 in / "
                },
                {
                    "created": "2021-08-17T01:23:41.150317881Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-17T01:54:38.615387344Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-17T01:54:38.77346809Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-17T02:48:07.0324506Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tnetbase \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-08-17T02:48:07.239045299Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GPG_KEY=E3FF2839C048B25C084DEBE9B26995E310250568",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-17T02:48:07.434337089Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_VERSION=3.8.11",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-17T02:56:54.413945563Z",
                    "created_by": "/bin/sh -c set -ex \t\t&& savedAptMark=\"$(apt-mark showmanual)\" \t&& apt-get update && apt-get install -y --no-install-recommends \t\tdpkg-dev \t\tgcc \t\tlibbluetooth-dev \t\tlibbz2-dev \t\tlibc6-dev \t\tlibexpat1-dev \t\tlibffi-dev \t\tlibgdbm-dev \t\tliblzma-dev \t\tlibncursesw5-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tmake \t\ttk-dev \t\tuuid-dev \t\twget \t\txz-utils \t\tzlib1g-dev \t\t$(command -v gpg > /dev/null || echo 'gnupg dirmngr') \t\t&& wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \t&& wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys \"$GPG_KEY\" \t&& gpg --batch --verify python.tar.xz.asc python.tar.xz \t&& { command -v gpgconf > /dev/null && gpgconf --kill all || :; } \t&& rm -rf \"$GNUPGHOME\" python.tar.xz.asc \t&& mkdir -p /usr/src/python \t&& tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \t&& rm python.tar.xz \t\t&& cd /usr/src/python \t&& gnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \t&& ./configure \t\t--build=\"$gnuArch\" \t\t--enable-loadable-sqlite-extensions \t\t--enable-optimizations \t\t--enable-option-checking=fatal \t\t--enable-shared \t\t--with-system-expat \t\t--with-system-ffi \t\t--without-ensurepip \t&& make -j \"$(nproc)\" \t\tLDFLAGS=\"-Wl,--strip-all\" \t&& make install \t&& rm -rf /usr/src/python \t\t&& find /usr/local -depth \t\t\\( \t\t\t\\( -type d -a \\( -name test -o -name tests -o -name idle_test \\) \\) \t\t\t-o \\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' -o -name '*.a' \\) \\) \t\t\t-o \\( -type f -a -name 'wininst-*.exe' \\) \t\t\\) -exec rm -rf '{}' + \t\t&& ldconfig \t\t&& apt-mark auto '.*' > /dev/null \t&& apt-mark manual $savedAptMark \t&& find /usr/local -type f -executable -not \\( -name '*tkinter*' \\) -exec ldd '{}' ';' \t\t| awk '/=>/ { print $(NF-1) }' \t\t| sort -u \t\t| xargs -r dpkg-query --search \t\t| cut -d: -f1 \t\t| sort -u \t\t| xargs -r apt-mark manual \t&& apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false \t&& rm -rf /var/lib/apt/lists/* \t\t&& python3 --version"
                },
                {
                    "created": "2021-08-17T02:56:55.270701956Z",
                    "created_by": "/bin/sh -c cd /usr/local/bin \t&& ln -s idle3 idle \t&& ln -s pydoc3 pydoc \t&& ln -s python3 python \t&& ln -s python3-config python-config"
                },
                {
                    "created": "2021-08-17T02:56:55.458360278Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_PIP_VERSION=21.2.4",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-17T02:56:55.625405621Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_GET_PIP_URL=https://github.com/pypa/get-pip/raw/c20b0cfd643cd4a19246ccf204e2997af70f6b21/public/get-pip.py",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-17T02:56:55.83474192Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_GET_PIP_SHA256=fa6f3fb93cce234cd4e8dd2beb54a51ab9c247653b52855a48dd44e6b21ff28b",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-17T02:57:07.138470836Z",
                    "created_by": "/bin/sh -c set -ex; \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends wget; \t\twget -O get-pip.py \"$PYTHON_GET_PIP_URL\"; \techo \"$PYTHON_GET_PIP_SHA256 *get-pip.py\" | sha256sum --check --strict -; \t\tapt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \trm -rf /var/lib/apt/lists/*; \t\tpython get-pip.py \t\t--disable-pip-version-check \t\t--no-cache-dir \t\t\"pip==$PYTHON_PIP_VERSION\" \t; \tpip --version; \t\tfind /usr/local -depth \t\t\\( \t\t\t\\( -type d -a \\( -name test -o -name tests -o -name idle_test \\) \\) \t\t\t-o \t\t\t\\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' \\) \\) \t\t\\) -exec rm -rf '{}' +; \trm -f get-pip.py"
                },
                {
                    "created": "2021-08-17T02:57:07.370920531Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"python3\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-22T17:51:21.000222121Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:46d6c259726e18865ec13e2221a6bcc7e730602d7571219eb4fbad6401174293 in requirements.txt "
                },
                {
                    "created": "2021-08-22T17:52:03.185655866Z",
                    "created_by": "/bin/sh -c pip install -r requirements.txt"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:300b011056d9e8d428afaedc3e4f5f1925db833c60bae3dd777fb71fea1ef3ba",
                    "sha256:3e29640b2b619f72cf7d3f1c00518a4a14fba53bd27cc63023e13c289145b256",
                    "sha256:e9e9b9eb1aac2d4fa54238c953deb9960f7d703e75336092672be02f36107368",
                    "sha256:62e0a3d334f53141331db22ea77c0ecbbba2e42ec010b4a2e864ef6828d67ca1",
                    "sha256:9670509360da85f6a75f10bf3817494fb7e9f7050898fc6d10c0079ffb4350b5",
                    "sha256:bf8c9a40e586602e095a95264bd5ccb84a1163b5411525651c169862da74e6c6",
                    "sha256:e4cef84b4401c7fa6f5bccfd0c9ff076827cadcd70b9cfaf41b04e32d4ad1ed7"
                ]
            }
        },
        "1.32.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8",
                    "GPG_KEY=E3FF2839C048B25C084DEBE9B26995E310250568",
                    "PYTHON_VERSION=3.8.11",
                    "PYTHON_PIP_VERSION=21.2.4",
                    "PYTHON_GET_PIP_URL=https://github.com/pypa/get-pip/raw/c20b0cfd643cd4a19246ccf204e2997af70f6b21/public/get-pip.py",
                    "PYTHON_GET_PIP_SHA256=fa6f3fb93cce234cd4e8dd2beb54a51ab9c247653b52855a48dd44e6b21ff28b"
                ],
                "Cmd": [
                    "python3"
                ],
                "Image": "sha256:04c544512c2e5cdb058405726f4b29592e64dbf881d2f6b1613583544a05e804",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "6533b5dba0292938165351ee971ddeb18a471dd05308026b869983c693c2bcc3",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8",
                    "GPG_KEY=E3FF2839C048B25C084DEBE9B26995E310250568",
                    "PYTHON_VERSION=3.8.11",
                    "PYTHON_PIP_VERSION=21.2.4",
                    "PYTHON_GET_PIP_URL=https://github.com/pypa/get-pip/raw/c20b0cfd643cd4a19246ccf204e2997af70f6b21/public/get-pip.py",
                    "PYTHON_GET_PIP_SHA256=fa6f3fb93cce234cd4e8dd2beb54a51ab9c247653b52855a48dd44e6b21ff28b"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "pip install -r requirements.txt"
                ],
                "Image": "sha256:04c544512c2e5cdb058405726f4b29592e64dbf881d2f6b1613583544a05e804",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2021-08-31T08:11:28.532247253Z",
            "docker_version": "20.10.7+azure",
            "history": [
                {
                    "created": "2021-08-17T01:23:40.730762031Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5e8343ab9a73edc27c2889634896e792ab289b85c206de0fc31183fdc0a32ac7 in / "
                },
                {
                    "created": "2021-08-17T01:23:41.150317881Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-17T01:54:38.615387344Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-17T01:54:38.77346809Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-17T02:48:07.0324506Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tnetbase \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-08-17T02:48:07.239045299Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GPG_KEY=E3FF2839C048B25C084DEBE9B26995E310250568",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-17T02:48:07.434337089Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_VERSION=3.8.11",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-17T02:56:54.413945563Z",
                    "created_by": "/bin/sh -c set -ex \t\t&& savedAptMark=\"$(apt-mark showmanual)\" \t&& apt-get update && apt-get install -y --no-install-recommends \t\tdpkg-dev \t\tgcc \t\tlibbluetooth-dev \t\tlibbz2-dev \t\tlibc6-dev \t\tlibexpat1-dev \t\tlibffi-dev \t\tlibgdbm-dev \t\tliblzma-dev \t\tlibncursesw5-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tmake \t\ttk-dev \t\tuuid-dev \t\twget \t\txz-utils \t\tzlib1g-dev \t\t$(command -v gpg > /dev/null || echo 'gnupg dirmngr') \t\t&& wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \t&& wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys \"$GPG_KEY\" \t&& gpg --batch --verify python.tar.xz.asc python.tar.xz \t&& { command -v gpgconf > /dev/null && gpgconf --kill all || :; } \t&& rm -rf \"$GNUPGHOME\" python.tar.xz.asc \t&& mkdir -p /usr/src/python \t&& tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \t&& rm python.tar.xz \t\t&& cd /usr/src/python \t&& gnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \t&& ./configure \t\t--build=\"$gnuArch\" \t\t--enable-loadable-sqlite-extensions \t\t--enable-optimizations \t\t--enable-option-checking=fatal \t\t--enable-shared \t\t--with-system-expat \t\t--with-system-ffi \t\t--without-ensurepip \t&& make -j \"$(nproc)\" \t\tLDFLAGS=\"-Wl,--strip-all\" \t&& make install \t&& rm -rf /usr/src/python \t\t&& find /usr/local -depth \t\t\\( \t\t\t\\( -type d -a \\( -name test -o -name tests -o -name idle_test \\) \\) \t\t\t-o \\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' -o -name '*.a' \\) \\) \t\t\t-o \\( -type f -a -name 'wininst-*.exe' \\) \t\t\\) -exec rm -rf '{}' + \t\t&& ldconfig \t\t&& apt-mark auto '.*' > /dev/null \t&& apt-mark manual $savedAptMark \t&& find /usr/local -type f -executable -not \\( -name '*tkinter*' \\) -exec ldd '{}' ';' \t\t| awk '/=>/ { print $(NF-1) }' \t\t| sort -u \t\t| xargs -r dpkg-query --search \t\t| cut -d: -f1 \t\t| sort -u \t\t| xargs -r apt-mark manual \t&& apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false \t&& rm -rf /var/lib/apt/lists/* \t\t&& python3 --version"
                },
                {
                    "created": "2021-08-17T02:56:55.270701956Z",
                    "created_by": "/bin/sh -c cd /usr/local/bin \t&& ln -s idle3 idle \t&& ln -s pydoc3 pydoc \t&& ln -s python3 python \t&& ln -s python3-config python-config"
                },
                {
                    "created": "2021-08-17T02:56:55.458360278Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_PIP_VERSION=21.2.4",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-17T02:56:55.625405621Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_GET_PIP_URL=https://github.com/pypa/get-pip/raw/c20b0cfd643cd4a19246ccf204e2997af70f6b21/public/get-pip.py",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-17T02:56:55.83474192Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_GET_PIP_SHA256=fa6f3fb93cce234cd4e8dd2beb54a51ab9c247653b52855a48dd44e6b21ff28b",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-17T02:57:07.138470836Z",
                    "created_by": "/bin/sh -c set -ex; \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends wget; \t\twget -O get-pip.py \"$PYTHON_GET_PIP_URL\"; \techo \"$PYTHON_GET_PIP_SHA256 *get-pip.py\" | sha256sum --check --strict -; \t\tapt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \trm -rf /var/lib/apt/lists/*; \t\tpython get-pip.py \t\t--disable-pip-version-check \t\t--no-cache-dir \t\t\"pip==$PYTHON_PIP_VERSION\" \t; \tpip --version; \t\tfind /usr/local -depth \t\t\\( \t\t\t\\( -type d -a \\( -name test -o -name tests -o -name idle_test \\) \\) \t\t\t-o \t\t\t\\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' \\) \\) \t\t\\) -exec rm -rf '{}' +; \trm -f get-pip.py"
                },
                {
                    "created": "2021-08-17T02:57:07.370920531Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"python3\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-31T08:10:54.07591737Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:abcda5ea908921122a7e7e11cc93dd9890e5de88f359006865f5ba59e3634028 in requirements.txt "
                },
                {
                    "created": "2021-08-31T08:11:28.532247253Z",
                    "created_by": "/bin/sh -c pip install -r requirements.txt"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:300b011056d9e8d428afaedc3e4f5f1925db833c60bae3dd777fb71fea1ef3ba",
                    "sha256:3e29640b2b619f72cf7d3f1c00518a4a14fba53bd27cc63023e13c289145b256",
                    "sha256:e9e9b9eb1aac2d4fa54238c953deb9960f7d703e75336092672be02f36107368",
                    "sha256:62e0a3d334f53141331db22ea77c0ecbbba2e42ec010b4a2e864ef6828d67ca1",
                    "sha256:9670509360da85f6a75f10bf3817494fb7e9f7050898fc6d10c0079ffb4350b5",
                    "sha256:1e700d33998e0352e76452f25408981e608b7b1b94a91d0790b4fda02c6693e4",
                    "sha256:3f42f73e4d9fcc4696b2c40655a211f02bba291e8e326fabc34fe4b4e19ffffc"
                ]
            }
        },
        "1.33.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8",
                    "GPG_KEY=E3FF2839C048B25C084DEBE9B26995E310250568",
                    "PYTHON_VERSION=3.8.11",
                    "PYTHON_PIP_VERSION=21.2.4",
                    "PYTHON_GET_PIP_URL=https://github.com/pypa/get-pip/raw/c20b0cfd643cd4a19246ccf204e2997af70f6b21/public/get-pip.py",
                    "PYTHON_GET_PIP_SHA256=fa6f3fb93cce234cd4e8dd2beb54a51ab9c247653b52855a48dd44e6b21ff28b"
                ],
                "Cmd": [
                    "python3"
                ],
                "Image": "sha256:0ef71cbf4794a243e78ec929432d769a3f60bde9d6210d0e116716027ef6877f",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "24f549610396bad9ef87b4dae70438cf0a5ca82bebe5a679af7685c5498c195f",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8",
                    "GPG_KEY=E3FF2839C048B25C084DEBE9B26995E310250568",
                    "PYTHON_VERSION=3.8.11",
                    "PYTHON_PIP_VERSION=21.2.4",
                    "PYTHON_GET_PIP_URL=https://github.com/pypa/get-pip/raw/c20b0cfd643cd4a19246ccf204e2997af70f6b21/public/get-pip.py",
                    "PYTHON_GET_PIP_SHA256=fa6f3fb93cce234cd4e8dd2beb54a51ab9c247653b52855a48dd44e6b21ff28b"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "pip install -r requirements.txt"
                ],
                "Image": "sha256:0ef71cbf4794a243e78ec929432d769a3f60bde9d6210d0e116716027ef6877f",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2021-08-31T08:27:03.465869355Z",
            "docker_version": "20.10.7+azure",
            "history": [
                {
                    "created": "2021-08-17T01:23:40.730762031Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5e8343ab9a73edc27c2889634896e792ab289b85c206de0fc31183fdc0a32ac7 in / "
                },
                {
                    "created": "2021-08-17T01:23:41.150317881Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-17T01:54:38.615387344Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-17T01:54:38.77346809Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-17T02:48:07.0324506Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tnetbase \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-08-17T02:48:07.239045299Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GPG_KEY=E3FF2839C048B25C084DEBE9B26995E310250568",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-17T02:48:07.434337089Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_VERSION=3.8.11",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-17T02:56:54.413945563Z",
                    "created_by": "/bin/sh -c set -ex \t\t&& savedAptMark=\"$(apt-mark showmanual)\" \t&& apt-get update && apt-get install -y --no-install-recommends \t\tdpkg-dev \t\tgcc \t\tlibbluetooth-dev \t\tlibbz2-dev \t\tlibc6-dev \t\tlibexpat1-dev \t\tlibffi-dev \t\tlibgdbm-dev \t\tliblzma-dev \t\tlibncursesw5-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tmake \t\ttk-dev \t\tuuid-dev \t\twget \t\txz-utils \t\tzlib1g-dev \t\t$(command -v gpg > /dev/null || echo 'gnupg dirmngr') \t\t&& wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \t&& wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys \"$GPG_KEY\" \t&& gpg --batch --verify python.tar.xz.asc python.tar.xz \t&& { command -v gpgconf > /dev/null && gpgconf --kill all || :; } \t&& rm -rf \"$GNUPGHOME\" python.tar.xz.asc \t&& mkdir -p /usr/src/python \t&& tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \t&& rm python.tar.xz \t\t&& cd /usr/src/python \t&& gnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \t&& ./configure \t\t--build=\"$gnuArch\" \t\t--enable-loadable-sqlite-extensions \t\t--enable-optimizations \t\t--enable-option-checking=fatal \t\t--enable-shared \t\t--with-system-expat \t\t--with-system-ffi \t\t--without-ensurepip \t&& make -j \"$(nproc)\" \t\tLDFLAGS=\"-Wl,--strip-all\" \t&& make install \t&& rm -rf /usr/src/python \t\t&& find /usr/local -depth \t\t\\( \t\t\t\\( -type d -a \\( -name test -o -name tests -o -name idle_test \\) \\) \t\t\t-o \\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' -o -name '*.a' \\) \\) \t\t\t-o \\( -type f -a -name 'wininst-*.exe' \\) \t\t\\) -exec rm -rf '{}' + \t\t&& ldconfig \t\t&& apt-mark auto '.*' > /dev/null \t&& apt-mark manual $savedAptMark \t&& find /usr/local -type f -executable -not \\( -name '*tkinter*' \\) -exec ldd '{}' ';' \t\t| awk '/=>/ { print $(NF-1) }' \t\t| sort -u \t\t| xargs -r dpkg-query --search \t\t| cut -d: -f1 \t\t| sort -u \t\t| xargs -r apt-mark manual \t&& apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false \t&& rm -rf /var/lib/apt/lists/* \t\t&& python3 --version"
                },
                {
                    "created": "2021-08-17T02:56:55.270701956Z",
                    "created_by": "/bin/sh -c cd /usr/local/bin \t&& ln -s idle3 idle \t&& ln -s pydoc3 pydoc \t&& ln -s python3 python \t&& ln -s python3-config python-config"
                },
                {
                    "created": "2021-08-17T02:56:55.458360278Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_PIP_VERSION=21.2.4",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-17T02:56:55.625405621Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_GET_PIP_URL=https://github.com/pypa/get-pip/raw/c20b0cfd643cd4a19246ccf204e2997af70f6b21/public/get-pip.py",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-17T02:56:55.83474192Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_GET_PIP_SHA256=fa6f3fb93cce234cd4e8dd2beb54a51ab9c247653b52855a48dd44e6b21ff28b",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-17T02:57:07.138470836Z",
                    "created_by": "/bin/sh -c set -ex; \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends wget; \t\twget -O get-pip.py \"$PYTHON_GET_PIP_URL\"; \techo \"$PYTHON_GET_PIP_SHA256 *get-pip.py\" | sha256sum --check --strict -; \t\tapt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \trm -rf /var/lib/apt/lists/*; \t\tpython get-pip.py \t\t--disable-pip-version-check \t\t--no-cache-dir \t\t\"pip==$PYTHON_PIP_VERSION\" \t; \tpip --version; \t\tfind /usr/local -depth \t\t\\( \t\t\t\\( -type d -a \\( -name test -o -name tests -o -name idle_test \\) \\) \t\t\t-o \t\t\t\\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' \\) \\) \t\t\\) -exec rm -rf '{}' +; \trm -f get-pip.py"
                },
                {
                    "created": "2021-08-17T02:57:07.370920531Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"python3\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-31T08:26:27.190859806Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3fa07715fc63fbaae85872e9ea7fabdcb0a21acb7f17ec94b1903af832fecd4e in requirements.txt "
                },
                {
                    "created": "2021-08-31T08:27:03.465869355Z",
                    "created_by": "/bin/sh -c pip install -r requirements.txt"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:300b011056d9e8d428afaedc3e4f5f1925db833c60bae3dd777fb71fea1ef3ba",
                    "sha256:3e29640b2b619f72cf7d3f1c00518a4a14fba53bd27cc63023e13c289145b256",
                    "sha256:e9e9b9eb1aac2d4fa54238c953deb9960f7d703e75336092672be02f36107368",
                    "sha256:62e0a3d334f53141331db22ea77c0ecbbba2e42ec010b4a2e864ef6828d67ca1",
                    "sha256:9670509360da85f6a75f10bf3817494fb7e9f7050898fc6d10c0079ffb4350b5",
                    "sha256:b26669c4b5e228897bfa91875bdd4699ad43a7923a9cb9cdff319c10877ef5ae",
                    "sha256:6007e8239d4bd07fae113ff0f6a2daa89b69ba435c8c32aa70e00aca0d7791b5"
                ]
            }
        },
        "master": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8",
                    "GPG_KEY=E3FF2839C048B25C084DEBE9B26995E310250568",
                    "PYTHON_VERSION=3.8.12",
                    "PYTHON_PIP_VERSION=21.2.4",
                    "PYTHON_SETUPTOOLS_VERSION=57.5.0",
                    "PYTHON_GET_PIP_URL=https://github.com/pypa/get-pip/raw/c20b0cfd643cd4a19246ccf204e2997af70f6b21/public/get-pip.py",
                    "PYTHON_GET_PIP_SHA256=fa6f3fb93cce234cd4e8dd2beb54a51ab9c247653b52855a48dd44e6b21ff28b"
                ],
                "Cmd": [
                    "python3"
                ],
                "Image": "sha256:85bcf541c117d8da5c40e0593075d80148935ae8d64971c7db4eb9a865318413",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "c07eb7cc152c0f1a44cc6f6fdac797506e7011d6232dccd2dc3861e250094e36",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8",
                    "GPG_KEY=E3FF2839C048B25C084DEBE9B26995E310250568",
                    "PYTHON_VERSION=3.8.12",
                    "PYTHON_PIP_VERSION=21.2.4",
                    "PYTHON_SETUPTOOLS_VERSION=57.5.0",
                    "PYTHON_GET_PIP_URL=https://github.com/pypa/get-pip/raw/c20b0cfd643cd4a19246ccf204e2997af70f6b21/public/get-pip.py",
                    "PYTHON_GET_PIP_SHA256=fa6f3fb93cce234cd4e8dd2beb54a51ab9c247653b52855a48dd44e6b21ff28b"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "pip install -r requirements.txt"
                ],
                "Image": "sha256:85bcf541c117d8da5c40e0593075d80148935ae8d64971c7db4eb9a865318413",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2021-09-20T18:37:52.134749662Z",
            "docker_version": "20.10.8+azure",
            "history": [
                {
                    "created": "2021-09-03T01:21:21.509121647Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:19d7ba0fceddd7fc78b5fb96cf8110e5d10e0e5d2554030dfe640d161379cb79 in / "
                },
                {
                    "created": "2021-09-03T01:21:21.94334346Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-03T01:34:23.01264253Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-03T01:34:23.250044789Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-03T02:16:05.192897155Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tnetbase \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-09-03T02:16:05.483451352Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GPG_KEY=E3FF2839C048B25C084DEBE9B26995E310250568",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-03T02:16:05.729394277Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_VERSION=3.8.12",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-03T02:25:49.353584206Z",
                    "created_by": "/bin/sh -c set -ex \t\t&& savedAptMark=\"$(apt-mark showmanual)\" \t&& apt-get update && apt-get install -y --no-install-recommends \t\tdpkg-dev \t\tgcc \t\tlibbluetooth-dev \t\tlibbz2-dev \t\tlibc6-dev \t\tlibexpat1-dev \t\tlibffi-dev \t\tlibgdbm-dev \t\tliblzma-dev \t\tlibncursesw5-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tmake \t\ttk-dev \t\tuuid-dev \t\twget \t\txz-utils \t\tzlib1g-dev \t\t$(command -v gpg > /dev/null || echo 'gnupg dirmngr') \t\t&& wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \t&& wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys \"$GPG_KEY\" \t&& gpg --batch --verify python.tar.xz.asc python.tar.xz \t&& { command -v gpgconf > /dev/null && gpgconf --kill all || :; } \t&& rm -rf \"$GNUPGHOME\" python.tar.xz.asc \t&& mkdir -p /usr/src/python \t&& tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \t&& rm python.tar.xz \t\t&& cd /usr/src/python \t&& gnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \t&& ./configure \t\t--build=\"$gnuArch\" \t\t--enable-loadable-sqlite-extensions \t\t--enable-optimizations \t\t--enable-option-checking=fatal \t\t--enable-shared \t\t--with-system-expat \t\t--with-system-ffi \t\t--without-ensurepip \t&& make -j \"$(nproc)\" \t\tLDFLAGS=\"-Wl,--strip-all\" \t&& make install \t&& rm -rf /usr/src/python \t\t&& find /usr/local -depth \t\t\\( \t\t\t\\( -type d -a \\( -name test -o -name tests -o -name idle_test \\) \\) \t\t\t-o \\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' -o -name '*.a' \\) \\) \t\t\t-o \\( -type f -a -name 'wininst-*.exe' \\) \t\t\\) -exec rm -rf '{}' + \t\t&& ldconfig \t\t&& apt-mark auto '.*' > /dev/null \t&& apt-mark manual $savedAptMark \t&& find /usr/local -type f -executable -not \\( -name '*tkinter*' \\) -exec ldd '{}' ';' \t\t| awk '/=>/ { print $(NF-1) }' \t\t| sort -u \t\t| xargs -r dpkg-query --search \t\t| cut -d: -f1 \t\t| sort -u \t\t| xargs -r apt-mark manual \t&& apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false \t&& rm -rf /var/lib/apt/lists/* \t\t&& python3 --version"
                },
                {
                    "created": "2021-09-03T02:25:50.731841698Z",
                    "created_by": "/bin/sh -c cd /usr/local/bin \t&& ln -s idle3 idle \t&& ln -s pydoc3 pydoc \t&& ln -s python3 python \t&& ln -s python3-config python-config"
                },
                {
                    "created": "2021-09-03T02:25:50.949014442Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_PIP_VERSION=21.2.4",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-08T01:13:06.498586774Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_SETUPTOOLS_VERSION=57.5.0",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-08T01:13:06.695010731Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_GET_PIP_URL=https://github.com/pypa/get-pip/raw/c20b0cfd643cd4a19246ccf204e2997af70f6b21/public/get-pip.py",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-08T01:13:06.890418673Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_GET_PIP_SHA256=fa6f3fb93cce234cd4e8dd2beb54a51ab9c247653b52855a48dd44e6b21ff28b",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-08T01:13:17.879925277Z",
                    "created_by": "/bin/sh -c set -ex; \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends wget; \t\twget -O get-pip.py \"$PYTHON_GET_PIP_URL\"; \techo \"$PYTHON_GET_PIP_SHA256 *get-pip.py\" | sha256sum --check --strict -; \t\tapt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \trm -rf /var/lib/apt/lists/*; \t\tpython get-pip.py \t\t--disable-pip-version-check \t\t--no-cache-dir \t\t\"pip==$PYTHON_PIP_VERSION\" \t\t\"setuptools==$PYTHON_SETUPTOOLS_VERSION\" \t; \tpip --version; \t\tfind /usr/local -depth \t\t\\( \t\t\t\\( -type d -a \\( -name test -o -name tests -o -name idle_test \\) \\) \t\t\t-o \t\t\t\\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' \\) \\) \t\t\\) -exec rm -rf '{}' +; \trm -f get-pip.py"
                },
                {
                    "created": "2021-09-08T01:13:18.15836629Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"python3\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-20T18:37:22.000926685Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:499bdadc583708ac21bf42bf3751c9e10c9255c94084af6ad6fda1bca6acb0fa in requirements.txt "
                },
                {
                    "created": "2021-09-20T18:37:52.134749662Z",
                    "created_by": "/bin/sh -c pip install -r requirements.txt"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ba5a5fe4330168081f2a7e46f72c7552456d4d604ad27feadbe76ec86598587e",
                    "sha256:2f9c2b8e82bd47167d6cdbd9e445a0674641a086c01d6d8682608886a59b61d3",
                    "sha256:74d6903a940b7b460a988b747c681425b055f0b21ed0b788d39e579b2b1eb6bb",
                    "sha256:5aa75f4e55e766d1bee24b45cf22eb4423b8c00da7718ef91028474c766f61f6",
                    "sha256:d82f4c466b47788cc350ce7eae33a92cf880bf71433b47acf5dc029616997ec4",
                    "sha256:8d984ea6b42e93f50d03185a5150039bfb890e1997877aaefa0e5e7007addb01",
                    "sha256:0bb5c04d559a2d2973334955869d2c72a943dc28d82295aa856b21677fd7dc3f"
                ]
            }
        },
        "1.34.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8",
                    "GPG_KEY=E3FF2839C048B25C084DEBE9B26995E310250568",
                    "PYTHON_VERSION=3.8.12",
                    "PYTHON_PIP_VERSION=21.2.4",
                    "PYTHON_SETUPTOOLS_VERSION=57.5.0",
                    "PYTHON_GET_PIP_URL=https://github.com/pypa/get-pip/raw/c20b0cfd643cd4a19246ccf204e2997af70f6b21/public/get-pip.py",
                    "PYTHON_GET_PIP_SHA256=fa6f3fb93cce234cd4e8dd2beb54a51ab9c247653b52855a48dd44e6b21ff28b"
                ],
                "Cmd": [
                    "python3"
                ],
                "Image": "sha256:5df7c1658c3828089e7a58b1720023f22033700575b2ccf10716803aa4b4cb02",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "7fd178046ad661569a127daedf6011dcc8c55c037e0e51789b9b86cad8d3f245",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8",
                    "GPG_KEY=E3FF2839C048B25C084DEBE9B26995E310250568",
                    "PYTHON_VERSION=3.8.12",
                    "PYTHON_PIP_VERSION=21.2.4",
                    "PYTHON_SETUPTOOLS_VERSION=57.5.0",
                    "PYTHON_GET_PIP_URL=https://github.com/pypa/get-pip/raw/c20b0cfd643cd4a19246ccf204e2997af70f6b21/public/get-pip.py",
                    "PYTHON_GET_PIP_SHA256=fa6f3fb93cce234cd4e8dd2beb54a51ab9c247653b52855a48dd44e6b21ff28b"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "pip install -r requirements.txt"
                ],
                "Image": "sha256:5df7c1658c3828089e7a58b1720023f22033700575b2ccf10716803aa4b4cb02",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2021-09-21T12:54:21.140134514Z",
            "docker_version": "20.10.8+azure",
            "history": [
                {
                    "created": "2021-09-03T01:21:21.509121647Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:19d7ba0fceddd7fc78b5fb96cf8110e5d10e0e5d2554030dfe640d161379cb79 in / "
                },
                {
                    "created": "2021-09-03T01:21:21.94334346Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-03T01:34:23.01264253Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-03T01:34:23.250044789Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-03T02:16:05.192897155Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tnetbase \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-09-03T02:16:05.483451352Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GPG_KEY=E3FF2839C048B25C084DEBE9B26995E310250568",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-03T02:16:05.729394277Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_VERSION=3.8.12",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-03T02:25:49.353584206Z",
                    "created_by": "/bin/sh -c set -ex \t\t&& savedAptMark=\"$(apt-mark showmanual)\" \t&& apt-get update && apt-get install -y --no-install-recommends \t\tdpkg-dev \t\tgcc \t\tlibbluetooth-dev \t\tlibbz2-dev \t\tlibc6-dev \t\tlibexpat1-dev \t\tlibffi-dev \t\tlibgdbm-dev \t\tliblzma-dev \t\tlibncursesw5-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tmake \t\ttk-dev \t\tuuid-dev \t\twget \t\txz-utils \t\tzlib1g-dev \t\t$(command -v gpg > /dev/null || echo 'gnupg dirmngr') \t\t&& wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \t&& wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys \"$GPG_KEY\" \t&& gpg --batch --verify python.tar.xz.asc python.tar.xz \t&& { command -v gpgconf > /dev/null && gpgconf --kill all || :; } \t&& rm -rf \"$GNUPGHOME\" python.tar.xz.asc \t&& mkdir -p /usr/src/python \t&& tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \t&& rm python.tar.xz \t\t&& cd /usr/src/python \t&& gnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \t&& ./configure \t\t--build=\"$gnuArch\" \t\t--enable-loadable-sqlite-extensions \t\t--enable-optimizations \t\t--enable-option-checking=fatal \t\t--enable-shared \t\t--with-system-expat \t\t--with-system-ffi \t\t--without-ensurepip \t&& make -j \"$(nproc)\" \t\tLDFLAGS=\"-Wl,--strip-all\" \t&& make install \t&& rm -rf /usr/src/python \t\t&& find /usr/local -depth \t\t\\( \t\t\t\\( -type d -a \\( -name test -o -name tests -o -name idle_test \\) \\) \t\t\t-o \\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' -o -name '*.a' \\) \\) \t\t\t-o \\( -type f -a -name 'wininst-*.exe' \\) \t\t\\) -exec rm -rf '{}' + \t\t&& ldconfig \t\t&& apt-mark auto '.*' > /dev/null \t&& apt-mark manual $savedAptMark \t&& find /usr/local -type f -executable -not \\( -name '*tkinter*' \\) -exec ldd '{}' ';' \t\t| awk '/=>/ { print $(NF-1) }' \t\t| sort -u \t\t| xargs -r dpkg-query --search \t\t| cut -d: -f1 \t\t| sort -u \t\t| xargs -r apt-mark manual \t&& apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false \t&& rm -rf /var/lib/apt/lists/* \t\t&& python3 --version"
                },
                {
                    "created": "2021-09-03T02:25:50.731841698Z",
                    "created_by": "/bin/sh -c cd /usr/local/bin \t&& ln -s idle3 idle \t&& ln -s pydoc3 pydoc \t&& ln -s python3 python \t&& ln -s python3-config python-config"
                },
                {
                    "created": "2021-09-03T02:25:50.949014442Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_PIP_VERSION=21.2.4",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-08T01:13:06.498586774Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_SETUPTOOLS_VERSION=57.5.0",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-08T01:13:06.695010731Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_GET_PIP_URL=https://github.com/pypa/get-pip/raw/c20b0cfd643cd4a19246ccf204e2997af70f6b21/public/get-pip.py",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-08T01:13:06.890418673Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHON_GET_PIP_SHA256=fa6f3fb93cce234cd4e8dd2beb54a51ab9c247653b52855a48dd44e6b21ff28b",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-08T01:13:17.879925277Z",
                    "created_by": "/bin/sh -c set -ex; \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends wget; \t\twget -O get-pip.py \"$PYTHON_GET_PIP_URL\"; \techo \"$PYTHON_GET_PIP_SHA256 *get-pip.py\" | sha256sum --check --strict -; \t\tapt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \trm -rf /var/lib/apt/lists/*; \t\tpython get-pip.py \t\t--disable-pip-version-check \t\t--no-cache-dir \t\t\"pip==$PYTHON_PIP_VERSION\" \t\t\"setuptools==$PYTHON_SETUPTOOLS_VERSION\" \t; \tpip --version; \t\tfind /usr/local -depth \t\t\\( \t\t\t\\( -type d -a \\( -name test -o -name tests -o -name idle_test \\) \\) \t\t\t-o \t\t\t\\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' \\) \\) \t\t\\) -exec rm -rf '{}' +; \trm -f get-pip.py"
                },
                {
                    "created": "2021-09-08T01:13:18.15836629Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"python3\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-21T12:53:44.000794208Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:499bdadc583708ac21bf42bf3751c9e10c9255c94084af6ad6fda1bca6acb0fa in requirements.txt "
                },
                {
                    "created": "2021-09-21T12:54:21.140134514Z",
                    "created_by": "/bin/sh -c pip install -r requirements.txt"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ba5a5fe4330168081f2a7e46f72c7552456d4d604ad27feadbe76ec86598587e",
                    "sha256:2f9c2b8e82bd47167d6cdbd9e445a0674641a086c01d6d8682608886a59b61d3",
                    "sha256:74d6903a940b7b460a988b747c681425b055f0b21ed0b788d39e579b2b1eb6bb",
                    "sha256:5aa75f4e55e766d1bee24b45cf22eb4423b8c00da7718ef91028474c766f61f6",
                    "sha256:d82f4c466b47788cc350ce7eae33a92cf880bf71433b47acf5dc029616997ec4",
                    "sha256:a8662921a54ba79991bf85048d10cff926517b90e6bec3696a92b641c38eed0f",
                    "sha256:e01de190d5a6fae3fdfb558d965593ca2640a975d8df38ddd53cce67d55176be"
                ]
            }
        }
    }
}