{
    "manifests": {
        "1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.oci.image.index.v1+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:ffa2dc4682898a620500bf7a04d7817016fc2fff57215b73265ec5f7096346d5",
                    "size": 2324,
                    "platform": {
                        "os": "linux",
                        "architecture": "arm64",
                        "variant": "v8"
                    },
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "arm64v8",
                        "org.opencontainers.image.base.digest": "sha256:6311d7a4ca52a611c4d8cb4232d1863abc4439069db57c44bcb2a2cbc736a3bf",
                        "org.opencontainers.image.base.name": "buildpack-deps:bookworm-scm",
                        "org.opencontainers.image.created": "2024-05-15T09:07:34Z",
                        "org.opencontainers.image.revision": "eb57429622f401af7c5afffeb3cd88022c9b9782",
                        "org.opencontainers.image.source": "https://github.com/docker-library/golang.git#eb57429622f401af7c5afffeb3cd88022c9b9782:1.22/bookworm",
                        "org.opencontainers.image.url": "https://hub.docker.com/_/golang",
                        "org.opencontainers.image.version": "1.22.3-bookworm"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:68a1f1bfccb7dd6860ecc2a24747b72bbf55b46368e410c3df2ea4190e4432fd",
                    "size": 842,
                    "platform": {
                        "os": "unknown",
                        "architecture": "unknown"
                    },
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "arm64v8",
                        "vnd.docker.reference.digest": "sha256:ffa2dc4682898a620500bf7a04d7817016fc2fff57215b73265ec5f7096346d5",
                        "vnd.docker.reference.type": "attestation-manifest"
                    }
                }
            ]
        },
        "1-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.oci.image.index.v1+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:638709d35305a16b38f575eabe97e2cab3229169cf555ebd5e98630f794f595c",
                    "size": 1923,
                    "platform": {
                        "os": "linux",
                        "architecture": "arm64",
                        "variant": "v8"
                    },
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "arm64v8",
                        "org.opencontainers.image.base.digest": "sha256:1c3b93ed450e26eac89b471d6d140e2f99488f489739b8b8ea5e8202dd086f82",
                        "org.opencontainers.image.base.name": "alpine:3.20",
                        "org.opencontainers.image.created": "2024-05-23T06:26:39Z",
                        "org.opencontainers.image.revision": "cf7a37dedf1fd5a25ca72075645368d1e3c30c4a",
                        "org.opencontainers.image.source": "https://github.com/docker-library/golang.git#cf7a37dedf1fd5a25ca72075645368d1e3c30c4a:1.22/alpine3.20",
                        "org.opencontainers.image.url": "https://hub.docker.com/_/golang",
                        "org.opencontainers.image.version": "1.22.3-alpine3.20"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:e6feff72e44b3a90aa8df43db17606970ae86ea4d8bca7381ca36eb677e743ff",
                    "size": 567,
                    "platform": {
                        "os": "unknown",
                        "architecture": "unknown"
                    },
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "arm64v8",
                        "vnd.docker.reference.digest": "sha256:638709d35305a16b38f575eabe97e2cab3229169cf555ebd5e98630f794f595c",
                        "vnd.docker.reference.type": "attestation-manifest"
                    }
                }
            ]
        },
        "1-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3833,
                "digest": "sha256:2fb6760492eff322d6cbbec3e744fc8d6d50bc8962e188b01fd42d28706379e8"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2717732,
                    "digest": "sha256:f07e4bcf42b862c240f4c00f2f7ed362d7d93ca15151de547beda593f3b669e5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302350,
                    "digest": "sha256:50d558a7b39742c40031affac43b0aca8782b1d6b200679c6e9cf4d4c47a5953"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:b423fbf207f04f0d10356619a60fc06a50f6df4151e41b196dc9074fe2f7b7f3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121222379,
                    "digest": "sha256:e837399587b4ddc75782b061804608d54469914cd5d1f75044a33202b1df9510"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:fdbd46518241595f131931130646f7f2cb76c5d592fdd892855461c135d9ca25"
                }
            ]
        },
        "1-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3833,
                "digest": "sha256:ad99091f0ad230aa8be3155e0ac5befb5e37af830ded823db8ab070a86dd8c51"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2724424,
                    "digest": "sha256:29e5d40040c18c692ed73df24511071725b74956ca1a61fe6056a651d86a13bd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301770,
                    "digest": "sha256:b9fc45ca0357821724e2824e141e2062d236dedad3d8654e0a390419ec9fe393"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:6332e392c90a454bd9f70a303cda942eb0e131e321e82cb70b9346ece4a52a64"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126519712,
                    "digest": "sha256:268cbc1ebfb54d2983ef7a405a501fe84b84e4c9f80eb406dc6c1ddf1d3746ac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:50db69c5444fe97e9dce98631acd04cdd96381958d0d45a0f0b90a5f29afbc34"
                }
            ]
        },
        "1-alpine3.12": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5162,
                "digest": "sha256:3284264a5a0b4cccaafed9ced4328695dc786b494e9dce54a2cd321a4f3ac06c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2710694,
                    "digest": "sha256:d2f70382dc9a1658ea3491d7ab4439c22087e426c00e3eb7daf825b83be4ba9c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281208,
                    "digest": "sha256:864dbd2f43b4498dc30286a7deb2a263517d940f6ff9dc051532ada7b2419ee5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:f1e3df69bdd8bbd1c34f88e95a607fcb537a5448691d602aa08ffb0f5f24d59c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 101090772,
                    "digest": "sha256:61c28b6f6b6770e7fecc7e709fa11909c1c809badae289b9b5c27cf2f164f0e4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:62e86e378b6b5739f5f90032a96d932a96159ae8be151f98b8f37826a6e574b1"
                }
            ]
        },
        "1-alpine3.13": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5382,
                "digest": "sha256:977a491588bfcb10e0c40a1536aef32756e637f43e02a41310c08ba52c367faf"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2719640,
                    "digest": "sha256:06decbbdea2401b400024fb2feadd51ee381cd4b7b78a30306c3828ec9f6c760"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281808,
                    "digest": "sha256:893838c2c5389cf45767c179640efeab2f6eff5abdcabc12769740c9683486f3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:76547ec32faf291bc82255c80b4e60e8921b42090c5a5529a93d2cff6ae637fe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 104280046,
                    "digest": "sha256:cb96a0453571dd0421353d7717607ef070363b1e90f38177c959f9bb1e3376f7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:cb2ac7bbc5ac0ca54dab2b23ee77983572dc55ddd3f83f1bb92b9d066a924b5b"
                }
            ]
        },
        "1-alpine3.14": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5255,
                "digest": "sha256:63e5da64a214b83a89f6940f6449002b4480d02bbe325fd79f369ee68320f97d"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2717389,
                    "digest": "sha256:455c02918c4592a9beeeae47df541266f3ea53ed573feb767e5e8ab8dcee146e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 271751,
                    "digest": "sha256:125ff9128fc6772c86ea6b28adcf0c81bd5dc8cdfc59558e5e70af71e961690c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:d1fa2c4bb9ece7d7cf4b93a76cade5a8b6bcb0a73c7701a5f113e71229fbd671"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 110216113,
                    "digest": "sha256:7731466d147a970b6852cb87761254dbf54f15278df7d344a3b5330f387c7d0d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:e2e442908f7fbfca50f2a911682d5b620ceb3449d10bb1b20b50f80be9b2b67d"
                }
            ]
        },
        "1-alpine3.15": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5433,
                "digest": "sha256:7cb7e508c6de623a1ae69ea89a05cd198b420add10569e6d17ee84a11a441f3a"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2718439,
                    "digest": "sha256:47517142f6ba87eca6b7bdca1e0df160b74671c81e4b9605dad38c1862a43be3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 284755,
                    "digest": "sha256:100462c1aa9bae31c3b3a1acb027a11db955256aad84ab2c765fe89015f2393a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:92ab63ac9d8c44cbc195cf977f4d04a9c8ec75cb2f92fc3b554fd0832b5a2a58"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 116833620,
                    "digest": "sha256:3c30e11512905f50aec104e5e1d2dd39f7776158edc00ad81f7e4526f86b2752"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 157,
                    "digest": "sha256:c13a6d29f8112d85befed969214e9e3c99dafc0427910b3eb4ac3045bad0cd5b"
                }
            ]
        },
        "1-alpine3.16": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5125,
                "digest": "sha256:a2c6eaca9fa25da27ee3938b318688922bdf112a5fbd624b535f2c487cbb6aa2"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2709344,
                    "digest": "sha256:547446be3368f442c50ff95e2a2a9c85110b6b41bbb3c75b7e5ebb115f478b57"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 284759,
                    "digest": "sha256:5145a9c19e2ac3fd2d3033fee8dc2e298f8a4232d8725619f8f81de9d876126b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 96031986,
                    "digest": "sha256:8724bdd8017cb972cf3fad884715f95d144c6d38c3fd19ddf3338ce6732b42d7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:9740c163f43db82171bf34ba627978ab78bddc528755969e5fa5a74cc4b647f4"
                }
            ]
        },
        "1-alpine3.17": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6338,
                "digest": "sha256:a9f8c1a8bceae73b60763ff95f0524bcd4b8b27516815a7b2bd58b7996a0d4c9"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3258348,
                    "digest": "sha256:b8180c93b172865af87a7c0e7e3c8bcb139e0d0c92e19c96467ff2cd4c8919ad"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 286378,
                    "digest": "sha256:4f3c6c77cf70a80d7de804a7daaa96b024f097b19d512c3146a8149f39372f9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 64094736,
                    "digest": "sha256:a45a011d0a58b887bc2a62254a713a868e777432d872d4e2e25ba05762109a42"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:1793dfd2186b3580c73a49a6195a711072451bb85444a82386f17c1416dc3c50"
                }
            ]
        },
        "1-alpine3.18": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.oci.image.index.v1+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:434e6430ffd727415707b2893bb1b229846628b1243d6b599673aaa1941a574d",
                    "size": 1923,
                    "platform": {
                        "os": "linux",
                        "architecture": "arm64",
                        "variant": "v8"
                    },
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "arm64v8",
                        "org.opencontainers.image.base.digest": "sha256:24b42af5b7bdb9ccf1252e508ee0a4fd85eb3286a4596c422739ae6beb3038f4",
                        "org.opencontainers.image.base.name": "alpine:3.18",
                        "org.opencontainers.image.created": "2024-05-15T10:24:49Z",
                        "org.opencontainers.image.revision": "eb57429622f401af7c5afffeb3cd88022c9b9782",
                        "org.opencontainers.image.source": "https://github.com/docker-library/golang.git#eb57429622f401af7c5afffeb3cd88022c9b9782:1.22/alpine3.18",
                        "org.opencontainers.image.url": "https://hub.docker.com/_/golang",
                        "org.opencontainers.image.version": "1.22.3-alpine3.18"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:0856e78b960b85965caa308bee395ee0daab4947fb47fe9b782cd483a1359e76",
                    "size": 840,
                    "platform": {
                        "os": "unknown",
                        "architecture": "unknown"
                    },
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "arm64v8",
                        "vnd.docker.reference.digest": "sha256:434e6430ffd727415707b2893bb1b229846628b1243d6b599673aaa1941a574d",
                        "vnd.docker.reference.type": "attestation-manifest"
                    }
                }
            ]
        },
        "1-alpine3.19": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.oci.image.index.v1+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:8d1654b2a3b86c5c7e4f53f2028b78ac7908b9e29bc18f01ae4cf578d01419cd",
                    "size": 1923,
                    "platform": {
                        "os": "linux",
                        "architecture": "arm64",
                        "variant": "v8"
                    },
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "arm64v8",
                        "org.opencontainers.image.base.digest": "sha256:a0264d60f80df12bc1e6dd98bae6c43debe6667c0ba482711f0d806493467a46",
                        "org.opencontainers.image.base.name": "alpine:3.19",
                        "org.opencontainers.image.created": "2024-05-15T09:55:35Z",
                        "org.opencontainers.image.revision": "eb57429622f401af7c5afffeb3cd88022c9b9782",
                        "org.opencontainers.image.source": "https://github.com/docker-library/golang.git#eb57429622f401af7c5afffeb3cd88022c9b9782:1.22/alpine3.19",
                        "org.opencontainers.image.url": "https://hub.docker.com/_/golang",
                        "org.opencontainers.image.version": "1.22.3-alpine3.19"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:22c03a5b12bc2b66393386ac38b23ca722fd3cc0dcb7d1bbd0e731839a97216a",
                    "size": 840,
                    "platform": {
                        "os": "unknown",
                        "architecture": "unknown"
                    },
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "arm64v8",
                        "vnd.docker.reference.digest": "sha256:8d1654b2a3b86c5c7e4f53f2028b78ac7908b9e29bc18f01ae4cf578d01419cd",
                        "vnd.docker.reference.type": "attestation-manifest"
                    }
                }
            ]
        },
        "1-alpine3.20": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.oci.image.index.v1+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:638709d35305a16b38f575eabe97e2cab3229169cf555ebd5e98630f794f595c",
                    "size": 1923,
                    "platform": {
                        "os": "linux",
                        "architecture": "arm64",
                        "variant": "v8"
                    },
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "arm64v8",
                        "org.opencontainers.image.base.digest": "sha256:1c3b93ed450e26eac89b471d6d140e2f99488f489739b8b8ea5e8202dd086f82",
                        "org.opencontainers.image.base.name": "alpine:3.20",
                        "org.opencontainers.image.created": "2024-05-23T06:26:39Z",
                        "org.opencontainers.image.revision": "cf7a37dedf1fd5a25ca72075645368d1e3c30c4a",
                        "org.opencontainers.image.source": "https://github.com/docker-library/golang.git#cf7a37dedf1fd5a25ca72075645368d1e3c30c4a:1.22/alpine3.20",
                        "org.opencontainers.image.url": "https://hub.docker.com/_/golang",
                        "org.opencontainers.image.version": "1.22.3-alpine3.20"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:e6feff72e44b3a90aa8df43db17606970ae86ea4d8bca7381ca36eb677e743ff",
                    "size": 567,
                    "platform": {
                        "os": "unknown",
                        "architecture": "unknown"
                    },
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "arm64v8",
                        "vnd.docker.reference.digest": "sha256:638709d35305a16b38f575eabe97e2cab3229169cf555ebd5e98630f794f595c",
                        "vnd.docker.reference.type": "attestation-manifest"
                    }
                }
            ]
        },
        "1-alpine3.6": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4445,
                "digest": "sha256:718f11eee2641ba2bbaf42d35ea2c16f72c119e548b06682d7b6651812a01083"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1914748,
                    "digest": "sha256:bb473f0ebc12fde1bd45c1bd3c46f2d3aab367b1b7739464771455b9972f7894"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 176,
                    "digest": "sha256:75ff6b7ff3a208b8399e701e7ea1b7edbdc654c8c60d33c6f09a7803e2dda776"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 351498,
                    "digest": "sha256:f4abafc8fec4957ac2f07fd158383a3c5e24e4ef13e41e50cb46cbf645f39ba4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1116,
                    "digest": "sha256:bf5696068ca00033ad589dc52ca2296e128295d0de599b62f4a12259e009b8cf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 76478996,
                    "digest": "sha256:666ff3d0b3b4191e96820131dbcf95c6f0a4a5b8cb56c92573e5dbd3b42a35eb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:327e692731fd174764cb136fc898ca90d0162afc8ee14b2e4d465c8a379687ba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1354,
                    "digest": "sha256:f52700445ec887044a5f28f3d2feb4387fd3c5500ace8e97f93caa05bf1424b4"
                }
            ]
        },
        "1-alpine3.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4048,
                "digest": "sha256:acaeddb262088dfb4d797e5e0084acf78c4e530486516ce21dcbcf4ba95dcd80"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1999171,
                    "digest": "sha256:f0599ed267cb750a3c0ebeb55004b5a818b7e9a7e8071b49e687d11349556868"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 176,
                    "digest": "sha256:8bfe4843495e56e3546d4d49cf476ee7bc1650156062151aa38cf3e2fb397a70"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 308700,
                    "digest": "sha256:7de396ee231a20f4b949f169676cbce7ec7cd606522c82df026b1deef45c9654"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:19b78d2e65f225fcff98267a322f03dde34e7cb833dd1c8790244d3544ae1fdc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 104071944,
                    "digest": "sha256:fb09fd65ab513ac0652427e601daf6d63c251e3d2c4dd3bb2c2c01e5fdf6944c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:b19915079dff1251e51d2a3da45ac5e4257ec6d5de8de547a4999d8dc05bcaba"
                }
            ]
        },
        "1-alpine3.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4051,
                "digest": "sha256:a79d68981c9b969f175bcdf1e3ba3c2edb1f91145ed3af2c78dae380b0c824eb"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2099839,
                    "digest": "sha256:e3c488b39803d9194cf010f6127b1121d5387b90a1562d44b50b749d0e7a69bf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 176,
                    "digest": "sha256:05a63128803b1ea223f87244cb8d3faa97817f6cf3ca8249e485430218758510"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 308685,
                    "digest": "sha256:4fe3f66f9bc2a391ccc98b0ae2492dc28160ce2a5de9dc7057f36b2a88d42640"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:590d7dc3d210c2fa755e378743c66cdc4c9965179688e1fd1d1636cc3e111a32"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 104285935,
                    "digest": "sha256:2de4600d44e6be5f687c20413be041ca4266a81460c794439df131d9be1edb64"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:302e07c2393750ff3d56e0f14648eeb0ac62bcc0fd9fbeeced2db7231d018b4a"
                }
            ]
        },
        "1-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3805,
                "digest": "sha256:c8eb82a3f53318376a24643b92fa25ff7a0341cb0409dacbe265f6bebfcbb2ca"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2688779,
                    "digest": "sha256:0362ad1dd800a9d92f8982fa28f173f9120266153830f990f7486f44b068968a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302429,
                    "digest": "sha256:4add8f29bf03f3d6fce96396daad08e0039610b96925452697ea40933ec96ec4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:d2a54cdb6f8d9efb5c7906e854f297284c50db62dea68960f9665d4e134a2da6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 119422902,
                    "digest": "sha256:19297bbf2ac3507892aceb4eb9ddba960cfcbf0780ffb8d8b077801ad6b0791f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:78f6133e3b93120a635a39a79400b41bbd6e070458dcb99bf5b495584d945c10"
                }
            ]
        },
        "1-bookworm": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.oci.image.index.v1+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:ffa2dc4682898a620500bf7a04d7817016fc2fff57215b73265ec5f7096346d5",
                    "size": 2324,
                    "platform": {
                        "os": "linux",
                        "architecture": "arm64",
                        "variant": "v8"
                    },
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "arm64v8",
                        "org.opencontainers.image.base.digest": "sha256:6311d7a4ca52a611c4d8cb4232d1863abc4439069db57c44bcb2a2cbc736a3bf",
                        "org.opencontainers.image.base.name": "buildpack-deps:bookworm-scm",
                        "org.opencontainers.image.created": "2024-05-15T09:07:34Z",
                        "org.opencontainers.image.revision": "eb57429622f401af7c5afffeb3cd88022c9b9782",
                        "org.opencontainers.image.source": "https://github.com/docker-library/golang.git#eb57429622f401af7c5afffeb3cd88022c9b9782:1.22/bookworm",
                        "org.opencontainers.image.url": "https://hub.docker.com/_/golang",
                        "org.opencontainers.image.version": "1.22.3-bookworm"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:68a1f1bfccb7dd6860ecc2a24747b72bbf55b46368e410c3df2ea4190e4432fd",
                    "size": 842,
                    "platform": {
                        "os": "unknown",
                        "architecture": "unknown"
                    },
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "arm64v8",
                        "vnd.docker.reference.digest": "sha256:ffa2dc4682898a620500bf7a04d7817016fc2fff57215b73265ec5f7096346d5",
                        "vnd.docker.reference.type": "attestation-manifest"
                    }
                }
            ]
        },
        "1-bullseye": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.oci.image.index.v1+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:d64269a55ff38c4ba6519ac568d2d3caf38a11a5cef691b33506e19c6cdc2839",
                    "size": 2324,
                    "platform": {
                        "os": "linux",
                        "architecture": "arm64",
                        "variant": "v8"
                    },
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "arm64v8",
                        "org.opencontainers.image.base.digest": "sha256:72e04091b0b2072b523afe12879d8eb3f3677e80cb1968f821624eca6a4d9732",
                        "org.opencontainers.image.base.name": "buildpack-deps:bullseye-scm",
                        "org.opencontainers.image.created": "2024-05-15T09:26:09Z",
                        "org.opencontainers.image.revision": "eb57429622f401af7c5afffeb3cd88022c9b9782",
                        "org.opencontainers.image.source": "https://github.com/docker-library/golang.git#eb57429622f401af7c5afffeb3cd88022c9b9782:1.22/bullseye",
                        "org.opencontainers.image.url": "https://hub.docker.com/_/golang",
                        "org.opencontainers.image.version": "1.22.3-bullseye"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:5d4729b2ec1e031f9700b6e9c6704d7bd01b8fd8b5e51d01d3a687e085599be7",
                    "size": 842,
                    "platform": {
                        "os": "unknown",
                        "architecture": "unknown"
                    },
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "arm64v8",
                        "vnd.docker.reference.digest": "sha256:d64269a55ff38c4ba6519ac568d2d3caf38a11a5cef691b33506e19c6cdc2839",
                        "vnd.docker.reference.type": "attestation-manifest"
                    }
                }
            ]
        },
        "1-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7005,
                "digest": "sha256:15f4e972a5df7c52117d0df9c617ccc2275e07b710cf4e3bd53408d7f05fadea"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49238409,
                    "digest": "sha256:e8371d57f7426517aead21bff5af0cf321625cac166c86214c439fb67db84243"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 17450037,
                    "digest": "sha256:e7349847b3241e237d7a69174fea45593592e320324afdbae5c685b0a96e8181"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52217003,
                    "digest": "sha256:f104dc4fba2c93f994673ea6c81b78ad44ef6b4d6984576abf9be7cf0dde960b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 62735608,
                    "digest": "sha256:dd89ea1170f496f09a5024c764ff188bc4caf149ced38e3fd2c980fef9a417e4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 95529122,
                    "digest": "sha256:45af7a2a8ed54eaa46e8121d73fd711008cbcdbe8892a29fa49c18d236a487d6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:4c0fc9cc28936a9de4f2feb8a63cfc516bddd63491d34441273d7e9a2da2acd4"
                }
            ]
        },
        "1-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7151,
                "digest": "sha256:bdaec89312f993d1ede550f041994e5c90e7ca9e5e89fa0045924a07e3dbcbd5"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43213121,
                    "digest": "sha256:d8ccec8a513f896fedd1d9765f3f2abf98bc8264f61cecf17919c80c9aa7ddbc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10218617,
                    "digest": "sha256:6b40625a6bb21cb2cd6b19ef7592951f90da9ea1d8abf359196bf48300c448b2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3874558,
                    "digest": "sha256:414226169d0f92fdcd77314cbd06ba7613675d62a3afd63aa88afbf0072c44c2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47736296,
                    "digest": "sha256:ddb01f37c2a0f6704c7bc0d24baac1a6d5694b5e2fec5ae71f1c257b337a9348"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49042215,
                    "digest": "sha256:187df16cefa0e44ed3f4a74d309d7af745f307d34e97128caac7d900ed5e6ba7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 108879444,
                    "digest": "sha256:e0793bab5bfbcf9755723325a341f161011f7eb9e226670437c115b6965b4403"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:86f5e97c167c416ca3cff6aee0b760da9b9627f5f1604f5c9ad01d50d090de10"
                }
            ]
        },
        "1.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:07bcd768294370ba5e91a5ef21d91a746b644809fe9f66cd7cf32a6454d06e29",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                }
            ]
        },
        "1.10-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4050,
                "digest": "sha256:df678efab2a2e36fee240fd5b0e0ddd3d9b10e211e58d192377b0c172a6b7929"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2687895,
                    "digest": "sha256:ee02fa18913c824d1d1c9b680f1a43dad343b9d6c086a6bc62e3361c3d3a2d63"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 176,
                    "digest": "sha256:afafa41235ea57b01b00eba47de1574777073a79c1d592c5709dfcbb3bd51f2a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302324,
                    "digest": "sha256:5593484900d3703f8e48e8d8b2c655313cae960ef0f59e5a59bbea1736e29551"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:6682f3bac3bd3144b0abdab1a15d89b6c4921b3434f7507bff7a6b8c63d82a8e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 75355936,
                    "digest": "sha256:ba0c3c8256af1500f0701735f0f01be61a07bd3eea9fd634f4ef54f3ee76b5eb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:a84ad746416aee8d369c1c2e0d632b3663012c1bd1fd186ef6926d2506443169"
                }
            ]
        },
        "1.10-alpine3.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4050,
                "digest": "sha256:64b464818185fcced5ca2eab3cb5ce86066077d4fb27de828b8a63d1201cc2ee"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1999171,
                    "digest": "sha256:f0599ed267cb750a3c0ebeb55004b5a818b7e9a7e8071b49e687d11349556868"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 176,
                    "digest": "sha256:8bfe4843495e56e3546d4d49cf476ee7bc1650156062151aa38cf3e2fb397a70"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 308700,
                    "digest": "sha256:7de396ee231a20f4b949f169676cbce7ec7cd606522c82df026b1deef45c9654"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:19b78d2e65f225fcff98267a322f03dde34e7cb833dd1c8790244d3544ae1fdc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 75232127,
                    "digest": "sha256:31450fc07ff6ae5e2bd387edbb74a62bbcdd0273e0541bccd657b5146ecd1a64"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 124,
                    "digest": "sha256:7ee60cc16ff2a981b821621a30aa642d3ea89d04710e86e5fd07104cf79a7407"
                }
            ]
        },
        "1.10-alpine3.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4051,
                "digest": "sha256:c4f7afc352ffb68d723da8f1c6824fff0f988cc25973f505e73dbb205ead9a02"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2099839,
                    "digest": "sha256:e3c488b39803d9194cf010f6127b1121d5387b90a1562d44b50b749d0e7a69bf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 176,
                    "digest": "sha256:05a63128803b1ea223f87244cb8d3faa97817f6cf3ca8249e485430218758510"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 308685,
                    "digest": "sha256:4fe3f66f9bc2a391ccc98b0ae2492dc28160ce2a5de9dc7057f36b2a88d42640"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:590d7dc3d210c2fa755e378743c66cdc4c9965179688e1fd1d1636cc3e111a32"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 75422968,
                    "digest": "sha256:b5274e7c978d49b6cb163b9e4c03119017c39845a36158554b425686ffbab161"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:e3aac5aa074a35b1ee8135ea42588472f7c1f8aeb13bd64e2530b1481c7961cc"
                }
            ]
        },
        "1.10-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4050,
                "digest": "sha256:df678efab2a2e36fee240fd5b0e0ddd3d9b10e211e58d192377b0c172a6b7929"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2687895,
                    "digest": "sha256:ee02fa18913c824d1d1c9b680f1a43dad343b9d6c086a6bc62e3361c3d3a2d63"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 176,
                    "digest": "sha256:afafa41235ea57b01b00eba47de1574777073a79c1d592c5709dfcbb3bd51f2a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302324,
                    "digest": "sha256:5593484900d3703f8e48e8d8b2c655313cae960ef0f59e5a59bbea1736e29551"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:6682f3bac3bd3144b0abdab1a15d89b6c4921b3434f7507bff7a6b8c63d82a8e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 75355936,
                    "digest": "sha256:ba0c3c8256af1500f0701735f0f01be61a07bd3eea9fd634f4ef54f3ee76b5eb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:a84ad746416aee8d369c1c2e0d632b3663012c1bd1fd186ef6926d2506443169"
                }
            ]
        },
        "1.10-rc": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:c33da2ac19b5dd38b0e93129a448339841baee36943477f155e069b2eae30853",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                }
            ]
        },
        "1.10-rc-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4120,
                "digest": "sha256:9e9005687667b4191cd1bbecacfba79d5485db5b727396b772a89b7127298ba2"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1988857,
                    "digest": "sha256:b78042c299ad99d1e646b18762d4bc22a84c4f88e5bb491ea6293a10f53ddf79"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:6fd45b97b6c2a3ac869ae5c99e087e97bc29714b165180e06f0c9116f400f2dd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 308207,
                    "digest": "sha256:660093e5ae1b303373dac44a518743db0a535330a44f561a0b1c66c666b88102"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 496,
                    "digest": "sha256:22d02b4b65e459d1878ff3eb1c3c892ee158382ce1cf2e105a6133240e3b356a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 109059266,
                    "digest": "sha256:c446b75e651c9913901f62cac8525e625dfdb7ddaa26b524bc626e371f906e7e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:438705627c89e01b48d1cbafe6e68633e72843d75ed52cb137f951b4c5183761"
                }
            ]
        },
        "1.10-rc-alpine3.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4120,
                "digest": "sha256:9e9005687667b4191cd1bbecacfba79d5485db5b727396b772a89b7127298ba2"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1988857,
                    "digest": "sha256:b78042c299ad99d1e646b18762d4bc22a84c4f88e5bb491ea6293a10f53ddf79"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:6fd45b97b6c2a3ac869ae5c99e087e97bc29714b165180e06f0c9116f400f2dd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 308207,
                    "digest": "sha256:660093e5ae1b303373dac44a518743db0a535330a44f561a0b1c66c666b88102"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 496,
                    "digest": "sha256:22d02b4b65e459d1878ff3eb1c3c892ee158382ce1cf2e105a6133240e3b356a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 109059266,
                    "digest": "sha256:c446b75e651c9913901f62cac8525e625dfdb7ddaa26b524bc626e371f906e7e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:438705627c89e01b48d1cbafe6e68633e72843d75ed52cb137f951b4c5183761"
                }
            ]
        },
        "1.10-rc-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5451,
                "digest": "sha256:25f0f5289924f291ec579b07d76953b24ca0eb0f82fc9ef7106e092eb94d3ca5"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42921910,
                    "digest": "sha256:b295e5c109fc9f55d14722eb26929ecc106cec04f7d37e867f7da008c53e293b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10066614,
                    "digest": "sha256:7310b14179e155997ab4625e06eb59600ea20b500835fe5bdca17a52d61e1c45"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4087808,
                    "digest": "sha256:785fa2a238ab89b203751335a74784cdb5ea9d78eabac46ce433ef327d7ff1db"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47983036,
                    "digest": "sha256:a6a434d283e1e20068621bb55d760d5ea6ba21944e93cd241761d5ebfd5cfdd3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48935360,
                    "digest": "sha256:cb4dab2b03cd9d53d1f581b793cd7497833b372d690ba645197374028cc06528"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102485624,
                    "digest": "sha256:71eabb0ad015850dcbd4e19e5d72acc248a5bc1bf0f66a65f53d378b45f6c9aa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:2d29767c2d1828d227075ebfb683ae6619a46837d1bbd6d950fdd0d5ea446ee8"
                }
            ]
        },
        "1.10-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5466,
                "digest": "sha256:c497dff7c5b41a16801f9317e4e8de33bad5d9793fc50184c24a3d8eeacd1744"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43124977,
                    "digest": "sha256:12bb1c82b086301ca1c22eabf3add7cd229f27b63ca4b0924e2356051d9e7194"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9728878,
                    "digest": "sha256:730f6528b47c72f6dd5aabc947e8db01aa470adc3fdb4bbbcf052f9c3ad6ae8e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4093098,
                    "digest": "sha256:63b5f3607713f2dab247e619fafcffd7c9edf4aaffc9e701660a76ccf324b742"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48005411,
                    "digest": "sha256:5001a1d2fe2f54da8dbdfca56862dd05d37d1a2aab69599bcc2a130ea4fcd7f5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49018959,
                    "digest": "sha256:0cf7cff8d1540abf0037817a982ebb3302bbf09abae0be8a01c89ec883cc628a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 73988876,
                    "digest": "sha256:b0d402b29dd080ca2a00a496848baa4096f965fbe5b143233a4d6baf3f7fe90c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:454ba53876ce6d29c847740c9b760bcb5d98ee99720f2ef013b7a1eef0c90d41"
                }
            ]
        },
        "1.10.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:fe4c1aa86d7b7a4c4244b7f2f4e56f43af50fdf746139ec89732630b0c70bc96",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                }
            ]
        },
        "1.10.0-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4115,
                "digest": "sha256:bec883cdc26fdf25d76b6e03a0fa7e73a92467050f35f6f517f9f7efde53723c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1988857,
                    "digest": "sha256:b78042c299ad99d1e646b18762d4bc22a84c4f88e5bb491ea6293a10f53ddf79"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:6fd45b97b6c2a3ac869ae5c99e087e97bc29714b165180e06f0c9116f400f2dd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 308207,
                    "digest": "sha256:660093e5ae1b303373dac44a518743db0a535330a44f561a0b1c66c666b88102"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 492,
                    "digest": "sha256:8569aa5fa4d278f38f6cc0343e9466d5f72fe50fdf3b7b718188bbb79cfd85d9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 109064354,
                    "digest": "sha256:4aa9d41ce1fa8f979262115f154b87d701f1ec2a2ded5f91c8cc4b7c43e40f7c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:54ce6514b3ea0064acae9bacab64946f16e64276b4378cc6bd2d28ac9f61ed54"
                }
            ]
        },
        "1.10.0-alpine3.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4115,
                "digest": "sha256:bec883cdc26fdf25d76b6e03a0fa7e73a92467050f35f6f517f9f7efde53723c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1988857,
                    "digest": "sha256:b78042c299ad99d1e646b18762d4bc22a84c4f88e5bb491ea6293a10f53ddf79"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:6fd45b97b6c2a3ac869ae5c99e087e97bc29714b165180e06f0c9116f400f2dd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 308207,
                    "digest": "sha256:660093e5ae1b303373dac44a518743db0a535330a44f561a0b1c66c666b88102"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 492,
                    "digest": "sha256:8569aa5fa4d278f38f6cc0343e9466d5f72fe50fdf3b7b718188bbb79cfd85d9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 109064354,
                    "digest": "sha256:4aa9d41ce1fa8f979262115f154b87d701f1ec2a2ded5f91c8cc4b7c43e40f7c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:54ce6514b3ea0064acae9bacab64946f16e64276b4378cc6bd2d28ac9f61ed54"
                }
            ]
        },
        "1.10.0-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5444,
                "digest": "sha256:1cf505dcfdf8d77d45f243fd7139949efd96741bda79ff69a9e7a23a41e5ca4d"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42907825,
                    "digest": "sha256:3476b6ec1aa77d47beaf22adc259097130bcc9eec853636fb1dcf4f5c2925a56"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10066603,
                    "digest": "sha256:eab7dbcb22e5d9d968cd5d78dfb96bf92704a665b3d1710483048568abd1ba5b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4087845,
                    "digest": "sha256:03e8835ddfb1ea03693a4eb69d729fa15c982207e1518c3dd84f76336f920f9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47982966,
                    "digest": "sha256:bade4a02b1a0af4c7b52bcd066c9d44034d712a06638e6e7dbb69c1127476aa9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48958440,
                    "digest": "sha256:8b5d347d8b1cf0e5e44efc946e168812b756706e1ae04089babac994e94c5a53"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102478133,
                    "digest": "sha256:0add559507ed05f8a9a9e30cd8868a6ef7d9d19295cb35fd44929f5d16281463"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:3e934158b556f80c9548884ce26221ec1fb66448357f30b451b0f37ea203e042"
                }
            ]
        },
        "1.10.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:01842011b6960ee4ab3393de05278edf78ba3b16bf001f6b1e1253b8ba7efd4d",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                }
            ]
        },
        "1.10.1-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3870,
                "digest": "sha256:f0192a7d70dbc8e7d97f445a34acf16802aec2ae182dbc0866393c3383636f26"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1988857,
                    "digest": "sha256:b78042c299ad99d1e646b18762d4bc22a84c4f88e5bb491ea6293a10f53ddf79"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:6fd45b97b6c2a3ac869ae5c99e087e97bc29714b165180e06f0c9116f400f2dd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 308207,
                    "digest": "sha256:660093e5ae1b303373dac44a518743db0a535330a44f561a0b1c66c666b88102"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 109009924,
                    "digest": "sha256:0dc965c341891efad1bb75bd9a6e462088c9df2ac16d66301046f2aea458bc06"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:4324136182b2078be649cb80804806b67f91430f5d5286e7eaedbb77471cf8a3"
                }
            ]
        },
        "1.10.1-alpine3.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3870,
                "digest": "sha256:f0192a7d70dbc8e7d97f445a34acf16802aec2ae182dbc0866393c3383636f26"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1988857,
                    "digest": "sha256:b78042c299ad99d1e646b18762d4bc22a84c4f88e5bb491ea6293a10f53ddf79"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:6fd45b97b6c2a3ac869ae5c99e087e97bc29714b165180e06f0c9116f400f2dd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 308207,
                    "digest": "sha256:660093e5ae1b303373dac44a518743db0a535330a44f561a0b1c66c666b88102"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 109009924,
                    "digest": "sha256:0dc965c341891efad1bb75bd9a6e462088c9df2ac16d66301046f2aea458bc06"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:4324136182b2078be649cb80804806b67f91430f5d5286e7eaedbb77471cf8a3"
                }
            ]
        },
        "1.10.1-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5450,
                "digest": "sha256:c415c624bceba4c90e67e9022da3b23f782c1d3be4b912840f4ca7e22b7f5558"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43109349,
                    "digest": "sha256:142bf25d8d1b3ebc9dfbedd586e70a011594690acf48b2695bfce01e3a2cf0d5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9697043,
                    "digest": "sha256:8fe3c77baf3b64937d2b7b343d9b966a08f6b90568acce53ff6effca0fd787fe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4087722,
                    "digest": "sha256:769a11625fb0ec33902994bfc5463ff53a6754be4cd51b8dc5ca168a05228b09"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47985294,
                    "digest": "sha256:7bc401059feb6b72e3e103faadbe0ad6581c99b0c5f4a557a1e5c36ffc5c7bbb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48969930,
                    "digest": "sha256:12be2d3c1ea1f7c36eb390622c40da29823fe9468e1413ad169eddc5560b95c6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102484315,
                    "digest": "sha256:812609ab353b766b277df13cb5dd0b5a1fd54e5a54ca6225615bb3ed02bb09f5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:d564e4116740ad79a98a6751270d14b9bca1f02e773b8054ee74c3faf870a500"
                }
            ]
        },
        "1.10.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:229eb6625bbf8daf46f19cebde8956e6823572586dfabfe016453fa747a548d4",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                }
            ]
        },
        "1.10.2-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4110,
                "digest": "sha256:5510010285245fbf30884c48449da3a20aeb1862ab99b0523844c0b53c1cf630"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1988857,
                    "digest": "sha256:b78042c299ad99d1e646b18762d4bc22a84c4f88e5bb491ea6293a10f53ddf79"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:6fd45b97b6c2a3ac869ae5c99e087e97bc29714b165180e06f0c9116f400f2dd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 308213,
                    "digest": "sha256:61e0b1d8a4679a04839bcedd494b39879dc202e375f6f74d26f6bd80edff0363"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:226bcca23678813260f44b3560835eb92c99b7a375b8f4dd0e264c06496a201d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 109005114,
                    "digest": "sha256:165f7621630840cad58b6937da54aeb293895875ca9bab8a515fd1240e0fd0cd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:707a9646cee5d50ad0e388318bee3d7739a70f1f58e24189fde85d3812746cf0"
                }
            ]
        },
        "1.10.2-alpine3.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4110,
                "digest": "sha256:5510010285245fbf30884c48449da3a20aeb1862ab99b0523844c0b53c1cf630"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1988857,
                    "digest": "sha256:b78042c299ad99d1e646b18762d4bc22a84c4f88e5bb491ea6293a10f53ddf79"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:6fd45b97b6c2a3ac869ae5c99e087e97bc29714b165180e06f0c9116f400f2dd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 308213,
                    "digest": "sha256:61e0b1d8a4679a04839bcedd494b39879dc202e375f6f74d26f6bd80edff0363"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:226bcca23678813260f44b3560835eb92c99b7a375b8f4dd0e264c06496a201d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 109005114,
                    "digest": "sha256:165f7621630840cad58b6937da54aeb293895875ca9bab8a515fd1240e0fd0cd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:707a9646cee5d50ad0e388318bee3d7739a70f1f58e24189fde85d3812746cf0"
                }
            ]
        },
        "1.10.2-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5463,
                "digest": "sha256:b119f86034f811658e1aaa349a61f701e6b4d70b10546e61e013c5344fd4b192"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43109349,
                    "digest": "sha256:142bf25d8d1b3ebc9dfbedd586e70a011594690acf48b2695bfce01e3a2cf0d5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9722189,
                    "digest": "sha256:1dd3e9bbb1f760ff8cab41817920c5822422ba1eaab36a233c8f43348791e03d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4088086,
                    "digest": "sha256:5534647756e8399143ad6e1639b6433b9a3364809ac4520f62199ea46e638a2e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47986386,
                    "digest": "sha256:1ee9236e2af68c9ae98f323593e7a832808ed6be16d6a198b45e06d42c26d5da"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48970306,
                    "digest": "sha256:f7d2c3b7efb279d7c005222d143c3235b049bd7be093bdcc6002bfbc6ae66b63"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 115060889,
                    "digest": "sha256:3435d2b5efe6fcadb29e8c146473fd575df7ae44a68018acc0f6ce0e4aa3f356"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:57b57ce894c84589370607b434d3fb046eee4a06137a8e16b9bd8f5275972004"
                }
            ]
        },
        "1.10.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:eca4e4d8182306fe01dc33e89bf8973c2312358c1b12295445b84a724b2c7da4",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                }
            ]
        },
        "1.10.3-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4175,
                "digest": "sha256:b3b7a8e9a5824112c6f8085569fe79a510013bbe3e2557db12daaeb045575735"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2099514,
                    "digest": "sha256:47e04371c99027fae42871b720fdc6cdddcb65062bfa05f0c3bb0a594cb5bbbd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 176,
                    "digest": "sha256:b4103359e1ecd9a7253d8b8a041d4e81db1ff4a5e1950bc0e02305d221c9e6c2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 308530,
                    "digest": "sha256:fdcf8e21e8f5edb742758a8dcd7868dc15b1b1ad2605c214d159d58216e7944a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:38e221838d317e50636dd30af1175c5672e49c137b7163688ad18fd895860a23"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 76667885,
                    "digest": "sha256:c5b90cfb602fb0d9ddd69f299e83b01dd389bb5baf6a3f09f663ac3ccd325704"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:7060f8c11bb1dcef1a56260f3aed07f1372374c8a623803b1458706e2a7fe878"
                }
            ]
        },
        "1.10.3-alpine3.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4175,
                "digest": "sha256:e99c0a57af755f6b5d36f4f8c5c957e314183fa13258e5868a2ff3538f107037"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1988857,
                    "digest": "sha256:b78042c299ad99d1e646b18762d4bc22a84c4f88e5bb491ea6293a10f53ddf79"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:6fd45b97b6c2a3ac869ae5c99e087e97bc29714b165180e06f0c9116f400f2dd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 308213,
                    "digest": "sha256:61e0b1d8a4679a04839bcedd494b39879dc202e375f6f74d26f6bd80edff0363"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:226bcca23678813260f44b3560835eb92c99b7a375b8f4dd0e264c06496a201d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 75597368,
                    "digest": "sha256:af3a9743de9adff5a726d3e14d8e8a78d4bf404839127ace313092b470828cec"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:3a7abd8eab60098cb19ecda0998160bb34f7b2cfb938c8d6e3ff46edfb9a7626"
                }
            ]
        },
        "1.10.3-alpine3.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4175,
                "digest": "sha256:b3b7a8e9a5824112c6f8085569fe79a510013bbe3e2557db12daaeb045575735"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2099514,
                    "digest": "sha256:47e04371c99027fae42871b720fdc6cdddcb65062bfa05f0c3bb0a594cb5bbbd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 176,
                    "digest": "sha256:b4103359e1ecd9a7253d8b8a041d4e81db1ff4a5e1950bc0e02305d221c9e6c2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 308530,
                    "digest": "sha256:fdcf8e21e8f5edb742758a8dcd7868dc15b1b1ad2605c214d159d58216e7944a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:38e221838d317e50636dd30af1175c5672e49c137b7163688ad18fd895860a23"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 76667885,
                    "digest": "sha256:c5b90cfb602fb0d9ddd69f299e83b01dd389bb5baf6a3f09f663ac3ccd325704"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:7060f8c11bb1dcef1a56260f3aed07f1372374c8a623803b1458706e2a7fe878"
                }
            ]
        },
        "1.10.3-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5460,
                "digest": "sha256:d5c76b53b5ffdb2942d16b8b686b21f6ce39742e0ac8ffaa1c7250ed547f6c92"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43123568,
                    "digest": "sha256:24e48664c69560cde9534aadde23364122f1feb02b5db0ab3776983a4788ea63"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9690273,
                    "digest": "sha256:cbcf842c718cc953be45905967fc6a0114f55314ce412b80107e20d8b43fdcdb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4088491,
                    "digest": "sha256:317d79a9c0a5c766d03c1c253fa09f645ed7321dc3a80e0ae33599958677cd1d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48003327,
                    "digest": "sha256:a390be6b2f0349f7391582a305479410441bcb0329b8daa800d13f3921fd39b7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48989789,
                    "digest": "sha256:94a0d029b36d67dd678c31d091d0d1d44daae01a0f91a80445446578ffb01e49"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 115063424,
                    "digest": "sha256:7dfd5df07cb42fcb22db5ba2ea9c138c8b1ce26607d9d1db99696bb8ccccb5a9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:62ca136698965b6892ec20d45fa79aefe17932376555ac1bbda6e47cc2a5b3d2"
                }
            ]
        },
        "1.10.4": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:8c34ae236b4803dc148f26e6d90c945a3d99ab0923f0d6855c7b901f1facb01c",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                }
            ]
        },
        "1.10.4-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4045,
                "digest": "sha256:6730be29a0fbddd4866210b41b235cb8ed4a2b53e473e37d37c8d6f2748c0701"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2099762,
                    "digest": "sha256:9941776d74c9129fd585b6f0434ba48bd3a7112d6736bc02e6d12f41153cab26"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 176,
                    "digest": "sha256:ae94b3cb7a1b2cef0ceffe3303cd03f83434d283aab43389e586b42bea00b358"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 308522,
                    "digest": "sha256:f9cdac08f3358dba836f2b7ded1fa5dc2150665abbe222782cae6cf449c3078f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:f2ef4ad6416adae80970c5edd8e49ff9040d95e018ae5ad3f51e6adc1acdcf87"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 75433270,
                    "digest": "sha256:bc91d3ff783e0533c262c1b3075e628cfb7a92e51d525475c7a9dd4dab65256c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:1aa3915cf3fb9a5546328f7beceae8c24a237d5426633b934c482751e76d68dc"
                }
            ]
        },
        "1.10.4-alpine3.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4047,
                "digest": "sha256:36cc290ded79c5caa7ddd219d695f42ec98a825122ebe838b07d7dcf70501f10"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1999171,
                    "digest": "sha256:f0599ed267cb750a3c0ebeb55004b5a818b7e9a7e8071b49e687d11349556868"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 176,
                    "digest": "sha256:9e2c71dece06bcd39f8fb81b4fae422241fd8bfca8b0cb16ea4bc4b77c87f4af"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 308549,
                    "digest": "sha256:ae3f4a1391079d7961eba2ea9cc2ce5e09a95517414bbb1dc7f40e72ca90c916"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:52bca2a75d67cfa50b1190b48b46fc51c5ff41026856301f450959c56e584737"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 75205567,
                    "digest": "sha256:96fce2d03e80be98a714dcf654eec0eeb68cb6896d84843673f1833a7aa92558"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:d822ad5fea2797b167909aa2757a5a3aeb6a70a4034fb56b013d087f19917acc"
                }
            ]
        },
        "1.10.4-alpine3.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4045,
                "digest": "sha256:6730be29a0fbddd4866210b41b235cb8ed4a2b53e473e37d37c8d6f2748c0701"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2099762,
                    "digest": "sha256:9941776d74c9129fd585b6f0434ba48bd3a7112d6736bc02e6d12f41153cab26"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 176,
                    "digest": "sha256:ae94b3cb7a1b2cef0ceffe3303cd03f83434d283aab43389e586b42bea00b358"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 308522,
                    "digest": "sha256:f9cdac08f3358dba836f2b7ded1fa5dc2150665abbe222782cae6cf449c3078f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:f2ef4ad6416adae80970c5edd8e49ff9040d95e018ae5ad3f51e6adc1acdcf87"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 75433270,
                    "digest": "sha256:bc91d3ff783e0533c262c1b3075e628cfb7a92e51d525475c7a9dd4dab65256c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:1aa3915cf3fb9a5546328f7beceae8c24a237d5426633b934c482751e76d68dc"
                }
            ]
        },
        "1.10.4-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5463,
                "digest": "sha256:fb5b8cd51b69b043b77619b8997c161aa2ece72f957dc4b91a89db600dccd508"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43123597,
                    "digest": "sha256:54fc83a09c68f915c1e318f4b118a467a545027084dd28edbdfded4ea6772e9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9690405,
                    "digest": "sha256:742d3549b4ad9fe47f3e3bf2ee373b97068548f65584a6d259dfa601721e2f51"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4088398,
                    "digest": "sha256:a6c71b9867c5efaf04365448a7b025ba50a926e7c1daae8ee9e73b149b322ae8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48004319,
                    "digest": "sha256:572533d310055ca506af51db699ecddf742195aa194d408e0e44da0f97ce4bca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48992926,
                    "digest": "sha256:8f4e29e656e8a32f148d73a40b5ccb0ebbc5d414ece9bb318dc16a3062a68b86"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 75458075,
                    "digest": "sha256:7a38a526a81daf7d7a548931c5053c83154fcd13703c6e6269de05ce3d9bc2b9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:7cbefdf52dd25eca6c53674be64584050d9f22af051d50e8820d67e1217b2d00"
                }
            ]
        },
        "1.10.5": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:e721e3cb62711f95f1e79128fbfab71da91a1fe9ed00c239c6721caee203f5ac",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                }
            ]
        },
        "1.10.5-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4046,
                "digest": "sha256:62a995ea6de9cbe9275bc18913d4cebdc44e06cb09487193445c7514c6fb9f79"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2099762,
                    "digest": "sha256:9941776d74c9129fd585b6f0434ba48bd3a7112d6736bc02e6d12f41153cab26"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 176,
                    "digest": "sha256:ae94b3cb7a1b2cef0ceffe3303cd03f83434d283aab43389e586b42bea00b358"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 308522,
                    "digest": "sha256:f9cdac08f3358dba836f2b7ded1fa5dc2150665abbe222782cae6cf449c3078f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:f2ef4ad6416adae80970c5edd8e49ff9040d95e018ae5ad3f51e6adc1acdcf87"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 75433843,
                    "digest": "sha256:dcb05a6c1bdcf8a1310be3d54d0237e037fb535583139ad28a27698158639a14"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:6499dbf9cc403f43c9ed403561a664ff9b9a17834c0c50812dd3afe0e585d564"
                }
            ]
        },
        "1.10.5-alpine3.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4047,
                "digest": "sha256:faa51b394df807f62f75c7ade51ca9a95051b000a685f4d7c4699930dab29df7"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1999171,
                    "digest": "sha256:f0599ed267cb750a3c0ebeb55004b5a818b7e9a7e8071b49e687d11349556868"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 176,
                    "digest": "sha256:9e2c71dece06bcd39f8fb81b4fae422241fd8bfca8b0cb16ea4bc4b77c87f4af"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 308549,
                    "digest": "sha256:ae3f4a1391079d7961eba2ea9cc2ce5e09a95517414bbb1dc7f40e72ca90c916"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:52bca2a75d67cfa50b1190b48b46fc51c5ff41026856301f450959c56e584737"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 75203768,
                    "digest": "sha256:99f50668c8776beecdd68da6c25cff6ac1aa9b1fcf7d7c985434c0223b09f2a7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:cf039b75544e272c06716619cbad4ccdbdf1940b2a88ba48603e85d3d78ba9a9"
                }
            ]
        },
        "1.10.5-alpine3.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4046,
                "digest": "sha256:62a995ea6de9cbe9275bc18913d4cebdc44e06cb09487193445c7514c6fb9f79"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2099762,
                    "digest": "sha256:9941776d74c9129fd585b6f0434ba48bd3a7112d6736bc02e6d12f41153cab26"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 176,
                    "digest": "sha256:ae94b3cb7a1b2cef0ceffe3303cd03f83434d283aab43389e586b42bea00b358"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 308522,
                    "digest": "sha256:f9cdac08f3358dba836f2b7ded1fa5dc2150665abbe222782cae6cf449c3078f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:f2ef4ad6416adae80970c5edd8e49ff9040d95e018ae5ad3f51e6adc1acdcf87"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 75433843,
                    "digest": "sha256:dcb05a6c1bdcf8a1310be3d54d0237e037fb535583139ad28a27698158639a14"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:6499dbf9cc403f43c9ed403561a664ff9b9a17834c0c50812dd3afe0e585d564"
                }
            ]
        },
        "1.10.5-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5463,
                "digest": "sha256:425adb1225b004a205e25cd29fa78ae8ddb63bd59bf88087e7353a4086b2871d"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43116700,
                    "digest": "sha256:4f3698b9865b00fa6eb7e0d3d11692c31eb0dc455aa6ab111d965bae67726698"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9690286,
                    "digest": "sha256:3d136331294ced7de67c8e4bea8c807c347632c0aa25c4ec2ae6a7a3e346d6c1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4093102,
                    "digest": "sha256:44c15aa4d980e5d3689a8a8099f7d79fb667611239aab1dfa5447b52f0a24934"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48005019,
                    "digest": "sha256:ccbf6d1a95604486762f28db0d78dc2d0ee4ce93752f9f63500a2a5a1ccccbad"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49018741,
                    "digest": "sha256:3681e096a338a349b77c8333fb6f6f2b4877b86734a75c8645efb9da7394c939"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 74965142,
                    "digest": "sha256:d50db31feed3101e1131455a4edcd6a3741b8f3c77379798de7f449f238b6ad3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:93b3110cc57f92ee4afc82234aa4227d25de5935c8a74fa0da0d5c5058bf2f6d"
                }
            ]
        },
        "1.10.6": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:dff54c47f728ee7ed8553d474570a60fe2b5ed207780adf7645fcac33431ef1d",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                }
            ]
        },
        "1.10.6-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4044,
                "digest": "sha256:23a3a1d70150a12147821dc95fc0e7ae8d47ed96ed1ea82dd1d295d9a1e82e9d"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2099762,
                    "digest": "sha256:9941776d74c9129fd585b6f0434ba48bd3a7112d6736bc02e6d12f41153cab26"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 176,
                    "digest": "sha256:ae94b3cb7a1b2cef0ceffe3303cd03f83434d283aab43389e586b42bea00b358"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 308522,
                    "digest": "sha256:f9cdac08f3358dba836f2b7ded1fa5dc2150665abbe222782cae6cf449c3078f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:f2ef4ad6416adae80970c5edd8e49ff9040d95e018ae5ad3f51e6adc1acdcf87"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 75426851,
                    "digest": "sha256:5115679e2a867fdaa00b9bfc82a29984f2d1023eedf6e62809ac7f657edf1afe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:8cb0e2790ebea33174f165d45ffa20f8ed24bd0100241074a4be7e36d22640dc"
                }
            ]
        },
        "1.10.6-alpine3.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4045,
                "digest": "sha256:4342ca60ba61bea7b3cf6ce4f471bbad3ac3150218fe177186ff553b50405738"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1999171,
                    "digest": "sha256:f0599ed267cb750a3c0ebeb55004b5a818b7e9a7e8071b49e687d11349556868"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 176,
                    "digest": "sha256:9e2c71dece06bcd39f8fb81b4fae422241fd8bfca8b0cb16ea4bc4b77c87f4af"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 308549,
                    "digest": "sha256:ae3f4a1391079d7961eba2ea9cc2ce5e09a95517414bbb1dc7f40e72ca90c916"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:52bca2a75d67cfa50b1190b48b46fc51c5ff41026856301f450959c56e584737"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 75234953,
                    "digest": "sha256:e63a46417d3961892574f0d493d30052435dddbdcaccad7e6cce4183c7042cff"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:8a0ea6673282e766408e3b9fb5cc10e27041324b7881463f5dfa91902a6d3fbc"
                }
            ]
        },
        "1.10.6-alpine3.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4044,
                "digest": "sha256:23a3a1d70150a12147821dc95fc0e7ae8d47ed96ed1ea82dd1d295d9a1e82e9d"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2099762,
                    "digest": "sha256:9941776d74c9129fd585b6f0434ba48bd3a7112d6736bc02e6d12f41153cab26"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 176,
                    "digest": "sha256:ae94b3cb7a1b2cef0ceffe3303cd03f83434d283aab43389e586b42bea00b358"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 308522,
                    "digest": "sha256:f9cdac08f3358dba836f2b7ded1fa5dc2150665abbe222782cae6cf449c3078f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:f2ef4ad6416adae80970c5edd8e49ff9040d95e018ae5ad3f51e6adc1acdcf87"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 75426851,
                    "digest": "sha256:5115679e2a867fdaa00b9bfc82a29984f2d1023eedf6e62809ac7f657edf1afe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:8cb0e2790ebea33174f165d45ffa20f8ed24bd0100241074a4be7e36d22640dc"
                }
            ]
        },
        "1.10.6-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5459,
                "digest": "sha256:8c531e376abba54291e75b74251e6d9f15d9b2279f3c132e9c91dfa8a932c6cb"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43116700,
                    "digest": "sha256:4f3698b9865b00fa6eb7e0d3d11692c31eb0dc455aa6ab111d965bae67726698"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9690286,
                    "digest": "sha256:3d136331294ced7de67c8e4bea8c807c347632c0aa25c4ec2ae6a7a3e346d6c1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4093102,
                    "digest": "sha256:44c15aa4d980e5d3689a8a8099f7d79fb667611239aab1dfa5447b52f0a24934"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48005019,
                    "digest": "sha256:ccbf6d1a95604486762f28db0d78dc2d0ee4ce93752f9f63500a2a5a1ccccbad"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49018741,
                    "digest": "sha256:3681e096a338a349b77c8333fb6f6f2b4877b86734a75c8645efb9da7394c939"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 74978758,
                    "digest": "sha256:c4cb231f331541f54b6ce12ecd195bb5d22f0dc665f4f01dd10ece9d2568f930"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:c37551899f68b170d5551b516a3215c42f5501e323df7a895684e3e39143bdd1"
                }
            ]
        },
        "1.10.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:03c1a79ee5f9e6f9dc921058eb6da37e64f36c8130858105569d7daacdcfc386",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                }
            ]
        },
        "1.10.7-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4050,
                "digest": "sha256:9b358c7fcf947159b299385f2c8fa7820b000db9d265c7941b8e795a7ba72d6b"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2099839,
                    "digest": "sha256:e3c488b39803d9194cf010f6127b1121d5387b90a1562d44b50b749d0e7a69bf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 176,
                    "digest": "sha256:05a63128803b1ea223f87244cb8d3faa97817f6cf3ca8249e485430218758510"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 308685,
                    "digest": "sha256:4fe3f66f9bc2a391ccc98b0ae2492dc28160ce2a5de9dc7057f36b2a88d42640"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:590d7dc3d210c2fa755e378743c66cdc4c9965179688e1fd1d1636cc3e111a32"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 75424693,
                    "digest": "sha256:822783078d08fb45580826c709095a69ff476a6a0b65a1943adce9de74a60ce7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:bfc53f4cdfcee2108b428bc97fe6b15d14b9f1b88f580b0a17e30c90d4483e20"
                }
            ]
        },
        "1.10.7-alpine3.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4050,
                "digest": "sha256:c067999d345d6935e745e522a0cea360c2731de9943c25054ab232e526f0b614"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1999171,
                    "digest": "sha256:f0599ed267cb750a3c0ebeb55004b5a818b7e9a7e8071b49e687d11349556868"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 176,
                    "digest": "sha256:8bfe4843495e56e3546d4d49cf476ee7bc1650156062151aa38cf3e2fb397a70"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 308700,
                    "digest": "sha256:7de396ee231a20f4b949f169676cbce7ec7cd606522c82df026b1deef45c9654"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:19b78d2e65f225fcff98267a322f03dde34e7cb833dd1c8790244d3544ae1fdc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 75232804,
                    "digest": "sha256:ee7e67fdb240e9d16bfba86051a5868ca77b66c23f0d3a30c214eadb58ca3d8b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:c855f63638af18411403c0959f6befd5450847a1ba4b41bc1dd5865411dd6a79"
                }
            ]
        },
        "1.10.7-alpine3.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4050,
                "digest": "sha256:9b358c7fcf947159b299385f2c8fa7820b000db9d265c7941b8e795a7ba72d6b"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2099839,
                    "digest": "sha256:e3c488b39803d9194cf010f6127b1121d5387b90a1562d44b50b749d0e7a69bf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 176,
                    "digest": "sha256:05a63128803b1ea223f87244cb8d3faa97817f6cf3ca8249e485430218758510"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 308685,
                    "digest": "sha256:4fe3f66f9bc2a391ccc98b0ae2492dc28160ce2a5de9dc7057f36b2a88d42640"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:590d7dc3d210c2fa755e378743c66cdc4c9965179688e1fd1d1636cc3e111a32"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 75424693,
                    "digest": "sha256:822783078d08fb45580826c709095a69ff476a6a0b65a1943adce9de74a60ce7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:bfc53f4cdfcee2108b428bc97fe6b15d14b9f1b88f580b0a17e30c90d4483e20"
                }
            ]
        },
        "1.10.7-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5464,
                "digest": "sha256:96f4b160e297aed82bcbbe82bc4f17a7f9eb59e70e706075b6e3c051ad8dcb9e"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43116478,
                    "digest": "sha256:ed1ec7511bfa23f7413f2fc49fb5b111ef33638df9a60111a2c282a2f78a7653"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9728682,
                    "digest": "sha256:adb2bf3fc8884b0bfbf3d5317df5126bdd1911341a1d0736bca48b0043d81785"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4093166,
                    "digest": "sha256:795dadfe0a1e898d47690c9839194ddb1373266c1883d742f4b8d5872be25b8c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48005935,
                    "digest": "sha256:b3909cbce85809e95cb66a5b6e819717d1857f55a876c03fa1d9e885c2b0d9a2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49018881,
                    "digest": "sha256:7bf622939e59cc96f37899fb464f752773cbe8b3eac84625231477e1eb522d00"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 74978771,
                    "digest": "sha256:1248327ecda30f8d7eded9024be84eba9f8d969dc04aadfbc74382dd98ec1b6b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:e18f14c1afa59dc90939dd3df7523b203ffe4492e6e2828ac4307a1ebb649558"
                }
            ]
        },
        "1.10.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:07bcd768294370ba5e91a5ef21d91a746b644809fe9f66cd7cf32a6454d06e29",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                }
            ]
        },
        "1.10.8-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4050,
                "digest": "sha256:df678efab2a2e36fee240fd5b0e0ddd3d9b10e211e58d192377b0c172a6b7929"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2687895,
                    "digest": "sha256:ee02fa18913c824d1d1c9b680f1a43dad343b9d6c086a6bc62e3361c3d3a2d63"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 176,
                    "digest": "sha256:afafa41235ea57b01b00eba47de1574777073a79c1d592c5709dfcbb3bd51f2a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302324,
                    "digest": "sha256:5593484900d3703f8e48e8d8b2c655313cae960ef0f59e5a59bbea1736e29551"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:6682f3bac3bd3144b0abdab1a15d89b6c4921b3434f7507bff7a6b8c63d82a8e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 75355936,
                    "digest": "sha256:ba0c3c8256af1500f0701735f0f01be61a07bd3eea9fd634f4ef54f3ee76b5eb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:a84ad746416aee8d369c1c2e0d632b3663012c1bd1fd186ef6926d2506443169"
                }
            ]
        },
        "1.10.8-alpine3.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4050,
                "digest": "sha256:64b464818185fcced5ca2eab3cb5ce86066077d4fb27de828b8a63d1201cc2ee"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1999171,
                    "digest": "sha256:f0599ed267cb750a3c0ebeb55004b5a818b7e9a7e8071b49e687d11349556868"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 176,
                    "digest": "sha256:8bfe4843495e56e3546d4d49cf476ee7bc1650156062151aa38cf3e2fb397a70"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 308700,
                    "digest": "sha256:7de396ee231a20f4b949f169676cbce7ec7cd606522c82df026b1deef45c9654"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:19b78d2e65f225fcff98267a322f03dde34e7cb833dd1c8790244d3544ae1fdc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 75232127,
                    "digest": "sha256:31450fc07ff6ae5e2bd387edbb74a62bbcdd0273e0541bccd657b5146ecd1a64"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 124,
                    "digest": "sha256:7ee60cc16ff2a981b821621a30aa642d3ea89d04710e86e5fd07104cf79a7407"
                }
            ]
        },
        "1.10.8-alpine3.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4051,
                "digest": "sha256:c4f7afc352ffb68d723da8f1c6824fff0f988cc25973f505e73dbb205ead9a02"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2099839,
                    "digest": "sha256:e3c488b39803d9194cf010f6127b1121d5387b90a1562d44b50b749d0e7a69bf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 176,
                    "digest": "sha256:05a63128803b1ea223f87244cb8d3faa97817f6cf3ca8249e485430218758510"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 308685,
                    "digest": "sha256:4fe3f66f9bc2a391ccc98b0ae2492dc28160ce2a5de9dc7057f36b2a88d42640"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:590d7dc3d210c2fa755e378743c66cdc4c9965179688e1fd1d1636cc3e111a32"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 75422968,
                    "digest": "sha256:b5274e7c978d49b6cb163b9e4c03119017c39845a36158554b425686ffbab161"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:e3aac5aa074a35b1ee8135ea42588472f7c1f8aeb13bd64e2530b1481c7961cc"
                }
            ]
        },
        "1.10.8-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4050,
                "digest": "sha256:df678efab2a2e36fee240fd5b0e0ddd3d9b10e211e58d192377b0c172a6b7929"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2687895,
                    "digest": "sha256:ee02fa18913c824d1d1c9b680f1a43dad343b9d6c086a6bc62e3361c3d3a2d63"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 176,
                    "digest": "sha256:afafa41235ea57b01b00eba47de1574777073a79c1d592c5709dfcbb3bd51f2a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302324,
                    "digest": "sha256:5593484900d3703f8e48e8d8b2c655313cae960ef0f59e5a59bbea1736e29551"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:6682f3bac3bd3144b0abdab1a15d89b6c4921b3434f7507bff7a6b8c63d82a8e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 75355936,
                    "digest": "sha256:ba0c3c8256af1500f0701735f0f01be61a07bd3eea9fd634f4ef54f3ee76b5eb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:a84ad746416aee8d369c1c2e0d632b3663012c1bd1fd186ef6926d2506443169"
                }
            ]
        },
        "1.10.8-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5466,
                "digest": "sha256:c497dff7c5b41a16801f9317e4e8de33bad5d9793fc50184c24a3d8eeacd1744"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43124977,
                    "digest": "sha256:12bb1c82b086301ca1c22eabf3add7cd229f27b63ca4b0924e2356051d9e7194"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9728878,
                    "digest": "sha256:730f6528b47c72f6dd5aabc947e8db01aa470adc3fdb4bbbcf052f9c3ad6ae8e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4093098,
                    "digest": "sha256:63b5f3607713f2dab247e619fafcffd7c9edf4aaffc9e701660a76ccf324b742"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48005411,
                    "digest": "sha256:5001a1d2fe2f54da8dbdfca56862dd05d37d1a2aab69599bcc2a130ea4fcd7f5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49018959,
                    "digest": "sha256:0cf7cff8d1540abf0037817a982ebb3302bbf09abae0be8a01c89ec883cc628a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 73988876,
                    "digest": "sha256:b0d402b29dd080ca2a00a496848baa4096f965fbe5b143233a4d6baf3f7fe90c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:454ba53876ce6d29c847740c9b760bcb5d98ee99720f2ef013b7a1eef0c90d41"
                }
            ]
        },
        "1.10beta1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2004,
                    "digest": "sha256:0495cc8cc651c9c720ec3c9260b1a7c46f77b4942e31dcd337ebc3b04b2f9abf",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                }
            ]
        },
        "1.10beta1-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4460,
                "digest": "sha256:fa9fe8c931282a424f9dc9700457ce1267f6140d5f15329ed596d141c8a6fa26"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1988857,
                    "digest": "sha256:b78042c299ad99d1e646b18762d4bc22a84c4f88e5bb491ea6293a10f53ddf79"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:6fd45b97b6c2a3ac869ae5c99e087e97bc29714b165180e06f0c9116f400f2dd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 308207,
                    "digest": "sha256:660093e5ae1b303373dac44a518743db0a535330a44f561a0b1c66c666b88102"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 497,
                    "digest": "sha256:bffe402b33d00e0372cb9e8768c6f493f63fe05b8e7fb2bae18739207ea05860"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 108553144,
                    "digest": "sha256:d544d7cb67525052df27c68381c7d0c9467460aab9f958262c88fde9bdbedc32"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:bd5c5aa440281686d828635cdb59f20cf8b7f4dd3fad5178032a9e9a7a27a903"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1358,
                    "digest": "sha256:b4697b74f75a4eed589582c839a32d4ef572c5905fa139bd957dfc4247274bcf"
                }
            ]
        },
        "1.10beta1-alpine3.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4460,
                "digest": "sha256:fa9fe8c931282a424f9dc9700457ce1267f6140d5f15329ed596d141c8a6fa26"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1988857,
                    "digest": "sha256:b78042c299ad99d1e646b18762d4bc22a84c4f88e5bb491ea6293a10f53ddf79"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:6fd45b97b6c2a3ac869ae5c99e087e97bc29714b165180e06f0c9116f400f2dd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 308207,
                    "digest": "sha256:660093e5ae1b303373dac44a518743db0a535330a44f561a0b1c66c666b88102"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 497,
                    "digest": "sha256:bffe402b33d00e0372cb9e8768c6f493f63fe05b8e7fb2bae18739207ea05860"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 108553144,
                    "digest": "sha256:d544d7cb67525052df27c68381c7d0c9467460aab9f958262c88fde9bdbedc32"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:bd5c5aa440281686d828635cdb59f20cf8b7f4dd3fad5178032a9e9a7a27a903"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1358,
                    "digest": "sha256:b4697b74f75a4eed589582c839a32d4ef572c5905fa139bd957dfc4247274bcf"
                }
            ]
        },
        "1.10beta1-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5786,
                "digest": "sha256:c330db7592efdf0f750a1f859a5b0bdf2974cfdd41fda4f80c9e1896d2a0a7ef"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42912813,
                    "digest": "sha256:91ea0aed359111bf5beb30e4bebd50fac25bc40a69e1bb3bf0f8e3c6dcd5fa7f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10066285,
                    "digest": "sha256:fc2797c29bc6ab5e2ad91b16dea60d7b6f0d4fffb5261f539870b43a7ffca40e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4087788,
                    "digest": "sha256:8edcd3d8093caa7ca86f40f4413c1ae7ca97ae1480289f06339fff174a2a7d6a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47983199,
                    "digest": "sha256:9ab5498df96eae5ccabdf778692dc41eeee09793f3792efadf0079545233069c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48935445,
                    "digest": "sha256:ad4e2722df7e740d51b766267b0ec38df71672a5b997802d45c67b8d0bdd2ce8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 171241170,
                    "digest": "sha256:7067bf548fed5e6b6f87d899723de298d1ac92ec042af370f05253e0a4791dd2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:04ebb576a30e6d71bfd0be6b939abfa9740400d5a89a7ed8db8b79a7b4958913"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1370,
                    "digest": "sha256:f91da48339f5d0b829d795d3cda5a22af6b9e9c3666dc4b02e0c2abcf0111b8f"
                }
            ]
        },
        "1.10beta2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2004,
                    "digest": "sha256:43d6dbdc3a6c7e90eb49ccb126ab3413a6876624b2b1816725995fdd5c9fafa6",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                }
            ]
        },
        "1.10beta2-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4458,
                "digest": "sha256:a8c780a935c6f5da0d05621f75c299e4728358d5bc3235392a0b4d66d93ddaf1"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1988857,
                    "digest": "sha256:b78042c299ad99d1e646b18762d4bc22a84c4f88e5bb491ea6293a10f53ddf79"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:6fd45b97b6c2a3ac869ae5c99e087e97bc29714b165180e06f0c9116f400f2dd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 308207,
                    "digest": "sha256:660093e5ae1b303373dac44a518743db0a535330a44f561a0b1c66c666b88102"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 496,
                    "digest": "sha256:3907e016b02f823ee5416c839dcfebc97f6b81bb9ade02e6b5ea5ec099f609d3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 108599761,
                    "digest": "sha256:dcec5a714b8fff0614c9e5aaf72ee2bbdfdbb2a38a4b75d9b73cf9903df12059"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:abaa076e4aaf18982829ad6898bf2040733464ba69c996185f00f1649e38399c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1355,
                    "digest": "sha256:cb2bba0d67a5940f2c91fccc0dfe4696858726e8188bf7ad8bed3ad12ece48df"
                }
            ]
        },
        "1.10beta2-alpine3.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4458,
                "digest": "sha256:a8c780a935c6f5da0d05621f75c299e4728358d5bc3235392a0b4d66d93ddaf1"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1988857,
                    "digest": "sha256:b78042c299ad99d1e646b18762d4bc22a84c4f88e5bb491ea6293a10f53ddf79"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:6fd45b97b6c2a3ac869ae5c99e087e97bc29714b165180e06f0c9116f400f2dd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 308207,
                    "digest": "sha256:660093e5ae1b303373dac44a518743db0a535330a44f561a0b1c66c666b88102"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 496,
                    "digest": "sha256:3907e016b02f823ee5416c839dcfebc97f6b81bb9ade02e6b5ea5ec099f609d3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 108599761,
                    "digest": "sha256:dcec5a714b8fff0614c9e5aaf72ee2bbdfdbb2a38a4b75d9b73cf9903df12059"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:abaa076e4aaf18982829ad6898bf2040733464ba69c996185f00f1649e38399c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1355,
                    "digest": "sha256:cb2bba0d67a5940f2c91fccc0dfe4696858726e8188bf7ad8bed3ad12ece48df"
                }
            ]
        },
        "1.10beta2-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5788,
                "digest": "sha256:2feca4f574886f7878ab9b5a39e4cae5d1faad64f00883771581ec3b3bcd6251"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42912813,
                    "digest": "sha256:91ea0aed359111bf5beb30e4bebd50fac25bc40a69e1bb3bf0f8e3c6dcd5fa7f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10066285,
                    "digest": "sha256:fc2797c29bc6ab5e2ad91b16dea60d7b6f0d4fffb5261f539870b43a7ffca40e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4087788,
                    "digest": "sha256:8edcd3d8093caa7ca86f40f4413c1ae7ca97ae1480289f06339fff174a2a7d6a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47983199,
                    "digest": "sha256:9ab5498df96eae5ccabdf778692dc41eeee09793f3792efadf0079545233069c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48935445,
                    "digest": "sha256:ad4e2722df7e740d51b766267b0ec38df71672a5b997802d45c67b8d0bdd2ce8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102448794,
                    "digest": "sha256:1218bad6d41ec6e3ca447f59f719d97143fd17f08ca97da96894b95a465671e2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:d9d1d8656a3f2a79354eb50f4f3a1d15a1670138aeaad7f91c2285e9b90300b9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1368,
                    "digest": "sha256:8bc336e3e5801a6f8c07c6ea95f7daf6cd508c8af2cd8c9500be02508d4a93b2"
                }
            ]
        },
        "1.10rc1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:310c13c5391d689ce89565d70ccbfc8c1d6f02cf46a67369061bac157d1e8062",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                }
            ]
        },
        "1.10rc1-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4122,
                "digest": "sha256:e017246ed8322c2cbf318638ed0c2b733a30159b3d66c903d6f95f0218b49642"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1988857,
                    "digest": "sha256:b78042c299ad99d1e646b18762d4bc22a84c4f88e5bb491ea6293a10f53ddf79"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:6fd45b97b6c2a3ac869ae5c99e087e97bc29714b165180e06f0c9116f400f2dd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 308207,
                    "digest": "sha256:660093e5ae1b303373dac44a518743db0a535330a44f561a0b1c66c666b88102"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 496,
                    "digest": "sha256:1be282baa2c998a6d63d229760a628e237b0a82c401904f9b1996dc0818584a4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 108651926,
                    "digest": "sha256:74ef5821ab1307ab0ffc36b126e1b6fc47f7dd111195f08fbbdca3b30c6921eb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:c9659a8fc88f8720820a2869d8fd9c566f424195fc9b0e41ecc7f8baee7580fe"
                }
            ]
        },
        "1.10rc1-alpine3.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4122,
                "digest": "sha256:e017246ed8322c2cbf318638ed0c2b733a30159b3d66c903d6f95f0218b49642"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1988857,
                    "digest": "sha256:b78042c299ad99d1e646b18762d4bc22a84c4f88e5bb491ea6293a10f53ddf79"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:6fd45b97b6c2a3ac869ae5c99e087e97bc29714b165180e06f0c9116f400f2dd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 308207,
                    "digest": "sha256:660093e5ae1b303373dac44a518743db0a535330a44f561a0b1c66c666b88102"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 496,
                    "digest": "sha256:1be282baa2c998a6d63d229760a628e237b0a82c401904f9b1996dc0818584a4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 108651926,
                    "digest": "sha256:74ef5821ab1307ab0ffc36b126e1b6fc47f7dd111195f08fbbdca3b30c6921eb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:c9659a8fc88f8720820a2869d8fd9c566f424195fc9b0e41ecc7f8baee7580fe"
                }
            ]
        },
        "1.10rc1-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5450,
                "digest": "sha256:6fe9cb273c5076b3b69f05e89747b0fefe98e152a8ca478fb571e58fc9833440"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42912813,
                    "digest": "sha256:91ea0aed359111bf5beb30e4bebd50fac25bc40a69e1bb3bf0f8e3c6dcd5fa7f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10066285,
                    "digest": "sha256:fc2797c29bc6ab5e2ad91b16dea60d7b6f0d4fffb5261f539870b43a7ffca40e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4087788,
                    "digest": "sha256:8edcd3d8093caa7ca86f40f4413c1ae7ca97ae1480289f06339fff174a2a7d6a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47983199,
                    "digest": "sha256:9ab5498df96eae5ccabdf778692dc41eeee09793f3792efadf0079545233069c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48935445,
                    "digest": "sha256:ad4e2722df7e740d51b766267b0ec38df71672a5b997802d45c67b8d0bdd2ce8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102510058,
                    "digest": "sha256:c52c02f1682bc1f371e0f8da89f47a0850c69693d8c6d9160f3ec71244791308"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:939d5efb188ddb51618cf74e663be0eb42df4e35f45c22449a93e6f3b48ba51d"
                }
            ]
        },
        "1.10rc2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:c33da2ac19b5dd38b0e93129a448339841baee36943477f155e069b2eae30853",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                }
            ]
        },
        "1.10rc2-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4120,
                "digest": "sha256:9e9005687667b4191cd1bbecacfba79d5485db5b727396b772a89b7127298ba2"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1988857,
                    "digest": "sha256:b78042c299ad99d1e646b18762d4bc22a84c4f88e5bb491ea6293a10f53ddf79"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:6fd45b97b6c2a3ac869ae5c99e087e97bc29714b165180e06f0c9116f400f2dd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 308207,
                    "digest": "sha256:660093e5ae1b303373dac44a518743db0a535330a44f561a0b1c66c666b88102"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 496,
                    "digest": "sha256:22d02b4b65e459d1878ff3eb1c3c892ee158382ce1cf2e105a6133240e3b356a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 109059266,
                    "digest": "sha256:c446b75e651c9913901f62cac8525e625dfdb7ddaa26b524bc626e371f906e7e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:438705627c89e01b48d1cbafe6e68633e72843d75ed52cb137f951b4c5183761"
                }
            ]
        },
        "1.10rc2-alpine3.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4120,
                "digest": "sha256:9e9005687667b4191cd1bbecacfba79d5485db5b727396b772a89b7127298ba2"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1988857,
                    "digest": "sha256:b78042c299ad99d1e646b18762d4bc22a84c4f88e5bb491ea6293a10f53ddf79"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:6fd45b97b6c2a3ac869ae5c99e087e97bc29714b165180e06f0c9116f400f2dd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 308207,
                    "digest": "sha256:660093e5ae1b303373dac44a518743db0a535330a44f561a0b1c66c666b88102"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 496,
                    "digest": "sha256:22d02b4b65e459d1878ff3eb1c3c892ee158382ce1cf2e105a6133240e3b356a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 109059266,
                    "digest": "sha256:c446b75e651c9913901f62cac8525e625dfdb7ddaa26b524bc626e371f906e7e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:438705627c89e01b48d1cbafe6e68633e72843d75ed52cb137f951b4c5183761"
                }
            ]
        },
        "1.10rc2-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5451,
                "digest": "sha256:25f0f5289924f291ec579b07d76953b24ca0eb0f82fc9ef7106e092eb94d3ca5"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42921910,
                    "digest": "sha256:b295e5c109fc9f55d14722eb26929ecc106cec04f7d37e867f7da008c53e293b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10066614,
                    "digest": "sha256:7310b14179e155997ab4625e06eb59600ea20b500835fe5bdca17a52d61e1c45"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4087808,
                    "digest": "sha256:785fa2a238ab89b203751335a74784cdb5ea9d78eabac46ce433ef327d7ff1db"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47983036,
                    "digest": "sha256:a6a434d283e1e20068621bb55d760d5ea6ba21944e93cd241761d5ebfd5cfdd3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48935360,
                    "digest": "sha256:cb4dab2b03cd9d53d1f581b793cd7497833b372d690ba645197374028cc06528"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102485624,
                    "digest": "sha256:71eabb0ad015850dcbd4e19e5d72acc248a5bc1bf0f66a65f53d378b45f6c9aa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:2d29767c2d1828d227075ebfb683ae6619a46837d1bbd6d950fdd0d5ea446ee8"
                }
            ]
        },
        "1.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:bda5ec13987ac58cd4263aaef2fd6bedb473e2e295c31715a367970917dffbf7",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                }
            ]
        },
        "1.11-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3806,
                "digest": "sha256:42d1448040e6a69a1e642298c3832c422718d0786227ddf153957fdab54e560c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2714631,
                    "digest": "sha256:29bddadc8f3fd6ed92c289e0dcd22e094833933a73609e78b7fa767d45731f9f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302343,
                    "digest": "sha256:02bb20f2603b4e336ffac319dd61e85e4e63af97199ba21ebf181f2c61e6c4ba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:b62863a3550beeacb2ef844092cf6d764e3fbb976f78243827ee4f7eb5955d26"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 104294331,
                    "digest": "sha256:9586258a13ea68cfc1f729cdbc9379ce294cbf565d04cff6b069accb2825200e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:a8b2cbafd68cf9109cfa0a2ff23ca36121bb1588ca57a7b3ef362cab67385763"
                }
            ]
        },
        "1.11-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3806,
                "digest": "sha256:42d1448040e6a69a1e642298c3832c422718d0786227ddf153957fdab54e560c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2714631,
                    "digest": "sha256:29bddadc8f3fd6ed92c289e0dcd22e094833933a73609e78b7fa767d45731f9f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302343,
                    "digest": "sha256:02bb20f2603b4e336ffac319dd61e85e4e63af97199ba21ebf181f2c61e6c4ba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:b62863a3550beeacb2ef844092cf6d764e3fbb976f78243827ee4f7eb5955d26"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 104294331,
                    "digest": "sha256:9586258a13ea68cfc1f729cdbc9379ce294cbf565d04cff6b069accb2825200e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:a8b2cbafd68cf9109cfa0a2ff23ca36121bb1588ca57a7b3ef362cab67385763"
                }
            ]
        },
        "1.11-alpine3.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4048,
                "digest": "sha256:acaeddb262088dfb4d797e5e0084acf78c4e530486516ce21dcbcf4ba95dcd80"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1999171,
                    "digest": "sha256:f0599ed267cb750a3c0ebeb55004b5a818b7e9a7e8071b49e687d11349556868"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 176,
                    "digest": "sha256:8bfe4843495e56e3546d4d49cf476ee7bc1650156062151aa38cf3e2fb397a70"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 308700,
                    "digest": "sha256:7de396ee231a20f4b949f169676cbce7ec7cd606522c82df026b1deef45c9654"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:19b78d2e65f225fcff98267a322f03dde34e7cb833dd1c8790244d3544ae1fdc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 104071944,
                    "digest": "sha256:fb09fd65ab513ac0652427e601daf6d63c251e3d2c4dd3bb2c2c01e5fdf6944c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:b19915079dff1251e51d2a3da45ac5e4257ec6d5de8de547a4999d8dc05bcaba"
                }
            ]
        },
        "1.11-alpine3.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3808,
                "digest": "sha256:2d039fb186eca3f3f9e2fbba6070a0c9e77eb532d5f401c6b3b7d9ab3200b1bf"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2099962,
                    "digest": "sha256:5011838a0b2d66c2c804ad057403a19bac7e263f0748579857f3ce4c0cbfc08c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301346,
                    "digest": "sha256:8a3534151df87991bc78315026c45de3aa2a6625f456bb16eba79f937705c06f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:92758f21fd5794d5d8ef8fa10616659bb3c87191d8fd563afb404675ab7369c8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 104312999,
                    "digest": "sha256:e0fd18ac40f790455569121a6ddedf7dd4f3cabb6df6d0f3af492a320c4d5c9b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:0d3fac003332aaa7834ee351724c343059768abb51cca6d3fbe99b2e52cbaf5c"
                }
            ]
        },
        "1.11-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3808,
                "digest": "sha256:970becc55da6f5d20aa22e04682daa8c894beb21846e1cdae7e9d160686fcba4"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2688779,
                    "digest": "sha256:0362ad1dd800a9d92f8982fa28f173f9120266153830f990f7486f44b068968a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302429,
                    "digest": "sha256:4add8f29bf03f3d6fce96396daad08e0039610b96925452697ea40933ec96ec4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:d2a54cdb6f8d9efb5c7906e854f297284c50db62dea68960f9665d4e134a2da6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 104689210,
                    "digest": "sha256:002b8843aeb0eb6c8189d3cd19f0f1e38065e0604601b247a1dad9e865526092"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:7688d3925be905fa71330f31e822c4e7c5ba3b52948f41ce2be239c1edc39e5c"
                }
            ]
        },
        "1.11-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5462,
                "digest": "sha256:ba3176cc61c283f8b9c1ff63b8281f20686788ada138df5ac9d66f3e5f07ce41"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49159939,
                    "digest": "sha256:2bb46725cbe6340fc7280f09cfba7e2f7961e9b721fcde54f0baed1acb6a84dd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7670652,
                    "digest": "sha256:a6300c19b571c63086aa2d4ff128ffcc4b8cc65154d8a1b6d93b00b70f903d20"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9967997,
                    "digest": "sha256:74cfc1e6fc76196d211b0b8cfa30397e632aa18eec1a3cf48fe5a66bccb01bd1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52105195,
                    "digest": "sha256:27a9a35b65b82670d951db67d8dd1df456740121cf57d1b46b582b115d9cfd02"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 62343321,
                    "digest": "sha256:97502322fb949dcd9c2ca4193861de953ac929e98701504a0db9576e0e7fdad7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 98945461,
                    "digest": "sha256:75abecabd798db72668e2b2c09efafe4bbc1283f5543a5df726b046f01feded6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:6796b3f252bf452214bd41d4a4e58b3c54e2152fbbaa71f074c0ab1334135da1"
                }
            ]
        },
        "1.11-rc": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:70f128a68499d73eab3c7db103befbe4544c6b464b869a02891f80dd39ec2f6f",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                }
            ]
        },
        "1.11-rc-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4178,
                "digest": "sha256:1a9df00e135de82a2eb07f99c8bcb258f24b82370fe27fb88ef3ec862a62621c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2099514,
                    "digest": "sha256:47e04371c99027fae42871b720fdc6cdddcb65062bfa05f0c3bb0a594cb5bbbd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 176,
                    "digest": "sha256:b4103359e1ecd9a7253d8b8a041d4e81db1ff4a5e1950bc0e02305d221c9e6c2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 308530,
                    "digest": "sha256:fdcf8e21e8f5edb742758a8dcd7868dc15b1b1ad2605c214d159d58216e7944a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:38e221838d317e50636dd30af1175c5672e49c137b7163688ad18fd895860a23"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 105359764,
                    "digest": "sha256:eeed04d1c549aea07d29f0089781dc710270f15617ea9d5ffaa8ac7c2b23c391"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 124,
                    "digest": "sha256:193d73a86ba80b6e4d40ecd461822f5e6fb088df13873057d1975dc5b25fa4c6"
                }
            ]
        },
        "1.11-rc-alpine3.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4176,
                "digest": "sha256:02a6f48fa45a024042bea075f81b4c031f28c6b9483afc572d194662a4a1dd98"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1988857,
                    "digest": "sha256:b78042c299ad99d1e646b18762d4bc22a84c4f88e5bb491ea6293a10f53ddf79"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:6fd45b97b6c2a3ac869ae5c99e087e97bc29714b165180e06f0c9116f400f2dd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 308213,
                    "digest": "sha256:61e0b1d8a4679a04839bcedd494b39879dc202e375f6f74d26f6bd80edff0363"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:226bcca23678813260f44b3560835eb92c99b7a375b8f4dd0e264c06496a201d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 104316890,
                    "digest": "sha256:e52e7aad95ca327aa78bdbe98854193749e71f6730372635e88e0a897dd1ca5b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:388edf977d9b7beea4a15b93f07566c838bc88fedf622d6f026502da0315bab8"
                }
            ]
        },
        "1.11-rc-alpine3.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4178,
                "digest": "sha256:1a9df00e135de82a2eb07f99c8bcb258f24b82370fe27fb88ef3ec862a62621c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2099514,
                    "digest": "sha256:47e04371c99027fae42871b720fdc6cdddcb65062bfa05f0c3bb0a594cb5bbbd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 176,
                    "digest": "sha256:b4103359e1ecd9a7253d8b8a041d4e81db1ff4a5e1950bc0e02305d221c9e6c2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 308530,
                    "digest": "sha256:fdcf8e21e8f5edb742758a8dcd7868dc15b1b1ad2605c214d159d58216e7944a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:38e221838d317e50636dd30af1175c5672e49c137b7163688ad18fd895860a23"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 105359764,
                    "digest": "sha256:eeed04d1c549aea07d29f0089781dc710270f15617ea9d5ffaa8ac7c2b23c391"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 124,
                    "digest": "sha256:193d73a86ba80b6e4d40ecd461822f5e6fb088df13873057d1975dc5b25fa4c6"
                }
            ]
        },
        "1.11-rc-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5466,
                "digest": "sha256:f803aa65b5c75d714660d59b66250d519b45a7e17adbd0d9a0ba3dd29d16d721"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43123568,
                    "digest": "sha256:24e48664c69560cde9534aadde23364122f1feb02b5db0ab3776983a4788ea63"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9690273,
                    "digest": "sha256:cbcf842c718cc953be45905967fc6a0114f55314ce412b80107e20d8b43fdcdb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4088491,
                    "digest": "sha256:317d79a9c0a5c766d03c1c253fa09f645ed7321dc3a80e0ae33599958677cd1d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48003327,
                    "digest": "sha256:a390be6b2f0349f7391582a305479410441bcb0329b8daa800d13f3921fd39b7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48989789,
                    "digest": "sha256:94a0d029b36d67dd678c31d091d0d1d44daae01a0f91a80445446578ffb01e49"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 100917641,
                    "digest": "sha256:b44b3dc68b83a19adc04a341a16caff58b63d1096f8dd5d78bbb28b202a0ab10"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:ef41cd36bfa54472610f3030a389e1263723ae4c965a251ec763dd2eedbcde27"
                }
            ]
        },
        "1.11-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5470,
                "digest": "sha256:1b2a395367a18ff377192f5bf10c028f5aceb8c1da2cf020b89b7fcb3482810f"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43140037,
                    "digest": "sha256:c9a9b339897414ebcb758c313024f2e0cdd97ccd184a2db5d2fd418c3c37bf86"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9737250,
                    "digest": "sha256:204078f7e04c7ae0e3fc1e45e88ad2cf14f9d83b2adc30919cd8ca34a215e6db"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4094297,
                    "digest": "sha256:d5243bb8f5f5e1041d372d7b9e139b07e15e943dd53d392ee5460eaf2ff10807"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48015197,
                    "digest": "sha256:88208471fb091b73106288a2afabb08dad9c90d405893044b5bbcb2440c2f895"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49069439,
                    "digest": "sha256:5baa258ee62f1d637ee26ba4b4543361bd5926183db013cf539395d6b48ef39e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 98945443,
                    "digest": "sha256:0c3166d14a021921a19a54fd50bf5dea5a3edc7448901d66a49ca05f1c72be64"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:0c696570797fffc667246558d9866f235ed07de993a985930593a86e9a98f4e3"
                }
            ]
        },
        "1.11.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:1fca9de167055fae85a30d95b5b582aec19f932fb1f554d950a5c40b4809b456",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                }
            ]
        },
        "1.11.0-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4040,
                "digest": "sha256:091526806b6403e3ef49c7f347a8e4d22305bc930a7724fa3f14c934b8e9bae7"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2099514,
                    "digest": "sha256:47e04371c99027fae42871b720fdc6cdddcb65062bfa05f0c3bb0a594cb5bbbd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 176,
                    "digest": "sha256:b4103359e1ecd9a7253d8b8a041d4e81db1ff4a5e1950bc0e02305d221c9e6c2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 308530,
                    "digest": "sha256:fdcf8e21e8f5edb742758a8dcd7868dc15b1b1ad2605c214d159d58216e7944a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:38e221838d317e50636dd30af1175c5672e49c137b7163688ad18fd895860a23"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 105359560,
                    "digest": "sha256:5c921117688e37d931bf703aca90e43f501860f49d1507d735a6e669edf104df"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:a5deed61837e72ae6a75baae67a4ac995ddf3c86bdf5a395eddda87cfd14a6d5"
                }
            ]
        },
        "1.11.0-alpine3.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4040,
                "digest": "sha256:75a3f4b64a580830f254ec025808f1c2c3629cb0200cfa8d932682f947f30573"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1988857,
                    "digest": "sha256:b78042c299ad99d1e646b18762d4bc22a84c4f88e5bb491ea6293a10f53ddf79"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:6fd45b97b6c2a3ac869ae5c99e087e97bc29714b165180e06f0c9116f400f2dd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 308213,
                    "digest": "sha256:61e0b1d8a4679a04839bcedd494b39879dc202e375f6f74d26f6bd80edff0363"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:226bcca23678813260f44b3560835eb92c99b7a375b8f4dd0e264c06496a201d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 104319724,
                    "digest": "sha256:3cc9d30da2913445cecf02290c1ac7a136c44c18b814d3120a63b09c0fa2a6ad"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:a74138da72850bbacfe6cb794f8d1b005d8e7d0e390d774e452995d38bc3177a"
                }
            ]
        },
        "1.11.0-alpine3.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4040,
                "digest": "sha256:091526806b6403e3ef49c7f347a8e4d22305bc930a7724fa3f14c934b8e9bae7"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2099514,
                    "digest": "sha256:47e04371c99027fae42871b720fdc6cdddcb65062bfa05f0c3bb0a594cb5bbbd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 176,
                    "digest": "sha256:b4103359e1ecd9a7253d8b8a041d4e81db1ff4a5e1950bc0e02305d221c9e6c2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 308530,
                    "digest": "sha256:fdcf8e21e8f5edb742758a8dcd7868dc15b1b1ad2605c214d159d58216e7944a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:38e221838d317e50636dd30af1175c5672e49c137b7163688ad18fd895860a23"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 105359560,
                    "digest": "sha256:5c921117688e37d931bf703aca90e43f501860f49d1507d735a6e669edf104df"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:a5deed61837e72ae6a75baae67a4ac995ddf3c86bdf5a395eddda87cfd14a6d5"
                }
            ]
        },
        "1.11.0-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5456,
                "digest": "sha256:1cd8141a7507325de0366103413a5c4a66ca3bbdcc87a34aa0444a976e4a52d9"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43123621,
                    "digest": "sha256:421608e4e92275f9265604523f9299cf5f4bd493a1ea3affd62c265b38fc8823"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9690090,
                    "digest": "sha256:185ac5864132647baf5fa26dfe782dbf1645944aca4a8e963d24572bb0b90007"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4088370,
                    "digest": "sha256:c69d98c830cad0499c1720f09b5ec6e3dde0f144f0b5ab1b555fa37e4eac6623"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48003320,
                    "digest": "sha256:40b9bb8999b31a6d7863b55aa60a4268cb0d6b948e0271befbdd3e6b81af462b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48991358,
                    "digest": "sha256:0546d5cb4171af2c7b87f1d2dc7cdba784d58621249381a5de577e03800824a6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 100914860,
                    "digest": "sha256:d5b37136f0a4dfde2417503ce6f62d41b00edd3408dfa8928dac0a7ece40f9af"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:44f31b42237f5f3edf523ea0cd5bd7590d3a434c19b63dfd76379afa0ce90425"
                }
            ]
        },
        "1.11.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:311e6ce0d12e300c6529a64cc3ad14692fe413d864082bfd81346eee949ced35",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                }
            ]
        },
        "1.11.1-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4045,
                "digest": "sha256:64494d960810201c1fc574062ce9b8ebd9ed6ac2db753a3371ae69444ba7ba25"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2099762,
                    "digest": "sha256:9941776d74c9129fd585b6f0434ba48bd3a7112d6736bc02e6d12f41153cab26"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 176,
                    "digest": "sha256:ae94b3cb7a1b2cef0ceffe3303cd03f83434d283aab43389e586b42bea00b358"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 308522,
                    "digest": "sha256:f9cdac08f3358dba836f2b7ded1fa5dc2150665abbe222782cae6cf449c3078f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:f2ef4ad6416adae80970c5edd8e49ff9040d95e018ae5ad3f51e6adc1acdcf87"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 104162475,
                    "digest": "sha256:9f144e0bc30fbc3ed397fddc336bcaa1275b329b4aed484e11a28ef39b97d75f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:1f49eff8e5e3dd799bc7b6c98c5827a78fe7c1da732e4159b8c8983b6bc6ab9d"
                }
            ]
        },
        "1.11.1-alpine3.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4045,
                "digest": "sha256:6de521244a4d6619f41d048cb40b7ecf77415be0f142a958d3fc2ef5f8a81b17"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1999171,
                    "digest": "sha256:f0599ed267cb750a3c0ebeb55004b5a818b7e9a7e8071b49e687d11349556868"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 176,
                    "digest": "sha256:9e2c71dece06bcd39f8fb81b4fae422241fd8bfca8b0cb16ea4bc4b77c87f4af"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 308549,
                    "digest": "sha256:ae3f4a1391079d7961eba2ea9cc2ce5e09a95517414bbb1dc7f40e72ca90c916"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:52bca2a75d67cfa50b1190b48b46fc51c5ff41026856301f450959c56e584737"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 103961534,
                    "digest": "sha256:2d6bd03ea046702f88ad96e6de97b07ab6352808809b25f127cbe8fa9e61c816"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:219553049931ecb9878fc95f5796744dd85effb2b63394f9c1d3d95c50698f9b"
                }
            ]
        },
        "1.11.1-alpine3.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4045,
                "digest": "sha256:64494d960810201c1fc574062ce9b8ebd9ed6ac2db753a3371ae69444ba7ba25"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2099762,
                    "digest": "sha256:9941776d74c9129fd585b6f0434ba48bd3a7112d6736bc02e6d12f41153cab26"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 176,
                    "digest": "sha256:ae94b3cb7a1b2cef0ceffe3303cd03f83434d283aab43389e586b42bea00b358"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 308522,
                    "digest": "sha256:f9cdac08f3358dba836f2b7ded1fa5dc2150665abbe222782cae6cf449c3078f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:f2ef4ad6416adae80970c5edd8e49ff9040d95e018ae5ad3f51e6adc1acdcf87"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 104162475,
                    "digest": "sha256:9f144e0bc30fbc3ed397fddc336bcaa1275b329b4aed484e11a28ef39b97d75f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:1f49eff8e5e3dd799bc7b6c98c5827a78fe7c1da732e4159b8c8983b6bc6ab9d"
                }
            ]
        },
        "1.11.1-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5463,
                "digest": "sha256:cf8983764edea891e0e5a4c95df68879126596de591b854b823baafb7cdd3104"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43123597,
                    "digest": "sha256:54fc83a09c68f915c1e318f4b118a467a545027084dd28edbdfded4ea6772e9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9690405,
                    "digest": "sha256:742d3549b4ad9fe47f3e3bf2ee373b97068548f65584a6d259dfa601721e2f51"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4088398,
                    "digest": "sha256:a6c71b9867c5efaf04365448a7b025ba50a926e7c1daae8ee9e73b149b322ae8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48004319,
                    "digest": "sha256:572533d310055ca506af51db699ecddf742195aa194d408e0e44da0f97ce4bca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48992926,
                    "digest": "sha256:8f4e29e656e8a32f148d73a40b5ccb0ebbc5d414ece9bb318dc16a3062a68b86"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 100955848,
                    "digest": "sha256:115be12bea0876105cc48756b949faa3f9349f23ad341ca53efe8a03e03797a1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:f5ce563cc84bf27328bf84677515823f7fc91bdbb808136cfa5e7bc855dd46f7"
                }
            ]
        },
        "1.11.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:bdac8243f3c1e4878c12062b622ca1134a62185d58533b2b70c75172ca0e2c72",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                }
            ]
        },
        "1.11.10-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3806,
                "digest": "sha256:a511cc97635e8f52d9adfc398b7804fc66e3a3535fa58cdd06e69e105db4d6a5"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2688779,
                    "digest": "sha256:0362ad1dd800a9d92f8982fa28f173f9120266153830f990f7486f44b068968a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302328,
                    "digest": "sha256:fe9432f2aaa2016cb694649036ccbf719ec50f9da197c29121a52e526eeab427"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:069c84dac03098298a9585b075d2eec3eacfccf465c151989aefd9d50b4f350f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 104236907,
                    "digest": "sha256:28a2338d672a287e79f3bc2c72b819f3803ee410004d3a25d6e49fb70cc9e4cd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:5a0d99062305019f6c809c08fd1c9fd5ab412312507172f2aae23f4b4f7f41c7"
                }
            ]
        },
        "1.11.10-alpine3.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3807,
                "digest": "sha256:c2da34508e7e720aa568f99e93b03869ac16e538128504890827e751a2c26e92"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2099962,
                    "digest": "sha256:5011838a0b2d66c2c804ad057403a19bac7e263f0748579857f3ce4c0cbfc08c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 308678,
                    "digest": "sha256:0e9eb8e797e17db753997b4892011458d989c9b685cee355e121fd17625d0e4c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:0170af6e7bc5db4105674275f40b4b24bf61c19a5c36550b981be9b848df9ac5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 104314019,
                    "digest": "sha256:e9623fbe1a1a019741c99a57107676bf78dfadfffc818d593aa51b53aa56deca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 123,
                    "digest": "sha256:8c824f83837b9244ba0c7ed026a10c000736d817b1abceb34e5e5bfbe02a7b77"
                }
            ]
        },
        "1.11.10-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3806,
                "digest": "sha256:a511cc97635e8f52d9adfc398b7804fc66e3a3535fa58cdd06e69e105db4d6a5"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2688779,
                    "digest": "sha256:0362ad1dd800a9d92f8982fa28f173f9120266153830f990f7486f44b068968a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302328,
                    "digest": "sha256:fe9432f2aaa2016cb694649036ccbf719ec50f9da197c29121a52e526eeab427"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:069c84dac03098298a9585b075d2eec3eacfccf465c151989aefd9d50b4f350f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 104236907,
                    "digest": "sha256:28a2338d672a287e79f3bc2c72b819f3803ee410004d3a25d6e49fb70cc9e4cd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:5a0d99062305019f6c809c08fd1c9fd5ab412312507172f2aae23f4b4f7f41c7"
                }
            ]
        },
        "1.11.10-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5469,
                "digest": "sha256:3fc78cb672d915db6f1ff2ebf0c203b31224f116d2c0130eb9c27270491cf40e"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43141955,
                    "digest": "sha256:5894e28291972e44f5c3eba2779a85979bae6f95ed4f3e43ea5c98a132f06c48"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9733078,
                    "digest": "sha256:7a8e6888cee6fef7c223eeaf2ca4c51bc0c21b4631971f416eb6a529a05e96cb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4094187,
                    "digest": "sha256:8bf90e854779f4c5edab378626d847fd0ab7aa9441b63a7db31a7db55d2b255b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48007708,
                    "digest": "sha256:a4c8eeecda6963793a99084385756365c2667fd778c50971ef0fad4ea8936805"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49069964,
                    "digest": "sha256:cd4a52520a2c55d5ed38e6ad4da9a27712951a7c47a72cfc21e0fb9aeae14119"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 98916483,
                    "digest": "sha256:ad65587d750f2d73893eec51687a626db089614acf38a05cdc75b07141295848"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:d1383ed0aa80f8c9d977e8147026421b7dc3d05a9cc1661e2526e7a1eeed0196"
                }
            ]
        },
        "1.11.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:5be85f2c2cb79d36916b9b265c5913daa9c25774ac2ef894cbde8d846d8f69a4",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                }
            ]
        },
        "1.11.11-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3808,
                "digest": "sha256:da0ba1e6bc7209cf6d7cfed409acca9a5a7d49fe062c1eda81943c11b2462364"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2714576,
                    "digest": "sha256:54e94bcddc88729dd11dea70b3489452e71c2d5f846551f59fdeb807af4319d7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302344,
                    "digest": "sha256:43582c0db3f3b37f7cd4c9cf946d061a36e286fb74408d73da8920c1ef65c156"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:9fe16242a9df16c896f29039c844a1995bd938c52af0d952541de26815dbe49b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 104270921,
                    "digest": "sha256:09382360191a709f696326696402f92deb2988b3daad1039858de30cb581bbc5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:b35eabfe67492992bd56f41b7fb214664f8b7d4e878836f7563e840a390c6f97"
                }
            ]
        },
        "1.11.11-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3808,
                "digest": "sha256:da0ba1e6bc7209cf6d7cfed409acca9a5a7d49fe062c1eda81943c11b2462364"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2714576,
                    "digest": "sha256:54e94bcddc88729dd11dea70b3489452e71c2d5f846551f59fdeb807af4319d7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302344,
                    "digest": "sha256:43582c0db3f3b37f7cd4c9cf946d061a36e286fb74408d73da8920c1ef65c156"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:9fe16242a9df16c896f29039c844a1995bd938c52af0d952541de26815dbe49b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 104270921,
                    "digest": "sha256:09382360191a709f696326696402f92deb2988b3daad1039858de30cb581bbc5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:b35eabfe67492992bd56f41b7fb214664f8b7d4e878836f7563e840a390c6f97"
                }
            ]
        },
        "1.11.11-alpine3.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3808,
                "digest": "sha256:2d039fb186eca3f3f9e2fbba6070a0c9e77eb532d5f401c6b3b7d9ab3200b1bf"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2099962,
                    "digest": "sha256:5011838a0b2d66c2c804ad057403a19bac7e263f0748579857f3ce4c0cbfc08c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301346,
                    "digest": "sha256:8a3534151df87991bc78315026c45de3aa2a6625f456bb16eba79f937705c06f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:92758f21fd5794d5d8ef8fa10616659bb3c87191d8fd563afb404675ab7369c8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 104312999,
                    "digest": "sha256:e0fd18ac40f790455569121a6ddedf7dd4f3cabb6df6d0f3af492a320c4d5c9b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:0d3fac003332aaa7834ee351724c343059768abb51cca6d3fbe99b2e52cbaf5c"
                }
            ]
        },
        "1.11.11-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3807,
                "digest": "sha256:7f3059c15e4519532fde026bdcbe9d9a90e27ad5c5b7d7a56065cbc5784d6d7b"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2688779,
                    "digest": "sha256:0362ad1dd800a9d92f8982fa28f173f9120266153830f990f7486f44b068968a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302429,
                    "digest": "sha256:4add8f29bf03f3d6fce96396daad08e0039610b96925452697ea40933ec96ec4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:d2a54cdb6f8d9efb5c7906e854f297284c50db62dea68960f9665d4e134a2da6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 104233012,
                    "digest": "sha256:25e50a98bd44706cfac7ab9a4ae4c772dec3c51a5210d744f9d1834a22266af5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:bbe8376b6961fbacaed5e83fe8629c568502768050887603d3c940d4b6818a20"
                }
            ]
        },
        "1.11.11-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5469,
                "digest": "sha256:a2a1a53d0bec946aad91092c989f75596d20c9eede235446bb912360274caf6c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43141955,
                    "digest": "sha256:5894e28291972e44f5c3eba2779a85979bae6f95ed4f3e43ea5c98a132f06c48"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9734083,
                    "digest": "sha256:4579724c1a9cbbeb91053f719bf515654043a3e39cfaa248ebedc84c2f0460ea"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4094360,
                    "digest": "sha256:a493ac681ca78302ad6a97cd01e4daa5f1d995f0523f5e5cb8306071eea417b5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48014844,
                    "digest": "sha256:b62257d11a8d1d6b3d34cb19071cd773c444414427778315b21faf5c9c6364cb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49069929,
                    "digest": "sha256:59efdaebff44d5c03ceb4d772513c2cc099eb3238b8d73f647e0f3af85708c1e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 98916364,
                    "digest": "sha256:76607f742e5da5bac5a712279af57991bcbaa562a2355f66973c37a8dfb0a843"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:4c23a3febddbdf42a17e2129992747a5306be03ef55956cee6b9e05acd7f93f1"
                }
            ]
        },
        "1.11.12": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:36445ba808b1ec0fd93483f99f9daf8e52c1c2779cef7afc15eb0c3e89997394",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                }
            ]
        },
        "1.11.12-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3808,
                "digest": "sha256:a212a5c20edd07cf1101978cc2cc1d450f8bae26b4676cb92a7c35387ee94777"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2714682,
                    "digest": "sha256:31c29410a04898f7aed30f526990fced7d2a158513930c32fb05dbed3e8518da"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302341,
                    "digest": "sha256:9b5dd0f2942e459f52d14046ea05f6ca100b74875b2f06f14ad079e515505d7b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:75ab2a0fde49b0b869506d1c8e7de398732caae28fe0cb5e3742baef09ab8369"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 104294059,
                    "digest": "sha256:ec28a54c789f0564b8e9f7dd8097217062f9c8de160a3e599eb322a0c1fc00d4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 157,
                    "digest": "sha256:5808515985383be2e5400dd70d74bceae256e367cf95bcdfb60243b355133e24"
                }
            ]
        },
        "1.11.12-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3808,
                "digest": "sha256:a212a5c20edd07cf1101978cc2cc1d450f8bae26b4676cb92a7c35387ee94777"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2714682,
                    "digest": "sha256:31c29410a04898f7aed30f526990fced7d2a158513930c32fb05dbed3e8518da"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302341,
                    "digest": "sha256:9b5dd0f2942e459f52d14046ea05f6ca100b74875b2f06f14ad079e515505d7b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:75ab2a0fde49b0b869506d1c8e7de398732caae28fe0cb5e3742baef09ab8369"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 104294059,
                    "digest": "sha256:ec28a54c789f0564b8e9f7dd8097217062f9c8de160a3e599eb322a0c1fc00d4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 157,
                    "digest": "sha256:5808515985383be2e5400dd70d74bceae256e367cf95bcdfb60243b355133e24"
                }
            ]
        },
        "1.11.12-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3808,
                "digest": "sha256:1aa1178aa12934db7e682672b7c6d65a709aebdb0b52d78291cf89937164e588"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2688779,
                    "digest": "sha256:0362ad1dd800a9d92f8982fa28f173f9120266153830f990f7486f44b068968a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302429,
                    "digest": "sha256:4add8f29bf03f3d6fce96396daad08e0039610b96925452697ea40933ec96ec4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:d2a54cdb6f8d9efb5c7906e854f297284c50db62dea68960f9665d4e134a2da6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 104253888,
                    "digest": "sha256:920236d3911075e46dad12db7a24f38d59bf45b5cc976fde388f6784fa803e59"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:848f2db877f5e579573087c279feb7a0f06380d374bb6eb2d9ed09ba7362a7bd"
                }
            ]
        },
        "1.11.12-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5462,
                "digest": "sha256:b8694e1c93eab66564cc282ce80d21f0e61d6c68517cea551785076d0a8a7756"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49160681,
                    "digest": "sha256:93ca09dc2355118335e16ab94b73274654d4abc5b160ee04fecc1c94744be017"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7670687,
                    "digest": "sha256:b8f2c0941fe25937d14459d6d384b32ff5443f433d94d0bbe8b015acbbad8b56"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9968053,
                    "digest": "sha256:4461ed91c06d5a8502c596782bef4bad7060b2fa698abd6700bda9004fb59a00"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52105172,
                    "digest": "sha256:3c63032b1bc42f92f977e6051590a3585fa6aa803d604b72370fe58c41ac4812"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 62341060,
                    "digest": "sha256:703cb430940c151106dd33cb8033220e8aa851f1a4fbceb4442900fc3ba6005c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 98936646,
                    "digest": "sha256:82f8fd25e26a22106d1ff1e0c3b73aab2ab5c981e8860e7158b0bdaec26a5530"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:525d6a160782a284cd80c3fe5fbc9c76c2d4bd64cf835b09cb32dec162b04c4f"
                }
            ]
        },
        "1.11.12-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5470,
                "digest": "sha256:bb20c68aa437e382fa922500ada18341267ce65b4c3858180341107ce9ac515f"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43142770,
                    "digest": "sha256:8518ba3cff7c9ea93a23c2c2d853bec62efe57d658c99413492fe93d56637297"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9737235,
                    "digest": "sha256:457256b895a8a9338a3cc73f7711af983f35b66b3f6df14bfeba5a7263fbe1e0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4094312,
                    "digest": "sha256:da853daaff69acbafe85d56c95c0e30d5b43cdf2cd12a7bc7683e227670f556d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48014484,
                    "digest": "sha256:a1e0c24b32066c5eec0e779ca1c6230f9b55c449102e06da5fbbadb9aa02ed01"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49069158,
                    "digest": "sha256:717a9bc7f023717f6eaa755e8afec4f34e73ebdfe43cc0ff1b96aaae30a092fd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 98936699,
                    "digest": "sha256:af98a8fd0c60a2c4fac4c741fddb295accd51ae3db3d00e14a85c6f9ebc729e7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:81b75e184506e0d6eba246983f629cc98a9bd0eb8fd6764e55601fbcdf517086"
                }
            ]
        },
        "1.11.13": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:bda5ec13987ac58cd4263aaef2fd6bedb473e2e295c31715a367970917dffbf7",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                }
            ]
        },
        "1.11.13-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3806,
                "digest": "sha256:42d1448040e6a69a1e642298c3832c422718d0786227ddf153957fdab54e560c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2714631,
                    "digest": "sha256:29bddadc8f3fd6ed92c289e0dcd22e094833933a73609e78b7fa767d45731f9f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302343,
                    "digest": "sha256:02bb20f2603b4e336ffac319dd61e85e4e63af97199ba21ebf181f2c61e6c4ba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:b62863a3550beeacb2ef844092cf6d764e3fbb976f78243827ee4f7eb5955d26"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 104294331,
                    "digest": "sha256:9586258a13ea68cfc1f729cdbc9379ce294cbf565d04cff6b069accb2825200e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:a8b2cbafd68cf9109cfa0a2ff23ca36121bb1588ca57a7b3ef362cab67385763"
                }
            ]
        },
        "1.11.13-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3806,
                "digest": "sha256:42d1448040e6a69a1e642298c3832c422718d0786227ddf153957fdab54e560c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2714631,
                    "digest": "sha256:29bddadc8f3fd6ed92c289e0dcd22e094833933a73609e78b7fa767d45731f9f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302343,
                    "digest": "sha256:02bb20f2603b4e336ffac319dd61e85e4e63af97199ba21ebf181f2c61e6c4ba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:b62863a3550beeacb2ef844092cf6d764e3fbb976f78243827ee4f7eb5955d26"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 104294331,
                    "digest": "sha256:9586258a13ea68cfc1f729cdbc9379ce294cbf565d04cff6b069accb2825200e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:a8b2cbafd68cf9109cfa0a2ff23ca36121bb1588ca57a7b3ef362cab67385763"
                }
            ]
        },
        "1.11.13-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3808,
                "digest": "sha256:970becc55da6f5d20aa22e04682daa8c894beb21846e1cdae7e9d160686fcba4"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2688779,
                    "digest": "sha256:0362ad1dd800a9d92f8982fa28f173f9120266153830f990f7486f44b068968a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302429,
                    "digest": "sha256:4add8f29bf03f3d6fce96396daad08e0039610b96925452697ea40933ec96ec4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:d2a54cdb6f8d9efb5c7906e854f297284c50db62dea68960f9665d4e134a2da6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 104689210,
                    "digest": "sha256:002b8843aeb0eb6c8189d3cd19f0f1e38065e0604601b247a1dad9e865526092"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:7688d3925be905fa71330f31e822c4e7c5ba3b52948f41ce2be239c1edc39e5c"
                }
            ]
        },
        "1.11.13-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5462,
                "digest": "sha256:ba3176cc61c283f8b9c1ff63b8281f20686788ada138df5ac9d66f3e5f07ce41"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49159939,
                    "digest": "sha256:2bb46725cbe6340fc7280f09cfba7e2f7961e9b721fcde54f0baed1acb6a84dd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7670652,
                    "digest": "sha256:a6300c19b571c63086aa2d4ff128ffcc4b8cc65154d8a1b6d93b00b70f903d20"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9967997,
                    "digest": "sha256:74cfc1e6fc76196d211b0b8cfa30397e632aa18eec1a3cf48fe5a66bccb01bd1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52105195,
                    "digest": "sha256:27a9a35b65b82670d951db67d8dd1df456740121cf57d1b46b582b115d9cfd02"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 62343321,
                    "digest": "sha256:97502322fb949dcd9c2ca4193861de953ac929e98701504a0db9576e0e7fdad7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 98945461,
                    "digest": "sha256:75abecabd798db72668e2b2c09efafe4bbc1283f5543a5df726b046f01feded6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:6796b3f252bf452214bd41d4a4e58b3c54e2152fbbaa71f074c0ab1334135da1"
                }
            ]
        },
        "1.11.13-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5470,
                "digest": "sha256:1b2a395367a18ff377192f5bf10c028f5aceb8c1da2cf020b89b7fcb3482810f"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43140037,
                    "digest": "sha256:c9a9b339897414ebcb758c313024f2e0cdd97ccd184a2db5d2fd418c3c37bf86"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9737250,
                    "digest": "sha256:204078f7e04c7ae0e3fc1e45e88ad2cf14f9d83b2adc30919cd8ca34a215e6db"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4094297,
                    "digest": "sha256:d5243bb8f5f5e1041d372d7b9e139b07e15e943dd53d392ee5460eaf2ff10807"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48015197,
                    "digest": "sha256:88208471fb091b73106288a2afabb08dad9c90d405893044b5bbcb2440c2f895"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49069439,
                    "digest": "sha256:5baa258ee62f1d637ee26ba4b4543361bd5926183db013cf539395d6b48ef39e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 98945443,
                    "digest": "sha256:0c3166d14a021921a19a54fd50bf5dea5a3edc7448901d66a49ca05f1c72be64"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:0c696570797fffc667246558d9866f235ed07de993a985930593a86e9a98f4e3"
                }
            ]
        },
        "1.11.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:8ced9b503d7e6a957ba2e26cefa383a3757ad9dc90792770075f076322555de9",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                }
            ]
        },
        "1.11.2-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4045,
                "digest": "sha256:e9f1c2e4616324dc8d9a4ef8610e3612d991c513ea257da3d3844ccce29ba688"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2099762,
                    "digest": "sha256:9941776d74c9129fd585b6f0434ba48bd3a7112d6736bc02e6d12f41153cab26"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 176,
                    "digest": "sha256:ae94b3cb7a1b2cef0ceffe3303cd03f83434d283aab43389e586b42bea00b358"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 308522,
                    "digest": "sha256:f9cdac08f3358dba836f2b7ded1fa5dc2150665abbe222782cae6cf449c3078f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:f2ef4ad6416adae80970c5edd8e49ff9040d95e018ae5ad3f51e6adc1acdcf87"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 104172002,
                    "digest": "sha256:7c28cae007f44350698a766ac5e8bcb1c72478438485eb4d55746506cad72ebf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:7f4241e504e8bc5bd5600c549f1e165dabc320e89cb10800f468198d23f91672"
                }
            ]
        },
        "1.11.2-alpine3.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4046,
                "digest": "sha256:b35a5c08af16a61b4a37f5e227df3bd336b30593a0dab42bf32407b18837f021"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1999171,
                    "digest": "sha256:f0599ed267cb750a3c0ebeb55004b5a818b7e9a7e8071b49e687d11349556868"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 176,
                    "digest": "sha256:9e2c71dece06bcd39f8fb81b4fae422241fd8bfca8b0cb16ea4bc4b77c87f4af"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 308549,
                    "digest": "sha256:ae3f4a1391079d7961eba2ea9cc2ce5e09a95517414bbb1dc7f40e72ca90c916"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:52bca2a75d67cfa50b1190b48b46fc51c5ff41026856301f450959c56e584737"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 103974714,
                    "digest": "sha256:754b8fbf176c33734454b9c0de8841c4967b6614fc43d761ca30970dcc8fd53f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:c9d49108ffee2e2354a8a0d95295248f75f7953af955fda7ca2595ed0b70ee6a"
                }
            ]
        },
        "1.11.2-alpine3.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4045,
                "digest": "sha256:e9f1c2e4616324dc8d9a4ef8610e3612d991c513ea257da3d3844ccce29ba688"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2099762,
                    "digest": "sha256:9941776d74c9129fd585b6f0434ba48bd3a7112d6736bc02e6d12f41153cab26"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 176,
                    "digest": "sha256:ae94b3cb7a1b2cef0ceffe3303cd03f83434d283aab43389e586b42bea00b358"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 308522,
                    "digest": "sha256:f9cdac08f3358dba836f2b7ded1fa5dc2150665abbe222782cae6cf449c3078f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:f2ef4ad6416adae80970c5edd8e49ff9040d95e018ae5ad3f51e6adc1acdcf87"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 104172002,
                    "digest": "sha256:7c28cae007f44350698a766ac5e8bcb1c72478438485eb4d55746506cad72ebf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:7f4241e504e8bc5bd5600c549f1e165dabc320e89cb10800f468198d23f91672"
                }
            ]
        },
        "1.11.2-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5461,
                "digest": "sha256:7e47af1fecb46df2bd96ccbbf1bd51be4343c4f7e1c77e55ee9e0b0d9abd7230"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43116700,
                    "digest": "sha256:4f3698b9865b00fa6eb7e0d3d11692c31eb0dc455aa6ab111d965bae67726698"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9690286,
                    "digest": "sha256:3d136331294ced7de67c8e4bea8c807c347632c0aa25c4ec2ae6a7a3e346d6c1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4093102,
                    "digest": "sha256:44c15aa4d980e5d3689a8a8099f7d79fb667611239aab1dfa5447b52f0a24934"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48005019,
                    "digest": "sha256:ccbf6d1a95604486762f28db0d78dc2d0ee4ce93752f9f63500a2a5a1ccccbad"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49018741,
                    "digest": "sha256:3681e096a338a349b77c8333fb6f6f2b4877b86734a75c8645efb9da7394c939"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 100128773,
                    "digest": "sha256:29f576303c8e69981a61014be1cb3f1e7376973f4554900ffca01dae26b6b152"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:9909667a6403847e47891be6f1a3afab09a05021af3204cd3a0d14a94246ecd5"
                }
            ]
        },
        "1.11.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:f604f9b26eb73340dbb81d7acf1e3d3711e515b9bd6af403692bc718128b3ff3",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                }
            ]
        },
        "1.11.3-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4044,
                "digest": "sha256:e6ab67a2239a0251a64f6e2e209036da50d505d9c60b821b8e451e9d14c43ad7"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2099762,
                    "digest": "sha256:9941776d74c9129fd585b6f0434ba48bd3a7112d6736bc02e6d12f41153cab26"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 176,
                    "digest": "sha256:ae94b3cb7a1b2cef0ceffe3303cd03f83434d283aab43389e586b42bea00b358"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 308522,
                    "digest": "sha256:f9cdac08f3358dba836f2b7ded1fa5dc2150665abbe222782cae6cf449c3078f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:f2ef4ad6416adae80970c5edd8e49ff9040d95e018ae5ad3f51e6adc1acdcf87"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 104187239,
                    "digest": "sha256:70b13041a9613301655c8a6128f1dfdf3dabd5546c8e3d2c4f166e92f81dd340"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:5d7ff682cf52519948658ba03e8ced9f3abc7b3a2a8397d33c43e0eed1c6fc57"
                }
            ]
        },
        "1.11.3-alpine3.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4046,
                "digest": "sha256:c23eea1ab4e09424e609ca5dfa6c4492ee347475803e6d30adfd5d9f7e91d856"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1999171,
                    "digest": "sha256:f0599ed267cb750a3c0ebeb55004b5a818b7e9a7e8071b49e687d11349556868"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 176,
                    "digest": "sha256:9e2c71dece06bcd39f8fb81b4fae422241fd8bfca8b0cb16ea4bc4b77c87f4af"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 308549,
                    "digest": "sha256:ae3f4a1391079d7961eba2ea9cc2ce5e09a95517414bbb1dc7f40e72ca90c916"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:52bca2a75d67cfa50b1190b48b46fc51c5ff41026856301f450959c56e584737"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 103982841,
                    "digest": "sha256:38635d26af79b34f88d2e5c09af21361431c066bb359ebe50b6914aecd7315f3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:694163079cd5792717f0d81b67af75ffa7d68c8474416ea03610a9e8e7f4a9d1"
                }
            ]
        },
        "1.11.3-alpine3.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4044,
                "digest": "sha256:e6ab67a2239a0251a64f6e2e209036da50d505d9c60b821b8e451e9d14c43ad7"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2099762,
                    "digest": "sha256:9941776d74c9129fd585b6f0434ba48bd3a7112d6736bc02e6d12f41153cab26"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 176,
                    "digest": "sha256:ae94b3cb7a1b2cef0ceffe3303cd03f83434d283aab43389e586b42bea00b358"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 308522,
                    "digest": "sha256:f9cdac08f3358dba836f2b7ded1fa5dc2150665abbe222782cae6cf449c3078f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:f2ef4ad6416adae80970c5edd8e49ff9040d95e018ae5ad3f51e6adc1acdcf87"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 104187239,
                    "digest": "sha256:70b13041a9613301655c8a6128f1dfdf3dabd5546c8e3d2c4f166e92f81dd340"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:5d7ff682cf52519948658ba03e8ced9f3abc7b3a2a8397d33c43e0eed1c6fc57"
                }
            ]
        },
        "1.11.3-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5460,
                "digest": "sha256:db7dab93005d848b7a814dc385276c50c749073bcfa39475832474fb42be2d8b"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43116700,
                    "digest": "sha256:4f3698b9865b00fa6eb7e0d3d11692c31eb0dc455aa6ab111d965bae67726698"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9690286,
                    "digest": "sha256:3d136331294ced7de67c8e4bea8c807c347632c0aa25c4ec2ae6a7a3e346d6c1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4093102,
                    "digest": "sha256:44c15aa4d980e5d3689a8a8099f7d79fb667611239aab1dfa5447b52f0a24934"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48005019,
                    "digest": "sha256:ccbf6d1a95604486762f28db0d78dc2d0ee4ce93752f9f63500a2a5a1ccccbad"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49018741,
                    "digest": "sha256:3681e096a338a349b77c8333fb6f6f2b4877b86734a75c8645efb9da7394c939"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 100139776,
                    "digest": "sha256:30427bf992805e8b68986ff9e2640737458f9a7c0e0ff07318e0f35f6a7aea70"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 127,
                    "digest": "sha256:e898fefcf1498714dafcf31067430ced5626eed781ace66bda281d2e4b34e377"
                }
            ]
        },
        "1.11.4": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:9b6bf7d175b4304989063262182c8ba13c9af6e435eeb8243af105b9db3c4eb8",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                }
            ]
        },
        "1.11.4-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4051,
                "digest": "sha256:7f6577231b7e946c8d7bb8bc75b45e27e67c50248e1a065d94e833efcdd564f2"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2099839,
                    "digest": "sha256:e3c488b39803d9194cf010f6127b1121d5387b90a1562d44b50b749d0e7a69bf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 176,
                    "digest": "sha256:05a63128803b1ea223f87244cb8d3faa97817f6cf3ca8249e485430218758510"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 308685,
                    "digest": "sha256:4fe3f66f9bc2a391ccc98b0ae2492dc28160ce2a5de9dc7057f36b2a88d42640"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:590d7dc3d210c2fa755e378743c66cdc4c9965179688e1fd1d1636cc3e111a32"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 104285869,
                    "digest": "sha256:9daf5b337ee833eb51a54ec0b147151aff57520e2a23cf83838507484e04f3d5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:bd0c547eca34dbfd399847effd15e05aa08039a1de1f5d91c6a9c8f6f8010b06"
                }
            ]
        },
        "1.11.4-alpine3.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4048,
                "digest": "sha256:458677915dbb5293e7a466bead0cffebcf014f2a559905949ff17a6f2f3e532e"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1999171,
                    "digest": "sha256:f0599ed267cb750a3c0ebeb55004b5a818b7e9a7e8071b49e687d11349556868"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 176,
                    "digest": "sha256:8bfe4843495e56e3546d4d49cf476ee7bc1650156062151aa38cf3e2fb397a70"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 308700,
                    "digest": "sha256:7de396ee231a20f4b949f169676cbce7ec7cd606522c82df026b1deef45c9654"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:19b78d2e65f225fcff98267a322f03dde34e7cb833dd1c8790244d3544ae1fdc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 104071739,
                    "digest": "sha256:3b653c73272ab1919cd7c34f535c785f1d701dcd830b1b1c9dc52ca13faa21b4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:a1db1c41fdfe239a9db598744fc2bb7172a2dab83819542c3ffde2f1c7c5a140"
                }
            ]
        },
        "1.11.4-alpine3.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4051,
                "digest": "sha256:7f6577231b7e946c8d7bb8bc75b45e27e67c50248e1a065d94e833efcdd564f2"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2099839,
                    "digest": "sha256:e3c488b39803d9194cf010f6127b1121d5387b90a1562d44b50b749d0e7a69bf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 176,
                    "digest": "sha256:05a63128803b1ea223f87244cb8d3faa97817f6cf3ca8249e485430218758510"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 308685,
                    "digest": "sha256:4fe3f66f9bc2a391ccc98b0ae2492dc28160ce2a5de9dc7057f36b2a88d42640"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:590d7dc3d210c2fa755e378743c66cdc4c9965179688e1fd1d1636cc3e111a32"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 104285869,
                    "digest": "sha256:9daf5b337ee833eb51a54ec0b147151aff57520e2a23cf83838507484e04f3d5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:bd0c547eca34dbfd399847effd15e05aa08039a1de1f5d91c6a9c8f6f8010b06"
                }
            ]
        },
        "1.11.4-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5465,
                "digest": "sha256:bea6c74f7b9cd390e7e7c58732badfeab3eec1434802407419834455848615b5"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43116478,
                    "digest": "sha256:ed1ec7511bfa23f7413f2fc49fb5b111ef33638df9a60111a2c282a2f78a7653"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9728682,
                    "digest": "sha256:adb2bf3fc8884b0bfbf3d5317df5126bdd1911341a1d0736bca48b0043d81785"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4093166,
                    "digest": "sha256:795dadfe0a1e898d47690c9839194ddb1373266c1883d742f4b8d5872be25b8c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48005935,
                    "digest": "sha256:b3909cbce85809e95cb66a5b6e819717d1857f55a876c03fa1d9e885c2b0d9a2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49018881,
                    "digest": "sha256:7bf622939e59cc96f37899fb464f752773cbe8b3eac84625231477e1eb522d00"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 100243305,
                    "digest": "sha256:2828191ea171ab87f83069ddf508261ce64e8c61225eed133145b81179332f2d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:8a768dd443f723841985460a8e16f0734c51daa1badae78f3bbc96104b718426"
                }
            ]
        },
        "1.11.5": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:fca5942d04c98e3c7bf37512156be3423ac5afa2d28572d1c30abb20606e14ee",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                }
            ]
        },
        "1.11.5-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3804,
                "digest": "sha256:15f992f004506c92ae928aac28ef7fc6be81380fe7d653515d145fac5fcdaedd"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2687939,
                    "digest": "sha256:3b00a3925ee4b356facd24aea8ece58982a66577023cb3596ce3a321aef976f9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302317,
                    "digest": "sha256:7809c1a4c8e2fd286895f69d067b1a68841f9311a5c0e1afc51e64e57d777919"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:8c00b1d46f4493b4bfe8c94c6226da7c7c76820ecc2f4b70e6a482d4fdaaca34"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 104196372,
                    "digest": "sha256:8adeebab029162a905bfcdf8448edab8ff3778f68078bd3e55e9dcb55ff4a1a3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:014a37224007c665851eb9d985cfd3ab16adc697ebbab635e6d365d92e8ebaf9"
                }
            ]
        },
        "1.11.5-alpine3.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4048,
                "digest": "sha256:acaeddb262088dfb4d797e5e0084acf78c4e530486516ce21dcbcf4ba95dcd80"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1999171,
                    "digest": "sha256:f0599ed267cb750a3c0ebeb55004b5a818b7e9a7e8071b49e687d11349556868"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 176,
                    "digest": "sha256:8bfe4843495e56e3546d4d49cf476ee7bc1650156062151aa38cf3e2fb397a70"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 308700,
                    "digest": "sha256:7de396ee231a20f4b949f169676cbce7ec7cd606522c82df026b1deef45c9654"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:19b78d2e65f225fcff98267a322f03dde34e7cb833dd1c8790244d3544ae1fdc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 104071944,
                    "digest": "sha256:fb09fd65ab513ac0652427e601daf6d63c251e3d2c4dd3bb2c2c01e5fdf6944c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:b19915079dff1251e51d2a3da45ac5e4257ec6d5de8de547a4999d8dc05bcaba"
                }
            ]
        },
        "1.11.5-alpine3.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3805,
                "digest": "sha256:253fc93ca477253257f816158124952329bf761d943dc7e06fbf18895b4ef299"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2099962,
                    "digest": "sha256:5011838a0b2d66c2c804ad057403a19bac7e263f0748579857f3ce4c0cbfc08c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 308678,
                    "digest": "sha256:0e9eb8e797e17db753997b4892011458d989c9b685cee355e121fd17625d0e4c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:0170af6e7bc5db4105674275f40b4b24bf61c19a5c36550b981be9b848df9ac5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 104287319,
                    "digest": "sha256:87bd90d3c1aec579b341781d1fac8780621b9f65105511cf0bcb83b6e838b289"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:8cb6277bd9fa1ad6b6012eba5aa40120ebb3cf48a85ddc3b62aaa6d90f6a0710"
                }
            ]
        },
        "1.11.5-alpine3.9": {
            "schemaVersion": 1,
            "name": "arm64v8/golang",
            "tag": "1.11.5-alpine3.9",
            "architecture": "arm64",
            "fsLayers": [
                {
                    "blobSum": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                },
                {
                    "blobSum": "sha256:014a37224007c665851eb9d985cfd3ab16adc697ebbab635e6d365d92e8ebaf9"
                },
                {
                    "blobSum": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                },
                {
                    "blobSum": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                },
                {
                    "blobSum": "sha256:8adeebab029162a905bfcdf8448edab8ff3778f68078bd3e55e9dcb55ff4a1a3"
                },
                {
                    "blobSum": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                },
                {
                    "blobSum": "sha256:8c00b1d46f4493b4bfe8c94c6226da7c7c76820ecc2f4b70e6a482d4fdaaca34"
                },
                {
                    "blobSum": "sha256:7809c1a4c8e2fd286895f69d067b1a68841f9311a5c0e1afc51e64e57d777919"
                },
                {
                    "blobSum": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                },
                {
                    "blobSum": "sha256:3b00a3925ee4b356facd24aea8ece58982a66577023cb3596ce3a321aef976f9"
                }
            ],
            "history": [
                {
                    "v1Compatibility": "{\"architecture\":\"arm64\",\"config\":{\"Hostname\":\"\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\",\"GOLANG_VERSION=1.11.5\",\"GOPATH=/go\"],\"Cmd\":[\"/bin/sh\"],\"ArgsEscaped\":true,\"Image\":\"sha256:ba37a8ffc64cd808dd800527a1a40524f88542b50933bb6e716e617e1227a05a\",\"Volumes\":null,\"WorkingDir\":\"/go\",\"Entrypoint\":null,\"OnBuild\":null,\"Labels\":null},\"container\":\"88d3b83390656ec9ecc3ccadcc94adaffe5084b02a0851c099840636972f68a7\",\"container_config\":{\"Hostname\":\"88d3b8339065\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\",\"GOLANG_VERSION=1.11.5\",\"GOPATH=/go\"],\"Cmd\":[\"/bin/sh\",\"-c\",\"#(nop) WORKDIR /go\"],\"ArgsEscaped\":true,\"Image\":\"sha256:ba37a8ffc64cd808dd800527a1a40524f88542b50933bb6e716e617e1227a05a\",\"Volumes\":null,\"WorkingDir\":\"/go\",\"Entrypoint\":null,\"OnBuild\":null,\"Labels\":{}},\"created\":\"2019-03-08T11:57:01.718789171Z\",\"docker_version\":\"18.06.1-ce\",\"id\":\"e6051aba0a201a272922f9bce5d432d0a3091ff055ab528193ca56d2feae7d85\",\"os\":\"linux\",\"parent\":\"6c72206235e4052632513f64e97ea6f61090a7a6c6889eb3a016aef76ad57875\",\"throwaway\":true}"
                },
                {
                    "v1Compatibility": "{\"id\":\"6c72206235e4052632513f64e97ea6f61090a7a6c6889eb3a016aef76ad57875\",\"parent\":\"77dadfcd2bfcd88d9c0fc544b8e0a033aa6beb4b12d04fe4821aa15ce5ba5af9\",\"created\":\"2019-03-08T11:57:01.062143805Z\",\"container_config\":{\"Cmd\":[\"/bin/sh -c mkdir -p \\\"$GOPATH/src\\\" \\\"$GOPATH/bin\\\" \\u0026\\u0026 chmod -R 777 \\\"$GOPATH\\\"\"]}}"
                },
                {
                    "v1Compatibility": "{\"id\":\"77dadfcd2bfcd88d9c0fc544b8e0a033aa6beb4b12d04fe4821aa15ce5ba5af9\",\"parent\":\"51e043068b9d378128aad35627c2750ad84648d25ea33f5982f10061d0195a5a\",\"created\":\"2019-03-08T11:56:58.781840778Z\",\"container_config\":{\"Cmd\":[\"/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"]},\"throwaway\":true}"
                },
                {
                    "v1Compatibility": "{\"id\":\"51e043068b9d378128aad35627c2750ad84648d25ea33f5982f10061d0195a5a\",\"parent\":\"3f2f495b618109105eadc36fe4ed6dfab78f5f0656c01a0923e7154839b7e27d\",\"created\":\"2019-03-08T11:56:58.096511671Z\",\"container_config\":{\"Cmd\":[\"/bin/sh -c #(nop)  ENV GOPATH=/go\"]},\"throwaway\":true}"
                },
                {
                    "v1Compatibility": "{\"id\":\"3f2f495b618109105eadc36fe4ed6dfab78f5f0656c01a0923e7154839b7e27d\",\"parent\":\"4b2169d3eca5bb263a7efee9cbcf4083f06246591af00f6eeb73ad0d1cf5fa81\",\"created\":\"2019-03-08T11:56:56.800825161Z\",\"container_config\":{\"Cmd\":[\"/bin/sh -c set -eux; \\tapk add --no-cache --virtual .build-deps \\t\\tbash \\t\\tgcc \\t\\tmusl-dev \\t\\topenssl \\t\\tgo \\t; \\texport \\t\\tGOROOT_BOOTSTRAP=\\\"$(go env GOROOT)\\\" \\t\\tGOOS=\\\"$(go env GOOS)\\\" \\t\\tGOARCH=\\\"$(go env GOARCH)\\\" \\t\\tGOHOSTOS=\\\"$(go env GOHOSTOS)\\\" \\t\\tGOHOSTARCH=\\\"$(go env GOHOSTARCH)\\\" \\t; \\tapkArch=\\\"$(apk --print-arch)\\\"; \\tcase \\\"$apkArch\\\" in \\t\\tarmhf) export GOARM='6' ;; \\t\\tx86) export GO386='387' ;; \\tesac; \\t\\twget -O go.tgz \\\"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\\\"; \\techo 'bc1ef02bb1668835db1390a2e478dcbccb5dd16911691af9d75184bbe5aa943e *go.tgz' | sha256sum -c -; \\ttar -C /usr/local -xzf go.tgz; \\trm go.tgz; \\t\\tcd /usr/local/go/src; \\t./make.bash; \\t\\trm -rf \\t\\t/usr/local/go/pkg/bootstrap \\t\\t/usr/local/go/pkg/obj \\t; \\tapk del .build-deps; \\t\\texport PATH=\\\"/usr/local/go/bin:$PATH\\\"; \\tgo version\"]}}"
                },
                {
                    "v1Compatibility": "{\"id\":\"4b2169d3eca5bb263a7efee9cbcf4083f06246591af00f6eeb73ad0d1cf5fa81\",\"parent\":\"d69c342d74d62e189f9907b261ef2a31f9ee6b6fcd56a1c776240b153007acbd\",\"created\":\"2019-03-08T11:54:01.447497622Z\",\"container_config\":{\"Cmd\":[\"/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.5\"]},\"throwaway\":true}"
                },
                {
                    "v1Compatibility": "{\"id\":\"d69c342d74d62e189f9907b261ef2a31f9ee6b6fcd56a1c776240b153007acbd\",\"parent\":\"74dd26dd28635f3636b3acddf926cd1aa9d6ee78c8ebdc82bfa370d35fb3d66c\",\"created\":\"2019-03-08T04:18:49.827739314Z\",\"container_config\":{\"Cmd\":[\"/bin/sh -c [ ! -e /etc/nsswitch.conf ] \\u0026\\u0026 echo 'hosts: files dns' \\u003e /etc/nsswitch.conf\"]}}"
                },
                {
                    "v1Compatibility": "{\"id\":\"74dd26dd28635f3636b3acddf926cd1aa9d6ee78c8ebdc82bfa370d35fb3d66c\",\"parent\":\"d87eeca418a5419a906b26dbf81f46714f243f09c39bab5345879edc069f69bc\",\"created\":\"2019-03-08T04:18:47.872266951Z\",\"container_config\":{\"Cmd\":[\"/bin/sh -c apk add --no-cache \\t\\tca-certificates\"]}}"
                },
                {
                    "v1Compatibility": "{\"id\":\"d87eeca418a5419a906b26dbf81f46714f243f09c39bab5345879edc069f69bc\",\"parent\":\"e33d8b08bafc7e871f29bc3145e028e5a23b3845949bf7fc3a957863f3814cfd\",\"created\":\"2019-03-08T03:37:02.050813908Z\",\"container_config\":{\"Cmd\":[\"/bin/sh -c #(nop)  CMD [\\\"/bin/sh\\\"]\"]},\"throwaway\":true}"
                },
                {
                    "v1Compatibility": "{\"id\":\"e33d8b08bafc7e871f29bc3145e028e5a23b3845949bf7fc3a957863f3814cfd\",\"created\":\"2019-03-08T03:37:01.50193332Z\",\"container_config\":{\"Cmd\":[\"/bin/sh -c #(nop) ADD file:2e80d7b240ac8c544a868180a2a08b2533c450061e0ec276ceacaff7b87a380c in / \"]}}"
                }
            ],
            "signatures": [
                {
                    "header": {
                        "jwk": {
                            "crv": "P-256",
                            "kid": "MNOL:WIP7:JSII:AJZH:ZGWM:EXTR:KICF:6Q2V:GQAI:5374:2C3Y:OWB6",
                            "kty": "EC",
                            "x": "q6hpEr9l-jRT_zDQ0EVRFSMxGfQlN33pjI2-WqGMSFQ",
                            "y": "bVgbsR0wD9XO7umPfWSakk0qaDsHM2CQa7Qg3HTsryU"
                        },
                        "alg": "ES256"
                    },
                    "signature": "_MaT4s7NEZF_BfQz0zeg8ihahFFdNbwpPCVs42yGgF23zqcFmruoqdvNLf4n8UKBeJQZZdODRSwvf9lP9Xd12Q",
                    "protected": "eyJmb3JtYXRMZW5ndGgiOjY5ODUsImZvcm1hdFRhaWwiOiJDbjAiLCJ0aW1lIjoiMjAyNC0wNS0zMFQwNzoxMzo1NFoifQ"
                }
            ]
        },
        "1.11.5-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5466,
                "digest": "sha256:2ebb6a3ab711ef6777f670b85d6e22755d7a3392fb2b720ff6b7ae54d43eff53"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43131855,
                    "digest": "sha256:fe62b3d54b9c915735c759d5d36826088c3c05a73dec307a4ec4cb502ad034ff"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9730480,
                    "digest": "sha256:08a498920bfeb2353594e13055200f3227c4992da6fb9617197ee55ebd4a723c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4094079,
                    "digest": "sha256:9bb8191548b27dfce511beab0eb0f4a401e160544b2f893ba98c3dc794636c53"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48007524,
                    "digest": "sha256:63fe741ca3c91de7331744358ee1d4543b1be55d55bdde318da27773bc8522fd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49040166,
                    "digest": "sha256:c368251da4e353f7bc04d4ea781a9d270c881887c23658b39faa239afd8b28f0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 98886519,
                    "digest": "sha256:9c7640956adf3e40c00307751fa2f9badefe8004ede00783d4052289c051fc0b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:eec748eacde119cde3fe3afd6fbc63990848a0b17bb5be7ca78d0de0031a4aa3"
                }
            ]
        },
        "1.11.6": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:aee2f9d1cdfb2bbe2cc411c0608a4f0601988931423b5c137c8b59c61262a97d",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                }
            ]
        },
        "1.11.6-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3803,
                "digest": "sha256:633b87b4d6fcdc8c7abb1f15d195e84ea4d95cfd71cbb08145cf94f1ce8ac7e6"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2687939,
                    "digest": "sha256:3b00a3925ee4b356facd24aea8ece58982a66577023cb3596ce3a321aef976f9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302317,
                    "digest": "sha256:7809c1a4c8e2fd286895f69d067b1a68841f9311a5c0e1afc51e64e57d777919"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:8c00b1d46f4493b4bfe8c94c6226da7c7c76820ecc2f4b70e6a482d4fdaaca34"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 104233990,
                    "digest": "sha256:4c744ccc86d3c2917bf69f66d39eff9baac13e2c67d267be58a81019a1f9ce3e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:b14d6bc4066797040a1dbcc10b0809499a8dada8c75c239913289548e28ced9d"
                }
            ]
        },
        "1.11.6-alpine3.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3805,
                "digest": "sha256:6bcd2d070c2313ba47a32df7cbb3f8502cc3b391772b66619f70c103f51920bd"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2099962,
                    "digest": "sha256:5011838a0b2d66c2c804ad057403a19bac7e263f0748579857f3ce4c0cbfc08c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 308678,
                    "digest": "sha256:0e9eb8e797e17db753997b4892011458d989c9b685cee355e121fd17625d0e4c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:0170af6e7bc5db4105674275f40b4b24bf61c19a5c36550b981be9b848df9ac5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 104305775,
                    "digest": "sha256:b4d23dd55d9497f98665f1baedd45b9b9c7edccf07820f07263c146097fb5dfe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:e6cfd7198cc4a7d6a099f670f4fb78479e0592d25bba100bc9caefb9fc3f203e"
                }
            ]
        },
        "1.11.6-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3803,
                "digest": "sha256:633b87b4d6fcdc8c7abb1f15d195e84ea4d95cfd71cbb08145cf94f1ce8ac7e6"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2687939,
                    "digest": "sha256:3b00a3925ee4b356facd24aea8ece58982a66577023cb3596ce3a321aef976f9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302317,
                    "digest": "sha256:7809c1a4c8e2fd286895f69d067b1a68841f9311a5c0e1afc51e64e57d777919"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:8c00b1d46f4493b4bfe8c94c6226da7c7c76820ecc2f4b70e6a482d4fdaaca34"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 104233990,
                    "digest": "sha256:4c744ccc86d3c2917bf69f66d39eff9baac13e2c67d267be58a81019a1f9ce3e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:b14d6bc4066797040a1dbcc10b0809499a8dada8c75c239913289548e28ced9d"
                }
            ]
        },
        "1.11.6-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5461,
                "digest": "sha256:d8e63b62e998ca2cbcea6673023e530905dc4ccc406d4c4a9e3116ecf1f250cd"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43132000,
                    "digest": "sha256:5385e634d2a1a330aea59f510b0676b269167a579dddb586b27917d80d0dfd01"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9730463,
                    "digest": "sha256:6696bae2f570e0c96dcb21308e525216796d3452d1a9b8dcaba168ba37f3f464"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4094072,
                    "digest": "sha256:6dca82770cb3702e9c92d2f155923c0fb55671c1c373b8b50640b7bf05ed8418"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48007546,
                    "digest": "sha256:d95e88827e80fd1e7c7d0a78bc734615833dd6ac19b07c1ad3b8b1c837bb4ece"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49040317,
                    "digest": "sha256:e8c58b43df76f1b8296622ae933fc04f8121c30de2a54b600b871c66c36dc78d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 98913729,
                    "digest": "sha256:efad2dfba29c4aa405ffec2d586a600fdb9ce2a5c8f82d10d337e20a0cfb8504"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:3ed0eea7cda86ea3f629f6a6461c888af6b772ea2570cdfa05b9a2befd112111"
                }
            ]
        },
        "1.11.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:576837c49d9513cb0cc506c87329bb4e27deb5859bcbeabf657cc69c756649ef",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                }
            ]
        },
        "1.11.7-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3803,
                "digest": "sha256:875094106c5cdf90add517836181ae37ad614ef2dab0b7d7ac89ea6e08250ccd"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2687939,
                    "digest": "sha256:3b00a3925ee4b356facd24aea8ece58982a66577023cb3596ce3a321aef976f9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302317,
                    "digest": "sha256:7809c1a4c8e2fd286895f69d067b1a68841f9311a5c0e1afc51e64e57d777919"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:8c00b1d46f4493b4bfe8c94c6226da7c7c76820ecc2f4b70e6a482d4fdaaca34"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 104659117,
                    "digest": "sha256:63e197f6f0a4fe389d92e2b13b7c10239c4cf19261afec54c049cba4f821a649"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:b1723719eee02ab647058c537cfebdb10e73fe902a27edfb1ad77286286e682b"
                }
            ]
        },
        "1.11.7-alpine3.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3805,
                "digest": "sha256:4fa4f2af17379dc1261acd8edb9387328517d03a709aedfe5d13021a713eb86b"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2099962,
                    "digest": "sha256:5011838a0b2d66c2c804ad057403a19bac7e263f0748579857f3ce4c0cbfc08c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 308678,
                    "digest": "sha256:0e9eb8e797e17db753997b4892011458d989c9b685cee355e121fd17625d0e4c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:0170af6e7bc5db4105674275f40b4b24bf61c19a5c36550b981be9b848df9ac5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 104305899,
                    "digest": "sha256:ecad1d83961121212c5bb7d2d43402e46ee97c36f3f1b64c7f921a3a9315b536"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:413cdcbf58eaaae8fa6185949ae8caa15cc3c1b188aeb74012466d59bf2cf34d"
                }
            ]
        },
        "1.11.7-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3803,
                "digest": "sha256:875094106c5cdf90add517836181ae37ad614ef2dab0b7d7ac89ea6e08250ccd"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2687939,
                    "digest": "sha256:3b00a3925ee4b356facd24aea8ece58982a66577023cb3596ce3a321aef976f9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302317,
                    "digest": "sha256:7809c1a4c8e2fd286895f69d067b1a68841f9311a5c0e1afc51e64e57d777919"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:8c00b1d46f4493b4bfe8c94c6226da7c7c76820ecc2f4b70e6a482d4fdaaca34"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 104659117,
                    "digest": "sha256:63e197f6f0a4fe389d92e2b13b7c10239c4cf19261afec54c049cba4f821a649"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:b1723719eee02ab647058c537cfebdb10e73fe902a27edfb1ad77286286e682b"
                }
            ]
        },
        "1.11.7-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5464,
                "digest": "sha256:97e9e952fbe4106c2e5025b1f939b3ccee54f85dc99015075d2a37e740867501"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43132000,
                    "digest": "sha256:5385e634d2a1a330aea59f510b0676b269167a579dddb586b27917d80d0dfd01"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9730463,
                    "digest": "sha256:6696bae2f570e0c96dcb21308e525216796d3452d1a9b8dcaba168ba37f3f464"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4094072,
                    "digest": "sha256:6dca82770cb3702e9c92d2f155923c0fb55671c1c373b8b50640b7bf05ed8418"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48007546,
                    "digest": "sha256:d95e88827e80fd1e7c7d0a78bc734615833dd6ac19b07c1ad3b8b1c837bb4ece"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49040317,
                    "digest": "sha256:e8c58b43df76f1b8296622ae933fc04f8121c30de2a54b600b871c66c36dc78d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 98914741,
                    "digest": "sha256:e0aa17dd7134f9dfc887fd4716bf3929ee5827007307ad1fff74985868ead1ad"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:f69db27adc2c75ca22b9ee38844218e5b812688bc19ad8f95739100337279f5b"
                }
            ]
        },
        "1.11.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:f25e4dc7cea55f6a0791d0fde4ecdcb0a74cc0df859ac4540f9b3ad74e429dbc",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                }
            ]
        },
        "1.11.8-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3805,
                "digest": "sha256:ea22e5db3c11d7bf9a88b337a47a4e116d4c877554d4aecb117fbdb0aac4650f"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2688778,
                    "digest": "sha256:6f37394be673296a0fdc21b819c5df40431baf7d3af121bee451726dd1457493"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302320,
                    "digest": "sha256:624d8cd5989279cea7781d46cf9e54248dc5914b85a54e5f3dda694c3dc0aec4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:ecff0f4f34353de2916477d55f845eedaf0354998b8a77494fb80ae3c6c3aa36"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 104236012,
                    "digest": "sha256:9669014a6226fb51179fa0e3e282c19384cf6b5f213e5da1df019a8de52fab3b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:e3084baead1ed6cc7869ddb57143a297a9b91367b7ffcb04f3f0e75d57fd1a4f"
                }
            ]
        },
        "1.11.8-alpine3.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3805,
                "digest": "sha256:104c0c1a68d8c4c442d8715ad986f8c87ae17d1e7d1b2a04cff2047c25d371c9"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2099962,
                    "digest": "sha256:5011838a0b2d66c2c804ad057403a19bac7e263f0748579857f3ce4c0cbfc08c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 308678,
                    "digest": "sha256:0e9eb8e797e17db753997b4892011458d989c9b685cee355e121fd17625d0e4c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:0170af6e7bc5db4105674275f40b4b24bf61c19a5c36550b981be9b848df9ac5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 104310094,
                    "digest": "sha256:2c118a5628e145429b832b2e0954c8902bdb8e2f2cf9a4a8816c10cbf595342d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 124,
                    "digest": "sha256:6c7aad5a06c4172cd398230c96738c05b2b890bf3b45a3c4f5365a61c4e0a7d4"
                }
            ]
        },
        "1.11.8-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3805,
                "digest": "sha256:ea22e5db3c11d7bf9a88b337a47a4e116d4c877554d4aecb117fbdb0aac4650f"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2688778,
                    "digest": "sha256:6f37394be673296a0fdc21b819c5df40431baf7d3af121bee451726dd1457493"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302320,
                    "digest": "sha256:624d8cd5989279cea7781d46cf9e54248dc5914b85a54e5f3dda694c3dc0aec4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:ecff0f4f34353de2916477d55f845eedaf0354998b8a77494fb80ae3c6c3aa36"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 104236012,
                    "digest": "sha256:9669014a6226fb51179fa0e3e282c19384cf6b5f213e5da1df019a8de52fab3b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:e3084baead1ed6cc7869ddb57143a297a9b91367b7ffcb04f3f0e75d57fd1a4f"
                }
            ]
        },
        "1.11.8-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5461,
                "digest": "sha256:dd74e3e8c544d91dbe4c66adea040b3c0a7b073480323bd5c5fbba607d5b60bd"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43132000,
                    "digest": "sha256:5385e634d2a1a330aea59f510b0676b269167a579dddb586b27917d80d0dfd01"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9730463,
                    "digest": "sha256:6696bae2f570e0c96dcb21308e525216796d3452d1a9b8dcaba168ba37f3f464"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4094072,
                    "digest": "sha256:6dca82770cb3702e9c92d2f155923c0fb55671c1c373b8b50640b7bf05ed8418"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48007546,
                    "digest": "sha256:d95e88827e80fd1e7c7d0a78bc734615833dd6ac19b07c1ad3b8b1c837bb4ece"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49040317,
                    "digest": "sha256:e8c58b43df76f1b8296622ae933fc04f8121c30de2a54b600b871c66c36dc78d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 98914315,
                    "digest": "sha256:97802e660d470211f418970e501c02b0260b3ac32923344f39741ad32d20ad57"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:28a008f0978287ec6a0e8d45083ca1647d711eeb2f906e08e7868e3f51e5c515"
                }
            ]
        },
        "1.11.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:c08837436f48c834b97a9ce27b86a4f9ce7b4224e41727cb44f1e1433e860bbf",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                }
            ]
        },
        "1.11.9-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3805,
                "digest": "sha256:dc33dcf6b56c79c4cef4f7f88886fecd82d0f4fb2127bd65b44b5f1491c2aca7"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2688778,
                    "digest": "sha256:6f37394be673296a0fdc21b819c5df40431baf7d3af121bee451726dd1457493"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302320,
                    "digest": "sha256:624d8cd5989279cea7781d46cf9e54248dc5914b85a54e5f3dda694c3dc0aec4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:ecff0f4f34353de2916477d55f845eedaf0354998b8a77494fb80ae3c6c3aa36"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 104234887,
                    "digest": "sha256:69fbc39639a518c712f627bbb51c97fdffe4dddf71ac9b6d718db85c7200e355"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:63ed52b50e75fb297f98da1cccfdc1808cb0ee410b89a1c134adb44a4da308da"
                }
            ]
        },
        "1.11.9-alpine3.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3803,
                "digest": "sha256:a6e71836c8c346c325cba8b26d89de0fd6c942358325654ef8a1288410eb6c8d"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2099962,
                    "digest": "sha256:5011838a0b2d66c2c804ad057403a19bac7e263f0748579857f3ce4c0cbfc08c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 308678,
                    "digest": "sha256:0e9eb8e797e17db753997b4892011458d989c9b685cee355e121fd17625d0e4c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:0170af6e7bc5db4105674275f40b4b24bf61c19a5c36550b981be9b848df9ac5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 104308073,
                    "digest": "sha256:52a8c499a102e6b7dda5141b63a312316c9749929817532ba1f2b03e23b221fb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:59b0051d85e0866a3b81337eb04f8d1e902730836be5ec41760e14ee9c22ef51"
                }
            ]
        },
        "1.11.9-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3805,
                "digest": "sha256:dc33dcf6b56c79c4cef4f7f88886fecd82d0f4fb2127bd65b44b5f1491c2aca7"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2688778,
                    "digest": "sha256:6f37394be673296a0fdc21b819c5df40431baf7d3af121bee451726dd1457493"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302320,
                    "digest": "sha256:624d8cd5989279cea7781d46cf9e54248dc5914b85a54e5f3dda694c3dc0aec4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:ecff0f4f34353de2916477d55f845eedaf0354998b8a77494fb80ae3c6c3aa36"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 104234887,
                    "digest": "sha256:69fbc39639a518c712f627bbb51c97fdffe4dddf71ac9b6d718db85c7200e355"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:63ed52b50e75fb297f98da1cccfdc1808cb0ee410b89a1c134adb44a4da308da"
                }
            ]
        },
        "1.11.9-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5464,
                "digest": "sha256:6a1e4b2e8fa93efec94a32fd4819a5d6b4ae38acc26d20a7aa691b79ba63df2f"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43132000,
                    "digest": "sha256:5385e634d2a1a330aea59f510b0676b269167a579dddb586b27917d80d0dfd01"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9730463,
                    "digest": "sha256:6696bae2f570e0c96dcb21308e525216796d3452d1a9b8dcaba168ba37f3f464"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4094072,
                    "digest": "sha256:6dca82770cb3702e9c92d2f155923c0fb55671c1c373b8b50640b7bf05ed8418"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48007546,
                    "digest": "sha256:d95e88827e80fd1e7c7d0a78bc734615833dd6ac19b07c1ad3b8b1c837bb4ece"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49040317,
                    "digest": "sha256:e8c58b43df76f1b8296622ae933fc04f8121c30de2a54b600b871c66c36dc78d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 98913836,
                    "digest": "sha256:954fab7ed44b86737d34d8fd16f8ac1f8dedceaee67f1f8fe00dddaa5f1317eb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 127,
                    "digest": "sha256:13eda69713f0cc034e9391ddbd1fd9afc6dab02f611c36d74e927f5a330e31db"
                }
            ]
        },
        "1.11beta1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:fce1716eade7860381db7c0055ba899200c1ae653834ed6299e05294b2bd1dc7",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                }
            ]
        },
        "1.11beta1-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4120,
                "digest": "sha256:cda90fe2753703af8a3409d5bdcf7a6d2ee147625daf912c4ae46a956eaad745"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2099514,
                    "digest": "sha256:47e04371c99027fae42871b720fdc6cdddcb65062bfa05f0c3bb0a594cb5bbbd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 176,
                    "digest": "sha256:b4103359e1ecd9a7253d8b8a041d4e81db1ff4a5e1950bc0e02305d221c9e6c2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 308530,
                    "digest": "sha256:fdcf8e21e8f5edb742758a8dcd7868dc15b1b1ad2605c214d159d58216e7944a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:38e221838d317e50636dd30af1175c5672e49c137b7163688ad18fd895860a23"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 152998555,
                    "digest": "sha256:589e41b22e2dbf23760987fcc752ce94abc488843e91d647cf4b3ecc5ab0a643"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:83b90674f40289a1372b97094f60849a921bc3c941400716c1d5e53551bc2eb8"
                }
            ]
        },
        "1.11beta1-alpine3.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4119,
                "digest": "sha256:52dcc7151a8632c41b82dfdb94f1966923b7386336711ff811e27f5936eade92"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1988857,
                    "digest": "sha256:b78042c299ad99d1e646b18762d4bc22a84c4f88e5bb491ea6293a10f53ddf79"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:6fd45b97b6c2a3ac869ae5c99e087e97bc29714b165180e06f0c9116f400f2dd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 308213,
                    "digest": "sha256:61e0b1d8a4679a04839bcedd494b39879dc202e375f6f74d26f6bd80edff0363"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:226bcca23678813260f44b3560835eb92c99b7a375b8f4dd0e264c06496a201d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 146029064,
                    "digest": "sha256:e6a5fb6c6fa1fe1810edad245cc0fbcd961148b90e4a63f26fc8380ef845e0b4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:e77b7da4dd129dcd6bd1f436ff521cc3276e4d23773d035a1b0664e0451b8740"
                }
            ]
        },
        "1.11beta1-alpine3.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4120,
                "digest": "sha256:cda90fe2753703af8a3409d5bdcf7a6d2ee147625daf912c4ae46a956eaad745"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2099514,
                    "digest": "sha256:47e04371c99027fae42871b720fdc6cdddcb65062bfa05f0c3bb0a594cb5bbbd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 176,
                    "digest": "sha256:b4103359e1ecd9a7253d8b8a041d4e81db1ff4a5e1950bc0e02305d221c9e6c2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 308530,
                    "digest": "sha256:fdcf8e21e8f5edb742758a8dcd7868dc15b1b1ad2605c214d159d58216e7944a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:38e221838d317e50636dd30af1175c5672e49c137b7163688ad18fd895860a23"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 152998555,
                    "digest": "sha256:589e41b22e2dbf23760987fcc752ce94abc488843e91d647cf4b3ecc5ab0a643"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:83b90674f40289a1372b97094f60849a921bc3c941400716c1d5e53551bc2eb8"
                }
            ]
        },
        "1.11beta1-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5472,
                "digest": "sha256:77fbc9838ddc2afbe5295a2b9ab9acc3d8f78be50bc4782683186e45a96acf3b"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43123568,
                    "digest": "sha256:24e48664c69560cde9534aadde23364122f1feb02b5db0ab3776983a4788ea63"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9690273,
                    "digest": "sha256:cbcf842c718cc953be45905967fc6a0114f55314ce412b80107e20d8b43fdcdb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4088491,
                    "digest": "sha256:317d79a9c0a5c766d03c1c253fa09f645ed7321dc3a80e0ae33599958677cd1d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48003327,
                    "digest": "sha256:a390be6b2f0349f7391582a305479410441bcb0329b8daa800d13f3921fd39b7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48989789,
                    "digest": "sha256:94a0d029b36d67dd678c31d091d0d1d44daae01a0f91a80445446578ffb01e49"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 143547173,
                    "digest": "sha256:da671adc8ae0aafceb80a0f2313a153bffadd3b67dd5f7c3b6f5b6e4e7da499b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:984e050157a231f1ea78fa232dea61b91908acc839224712e71c164b41d31867"
                }
            ]
        },
        "1.11beta2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:b0c70e65157702edf0696e3f0d34b8e6b69830319c0c01743a74c369eab47595",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                }
            ]
        },
        "1.11beta2-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4120,
                "digest": "sha256:904476286a0cbe5fcafe70230b325fc0df53c4d10f76cdf6a64aace26c389891"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2099514,
                    "digest": "sha256:47e04371c99027fae42871b720fdc6cdddcb65062bfa05f0c3bb0a594cb5bbbd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 176,
                    "digest": "sha256:b4103359e1ecd9a7253d8b8a041d4e81db1ff4a5e1950bc0e02305d221c9e6c2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 308530,
                    "digest": "sha256:fdcf8e21e8f5edb742758a8dcd7868dc15b1b1ad2605c214d159d58216e7944a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:38e221838d317e50636dd30af1175c5672e49c137b7163688ad18fd895860a23"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156311274,
                    "digest": "sha256:0a890ab1741c8399bc640247846f8ce88c77ec51cbca3be4c4145c287edfcea6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:135b592e1f912ae0ff220183643ecbe797ffa0499db2e1b84005145182291c8e"
                }
            ]
        },
        "1.11beta2-alpine3.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4118,
                "digest": "sha256:7e77fd51cfa12929ecaaf32698d668c024157d94a16faa556f1266003fee7b9c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1988857,
                    "digest": "sha256:b78042c299ad99d1e646b18762d4bc22a84c4f88e5bb491ea6293a10f53ddf79"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:6fd45b97b6c2a3ac869ae5c99e087e97bc29714b165180e06f0c9116f400f2dd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 308213,
                    "digest": "sha256:61e0b1d8a4679a04839bcedd494b39879dc202e375f6f74d26f6bd80edff0363"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:226bcca23678813260f44b3560835eb92c99b7a375b8f4dd0e264c06496a201d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149330239,
                    "digest": "sha256:25ec8de4034c8a0998fb7961f49f4701fe66edd5c3daf35edcdcce3eb5a23908"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:69c45fd5582fb2ecb7baeafcb06e4ac8544c2590625a07db1460d83a3f63e1bc"
                }
            ]
        },
        "1.11beta2-alpine3.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4120,
                "digest": "sha256:904476286a0cbe5fcafe70230b325fc0df53c4d10f76cdf6a64aace26c389891"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2099514,
                    "digest": "sha256:47e04371c99027fae42871b720fdc6cdddcb65062bfa05f0c3bb0a594cb5bbbd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 176,
                    "digest": "sha256:b4103359e1ecd9a7253d8b8a041d4e81db1ff4a5e1950bc0e02305d221c9e6c2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 308530,
                    "digest": "sha256:fdcf8e21e8f5edb742758a8dcd7868dc15b1b1ad2605c214d159d58216e7944a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:38e221838d317e50636dd30af1175c5672e49c137b7163688ad18fd895860a23"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156311274,
                    "digest": "sha256:0a890ab1741c8399bc640247846f8ce88c77ec51cbca3be4c4145c287edfcea6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:135b592e1f912ae0ff220183643ecbe797ffa0499db2e1b84005145182291c8e"
                }
            ]
        },
        "1.11beta2-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5472,
                "digest": "sha256:f0a0a69ac5c3c54eb36ae4d3b5c0c2465e3118a585fc66514472a1d13cec845a"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43123568,
                    "digest": "sha256:24e48664c69560cde9534aadde23364122f1feb02b5db0ab3776983a4788ea63"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9690273,
                    "digest": "sha256:cbcf842c718cc953be45905967fc6a0114f55314ce412b80107e20d8b43fdcdb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4088491,
                    "digest": "sha256:317d79a9c0a5c766d03c1c253fa09f645ed7321dc3a80e0ae33599958677cd1d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48003327,
                    "digest": "sha256:a390be6b2f0349f7391582a305479410441bcb0329b8daa800d13f3921fd39b7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48989789,
                    "digest": "sha256:94a0d029b36d67dd678c31d091d0d1d44daae01a0f91a80445446578ffb01e49"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 150380495,
                    "digest": "sha256:7605a3e8dea30ceeaf6e2c8ee1cbd0d61f12bf5ee1eb661cd8bd5e2470cb5f5f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:0bd1809653d9056df24bbfb673ad72c11e0dfe146dbf8781bebed57f18d8e483"
                }
            ]
        },
        "1.11beta3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:17eaad38bc911091932b03dddfe60fd5a4455a2fc027539e157a8e3eadb5823f",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                }
            ]
        },
        "1.11beta3-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4119,
                "digest": "sha256:bf841d66204bd30ea612df28078237e20b7975393480f7910e32698bc5a1c41a"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2099514,
                    "digest": "sha256:47e04371c99027fae42871b720fdc6cdddcb65062bfa05f0c3bb0a594cb5bbbd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 176,
                    "digest": "sha256:b4103359e1ecd9a7253d8b8a041d4e81db1ff4a5e1950bc0e02305d221c9e6c2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 308530,
                    "digest": "sha256:fdcf8e21e8f5edb742758a8dcd7868dc15b1b1ad2605c214d159d58216e7944a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:38e221838d317e50636dd30af1175c5672e49c137b7163688ad18fd895860a23"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156182132,
                    "digest": "sha256:b78e4f949dd280ab0fd1289d55b96406329716f9b6688a1153c44f724f570ea2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:c89c6528bbcb2be24609837e9c8af4e262ea1a4dd721f51c61ef6c8150858a8f"
                }
            ]
        },
        "1.11beta3-alpine3.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4118,
                "digest": "sha256:d981ed7e7c6735a1c5c8fcbbc4a16601336c12aecb9fd128cf6138e804b7ad68"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1988857,
                    "digest": "sha256:b78042c299ad99d1e646b18762d4bc22a84c4f88e5bb491ea6293a10f53ddf79"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:6fd45b97b6c2a3ac869ae5c99e087e97bc29714b165180e06f0c9116f400f2dd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 308213,
                    "digest": "sha256:61e0b1d8a4679a04839bcedd494b39879dc202e375f6f74d26f6bd80edff0363"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:226bcca23678813260f44b3560835eb92c99b7a375b8f4dd0e264c06496a201d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149218776,
                    "digest": "sha256:ac3e3fd23265e37e5f89ddde3d6c7a6564127e21c82b04589a86570b36f00143"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:d56b10e96393b938e0a5b6434b30e563f4268faa2e764879b9994eb1bc14b8d0"
                }
            ]
        },
        "1.11beta3-alpine3.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4119,
                "digest": "sha256:bf841d66204bd30ea612df28078237e20b7975393480f7910e32698bc5a1c41a"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2099514,
                    "digest": "sha256:47e04371c99027fae42871b720fdc6cdddcb65062bfa05f0c3bb0a594cb5bbbd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 176,
                    "digest": "sha256:b4103359e1ecd9a7253d8b8a041d4e81db1ff4a5e1950bc0e02305d221c9e6c2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 308530,
                    "digest": "sha256:fdcf8e21e8f5edb742758a8dcd7868dc15b1b1ad2605c214d159d58216e7944a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:38e221838d317e50636dd30af1175c5672e49c137b7163688ad18fd895860a23"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156182132,
                    "digest": "sha256:b78e4f949dd280ab0fd1289d55b96406329716f9b6688a1153c44f724f570ea2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:c89c6528bbcb2be24609837e9c8af4e262ea1a4dd721f51c61ef6c8150858a8f"
                }
            ]
        },
        "1.11beta3-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5472,
                "digest": "sha256:b55e35c8b95b4dfb5e2e6617d111cb34bbc56c8f85b45001866a3929b1b7db14"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43123568,
                    "digest": "sha256:24e48664c69560cde9534aadde23364122f1feb02b5db0ab3776983a4788ea63"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9690273,
                    "digest": "sha256:cbcf842c718cc953be45905967fc6a0114f55314ce412b80107e20d8b43fdcdb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4088491,
                    "digest": "sha256:317d79a9c0a5c766d03c1c253fa09f645ed7321dc3a80e0ae33599958677cd1d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48003327,
                    "digest": "sha256:a390be6b2f0349f7391582a305479410441bcb0329b8daa800d13f3921fd39b7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48989789,
                    "digest": "sha256:94a0d029b36d67dd678c31d091d0d1d44daae01a0f91a80445446578ffb01e49"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 150341728,
                    "digest": "sha256:a091b7c6a05bce60f86bbec200f4f38511146ec2601fafe0986c22f6f5b719ff"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:2b701fd52d155b52bbab31ae8459c3ac406b1d4f981d2d47c057b9e81b94dccc"
                }
            ]
        },
        "1.11rc1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:add48ae7963114aba7f8ce4590594c84cd9bf207a7561992db3d6942ece4d44b",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                }
            ]
        },
        "1.11rc1-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4179,
                "digest": "sha256:c69444d33f67b9963199e663ca9acf6ef4d8206dcff2a9f7fb5ac154cf8542fc"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2099514,
                    "digest": "sha256:47e04371c99027fae42871b720fdc6cdddcb65062bfa05f0c3bb0a594cb5bbbd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 176,
                    "digest": "sha256:b4103359e1ecd9a7253d8b8a041d4e81db1ff4a5e1950bc0e02305d221c9e6c2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 308530,
                    "digest": "sha256:fdcf8e21e8f5edb742758a8dcd7868dc15b1b1ad2605c214d159d58216e7944a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:38e221838d317e50636dd30af1175c5672e49c137b7163688ad18fd895860a23"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 105334879,
                    "digest": "sha256:f1e85c639d843aa83d2e63b06b17b49681c94722ac141e69288155e698b30ee5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:fee288b62b13c343acbb7633553730ef76a997029c952fe61fac241a2cf13f66"
                }
            ]
        },
        "1.11rc1-alpine3.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4178,
                "digest": "sha256:47136e4bf9be9539521a09622f09384c3a84b0f766e90715a7b42ab483fee2d2"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1988857,
                    "digest": "sha256:b78042c299ad99d1e646b18762d4bc22a84c4f88e5bb491ea6293a10f53ddf79"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:6fd45b97b6c2a3ac869ae5c99e087e97bc29714b165180e06f0c9116f400f2dd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 308213,
                    "digest": "sha256:61e0b1d8a4679a04839bcedd494b39879dc202e375f6f74d26f6bd80edff0363"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:226bcca23678813260f44b3560835eb92c99b7a375b8f4dd0e264c06496a201d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 104289826,
                    "digest": "sha256:51e92b492dde606fc7bdf8184f9f5f660e487d50fb75c1ee5ea8905506713417"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:819c385020dd391e0ff17b8ef47f9f977a1425e3142db5bcc81f400038230c62"
                }
            ]
        },
        "1.11rc1-alpine3.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4179,
                "digest": "sha256:c69444d33f67b9963199e663ca9acf6ef4d8206dcff2a9f7fb5ac154cf8542fc"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2099514,
                    "digest": "sha256:47e04371c99027fae42871b720fdc6cdddcb65062bfa05f0c3bb0a594cb5bbbd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 176,
                    "digest": "sha256:b4103359e1ecd9a7253d8b8a041d4e81db1ff4a5e1950bc0e02305d221c9e6c2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 308530,
                    "digest": "sha256:fdcf8e21e8f5edb742758a8dcd7868dc15b1b1ad2605c214d159d58216e7944a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:38e221838d317e50636dd30af1175c5672e49c137b7163688ad18fd895860a23"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 105334879,
                    "digest": "sha256:f1e85c639d843aa83d2e63b06b17b49681c94722ac141e69288155e698b30ee5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:fee288b62b13c343acbb7633553730ef76a997029c952fe61fac241a2cf13f66"
                }
            ]
        },
        "1.11rc1-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5466,
                "digest": "sha256:a14b748f5741a5b8672c4036132ff0ee8cd80dbe9f3c761daf25f89fbbe4b4c7"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43123568,
                    "digest": "sha256:24e48664c69560cde9534aadde23364122f1feb02b5db0ab3776983a4788ea63"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9690273,
                    "digest": "sha256:cbcf842c718cc953be45905967fc6a0114f55314ce412b80107e20d8b43fdcdb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4088491,
                    "digest": "sha256:317d79a9c0a5c766d03c1c253fa09f645ed7321dc3a80e0ae33599958677cd1d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48003327,
                    "digest": "sha256:a390be6b2f0349f7391582a305479410441bcb0329b8daa800d13f3921fd39b7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48989789,
                    "digest": "sha256:94a0d029b36d67dd678c31d091d0d1d44daae01a0f91a80445446578ffb01e49"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 150389401,
                    "digest": "sha256:c67e7e94e51f314340ff8792851bd31a2fb16cc0056a4f4baafab829d90c91b8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:d9fbb4c7cc68a4ae18e8b3fb8898b96ee2648bf6d045798a04a6459280f93938"
                }
            ]
        },
        "1.11rc2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:70f128a68499d73eab3c7db103befbe4544c6b464b869a02891f80dd39ec2f6f",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                }
            ]
        },
        "1.11rc2-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4178,
                "digest": "sha256:1a9df00e135de82a2eb07f99c8bcb258f24b82370fe27fb88ef3ec862a62621c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2099514,
                    "digest": "sha256:47e04371c99027fae42871b720fdc6cdddcb65062bfa05f0c3bb0a594cb5bbbd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 176,
                    "digest": "sha256:b4103359e1ecd9a7253d8b8a041d4e81db1ff4a5e1950bc0e02305d221c9e6c2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 308530,
                    "digest": "sha256:fdcf8e21e8f5edb742758a8dcd7868dc15b1b1ad2605c214d159d58216e7944a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:38e221838d317e50636dd30af1175c5672e49c137b7163688ad18fd895860a23"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 105359764,
                    "digest": "sha256:eeed04d1c549aea07d29f0089781dc710270f15617ea9d5ffaa8ac7c2b23c391"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 124,
                    "digest": "sha256:193d73a86ba80b6e4d40ecd461822f5e6fb088df13873057d1975dc5b25fa4c6"
                }
            ]
        },
        "1.11rc2-alpine3.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4176,
                "digest": "sha256:02a6f48fa45a024042bea075f81b4c031f28c6b9483afc572d194662a4a1dd98"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1988857,
                    "digest": "sha256:b78042c299ad99d1e646b18762d4bc22a84c4f88e5bb491ea6293a10f53ddf79"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:6fd45b97b6c2a3ac869ae5c99e087e97bc29714b165180e06f0c9116f400f2dd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 308213,
                    "digest": "sha256:61e0b1d8a4679a04839bcedd494b39879dc202e375f6f74d26f6bd80edff0363"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:226bcca23678813260f44b3560835eb92c99b7a375b8f4dd0e264c06496a201d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 104316890,
                    "digest": "sha256:e52e7aad95ca327aa78bdbe98854193749e71f6730372635e88e0a897dd1ca5b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:388edf977d9b7beea4a15b93f07566c838bc88fedf622d6f026502da0315bab8"
                }
            ]
        },
        "1.11rc2-alpine3.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4178,
                "digest": "sha256:1a9df00e135de82a2eb07f99c8bcb258f24b82370fe27fb88ef3ec862a62621c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2099514,
                    "digest": "sha256:47e04371c99027fae42871b720fdc6cdddcb65062bfa05f0c3bb0a594cb5bbbd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 176,
                    "digest": "sha256:b4103359e1ecd9a7253d8b8a041d4e81db1ff4a5e1950bc0e02305d221c9e6c2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 308530,
                    "digest": "sha256:fdcf8e21e8f5edb742758a8dcd7868dc15b1b1ad2605c214d159d58216e7944a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:38e221838d317e50636dd30af1175c5672e49c137b7163688ad18fd895860a23"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 105359764,
                    "digest": "sha256:eeed04d1c549aea07d29f0089781dc710270f15617ea9d5ffaa8ac7c2b23c391"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 124,
                    "digest": "sha256:193d73a86ba80b6e4d40ecd461822f5e6fb088df13873057d1975dc5b25fa4c6"
                }
            ]
        },
        "1.11rc2-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5466,
                "digest": "sha256:f803aa65b5c75d714660d59b66250d519b45a7e17adbd0d9a0ba3dd29d16d721"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43123568,
                    "digest": "sha256:24e48664c69560cde9534aadde23364122f1feb02b5db0ab3776983a4788ea63"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9690273,
                    "digest": "sha256:cbcf842c718cc953be45905967fc6a0114f55314ce412b80107e20d8b43fdcdb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4088491,
                    "digest": "sha256:317d79a9c0a5c766d03c1c253fa09f645ed7321dc3a80e0ae33599958677cd1d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48003327,
                    "digest": "sha256:a390be6b2f0349f7391582a305479410441bcb0329b8daa800d13f3921fd39b7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48989789,
                    "digest": "sha256:94a0d029b36d67dd678c31d091d0d1d44daae01a0f91a80445446578ffb01e49"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 100917641,
                    "digest": "sha256:b44b3dc68b83a19adc04a341a16caff58b63d1096f8dd5d78bbb28b202a0ab10"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:ef41cd36bfa54472610f3030a389e1263723ae4c965a251ec763dd2eedbcde27"
                }
            ]
        },
        "1.12": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:267f9e390b1feeea7513b9de7c57c40dbfa5444485ade0b41c33d164d840e268",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                }
            ]
        },
        "1.12-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3835,
                "digest": "sha256:9d993b748f324b8291a4f202c2bc07b3485f7b9c7c799ee8925f657a760749cd"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2723075,
                    "digest": "sha256:8fa90b21c985a6fcfff966bdfbde81cdd088de0aa8af38110057f6ac408f4408"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301775,
                    "digest": "sha256:fa3b0fa9a238a4fa3f590c80e14c5732f811f7a17aa0b8102cea7e3a9d250fcd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:583d88f014275e361b79e5a5ccf10b177aafe63e5d44ccd5d3911ca9b924efac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 117802832,
                    "digest": "sha256:269d862632142e430c9cc5bdc78bed94ffbc196b0765f85145ad8496226170f0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:3add431ca4461d4ac0337fe0e850fa379ec7a612579eeebd8674573bf7ceddd0"
                }
            ]
        },
        "1.12-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3835,
                "digest": "sha256:e60d4be18f30ae9c5ead8bfab8b54ed9ec61f566b5198dc2d148e44e1525fd5b"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2717732,
                    "digest": "sha256:f07e4bcf42b862c240f4c00f2f7ed362d7d93ca15151de547beda593f3b669e5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302350,
                    "digest": "sha256:50d558a7b39742c40031affac43b0aca8782b1d6b200679c6e9cf4d4c47a5953"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:b423fbf207f04f0d10356619a60fc06a50f6df4151e41b196dc9074fe2f7b7f3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 117803925,
                    "digest": "sha256:922302c81bd07bba8568c116c4d049da799d27cab99ebf24f4e5216098449431"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:9eab71dc52030ce39ed54c5193464a322b3b7e4ba911e45842d6fefa0c2d7100"
                }
            ]
        },
        "1.12-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3835,
                "digest": "sha256:9d993b748f324b8291a4f202c2bc07b3485f7b9c7c799ee8925f657a760749cd"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2723075,
                    "digest": "sha256:8fa90b21c985a6fcfff966bdfbde81cdd088de0aa8af38110057f6ac408f4408"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301775,
                    "digest": "sha256:fa3b0fa9a238a4fa3f590c80e14c5732f811f7a17aa0b8102cea7e3a9d250fcd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:583d88f014275e361b79e5a5ccf10b177aafe63e5d44ccd5d3911ca9b924efac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 117802832,
                    "digest": "sha256:269d862632142e430c9cc5bdc78bed94ffbc196b0765f85145ad8496226170f0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:3add431ca4461d4ac0337fe0e850fa379ec7a612579eeebd8674573bf7ceddd0"
                }
            ]
        },
        "1.12-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3808,
                "digest": "sha256:85317d99d405de9871b1be02e64a8fd28686da17097c4922433fa5350517ff61"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2688779,
                    "digest": "sha256:0362ad1dd800a9d92f8982fa28f173f9120266153830f990f7486f44b068968a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302429,
                    "digest": "sha256:4add8f29bf03f3d6fce96396daad08e0039610b96925452697ea40933ec96ec4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:d2a54cdb6f8d9efb5c7906e854f297284c50db62dea68960f9665d4e134a2da6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 118202303,
                    "digest": "sha256:f4c99ff429bfc85b92d397bb56d37b8c3305a6360298b6f4c53c6b582eef054f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:e7e7e1a01fc4f73efbabc533336be5cbc4e4760e198db3905da1a1791861c690"
                }
            ]
        },
        "1.12-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5458,
                "digest": "sha256:e17983a82ca70dfd0928cfaf2b5a86fc0fcd3855f0fde38b330fe81f6ecf765c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49171687,
                    "digest": "sha256:bc03a7ced18fc43ea9523dfb256d2c3fbb835dc0bb54bdb7fd309edf936a87e7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7680993,
                    "digest": "sha256:cba9d528c1473d79c18b401d44ca06b9733d9c51a8699b98e8325c9de60b9739"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9983754,
                    "digest": "sha256:981400d5d268dc989681d5f308b7d2e381809f0bcc82429f443f7539cf6117ba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52102938,
                    "digest": "sha256:f0b2d547b8bc79a444406e56d724fb7d961c953e7f2797de4f55b29abee5605f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 62390640,
                    "digest": "sha256:c84a606fada5847b27d4f74a29fdf4fb7b8ab9430f363c3f35669cabe7a0daf2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 103039981,
                    "digest": "sha256:67695a1e50bad589afe728db28ee68cceb5387ed9d95546b0aa7c0c7cbbe1fd7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:4097104a51c8140cb0bd8fee2c44e88cce2359a856ee27217b8e311d1bfcd8ee"
                }
            ]
        },
        "1.12-rc": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:87146b190997656f1620e6a5a4e69947807dd96bf79e04d14fa326ba6c24b767",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                }
            ]
        },
        "1.12-rc-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4053,
                "digest": "sha256:21619a8daa95a8bbe05296d2bfc66faeeaf3973220569244fd6b3879420a6510"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2687895,
                    "digest": "sha256:ee02fa18913c824d1d1c9b680f1a43dad343b9d6c086a6bc62e3361c3d3a2d63"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 176,
                    "digest": "sha256:afafa41235ea57b01b00eba47de1574777073a79c1d592c5709dfcbb3bd51f2a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302324,
                    "digest": "sha256:5593484900d3703f8e48e8d8b2c655313cae960ef0f59e5a59bbea1736e29551"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:6682f3bac3bd3144b0abdab1a15d89b6c4921b3434f7507bff7a6b8c63d82a8e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 118064116,
                    "digest": "sha256:349699ba5f69eba71caaff1f9af98e808909b970519f1d4561b45a38c7bffbc5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 124,
                    "digest": "sha256:bf6d26ed97e382cd1e127f64d21fedc0d3a92b466a33015aac34bee97aadecbe"
                }
            ]
        },
        "1.12-rc-alpine3.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4054,
                "digest": "sha256:54fdce6b7bfdd550ab2404a31fba9670cba35b4e98435652b12d2d3d9665bd88"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2099839,
                    "digest": "sha256:e3c488b39803d9194cf010f6127b1121d5387b90a1562d44b50b749d0e7a69bf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 176,
                    "digest": "sha256:05a63128803b1ea223f87244cb8d3faa97817f6cf3ca8249e485430218758510"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 308685,
                    "digest": "sha256:4fe3f66f9bc2a391ccc98b0ae2492dc28160ce2a5de9dc7057f36b2a88d42640"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:590d7dc3d210c2fa755e378743c66cdc4c9965179688e1fd1d1636cc3e111a32"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 118154510,
                    "digest": "sha256:d6d67c2468ac18144ae6fd5d03c7ad981f476a195bab68b2d0c8cd5c111e8951"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:e0b0a6dbec5850f3023a53886e2b7787874ba21aea5a34db5cf129d4687f5192"
                }
            ]
        },
        "1.12-rc-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4053,
                "digest": "sha256:21619a8daa95a8bbe05296d2bfc66faeeaf3973220569244fd6b3879420a6510"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2687895,
                    "digest": "sha256:ee02fa18913c824d1d1c9b680f1a43dad343b9d6c086a6bc62e3361c3d3a2d63"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 176,
                    "digest": "sha256:afafa41235ea57b01b00eba47de1574777073a79c1d592c5709dfcbb3bd51f2a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302324,
                    "digest": "sha256:5593484900d3703f8e48e8d8b2c655313cae960ef0f59e5a59bbea1736e29551"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:6682f3bac3bd3144b0abdab1a15d89b6c4921b3434f7507bff7a6b8c63d82a8e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 118064116,
                    "digest": "sha256:349699ba5f69eba71caaff1f9af98e808909b970519f1d4561b45a38c7bffbc5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 124,
                    "digest": "sha256:bf6d26ed97e382cd1e127f64d21fedc0d3a92b466a33015aac34bee97aadecbe"
                }
            ]
        },
        "1.12-rc-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5470,
                "digest": "sha256:4b21cabf91216a78c2ac4b29ac1ef314e5e756ecf23075e647eeec63a2bb31c3"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43124977,
                    "digest": "sha256:12bb1c82b086301ca1c22eabf3add7cd229f27b63ca4b0924e2356051d9e7194"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9728878,
                    "digest": "sha256:730f6528b47c72f6dd5aabc947e8db01aa470adc3fdb4bbbcf052f9c3ad6ae8e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4093098,
                    "digest": "sha256:63b5f3607713f2dab247e619fafcffd7c9edf4aaffc9e701660a76ccf324b742"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48005411,
                    "digest": "sha256:5001a1d2fe2f54da8dbdfca56862dd05d37d1a2aab69599bcc2a130ea4fcd7f5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49018959,
                    "digest": "sha256:0cf7cff8d1540abf0037817a982ebb3302bbf09abae0be8a01c89ec883cc628a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 113388889,
                    "digest": "sha256:3f7a8a4bae879a7dbf157ef7d35d50c2a58dedccd3857f93524d153923fc8c30"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:26d0b1b19bd0d07dd871cb5ec2c5642a36cea14a8c3c03d99939d263a9e11512"
                }
            ]
        },
        "1.12-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5467,
                "digest": "sha256:0feb561d8ecc6345fb21bbefcfb041b6a30d5668ee9046c22b2debc276e16242"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43166749,
                    "digest": "sha256:df3de44c7096ba135556a1e7044f9e1feee3ef713ab96f0416f71fe78422cbf6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9748586,
                    "digest": "sha256:fdf173a01baf7d45b479bb380ece219cbf0ea52178e9b8cdc5b87891759d1122"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4094322,
                    "digest": "sha256:c3392eac7bc27f3bd5fcb024413ca55ec4115c22da3e229567d5fc03cd4ff4e4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48024205,
                    "digest": "sha256:04a82fc9ca296b095585ba7f3f6d83566428dbefcbfd284e242039aba97840b2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49097963,
                    "digest": "sha256:aca1cf3b66f921e6f0d5e42cf6821f9a4af6cf2bba19118c0275e0c78b66d0a5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 103040000,
                    "digest": "sha256:9a3a41286ede148a6f698da082a3a734ef94b369a4dd5948a0581d5c4b2a392d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:e7e07c5d7e30d3efbbede92656941ab47cced8209674af6cb89ca0dd7d8017b3"
                }
            ]
        },
        "1.12.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:ae5244aa4550573aaf4faa193a5e3e3eed5c3e4ffde9c7f3ba43605ad95cde50",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                }
            ]
        },
        "1.12.0-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3798,
                "digest": "sha256:86128a0b050cd6b78ceb8a2be69124c8eb5c70b0974003e54c252c91626602d2"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2687939,
                    "digest": "sha256:3b00a3925ee4b356facd24aea8ece58982a66577023cb3596ce3a321aef976f9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302317,
                    "digest": "sha256:7809c1a4c8e2fd286895f69d067b1a68841f9311a5c0e1afc51e64e57d777919"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:8c00b1d46f4493b4bfe8c94c6226da7c7c76820ecc2f4b70e6a482d4fdaaca34"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 118090041,
                    "digest": "sha256:955cc90a48f73e8ddb4103727fc7761eb73961aa8d097bcd956ef6e4c3adae37"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:72f16051d572a3d5090dd2a64004d8b3b2736e4f64cb17f3e92dca899af50b41"
                }
            ]
        },
        "1.12.0-alpine3.9": {
            "schemaVersion": 1,
            "name": "arm64v8/golang",
            "tag": "1.12.0-alpine3.9",
            "architecture": "arm64",
            "fsLayers": [
                {
                    "blobSum": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                },
                {
                    "blobSum": "sha256:72f16051d572a3d5090dd2a64004d8b3b2736e4f64cb17f3e92dca899af50b41"
                },
                {
                    "blobSum": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                },
                {
                    "blobSum": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                },
                {
                    "blobSum": "sha256:955cc90a48f73e8ddb4103727fc7761eb73961aa8d097bcd956ef6e4c3adae37"
                },
                {
                    "blobSum": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                },
                {
                    "blobSum": "sha256:8c00b1d46f4493b4bfe8c94c6226da7c7c76820ecc2f4b70e6a482d4fdaaca34"
                },
                {
                    "blobSum": "sha256:7809c1a4c8e2fd286895f69d067b1a68841f9311a5c0e1afc51e64e57d777919"
                },
                {
                    "blobSum": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                },
                {
                    "blobSum": "sha256:3b00a3925ee4b356facd24aea8ece58982a66577023cb3596ce3a321aef976f9"
                }
            ],
            "history": [
                {
                    "v1Compatibility": "{\"architecture\":\"arm64\",\"config\":{\"Hostname\":\"\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\",\"GOLANG_VERSION=1.12\",\"GOPATH=/go\"],\"Cmd\":[\"/bin/sh\"],\"ArgsEscaped\":true,\"Image\":\"sha256:a5ebf70386e8529a7c317a0527e31fe587ce5a6a8490196a63e4a9d3232dd750\",\"Volumes\":null,\"WorkingDir\":\"/go\",\"Entrypoint\":null,\"OnBuild\":null,\"Labels\":null},\"container\":\"3473e92f878083fe25adf8922bf7bff378bd863cac2387221cafa89592cd023f\",\"container_config\":{\"Hostname\":\"3473e92f8780\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\",\"GOLANG_VERSION=1.12\",\"GOPATH=/go\"],\"Cmd\":[\"/bin/sh\",\"-c\",\"#(nop) WORKDIR /go\"],\"ArgsEscaped\":true,\"Image\":\"sha256:a5ebf70386e8529a7c317a0527e31fe587ce5a6a8490196a63e4a9d3232dd750\",\"Volumes\":null,\"WorkingDir\":\"/go\",\"Entrypoint\":null,\"OnBuild\":null,\"Labels\":{}},\"created\":\"2019-03-08T11:53:50.359294825Z\",\"docker_version\":\"18.06.1-ce\",\"id\":\"668307fba1201c3f9bedc21a483dd86aeb544f87571c6c74a6a399b0c100959d\",\"os\":\"linux\",\"parent\":\"7c8008d5ddf7f714a36a5cb8700822e92cbc6a50c3530b14dfa09ef1cc39f648\",\"throwaway\":true}"
                },
                {
                    "v1Compatibility": "{\"id\":\"7c8008d5ddf7f714a36a5cb8700822e92cbc6a50c3530b14dfa09ef1cc39f648\",\"parent\":\"5f49c67c1ce9e4aff398308c97ed866d85c70a1408dc5155c4e917ff9793f9f0\",\"created\":\"2019-03-08T11:53:49.708560362Z\",\"container_config\":{\"Cmd\":[\"/bin/sh -c mkdir -p \\\"$GOPATH/src\\\" \\\"$GOPATH/bin\\\" \\u0026\\u0026 chmod -R 777 \\\"$GOPATH\\\"\"]}}"
                },
                {
                    "v1Compatibility": "{\"id\":\"5f49c67c1ce9e4aff398308c97ed866d85c70a1408dc5155c4e917ff9793f9f0\",\"parent\":\"e55f3dcdc2d462825262a2683e488faa71846b49945c22b61aeca432aab2312b\",\"created\":\"2019-03-08T11:53:47.892852082Z\",\"container_config\":{\"Cmd\":[\"/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"]},\"throwaway\":true}"
                },
                {
                    "v1Compatibility": "{\"id\":\"e55f3dcdc2d462825262a2683e488faa71846b49945c22b61aeca432aab2312b\",\"parent\":\"277762d6a9b0e92920b70be94e6ce75cec1c9f7aa2bdd6b25cf2786514de9601\",\"created\":\"2019-03-08T11:53:47.116314421Z\",\"container_config\":{\"Cmd\":[\"/bin/sh -c #(nop)  ENV GOPATH=/go\"]},\"throwaway\":true}"
                },
                {
                    "v1Compatibility": "{\"id\":\"277762d6a9b0e92920b70be94e6ce75cec1c9f7aa2bdd6b25cf2786514de9601\",\"parent\":\"4b2169d3eca5bb263a7efee9cbcf4083f06246591af00f6eeb73ad0d1cf5fa81\",\"created\":\"2019-03-08T11:53:45.708364687Z\",\"container_config\":{\"Cmd\":[\"/bin/sh -c set -eux; \\tapk add --no-cache --virtual .build-deps \\t\\tbash \\t\\tgcc \\t\\tmusl-dev \\t\\topenssl \\t\\tgo \\t; \\texport \\t\\tGOROOT_BOOTSTRAP=\\\"$(go env GOROOT)\\\" \\t\\tGOOS=\\\"$(go env GOOS)\\\" \\t\\tGOARCH=\\\"$(go env GOARCH)\\\" \\t\\tGOHOSTOS=\\\"$(go env GOHOSTOS)\\\" \\t\\tGOHOSTARCH=\\\"$(go env GOHOSTARCH)\\\" \\t; \\tapkArch=\\\"$(apk --print-arch)\\\"; \\tcase \\\"$apkArch\\\" in \\t\\tarmhf) export GOARM='6' ;; \\t\\tx86) export GO386='387' ;; \\tesac; \\t\\twget -O go.tgz \\\"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\\\"; \\techo '09c43d3336743866f2985f566db0520b36f4992aea2b4b2fd9f52f17049e88f2 *go.tgz' | sha256sum -c -; \\ttar -C /usr/local -xzf go.tgz; \\trm go.tgz; \\t\\tcd /usr/local/go/src; \\t./make.bash; \\t\\trm -rf \\t\\t/usr/local/go/pkg/bootstrap \\t\\t/usr/local/go/pkg/obj \\t; \\tapk del .build-deps; \\t\\texport PATH=\\\"/usr/local/go/bin:$PATH\\\"; \\tgo version\"]}}"
                },
                {
                    "v1Compatibility": "{\"id\":\"4b2169d3eca5bb263a7efee9cbcf4083f06246591af00f6eeb73ad0d1cf5fa81\",\"parent\":\"d69c342d74d62e189f9907b261ef2a31f9ee6b6fcd56a1c776240b153007acbd\",\"created\":\"2019-03-08T11:50:41.937665198Z\",\"container_config\":{\"Cmd\":[\"/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12\"]},\"throwaway\":true}"
                },
                {
                    "v1Compatibility": "{\"id\":\"d69c342d74d62e189f9907b261ef2a31f9ee6b6fcd56a1c776240b153007acbd\",\"parent\":\"74dd26dd28635f3636b3acddf926cd1aa9d6ee78c8ebdc82bfa370d35fb3d66c\",\"created\":\"2019-03-08T04:18:49.827739314Z\",\"container_config\":{\"Cmd\":[\"/bin/sh -c [ ! -e /etc/nsswitch.conf ] \\u0026\\u0026 echo 'hosts: files dns' \\u003e /etc/nsswitch.conf\"]}}"
                },
                {
                    "v1Compatibility": "{\"id\":\"74dd26dd28635f3636b3acddf926cd1aa9d6ee78c8ebdc82bfa370d35fb3d66c\",\"parent\":\"d87eeca418a5419a906b26dbf81f46714f243f09c39bab5345879edc069f69bc\",\"created\":\"2019-03-08T04:18:47.872266951Z\",\"container_config\":{\"Cmd\":[\"/bin/sh -c apk add --no-cache \\t\\tca-certificates\"]}}"
                },
                {
                    "v1Compatibility": "{\"id\":\"d87eeca418a5419a906b26dbf81f46714f243f09c39bab5345879edc069f69bc\",\"parent\":\"e33d8b08bafc7e871f29bc3145e028e5a23b3845949bf7fc3a957863f3814cfd\",\"created\":\"2019-03-08T03:37:02.050813908Z\",\"container_config\":{\"Cmd\":[\"/bin/sh -c #(nop)  CMD [\\\"/bin/sh\\\"]\"]},\"throwaway\":true}"
                },
                {
                    "v1Compatibility": "{\"id\":\"e33d8b08bafc7e871f29bc3145e028e5a23b3845949bf7fc3a957863f3814cfd\",\"created\":\"2019-03-08T03:37:01.50193332Z\",\"container_config\":{\"Cmd\":[\"/bin/sh -c #(nop) ADD file:2e80d7b240ac8c544a868180a2a08b2533c450061e0ec276ceacaff7b87a380c in / \"]}}"
                }
            ],
            "signatures": [
                {
                    "header": {
                        "jwk": {
                            "crv": "P-256",
                            "kid": "ZYSU:6KXW:XJEQ:3W23:EPGU:BJZJ:PW2Q:N4QY:RFFZ:7TYF:AP3U:X365",
                            "kty": "EC",
                            "x": "RUy2eQH0ExOJ43sHDC6uYlKwnxnehnnbE7pOaNnAz4s",
                            "y": "hS13gaTO6u7JDh4iia4siSUWIOqfIE4igg-N1d3rj_A"
                        },
                        "alg": "ES256"
                    },
                    "signature": "LvjkknpO0sR4Xw7R8EMYSvp1ihts_Qk--nxIyUJbpRbfbzVX1cuJOQEAAnGRWQO7UGc7s5IVtRj4iogd8ROBug",
                    "protected": "eyJmb3JtYXRMZW5ndGgiOjY5NzksImZvcm1hdFRhaWwiOiJDbjAiLCJ0aW1lIjoiMjAyNC0wNS0zMFQwNzoxNDo1MFoifQ"
                }
            ]
        },
        "1.12.0-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5460,
                "digest": "sha256:77af8838ffb83c1cf5acaaaa29ca95b79423d7347c11f47ea52dacec053fe3b3"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43131855,
                    "digest": "sha256:fe62b3d54b9c915735c759d5d36826088c3c05a73dec307a4ec4cb502ad034ff"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9730480,
                    "digest": "sha256:08a498920bfeb2353594e13055200f3227c4992da6fb9617197ee55ebd4a723c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4094079,
                    "digest": "sha256:9bb8191548b27dfce511beab0eb0f4a401e160544b2f893ba98c3dc794636c53"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48007524,
                    "digest": "sha256:63fe741ca3c91de7331744358ee1d4543b1be55d55bdde318da27773bc8522fd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49040166,
                    "digest": "sha256:c368251da4e353f7bc04d4ea781a9d270c881887c23658b39faa239afd8b28f0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 103665534,
                    "digest": "sha256:4d22afcc7acbc5b46afab1bc1fc111d3fa89ff5224d3a05f555325236946f92b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:f2d6d14cd08a10664b20eca5d7b5f26b5ad722a1eb23dd58c95fb5e5be98492d"
                }
            ]
        },
        "1.12.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:87f341df2e139ac40342c8189476deac6f2e70b2ce2ec44dd2eb8d5f7bde828a",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                }
            ]
        },
        "1.12.1-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3801,
                "digest": "sha256:4f47c6b629dbdd306b57e594b6cc5b2ef157bb36791cde3f6b10632f5a437e98"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2687939,
                    "digest": "sha256:3b00a3925ee4b356facd24aea8ece58982a66577023cb3596ce3a321aef976f9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302317,
                    "digest": "sha256:7809c1a4c8e2fd286895f69d067b1a68841f9311a5c0e1afc51e64e57d777919"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:8c00b1d46f4493b4bfe8c94c6226da7c7c76820ecc2f4b70e6a482d4fdaaca34"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 118978683,
                    "digest": "sha256:07cdf2ee27e33c4d3ea71364941929173d0b5d162c6ab5c6a618f56eb5e07760"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:66b77bc9ef788fbf6eb1933852be913482bbf9da6afe5dd9360c9d1f0be4bcd4"
                }
            ]
        },
        "1.12.1-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3801,
                "digest": "sha256:4f47c6b629dbdd306b57e594b6cc5b2ef157bb36791cde3f6b10632f5a437e98"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2687939,
                    "digest": "sha256:3b00a3925ee4b356facd24aea8ece58982a66577023cb3596ce3a321aef976f9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302317,
                    "digest": "sha256:7809c1a4c8e2fd286895f69d067b1a68841f9311a5c0e1afc51e64e57d777919"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:8c00b1d46f4493b4bfe8c94c6226da7c7c76820ecc2f4b70e6a482d4fdaaca34"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 118978683,
                    "digest": "sha256:07cdf2ee27e33c4d3ea71364941929173d0b5d162c6ab5c6a618f56eb5e07760"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:66b77bc9ef788fbf6eb1933852be913482bbf9da6afe5dd9360c9d1f0be4bcd4"
                }
            ]
        },
        "1.12.1-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5462,
                "digest": "sha256:37a6949a39835ca53281bfee333c092a2abc00594628c14f70245210792bbd13"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43132000,
                    "digest": "sha256:5385e634d2a1a330aea59f510b0676b269167a579dddb586b27917d80d0dfd01"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9730463,
                    "digest": "sha256:6696bae2f570e0c96dcb21308e525216796d3452d1a9b8dcaba168ba37f3f464"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4094072,
                    "digest": "sha256:6dca82770cb3702e9c92d2f155923c0fb55671c1c373b8b50640b7bf05ed8418"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48007546,
                    "digest": "sha256:d95e88827e80fd1e7c7d0a78bc734615833dd6ac19b07c1ad3b8b1c837bb4ece"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49040317,
                    "digest": "sha256:e8c58b43df76f1b8296622ae933fc04f8121c30de2a54b600b871c66c36dc78d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 104264187,
                    "digest": "sha256:82db464b222fccc1a540c25e67c1fe9e3ee2b903b2f094ba42c6c6e415ce3d6d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:c47d54452a09e68eae716d228c5d7b6d1581d773d2ec3bcb5c0c5c4c8bd0cb25"
                }
            ]
        },
        "1.12.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:cb2594e0cd0388bc77bf8a6093637d7f197e7555dd88febb14c82c6d4cd81aba",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                }
            ]
        },
        "1.12.10-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3808,
                "digest": "sha256:eec4392d97edf271dc159436bf960ea1a77c7c906af544e65d4edaaf026c6da3"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2714631,
                    "digest": "sha256:29bddadc8f3fd6ed92c289e0dcd22e094833933a73609e78b7fa767d45731f9f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302343,
                    "digest": "sha256:02bb20f2603b4e336ffac319dd61e85e4e63af97199ba21ebf181f2c61e6c4ba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:b62863a3550beeacb2ef844092cf6d764e3fbb976f78243827ee4f7eb5955d26"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 119030447,
                    "digest": "sha256:4b15598b95c9debd69d420c2d10b7075833b5d79d046cad4d055107272d42ffc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:69c8692d565bd1165bb14bb48853f3f7f2097a8bbcaad976cc2c5942546e99bb"
                }
            ]
        },
        "1.12.10-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3808,
                "digest": "sha256:eec4392d97edf271dc159436bf960ea1a77c7c906af544e65d4edaaf026c6da3"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2714631,
                    "digest": "sha256:29bddadc8f3fd6ed92c289e0dcd22e094833933a73609e78b7fa767d45731f9f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302343,
                    "digest": "sha256:02bb20f2603b4e336ffac319dd61e85e4e63af97199ba21ebf181f2c61e6c4ba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:b62863a3550beeacb2ef844092cf6d764e3fbb976f78243827ee4f7eb5955d26"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 119030447,
                    "digest": "sha256:4b15598b95c9debd69d420c2d10b7075833b5d79d046cad4d055107272d42ffc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:69c8692d565bd1165bb14bb48853f3f7f2097a8bbcaad976cc2c5942546e99bb"
                }
            ]
        },
        "1.12.10-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3806,
                "digest": "sha256:3a32949c2d0593cf76e8ef75d81dd67373dcaa7c7c27877ea67190c95e9ba9d0"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2688779,
                    "digest": "sha256:0362ad1dd800a9d92f8982fa28f173f9120266153830f990f7486f44b068968a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302429,
                    "digest": "sha256:4add8f29bf03f3d6fce96396daad08e0039610b96925452697ea40933ec96ec4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:d2a54cdb6f8d9efb5c7906e854f297284c50db62dea68960f9665d4e134a2da6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 119424066,
                    "digest": "sha256:6e2bd86596611c27d17c63d99cd89213a22588a760441e4074d3f680d9dbacca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:20a4e887ed45e13befe7e49f5b2ea69bc4319f700035efae58caef699c5e185e"
                }
            ]
        },
        "1.12.10-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5459,
                "digest": "sha256:b8f575f081cc5fae0260a8f54fc72810f7d241f7344acd81a9dcfe1b85101c10"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49172990,
                    "digest": "sha256:5a8521f5974d84ca2cef7f3a1ec71cce08198a563735e8d8d7c603536146819c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7680633,
                    "digest": "sha256:dd1378028f1d64d56a341de0c01136ac13cc193af54fb3c785e7ee29a493d09c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9983717,
                    "digest": "sha256:15cab53b0844e637da16aa62d159100c6022d0c9eada7037f946abce70764bcf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52102544,
                    "digest": "sha256:f6b3955dadc05d892a1e30426b7e75cd5a2c5e7d0f8a43ea4931e5207d66f850"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 62387631,
                    "digest": "sha256:56c70e5b63d16d171f01de1ccbb8913bc718c9b5b6f9675775782ba0d4653c6a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 104293211,
                    "digest": "sha256:1833d0a96a181ebb7e0ae2980c2aa5dafdce24fb892944cd7d0e53c5b083bbb1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:5eae9b4234de941c281209a673ea555f394f6c79fdeec59896617076837f6953"
                }
            ]
        },
        "1.12.10-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5470,
                "digest": "sha256:9df543fb0cffcf707ebf8296a44a42e2eb72eaa2d15d8929129d2f1c81f4953c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43166447,
                    "digest": "sha256:1ed27930b96e2175d71ddcca5deb645284e033026b012db87b4e63287f26e744"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9747759,
                    "digest": "sha256:bc3f19cb3e6a27b29e50792a97e187c8133ffd26bf4e9eda01c38df7bda5dcc7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4094404,
                    "digest": "sha256:41a323c975601416292ee6ed5dcd13a38a114a637f8fd363fb669e9e3fa1c885"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48017403,
                    "digest": "sha256:2cf998343cce503ce0417a9c1cab815ba914309cf5a67bc345894516b05b3ac8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49094808,
                    "digest": "sha256:ae49107ce31a8e9c4511b4e3302dc57fca611bea7467ecd8ce27852f932eda38"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 104293297,
                    "digest": "sha256:d3bfc4ceb8044fbe982312d1424240d1eb18666c38c687f53c97020c603ff046"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:d6ea1b1da02e715f44d947891b96dd85d7f06cbd41c53b03bc94a4d0b0037163"
                }
            ]
        },
        "1.12.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:7b293e321c8b3290ccd6ea0f1acb5ac9784cbcdd3f46b5c50676f11a2ef3e4ca",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                }
            ]
        },
        "1.12.11-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3808,
                "digest": "sha256:5a546ebd78115b7bbc60bcd785af803460fe620a1eaba358525428fbca1382df"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2714631,
                    "digest": "sha256:29bddadc8f3fd6ed92c289e0dcd22e094833933a73609e78b7fa767d45731f9f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302343,
                    "digest": "sha256:02bb20f2603b4e336ffac319dd61e85e4e63af97199ba21ebf181f2c61e6c4ba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:b62863a3550beeacb2ef844092cf6d764e3fbb976f78243827ee4f7eb5955d26"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 119029804,
                    "digest": "sha256:c5d3f9785c1c80184f349a7331e137be34c9603b30d212204ac6cc53ef6d2f7f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:3d4253c2c5667019facadfcbcc046de479b1f46b451d73cf7f9f3ccaae6a57e0"
                }
            ]
        },
        "1.12.11-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3808,
                "digest": "sha256:5a546ebd78115b7bbc60bcd785af803460fe620a1eaba358525428fbca1382df"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2714631,
                    "digest": "sha256:29bddadc8f3fd6ed92c289e0dcd22e094833933a73609e78b7fa767d45731f9f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302343,
                    "digest": "sha256:02bb20f2603b4e336ffac319dd61e85e4e63af97199ba21ebf181f2c61e6c4ba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:b62863a3550beeacb2ef844092cf6d764e3fbb976f78243827ee4f7eb5955d26"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 119029804,
                    "digest": "sha256:c5d3f9785c1c80184f349a7331e137be34c9603b30d212204ac6cc53ef6d2f7f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:3d4253c2c5667019facadfcbcc046de479b1f46b451d73cf7f9f3ccaae6a57e0"
                }
            ]
        },
        "1.12.11-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3805,
                "digest": "sha256:e2b5dcdebee0507e7f57d2b0d4698e7a3f58df804cd890d8259ce50fa5f0eb46"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2688779,
                    "digest": "sha256:0362ad1dd800a9d92f8982fa28f173f9120266153830f990f7486f44b068968a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302429,
                    "digest": "sha256:4add8f29bf03f3d6fce96396daad08e0039610b96925452697ea40933ec96ec4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:d2a54cdb6f8d9efb5c7906e854f297284c50db62dea68960f9665d4e134a2da6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 119422468,
                    "digest": "sha256:bcfbb75ba4d919ba84a045ebb6762d634661782d8333ce4e1fe8a7dd1a3f7987"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:2338d6129a021c3c1b39c090bfae46b77e2d34ba50b9890fcc24de08fd104560"
                }
            ]
        },
        "1.12.11-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5459,
                "digest": "sha256:5102359aa2c1b25f57268b93c1343fffa19a8c1438d3df6599275af290f4c102"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49172990,
                    "digest": "sha256:5a8521f5974d84ca2cef7f3a1ec71cce08198a563735e8d8d7c603536146819c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7680633,
                    "digest": "sha256:dd1378028f1d64d56a341de0c01136ac13cc193af54fb3c785e7ee29a493d09c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9983717,
                    "digest": "sha256:15cab53b0844e637da16aa62d159100c6022d0c9eada7037f946abce70764bcf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52102544,
                    "digest": "sha256:f6b3955dadc05d892a1e30426b7e75cd5a2c5e7d0f8a43ea4931e5207d66f850"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 62387631,
                    "digest": "sha256:56c70e5b63d16d171f01de1ccbb8913bc718c9b5b6f9675775782ba0d4653c6a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 104277117,
                    "digest": "sha256:4c55ee3946bb7380364d675d0cf561b41c6dff53f671a353dca9b45cfeb4e8fb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:3a96123dfb36d0a40a6f20b089976456cc6eb1a802c9a3d95ede9c997fdf8342"
                }
            ]
        },
        "1.12.11-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5470,
                "digest": "sha256:50ada23d5fcc4575faabb2258972011ad47cbff80d9479fa2af936881e1e65d4"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43166447,
                    "digest": "sha256:1ed27930b96e2175d71ddcca5deb645284e033026b012db87b4e63287f26e744"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9747759,
                    "digest": "sha256:bc3f19cb3e6a27b29e50792a97e187c8133ffd26bf4e9eda01c38df7bda5dcc7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4094404,
                    "digest": "sha256:41a323c975601416292ee6ed5dcd13a38a114a637f8fd363fb669e9e3fa1c885"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48017403,
                    "digest": "sha256:2cf998343cce503ce0417a9c1cab815ba914309cf5a67bc345894516b05b3ac8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49094808,
                    "digest": "sha256:ae49107ce31a8e9c4511b4e3302dc57fca611bea7467ecd8ce27852f932eda38"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 104277101,
                    "digest": "sha256:8505b9064cbd95465c5b167821bdf5e708aca88dc4e8ddd78b1fbbf2f679ca54"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:99ed9bc37dde291ce85e1e5cc79ac3b0431722843d35b249acd6d7a12faa901f"
                }
            ]
        },
        "1.12.12": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:7eb8de6de5116c3ed7fca1836a1b4fa838b853c7e0a6f2e715ee89280b613e17",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                }
            ]
        },
        "1.12.12-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3808,
                "digest": "sha256:6e7aa7b32c2653ffd35b20b5ddcb18f5a8af7ea08a3f064d9fb0e64aceee8c2c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2717778,
                    "digest": "sha256:8bfa913040406727f36faa9b69d0b96e071b13792a83ad69c19389031a9f3797"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302343,
                    "digest": "sha256:d523c651118b8110a7055546123bb301485868b779462028d410ad31ce758844"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:a46c404896130ad49e5b0a29fef854c53e121f275ffdd3c624399291cdb710c7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 119035235,
                    "digest": "sha256:9ebc913b11223a7b037e20f284c081049b0f06249bcffa8ff34504e1437af29d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:10fa098698037fc16e27c5234dfc1481bfcae204a34dd899fd3ffc22ec38400d"
                }
            ]
        },
        "1.12.12-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3808,
                "digest": "sha256:6e7aa7b32c2653ffd35b20b5ddcb18f5a8af7ea08a3f064d9fb0e64aceee8c2c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2717778,
                    "digest": "sha256:8bfa913040406727f36faa9b69d0b96e071b13792a83ad69c19389031a9f3797"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302343,
                    "digest": "sha256:d523c651118b8110a7055546123bb301485868b779462028d410ad31ce758844"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:a46c404896130ad49e5b0a29fef854c53e121f275ffdd3c624399291cdb710c7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 119035235,
                    "digest": "sha256:9ebc913b11223a7b037e20f284c081049b0f06249bcffa8ff34504e1437af29d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:10fa098698037fc16e27c5234dfc1481bfcae204a34dd899fd3ffc22ec38400d"
                }
            ]
        },
        "1.12.12-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3808,
                "digest": "sha256:13d8e7c8bd09fb761f08b08f0879abc7c7087f48db8f2b1b7fb03f15a9d06aa1"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2688779,
                    "digest": "sha256:0362ad1dd800a9d92f8982fa28f173f9120266153830f990f7486f44b068968a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302429,
                    "digest": "sha256:4add8f29bf03f3d6fce96396daad08e0039610b96925452697ea40933ec96ec4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:d2a54cdb6f8d9efb5c7906e854f297284c50db62dea68960f9665d4e134a2da6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 119433592,
                    "digest": "sha256:37fb6f2b95c5e9914e697ac81d85797191be7a80f122edc22bfec8f953b51403"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:8b3bc427ed966c217c0533b49899c72fba32bed0a62319b6c2a059830c2d6a04"
                }
            ]
        },
        "1.12.12-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5460,
                "digest": "sha256:6c206fad97ae2e3cc6523240466f29e52c4940c5c0afe8d299797a4805b0cbe3"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49172990,
                    "digest": "sha256:5a8521f5974d84ca2cef7f3a1ec71cce08198a563735e8d8d7c603536146819c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7680633,
                    "digest": "sha256:dd1378028f1d64d56a341de0c01136ac13cc193af54fb3c785e7ee29a493d09c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9983717,
                    "digest": "sha256:15cab53b0844e637da16aa62d159100c6022d0c9eada7037f946abce70764bcf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52102544,
                    "digest": "sha256:f6b3955dadc05d892a1e30426b7e75cd5a2c5e7d0f8a43ea4931e5207d66f850"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 62387631,
                    "digest": "sha256:56c70e5b63d16d171f01de1ccbb8913bc718c9b5b6f9675775782ba0d4653c6a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 104279156,
                    "digest": "sha256:a9ce3c0caf6190ed893a9d489ffd275215cd619815027212824aebc9b4b00895"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:19e813c3a2f14e1d11d4dd5b3da68decef0f6b73069daf08c3879099e8ababd7"
                }
            ]
        },
        "1.12.12-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5470,
                "digest": "sha256:53bc51cb4c52ca2c5f8649d2d75e812e66d6c19d9c0397c56acb55e6b16c5ed4"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43166447,
                    "digest": "sha256:1ed27930b96e2175d71ddcca5deb645284e033026b012db87b4e63287f26e744"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9747759,
                    "digest": "sha256:bc3f19cb3e6a27b29e50792a97e187c8133ffd26bf4e9eda01c38df7bda5dcc7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4094404,
                    "digest": "sha256:41a323c975601416292ee6ed5dcd13a38a114a637f8fd363fb669e9e3fa1c885"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48017403,
                    "digest": "sha256:2cf998343cce503ce0417a9c1cab815ba914309cf5a67bc345894516b05b3ac8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49094808,
                    "digest": "sha256:ae49107ce31a8e9c4511b4e3302dc57fca611bea7467ecd8ce27852f932eda38"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 104279062,
                    "digest": "sha256:39707f0f266cfaeadaf194c50efce988381131709701f1d1f2187ab275d4e210"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:465062e5d0a6e2f82ba61780397e0ae24aa8a0d52bc8eeaae95802443f823247"
                }
            ]
        },
        "1.12.13": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:90d22880138982344585d5057369199b4da6f84e4b3f7ea7f8f27e67dfd0b66a",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                }
            ]
        },
        "1.12.13-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3808,
                "digest": "sha256:18e7b4d337c6bda262d3c9f8b1109afbf83b35b6d98805e66124e1f3aa4dd558"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2717778,
                    "digest": "sha256:8bfa913040406727f36faa9b69d0b96e071b13792a83ad69c19389031a9f3797"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302343,
                    "digest": "sha256:d523c651118b8110a7055546123bb301485868b779462028d410ad31ce758844"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:a46c404896130ad49e5b0a29fef854c53e121f275ffdd3c624399291cdb710c7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 119034654,
                    "digest": "sha256:58e7c1c8573f1274fffe6905d1960fa5e5e7aca80d1822edf5a39d647759d00e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:e37b469395f17e4c5021cc5080f467f098ef519b7efad16ce2babe4b853b9583"
                }
            ]
        },
        "1.12.13-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3808,
                "digest": "sha256:18e7b4d337c6bda262d3c9f8b1109afbf83b35b6d98805e66124e1f3aa4dd558"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2717778,
                    "digest": "sha256:8bfa913040406727f36faa9b69d0b96e071b13792a83ad69c19389031a9f3797"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302343,
                    "digest": "sha256:d523c651118b8110a7055546123bb301485868b779462028d410ad31ce758844"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:a46c404896130ad49e5b0a29fef854c53e121f275ffdd3c624399291cdb710c7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 119034654,
                    "digest": "sha256:58e7c1c8573f1274fffe6905d1960fa5e5e7aca80d1822edf5a39d647759d00e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:e37b469395f17e4c5021cc5080f467f098ef519b7efad16ce2babe4b853b9583"
                }
            ]
        },
        "1.12.13-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3808,
                "digest": "sha256:e33925fdcb7b194cf0288735246094ce900ea7647f9f1dfb12d94eb1b38c37ad"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2688779,
                    "digest": "sha256:0362ad1dd800a9d92f8982fa28f173f9120266153830f990f7486f44b068968a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302429,
                    "digest": "sha256:4add8f29bf03f3d6fce96396daad08e0039610b96925452697ea40933ec96ec4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:d2a54cdb6f8d9efb5c7906e854f297284c50db62dea68960f9665d4e134a2da6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 119434204,
                    "digest": "sha256:c70aabae39f2621de9df9d2a8dc57b9eecad317b4fa6258004c14747f31ec2b6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:a39961ab2de5a4a5d365a1ea94780602d1f47daa1c8cef9331f02c2004cce099"
                }
            ]
        },
        "1.12.13-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5458,
                "digest": "sha256:a218118ec94fd4fed358bc4371ab5f3ad287a42d85081fa2ee1d1510a86dc711"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49172037,
                    "digest": "sha256:af4800279257e4522b03ad0d6d0aa937a2761fe0e54758127ec7fd14fc1715d0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7680704,
                    "digest": "sha256:8fae2ec46cd5af1ce11d246b5b7bea023991c857cbf131fc2b4f80a42c7abb5c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9983756,
                    "digest": "sha256:8a8718b9412e0a23370b0877b007da88210a2408dd572782050dcdd233e1f19e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52079377,
                    "digest": "sha256:4908f8b447250af91341f8f3a1741b2c8d6432714e885746c4afd227eed1be7b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 62390200,
                    "digest": "sha256:6fd45c94aea8e7113c802cdf136fa06208ea9790839ee30b53ba3a47bfbd69f6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 104279248,
                    "digest": "sha256:1932048b53da57761d27aad07ddf3b86c06ad0323c13173e0b1c1c75a0aae10f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:58bf4dec44b6f4affb5f21a142aa1073e3a3855099df9edfb9936cf83f6b5286"
                }
            ]
        },
        "1.12.13-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5468,
                "digest": "sha256:7d0248a3ac609ec49ecb449c5e93c4a61f65ad589729af16d74dc89b6fe47c45"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43166306,
                    "digest": "sha256:c0d6add7f35c078f38df34ebc5a91afab0ba514167d17ad24fd4582eb0880bf4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9747762,
                    "digest": "sha256:c616dd61dc37eac19d38cdbdf732659429ae37ba0d1578100f874fe236e25125"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4094358,
                    "digest": "sha256:df36da42882c170ff4b949c027b410428b5c0942632ed441a2f9a168a859ec0c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48016405,
                    "digest": "sha256:81386fcdc923e324fecbdb336d477691cc0be39e7e4e23ec733257ee50eddd57"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49097840,
                    "digest": "sha256:1c9df73c5ccf07ebcbce7b4751a530b298f418460086a7785e0dec404e6bd3ae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 104279237,
                    "digest": "sha256:c4f393fba7d7960310fea940ea2b8dcbbe19f15126264b98bd72febeffc74194"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:196385a7244f43b47d597a959f2b91beb664db2489edb5e6b510f73686ae7f12"
                }
            ]
        },
        "1.12.14": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:974083abb3fb3b8821a511129740fe812faba1870c64e2a5547d84e9a799aa58",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                }
            ]
        },
        "1.12.14-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3839,
                "digest": "sha256:68b0861540a6f26b53e4f3d8e5513981d11098a0a7f821f4eacf98819fd6f472"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2719182,
                    "digest": "sha256:cde5963f3b93eec667cad527c99d80402a5a91a7a1381f7ffe562f215aec0c50"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301820,
                    "digest": "sha256:2a23fa8c16f7dd95c9d4b0dac8b41013b1d5443c179584c1bd9bc372738c2a7e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:777b288507921e36cb5373c59249e243eb212d58f61cfa8455a9bc1794c452a9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 117795820,
                    "digest": "sha256:3b9bb2159cbbfa267758cb5152bd25528bdf12e01ffe57d2921799570d4a1c48"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:3e5cb46e90bb4044758b76e5cdcde62d617969144de54f95196a7bfb6ad2f882"
                }
            ]
        },
        "1.12.14-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3838,
                "digest": "sha256:e328a7d2a70ee79965440f4118363c03a775daa5d340ab0eed6fea1db9ee4f08"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2717778,
                    "digest": "sha256:8bfa913040406727f36faa9b69d0b96e071b13792a83ad69c19389031a9f3797"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302343,
                    "digest": "sha256:d523c651118b8110a7055546123bb301485868b779462028d410ad31ce758844"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:a46c404896130ad49e5b0a29fef854c53e121f275ffdd3c624399291cdb710c7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 117799662,
                    "digest": "sha256:168a071fef808c05aacd041f52578f26cb88d6d2dc5ad504bc5d2046a21b7261"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:43f5cc985db3d0c71d84c2bfdc3aee8665a4c179077c8fdce2bfc01791826867"
                }
            ]
        },
        "1.12.14-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3839,
                "digest": "sha256:68b0861540a6f26b53e4f3d8e5513981d11098a0a7f821f4eacf98819fd6f472"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2719182,
                    "digest": "sha256:cde5963f3b93eec667cad527c99d80402a5a91a7a1381f7ffe562f215aec0c50"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301820,
                    "digest": "sha256:2a23fa8c16f7dd95c9d4b0dac8b41013b1d5443c179584c1bd9bc372738c2a7e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:777b288507921e36cb5373c59249e243eb212d58f61cfa8455a9bc1794c452a9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 117795820,
                    "digest": "sha256:3b9bb2159cbbfa267758cb5152bd25528bdf12e01ffe57d2921799570d4a1c48"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:3e5cb46e90bb4044758b76e5cdcde62d617969144de54f95196a7bfb6ad2f882"
                }
            ]
        },
        "1.12.14-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3808,
                "digest": "sha256:85317d99d405de9871b1be02e64a8fd28686da17097c4922433fa5350517ff61"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2688779,
                    "digest": "sha256:0362ad1dd800a9d92f8982fa28f173f9120266153830f990f7486f44b068968a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302429,
                    "digest": "sha256:4add8f29bf03f3d6fce96396daad08e0039610b96925452697ea40933ec96ec4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:d2a54cdb6f8d9efb5c7906e854f297284c50db62dea68960f9665d4e134a2da6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 118202303,
                    "digest": "sha256:f4c99ff429bfc85b92d397bb56d37b8c3305a6360298b6f4c53c6b582eef054f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:e7e7e1a01fc4f73efbabc533336be5cbc4e4760e198db3905da1a1791861c690"
                }
            ]
        },
        "1.12.14-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5460,
                "digest": "sha256:aa12418f48b57436fa76d81571cad6c299ea32663e17294f7093d79e074e80b6"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49171876,
                    "digest": "sha256:627706d65d1d9b4038d8fd40db52238d4f11d9130a01f23ffae9bf5d41ac5933"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7681148,
                    "digest": "sha256:e6ac1923ab7a97ecdde2a4f034a8b716d51594ba6fc823c6aaac579c31f51906"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9983835,
                    "digest": "sha256:b000e01546d5b9b3a40a3797f15bc0a1f579786c5ec8da31cbe9502f1927d367"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52102816,
                    "digest": "sha256:dc8fe6ebd465d85dc79039fbd39712f1fadf5d7ac5fbefe405ef7a4f957a94ce"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 62390533,
                    "digest": "sha256:f8cbdfdb9424fb643ea7b54950b09c1e0e150d46e21377c399e1a3d01421101c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 103030915,
                    "digest": "sha256:fea370599a94c51a65d105a9231e0bb217b600fe9b45e17ffc767fcbd70113dc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 157,
                    "digest": "sha256:5b0d55156e80a4f558bf0e65fb69b666c328075df2105e52f2fb64ab25a451cb"
                }
            ]
        },
        "1.12.14-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5470,
                "digest": "sha256:5c02e7134bbc1c7b61ea45ecd537ebc3733e3a943ebe40c64a2975a8c473941c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43166476,
                    "digest": "sha256:d07bcf5901dfa793fa6b2c4c617e86bcef315b0b092cbfd1a929eefedaf8e3f2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9748258,
                    "digest": "sha256:b4f31062581dadb1f69c43e9441040dd46788bf13ae51f20c66929fac82b506b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4094448,
                    "digest": "sha256:d62337a296a607f48a5dc3a7c07639360d98e0e78982ca8e459c832719012f12"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48024191,
                    "digest": "sha256:403697a3e152c7a38ddb9175a90ed2dac97d780421c35949ff80cd67a7d4e596"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49098028,
                    "digest": "sha256:7156aa26d0e81147cce624b6fedcefdda992fda278b991226f829a20fd740628"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 103030971,
                    "digest": "sha256:84102b83a4691e7150ccfb28f4452b9f975be8bcc7121a554af6141402bee794"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:164d2c76f2bc885d2a2f67adff82e68d3bccea53bd5a84b62ac19a4d0002eab3"
                }
            ]
        },
        "1.12.15": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:8d92611ff461fb5c1646264905413917d76b7003b06feec09a836d88699a2382",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                }
            ]
        },
        "1.12.15-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3837,
                "digest": "sha256:71c2b42280a413cc159b2bc7829c7e47570c41691324a668d3fc5c2db02cd9b0"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2723075,
                    "digest": "sha256:8fa90b21c985a6fcfff966bdfbde81cdd088de0aa8af38110057f6ac408f4408"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301775,
                    "digest": "sha256:fa3b0fa9a238a4fa3f590c80e14c5732f811f7a17aa0b8102cea7e3a9d250fcd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:583d88f014275e361b79e5a5ccf10b177aafe63e5d44ccd5d3911ca9b924efac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 117803767,
                    "digest": "sha256:1017a5cc5e01414b2b820e77594cc6a3112601c3fe26d0bf3d78d26c3f00ae03"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:ef380f251a481b845516ca8b91110ad1af2cae57f294f37130aedd6f192b86ff"
                }
            ]
        },
        "1.12.15-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3839,
                "digest": "sha256:e0de69478ede9daf191eb04b828fd906ca9c60b3f2f148cbf21c30193c76166e"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2717732,
                    "digest": "sha256:f07e4bcf42b862c240f4c00f2f7ed362d7d93ca15151de547beda593f3b669e5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302350,
                    "digest": "sha256:50d558a7b39742c40031affac43b0aca8782b1d6b200679c6e9cf4d4c47a5953"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:b423fbf207f04f0d10356619a60fc06a50f6df4151e41b196dc9074fe2f7b7f3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 117804877,
                    "digest": "sha256:e200b68896179071ffa6bea7c0717cfca0a8675e05032658fc717c6add7c99bb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:25a725ef2e791da3a9aeaf81407a3db571bff65867082f6b01eb54d04344b979"
                }
            ]
        },
        "1.12.15-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3837,
                "digest": "sha256:71c2b42280a413cc159b2bc7829c7e47570c41691324a668d3fc5c2db02cd9b0"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2723075,
                    "digest": "sha256:8fa90b21c985a6fcfff966bdfbde81cdd088de0aa8af38110057f6ac408f4408"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301775,
                    "digest": "sha256:fa3b0fa9a238a4fa3f590c80e14c5732f811f7a17aa0b8102cea7e3a9d250fcd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:583d88f014275e361b79e5a5ccf10b177aafe63e5d44ccd5d3911ca9b924efac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 117803767,
                    "digest": "sha256:1017a5cc5e01414b2b820e77594cc6a3112601c3fe26d0bf3d78d26c3f00ae03"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:ef380f251a481b845516ca8b91110ad1af2cae57f294f37130aedd6f192b86ff"
                }
            ]
        },
        "1.12.15-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5462,
                "digest": "sha256:47e40ccc7e1d6f6a8d775baca01de988822b559664f2db97312c58456c52d86a"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49171876,
                    "digest": "sha256:627706d65d1d9b4038d8fd40db52238d4f11d9130a01f23ffae9bf5d41ac5933"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7681148,
                    "digest": "sha256:e6ac1923ab7a97ecdde2a4f034a8b716d51594ba6fc823c6aaac579c31f51906"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9983835,
                    "digest": "sha256:b000e01546d5b9b3a40a3797f15bc0a1f579786c5ec8da31cbe9502f1927d367"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52102816,
                    "digest": "sha256:dc8fe6ebd465d85dc79039fbd39712f1fadf5d7ac5fbefe405ef7a4f957a94ce"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 62390533,
                    "digest": "sha256:f8cbdfdb9424fb643ea7b54950b09c1e0e150d46e21377c399e1a3d01421101c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 103042187,
                    "digest": "sha256:20d2bffb01b5ff0d59f521803fe461f2dca32f41dd64809bca22cba93fd1e268"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:a40f73f9f176775c3e66aa8c51cfd38b54682a0a137f60458a88a738f3ed8e0b"
                }
            ]
        },
        "1.12.15-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5470,
                "digest": "sha256:608d9d2879d4f20b19903210c232972d06d6a6a0a5b9dd00929761c4a3f60678"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43166476,
                    "digest": "sha256:d07bcf5901dfa793fa6b2c4c617e86bcef315b0b092cbfd1a929eefedaf8e3f2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9748258,
                    "digest": "sha256:b4f31062581dadb1f69c43e9441040dd46788bf13ae51f20c66929fac82b506b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4094448,
                    "digest": "sha256:d62337a296a607f48a5dc3a7c07639360d98e0e78982ca8e459c832719012f12"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48024191,
                    "digest": "sha256:403697a3e152c7a38ddb9175a90ed2dac97d780421c35949ff80cd67a7d4e596"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49098028,
                    "digest": "sha256:7156aa26d0e81147cce624b6fedcefdda992fda278b991226f829a20fd740628"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 103042216,
                    "digest": "sha256:46e742f781e37fe5997db8c173ddbc739fb39819990210834ef8d801239d505f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:2c45e37005d289cf528e502176508d310861981cd53c7e00e213e80799b3e0a3"
                }
            ]
        },
        "1.12.16": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:09d385c4fe4ddd3992204bd46a2465fe1df4001ad935d27af0eaf9e006f8bc80",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                }
            ]
        },
        "1.12.16-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3835,
                "digest": "sha256:50708145fe5fbc1fc2924a1d0d1aa74f42eee92baedce96e1a5cf2e822bdc1dd"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2723075,
                    "digest": "sha256:8fa90b21c985a6fcfff966bdfbde81cdd088de0aa8af38110057f6ac408f4408"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301775,
                    "digest": "sha256:fa3b0fa9a238a4fa3f590c80e14c5732f811f7a17aa0b8102cea7e3a9d250fcd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:583d88f014275e361b79e5a5ccf10b177aafe63e5d44ccd5d3911ca9b924efac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 117802326,
                    "digest": "sha256:4a2381978d47a77684dc5f20c361f2a3e77eae223b1e581948570c80f9d4b46e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:21f2581aecf0d039cc23b2ce2447724b3409f7ce2bdd57accb965fe1c71fda02"
                }
            ]
        },
        "1.12.16-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3836,
                "digest": "sha256:d19322b771043e13bbaabd791764c41a3c1f58588c418df69dbabd9a52ae24a5"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2717732,
                    "digest": "sha256:f07e4bcf42b862c240f4c00f2f7ed362d7d93ca15151de547beda593f3b669e5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302350,
                    "digest": "sha256:50d558a7b39742c40031affac43b0aca8782b1d6b200679c6e9cf4d4c47a5953"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:b423fbf207f04f0d10356619a60fc06a50f6df4151e41b196dc9074fe2f7b7f3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 117803451,
                    "digest": "sha256:4402668ba9ee19f92f20aaf1b99c9d4b6393060b06c3cd3cb5b26e454ba61574"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:7fa827ecfa706a2bf166acb1b4e2a49e3ade3acb13baada9e2f58008261d71b3"
                }
            ]
        },
        "1.12.16-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3835,
                "digest": "sha256:50708145fe5fbc1fc2924a1d0d1aa74f42eee92baedce96e1a5cf2e822bdc1dd"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2723075,
                    "digest": "sha256:8fa90b21c985a6fcfff966bdfbde81cdd088de0aa8af38110057f6ac408f4408"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301775,
                    "digest": "sha256:fa3b0fa9a238a4fa3f590c80e14c5732f811f7a17aa0b8102cea7e3a9d250fcd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:583d88f014275e361b79e5a5ccf10b177aafe63e5d44ccd5d3911ca9b924efac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 117802326,
                    "digest": "sha256:4a2381978d47a77684dc5f20c361f2a3e77eae223b1e581948570c80f9d4b46e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:21f2581aecf0d039cc23b2ce2447724b3409f7ce2bdd57accb965fe1c71fda02"
                }
            ]
        },
        "1.12.16-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5457,
                "digest": "sha256:82574ac277314cc485e8feabefe3b5852a56e2025b90772ba4c17d0483da4ef5"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49171687,
                    "digest": "sha256:bc03a7ced18fc43ea9523dfb256d2c3fbb835dc0bb54bdb7fd309edf936a87e7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7680993,
                    "digest": "sha256:cba9d528c1473d79c18b401d44ca06b9733d9c51a8699b98e8325c9de60b9739"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9983754,
                    "digest": "sha256:981400d5d268dc989681d5f308b7d2e381809f0bcc82429f443f7539cf6117ba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52102938,
                    "digest": "sha256:f0b2d547b8bc79a444406e56d724fb7d961c953e7f2797de4f55b29abee5605f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 62390640,
                    "digest": "sha256:c84a606fada5847b27d4f74a29fdf4fb7b8ab9430f363c3f35669cabe7a0daf2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 103040030,
                    "digest": "sha256:49b326335b4ded1625ac6f4e7d4d839089013bc4f0af8d6a5f08e13df2f9e7cb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:bd87c4636d44704af90bd6cbe0442761f431fbeab113fa027d314dc6b00c897e"
                }
            ]
        },
        "1.12.16-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5467,
                "digest": "sha256:26a61b90483ae71c6148253d7c2058123cf52aef0c2a16c13b6b9396786ddae3"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43166749,
                    "digest": "sha256:df3de44c7096ba135556a1e7044f9e1feee3ef713ab96f0416f71fe78422cbf6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9748586,
                    "digest": "sha256:fdf173a01baf7d45b479bb380ece219cbf0ea52178e9b8cdc5b87891759d1122"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4094322,
                    "digest": "sha256:c3392eac7bc27f3bd5fcb024413ca55ec4115c22da3e229567d5fc03cd4ff4e4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48024205,
                    "digest": "sha256:04a82fc9ca296b095585ba7f3f6d83566428dbefcbfd284e242039aba97840b2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49097963,
                    "digest": "sha256:aca1cf3b66f921e6f0d5e42cf6821f9a4af6cf2bba19118c0275e0c78b66d0a5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 103040134,
                    "digest": "sha256:2308a4a3aca0df6d197ce4d03f3c06edde4f59bfc18584b31410aa599b161b1e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 157,
                    "digest": "sha256:b3560f31dbfdadc9ed8797733985a6fb2c945b9089d11d85e40cf4b66b0a3b8f"
                }
            ]
        },
        "1.12.17": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:267f9e390b1feeea7513b9de7c57c40dbfa5444485ade0b41c33d164d840e268",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                }
            ]
        },
        "1.12.17-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3835,
                "digest": "sha256:9d993b748f324b8291a4f202c2bc07b3485f7b9c7c799ee8925f657a760749cd"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2723075,
                    "digest": "sha256:8fa90b21c985a6fcfff966bdfbde81cdd088de0aa8af38110057f6ac408f4408"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301775,
                    "digest": "sha256:fa3b0fa9a238a4fa3f590c80e14c5732f811f7a17aa0b8102cea7e3a9d250fcd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:583d88f014275e361b79e5a5ccf10b177aafe63e5d44ccd5d3911ca9b924efac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 117802832,
                    "digest": "sha256:269d862632142e430c9cc5bdc78bed94ffbc196b0765f85145ad8496226170f0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:3add431ca4461d4ac0337fe0e850fa379ec7a612579eeebd8674573bf7ceddd0"
                }
            ]
        },
        "1.12.17-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3835,
                "digest": "sha256:e60d4be18f30ae9c5ead8bfab8b54ed9ec61f566b5198dc2d148e44e1525fd5b"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2717732,
                    "digest": "sha256:f07e4bcf42b862c240f4c00f2f7ed362d7d93ca15151de547beda593f3b669e5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302350,
                    "digest": "sha256:50d558a7b39742c40031affac43b0aca8782b1d6b200679c6e9cf4d4c47a5953"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:b423fbf207f04f0d10356619a60fc06a50f6df4151e41b196dc9074fe2f7b7f3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 117803925,
                    "digest": "sha256:922302c81bd07bba8568c116c4d049da799d27cab99ebf24f4e5216098449431"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:9eab71dc52030ce39ed54c5193464a322b3b7e4ba911e45842d6fefa0c2d7100"
                }
            ]
        },
        "1.12.17-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3835,
                "digest": "sha256:9d993b748f324b8291a4f202c2bc07b3485f7b9c7c799ee8925f657a760749cd"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2723075,
                    "digest": "sha256:8fa90b21c985a6fcfff966bdfbde81cdd088de0aa8af38110057f6ac408f4408"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301775,
                    "digest": "sha256:fa3b0fa9a238a4fa3f590c80e14c5732f811f7a17aa0b8102cea7e3a9d250fcd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:583d88f014275e361b79e5a5ccf10b177aafe63e5d44ccd5d3911ca9b924efac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 117802832,
                    "digest": "sha256:269d862632142e430c9cc5bdc78bed94ffbc196b0765f85145ad8496226170f0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:3add431ca4461d4ac0337fe0e850fa379ec7a612579eeebd8674573bf7ceddd0"
                }
            ]
        },
        "1.12.17-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5458,
                "digest": "sha256:e17983a82ca70dfd0928cfaf2b5a86fc0fcd3855f0fde38b330fe81f6ecf765c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49171687,
                    "digest": "sha256:bc03a7ced18fc43ea9523dfb256d2c3fbb835dc0bb54bdb7fd309edf936a87e7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7680993,
                    "digest": "sha256:cba9d528c1473d79c18b401d44ca06b9733d9c51a8699b98e8325c9de60b9739"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9983754,
                    "digest": "sha256:981400d5d268dc989681d5f308b7d2e381809f0bcc82429f443f7539cf6117ba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52102938,
                    "digest": "sha256:f0b2d547b8bc79a444406e56d724fb7d961c953e7f2797de4f55b29abee5605f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 62390640,
                    "digest": "sha256:c84a606fada5847b27d4f74a29fdf4fb7b8ab9430f363c3f35669cabe7a0daf2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 103039981,
                    "digest": "sha256:67695a1e50bad589afe728db28ee68cceb5387ed9d95546b0aa7c0c7cbbe1fd7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:4097104a51c8140cb0bd8fee2c44e88cce2359a856ee27217b8e311d1bfcd8ee"
                }
            ]
        },
        "1.12.17-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5467,
                "digest": "sha256:0feb561d8ecc6345fb21bbefcfb041b6a30d5668ee9046c22b2debc276e16242"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43166749,
                    "digest": "sha256:df3de44c7096ba135556a1e7044f9e1feee3ef713ab96f0416f71fe78422cbf6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9748586,
                    "digest": "sha256:fdf173a01baf7d45b479bb380ece219cbf0ea52178e9b8cdc5b87891759d1122"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4094322,
                    "digest": "sha256:c3392eac7bc27f3bd5fcb024413ca55ec4115c22da3e229567d5fc03cd4ff4e4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48024205,
                    "digest": "sha256:04a82fc9ca296b095585ba7f3f6d83566428dbefcbfd284e242039aba97840b2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49097963,
                    "digest": "sha256:aca1cf3b66f921e6f0d5e42cf6821f9a4af6cf2bba19118c0275e0c78b66d0a5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 103040000,
                    "digest": "sha256:9a3a41286ede148a6f698da082a3a734ef94b369a4dd5948a0581d5c4b2a392d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:e7e07c5d7e30d3efbbede92656941ab47cced8209674af6cb89ca0dd7d8017b3"
                }
            ]
        },
        "1.12.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:f21347abca26f6d1f1e514c442bec06f55b2a0dad19238cbc03d782056f4615e",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                }
            ]
        },
        "1.12.2-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3804,
                "digest": "sha256:a160838c5089151c4c96466ce1b3e43b78760a9580369d75c0c0531706982623"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2687939,
                    "digest": "sha256:3b00a3925ee4b356facd24aea8ece58982a66577023cb3596ce3a321aef976f9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302317,
                    "digest": "sha256:7809c1a4c8e2fd286895f69d067b1a68841f9311a5c0e1afc51e64e57d777919"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:8c00b1d46f4493b4bfe8c94c6226da7c7c76820ecc2f4b70e6a482d4fdaaca34"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 119418102,
                    "digest": "sha256:230b01a154be12f90af8a6912460ee50efe34bfa10a504ccec1247f76d8e1c82"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:e3d59c2ea62458393590d17eda871ff02a70d58de11093f5012029bc8ae0f8aa"
                }
            ]
        },
        "1.12.2-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3804,
                "digest": "sha256:a160838c5089151c4c96466ce1b3e43b78760a9580369d75c0c0531706982623"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2687939,
                    "digest": "sha256:3b00a3925ee4b356facd24aea8ece58982a66577023cb3596ce3a321aef976f9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302317,
                    "digest": "sha256:7809c1a4c8e2fd286895f69d067b1a68841f9311a5c0e1afc51e64e57d777919"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:8c00b1d46f4493b4bfe8c94c6226da7c7c76820ecc2f4b70e6a482d4fdaaca34"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 119418102,
                    "digest": "sha256:230b01a154be12f90af8a6912460ee50efe34bfa10a504ccec1247f76d8e1c82"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:e3d59c2ea62458393590d17eda871ff02a70d58de11093f5012029bc8ae0f8aa"
                }
            ]
        },
        "1.12.2-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5462,
                "digest": "sha256:86aaea01326bb3e39500530b878aaa9313d21d1698afae0bfae33c30088a095a"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43132000,
                    "digest": "sha256:5385e634d2a1a330aea59f510b0676b269167a579dddb586b27917d80d0dfd01"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9730463,
                    "digest": "sha256:6696bae2f570e0c96dcb21308e525216796d3452d1a9b8dcaba168ba37f3f464"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4094072,
                    "digest": "sha256:6dca82770cb3702e9c92d2f155923c0fb55671c1c373b8b50640b7bf05ed8418"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48007546,
                    "digest": "sha256:d95e88827e80fd1e7c7d0a78bc734615833dd6ac19b07c1ad3b8b1c837bb4ece"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49040317,
                    "digest": "sha256:e8c58b43df76f1b8296622ae933fc04f8121c30de2a54b600b871c66c36dc78d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 104254251,
                    "digest": "sha256:40e3fec08329f1aacbb30e4b24ace68c2f422cd110541aed68a4affb48edc9a5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:0a1397856270efe89006bdc2913419fc0622463b99cb0766e0e755efaec91710"
                }
            ]
        },
        "1.12.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:21f98732ec0c34249196d88c9388d6f148220cbad7bb49bd510d75e6d660b3c3",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                }
            ]
        },
        "1.12.3-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3804,
                "digest": "sha256:c2f79138762795eee781d2407c75202ca468c3fb3e9142f10ac845e6f08b9ae9"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2688778,
                    "digest": "sha256:6f37394be673296a0fdc21b819c5df40431baf7d3af121bee451726dd1457493"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302320,
                    "digest": "sha256:624d8cd5989279cea7781d46cf9e54248dc5914b85a54e5f3dda694c3dc0aec4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:ecff0f4f34353de2916477d55f845eedaf0354998b8a77494fb80ae3c6c3aa36"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 118981731,
                    "digest": "sha256:54c1c550f6fd9aad9017dddaaba52fb932a494e4aa027b1c3f3c5135cee95421"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:303e5d086856b5ac0bc842d1b9d0e2c4262ee816c2ba9eea39e955a40175dfa1"
                }
            ]
        },
        "1.12.3-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3804,
                "digest": "sha256:c2f79138762795eee781d2407c75202ca468c3fb3e9142f10ac845e6f08b9ae9"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2688778,
                    "digest": "sha256:6f37394be673296a0fdc21b819c5df40431baf7d3af121bee451726dd1457493"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302320,
                    "digest": "sha256:624d8cd5989279cea7781d46cf9e54248dc5914b85a54e5f3dda694c3dc0aec4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:ecff0f4f34353de2916477d55f845eedaf0354998b8a77494fb80ae3c6c3aa36"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 118981731,
                    "digest": "sha256:54c1c550f6fd9aad9017dddaaba52fb932a494e4aa027b1c3f3c5135cee95421"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:303e5d086856b5ac0bc842d1b9d0e2c4262ee816c2ba9eea39e955a40175dfa1"
                }
            ]
        },
        "1.12.3-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5462,
                "digest": "sha256:22b0088765f35ff8bbbff8a3e65d177d388d48cff3d9238b82840f1168856127"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43132000,
                    "digest": "sha256:5385e634d2a1a330aea59f510b0676b269167a579dddb586b27917d80d0dfd01"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9730463,
                    "digest": "sha256:6696bae2f570e0c96dcb21308e525216796d3452d1a9b8dcaba168ba37f3f464"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4094072,
                    "digest": "sha256:6dca82770cb3702e9c92d2f155923c0fb55671c1c373b8b50640b7bf05ed8418"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48007546,
                    "digest": "sha256:d95e88827e80fd1e7c7d0a78bc734615833dd6ac19b07c1ad3b8b1c837bb4ece"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49040317,
                    "digest": "sha256:e8c58b43df76f1b8296622ae933fc04f8121c30de2a54b600b871c66c36dc78d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 104254202,
                    "digest": "sha256:1d7892b2ef7d57e43276753cbf844ee2892a87e45e6b68e9c7964ed0db4dbd28"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:d89e4c01fdf9c0346bb45f8d67373feeb9c1eebc6c3fa94c09654b193bf996c6"
                }
            ]
        },
        "1.12.4": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:e8516dcc26a695df47ecbece295584dd17ac97ac68c054ece16b7390f6942a36",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                }
            ]
        },
        "1.12.4-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3805,
                "digest": "sha256:7701ec5e84debd6749fe8727c9cca8c4563202ad67b35adac86508a89b43a3f5"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2688778,
                    "digest": "sha256:6f37394be673296a0fdc21b819c5df40431baf7d3af121bee451726dd1457493"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302320,
                    "digest": "sha256:624d8cd5989279cea7781d46cf9e54248dc5914b85a54e5f3dda694c3dc0aec4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:ecff0f4f34353de2916477d55f845eedaf0354998b8a77494fb80ae3c6c3aa36"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 118981918,
                    "digest": "sha256:f11e1a45934da162a6f7ce86a17111287328a1921882ffad2361f13f8ca14775"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:7e20c21aaea4fdde857277a9880cbf3069d1dfafa54fb56cc329dd0c82e7d7ff"
                }
            ]
        },
        "1.12.4-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3805,
                "digest": "sha256:7701ec5e84debd6749fe8727c9cca8c4563202ad67b35adac86508a89b43a3f5"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2688778,
                    "digest": "sha256:6f37394be673296a0fdc21b819c5df40431baf7d3af121bee451726dd1457493"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302320,
                    "digest": "sha256:624d8cd5989279cea7781d46cf9e54248dc5914b85a54e5f3dda694c3dc0aec4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:ecff0f4f34353de2916477d55f845eedaf0354998b8a77494fb80ae3c6c3aa36"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 118981918,
                    "digest": "sha256:f11e1a45934da162a6f7ce86a17111287328a1921882ffad2361f13f8ca14775"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:7e20c21aaea4fdde857277a9880cbf3069d1dfafa54fb56cc329dd0c82e7d7ff"
                }
            ]
        },
        "1.12.4-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5464,
                "digest": "sha256:fc6b8f62856b1172f4693708fc639736615bff028c0f18bc36351ce1b881819c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43132000,
                    "digest": "sha256:5385e634d2a1a330aea59f510b0676b269167a579dddb586b27917d80d0dfd01"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9730463,
                    "digest": "sha256:6696bae2f570e0c96dcb21308e525216796d3452d1a9b8dcaba168ba37f3f464"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4094072,
                    "digest": "sha256:6dca82770cb3702e9c92d2f155923c0fb55671c1c373b8b50640b7bf05ed8418"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48007546,
                    "digest": "sha256:d95e88827e80fd1e7c7d0a78bc734615833dd6ac19b07c1ad3b8b1c837bb4ece"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49040317,
                    "digest": "sha256:e8c58b43df76f1b8296622ae933fc04f8121c30de2a54b600b871c66c36dc78d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 104254714,
                    "digest": "sha256:0858b817ac5b43555b898c1a03ddcda505b97af83ff395213c6901f0f999ae29"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:a13bffb5ce1c94f4a523b8c4cdfa469658d481c1bec63b9497dd9ed51d2fa199"
                }
            ]
        },
        "1.12.5": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:5729d15f03694232a81da4d2f5d15eb159e165f2e4e6170c810d807e9f17be55",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                }
            ]
        },
        "1.12.5-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3802,
                "digest": "sha256:306636bcc7d9a56b10842d7c433df8236ae60f0494588173a4146f84e2fd28e6"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2688779,
                    "digest": "sha256:0362ad1dd800a9d92f8982fa28f173f9120266153830f990f7486f44b068968a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302328,
                    "digest": "sha256:fe9432f2aaa2016cb694649036ccbf719ec50f9da197c29121a52e526eeab427"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:069c84dac03098298a9585b075d2eec3eacfccf465c151989aefd9d50b4f350f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 118971096,
                    "digest": "sha256:e3b4db112f30cbc906762717e0229e84fe94d812695757cb8dc0340eb715dfe4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 124,
                    "digest": "sha256:25103b4085ad48d3a83015e071ad17bf7c259d50de103ee067e0be425dae79ac"
                }
            ]
        },
        "1.12.5-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3802,
                "digest": "sha256:306636bcc7d9a56b10842d7c433df8236ae60f0494588173a4146f84e2fd28e6"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2688779,
                    "digest": "sha256:0362ad1dd800a9d92f8982fa28f173f9120266153830f990f7486f44b068968a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302328,
                    "digest": "sha256:fe9432f2aaa2016cb694649036ccbf719ec50f9da197c29121a52e526eeab427"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:069c84dac03098298a9585b075d2eec3eacfccf465c151989aefd9d50b4f350f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 118971096,
                    "digest": "sha256:e3b4db112f30cbc906762717e0229e84fe94d812695757cb8dc0340eb715dfe4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 124,
                    "digest": "sha256:25103b4085ad48d3a83015e071ad17bf7c259d50de103ee067e0be425dae79ac"
                }
            ]
        },
        "1.12.5-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5464,
                "digest": "sha256:7c5ad13a583ba3631bef6e211d5868d1b91e5471382294932cba11b686d4b3e4"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43141955,
                    "digest": "sha256:5894e28291972e44f5c3eba2779a85979bae6f95ed4f3e43ea5c98a132f06c48"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9733078,
                    "digest": "sha256:7a8e6888cee6fef7c223eeaf2ca4c51bc0c21b4631971f416eb6a529a05e96cb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4094187,
                    "digest": "sha256:8bf90e854779f4c5edab378626d847fd0ab7aa9441b63a7db31a7db55d2b255b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48007708,
                    "digest": "sha256:a4c8eeecda6963793a99084385756365c2667fd778c50971ef0fad4ea8936805"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49069964,
                    "digest": "sha256:cd4a52520a2c55d5ed38e6ad4da9a27712951a7c47a72cfc21e0fb9aeae14119"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 104256599,
                    "digest": "sha256:7b7290d095c4a0b6bba3a4be2058ceae86ee8b23306a13e8ef09a5f74233a507"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:ca7ffc2c76a4929cd299ff64f48dad6a4cd403cfcea6f3e55a1c22c86d75d48d"
                }
            ]
        },
        "1.12.6": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:25bddf13d1cd197adc00a97982cbf829cd9d7b0da6792342e39e940b37491312",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                }
            ]
        },
        "1.12.6-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3801,
                "digest": "sha256:568cb09a3355bb2ebcd3bb5a76bb3d9ebf60b12e2f1bb0b57003428c9b65bd04"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2714576,
                    "digest": "sha256:54e94bcddc88729dd11dea70b3489452e71c2d5f846551f59fdeb807af4319d7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302344,
                    "digest": "sha256:43582c0db3f3b37f7cd4c9cf946d061a36e286fb74408d73da8920c1ef65c156"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:9fe16242a9df16c896f29039c844a1995bd938c52af0d952541de26815dbe49b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 119037171,
                    "digest": "sha256:fbf0f20b3a29270fd6482d45e226abd829113e2c99852b4fd45ea98b78a11e88"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:57bbd25d50cbd64bce9197f32c0d5aba94c6f0dbd441c3eeaa9e2587a4d0e64f"
                }
            ]
        },
        "1.12.6-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3801,
                "digest": "sha256:568cb09a3355bb2ebcd3bb5a76bb3d9ebf60b12e2f1bb0b57003428c9b65bd04"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2714576,
                    "digest": "sha256:54e94bcddc88729dd11dea70b3489452e71c2d5f846551f59fdeb807af4319d7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302344,
                    "digest": "sha256:43582c0db3f3b37f7cd4c9cf946d061a36e286fb74408d73da8920c1ef65c156"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:9fe16242a9df16c896f29039c844a1995bd938c52af0d952541de26815dbe49b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 119037171,
                    "digest": "sha256:fbf0f20b3a29270fd6482d45e226abd829113e2c99852b4fd45ea98b78a11e88"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:57bbd25d50cbd64bce9197f32c0d5aba94c6f0dbd441c3eeaa9e2587a4d0e64f"
                }
            ]
        },
        "1.12.6-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3804,
                "digest": "sha256:42649bce01c1c11a2079e7bb1e28e5d9b49153b3bf87b6eb6bea67fbb28a7bcb"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2688779,
                    "digest": "sha256:0362ad1dd800a9d92f8982fa28f173f9120266153830f990f7486f44b068968a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302429,
                    "digest": "sha256:4add8f29bf03f3d6fce96396daad08e0039610b96925452697ea40933ec96ec4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:d2a54cdb6f8d9efb5c7906e854f297284c50db62dea68960f9665d4e134a2da6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 119031696,
                    "digest": "sha256:fa1a9ce08233738688a6204a4a2a4d843e80879f222282136db1df2083fe09af"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 157,
                    "digest": "sha256:9fc5a47f3a6bfda89a56ef323b23105eabb77a311ae690b0d2082fab647d5ada"
                }
            ]
        },
        "1.12.6-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5465,
                "digest": "sha256:26d6fdab9b28450d82c084a1234a5a5b2e7102ef1003731a0d64ca8950876a3c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43141955,
                    "digest": "sha256:5894e28291972e44f5c3eba2779a85979bae6f95ed4f3e43ea5c98a132f06c48"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9734083,
                    "digest": "sha256:4579724c1a9cbbeb91053f719bf515654043a3e39cfaa248ebedc84c2f0460ea"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4094360,
                    "digest": "sha256:a493ac681ca78302ad6a97cd01e4daa5f1d995f0523f5e5cb8306071eea417b5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48014844,
                    "digest": "sha256:b62257d11a8d1d6b3d34cb19071cd773c444414427778315b21faf5c9c6364cb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49069929,
                    "digest": "sha256:59efdaebff44d5c03ceb4d772513c2cc099eb3238b8d73f647e0f3af85708c1e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 104298162,
                    "digest": "sha256:e1f5d66e8fbd678ab9aa7626f707674301d74ef71d698c07549815563ceee0b4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:3c13166c489054628621596ee3ae382afb5997e9493b40e42ff1b8825abc9f5f"
                }
            ]
        },
        "1.12.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:b05bb0e0d9600cac4808c69201f16abcdd22b03fedd8d41f4f87008054dbc3eb",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                }
            ]
        },
        "1.12.7-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3804,
                "digest": "sha256:eb77e2f2146ae23b3539547664fa5e05859f09f50adc0e1047dea45e915330ed"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2714682,
                    "digest": "sha256:31c29410a04898f7aed30f526990fced7d2a158513930c32fb05dbed3e8518da"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302341,
                    "digest": "sha256:9b5dd0f2942e459f52d14046ea05f6ca100b74875b2f06f14ad079e515505d7b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:75ab2a0fde49b0b869506d1c8e7de398732caae28fe0cb5e3742baef09ab8369"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 119024728,
                    "digest": "sha256:e51db57c818ae6d07e9b67670c78b022acba3f03540b70770c06f92e9738397a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:ca7dd74c2a55da34acdb9d5468ab093121653bb7553ef4c587f02a6190699704"
                }
            ]
        },
        "1.12.7-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3804,
                "digest": "sha256:eb77e2f2146ae23b3539547664fa5e05859f09f50adc0e1047dea45e915330ed"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2714682,
                    "digest": "sha256:31c29410a04898f7aed30f526990fced7d2a158513930c32fb05dbed3e8518da"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302341,
                    "digest": "sha256:9b5dd0f2942e459f52d14046ea05f6ca100b74875b2f06f14ad079e515505d7b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:75ab2a0fde49b0b869506d1c8e7de398732caae28fe0cb5e3742baef09ab8369"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 119024728,
                    "digest": "sha256:e51db57c818ae6d07e9b67670c78b022acba3f03540b70770c06f92e9738397a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:ca7dd74c2a55da34acdb9d5468ab093121653bb7553ef4c587f02a6190699704"
                }
            ]
        },
        "1.12.7-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3803,
                "digest": "sha256:0de3185130fc17cac451b489916f3df2372799583d8f2f067e91e0dd3d3c0ff5"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2688779,
                    "digest": "sha256:0362ad1dd800a9d92f8982fa28f173f9120266153830f990f7486f44b068968a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302429,
                    "digest": "sha256:4add8f29bf03f3d6fce96396daad08e0039610b96925452697ea40933ec96ec4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:d2a54cdb6f8d9efb5c7906e854f297284c50db62dea68960f9665d4e134a2da6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 119022699,
                    "digest": "sha256:c55a9846eb23e5b04d3129b85889a70342cc0aad5555ab464a44df411827de00"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:76664cc99b6dd7c96127bd2d1c23f126a89c134b8b4413181baa22bca49bb564"
                }
            ]
        },
        "1.12.7-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5459,
                "digest": "sha256:80544d135feeeb30c2922317caa5e9c7d1f0a05d9c9bbe0cf31bbd2f8f7de160"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49160681,
                    "digest": "sha256:93ca09dc2355118335e16ab94b73274654d4abc5b160ee04fecc1c94744be017"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7670687,
                    "digest": "sha256:b8f2c0941fe25937d14459d6d384b32ff5443f433d94d0bbe8b015acbbad8b56"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9968053,
                    "digest": "sha256:4461ed91c06d5a8502c596782bef4bad7060b2fa698abd6700bda9004fb59a00"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52105172,
                    "digest": "sha256:3c63032b1bc42f92f977e6051590a3585fa6aa803d604b72370fe58c41ac4812"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 62341060,
                    "digest": "sha256:703cb430940c151106dd33cb8033220e8aa851f1a4fbceb4442900fc3ba6005c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 104288874,
                    "digest": "sha256:0d414d1c465cee21753a198fb96af69db1f6d93c61ec7150e7c0f224f2f24ae3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:86a1d4fe2ac574e04c5a8070a875eb054eea6fff6c160cd8d81dc34d4fd258c8"
                }
            ]
        },
        "1.12.7-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5465,
                "digest": "sha256:1c29eee4a302d873116e1f58dcd5eac533b7ec53cbcba22565a3a49f17bf10a7"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43142770,
                    "digest": "sha256:8518ba3cff7c9ea93a23c2c2d853bec62efe57d658c99413492fe93d56637297"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9737235,
                    "digest": "sha256:457256b895a8a9338a3cc73f7711af983f35b66b3f6df14bfeba5a7263fbe1e0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4094312,
                    "digest": "sha256:da853daaff69acbafe85d56c95c0e30d5b43cdf2cd12a7bc7683e227670f556d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48014484,
                    "digest": "sha256:a1e0c24b32066c5eec0e779ca1c6230f9b55c449102e06da5fbbadb9aa02ed01"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49069158,
                    "digest": "sha256:717a9bc7f023717f6eaa755e8afec4f34e73ebdfe43cc0ff1b96aaae30a092fd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 104288898,
                    "digest": "sha256:af5b00ecd9031adf684fd66f0d039b448cdaafa62f1a17cd45f85507c8b2af98"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 157,
                    "digest": "sha256:696dfe3fa2c4031cb0dfb069c9898231e84248a76d9adc8a51d321670ebc21cc"
                }
            ]
        },
        "1.12.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:087e5596a1218b84d909f2f80921ab95989c5c780cb52f44399a5644494ecf0c",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                }
            ]
        },
        "1.12.8-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3804,
                "digest": "sha256:dfec17f0d555e35d5a2219580badfcd7b39ef3ad60ea1b6e2a553494f508a42a"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2714682,
                    "digest": "sha256:31c29410a04898f7aed30f526990fced7d2a158513930c32fb05dbed3e8518da"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302341,
                    "digest": "sha256:9b5dd0f2942e459f52d14046ea05f6ca100b74875b2f06f14ad079e515505d7b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:75ab2a0fde49b0b869506d1c8e7de398732caae28fe0cb5e3742baef09ab8369"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 119428412,
                    "digest": "sha256:ad3210479bc988f2286f74af7bf30d9acfbe8112b5db3f35a910fc21645cb84f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:e905a2705d6b196f0b369bf705f96c68940ee790601c50b19841d4fdaf951cb9"
                }
            ]
        },
        "1.12.8-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3804,
                "digest": "sha256:dfec17f0d555e35d5a2219580badfcd7b39ef3ad60ea1b6e2a553494f508a42a"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2714682,
                    "digest": "sha256:31c29410a04898f7aed30f526990fced7d2a158513930c32fb05dbed3e8518da"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302341,
                    "digest": "sha256:9b5dd0f2942e459f52d14046ea05f6ca100b74875b2f06f14ad079e515505d7b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:75ab2a0fde49b0b869506d1c8e7de398732caae28fe0cb5e3742baef09ab8369"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 119428412,
                    "digest": "sha256:ad3210479bc988f2286f74af7bf30d9acfbe8112b5db3f35a910fc21645cb84f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:e905a2705d6b196f0b369bf705f96c68940ee790601c50b19841d4fdaf951cb9"
                }
            ]
        },
        "1.12.8-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3805,
                "digest": "sha256:5f0dadd5c874a28a9065819f57cdeadd2a102fe12ccbc3077c2ba2cf17448a06"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2688779,
                    "digest": "sha256:0362ad1dd800a9d92f8982fa28f173f9120266153830f990f7486f44b068968a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302429,
                    "digest": "sha256:4add8f29bf03f3d6fce96396daad08e0039610b96925452697ea40933ec96ec4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:d2a54cdb6f8d9efb5c7906e854f297284c50db62dea68960f9665d4e134a2da6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 119430824,
                    "digest": "sha256:373b04180a74bfe84efdd21cbd2e1d7bdff434f3ff61bbce96dfb72f8efd20fe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:57e1fda8a78c256439f226137cb0d867379f5a3f510fec6ea1c13cfbee43b85e"
                }
            ]
        },
        "1.12.8-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5454,
                "digest": "sha256:3102b6888ea31f55d3e6e16d51b772abb27e43bacb32a0af255a200c1fb495ad"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49159939,
                    "digest": "sha256:2bb46725cbe6340fc7280f09cfba7e2f7961e9b721fcde54f0baed1acb6a84dd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7670652,
                    "digest": "sha256:a6300c19b571c63086aa2d4ff128ffcc4b8cc65154d8a1b6d93b00b70f903d20"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9967997,
                    "digest": "sha256:74cfc1e6fc76196d211b0b8cfa30397e632aa18eec1a3cf48fe5a66bccb01bd1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52105195,
                    "digest": "sha256:27a9a35b65b82670d951db67d8dd1df456740121cf57d1b46b582b115d9cfd02"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 62343321,
                    "digest": "sha256:97502322fb949dcd9c2ca4193861de953ac929e98701504a0db9576e0e7fdad7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 104296223,
                    "digest": "sha256:50ebd81c44893c7f2b6473854a200c9e4ed7e87b932c81c0d41c864b5d2453df"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:d836c7f5ef60d981789c4287ee6251abf0331f2a691ba291623e720fe670fc51"
                }
            ]
        },
        "1.12.8-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5467,
                "digest": "sha256:065c0ac26ce101e444eb238b52cf13d2120c158400cd03b676c9365641f41851"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43140037,
                    "digest": "sha256:c9a9b339897414ebcb758c313024f2e0cdd97ccd184a2db5d2fd418c3c37bf86"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9737250,
                    "digest": "sha256:204078f7e04c7ae0e3fc1e45e88ad2cf14f9d83b2adc30919cd8ca34a215e6db"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4094297,
                    "digest": "sha256:d5243bb8f5f5e1041d372d7b9e139b07e15e943dd53d392ee5460eaf2ff10807"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48015197,
                    "digest": "sha256:88208471fb091b73106288a2afabb08dad9c90d405893044b5bbcb2440c2f895"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49069439,
                    "digest": "sha256:5baa258ee62f1d637ee26ba4b4543361bd5926183db013cf539395d6b48ef39e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 104296237,
                    "digest": "sha256:14a6f3bf3844aae547c301f0c2d85c7d31bc2cdafc29cfbc30eec86a93facb31"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 157,
                    "digest": "sha256:60c62051e8ad99e1532ae97a9cbe09e2ffb95a584baa33768e7add0dc207b7d8"
                }
            ]
        },
        "1.12.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:e9cccb634c933a7c147c9d1755f1c78f4fa2a7c5294cd715965fd59b7d0aa219",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                }
            ]
        },
        "1.12.9-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3805,
                "digest": "sha256:ceb634c16195279ab24fb06b383ff840696eff1b4e043bdec4c786d3f8aa397d"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2714631,
                    "digest": "sha256:29bddadc8f3fd6ed92c289e0dcd22e094833933a73609e78b7fa767d45731f9f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302343,
                    "digest": "sha256:02bb20f2603b4e336ffac319dd61e85e4e63af97199ba21ebf181f2c61e6c4ba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:b62863a3550beeacb2ef844092cf6d764e3fbb976f78243827ee4f7eb5955d26"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 119029870,
                    "digest": "sha256:112e0004bc16802072049652d6142abd4783129dfe36e900065f9d2c5d01d936"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:308213b371bfe695a1b3d22860e29624efa185a3cb7e9991b75f4c4ba830d842"
                }
            ]
        },
        "1.12.9-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3805,
                "digest": "sha256:ceb634c16195279ab24fb06b383ff840696eff1b4e043bdec4c786d3f8aa397d"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2714631,
                    "digest": "sha256:29bddadc8f3fd6ed92c289e0dcd22e094833933a73609e78b7fa767d45731f9f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302343,
                    "digest": "sha256:02bb20f2603b4e336ffac319dd61e85e4e63af97199ba21ebf181f2c61e6c4ba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:b62863a3550beeacb2ef844092cf6d764e3fbb976f78243827ee4f7eb5955d26"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 119029870,
                    "digest": "sha256:112e0004bc16802072049652d6142abd4783129dfe36e900065f9d2c5d01d936"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:308213b371bfe695a1b3d22860e29624efa185a3cb7e9991b75f4c4ba830d842"
                }
            ]
        },
        "1.12.9-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3805,
                "digest": "sha256:c8eb82a3f53318376a24643b92fa25ff7a0341cb0409dacbe265f6bebfcbb2ca"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2688779,
                    "digest": "sha256:0362ad1dd800a9d92f8982fa28f173f9120266153830f990f7486f44b068968a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302429,
                    "digest": "sha256:4add8f29bf03f3d6fce96396daad08e0039610b96925452697ea40933ec96ec4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:d2a54cdb6f8d9efb5c7906e854f297284c50db62dea68960f9665d4e134a2da6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 119422902,
                    "digest": "sha256:19297bbf2ac3507892aceb4eb9ddba960cfcbf0780ffb8d8b077801ad6b0791f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:78f6133e3b93120a635a39a79400b41bbd6e070458dcb99bf5b495584d945c10"
                }
            ]
        },
        "1.12.9-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5458,
                "digest": "sha256:d4268324c028df8ae1043dc7c1a183ecb30b073b8948a33e4389149c05c78adb"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49170134,
                    "digest": "sha256:ecfa071771e7a7fb300eae669db8c7e317ae9d190479aef5703d93b78ceb096f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7671335,
                    "digest": "sha256:4f94cc4501f31fe05b14b10b5e6fd0195db8a7849d9f1fd88085a1c33bb07413"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9983739,
                    "digest": "sha256:330887a460fd85cf3f0c340580cb94ea57335d5a527aa837f5c151ed6b32cbcf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52104405,
                    "digest": "sha256:8e5f17d12502c85844ac7f13da378374d9fd63dbfbb938d0e40f98dbd51100f5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 62387478,
                    "digest": "sha256:d6dc7d7f3a5210e0605d9cf863f313c5aa06984678e25ef242a7466b3cb1bd2f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 104292705,
                    "digest": "sha256:32e64f4244dfcc0c2ff4b100ec14fdcaec8d2ccae3bc3b88d87ae4ee30aec907"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:fb5acb88fe077ba468917936c16076b7908af1b676afe6799932e08f3523168b"
                }
            ]
        },
        "1.12.9-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5466,
                "digest": "sha256:472c3059bec213894b8c8057025a425a7ac35838022dd3b5997847e113dbe3e7"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43144819,
                    "digest": "sha256:815c1832d6513be8edd397e11041a4aee3f96dce52f0ebcb981c3b9cdd510b36"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9737882,
                    "digest": "sha256:f04bed802a875187697c84fbe66916965d4793e879ff5bb0b618d3cfb4967eea"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4094344,
                    "digest": "sha256:6d5c571b36bfd171c2d8ed92043e8246a279ad06d7a71f3d7db36aa14117f1d7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48015283,
                    "digest": "sha256:2f32707d637509a6dfb7642e2cc074962286caa42ae19d4aa8d4dcf194d0bad7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49094625,
                    "digest": "sha256:6ceb0f7e453f82536f97a5c312f830bb00d39d05948576dee46e1d34171b3cfe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 104292749,
                    "digest": "sha256:1933614a4ba9fcb04227bb333566278413b55b5d415e699fd6f8b257edb0198f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 157,
                    "digest": "sha256:5f530e8371217c8a3dbaf5c612d7381f1834154c0180ea2d40ed529b4ca49d4a"
                }
            ]
        },
        "1.12beta1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:453ea3f4dba81c7f518f3a095e61ccc8590309dbf78d0cd7f973cc0b3838634c",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                }
            ]
        },
        "1.12beta1-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4057,
                "digest": "sha256:0ec3b110451060f2352d87a2f7b5780ee68e78d1dc16f4d47fd891712919d15e"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2099839,
                    "digest": "sha256:e3c488b39803d9194cf010f6127b1121d5387b90a1562d44b50b749d0e7a69bf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 176,
                    "digest": "sha256:05a63128803b1ea223f87244cb8d3faa97817f6cf3ca8249e485430218758510"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 308685,
                    "digest": "sha256:4fe3f66f9bc2a391ccc98b0ae2492dc28160ce2a5de9dc7057f36b2a88d42640"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:590d7dc3d210c2fa755e378743c66cdc4c9965179688e1fd1d1636cc3e111a32"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 116141360,
                    "digest": "sha256:3236bd3a335411158e240c61ed57782076ec636cb8a649df821915f3da9d8080"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:5d7932abbe36c1e1a29682e2de7fa5284a496ed5441f1396cdb085264a3f9449"
                }
            ]
        },
        "1.12beta1-alpine3.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4057,
                "digest": "sha256:0ec3b110451060f2352d87a2f7b5780ee68e78d1dc16f4d47fd891712919d15e"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2099839,
                    "digest": "sha256:e3c488b39803d9194cf010f6127b1121d5387b90a1562d44b50b749d0e7a69bf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 176,
                    "digest": "sha256:05a63128803b1ea223f87244cb8d3faa97817f6cf3ca8249e485430218758510"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 308685,
                    "digest": "sha256:4fe3f66f9bc2a391ccc98b0ae2492dc28160ce2a5de9dc7057f36b2a88d42640"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:590d7dc3d210c2fa755e378743c66cdc4c9965179688e1fd1d1636cc3e111a32"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 116141360,
                    "digest": "sha256:3236bd3a335411158e240c61ed57782076ec636cb8a649df821915f3da9d8080"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:5d7932abbe36c1e1a29682e2de7fa5284a496ed5441f1396cdb085264a3f9449"
                }
            ]
        },
        "1.12beta1-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5475,
                "digest": "sha256:01355103a81b13604eee95b09570dfd099b69d2444c1827b4a6da32be845a445"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43116478,
                    "digest": "sha256:ed1ec7511bfa23f7413f2fc49fb5b111ef33638df9a60111a2c282a2f78a7653"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9728682,
                    "digest": "sha256:adb2bf3fc8884b0bfbf3d5317df5126bdd1911341a1d0736bca48b0043d81785"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4093166,
                    "digest": "sha256:795dadfe0a1e898d47690c9839194ddb1373266c1883d742f4b8d5872be25b8c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48005935,
                    "digest": "sha256:b3909cbce85809e95cb66a5b6e819717d1857f55a876c03fa1d9e885c2b0d9a2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49018881,
                    "digest": "sha256:7bf622939e59cc96f37899fb464f752773cbe8b3eac84625231477e1eb522d00"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 101870661,
                    "digest": "sha256:8efb1c557561a5cb3ddf25e870a2e4f0b0709b8d9ae80c10c60f645537ab2b2e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:c39c25d64403d0dddcfc6c5243227dba8ac69ace02bf0788b2c816f1ca1d6d5c"
                }
            ]
        },
        "1.12beta2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:31a7024a31ce6f747e0bd3c8b2c1bbbea9df7747cbbaee70ee72f759cb7c4fb5",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                }
            ]
        },
        "1.12beta2-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4059,
                "digest": "sha256:08fc075cafbbb74efaa34170964695e56e11ca5748109810bdc8e2530ebeb13d"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2687895,
                    "digest": "sha256:ee02fa18913c824d1d1c9b680f1a43dad343b9d6c086a6bc62e3361c3d3a2d63"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 176,
                    "digest": "sha256:afafa41235ea57b01b00eba47de1574777073a79c1d592c5709dfcbb3bd51f2a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302324,
                    "digest": "sha256:5593484900d3703f8e48e8d8b2c655313cae960ef0f59e5a59bbea1736e29551"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:6682f3bac3bd3144b0abdab1a15d89b6c4921b3434f7507bff7a6b8c63d82a8e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 117881140,
                    "digest": "sha256:7f7584092afc63184e461a095077916b3aa04a9c0b08f453080e0772289c73aa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:636ffb77e7a1236d4f303e2942c3608ca8750c37791a014a1f85df345c688863"
                }
            ]
        },
        "1.12beta2-alpine3.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4060,
                "digest": "sha256:8bae8f1037feb1486260a5f7e424a945315fa04042be64e7ebedce4bae1224d3"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2099839,
                    "digest": "sha256:e3c488b39803d9194cf010f6127b1121d5387b90a1562d44b50b749d0e7a69bf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 176,
                    "digest": "sha256:05a63128803b1ea223f87244cb8d3faa97817f6cf3ca8249e485430218758510"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 308685,
                    "digest": "sha256:4fe3f66f9bc2a391ccc98b0ae2492dc28160ce2a5de9dc7057f36b2a88d42640"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:590d7dc3d210c2fa755e378743c66cdc4c9965179688e1fd1d1636cc3e111a32"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 117976402,
                    "digest": "sha256:21e0360b7d123c1dc7e5d41a2184728fb38b6fc1016f723371a63b374d438946"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:5b566e15fe8d887a25df2c16ac272cd114ddbb14ca85a64e02743356957ff86c"
                }
            ]
        },
        "1.12beta2-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4059,
                "digest": "sha256:08fc075cafbbb74efaa34170964695e56e11ca5748109810bdc8e2530ebeb13d"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2687895,
                    "digest": "sha256:ee02fa18913c824d1d1c9b680f1a43dad343b9d6c086a6bc62e3361c3d3a2d63"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 176,
                    "digest": "sha256:afafa41235ea57b01b00eba47de1574777073a79c1d592c5709dfcbb3bd51f2a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302324,
                    "digest": "sha256:5593484900d3703f8e48e8d8b2c655313cae960ef0f59e5a59bbea1736e29551"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:6682f3bac3bd3144b0abdab1a15d89b6c4921b3434f7507bff7a6b8c63d82a8e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 117881140,
                    "digest": "sha256:7f7584092afc63184e461a095077916b3aa04a9c0b08f453080e0772289c73aa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:636ffb77e7a1236d4f303e2942c3608ca8750c37791a014a1f85df345c688863"
                }
            ]
        },
        "1.12beta2-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5472,
                "digest": "sha256:467f47059d4d84dc7514d5541131ffdcf6a1ebf89f8eb096b0d7dbb42c84eb11"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43124977,
                    "digest": "sha256:12bb1c82b086301ca1c22eabf3add7cd229f27b63ca4b0924e2356051d9e7194"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9728878,
                    "digest": "sha256:730f6528b47c72f6dd5aabc947e8db01aa470adc3fdb4bbbcf052f9c3ad6ae8e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4093098,
                    "digest": "sha256:63b5f3607713f2dab247e619fafcffd7c9edf4aaffc9e701660a76ccf324b742"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48005411,
                    "digest": "sha256:5001a1d2fe2f54da8dbdfca56862dd05d37d1a2aab69599bcc2a130ea4fcd7f5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49018959,
                    "digest": "sha256:0cf7cff8d1540abf0037817a982ebb3302bbf09abae0be8a01c89ec883cc628a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 114698477,
                    "digest": "sha256:19b87eb4e5a20036f6662d37da0b360be9ea0076c669860433b061e4851c993e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:af64a55ed2019c67038ae41ac8620bc3261d2d7145c3ac27f922d2d57f22f8de"
                }
            ]
        },
        "1.12rc1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:87146b190997656f1620e6a5a4e69947807dd96bf79e04d14fa326ba6c24b767",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                }
            ]
        },
        "1.12rc1-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4053,
                "digest": "sha256:21619a8daa95a8bbe05296d2bfc66faeeaf3973220569244fd6b3879420a6510"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2687895,
                    "digest": "sha256:ee02fa18913c824d1d1c9b680f1a43dad343b9d6c086a6bc62e3361c3d3a2d63"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 176,
                    "digest": "sha256:afafa41235ea57b01b00eba47de1574777073a79c1d592c5709dfcbb3bd51f2a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302324,
                    "digest": "sha256:5593484900d3703f8e48e8d8b2c655313cae960ef0f59e5a59bbea1736e29551"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:6682f3bac3bd3144b0abdab1a15d89b6c4921b3434f7507bff7a6b8c63d82a8e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 118064116,
                    "digest": "sha256:349699ba5f69eba71caaff1f9af98e808909b970519f1d4561b45a38c7bffbc5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 124,
                    "digest": "sha256:bf6d26ed97e382cd1e127f64d21fedc0d3a92b466a33015aac34bee97aadecbe"
                }
            ]
        },
        "1.12rc1-alpine3.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4054,
                "digest": "sha256:54fdce6b7bfdd550ab2404a31fba9670cba35b4e98435652b12d2d3d9665bd88"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2099839,
                    "digest": "sha256:e3c488b39803d9194cf010f6127b1121d5387b90a1562d44b50b749d0e7a69bf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 176,
                    "digest": "sha256:05a63128803b1ea223f87244cb8d3faa97817f6cf3ca8249e485430218758510"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 308685,
                    "digest": "sha256:4fe3f66f9bc2a391ccc98b0ae2492dc28160ce2a5de9dc7057f36b2a88d42640"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:590d7dc3d210c2fa755e378743c66cdc4c9965179688e1fd1d1636cc3e111a32"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 118154510,
                    "digest": "sha256:d6d67c2468ac18144ae6fd5d03c7ad981f476a195bab68b2d0c8cd5c111e8951"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:e0b0a6dbec5850f3023a53886e2b7787874ba21aea5a34db5cf129d4687f5192"
                }
            ]
        },
        "1.12rc1-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4053,
                "digest": "sha256:21619a8daa95a8bbe05296d2bfc66faeeaf3973220569244fd6b3879420a6510"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2687895,
                    "digest": "sha256:ee02fa18913c824d1d1c9b680f1a43dad343b9d6c086a6bc62e3361c3d3a2d63"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 176,
                    "digest": "sha256:afafa41235ea57b01b00eba47de1574777073a79c1d592c5709dfcbb3bd51f2a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302324,
                    "digest": "sha256:5593484900d3703f8e48e8d8b2c655313cae960ef0f59e5a59bbea1736e29551"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:6682f3bac3bd3144b0abdab1a15d89b6c4921b3434f7507bff7a6b8c63d82a8e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 118064116,
                    "digest": "sha256:349699ba5f69eba71caaff1f9af98e808909b970519f1d4561b45a38c7bffbc5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 124,
                    "digest": "sha256:bf6d26ed97e382cd1e127f64d21fedc0d3a92b466a33015aac34bee97aadecbe"
                }
            ]
        },
        "1.12rc1-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5470,
                "digest": "sha256:4b21cabf91216a78c2ac4b29ac1ef314e5e756ecf23075e647eeec63a2bb31c3"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43124977,
                    "digest": "sha256:12bb1c82b086301ca1c22eabf3add7cd229f27b63ca4b0924e2356051d9e7194"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9728878,
                    "digest": "sha256:730f6528b47c72f6dd5aabc947e8db01aa470adc3fdb4bbbcf052f9c3ad6ae8e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4093098,
                    "digest": "sha256:63b5f3607713f2dab247e619fafcffd7c9edf4aaffc9e701660a76ccf324b742"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48005411,
                    "digest": "sha256:5001a1d2fe2f54da8dbdfca56862dd05d37d1a2aab69599bcc2a130ea4fcd7f5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49018959,
                    "digest": "sha256:0cf7cff8d1540abf0037817a982ebb3302bbf09abae0be8a01c89ec883cc628a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 113388889,
                    "digest": "sha256:3f7a8a4bae879a7dbf157ef7d35d50c2a58dedccd3857f93524d153923fc8c30"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:26d0b1b19bd0d07dd871cb5ec2c5642a36cea14a8c3c03d99939d263a9e11512"
                }
            ]
        },
        "1.13": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:c6f3dd0bda1f61865a66d18090c8cecbe4df870c2d1083927e043367ef707688",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                }
            ]
        },
        "1.13-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3836,
                "digest": "sha256:13ecd043bf2dd86626cfe95eaf73c992a1e56f0ce088145dd8dae7c8f3d57895"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2707964,
                    "digest": "sha256:b538f80385f9b48122e3da068c932a96ea5018afa3c7be79da00437414bd18cd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 282997,
                    "digest": "sha256:74f711af9a0d350d42a1cb00f41feb32277e11189d70d84d76fdef5065f78c47"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:99f96fe45779b3ba9e9daededd02c233c5c76715ef1c5e88dd10c7acbea8414f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121695168,
                    "digest": "sha256:098003ea900c412d20f1825e18b247d22654b8afb15c9684c771c785b6021967"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:03943c3330d5640197e34868ee139253e6df4f9c49c4e998bb737ab3cde77dcc"
                }
            ]
        },
        "1.13-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3833,
                "digest": "sha256:7a1ea3c0a5e508f0c01e3cdb719d21e4b646927c81b7f4de693c167328b996a7"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2718734,
                    "digest": "sha256:b038bcb63e9c8905cc879c957302f686a9b43f24a18dcfc4186ab236ddf04cad"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301582,
                    "digest": "sha256:ccd50d924746efbc1e695d35eb4de1346768b6d5a815502f72e93fb54ffc4ee1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:d93d2af5b19a141e5bdafce9afd80f2723165a64e1475cadb9794727e2ec133a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121317438,
                    "digest": "sha256:d47f3730471e354f6e0a069402717eaf21e61d5e75f48ac707429c371ec85314"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:cec5753cc68d14ba6074afcc26e971dc5b49a74bc40b7692b3ec71d16462a50c"
                }
            ]
        },
        "1.13-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3835,
                "digest": "sha256:e5a4d4eea46e661581888bef657438000127508b31a6e34d09187e5d0ef0d6e2"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2724424,
                    "digest": "sha256:29e5d40040c18c692ed73df24511071725b74956ca1a61fe6056a651d86a13bd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301770,
                    "digest": "sha256:b9fc45ca0357821724e2824e141e2062d236dedad3d8654e0a390419ec9fe393"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:6332e392c90a454bd9f70a303cda942eb0e131e321e82cb70b9346ece4a52a64"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121315292,
                    "digest": "sha256:6999b3ef4d2fef79b6a823d3648042694737965461687141de7db2c721d792af"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:9b7fc90eec47465a73aec3b2e6602ade2a681ee0d71c57b98b774a0c7d4a5e47"
                }
            ]
        },
        "1.13-alpine3.12": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3836,
                "digest": "sha256:13ecd043bf2dd86626cfe95eaf73c992a1e56f0ce088145dd8dae7c8f3d57895"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2707964,
                    "digest": "sha256:b538f80385f9b48122e3da068c932a96ea5018afa3c7be79da00437414bd18cd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 282997,
                    "digest": "sha256:74f711af9a0d350d42a1cb00f41feb32277e11189d70d84d76fdef5065f78c47"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:99f96fe45779b3ba9e9daededd02c233c5c76715ef1c5e88dd10c7acbea8414f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121695168,
                    "digest": "sha256:098003ea900c412d20f1825e18b247d22654b8afb15c9684c771c785b6021967"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:03943c3330d5640197e34868ee139253e6df4f9c49c4e998bb737ab3cde77dcc"
                }
            ]
        },
        "1.13-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6193,
                "digest": "sha256:688d484c81b27fd58d8180e0f2b8371eb311a2f9afe5a4d761f838c9936152e7"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49175491,
                    "digest": "sha256:d5517ee72007172d5b814636405254dea459120ce08f85777bb287d106a6a240"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7681458,
                    "digest": "sha256:0283897ad4463628bd259e1cbb5eb788e7df554b42ae17fc6f5d02c4a56035c2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9983917,
                    "digest": "sha256:3feb40d9f5fecfa098b8f7ece6c287c6fd61b114043c8b4647359120a7d943a3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52163657,
                    "digest": "sha256:f86b5fabb62f79acd92186da3c02d23bd8c15d79603a700959b582bd9e62854c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 62532046,
                    "digest": "sha256:37c836803dd1977ffe173b42414e8c2ae2e147cee2e1ee34a383f4251cf15a44"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 97690924,
                    "digest": "sha256:d9dc248055f60dc2aa62c9eb18d6b6f4ec0de19f410168704b3a59da5801d8fe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:f7bc7fcd16054fc4f78b4420338b2694561bcb99063f896a8d4cf6e61a2596f5"
                }
            ]
        },
        "1.13-rc": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:05583f62ff6190bae21141c6718f575ba55f1fa875f260e9cabb8c0e0d8b17af",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                }
            ]
        },
        "1.13-rc-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3806,
                "digest": "sha256:fd75dbb70ef2bb170d67de81146b3c04498c1b2a88f35e53bc252f7cfc774fbc"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2714631,
                    "digest": "sha256:29bddadc8f3fd6ed92c289e0dcd22e094833933a73609e78b7fa767d45731f9f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302343,
                    "digest": "sha256:02bb20f2603b4e336ffac319dd61e85e4e63af97199ba21ebf181f2c61e6c4ba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:b62863a3550beeacb2ef844092cf6d764e3fbb976f78243827ee4f7eb5955d26"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121197469,
                    "digest": "sha256:d70e2c14d030d02255459a1528b41956a69b238042978ff14c9a988e290f3ff0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:48f34c53a658b8dae046919229e9429787702fafd4d1b92f65f14f0a755e94c6"
                }
            ]
        },
        "1.13-rc-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3806,
                "digest": "sha256:fd75dbb70ef2bb170d67de81146b3c04498c1b2a88f35e53bc252f7cfc774fbc"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2714631,
                    "digest": "sha256:29bddadc8f3fd6ed92c289e0dcd22e094833933a73609e78b7fa767d45731f9f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302343,
                    "digest": "sha256:02bb20f2603b4e336ffac319dd61e85e4e63af97199ba21ebf181f2c61e6c4ba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:b62863a3550beeacb2ef844092cf6d764e3fbb976f78243827ee4f7eb5955d26"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121197469,
                    "digest": "sha256:d70e2c14d030d02255459a1528b41956a69b238042978ff14c9a988e290f3ff0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:48f34c53a658b8dae046919229e9429787702fafd4d1b92f65f14f0a755e94c6"
                }
            ]
        },
        "1.13-rc-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5461,
                "digest": "sha256:234b73d9a900a9f142d0b4f52a19734ea50b6e43110833bc15addde70e66ebf6"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49159939,
                    "digest": "sha256:2bb46725cbe6340fc7280f09cfba7e2f7961e9b721fcde54f0baed1acb6a84dd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7670652,
                    "digest": "sha256:a6300c19b571c63086aa2d4ff128ffcc4b8cc65154d8a1b6d93b00b70f903d20"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9967997,
                    "digest": "sha256:74cfc1e6fc76196d211b0b8cfa30397e632aa18eec1a3cf48fe5a66bccb01bd1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52105195,
                    "digest": "sha256:27a9a35b65b82670d951db67d8dd1df456740121cf57d1b46b582b115d9cfd02"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 62343321,
                    "digest": "sha256:97502322fb949dcd9c2ca4193861de953ac929e98701504a0db9576e0e7fdad7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 97600230,
                    "digest": "sha256:bc1da48cc6b164cbae16e236219754d50e377ba892a66f839708bcbff67d3407"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:806a263cc11cccd0119a2b82c6f0593883231e5d55d3631084519dda7cf7995a"
                }
            ]
        },
        "1.13-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6200,
                "digest": "sha256:df74473ceafe35e68d8de1a3a51e53d4312ac24621ca41d8471e20f228c6c127"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43171643,
                    "digest": "sha256:708f9b01fc1a5dff70f7d40443ac7dd0ee1d0ae93202b6f305f4e3627cea7d22"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9700890,
                    "digest": "sha256:06dc3a0299d558e9f611edd56658d792af018276662c8c30d86476a05c18b00b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4094122,
                    "digest": "sha256:7feaa2634e51f929e9ca86765cd5579cdf0809084c80d6787166627ca2aed6d4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48041118,
                    "digest": "sha256:dc5d948bc7089eee9551a072ac758688696cf87a38dce63eb5f20b8dcdb94436"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49159332,
                    "digest": "sha256:a7c24fd75724c702a965c69e5277511924c075269631875bf1eb0479e58d07f5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 97690981,
                    "digest": "sha256:2fc5cd8b1ef3c87a9d062fe8dc1d68b0b48aef5ac757678b7c633cc513e66ef1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:cdb96025a1532da1336d23ce064a2001d69fdb29388bcca382a0ddd0aa185a9b"
                }
            ]
        },
        "1.13.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:edfe72c3682ff6bfbb6b34c8d71bcfaac9505ace5f75460db72dae5e0bd8c61c",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                }
            ]
        },
        "1.13.0-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3798,
                "digest": "sha256:048f1246e9fa5cfd2f5815e7cd7b67bd510b4198f8a234e8ca073035b13cd48f"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2714631,
                    "digest": "sha256:29bddadc8f3fd6ed92c289e0dcd22e094833933a73609e78b7fa767d45731f9f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302343,
                    "digest": "sha256:02bb20f2603b4e336ffac319dd61e85e4e63af97199ba21ebf181f2c61e6c4ba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:b62863a3550beeacb2ef844092cf6d764e3fbb976f78243827ee4f7eb5955d26"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121195002,
                    "digest": "sha256:e2b7c86cb6fb5c3409ce54439d89ef32cdbfe7a2136bd7465a6c75368e98355e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:d1cfd831a9324c4a0fdbd5d25f64259d4eb73e00d0a7d360876ad229a01ce157"
                }
            ]
        },
        "1.13.0-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3798,
                "digest": "sha256:048f1246e9fa5cfd2f5815e7cd7b67bd510b4198f8a234e8ca073035b13cd48f"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2714631,
                    "digest": "sha256:29bddadc8f3fd6ed92c289e0dcd22e094833933a73609e78b7fa767d45731f9f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302343,
                    "digest": "sha256:02bb20f2603b4e336ffac319dd61e85e4e63af97199ba21ebf181f2c61e6c4ba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:b62863a3550beeacb2ef844092cf6d764e3fbb976f78243827ee4f7eb5955d26"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121195002,
                    "digest": "sha256:e2b7c86cb6fb5c3409ce54439d89ef32cdbfe7a2136bd7465a6c75368e98355e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:d1cfd831a9324c4a0fdbd5d25f64259d4eb73e00d0a7d360876ad229a01ce157"
                }
            ]
        },
        "1.13.0-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5452,
                "digest": "sha256:6e6ba1d7f77394e7b366dd7a2fd1b913dffc9a13c2c0628532effb04c9270438"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49170134,
                    "digest": "sha256:ecfa071771e7a7fb300eae669db8c7e317ae9d190479aef5703d93b78ceb096f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7671335,
                    "digest": "sha256:4f94cc4501f31fe05b14b10b5e6fd0195db8a7849d9f1fd88085a1c33bb07413"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9983739,
                    "digest": "sha256:330887a460fd85cf3f0c340580cb94ea57335d5a527aa837f5c151ed6b32cbcf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52104405,
                    "digest": "sha256:8e5f17d12502c85844ac7f13da378374d9fd63dbfbb938d0e40f98dbd51100f5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 62387478,
                    "digest": "sha256:d6dc7d7f3a5210e0605d9cf863f313c5aa06984678e25ef242a7466b3cb1bd2f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 97604026,
                    "digest": "sha256:cd6d1122e25758e97f1a7a453fc936d47b6842e7888e3c12377d017a3a96cc7f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:6a2952975a756ce7f3de9b6f4041476fdd4dd84bdf09b18dbdad5c5742726e34"
                }
            ]
        },
        "1.13.0-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5459,
                "digest": "sha256:bd798aeaff177ecacdb761de08c13f96e2b2c5de3876a5c71611e6ab65843a24"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43144819,
                    "digest": "sha256:815c1832d6513be8edd397e11041a4aee3f96dce52f0ebcb981c3b9cdd510b36"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9737882,
                    "digest": "sha256:f04bed802a875187697c84fbe66916965d4793e879ff5bb0b618d3cfb4967eea"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4094344,
                    "digest": "sha256:6d5c571b36bfd171c2d8ed92043e8246a279ad06d7a71f3d7db36aa14117f1d7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48015283,
                    "digest": "sha256:2f32707d637509a6dfb7642e2cc074962286caa42ae19d4aa8d4dcf194d0bad7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49094625,
                    "digest": "sha256:6ceb0f7e453f82536f97a5c312f830bb00d39d05948576dee46e1d34171b3cfe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 97603999,
                    "digest": "sha256:6e4c848aee9fdf5027d58d612bd8f0373ea8b8bdbfdf0dcc4a3f64949b4d3a96"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:7dad810e7a27d3b9e3a98d15ed18711641ad228c58b2fd311b5510c6cfaa75fd"
                }
            ]
        },
        "1.13.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:348f3e50be3791578fbd0e4bda983d41651c60a2b0fc375232042dae673c97fc",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                }
            ]
        },
        "1.13.1-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3805,
                "digest": "sha256:c4400646fe85dd14fcb5bc9e6ebc73c7a74835598b73adf16983ff51a01f5ec3"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2714631,
                    "digest": "sha256:29bddadc8f3fd6ed92c289e0dcd22e094833933a73609e78b7fa767d45731f9f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302343,
                    "digest": "sha256:02bb20f2603b4e336ffac319dd61e85e4e63af97199ba21ebf181f2c61e6c4ba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:b62863a3550beeacb2ef844092cf6d764e3fbb976f78243827ee4f7eb5955d26"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121189783,
                    "digest": "sha256:104e359b3f0c9a62dcc0a4a86eb79b26edd9c28701cd0b8158c00fcec77e5255"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 157,
                    "digest": "sha256:9f0211b322d42c0ae507d1f16536ecbb35e230e941c2555448609c35ff976a49"
                }
            ]
        },
        "1.13.1-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3805,
                "digest": "sha256:c4400646fe85dd14fcb5bc9e6ebc73c7a74835598b73adf16983ff51a01f5ec3"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2714631,
                    "digest": "sha256:29bddadc8f3fd6ed92c289e0dcd22e094833933a73609e78b7fa767d45731f9f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302343,
                    "digest": "sha256:02bb20f2603b4e336ffac319dd61e85e4e63af97199ba21ebf181f2c61e6c4ba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:b62863a3550beeacb2ef844092cf6d764e3fbb976f78243827ee4f7eb5955d26"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121189783,
                    "digest": "sha256:104e359b3f0c9a62dcc0a4a86eb79b26edd9c28701cd0b8158c00fcec77e5255"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 157,
                    "digest": "sha256:9f0211b322d42c0ae507d1f16536ecbb35e230e941c2555448609c35ff976a49"
                }
            ]
        },
        "1.13.1-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5457,
                "digest": "sha256:377b045c57a156a02ca6317c2e539bb9cf7259c1fe4da39b447bae21c35d1118"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49172990,
                    "digest": "sha256:5a8521f5974d84ca2cef7f3a1ec71cce08198a563735e8d8d7c603536146819c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7680633,
                    "digest": "sha256:dd1378028f1d64d56a341de0c01136ac13cc193af54fb3c785e7ee29a493d09c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9983717,
                    "digest": "sha256:15cab53b0844e637da16aa62d159100c6022d0c9eada7037f946abce70764bcf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52102544,
                    "digest": "sha256:f6b3955dadc05d892a1e30426b7e75cd5a2c5e7d0f8a43ea4931e5207d66f850"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 62387631,
                    "digest": "sha256:56c70e5b63d16d171f01de1ccbb8913bc718c9b5b6f9675775782ba0d4653c6a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 97599357,
                    "digest": "sha256:b171b6426f01ed6323fa929e7f034c6144f98fd9c17110e87239223311e712c0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:ae784935c86bd167d7f322629e02782ac67e668142446c9a1d8d489976cd54b3"
                }
            ]
        },
        "1.13.1-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5467,
                "digest": "sha256:820bb835eeafca6ffd2eb75847d87924bfb7a18826bab1c2334f5ab47d4c9b5c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43166447,
                    "digest": "sha256:1ed27930b96e2175d71ddcca5deb645284e033026b012db87b4e63287f26e744"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9747759,
                    "digest": "sha256:bc3f19cb3e6a27b29e50792a97e187c8133ffd26bf4e9eda01c38df7bda5dcc7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4094404,
                    "digest": "sha256:41a323c975601416292ee6ed5dcd13a38a114a637f8fd363fb669e9e3fa1c885"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48017403,
                    "digest": "sha256:2cf998343cce503ce0417a9c1cab815ba914309cf5a67bc345894516b05b3ac8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49094808,
                    "digest": "sha256:ae49107ce31a8e9c4511b4e3302dc57fca611bea7467ecd8ce27852f932eda38"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 97599361,
                    "digest": "sha256:7074cfb54b7d8f59d3a2d73b792f153d6235c96c10dcc3bfad1ab3e27b731ab5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:86fab8aa6eaac6a315bc85a003f6d0efbb62cb988ca7b25249ff48442a6f7c11"
                }
            ]
        },
        "1.13.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:02e5ddc37901699ec66dc42634b7ff01b5419ce430558ef6371cda0744ca6c3c",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                }
            ]
        },
        "1.13.10-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3836,
                "digest": "sha256:6960208dcee42ecc983342a46ef50f246d7af1b880aa806f322e410f085ec21f"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2724424,
                    "digest": "sha256:29e5d40040c18c692ed73df24511071725b74956ca1a61fe6056a651d86a13bd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301770,
                    "digest": "sha256:b9fc45ca0357821724e2824e141e2062d236dedad3d8654e0a390419ec9fe393"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:6332e392c90a454bd9f70a303cda942eb0e131e321e82cb70b9346ece4a52a64"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121310348,
                    "digest": "sha256:797f25ba87fb723f514ba4b7816a803ae78c7e6da9f3cce8416a5e1e3ea39faf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:11dd7c0cc201c2d7367cbad64c8c8a4554b437c3f9272c8af97c61129ed1d441"
                }
            ]
        },
        "1.13.10-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3834,
                "digest": "sha256:fde6bec59256a532797cc96b46cb4e7f28e3e66f36d64795387ef8be7fa59944"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2718734,
                    "digest": "sha256:b038bcb63e9c8905cc879c957302f686a9b43f24a18dcfc4186ab236ddf04cad"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301582,
                    "digest": "sha256:ccd50d924746efbc1e695d35eb4de1346768b6d5a815502f72e93fb54ffc4ee1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:d93d2af5b19a141e5bdafce9afd80f2723165a64e1475cadb9794727e2ec133a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121309925,
                    "digest": "sha256:a8eb57443497124824f384350e4c03c06fe8b13144b9ebbe6bd0ee777d633b83"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 157,
                    "digest": "sha256:4cf9c1ff049308913102e5e0f99505056aa81a09cbfd0940d7d86c125b687dcc"
                }
            ]
        },
        "1.13.10-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3836,
                "digest": "sha256:6960208dcee42ecc983342a46ef50f246d7af1b880aa806f322e410f085ec21f"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2724424,
                    "digest": "sha256:29e5d40040c18c692ed73df24511071725b74956ca1a61fe6056a651d86a13bd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301770,
                    "digest": "sha256:b9fc45ca0357821724e2824e141e2062d236dedad3d8654e0a390419ec9fe393"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:6332e392c90a454bd9f70a303cda942eb0e131e321e82cb70b9346ece4a52a64"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121310348,
                    "digest": "sha256:797f25ba87fb723f514ba4b7816a803ae78c7e6da9f3cce8416a5e1e3ea39faf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:11dd7c0cc201c2d7367cbad64c8c8a4554b437c3f9272c8af97c61129ed1d441"
                }
            ]
        },
        "1.13.10-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5458,
                "digest": "sha256:23d8696bd5e5e12c5aed585dcd311e5172d5413c19ab40dfe5fe61d9ded39ece"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49169698,
                    "digest": "sha256:6243ff87266a170a3ad584d6c9c13f9b93c3aa84bded170c0040480f6c4e4170"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7681533,
                    "digest": "sha256:ac0e7aea31e932e05b2ceba046f4e670116c0e81cfc82ca24a86a41afe7f0f98"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9983945,
                    "digest": "sha256:41ee43f3d2cbd321b8fb1657fed3947ec55776292d85377636a5fd3188d42662"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52156992,
                    "digest": "sha256:5bac10972135477f10794c7cecd0815eb04e84c70622089fc585b9622b1fabd9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 62470951,
                    "digest": "sha256:b9615df067a65580785afd57bc12e4cedba0171af6d671b71b60d85f41621b25"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 97691655,
                    "digest": "sha256:7275efaf12f9ea94c6e0418c379d210a443fa4c2586fd18db009eb83829871de"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:27c76219acbb41d35b9e86103cc45ad9f843f30179646a812dc6a920bbf0bfac"
                }
            ]
        },
        "1.13.10-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5465,
                "digest": "sha256:f98c8ced416a2906913f1ee5774608bdd80d4af86b3c50cb6d68ecdeee304eb3"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43159022,
                    "digest": "sha256:decabe2933bfe1939dff94ad523be4904c90e7bea69033943dd32f459d115bab"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9748557,
                    "digest": "sha256:b6b030385917e3a4847f3280fab5601f7787447be0ac1b9ebdfc5a2b6f966d01"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4094419,
                    "digest": "sha256:3766a78f146d565326c939891f33a75e49f3e5fb549c76d9d19ec413526bb4f0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48034686,
                    "digest": "sha256:e211207ad507e8f93acada843529a731c90e6144dc0811f83b3564397dc187e3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49131511,
                    "digest": "sha256:340d1e4107b8b40973f5498987dead206fe47c6382519e0afc337d09c01024dc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 97691598,
                    "digest": "sha256:936fd73f74495f888041a8a5119245b420969fd7bc8803920402b072e48fd1e3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:a2ef2d1bf1c16b95c1e15ad87c36709ea91dd6aaf557bcdca3346c730d6fd643"
                }
            ]
        },
        "1.13.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:03b8c058170392c026056f30177e0c204ff331ffaab4400fc8dabd594c6a74b3",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                }
            ]
        },
        "1.13.11-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3836,
                "digest": "sha256:f9ab6bc9a0afc68290bc6096fee33e88db7be916ad8d17e6c8f97a0486c0e731"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2724424,
                    "digest": "sha256:29e5d40040c18c692ed73df24511071725b74956ca1a61fe6056a651d86a13bd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301770,
                    "digest": "sha256:b9fc45ca0357821724e2824e141e2062d236dedad3d8654e0a390419ec9fe393"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:6332e392c90a454bd9f70a303cda942eb0e131e321e82cb70b9346ece4a52a64"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121317892,
                    "digest": "sha256:3f435b55340231172c40d2f4f7e5a10401ee03a155a72ab0e45221ea2e13539a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:14dac9c0ee7a8e425bec17fc09d602cd62376f64e4c51a3bf2bc5447819f629c"
                }
            ]
        },
        "1.13.11-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3833,
                "digest": "sha256:7a1ea3c0a5e508f0c01e3cdb719d21e4b646927c81b7f4de693c167328b996a7"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2718734,
                    "digest": "sha256:b038bcb63e9c8905cc879c957302f686a9b43f24a18dcfc4186ab236ddf04cad"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301582,
                    "digest": "sha256:ccd50d924746efbc1e695d35eb4de1346768b6d5a815502f72e93fb54ffc4ee1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:d93d2af5b19a141e5bdafce9afd80f2723165a64e1475cadb9794727e2ec133a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121317438,
                    "digest": "sha256:d47f3730471e354f6e0a069402717eaf21e61d5e75f48ac707429c371ec85314"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:cec5753cc68d14ba6074afcc26e971dc5b49a74bc40b7692b3ec71d16462a50c"
                }
            ]
        },
        "1.13.11-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3836,
                "digest": "sha256:f9ab6bc9a0afc68290bc6096fee33e88db7be916ad8d17e6c8f97a0486c0e731"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2724424,
                    "digest": "sha256:29e5d40040c18c692ed73df24511071725b74956ca1a61fe6056a651d86a13bd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301770,
                    "digest": "sha256:b9fc45ca0357821724e2824e141e2062d236dedad3d8654e0a390419ec9fe393"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:6332e392c90a454bd9f70a303cda942eb0e131e321e82cb70b9346ece4a52a64"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121317892,
                    "digest": "sha256:3f435b55340231172c40d2f4f7e5a10401ee03a155a72ab0e45221ea2e13539a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:14dac9c0ee7a8e425bec17fc09d602cd62376f64e4c51a3bf2bc5447819f629c"
                }
            ]
        },
        "1.13.11-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5456,
                "digest": "sha256:3ea287be01187ba515f7cb79fe34a86decb46ed636b2d4db8a4661da54617ecb"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49170530,
                    "digest": "sha256:d23bf71de5e1fea32788576972e233e80db7c51d831ed7edb269102dab298bf1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7681693,
                    "digest": "sha256:d4f6b089b3526111514262a58bbb27c5a292d7ef355184883365cdce9a7c61e5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9983897,
                    "digest": "sha256:f34690136adb76fac1a121f6c4a9b5a63de1def4d65e0b2f99ff84c392ed8244"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52156755,
                    "digest": "sha256:4287f76f52e4c390d78182615c75d2b3d6a5cd5b2c28dc554707a7cfbfa91f2b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 62515231,
                    "digest": "sha256:d5631a7a4659fe13982c83f950545083bec8f0e96ad34c74de171518bae880b7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 97698261,
                    "digest": "sha256:f5ff8b94201d3b0e39b66322192c8675680f467654a03be08eca66b5b8357add"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:bee6788dc6e3c51acdcb89b5406d86d273e1b1daacc53aba876e3c50401b064e"
                }
            ]
        },
        "1.13.11-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5464,
                "digest": "sha256:5e34c7d702131c2c141940129df806fa585b70744f2701f2b9965e40589e3c1d"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43163052,
                    "digest": "sha256:8e144e997aec62ed9c3bb1ff83ae2a62cbea252858abfb48ac60bb2078817a6c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9748415,
                    "digest": "sha256:163052fbe4313f145cec99e4a4a1a7cc17d923a69c5354de191ecb396ef2a210"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4094349,
                    "digest": "sha256:1173269921f10e4e86f34bf51752d9013d60db88a02c2dd476d5b8116e417476"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48035115,
                    "digest": "sha256:693886e01d5a56a275694733a4d7bcf3854ae8ad4f5f789561237999e3e58498"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49131448,
                    "digest": "sha256:bbfcefd990ff900eee4dd762dd6eb4697562d193c1d943abcfc1dbb67a15ecc9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 97698238,
                    "digest": "sha256:a1bd654ebebb19091bb9f1dca81b6a490685983aeeaa9368887351b1ac72d3cd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:99695475e37af3a467a9250b0b130a88c25be8d61577f58e52a5405615faad07"
                }
            ]
        },
        "1.13.12": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:941576775c6b67b35bfb4c622b673d4ee7a22c40a9e0431a6f094874e813fb99",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                }
            ]
        },
        "1.13.12-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3836,
                "digest": "sha256:7cd5c4453deda0b7d2edad385e221a4e4fa81e06afa270a40904333ac57dc582"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2707964,
                    "digest": "sha256:b538f80385f9b48122e3da068c932a96ea5018afa3c7be79da00437414bd18cd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 282997,
                    "digest": "sha256:74f711af9a0d350d42a1cb00f41feb32277e11189d70d84d76fdef5065f78c47"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:99f96fe45779b3ba9e9daededd02c233c5c76715ef1c5e88dd10c7acbea8414f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121290723,
                    "digest": "sha256:64bb5232533249747ad9a0c236484b3b590d35f09e9e85271f85f3244ca5a03b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:0a430fcd1e4afb79aed7c1e70dd753e110452f5f603b2456029af81086343a98"
                }
            ]
        },
        "1.13.12-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3836,
                "digest": "sha256:04b32d62763ecd5c1c087685f1b3d3cb55a18e830e9550a84033dddd6fd941f7"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2724424,
                    "digest": "sha256:29e5d40040c18c692ed73df24511071725b74956ca1a61fe6056a651d86a13bd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301770,
                    "digest": "sha256:b9fc45ca0357821724e2824e141e2062d236dedad3d8654e0a390419ec9fe393"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:6332e392c90a454bd9f70a303cda942eb0e131e321e82cb70b9346ece4a52a64"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121308324,
                    "digest": "sha256:92f27f965a6ac1f2b622a9b4061c85541050380f7558d6c2c4731ac4dd383db2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:57611ef7df22c1954655a2425a5162291ee8f3db9d13bd177000f478c1844d8c"
                }
            ]
        },
        "1.13.12-alpine3.12": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3836,
                "digest": "sha256:7cd5c4453deda0b7d2edad385e221a4e4fa81e06afa270a40904333ac57dc582"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2707964,
                    "digest": "sha256:b538f80385f9b48122e3da068c932a96ea5018afa3c7be79da00437414bd18cd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 282997,
                    "digest": "sha256:74f711af9a0d350d42a1cb00f41feb32277e11189d70d84d76fdef5065f78c47"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:99f96fe45779b3ba9e9daededd02c233c5c76715ef1c5e88dd10c7acbea8414f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121290723,
                    "digest": "sha256:64bb5232533249747ad9a0c236484b3b590d35f09e9e85271f85f3244ca5a03b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:0a430fcd1e4afb79aed7c1e70dd753e110452f5f603b2456029af81086343a98"
                }
            ]
        },
        "1.13.12-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6191,
                "digest": "sha256:bd9cf9319137efea4bd6e07d7fa02a4ee6a4a54de3b48af53e9ba22f220b418e"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49167914,
                    "digest": "sha256:1db90d3d3b6598d485690f804e96153fb632e7434251d334e9a0c49b773855c9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7681351,
                    "digest": "sha256:6e848fd373270c8ed6d276649dd8a5860d188f7d0ff306e91e4e3e092e541d99"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9983910,
                    "digest": "sha256:9c85f14a5d8064020366c03aa05ec1c8b0f731e0966bb9788960d27258634aef"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52156256,
                    "digest": "sha256:334e38f2d6fff7c08f4ad1b38ec441d2cf963b761b5d85983396a75ff6d0c08f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 62515043,
                    "digest": "sha256:f849c8ccad7f367e6e10b4b4606706efb0ae2a5122783b9cb982de2df9423579"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 97675074,
                    "digest": "sha256:9d0600f02bd1cb48615a71eb11a4ae912e85ff385fdbec2e88f3b671b9dcb687"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:2f2cdb8f8f5fd89809656638f12eb633ae61f4b4aeb836d3d9d2cff033a3570c"
                }
            ]
        },
        "1.13.12-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6198,
                "digest": "sha256:8fe6ead3e2a0ab45bba3860432ac699591d31ee3e63cb067eb8ad390299175ee"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43160923,
                    "digest": "sha256:4c4f692ec920eecb1f30d9ef8e50125217decc872d7ada6eeccc36c6dcb49e4d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9699635,
                    "digest": "sha256:1d0990c417a21ef9e268cc0822cd23968c4b17cded8170cce0c4d8f7e020e6fd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4094104,
                    "digest": "sha256:0c6b83fd41426d182f67fdac882a6bfcd3aad22d7226a653ae58d3046bd46b5e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48034909,
                    "digest": "sha256:c2de3ad924e80f0d130d0bd9ed8ea866eefeb610874bce14fd8347d032772220"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49135383,
                    "digest": "sha256:bc03f76d37e06e8d0d35599cd88bc3baf6a5daf2077eda28fd28d32eafbae237"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 97675169,
                    "digest": "sha256:55335c616b0fd4291d8927a02e62d5a5ed883ffa904265b209c185f0e05eb093"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:beafaf9a24d771dee1e6664db024b6f853b3d518dd6bf58ef76f212e31f28584"
                }
            ]
        },
        "1.13.13": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:3c146e1065e980364363a9dd40fd2162f443f15bd9c0d5b34cce63f95c257418",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                }
            ]
        },
        "1.13.13-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3836,
                "digest": "sha256:8c18cb9e6de9af8117edc7f1d95c889d3609a1b395e3fd0fa426ed2673a2ec2f"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2707964,
                    "digest": "sha256:b538f80385f9b48122e3da068c932a96ea5018afa3c7be79da00437414bd18cd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 282997,
                    "digest": "sha256:74f711af9a0d350d42a1cb00f41feb32277e11189d70d84d76fdef5065f78c47"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:99f96fe45779b3ba9e9daededd02c233c5c76715ef1c5e88dd10c7acbea8414f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121702389,
                    "digest": "sha256:fd7a069fd194e09eccc34caed60a115bd749d77f249e74901f090f89d6e85677"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:66aa3694b03bfe56fdd3e26e124e2031e45ad3f55f4a3d50a4a8c973f8cb51c0"
                }
            ]
        },
        "1.13.13-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3836,
                "digest": "sha256:3ed8f094ba01eab49b045252abf73af476d1c51572e1f103a7b2dce2a63e90ef"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2724424,
                    "digest": "sha256:29e5d40040c18c692ed73df24511071725b74956ca1a61fe6056a651d86a13bd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301770,
                    "digest": "sha256:b9fc45ca0357821724e2824e141e2062d236dedad3d8654e0a390419ec9fe393"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:6332e392c90a454bd9f70a303cda942eb0e131e321e82cb70b9346ece4a52a64"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121314563,
                    "digest": "sha256:4195480431786ea172f0b688b69a1ed3ee589cf0e1edba11f38bfc72b5b95d28"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:30f470beda16558fc7ceed85b65d31d0f897f31bb8ece53eb083aaa95d258a46"
                }
            ]
        },
        "1.13.13-alpine3.12": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3836,
                "digest": "sha256:8c18cb9e6de9af8117edc7f1d95c889d3609a1b395e3fd0fa426ed2673a2ec2f"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2707964,
                    "digest": "sha256:b538f80385f9b48122e3da068c932a96ea5018afa3c7be79da00437414bd18cd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 282997,
                    "digest": "sha256:74f711af9a0d350d42a1cb00f41feb32277e11189d70d84d76fdef5065f78c47"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:99f96fe45779b3ba9e9daededd02c233c5c76715ef1c5e88dd10c7acbea8414f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121702389,
                    "digest": "sha256:fd7a069fd194e09eccc34caed60a115bd749d77f249e74901f090f89d6e85677"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:66aa3694b03bfe56fdd3e26e124e2031e45ad3f55f4a3d50a4a8c973f8cb51c0"
                }
            ]
        },
        "1.13.13-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6193,
                "digest": "sha256:ef7f5e9e822eb52c290e97680766cac21ef55fa1dc3f971432722199ad0f5047"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49167914,
                    "digest": "sha256:1db90d3d3b6598d485690f804e96153fb632e7434251d334e9a0c49b773855c9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7681351,
                    "digest": "sha256:6e848fd373270c8ed6d276649dd8a5860d188f7d0ff306e91e4e3e092e541d99"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9983910,
                    "digest": "sha256:9c85f14a5d8064020366c03aa05ec1c8b0f731e0966bb9788960d27258634aef"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52156256,
                    "digest": "sha256:334e38f2d6fff7c08f4ad1b38ec441d2cf963b761b5d85983396a75ff6d0c08f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 62515043,
                    "digest": "sha256:f849c8ccad7f367e6e10b4b4606706efb0ae2a5122783b9cb982de2df9423579"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 97688144,
                    "digest": "sha256:bb012582839b867b0765b6fc123cfd183887aa810a1eb4c35ba435196ad4bd46"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:5523b1e5587457b58096e33511d52d02559b1b340816d7e8cffe098e492b361d"
                }
            ]
        },
        "1.13.13-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6199,
                "digest": "sha256:ec80e44aed44ea85a2bd50f7f64d0ff338f33d8e64d4fd10cef10a3c0884f803"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43160923,
                    "digest": "sha256:4c4f692ec920eecb1f30d9ef8e50125217decc872d7ada6eeccc36c6dcb49e4d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9699635,
                    "digest": "sha256:1d0990c417a21ef9e268cc0822cd23968c4b17cded8170cce0c4d8f7e020e6fd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4094104,
                    "digest": "sha256:0c6b83fd41426d182f67fdac882a6bfcd3aad22d7226a653ae58d3046bd46b5e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48034909,
                    "digest": "sha256:c2de3ad924e80f0d130d0bd9ed8ea866eefeb610874bce14fd8347d032772220"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49135383,
                    "digest": "sha256:bc03f76d37e06e8d0d35599cd88bc3baf6a5daf2077eda28fd28d32eafbae237"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 97688126,
                    "digest": "sha256:c74e4eba30129d8bee64bccf5c8f6e01786c24ac60a6ec648d03f5dca47ce902"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:8a96b8739759dad65e84b9768256b646f430be1c7b2d8662dadf7a5b0ee56892"
                }
            ]
        },
        "1.13.14": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:1522fbf9d916796066e9ef85dd75ba41fa6936cf526068889cbc134228e962ad",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                }
            ]
        },
        "1.13.14-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3836,
                "digest": "sha256:477991cb20b3a6f194d52813a33f5901468e659174cc057387e6d3e74476be51"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2707964,
                    "digest": "sha256:b538f80385f9b48122e3da068c932a96ea5018afa3c7be79da00437414bd18cd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 282997,
                    "digest": "sha256:74f711af9a0d350d42a1cb00f41feb32277e11189d70d84d76fdef5065f78c47"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:99f96fe45779b3ba9e9daededd02c233c5c76715ef1c5e88dd10c7acbea8414f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121694606,
                    "digest": "sha256:b2bf7604af9bc298f913c3f2f08af21e417aa5e6f2a01f3b2f9c84b7225e9ff3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:8cedf3c44f241bbd5f8d17b46820db3c85cc3939ed283be00b378aa3df69480f"
                }
            ]
        },
        "1.13.14-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3835,
                "digest": "sha256:cd94556c13a724431c618e289d194ee6bde0c08f1eb67b2f572a8dd1724003dd"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2724424,
                    "digest": "sha256:29e5d40040c18c692ed73df24511071725b74956ca1a61fe6056a651d86a13bd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301770,
                    "digest": "sha256:b9fc45ca0357821724e2824e141e2062d236dedad3d8654e0a390419ec9fe393"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:6332e392c90a454bd9f70a303cda942eb0e131e321e82cb70b9346ece4a52a64"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121314661,
                    "digest": "sha256:80140f2e524ff5d0f9be5d8a5a4b283cd0e013eb1e613b282b124da0d1d63716"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:ca5fb52f73004d907ad011f07eb98e971c8054f69e8e02e7cdcc026a3b58f240"
                }
            ]
        },
        "1.13.14-alpine3.12": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3836,
                "digest": "sha256:477991cb20b3a6f194d52813a33f5901468e659174cc057387e6d3e74476be51"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2707964,
                    "digest": "sha256:b538f80385f9b48122e3da068c932a96ea5018afa3c7be79da00437414bd18cd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 282997,
                    "digest": "sha256:74f711af9a0d350d42a1cb00f41feb32277e11189d70d84d76fdef5065f78c47"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:99f96fe45779b3ba9e9daededd02c233c5c76715ef1c5e88dd10c7acbea8414f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121694606,
                    "digest": "sha256:b2bf7604af9bc298f913c3f2f08af21e417aa5e6f2a01f3b2f9c84b7225e9ff3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:8cedf3c44f241bbd5f8d17b46820db3c85cc3939ed283be00b378aa3df69480f"
                }
            ]
        },
        "1.13.14-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6189,
                "digest": "sha256:7207978b06c43401605da2a2bd2a2413b79c6f40719706f8e03d14ed8e86cf8b"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49175491,
                    "digest": "sha256:d5517ee72007172d5b814636405254dea459120ce08f85777bb287d106a6a240"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7681458,
                    "digest": "sha256:0283897ad4463628bd259e1cbb5eb788e7df554b42ae17fc6f5d02c4a56035c2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9983917,
                    "digest": "sha256:3feb40d9f5fecfa098b8f7ece6c287c6fd61b114043c8b4647359120a7d943a3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52163657,
                    "digest": "sha256:f86b5fabb62f79acd92186da3c02d23bd8c15d79603a700959b582bd9e62854c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 62532046,
                    "digest": "sha256:37c836803dd1977ffe173b42414e8c2ae2e147cee2e1ee34a383f4251cf15a44"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 97690462,
                    "digest": "sha256:b30cd9b955c0ceb20e9f825bbe2c006f22f1177b893b8c5c71bf14ce2b9252f9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:0357c8be19030c4575978b322aa8b57a77dfd780d26c8c2daba46dec9513ebe3"
                }
            ]
        },
        "1.13.14-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6200,
                "digest": "sha256:dd687cc26f71279352f9a9019588836904c77848c742933f2d65579b807b3c0f"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43171643,
                    "digest": "sha256:708f9b01fc1a5dff70f7d40443ac7dd0ee1d0ae93202b6f305f4e3627cea7d22"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9700890,
                    "digest": "sha256:06dc3a0299d558e9f611edd56658d792af018276662c8c30d86476a05c18b00b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4094122,
                    "digest": "sha256:7feaa2634e51f929e9ca86765cd5579cdf0809084c80d6787166627ca2aed6d4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48041118,
                    "digest": "sha256:dc5d948bc7089eee9551a072ac758688696cf87a38dce63eb5f20b8dcdb94436"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49159332,
                    "digest": "sha256:a7c24fd75724c702a965c69e5277511924c075269631875bf1eb0479e58d07f5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 97690414,
                    "digest": "sha256:b765f5469e4c1fb24d53fbdbe8ef4f66c9fcc3b2063390bed00b03ae5cad1453"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:993d18b767499edd240136c7789b9e2a80a0563f3eed8b51f3121d233eb62c16"
                }
            ]
        },
        "1.13.15": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:c6f3dd0bda1f61865a66d18090c8cecbe4df870c2d1083927e043367ef707688",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                }
            ]
        },
        "1.13.15-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3836,
                "digest": "sha256:13ecd043bf2dd86626cfe95eaf73c992a1e56f0ce088145dd8dae7c8f3d57895"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2707964,
                    "digest": "sha256:b538f80385f9b48122e3da068c932a96ea5018afa3c7be79da00437414bd18cd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 282997,
                    "digest": "sha256:74f711af9a0d350d42a1cb00f41feb32277e11189d70d84d76fdef5065f78c47"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:99f96fe45779b3ba9e9daededd02c233c5c76715ef1c5e88dd10c7acbea8414f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121695168,
                    "digest": "sha256:098003ea900c412d20f1825e18b247d22654b8afb15c9684c771c785b6021967"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:03943c3330d5640197e34868ee139253e6df4f9c49c4e998bb737ab3cde77dcc"
                }
            ]
        },
        "1.13.15-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3835,
                "digest": "sha256:e5a4d4eea46e661581888bef657438000127508b31a6e34d09187e5d0ef0d6e2"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2724424,
                    "digest": "sha256:29e5d40040c18c692ed73df24511071725b74956ca1a61fe6056a651d86a13bd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301770,
                    "digest": "sha256:b9fc45ca0357821724e2824e141e2062d236dedad3d8654e0a390419ec9fe393"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:6332e392c90a454bd9f70a303cda942eb0e131e321e82cb70b9346ece4a52a64"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121315292,
                    "digest": "sha256:6999b3ef4d2fef79b6a823d3648042694737965461687141de7db2c721d792af"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:9b7fc90eec47465a73aec3b2e6602ade2a681ee0d71c57b98b774a0c7d4a5e47"
                }
            ]
        },
        "1.13.15-alpine3.12": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3836,
                "digest": "sha256:13ecd043bf2dd86626cfe95eaf73c992a1e56f0ce088145dd8dae7c8f3d57895"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2707964,
                    "digest": "sha256:b538f80385f9b48122e3da068c932a96ea5018afa3c7be79da00437414bd18cd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 282997,
                    "digest": "sha256:74f711af9a0d350d42a1cb00f41feb32277e11189d70d84d76fdef5065f78c47"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:99f96fe45779b3ba9e9daededd02c233c5c76715ef1c5e88dd10c7acbea8414f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121695168,
                    "digest": "sha256:098003ea900c412d20f1825e18b247d22654b8afb15c9684c771c785b6021967"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:03943c3330d5640197e34868ee139253e6df4f9c49c4e998bb737ab3cde77dcc"
                }
            ]
        },
        "1.13.15-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6193,
                "digest": "sha256:688d484c81b27fd58d8180e0f2b8371eb311a2f9afe5a4d761f838c9936152e7"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49175491,
                    "digest": "sha256:d5517ee72007172d5b814636405254dea459120ce08f85777bb287d106a6a240"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7681458,
                    "digest": "sha256:0283897ad4463628bd259e1cbb5eb788e7df554b42ae17fc6f5d02c4a56035c2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9983917,
                    "digest": "sha256:3feb40d9f5fecfa098b8f7ece6c287c6fd61b114043c8b4647359120a7d943a3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52163657,
                    "digest": "sha256:f86b5fabb62f79acd92186da3c02d23bd8c15d79603a700959b582bd9e62854c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 62532046,
                    "digest": "sha256:37c836803dd1977ffe173b42414e8c2ae2e147cee2e1ee34a383f4251cf15a44"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 97690924,
                    "digest": "sha256:d9dc248055f60dc2aa62c9eb18d6b6f4ec0de19f410168704b3a59da5801d8fe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:f7bc7fcd16054fc4f78b4420338b2694561bcb99063f896a8d4cf6e61a2596f5"
                }
            ]
        },
        "1.13.15-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6200,
                "digest": "sha256:df74473ceafe35e68d8de1a3a51e53d4312ac24621ca41d8471e20f228c6c127"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43171643,
                    "digest": "sha256:708f9b01fc1a5dff70f7d40443ac7dd0ee1d0ae93202b6f305f4e3627cea7d22"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9700890,
                    "digest": "sha256:06dc3a0299d558e9f611edd56658d792af018276662c8c30d86476a05c18b00b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4094122,
                    "digest": "sha256:7feaa2634e51f929e9ca86765cd5579cdf0809084c80d6787166627ca2aed6d4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48041118,
                    "digest": "sha256:dc5d948bc7089eee9551a072ac758688696cf87a38dce63eb5f20b8dcdb94436"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49159332,
                    "digest": "sha256:a7c24fd75724c702a965c69e5277511924c075269631875bf1eb0479e58d07f5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 97690981,
                    "digest": "sha256:2fc5cd8b1ef3c87a9d062fe8dc1d68b0b48aef5ac757678b7c633cc513e66ef1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:cdb96025a1532da1336d23ce064a2001d69fdb29388bcca382a0ddd0aa185a9b"
                }
            ]
        },
        "1.13.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:06cb8573febff1b8a45aba1a2926c26a079431ca1dc60e159280b2f697744c8b",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                }
            ]
        },
        "1.13.2-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3804,
                "digest": "sha256:83d1fcd42bd25373cddb17a0e4f6cb99ea4cbf49f68863ab1a7feefebc1b9c08"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2714631,
                    "digest": "sha256:29bddadc8f3fd6ed92c289e0dcd22e094833933a73609e78b7fa767d45731f9f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302343,
                    "digest": "sha256:02bb20f2603b4e336ffac319dd61e85e4e63af97199ba21ebf181f2c61e6c4ba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:b62863a3550beeacb2ef844092cf6d764e3fbb976f78243827ee4f7eb5955d26"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121193960,
                    "digest": "sha256:8beb797dbe3d3de6f7aee478b9082c923b8e02cb79bec89cbfbd8c12f8b56602"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:579aab2548eecffd74d2d92c2f767c3ec036e6543050571b85103cfdbc0de73e"
                }
            ]
        },
        "1.13.2-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3804,
                "digest": "sha256:83d1fcd42bd25373cddb17a0e4f6cb99ea4cbf49f68863ab1a7feefebc1b9c08"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2714631,
                    "digest": "sha256:29bddadc8f3fd6ed92c289e0dcd22e094833933a73609e78b7fa767d45731f9f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302343,
                    "digest": "sha256:02bb20f2603b4e336ffac319dd61e85e4e63af97199ba21ebf181f2c61e6c4ba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:b62863a3550beeacb2ef844092cf6d764e3fbb976f78243827ee4f7eb5955d26"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121193960,
                    "digest": "sha256:8beb797dbe3d3de6f7aee478b9082c923b8e02cb79bec89cbfbd8c12f8b56602"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:579aab2548eecffd74d2d92c2f767c3ec036e6543050571b85103cfdbc0de73e"
                }
            ]
        },
        "1.13.2-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5457,
                "digest": "sha256:bb0531f010382ce40cb3e9efddfa436c4b449c898609f411bebe19274f7a77e8"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49172990,
                    "digest": "sha256:5a8521f5974d84ca2cef7f3a1ec71cce08198a563735e8d8d7c603536146819c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7680633,
                    "digest": "sha256:dd1378028f1d64d56a341de0c01136ac13cc193af54fb3c785e7ee29a493d09c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9983717,
                    "digest": "sha256:15cab53b0844e637da16aa62d159100c6022d0c9eada7037f946abce70764bcf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52102544,
                    "digest": "sha256:f6b3955dadc05d892a1e30426b7e75cd5a2c5e7d0f8a43ea4931e5207d66f850"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 62387631,
                    "digest": "sha256:56c70e5b63d16d171f01de1ccbb8913bc718c9b5b6f9675775782ba0d4653c6a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 97581392,
                    "digest": "sha256:69ad0bfdd86d787da3a6d019551453ec6e96e3a59e51292f4349f0b7f7cea250"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:36fd33d7575a5cad952c7bca386d2b247a6a01f46a7e924d059a107367a57531"
                }
            ]
        },
        "1.13.2-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5464,
                "digest": "sha256:9670f6eb42c3a22c46fbc86c0ac1d73502d9a2c84f4f0cbb429f2fc5a19c1f67"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43166447,
                    "digest": "sha256:1ed27930b96e2175d71ddcca5deb645284e033026b012db87b4e63287f26e744"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9747759,
                    "digest": "sha256:bc3f19cb3e6a27b29e50792a97e187c8133ffd26bf4e9eda01c38df7bda5dcc7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4094404,
                    "digest": "sha256:41a323c975601416292ee6ed5dcd13a38a114a637f8fd363fb669e9e3fa1c885"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48017403,
                    "digest": "sha256:2cf998343cce503ce0417a9c1cab815ba914309cf5a67bc345894516b05b3ac8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49094808,
                    "digest": "sha256:ae49107ce31a8e9c4511b4e3302dc57fca611bea7467ecd8ce27852f932eda38"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 97581375,
                    "digest": "sha256:06b945f35acadd3b5982bb978357c3e5908fceb3449e429c3503bf893037907f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:42d2973423e2e86024fac000cffdb2ba11b194cade6b8237f8cbde208ad5f1ef"
                }
            ]
        },
        "1.13.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:df14e3d3f4227e2b655ce25bb333fc6db892501d69d5ecfc0001dd5ff28f5870",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                }
            ]
        },
        "1.13.3-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3805,
                "digest": "sha256:40b8fff3062de745c9bf18309349cb53c6d3a2cc98a4fbfe91b7f6a95d241b2b"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2717778,
                    "digest": "sha256:8bfa913040406727f36faa9b69d0b96e071b13792a83ad69c19389031a9f3797"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302343,
                    "digest": "sha256:d523c651118b8110a7055546123bb301485868b779462028d410ad31ce758844"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:a46c404896130ad49e5b0a29fef854c53e121f275ffdd3c624399291cdb710c7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121203374,
                    "digest": "sha256:c3fb95160966f99ed8d04a21295fbac90c0924b7f63ea7f12fea023562f198cb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 157,
                    "digest": "sha256:0f705631a559129db6782199eb74488b86a0a111e0ff5321fdb0d3e8f93886e8"
                }
            ]
        },
        "1.13.3-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3805,
                "digest": "sha256:40b8fff3062de745c9bf18309349cb53c6d3a2cc98a4fbfe91b7f6a95d241b2b"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2717778,
                    "digest": "sha256:8bfa913040406727f36faa9b69d0b96e071b13792a83ad69c19389031a9f3797"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302343,
                    "digest": "sha256:d523c651118b8110a7055546123bb301485868b779462028d410ad31ce758844"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:a46c404896130ad49e5b0a29fef854c53e121f275ffdd3c624399291cdb710c7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121203374,
                    "digest": "sha256:c3fb95160966f99ed8d04a21295fbac90c0924b7f63ea7f12fea023562f198cb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 157,
                    "digest": "sha256:0f705631a559129db6782199eb74488b86a0a111e0ff5321fdb0d3e8f93886e8"
                }
            ]
        },
        "1.13.3-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5457,
                "digest": "sha256:cdd5dc2a93cfbb6a92a98e8e5eee45cde4cc706735b2f72938dd12658f556866"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49172990,
                    "digest": "sha256:5a8521f5974d84ca2cef7f3a1ec71cce08198a563735e8d8d7c603536146819c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7680633,
                    "digest": "sha256:dd1378028f1d64d56a341de0c01136ac13cc193af54fb3c785e7ee29a493d09c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9983717,
                    "digest": "sha256:15cab53b0844e637da16aa62d159100c6022d0c9eada7037f946abce70764bcf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52102544,
                    "digest": "sha256:f6b3955dadc05d892a1e30426b7e75cd5a2c5e7d0f8a43ea4931e5207d66f850"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 62387631,
                    "digest": "sha256:56c70e5b63d16d171f01de1ccbb8913bc718c9b5b6f9675775782ba0d4653c6a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 97585556,
                    "digest": "sha256:f548a8a28817c2f9bef20763a9eff5cd520e7b0bf8aa8914b25ef03e15496f23"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:438a93d7a80d33c69fd3ba803826ce572b15565fea990f45235e890bd0107327"
                }
            ]
        },
        "1.13.3-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5464,
                "digest": "sha256:d8ef68ff93dc82de0eb0dc6b5e13a1c97cfeded020e59da91b2630cdf3862721"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43166447,
                    "digest": "sha256:1ed27930b96e2175d71ddcca5deb645284e033026b012db87b4e63287f26e744"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9747759,
                    "digest": "sha256:bc3f19cb3e6a27b29e50792a97e187c8133ffd26bf4e9eda01c38df7bda5dcc7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4094404,
                    "digest": "sha256:41a323c975601416292ee6ed5dcd13a38a114a637f8fd363fb669e9e3fa1c885"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48017403,
                    "digest": "sha256:2cf998343cce503ce0417a9c1cab815ba914309cf5a67bc345894516b05b3ac8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49094808,
                    "digest": "sha256:ae49107ce31a8e9c4511b4e3302dc57fca611bea7467ecd8ce27852f932eda38"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 97585586,
                    "digest": "sha256:bc4433e7cbced290d8f15a2fe828cd1908f1d9458673653046780ef010da2757"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:bacc246427aa40135504f19e231591b31914111a57cb3fac15049c92d1ca7d81"
                }
            ]
        },
        "1.13.4": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:ea22f937427c3c70dd282e3311b108a857c5a89b3462f3c44c3f91444903b463",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                }
            ]
        },
        "1.13.4-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3804,
                "digest": "sha256:51f17d606bdeb8c4e09be4810903b4ae26f3602795516be29f815a614b77f5ff"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2717778,
                    "digest": "sha256:8bfa913040406727f36faa9b69d0b96e071b13792a83ad69c19389031a9f3797"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302343,
                    "digest": "sha256:d523c651118b8110a7055546123bb301485868b779462028d410ad31ce758844"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:a46c404896130ad49e5b0a29fef854c53e121f275ffdd3c624399291cdb710c7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121207804,
                    "digest": "sha256:ce81c8f180086683e92aa6082c0c8f1331fc0ce1360fe17af6553984d104fd7d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:232d38dd15d6568df3dea882512fbb7baa520d3ee32defa26b8dfcc199904d80"
                }
            ]
        },
        "1.13.4-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3804,
                "digest": "sha256:51f17d606bdeb8c4e09be4810903b4ae26f3602795516be29f815a614b77f5ff"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2717778,
                    "digest": "sha256:8bfa913040406727f36faa9b69d0b96e071b13792a83ad69c19389031a9f3797"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302343,
                    "digest": "sha256:d523c651118b8110a7055546123bb301485868b779462028d410ad31ce758844"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:a46c404896130ad49e5b0a29fef854c53e121f275ffdd3c624399291cdb710c7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121207804,
                    "digest": "sha256:ce81c8f180086683e92aa6082c0c8f1331fc0ce1360fe17af6553984d104fd7d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:232d38dd15d6568df3dea882512fbb7baa520d3ee32defa26b8dfcc199904d80"
                }
            ]
        },
        "1.13.4-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5459,
                "digest": "sha256:6c10c48f3cec3955a499cdabd68658f05bd315b39e692d83f95aeff6bc5baac5"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49172037,
                    "digest": "sha256:af4800279257e4522b03ad0d6d0aa937a2761fe0e54758127ec7fd14fc1715d0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7680704,
                    "digest": "sha256:8fae2ec46cd5af1ce11d246b5b7bea023991c857cbf131fc2b4f80a42c7abb5c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9983756,
                    "digest": "sha256:8a8718b9412e0a23370b0877b007da88210a2408dd572782050dcdd233e1f19e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52079377,
                    "digest": "sha256:4908f8b447250af91341f8f3a1741b2c8d6432714e885746c4afd227eed1be7b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 62390200,
                    "digest": "sha256:6fd45c94aea8e7113c802cdf136fa06208ea9790839ee30b53ba3a47bfbd69f6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 97586078,
                    "digest": "sha256:517eeda30d7cbc4c66d0aa0490a72d9f52b3f7fc70df0b807bb75be06938bb45"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 157,
                    "digest": "sha256:25b05ced3c37ad50ec9c6b4e22799d9d804943ea36c264c9a0348d194a35ca80"
                }
            ]
        },
        "1.13.4-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5466,
                "digest": "sha256:ccac3b44c7ba775a9530a24c889732adbc88085ff2449934f88a80848baf3773"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43166306,
                    "digest": "sha256:c0d6add7f35c078f38df34ebc5a91afab0ba514167d17ad24fd4582eb0880bf4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9747762,
                    "digest": "sha256:c616dd61dc37eac19d38cdbdf732659429ae37ba0d1578100f874fe236e25125"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4094358,
                    "digest": "sha256:df36da42882c170ff4b949c027b410428b5c0942632ed441a2f9a168a859ec0c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48016405,
                    "digest": "sha256:81386fcdc923e324fecbdb336d477691cc0be39e7e4e23ec733257ee50eddd57"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49097840,
                    "digest": "sha256:1c9df73c5ccf07ebcbce7b4751a530b298f418460086a7785e0dec404e6bd3ae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 97586098,
                    "digest": "sha256:379b631776ca0b11907b4e4a57de44943581e5cbbed47347f2c9590346eed0f7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:71183a3b6647a35adfce4c61fb30dc34d2e24100d4ef82dda6787573668111fa"
                }
            ]
        },
        "1.13.5": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:4a6e32ac1af38afd62442395e287fd26e97f8649cfe4af479cd650f6359ad46f",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                }
            ]
        },
        "1.13.5-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3835,
                "digest": "sha256:e9f8e2a2beb336a5425a425dc0a4042ba34e34568e1a2f81187c57a7c4e4f5eb"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2719182,
                    "digest": "sha256:cde5963f3b93eec667cad527c99d80402a5a91a7a1381f7ffe562f215aec0c50"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301820,
                    "digest": "sha256:2a23fa8c16f7dd95c9d4b0dac8b41013b1d5443c179584c1bd9bc372738c2a7e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:777b288507921e36cb5373c59249e243eb212d58f61cfa8455a9bc1794c452a9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121222205,
                    "digest": "sha256:8a11ddd9e5785e68e5cfa824e3faec7fd3c87a8216a7fbab9aa0a5f252954fca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:4cf88f913ddb11378db765b404e9c628ec7b2997b61adc082dd498bafe4de474"
                }
            ]
        },
        "1.13.5-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3835,
                "digest": "sha256:28fc16f07b17e1267e82b566e8b60f196a7744b61931607fde41b6c6464dc5fc"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2717778,
                    "digest": "sha256:8bfa913040406727f36faa9b69d0b96e071b13792a83ad69c19389031a9f3797"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302343,
                    "digest": "sha256:d523c651118b8110a7055546123bb301485868b779462028d410ad31ce758844"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:a46c404896130ad49e5b0a29fef854c53e121f275ffdd3c624399291cdb710c7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121223551,
                    "digest": "sha256:56697f5d6f3730ab2f8bef3d04f7ccfe633864c24fc76f545df453b24e8bbdf3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:5ffcd42d5c8cf337173a66ba9714a7dc7c072f251c49d97b45384769580f7e6b"
                }
            ]
        },
        "1.13.5-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3835,
                "digest": "sha256:e9f8e2a2beb336a5425a425dc0a4042ba34e34568e1a2f81187c57a7c4e4f5eb"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2719182,
                    "digest": "sha256:cde5963f3b93eec667cad527c99d80402a5a91a7a1381f7ffe562f215aec0c50"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301820,
                    "digest": "sha256:2a23fa8c16f7dd95c9d4b0dac8b41013b1d5443c179584c1bd9bc372738c2a7e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:777b288507921e36cb5373c59249e243eb212d58f61cfa8455a9bc1794c452a9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121222205,
                    "digest": "sha256:8a11ddd9e5785e68e5cfa824e3faec7fd3c87a8216a7fbab9aa0a5f252954fca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:4cf88f913ddb11378db765b404e9c628ec7b2997b61adc082dd498bafe4de474"
                }
            ]
        },
        "1.13.5-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5459,
                "digest": "sha256:059836fbe26117116848e52db8195e73d6ab81f926c0c1f4d66c78a2cdc32cde"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49171876,
                    "digest": "sha256:627706d65d1d9b4038d8fd40db52238d4f11d9130a01f23ffae9bf5d41ac5933"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7681148,
                    "digest": "sha256:e6ac1923ab7a97ecdde2a4f034a8b716d51594ba6fc823c6aaac579c31f51906"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9983835,
                    "digest": "sha256:b000e01546d5b9b3a40a3797f15bc0a1f579786c5ec8da31cbe9502f1927d367"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52102816,
                    "digest": "sha256:dc8fe6ebd465d85dc79039fbd39712f1fadf5d7ac5fbefe405ef7a4f957a94ce"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 62390533,
                    "digest": "sha256:f8cbdfdb9424fb643ea7b54950b09c1e0e150d46e21377c399e1a3d01421101c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 97604044,
                    "digest": "sha256:e3ccaf1330360a4f0f889c847e225f6af96c543106b6e30fb2176231e061f4b5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:a383edb944750aa293ac59e5030ee9292ba757bd04b0af98667cf78a248d2068"
                }
            ]
        },
        "1.13.5-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5467,
                "digest": "sha256:5c81daf6ef07f8afcc21af4ea905294bd5aeb12c1289710c4ca59c871b178bd7"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43166476,
                    "digest": "sha256:d07bcf5901dfa793fa6b2c4c617e86bcef315b0b092cbfd1a929eefedaf8e3f2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9748258,
                    "digest": "sha256:b4f31062581dadb1f69c43e9441040dd46788bf13ae51f20c66929fac82b506b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4094448,
                    "digest": "sha256:d62337a296a607f48a5dc3a7c07639360d98e0e78982ca8e459c832719012f12"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48024191,
                    "digest": "sha256:403697a3e152c7a38ddb9175a90ed2dac97d780421c35949ff80cd67a7d4e596"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49098028,
                    "digest": "sha256:7156aa26d0e81147cce624b6fedcefdda992fda278b991226f829a20fd740628"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 97604048,
                    "digest": "sha256:706c0dfc51c55afbec0a2a98540d5b63a8c2adbb54010a0a2df29a1cd25af1f6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:328cf24ec1e9e15e0b704babd83e29c378d9b0619e03b48dbc03bd32e9b87e5c"
                }
            ]
        },
        "1.13.6": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:8d93f1130319b3eb550b49fc923c8a33cde6a342871d0f5e581cdf4919fb8c57",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                }
            ]
        },
        "1.13.6-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3834,
                "digest": "sha256:b94bbb207ff48f70de635a8a3714d8bb77cc56cfedc253752576fdf184d4242f"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2723075,
                    "digest": "sha256:8fa90b21c985a6fcfff966bdfbde81cdd088de0aa8af38110057f6ac408f4408"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301775,
                    "digest": "sha256:fa3b0fa9a238a4fa3f590c80e14c5732f811f7a17aa0b8102cea7e3a9d250fcd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:583d88f014275e361b79e5a5ccf10b177aafe63e5d44ccd5d3911ca9b924efac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121223178,
                    "digest": "sha256:d66e0957b65bdce99b3ddf32b913024cb1fcb967f55c6d91e4f7b65781c3e04c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:dcd2cc26955247f15e3ddbaabc2284b13839fe64693142e44cdf83cfa6dedc83"
                }
            ]
        },
        "1.13.6-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3836,
                "digest": "sha256:1926d959e5a352d6401e3597727888a2144039e323d60631b8b51ed6168f0e8f"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2717732,
                    "digest": "sha256:f07e4bcf42b862c240f4c00f2f7ed362d7d93ca15151de547beda593f3b669e5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302350,
                    "digest": "sha256:50d558a7b39742c40031affac43b0aca8782b1d6b200679c6e9cf4d4c47a5953"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:b423fbf207f04f0d10356619a60fc06a50f6df4151e41b196dc9074fe2f7b7f3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121223217,
                    "digest": "sha256:d1641d1672992b69f1f487918fb7c4be5870c0327a3e7e8549cdf75af7bd8ca6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:522d38720e571f257cc4860f4ced0bc8c998def6f4726a984e31691c51bc130c"
                }
            ]
        },
        "1.13.6-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3834,
                "digest": "sha256:b94bbb207ff48f70de635a8a3714d8bb77cc56cfedc253752576fdf184d4242f"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2723075,
                    "digest": "sha256:8fa90b21c985a6fcfff966bdfbde81cdd088de0aa8af38110057f6ac408f4408"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301775,
                    "digest": "sha256:fa3b0fa9a238a4fa3f590c80e14c5732f811f7a17aa0b8102cea7e3a9d250fcd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:583d88f014275e361b79e5a5ccf10b177aafe63e5d44ccd5d3911ca9b924efac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121223178,
                    "digest": "sha256:d66e0957b65bdce99b3ddf32b913024cb1fcb967f55c6d91e4f7b65781c3e04c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:dcd2cc26955247f15e3ddbaabc2284b13839fe64693142e44cdf83cfa6dedc83"
                }
            ]
        },
        "1.13.6-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5458,
                "digest": "sha256:b042e76cfd7b9889d16b1917f1615183493ebba5b62d6594031ec6ea6d72589d"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49171876,
                    "digest": "sha256:627706d65d1d9b4038d8fd40db52238d4f11d9130a01f23ffae9bf5d41ac5933"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7681148,
                    "digest": "sha256:e6ac1923ab7a97ecdde2a4f034a8b716d51594ba6fc823c6aaac579c31f51906"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9983835,
                    "digest": "sha256:b000e01546d5b9b3a40a3797f15bc0a1f579786c5ec8da31cbe9502f1927d367"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52102816,
                    "digest": "sha256:dc8fe6ebd465d85dc79039fbd39712f1fadf5d7ac5fbefe405ef7a4f957a94ce"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 62390533,
                    "digest": "sha256:f8cbdfdb9424fb643ea7b54950b09c1e0e150d46e21377c399e1a3d01421101c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 97595979,
                    "digest": "sha256:c6a86e35d7ccf1b911b099c744558c5957b7bb190eff29e5f822f5ec5901c9ea"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:8a4ac4ded24704a6c32b372ff8d030ee18ccdb611f41de6aa89d5e382cefe70a"
                }
            ]
        },
        "1.13.6-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5467,
                "digest": "sha256:0c8c1cbaf4732d4e2a96814285da1d187f1c6296c16e8f406b373d0b6eef84e9"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43166476,
                    "digest": "sha256:d07bcf5901dfa793fa6b2c4c617e86bcef315b0b092cbfd1a929eefedaf8e3f2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9748258,
                    "digest": "sha256:b4f31062581dadb1f69c43e9441040dd46788bf13ae51f20c66929fac82b506b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4094448,
                    "digest": "sha256:d62337a296a607f48a5dc3a7c07639360d98e0e78982ca8e459c832719012f12"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48024191,
                    "digest": "sha256:403697a3e152c7a38ddb9175a90ed2dac97d780421c35949ff80cd67a7d4e596"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49098028,
                    "digest": "sha256:7156aa26d0e81147cce624b6fedcefdda992fda278b991226f829a20fd740628"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 97595933,
                    "digest": "sha256:e28879ddeb0b3a2e2995d6e98f91dc3f1c2fa69e1f93feae3c1debd4ea6eae1b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:e61be13a25b5894373e06c75a219f33606f507f282cf3c01bae755f50be32745"
                }
            ]
        },
        "1.13.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:9277e5655887609441e706e5a7c28e4382a3b512e2f8c2ec48dbc68ea9af7ac6",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                }
            ]
        },
        "1.13.7-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3832,
                "digest": "sha256:3ece1d5d65b784ba5ada6cff836c8f7bb8611a69e6838140f3570b069edb08f5"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2723075,
                    "digest": "sha256:8fa90b21c985a6fcfff966bdfbde81cdd088de0aa8af38110057f6ac408f4408"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301775,
                    "digest": "sha256:fa3b0fa9a238a4fa3f590c80e14c5732f811f7a17aa0b8102cea7e3a9d250fcd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:583d88f014275e361b79e5a5ccf10b177aafe63e5d44ccd5d3911ca9b924efac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121219273,
                    "digest": "sha256:802e4b917718c95809fa84359b28d2c6812f7a960dd880fe80a4c7ebdb280a4f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:fd8186cbf5ad8e1034a787322d0f075e89042d6398e1b1026327086095523f2d"
                }
            ]
        },
        "1.13.7-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3832,
                "digest": "sha256:31b0f049b9c4e4147891726a7f7ba4db8619adbddcdf04d8bb02de30f6907bf9"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2717732,
                    "digest": "sha256:f07e4bcf42b862c240f4c00f2f7ed362d7d93ca15151de547beda593f3b669e5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302350,
                    "digest": "sha256:50d558a7b39742c40031affac43b0aca8782b1d6b200679c6e9cf4d4c47a5953"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:b423fbf207f04f0d10356619a60fc06a50f6df4151e41b196dc9074fe2f7b7f3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121220172,
                    "digest": "sha256:d9e6326d452065ee41c0f0235ad427e3c9ab91ac5d0dfba9b8da86825d22519b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:40bd9f9be5d22aff60c4cfba8d1148b27a585def3f703e3e0709b26c70451d69"
                }
            ]
        },
        "1.13.7-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3832,
                "digest": "sha256:3ece1d5d65b784ba5ada6cff836c8f7bb8611a69e6838140f3570b069edb08f5"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2723075,
                    "digest": "sha256:8fa90b21c985a6fcfff966bdfbde81cdd088de0aa8af38110057f6ac408f4408"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301775,
                    "digest": "sha256:fa3b0fa9a238a4fa3f590c80e14c5732f811f7a17aa0b8102cea7e3a9d250fcd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:583d88f014275e361b79e5a5ccf10b177aafe63e5d44ccd5d3911ca9b924efac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121219273,
                    "digest": "sha256:802e4b917718c95809fa84359b28d2c6812f7a960dd880fe80a4c7ebdb280a4f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:fd8186cbf5ad8e1034a787322d0f075e89042d6398e1b1026327086095523f2d"
                }
            ]
        },
        "1.13.7-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5455,
                "digest": "sha256:f30d74e80031513250dfe99512ef9076be0ab2aa70ef18a55a8bd05e58b507a3"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49171687,
                    "digest": "sha256:bc03a7ced18fc43ea9523dfb256d2c3fbb835dc0bb54bdb7fd309edf936a87e7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7680993,
                    "digest": "sha256:cba9d528c1473d79c18b401d44ca06b9733d9c51a8699b98e8325c9de60b9739"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9983754,
                    "digest": "sha256:981400d5d268dc989681d5f308b7d2e381809f0bcc82429f443f7539cf6117ba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52102938,
                    "digest": "sha256:f0b2d547b8bc79a444406e56d724fb7d961c953e7f2797de4f55b29abee5605f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 62390640,
                    "digest": "sha256:c84a606fada5847b27d4f74a29fdf4fb7b8ab9430f363c3f35669cabe7a0daf2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 97602416,
                    "digest": "sha256:e86c8339d2b79bd92f500f5d8ed3b1f20e913cfa7beff7dced36487201c727db"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:1266f4979b0e54136482546c9226b697ee0f47d0b50b822dd009f8ec4fd083b3"
                }
            ]
        },
        "1.13.7-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5461,
                "digest": "sha256:8d677626d25414f9d91cad3c6739544591ee506d5fa722d453787c7919395dcd"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43166749,
                    "digest": "sha256:df3de44c7096ba135556a1e7044f9e1feee3ef713ab96f0416f71fe78422cbf6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9748586,
                    "digest": "sha256:fdf173a01baf7d45b479bb380ece219cbf0ea52178e9b8cdc5b87891759d1122"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4094322,
                    "digest": "sha256:c3392eac7bc27f3bd5fcb024413ca55ec4115c22da3e229567d5fc03cd4ff4e4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48024205,
                    "digest": "sha256:04a82fc9ca296b095585ba7f3f6d83566428dbefcbfd284e242039aba97840b2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49097963,
                    "digest": "sha256:aca1cf3b66f921e6f0d5e42cf6821f9a4af6cf2bba19118c0275e0c78b66d0a5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 97602432,
                    "digest": "sha256:89eddfb2211d9c2324ee06dbab0f35e7a97f6c1a347224286754449b22349492"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:8301a3160d8239b229a24381fc03497adac1f0d46c62303e1e006b7136e8e5ae"
                }
            ]
        },
        "1.13.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:5aac44732a29bc2feed5f3e35d41afc4dffa1ca3f16863e79eef0af9749db80b",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                }
            ]
        },
        "1.13.8-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3833,
                "digest": "sha256:b98704846f0c71a9de6d448726da0adec62ce63784e9d1b2faac05224ad84c82"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2723075,
                    "digest": "sha256:8fa90b21c985a6fcfff966bdfbde81cdd088de0aa8af38110057f6ac408f4408"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301775,
                    "digest": "sha256:fa3b0fa9a238a4fa3f590c80e14c5732f811f7a17aa0b8102cea7e3a9d250fcd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:583d88f014275e361b79e5a5ccf10b177aafe63e5d44ccd5d3911ca9b924efac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121221337,
                    "digest": "sha256:cd387195a7726c324b6ffd0b282cab3fcbc0464e19c0f5b7207640a60bd6cfa3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:dbf4260ea1b173dc319596edc161229301f78a44250c19460c7387c31c6a9b5c"
                }
            ]
        },
        "1.13.8-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3833,
                "digest": "sha256:2fb6760492eff322d6cbbec3e744fc8d6d50bc8962e188b01fd42d28706379e8"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2717732,
                    "digest": "sha256:f07e4bcf42b862c240f4c00f2f7ed362d7d93ca15151de547beda593f3b669e5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302350,
                    "digest": "sha256:50d558a7b39742c40031affac43b0aca8782b1d6b200679c6e9cf4d4c47a5953"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:b423fbf207f04f0d10356619a60fc06a50f6df4151e41b196dc9074fe2f7b7f3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121222379,
                    "digest": "sha256:e837399587b4ddc75782b061804608d54469914cd5d1f75044a33202b1df9510"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:fdbd46518241595f131931130646f7f2cb76c5d592fdd892855461c135d9ca25"
                }
            ]
        },
        "1.13.8-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3833,
                "digest": "sha256:b98704846f0c71a9de6d448726da0adec62ce63784e9d1b2faac05224ad84c82"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2723075,
                    "digest": "sha256:8fa90b21c985a6fcfff966bdfbde81cdd088de0aa8af38110057f6ac408f4408"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301775,
                    "digest": "sha256:fa3b0fa9a238a4fa3f590c80e14c5732f811f7a17aa0b8102cea7e3a9d250fcd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:583d88f014275e361b79e5a5ccf10b177aafe63e5d44ccd5d3911ca9b924efac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121221337,
                    "digest": "sha256:cd387195a7726c324b6ffd0b282cab3fcbc0464e19c0f5b7207640a60bd6cfa3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:dbf4260ea1b173dc319596edc161229301f78a44250c19460c7387c31c6a9b5c"
                }
            ]
        },
        "1.13.8-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5455,
                "digest": "sha256:cf0ca10818ef71189f7b086a557d94fa3f7eda49b4e93cdde64d89a2c4f7ac5a"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49169974,
                    "digest": "sha256:77b067f4ec14d48dbc8cd83b7a46fbb5f21fe01ea8911db256cc0168a30c1f5b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7681467,
                    "digest": "sha256:194f1ca8932d9ee1727375561698745fa548546f609956c4aca9fed0b48d41a1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9983767,
                    "digest": "sha256:88425686f799f708ae776f78a6d01c179a52f55fc5b32de874db3c4ace2dd156"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52102940,
                    "digest": "sha256:4c349f2c39d405d81a454ff62bdd8753ad71aeb8e8c1e300f3d7d19cd78eaced"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 62470835,
                    "digest": "sha256:d7f869d21e081791ed21c8e8a1af577238fcc4df45e6c4ac44ba385045d5c527"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 97598134,
                    "digest": "sha256:54db05507b52b34ef115529f162c1afc12242c53e0b7110b2d5927a03d86af39"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:d0814d2a122977a81b9cd59e29a8321d2b01b68ebcd95ffe8bce17e424c061d0"
                }
            ]
        },
        "1.13.8-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5462,
                "digest": "sha256:bae1b0a4e65e6cc09083f5a06194406c978a3fe402bc2dc3d5afb7531e44157d"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43158146,
                    "digest": "sha256:668c278237ef972312df4979c8fb1a927b38db5da09f094ae4fcc84a061dedf8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9748511,
                    "digest": "sha256:8b41cac09012800692bd13a1238260bfb293c18c7864536c494809f2983ad770"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4094435,
                    "digest": "sha256:094b353938273b0bbc576a8a80a232614ca2d9bfe48769641eee7055f3db6a5e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48024341,
                    "digest": "sha256:95fba2538bf9e06bc84462d53d1effc13ecb38f026a6bc0df91cb9da3ffc0fb1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49131532,
                    "digest": "sha256:245fe68ee64c770128591daaa019b8c48e54553794ade79c37e9f1cdbf539b61"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 97598151,
                    "digest": "sha256:cde8daed9228dec2d5ca5d028fdc401315878bd9a20d17c2d40b0b8faee9f669"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:affa82819ac8a4b80e38ea4353d87fd6c3c3142c117e77b417aa28c9448e4095"
                }
            ]
        },
        "1.13.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:e3155c1c7220a2a619530b979b472a765b7e54de8a5ea6a8ab4f3f683782f145",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                }
            ]
        },
        "1.13.9-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3832,
                "digest": "sha256:a50a64688c6f4b59fe5c176e87835ca75221dc411685ef77224d67e91a6b66e7"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2723139,
                    "digest": "sha256:8a0637ca1ac98db4cf29f7632449c92801adc80cf0da2cd9c9e39882ce466561"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301778,
                    "digest": "sha256:e42d4106c43952870e20bfb808275012c22e6244af6eff1e916f446f7d338d0d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:c9f0a4e33d457336c22ac08eaec4609be330959ccdfefdb342be1045df4d26f0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121289898,
                    "digest": "sha256:41e5bfd022f859f86aaa063335f4c6d2f10214d617bb316e667949ff38bb4750"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:34c672512f58395e7351b3c4173a378ad50dc804820f4d18832fb4f990974263"
                }
            ]
        },
        "1.13.9-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3833,
                "digest": "sha256:e1c7c6e07c05107d53f6c40954ad568d3390e991c3baf48ba0f1f21b2e6d0237"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2717732,
                    "digest": "sha256:f07e4bcf42b862c240f4c00f2f7ed362d7d93ca15151de547beda593f3b669e5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302350,
                    "digest": "sha256:50d558a7b39742c40031affac43b0aca8782b1d6b200679c6e9cf4d4c47a5953"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:b423fbf207f04f0d10356619a60fc06a50f6df4151e41b196dc9074fe2f7b7f3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121290428,
                    "digest": "sha256:63cb9a99a3c0c8901e1724db6372cc377e14e1bc9c20ca3a923109f51c958130"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:7045b929ba4af783dec5f4b59e5d7abbad72fd6de9b8838117ccaa3011075030"
                }
            ]
        },
        "1.13.9-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3832,
                "digest": "sha256:a50a64688c6f4b59fe5c176e87835ca75221dc411685ef77224d67e91a6b66e7"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2723139,
                    "digest": "sha256:8a0637ca1ac98db4cf29f7632449c92801adc80cf0da2cd9c9e39882ce466561"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301778,
                    "digest": "sha256:e42d4106c43952870e20bfb808275012c22e6244af6eff1e916f446f7d338d0d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:c9f0a4e33d457336c22ac08eaec4609be330959ccdfefdb342be1045df4d26f0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121289898,
                    "digest": "sha256:41e5bfd022f859f86aaa063335f4c6d2f10214d617bb316e667949ff38bb4750"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:34c672512f58395e7351b3c4173a378ad50dc804820f4d18832fb4f990974263"
                }
            ]
        },
        "1.13.9-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5456,
                "digest": "sha256:54f7f14042e65ab689d741958d65bf95a93df7dc7acc40a44b7d6a7893629564"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49169998,
                    "digest": "sha256:5767fbcc7692f25971758138978eed9bd3add831a79561cd58bf281e60a5159f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7681336,
                    "digest": "sha256:4b632de0573ae234fd668631d1aba00e13ea3a66cdd1732e58533b119480e4e9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9983948,
                    "digest": "sha256:84f852028d4482a56b904b98dfe16c9781cb55380b9a7f6b6cf59622e3ef0de0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52102789,
                    "digest": "sha256:3ac5b037e60412fbff475fee9a38acf16d3117f0709631a272dd03197bf45378"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 62470805,
                    "digest": "sha256:9987cbc2fd2d42712fd05e427e9969577c6e5564d1fda4b61a156ea7d62cca79"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 97674188,
                    "digest": "sha256:adc9dd300c4cb85002038468d945fd97d2ada5568e05e36991e7d04efb2644dc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:111f136183f17e21ca70b635871d40dd98760b60296671c4e0783749762376fd"
                }
            ]
        },
        "1.13.9-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5464,
                "digest": "sha256:87f99696bfd405cb47b0d62c5d9a65fc848b749c1e929cea7d9d2f0083fcefdb"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43158116,
                    "digest": "sha256:84582781a9f06ad84225307f9cf89d5f77f6e5610281e6ca088fc8c2e9a1d027"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9748484,
                    "digest": "sha256:2aaedfc9896782bd00cfcf104ca392d0b85363b41be4ecedd7c058c1c183ac01"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4094373,
                    "digest": "sha256:cfa6bb03021f1e64553e2c40a904ffe7c70a0112c00ba9bf44f67ad27162f2b0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48024387,
                    "digest": "sha256:6a4110ff81d02419c6737ebf46680f0afee475f58cf3bd159e0892d8f4ffebaf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49131512,
                    "digest": "sha256:dac19f7d4c53192edf0fdc170a95b67cd9525365b5b0a5130559da1b74d618e0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 97674137,
                    "digest": "sha256:5e6328fa40614732fc43f20b48cc9a7485c2cb1989f4db504458b9d59570993f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:9411272ebffc23164f028b33bc8857e468e7a76b0b92a10192ad3c35b5ea8243"
                }
            ]
        },
        "1.13beta1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:a036fc3ff874e98169a7a850a36a97842e06fbf2e3c3e9d18e4ee717a395264c",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                }
            ]
        },
        "1.13beta1-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3814,
                "digest": "sha256:7ee70ff4c6ad72171bb6dc93ae1cb1605d33f268f91e6fa01b3214df88f7e99e"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2714631,
                    "digest": "sha256:29bddadc8f3fd6ed92c289e0dcd22e094833933a73609e78b7fa767d45731f9f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302343,
                    "digest": "sha256:02bb20f2603b4e336ffac319dd61e85e4e63af97199ba21ebf181f2c61e6c4ba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:b62863a3550beeacb2ef844092cf6d764e3fbb976f78243827ee4f7eb5955d26"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121160121,
                    "digest": "sha256:799274f906e1fa3536a62a7a3fc1ba66712b9a0e08a11803873dde86e8a0b2d3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:d5ca5cbb828636a3d7d04fdeab151615fc25884d6eb1c3e1fef3ab2feb309cce"
                }
            ]
        },
        "1.13beta1-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3814,
                "digest": "sha256:7ee70ff4c6ad72171bb6dc93ae1cb1605d33f268f91e6fa01b3214df88f7e99e"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2714631,
                    "digest": "sha256:29bddadc8f3fd6ed92c289e0dcd22e094833933a73609e78b7fa767d45731f9f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302343,
                    "digest": "sha256:02bb20f2603b4e336ffac319dd61e85e4e63af97199ba21ebf181f2c61e6c4ba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:b62863a3550beeacb2ef844092cf6d764e3fbb976f78243827ee4f7eb5955d26"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121160121,
                    "digest": "sha256:799274f906e1fa3536a62a7a3fc1ba66712b9a0e08a11803873dde86e8a0b2d3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:d5ca5cbb828636a3d7d04fdeab151615fc25884d6eb1c3e1fef3ab2feb309cce"
                }
            ]
        },
        "1.13beta1-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5468,
                "digest": "sha256:2dff9b5dc37cb8304fb20b20edeceec8ebd9ce27b70236be6f708178e27b397c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49159939,
                    "digest": "sha256:2bb46725cbe6340fc7280f09cfba7e2f7961e9b721fcde54f0baed1acb6a84dd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7670652,
                    "digest": "sha256:a6300c19b571c63086aa2d4ff128ffcc4b8cc65154d8a1b6d93b00b70f903d20"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9967997,
                    "digest": "sha256:74cfc1e6fc76196d211b0b8cfa30397e632aa18eec1a3cf48fe5a66bccb01bd1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52105195,
                    "digest": "sha256:27a9a35b65b82670d951db67d8dd1df456740121cf57d1b46b582b115d9cfd02"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 62343321,
                    "digest": "sha256:97502322fb949dcd9c2ca4193861de953ac929e98701504a0db9576e0e7fdad7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 107720360,
                    "digest": "sha256:7c4850ffe8e9ee4eea3ccf495c4a54e67f99287345c7d20b5a3ea7a37ec47a6d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:29851d7ff6274ef950d50578da3922201a81d9657a3b680dc422cd4470e4873c"
                }
            ]
        },
        "1.13rc1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:f343509d8e0429defb7d80e97390802ccbb5773794580a403df8922665aa0940",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                }
            ]
        },
        "1.13rc1-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3808,
                "digest": "sha256:8fc0c96596544fa638d6ff2dd49684200c45212d2d752fc3c53b0b2c5241d181"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2714631,
                    "digest": "sha256:29bddadc8f3fd6ed92c289e0dcd22e094833933a73609e78b7fa767d45731f9f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302343,
                    "digest": "sha256:02bb20f2603b4e336ffac319dd61e85e4e63af97199ba21ebf181f2c61e6c4ba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:b62863a3550beeacb2ef844092cf6d764e3fbb976f78243827ee4f7eb5955d26"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121183848,
                    "digest": "sha256:b4b4666c17aae5ae2005c55b45453f3047cb1b6228578009f2bec822dd008367"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:c582bf881c20315dd7070a6a162a51f777757c93e355f7256da83c0958846ffa"
                }
            ]
        },
        "1.13rc1-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3808,
                "digest": "sha256:8fc0c96596544fa638d6ff2dd49684200c45212d2d752fc3c53b0b2c5241d181"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2714631,
                    "digest": "sha256:29bddadc8f3fd6ed92c289e0dcd22e094833933a73609e78b7fa767d45731f9f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302343,
                    "digest": "sha256:02bb20f2603b4e336ffac319dd61e85e4e63af97199ba21ebf181f2c61e6c4ba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:b62863a3550beeacb2ef844092cf6d764e3fbb976f78243827ee4f7eb5955d26"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121183848,
                    "digest": "sha256:b4b4666c17aae5ae2005c55b45453f3047cb1b6228578009f2bec822dd008367"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:c582bf881c20315dd7070a6a162a51f777757c93e355f7256da83c0958846ffa"
                }
            ]
        },
        "1.13rc1-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5462,
                "digest": "sha256:298047492782a3140783302095e43883f5950802a074c8a083b1a50159ec14db"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49159939,
                    "digest": "sha256:2bb46725cbe6340fc7280f09cfba7e2f7961e9b721fcde54f0baed1acb6a84dd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7670652,
                    "digest": "sha256:a6300c19b571c63086aa2d4ff128ffcc4b8cc65154d8a1b6d93b00b70f903d20"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9967997,
                    "digest": "sha256:74cfc1e6fc76196d211b0b8cfa30397e632aa18eec1a3cf48fe5a66bccb01bd1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52105195,
                    "digest": "sha256:27a9a35b65b82670d951db67d8dd1df456740121cf57d1b46b582b115d9cfd02"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 62343321,
                    "digest": "sha256:97502322fb949dcd9c2ca4193861de953ac929e98701504a0db9576e0e7fdad7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 97568129,
                    "digest": "sha256:056bd5408884d349acef235ead7009a72fe6816c5504d932cf869674c3cf2d3f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:4215972055daf81f619f7f8f6d5825a37676c46e639d5c0764bfbea1d2302403"
                }
            ]
        },
        "1.13rc2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:05583f62ff6190bae21141c6718f575ba55f1fa875f260e9cabb8c0e0d8b17af",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                }
            ]
        },
        "1.13rc2-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3806,
                "digest": "sha256:fd75dbb70ef2bb170d67de81146b3c04498c1b2a88f35e53bc252f7cfc774fbc"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2714631,
                    "digest": "sha256:29bddadc8f3fd6ed92c289e0dcd22e094833933a73609e78b7fa767d45731f9f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302343,
                    "digest": "sha256:02bb20f2603b4e336ffac319dd61e85e4e63af97199ba21ebf181f2c61e6c4ba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:b62863a3550beeacb2ef844092cf6d764e3fbb976f78243827ee4f7eb5955d26"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121197469,
                    "digest": "sha256:d70e2c14d030d02255459a1528b41956a69b238042978ff14c9a988e290f3ff0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:48f34c53a658b8dae046919229e9429787702fafd4d1b92f65f14f0a755e94c6"
                }
            ]
        },
        "1.13rc2-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3806,
                "digest": "sha256:fd75dbb70ef2bb170d67de81146b3c04498c1b2a88f35e53bc252f7cfc774fbc"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2714631,
                    "digest": "sha256:29bddadc8f3fd6ed92c289e0dcd22e094833933a73609e78b7fa767d45731f9f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302343,
                    "digest": "sha256:02bb20f2603b4e336ffac319dd61e85e4e63af97199ba21ebf181f2c61e6c4ba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:b62863a3550beeacb2ef844092cf6d764e3fbb976f78243827ee4f7eb5955d26"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121197469,
                    "digest": "sha256:d70e2c14d030d02255459a1528b41956a69b238042978ff14c9a988e290f3ff0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:48f34c53a658b8dae046919229e9429787702fafd4d1b92f65f14f0a755e94c6"
                }
            ]
        },
        "1.13rc2-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5461,
                "digest": "sha256:234b73d9a900a9f142d0b4f52a19734ea50b6e43110833bc15addde70e66ebf6"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49159939,
                    "digest": "sha256:2bb46725cbe6340fc7280f09cfba7e2f7961e9b721fcde54f0baed1acb6a84dd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7670652,
                    "digest": "sha256:a6300c19b571c63086aa2d4ff128ffcc4b8cc65154d8a1b6d93b00b70f903d20"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9967997,
                    "digest": "sha256:74cfc1e6fc76196d211b0b8cfa30397e632aa18eec1a3cf48fe5a66bccb01bd1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52105195,
                    "digest": "sha256:27a9a35b65b82670d951db67d8dd1df456740121cf57d1b46b582b115d9cfd02"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 62343321,
                    "digest": "sha256:97502322fb949dcd9c2ca4193861de953ac929e98701504a0db9576e0e7fdad7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 97600230,
                    "digest": "sha256:bc1da48cc6b164cbae16e236219754d50e377ba892a66f839708bcbff67d3407"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:806a263cc11cccd0119a2b82c6f0593883231e5d55d3631084519dda7cf7995a"
                }
            ]
        },
        "1.14": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:b118b3bb13a8c9f27287835182e60c20f37229933e73439214c1eced09749b58",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                }
            ]
        },
        "1.14-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4615,
                "digest": "sha256:870c0be9d0b2080aa1dc505e2d09e394301e915758ecaae1acd8ecbe183fa61d"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2711261,
                    "digest": "sha256:2914792bc417803b2106001990194cc00cdd4b6fd97cd21a368f26148bc8e722"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281495,
                    "digest": "sha256:bf71259e4439ff8a66c663015c0b825423507dd67c96bd056d205664830641b1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:89538355e42e5f4bf7c21a627240606a4158b3ede1cf8b88f6a129c78f1366a9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102677821,
                    "digest": "sha256:98cd20d8c20abb0d27bce770ef446b42c067e2212213e9dd74b7b233eb56fab4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:df95759559db161f03a8b789a3143cd99e7c30ed1b85e0fb95252dadc8393508"
                }
            ]
        },
        "1.14-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4616,
                "digest": "sha256:0d721bbeec1234bfafabb7b1e0b93fcc9025d03c4b3584f02214871cbbe57497"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2725216,
                    "digest": "sha256:20d8a246443a66e74e17f2a0e81a51fe774876ca0c2676691c37ee1b0e4d3cd5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300060,
                    "digest": "sha256:02575a10f84ee2bb7531e433f69fc05bfd689aa2ad5a6b4fdf75415e37fe84ed"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:37ce2c66d2e64d6ba63f357e51e53af3c603af8b6840f25e61d8c11b793501eb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102697939,
                    "digest": "sha256:6428f88f192e74eb1a09ccaadc1f029b3ad702760583fed1730d04fb35455670"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:8f7066f9ea61ff9557144708cff079946a512807f2b33334ccb6a49330e8e76c"
                }
            ]
        },
        "1.14-alpine3.12": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4614,
                "digest": "sha256:83ae25a8edb8e08cfaf3bbae575e72a81b01a5849029fc4205a5e8bc2c273a3c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2709048,
                    "digest": "sha256:159e5727ea618dfe8b08811112e2c51f5bd2b9ae7db9eb214914a65249f70ca0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281214,
                    "digest": "sha256:89e1f0424fba9fa0ae1558cf9537def9b5de2873566d5ef8564ba0f4a4e99fc6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:4e458f4c6c667cc63829508308a9735d0586f4f55eff2b6c07236536557461e0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102675802,
                    "digest": "sha256:91b496408b3386e70cfbd32601c637214c74d1c42786fdc62fdffb02edc787a3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:da977b63b39af6471323a60cf5b2fb60de4db26cace1a118f5d40a7a8f3b04d2"
                }
            ]
        },
        "1.14-alpine3.13": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4615,
                "digest": "sha256:870c0be9d0b2080aa1dc505e2d09e394301e915758ecaae1acd8ecbe183fa61d"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2711261,
                    "digest": "sha256:2914792bc417803b2106001990194cc00cdd4b6fd97cd21a368f26148bc8e722"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281495,
                    "digest": "sha256:bf71259e4439ff8a66c663015c0b825423507dd67c96bd056d205664830641b1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:89538355e42e5f4bf7c21a627240606a4158b3ede1cf8b88f6a129c78f1366a9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102677821,
                    "digest": "sha256:98cd20d8c20abb0d27bce770ef446b42c067e2212213e9dd74b7b233eb56fab4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:df95759559db161f03a8b789a3143cd99e7c30ed1b85e0fb95252dadc8393508"
                }
            ]
        },
        "1.14-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7032,
                "digest": "sha256:c7909254f92e63dae7ffbf97005b162f85fa6bae6ff36c0ee69faf317198f6a1"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49183229,
                    "digest": "sha256:c78c297fb0d010ee085f95ae439636ecb167b050c1acb4273bd576998cf94a83"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7694122,
                    "digest": "sha256:06af62193c25241eb123af8cf115c7a6298e834976fe148ac79ec11a7ca06ee5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9984281,
                    "digest": "sha256:8b846e1b73901174c506ae5e6219ac2f356ef71eaa5896dfbc238dc67ca4bf73"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52165287,
                    "digest": "sha256:fb44d26a138a8d064a4ab8f9b472c64e7136c2482ec5af19bab8811b6d2c15b7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 62587497,
                    "digest": "sha256:d638b6994818c673ce32f9ad2ad7c2bac3b21d54c4f341f941e10d9724b16b4b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 101416327,
                    "digest": "sha256:c83562ffe1b7b73f5f0976bcfdd50493ea6481f3cc94dca4f8ddec865e3726bb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:6dab3a1d94818778b0f784671a0f9dd4e1f324de54af373a765971990b3d434a"
                }
            ]
        },
        "1.14-rc": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:4c698ad68998a3a6f9fabdb9bb91354e8304990f75786db3212b3859a0d9d01d",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                }
            ]
        },
        "1.14-rc-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3835,
                "digest": "sha256:2a63caebc4804452a0a3348071f94a1c5dbfd3d2433cc7eb4dff45e04ebd1a6d"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2723075,
                    "digest": "sha256:8fa90b21c985a6fcfff966bdfbde81cdd088de0aa8af38110057f6ac408f4408"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301775,
                    "digest": "sha256:fa3b0fa9a238a4fa3f590c80e14c5732f811f7a17aa0b8102cea7e3a9d250fcd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:583d88f014275e361b79e5a5ccf10b177aafe63e5d44ccd5d3911ca9b924efac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126312044,
                    "digest": "sha256:c3ef2a4c088cdb585153b973dd9e446b46e461b74026ea09d8a0e4c0e2aab61c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:6f29c31feb40b76083f14c0c45585e29a46834fe133a23ada99b276d997b7c09"
                }
            ]
        },
        "1.14-rc-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3814,
                "digest": "sha256:f32f016952fae560fb9e193f03bc1e9b4d692a0c8adccbb4e6add5499806fcca"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2717778,
                    "digest": "sha256:8bfa913040406727f36faa9b69d0b96e071b13792a83ad69c19389031a9f3797"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302343,
                    "digest": "sha256:d523c651118b8110a7055546123bb301485868b779462028d410ad31ce758844"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:a46c404896130ad49e5b0a29fef854c53e121f275ffdd3c624399291cdb710c7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125855261,
                    "digest": "sha256:f7ce82c5ddd26a7ea9c132c4855c7c9f72ca616b5810644abf049f2460135af6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:7eb5f89b3436f8ff915ca7be6dcd30c72fe40e9767eda18906f682c5cb48b4ab"
                }
            ]
        },
        "1.14-rc-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3835,
                "digest": "sha256:2a63caebc4804452a0a3348071f94a1c5dbfd3d2433cc7eb4dff45e04ebd1a6d"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2723075,
                    "digest": "sha256:8fa90b21c985a6fcfff966bdfbde81cdd088de0aa8af38110057f6ac408f4408"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301775,
                    "digest": "sha256:fa3b0fa9a238a4fa3f590c80e14c5732f811f7a17aa0b8102cea7e3a9d250fcd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:583d88f014275e361b79e5a5ccf10b177aafe63e5d44ccd5d3911ca9b924efac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126312044,
                    "digest": "sha256:c3ef2a4c088cdb585153b973dd9e446b46e461b74026ea09d8a0e4c0e2aab61c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:6f29c31feb40b76083f14c0c45585e29a46834fe133a23ada99b276d997b7c09"
                }
            ]
        },
        "1.14-rc-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5459,
                "digest": "sha256:e2c5602da4b0978a97726fb0bc39626a6e6e8d81e322ed593f2468e0ece32760"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49171687,
                    "digest": "sha256:bc03a7ced18fc43ea9523dfb256d2c3fbb835dc0bb54bdb7fd309edf936a87e7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7680993,
                    "digest": "sha256:cba9d528c1473d79c18b401d44ca06b9733d9c51a8699b98e8325c9de60b9739"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9983754,
                    "digest": "sha256:981400d5d268dc989681d5f308b7d2e381809f0bcc82429f443f7539cf6117ba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52102938,
                    "digest": "sha256:f0b2d547b8bc79a444406e56d724fb7d961c953e7f2797de4f55b29abee5605f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 62390640,
                    "digest": "sha256:c84a606fada5847b27d4f74a29fdf4fb7b8ab9430f363c3f35669cabe7a0daf2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 100921394,
                    "digest": "sha256:f930dfbaa1cf7b2092ecaeb4f4b4cc640e3667a209d0c48efed84fea4b4147ae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:6a2462e9ebdbcec6bb610cbb0178b28ccdb578548a4d35b05ad8e41f9eb8c58d"
                }
            ]
        },
        "1.14-rc-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5466,
                "digest": "sha256:62755d81e2701c05ec5737ff94a786b4607f9e1b2c67d6f413c7a0dc026c980e"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43166749,
                    "digest": "sha256:df3de44c7096ba135556a1e7044f9e1feee3ef713ab96f0416f71fe78422cbf6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9748586,
                    "digest": "sha256:fdf173a01baf7d45b479bb380ece219cbf0ea52178e9b8cdc5b87891759d1122"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4094322,
                    "digest": "sha256:c3392eac7bc27f3bd5fcb024413ca55ec4115c22da3e229567d5fc03cd4ff4e4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48024205,
                    "digest": "sha256:04a82fc9ca296b095585ba7f3f6d83566428dbefcbfd284e242039aba97840b2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49097963,
                    "digest": "sha256:aca1cf3b66f921e6f0d5e42cf6821f9a4af6cf2bba19118c0275e0c78b66d0a5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 100921287,
                    "digest": "sha256:a3fd9be79092d368c6870c8196915064601609e04cd7056eb009721f278ffd25"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:c79c32b7f0a18836a1496775f7bfe527a7c68f0108c84d55feda637f6b50a057"
                }
            ]
        },
        "1.14-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7064,
                "digest": "sha256:c519402648894ae1b98b11c5775eb14756df0f278fffe87920d8a8a53318c76f"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43177550,
                    "digest": "sha256:296c9f0bf5f2cf24e87bc5abd674fc486e8df419d4aa2d362453f64d38900504"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10182589,
                    "digest": "sha256:84d546321c8e11789c75187b5b592633207519d75f96e8f03e8378d2da4a72a9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4096615,
                    "digest": "sha256:f91c8ffe219846d18819503633eb252121c21cd20dbff74278b85c4029370992"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47734884,
                    "digest": "sha256:df8d698654f0ee6c5be4a19593a2d7a793c4bed9cb10de0c87d1d1c2ce6ba368"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49215383,
                    "digest": "sha256:600ecd7626593bc604fec33c44e5529f05965b4bd466459a372140895604fe35"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 101416326,
                    "digest": "sha256:c075c42f0d977e4d21c65cdd623d65ee2417e063e89dd76836487d8416053e18"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:3091c7a0268e88306f7207a386af8ff71a29c57f4fbff895ecbb08faf56ff550"
                }
            ]
        },
        "1.14.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:944405641f9fb0f322be1dfc4685b916df2de3df54525cf80822f8a0529f636f",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                }
            ]
        },
        "1.14.0-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3825,
                "digest": "sha256:addb233f6892d1d46f520a294edf82f11d5435115b213665757de4f44b469224"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2723075,
                    "digest": "sha256:8fa90b21c985a6fcfff966bdfbde81cdd088de0aa8af38110057f6ac408f4408"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301775,
                    "digest": "sha256:fa3b0fa9a238a4fa3f590c80e14c5732f811f7a17aa0b8102cea7e3a9d250fcd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:583d88f014275e361b79e5a5ccf10b177aafe63e5d44ccd5d3911ca9b924efac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126276398,
                    "digest": "sha256:ffd98c49b8bea5858204cc46008d56daeccb2dc39133638cfdcd88008fc2b118"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:370237d6b8c86710d7eaae340fca03eff0fd9f21012e6f0ec1f99a18254932df"
                }
            ]
        },
        "1.14.0-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3825,
                "digest": "sha256:addb233f6892d1d46f520a294edf82f11d5435115b213665757de4f44b469224"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2723075,
                    "digest": "sha256:8fa90b21c985a6fcfff966bdfbde81cdd088de0aa8af38110057f6ac408f4408"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301775,
                    "digest": "sha256:fa3b0fa9a238a4fa3f590c80e14c5732f811f7a17aa0b8102cea7e3a9d250fcd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:583d88f014275e361b79e5a5ccf10b177aafe63e5d44ccd5d3911ca9b924efac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126276398,
                    "digest": "sha256:ffd98c49b8bea5858204cc46008d56daeccb2dc39133638cfdcd88008fc2b118"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:370237d6b8c86710d7eaae340fca03eff0fd9f21012e6f0ec1f99a18254932df"
                }
            ]
        },
        "1.14.0-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5449,
                "digest": "sha256:82e6b7b8f7d032e718a41bd779cdc5626578849604da902cd762b299c662b00e"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49169974,
                    "digest": "sha256:77b067f4ec14d48dbc8cd83b7a46fbb5f21fe01ea8911db256cc0168a30c1f5b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7681467,
                    "digest": "sha256:194f1ca8932d9ee1727375561698745fa548546f609956c4aca9fed0b48d41a1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9983767,
                    "digest": "sha256:88425686f799f708ae776f78a6d01c179a52f55fc5b32de874db3c4ace2dd156"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52102940,
                    "digest": "sha256:4c349f2c39d405d81a454ff62bdd8753ad71aeb8e8c1e300f3d7d19cd78eaced"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 62470835,
                    "digest": "sha256:d7f869d21e081791ed21c8e8a1af577238fcc4df45e6c4ac44ba385045d5c527"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 100923836,
                    "digest": "sha256:ca843b853c3ab8c441fce0048583f072b697c265a1aef75e68eb999ee21e2475"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:ea4609e2c8611adb9c0c77a7ea7a87e8aff9429ffaae404f48886aba765664fd"
                }
            ]
        },
        "1.14.0-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5456,
                "digest": "sha256:2ac94c1c2107f075ac90f2896120d4da1da5b9fbfdc42fc3fa14aef57609cead"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43158146,
                    "digest": "sha256:668c278237ef972312df4979c8fb1a927b38db5da09f094ae4fcc84a061dedf8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9748511,
                    "digest": "sha256:8b41cac09012800692bd13a1238260bfb293c18c7864536c494809f2983ad770"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4094435,
                    "digest": "sha256:094b353938273b0bbc576a8a80a232614ca2d9bfe48769641eee7055f3db6a5e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48024341,
                    "digest": "sha256:95fba2538bf9e06bc84462d53d1effc13ecb38f026a6bc0df91cb9da3ffc0fb1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49131532,
                    "digest": "sha256:245fe68ee64c770128591daaa019b8c48e54553794ade79c37e9f1cdbf539b61"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 100923849,
                    "digest": "sha256:751f13039615e4a92080e68ed69d50282a9f6f222f4f005e956c222e3f62dddf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:d6984503e3189e3b140931327f57153f51994b2a542081924181977c5898de52"
                }
            ]
        },
        "1.14.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:593a4e20f714671faca1abdc6592a9eea222609c0b9a77ac95a409acd71d283c",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                }
            ]
        },
        "1.14.1-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3831,
                "digest": "sha256:fa2210540a306f8bbcb6b05e686cbee654dc8a95964122e09c9d5f12984ff6d5"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2723139,
                    "digest": "sha256:8a0637ca1ac98db4cf29f7632449c92801adc80cf0da2cd9c9e39882ce466561"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301778,
                    "digest": "sha256:e42d4106c43952870e20bfb808275012c22e6244af6eff1e916f446f7d338d0d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:c9f0a4e33d457336c22ac08eaec4609be330959ccdfefdb342be1045df4d26f0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126369693,
                    "digest": "sha256:fbf7f842a7e99d7a6ab9e3e6d7e40d0f129e57a332998838d44d9599d27723de"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:376a9aea08688ded8eb21a7fa65eb9b15861367122fa8c02f89ed2dea3bba1b5"
                }
            ]
        },
        "1.14.1-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3831,
                "digest": "sha256:fa2210540a306f8bbcb6b05e686cbee654dc8a95964122e09c9d5f12984ff6d5"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2723139,
                    "digest": "sha256:8a0637ca1ac98db4cf29f7632449c92801adc80cf0da2cd9c9e39882ce466561"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301778,
                    "digest": "sha256:e42d4106c43952870e20bfb808275012c22e6244af6eff1e916f446f7d338d0d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:c9f0a4e33d457336c22ac08eaec4609be330959ccdfefdb342be1045df4d26f0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126369693,
                    "digest": "sha256:fbf7f842a7e99d7a6ab9e3e6d7e40d0f129e57a332998838d44d9599d27723de"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:376a9aea08688ded8eb21a7fa65eb9b15861367122fa8c02f89ed2dea3bba1b5"
                }
            ]
        },
        "1.14.1-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5455,
                "digest": "sha256:f0d46fcbec996ed4a973779e9d98aa6fe6885dbdd78e9419dacb9d7f40d3f147"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49169998,
                    "digest": "sha256:5767fbcc7692f25971758138978eed9bd3add831a79561cd58bf281e60a5159f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7681336,
                    "digest": "sha256:4b632de0573ae234fd668631d1aba00e13ea3a66cdd1732e58533b119480e4e9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9983948,
                    "digest": "sha256:84f852028d4482a56b904b98dfe16c9781cb55380b9a7f6b6cf59622e3ef0de0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52102789,
                    "digest": "sha256:3ac5b037e60412fbff475fee9a38acf16d3117f0709631a272dd03197bf45378"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 62470805,
                    "digest": "sha256:9987cbc2fd2d42712fd05e427e9969577c6e5564d1fda4b61a156ea7d62cca79"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 100992203,
                    "digest": "sha256:005cd7299905fcebfb637a3ad6bc98443835b70d460af0929b11f29f95392872"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:e02090f8e68d799903ea041d1c475d18065190eae4a51a5e4a2ca2a105e8f8d2"
                }
            ]
        },
        "1.14.1-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5463,
                "digest": "sha256:3267ca12b631c256e9317ac6cb370c0f6a6533095152be0263d5b918809f30d5"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43158116,
                    "digest": "sha256:84582781a9f06ad84225307f9cf89d5f77f6e5610281e6ca088fc8c2e9a1d027"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9748484,
                    "digest": "sha256:2aaedfc9896782bd00cfcf104ca392d0b85363b41be4ecedd7c058c1c183ac01"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4094373,
                    "digest": "sha256:cfa6bb03021f1e64553e2c40a904ffe7c70a0112c00ba9bf44f67ad27162f2b0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48024387,
                    "digest": "sha256:6a4110ff81d02419c6737ebf46680f0afee475f58cf3bd159e0892d8f4ffebaf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49131512,
                    "digest": "sha256:dac19f7d4c53192edf0fdc170a95b67cd9525365b5b0a5130559da1b74d618e0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 100992268,
                    "digest": "sha256:beedbd3eb1433ad47736cd1dbf194aa9494d3096d414a3b583bc64bfc279452c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:c806e519cba8b7835bc880831fdaf5ba2cb752f38e66273dba516caa735d4033"
                }
            ]
        },
        "1.14.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:5db15b029195b551e2d412a1f5abd0cb973c1f8dda4269ef401ade470bcafc7d",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                }
            ]
        },
        "1.14.10-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4617,
                "digest": "sha256:1f322931afad429d8b0a2ef37f698814053bc6e30a24ecf9604d7a8adb2daa1e"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2706555,
                    "digest": "sha256:5f621e34cdf485f410766dc9a0fc7855d17916d0f6583b58cbdce7c28831f527"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281230,
                    "digest": "sha256:a4357932f1b6fb010e1461cc5c673712fb832ac44ee627c691db0b64adf95d13"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:18c013af1878066e59b688e31fd962e7267430963de27c5257241e3c223aa1d6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102400780,
                    "digest": "sha256:69ce710a6099356e25b3da6af64fc6e46acdf514538e57f38b14d3e2cca7edac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:7f55348d42dbd0758b0cd20fbb8e58aa698aed0de212227840e02843837f80cb"
                }
            ]
        },
        "1.14.10-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4654,
                "digest": "sha256:4df606af7c920ac468b6d4c000c0aa8860c23ffc890ba5874c7a4d2267b00c79"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2724424,
                    "digest": "sha256:29e5d40040c18c692ed73df24511071725b74956ca1a61fe6056a651d86a13bd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301770,
                    "digest": "sha256:b9fc45ca0357821724e2824e141e2062d236dedad3d8654e0a390419ec9fe393"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:6332e392c90a454bd9f70a303cda942eb0e131e321e82cb70b9346ece4a52a64"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102404303,
                    "digest": "sha256:1a8e6ddf692991d852157a894c43969dc83d91e374d26a131469b0cbe7104212"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:91a8f6942af33307a4b9768ff4dbf3ea0c836c0ce5b401f0895abbb582462c69"
                }
            ]
        },
        "1.14.10-alpine3.12": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4617,
                "digest": "sha256:1f322931afad429d8b0a2ef37f698814053bc6e30a24ecf9604d7a8adb2daa1e"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2706555,
                    "digest": "sha256:5f621e34cdf485f410766dc9a0fc7855d17916d0f6583b58cbdce7c28831f527"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281230,
                    "digest": "sha256:a4357932f1b6fb010e1461cc5c673712fb832ac44ee627c691db0b64adf95d13"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:18c013af1878066e59b688e31fd962e7267430963de27c5257241e3c223aa1d6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102400780,
                    "digest": "sha256:69ce710a6099356e25b3da6af64fc6e46acdf514538e57f38b14d3e2cca7edac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:7f55348d42dbd0758b0cd20fbb8e58aa698aed0de212227840e02843837f80cb"
                }
            ]
        },
        "1.14.10-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7075,
                "digest": "sha256:9d569f1b681ac546a22755e80fce435bcf85905a8083d66af60c3c42dd99b625"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49175405,
                    "digest": "sha256:04aacb10cb67f5fa248646a0ac9f40af5a6d3b0dbef65505bb7766bed6bf4885"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7681432,
                    "digest": "sha256:136d6e4f4b17bdbefbe60820da5f5711a26d31c075dc69bcaf9b077d7d29262d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9983936,
                    "digest": "sha256:28db65b8364fc73072a0d5b51199cc9c6b108b4229d92e784b92ae67898dd0bd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52163324,
                    "digest": "sha256:ff74fb95e95674d2f0c26f446a2cb7c0ee055d78182a9d61e1578c64c171f2b4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 62549429,
                    "digest": "sha256:2198039b51ff463f1fedadd4078efe6e85fe165622f21aef869fd7c265ef7103"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 101119451,
                    "digest": "sha256:377b41610019f95ffc28cec93384b9b23b2679936b31373b4dc8311ddc4ba46e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 157,
                    "digest": "sha256:034be0957b6f3e5ef579cfa384a64134c5b6831b662c8228f9c347dbe77cda3d"
                }
            ]
        },
        "1.14.10-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7081,
                "digest": "sha256:29f6738321e93170ba4e8cd4afbdaddf6b600efb694adffce15ff9931b3df669"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43171543,
                    "digest": "sha256:19e4d0e7f8f2c5cb8a0a8d0e741e9e387c34bd673da69cdcc8e758a5c4dbc106"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9701174,
                    "digest": "sha256:1b66c8297162aeeca035e2cf9e752a4f0e5b411d1c90d7314aba56e52741b6cf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4095275,
                    "digest": "sha256:558b5390d6e12ba26207e779d409c31a61c54713a327bb04565a18f2432bb25d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48043154,
                    "digest": "sha256:170c1c19b0bddab14ad299844e4adf05f4a0c5bff6c6c25d6b159a72e942b27c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49159382,
                    "digest": "sha256:b0f9e501114bf4278276aa95b97228621172a807d791926eba5af62369732aff"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 101119552,
                    "digest": "sha256:8d1fb1f63675df6a37977bbf3a91398ac8849e4f619f5d466fdd37aec60dd08e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 157,
                    "digest": "sha256:e9266aad0568c8963b651df8ea3ab7899a31e6fa99908f8188cf8c8d75018a33"
                }
            ]
        },
        "1.14.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:2f701235f62abf10e5206f284e2d146cbcd5fe407d37d587691469b887b1fdbb",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                }
            ]
        },
        "1.14.11-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4616,
                "digest": "sha256:327f9f211c28570764fcdc122b98a8b7231aad225200cbdabdc80613090ca7bf"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2706555,
                    "digest": "sha256:5f621e34cdf485f410766dc9a0fc7855d17916d0f6583b58cbdce7c28831f527"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281230,
                    "digest": "sha256:a4357932f1b6fb010e1461cc5c673712fb832ac44ee627c691db0b64adf95d13"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:18c013af1878066e59b688e31fd962e7267430963de27c5257241e3c223aa1d6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102590506,
                    "digest": "sha256:d77e4c4323cac205b0e0648168654eeab6f1d9ea388b2015cbc59650af632f62"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:c68f5aacb416a2fa6d097869ed282ee7821d32ed2a401bb9b859b1ebd97a2122"
                }
            ]
        },
        "1.14.11-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4655,
                "digest": "sha256:6b3bd9321d3fb5e5443ed26dcd2dec581438364a8a298f16cb79783c39b384f0"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2724424,
                    "digest": "sha256:29e5d40040c18c692ed73df24511071725b74956ca1a61fe6056a651d86a13bd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301770,
                    "digest": "sha256:b9fc45ca0357821724e2824e141e2062d236dedad3d8654e0a390419ec9fe393"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:6332e392c90a454bd9f70a303cda942eb0e131e321e82cb70b9346ece4a52a64"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102604213,
                    "digest": "sha256:ec871d30225f21a2a8a819434bc3b0830290a4106ead37071cde1d34186a3480"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 157,
                    "digest": "sha256:54e2b05fce590d0f71cb9bc9479fd7c4fff93ede143627c73901258f9f404780"
                }
            ]
        },
        "1.14.11-alpine3.12": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4616,
                "digest": "sha256:327f9f211c28570764fcdc122b98a8b7231aad225200cbdabdc80613090ca7bf"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2706555,
                    "digest": "sha256:5f621e34cdf485f410766dc9a0fc7855d17916d0f6583b58cbdce7c28831f527"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281230,
                    "digest": "sha256:a4357932f1b6fb010e1461cc5c673712fb832ac44ee627c691db0b64adf95d13"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:18c013af1878066e59b688e31fd962e7267430963de27c5257241e3c223aa1d6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102590506,
                    "digest": "sha256:d77e4c4323cac205b0e0648168654eeab6f1d9ea388b2015cbc59650af632f62"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:c68f5aacb416a2fa6d097869ed282ee7821d32ed2a401bb9b859b1ebd97a2122"
                }
            ]
        },
        "1.14.11-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7076,
                "digest": "sha256:2e6be0bcde9d69039112260ebc10ff10b44aac3f0153ae625fb891feff3dfc91"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49175405,
                    "digest": "sha256:04aacb10cb67f5fa248646a0ac9f40af5a6d3b0dbef65505bb7766bed6bf4885"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7681432,
                    "digest": "sha256:136d6e4f4b17bdbefbe60820da5f5711a26d31c075dc69bcaf9b077d7d29262d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9983936,
                    "digest": "sha256:28db65b8364fc73072a0d5b51199cc9c6b108b4229d92e784b92ae67898dd0bd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52163324,
                    "digest": "sha256:ff74fb95e95674d2f0c26f446a2cb7c0ee055d78182a9d61e1578c64c171f2b4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 62549429,
                    "digest": "sha256:2198039b51ff463f1fedadd4078efe6e85fe165622f21aef869fd7c265ef7103"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 101317132,
                    "digest": "sha256:2ba0b6a61f3d1a1d9c608369d03bf6e0edcc7ba9a0d405440558786f9d68ab4d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:5dea4258d5c61c322d5824761fb4ef0466117a968b2d5798c250fe6d82fbaee7"
                }
            ]
        },
        "1.14.11-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7084,
                "digest": "sha256:3dd35404f453eca70335161d99c081f9548283ebe1d59345cd73b84527532f96"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43171543,
                    "digest": "sha256:19e4d0e7f8f2c5cb8a0a8d0e741e9e387c34bd673da69cdcc8e758a5c4dbc106"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9701174,
                    "digest": "sha256:1b66c8297162aeeca035e2cf9e752a4f0e5b411d1c90d7314aba56e52741b6cf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4095275,
                    "digest": "sha256:558b5390d6e12ba26207e779d409c31a61c54713a327bb04565a18f2432bb25d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48043154,
                    "digest": "sha256:170c1c19b0bddab14ad299844e4adf05f4a0c5bff6c6c25d6b159a72e942b27c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49159382,
                    "digest": "sha256:b0f9e501114bf4278276aa95b97228621172a807d791926eba5af62369732aff"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 101317198,
                    "digest": "sha256:fa302fabab3cd654b907fe61f70887343b2759d5e66a824de1f1042af7e8902c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:bd420e8f09a758c1a90bbe2b749b67637ae4c34c96bf7212c554fcf1b2eb1183"
                }
            ]
        },
        "1.14.12": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:1a27a7e2ba4e9b07482423120095d73e8aee2f1d9c6c2f5f876d90d2a3823628",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                }
            ]
        },
        "1.14.12-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4617,
                "digest": "sha256:f8991dd0f63feb1d15258d49800badcbeaf41be3abad24db2550311878eceeb7"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2706555,
                    "digest": "sha256:5f621e34cdf485f410766dc9a0fc7855d17916d0f6583b58cbdce7c28831f527"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281230,
                    "digest": "sha256:a4357932f1b6fb010e1461cc5c673712fb832ac44ee627c691db0b64adf95d13"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:18c013af1878066e59b688e31fd962e7267430963de27c5257241e3c223aa1d6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102595637,
                    "digest": "sha256:b5e68dcf3a7cc215d3d4f2de8065adb9a2e596a03cbeabd1a74c79576be624f0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:8dcafa00f17a27b05e7df4d51950d94570e35e3f4de946bc16190eb58ebde2bd"
                }
            ]
        },
        "1.14.12-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4654,
                "digest": "sha256:86176f85b9e73edfc1a6fec32e05a941445c49fd1cae087a59ed84aa77fa3b7a"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2724424,
                    "digest": "sha256:29e5d40040c18c692ed73df24511071725b74956ca1a61fe6056a651d86a13bd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301770,
                    "digest": "sha256:b9fc45ca0357821724e2824e141e2062d236dedad3d8654e0a390419ec9fe393"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:6332e392c90a454bd9f70a303cda942eb0e131e321e82cb70b9346ece4a52a64"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102601185,
                    "digest": "sha256:1297eb959a6976c45b7912674ab249d184d4aa5a275fc0b48c2114b4ca90ba91"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:32b24169c7272f457c930cab3f358fb765cbf99e6d07dca838a112bb917f9d88"
                }
            ]
        },
        "1.14.12-alpine3.12": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4617,
                "digest": "sha256:f8991dd0f63feb1d15258d49800badcbeaf41be3abad24db2550311878eceeb7"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2706555,
                    "digest": "sha256:5f621e34cdf485f410766dc9a0fc7855d17916d0f6583b58cbdce7c28831f527"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281230,
                    "digest": "sha256:a4357932f1b6fb010e1461cc5c673712fb832ac44ee627c691db0b64adf95d13"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:18c013af1878066e59b688e31fd962e7267430963de27c5257241e3c223aa1d6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102595637,
                    "digest": "sha256:b5e68dcf3a7cc215d3d4f2de8065adb9a2e596a03cbeabd1a74c79576be624f0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:8dcafa00f17a27b05e7df4d51950d94570e35e3f4de946bc16190eb58ebde2bd"
                }
            ]
        },
        "1.14.12-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7038,
                "digest": "sha256:fb6fcdb395b0d4502af7c46fef242c2438f77e614314271371ea66e41025d5fa"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49179215,
                    "digest": "sha256:22518ad4a7da48a5acd01946dad2fbee99e4fca910d23b78cd7e4a16c3bd1e5b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7681805,
                    "digest": "sha256:07ed68dbf09ea059b44b3e1013706c78f868e5f07beb5f16780ca8f52aa9594a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9984036,
                    "digest": "sha256:39eeb09cb5ac2e2a9553920a21389f08df1b6b08c816ae4b8e60866d84119492"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52164616,
                    "digest": "sha256:ff17ea9ada38fca6de6d6808558e3c10793b90c2331b3481ad81f7c62293d8e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 62564498,
                    "digest": "sha256:449bfc488f4a2bf8754514f03b3b0d979c45e55a89af84655f6b1397b960bea4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 101312588,
                    "digest": "sha256:bf4b5c7cdbdc4a9358ad32643f2989b92f5a783a050696d6cf9053f680bc0c4c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:10faf9e9c9eb3223ef65995fd0853a626fb9f529437040d8ef54097316e6369b"
                }
            ]
        },
        "1.14.12-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7047,
                "digest": "sha256:3a25ce9ab4a61746651a2fceb603e2fa042324cc8bbeec238fc3db5abdb4a671"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43176009,
                    "digest": "sha256:f99bf631c0ebddf9e32516b47bf6e198efc42d06c3eb86d6f5f5739757b5839c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9702292,
                    "digest": "sha256:87a9b3adbe4ac4ca73818d8b79e94d2ff2b6ceafc1225d7c036ec4d384f0804a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4095219,
                    "digest": "sha256:052ba804da6ef34fd9dddf0ca298b1e0551ac8cf3ea14fc371fa1fa51cbd7f7c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48043342,
                    "digest": "sha256:1b4839ac53f1fbcca75943ff4ddb761ce018accd0fc19cae8b8776b1619e3d61"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49204444,
                    "digest": "sha256:46dbef96400f7cccfe91ab32d4b323766a452cdb1fcb1139e2080dad118502ad"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 101312607,
                    "digest": "sha256:698b3bd7297d56ddf03e9b17164b75892807b62eec1926608d88d9dd88dffe52"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:604c90ac38edd5e50aba97a5174a177814a5cc9fbc33a7d4911a6fc454967d20"
                }
            ]
        },
        "1.14.13": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:35423191ebfcd471a56b6456dd90db2f37fd2553839337b2619ea089ede4232c",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                }
            ]
        },
        "1.14.13-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4617,
                "digest": "sha256:9fac295f29afe58c9c5797d2d3d822b321a2b90e62ceb93f99b0e6639513ddfa"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2710904,
                    "digest": "sha256:30d5333d20a68dd6ea3689e2c5692d7071f2d68e72c06f0b3b4c7e213df454e2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281493,
                    "digest": "sha256:07698665516ca7cdecf151fd81dd0e98d0d8ed7aa69b231641030fa1a0e0e442"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:52c260f2b2e88e3fcae41f071b37c98ff375604141deda965426161ccfa9c678"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102996103,
                    "digest": "sha256:e0598fa5017710339322feddd5969fb64999bac2826da68e49d6c4311cff2c86"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:13d4a16ba8d2b3d270a28ecc839efb992badecaf6a4aada3ce2eabb741dde9ff"
                }
            ]
        },
        "1.14.13-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4616,
                "digest": "sha256:f102d49e9b9260fc4ba306bdcb9cfed6e2fcfef5492b2c7eb7f22a2963df5f4a"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2725216,
                    "digest": "sha256:20d8a246443a66e74e17f2a0e81a51fe774876ca0c2676691c37ee1b0e4d3cd5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300060,
                    "digest": "sha256:02575a10f84ee2bb7531e433f69fc05bfd689aa2ad5a6b4fdf75415e37fe84ed"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:37ce2c66d2e64d6ba63f357e51e53af3c603af8b6840f25e61d8c11b793501eb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102583596,
                    "digest": "sha256:3847c475885bfc37ac7eb508eb400f559a8abd0056a39bc220929b9e8e48ec17"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:3870db7c2e1f5c88a8d3a35546a5216f6b9461ffd19a2b2ac032e6ca387875d2"
                }
            ]
        },
        "1.14.13-alpine3.12": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4613,
                "digest": "sha256:db0f6c51f8a336e861e2bd97cb1599940eb6794d13af1b6eb5fe4467d00725bd"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2709048,
                    "digest": "sha256:159e5727ea618dfe8b08811112e2c51f5bd2b9ae7db9eb214914a65249f70ca0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281214,
                    "digest": "sha256:89e1f0424fba9fa0ae1558cf9537def9b5de2873566d5ef8564ba0f4a4e99fc6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:4e458f4c6c667cc63829508308a9735d0586f4f55eff2b6c07236536557461e0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102578958,
                    "digest": "sha256:91a6bfb663add6f0c3f65e5b0fb9762006810d51a4a8cb26d14c4fe7e7e32cf3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:4cb9104e32d37cd28ab27d27bdfbfa7f62638f031d0f66dee42c55f6f3030728"
                }
            ]
        },
        "1.14.13-alpine3.13": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4617,
                "digest": "sha256:9fac295f29afe58c9c5797d2d3d822b321a2b90e62ceb93f99b0e6639513ddfa"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2710904,
                    "digest": "sha256:30d5333d20a68dd6ea3689e2c5692d7071f2d68e72c06f0b3b4c7e213df454e2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281493,
                    "digest": "sha256:07698665516ca7cdecf151fd81dd0e98d0d8ed7aa69b231641030fa1a0e0e442"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:52c260f2b2e88e3fcae41f071b37c98ff375604141deda965426161ccfa9c678"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102996103,
                    "digest": "sha256:e0598fa5017710339322feddd5969fb64999bac2826da68e49d6c4311cff2c86"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:13d4a16ba8d2b3d270a28ecc839efb992badecaf6a4aada3ce2eabb741dde9ff"
                }
            ]
        },
        "1.14.13-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7032,
                "digest": "sha256:304712fbdd2dc3f30de8ab01ef6911c0efb645ff64bac2cbfcb92b7c635b294d"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49183736,
                    "digest": "sha256:6e5587ff5efa4e647ae927194fac9b961a68d46b23b68a3119c90016e58f17aa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7682325,
                    "digest": "sha256:439dbbb05ea0aa8484ae8a51d0fbb1c7609176a1b0d3f15dad69d52e9a83af66"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9984327,
                    "digest": "sha256:3b89c8b4e5b232c040d5905808ee62cdfcc9d697de10183d6bc4767468859d92"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52163502,
                    "digest": "sha256:4a53f70a43c3c83782c39cad75aa09ccddb893b3fd54762416fca4d48a3b44b5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 62577187,
                    "digest": "sha256:d56052def468cb5c58be8e760350fc9a45d39c59eee37508312766e5c982dd99"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 101311631,
                    "digest": "sha256:d8ecc965e65cd77dacb637d10a22cfbd8d472f2348927e56bc846605dc7fcbf1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:5e74c962dfb24c724c794ac4f24216e516c38e3b929e575fc9d372c7c83c0bb0"
                }
            ]
        },
        "1.14.13-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7039,
                "digest": "sha256:3a9816f4ae139a08a6a70226d179b3bb280fc3f91bf599b88d3119817feee0f9"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43177964,
                    "digest": "sha256:ec4f0a0f30ab1b4fc2e412a926b8608502de98203ca1994c7916de2017136729"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9703645,
                    "digest": "sha256:dd0d21e1234248b5afd95bc41f061ec505353daeca6d4d5312a0167507857e72"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4095462,
                    "digest": "sha256:1e47f4b9ead7d5e8caca5072922207d5aa928f0144af32c78cf5a7e165f1898b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48043603,
                    "digest": "sha256:d12669d76f10697ce6f8db3816f905c864edac1edb9ff9264a5c77c52e93e970"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49214836,
                    "digest": "sha256:81a50b66a86be37ed658ca50fd407f3295f07ea3663fe578603f24040387a995"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 101311691,
                    "digest": "sha256:bde42761e57135fca33814e564fbd4972bb48da2ab412b3dc356412b7d5b3f44"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:200b55214516143beb0cd921c8134dcf0a8ef36f1eccaf3f4079527f314b1a04"
                }
            ]
        },
        "1.14.14": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:e2fe154a6ab3286eab4f5ddf85e98558303553e622080f8487fb2784fd58ec76",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                }
            ]
        },
        "1.14.14-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4616,
                "digest": "sha256:ba800e27d414e5648bb2c15b6beb456917242531d43c4336d78170974ced40f1"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2711261,
                    "digest": "sha256:2914792bc417803b2106001990194cc00cdd4b6fd97cd21a368f26148bc8e722"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281495,
                    "digest": "sha256:bf71259e4439ff8a66c663015c0b825423507dd67c96bd056d205664830641b1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:89538355e42e5f4bf7c21a627240606a4158b3ede1cf8b88f6a129c78f1366a9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102663986,
                    "digest": "sha256:d447ea365cc4553e1c1fb59d15a266460b05691086b3946fcdaf7fa400cab477"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:eb3d926bd839e0111d8e5d502c82cd915234e297a50ff3fa0beef71053947d29"
                }
            ]
        },
        "1.14.14-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4616,
                "digest": "sha256:018a5d661c615ce7f7e1855d30369bcd7217f577c9e5acf8b882a25f5f81ccd4"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2725216,
                    "digest": "sha256:20d8a246443a66e74e17f2a0e81a51fe774876ca0c2676691c37ee1b0e4d3cd5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300060,
                    "digest": "sha256:02575a10f84ee2bb7531e433f69fc05bfd689aa2ad5a6b4fdf75415e37fe84ed"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:37ce2c66d2e64d6ba63f357e51e53af3c603af8b6840f25e61d8c11b793501eb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102665052,
                    "digest": "sha256:3c1a0a5c7f319fd67966d42140a6bddade33dc4d1aede1b85a86663720c10bcf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:122e7504032a2c7899757b2e2f23b33f01bf397ec01cde57fa8c04ad4c331b33"
                }
            ]
        },
        "1.14.14-alpine3.12": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4614,
                "digest": "sha256:36bc788ed3bd19d9b4303bc6f65b3783cec14d906273458e12f8581028f5ead7"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2709048,
                    "digest": "sha256:159e5727ea618dfe8b08811112e2c51f5bd2b9ae7db9eb214914a65249f70ca0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281214,
                    "digest": "sha256:89e1f0424fba9fa0ae1558cf9537def9b5de2873566d5ef8564ba0f4a4e99fc6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:4e458f4c6c667cc63829508308a9735d0586f4f55eff2b6c07236536557461e0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102668436,
                    "digest": "sha256:421a4321d4574301b168957320f400fef07d0c6e34b075eaa82171bfd9d29911"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:2207fe91e7255eb632becf043a271545914ffca9a4575d639c81573452de4e9e"
                }
            ]
        },
        "1.14.14-alpine3.13": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4616,
                "digest": "sha256:ba800e27d414e5648bb2c15b6beb456917242531d43c4336d78170974ced40f1"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2711261,
                    "digest": "sha256:2914792bc417803b2106001990194cc00cdd4b6fd97cd21a368f26148bc8e722"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281495,
                    "digest": "sha256:bf71259e4439ff8a66c663015c0b825423507dd67c96bd056d205664830641b1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:89538355e42e5f4bf7c21a627240606a4158b3ede1cf8b88f6a129c78f1366a9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102663986,
                    "digest": "sha256:d447ea365cc4553e1c1fb59d15a266460b05691086b3946fcdaf7fa400cab477"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:eb3d926bd839e0111d8e5d502c82cd915234e297a50ff3fa0beef71053947d29"
                }
            ]
        },
        "1.14.14-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7031,
                "digest": "sha256:fafbbda1c6ae87baf96cb28b5f3954abcd65b844a7122122726c91dc754a5ea8"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49183736,
                    "digest": "sha256:6e5587ff5efa4e647ae927194fac9b961a68d46b23b68a3119c90016e58f17aa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7682325,
                    "digest": "sha256:439dbbb05ea0aa8484ae8a51d0fbb1c7609176a1b0d3f15dad69d52e9a83af66"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9984327,
                    "digest": "sha256:3b89c8b4e5b232c040d5905808ee62cdfcc9d697de10183d6bc4767468859d92"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52163502,
                    "digest": "sha256:4a53f70a43c3c83782c39cad75aa09ccddb893b3fd54762416fca4d48a3b44b5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 62577187,
                    "digest": "sha256:d56052def468cb5c58be8e760350fc9a45d39c59eee37508312766e5c982dd99"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 101364838,
                    "digest": "sha256:0a62445245dcce9ff77464fee229850e176c24c3ab8bb0699f3c6fb2fb20d454"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:acd80db3766edc327218ad9de315948df86f8d7a5dbdd4a76bf940bc1f6a937a"
                }
            ]
        },
        "1.14.14-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7038,
                "digest": "sha256:5c9b161ef2bbeff2e857641139b2f27eb45753b884f50aea4e81c061f311bf1f"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43177964,
                    "digest": "sha256:ec4f0a0f30ab1b4fc2e412a926b8608502de98203ca1994c7916de2017136729"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9703645,
                    "digest": "sha256:dd0d21e1234248b5afd95bc41f061ec505353daeca6d4d5312a0167507857e72"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4095462,
                    "digest": "sha256:1e47f4b9ead7d5e8caca5072922207d5aa928f0144af32c78cf5a7e165f1898b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48043603,
                    "digest": "sha256:d12669d76f10697ce6f8db3816f905c864edac1edb9ff9264a5c77c52e93e970"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49214836,
                    "digest": "sha256:81a50b66a86be37ed658ca50fd407f3295f07ea3663fe578603f24040387a995"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 101364918,
                    "digest": "sha256:f56558be9ae18f460e45baa6b3cde261c3f45bcf762a128658cbb67449afa8ae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:255fa45a9fe561fc66f167637c79151a69595a102eca5f8a9afd09ae29d13a1e"
                }
            ]
        },
        "1.14.15": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:b118b3bb13a8c9f27287835182e60c20f37229933e73439214c1eced09749b58",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                }
            ]
        },
        "1.14.15-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4615,
                "digest": "sha256:870c0be9d0b2080aa1dc505e2d09e394301e915758ecaae1acd8ecbe183fa61d"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2711261,
                    "digest": "sha256:2914792bc417803b2106001990194cc00cdd4b6fd97cd21a368f26148bc8e722"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281495,
                    "digest": "sha256:bf71259e4439ff8a66c663015c0b825423507dd67c96bd056d205664830641b1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:89538355e42e5f4bf7c21a627240606a4158b3ede1cf8b88f6a129c78f1366a9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102677821,
                    "digest": "sha256:98cd20d8c20abb0d27bce770ef446b42c067e2212213e9dd74b7b233eb56fab4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:df95759559db161f03a8b789a3143cd99e7c30ed1b85e0fb95252dadc8393508"
                }
            ]
        },
        "1.14.15-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4616,
                "digest": "sha256:0d721bbeec1234bfafabb7b1e0b93fcc9025d03c4b3584f02214871cbbe57497"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2725216,
                    "digest": "sha256:20d8a246443a66e74e17f2a0e81a51fe774876ca0c2676691c37ee1b0e4d3cd5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300060,
                    "digest": "sha256:02575a10f84ee2bb7531e433f69fc05bfd689aa2ad5a6b4fdf75415e37fe84ed"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:37ce2c66d2e64d6ba63f357e51e53af3c603af8b6840f25e61d8c11b793501eb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102697939,
                    "digest": "sha256:6428f88f192e74eb1a09ccaadc1f029b3ad702760583fed1730d04fb35455670"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:8f7066f9ea61ff9557144708cff079946a512807f2b33334ccb6a49330e8e76c"
                }
            ]
        },
        "1.14.15-alpine3.12": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4614,
                "digest": "sha256:83ae25a8edb8e08cfaf3bbae575e72a81b01a5849029fc4205a5e8bc2c273a3c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2709048,
                    "digest": "sha256:159e5727ea618dfe8b08811112e2c51f5bd2b9ae7db9eb214914a65249f70ca0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281214,
                    "digest": "sha256:89e1f0424fba9fa0ae1558cf9537def9b5de2873566d5ef8564ba0f4a4e99fc6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:4e458f4c6c667cc63829508308a9735d0586f4f55eff2b6c07236536557461e0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102675802,
                    "digest": "sha256:91b496408b3386e70cfbd32601c637214c74d1c42786fdc62fdffb02edc787a3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:da977b63b39af6471323a60cf5b2fb60de4db26cace1a118f5d40a7a8f3b04d2"
                }
            ]
        },
        "1.14.15-alpine3.13": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4615,
                "digest": "sha256:870c0be9d0b2080aa1dc505e2d09e394301e915758ecaae1acd8ecbe183fa61d"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2711261,
                    "digest": "sha256:2914792bc417803b2106001990194cc00cdd4b6fd97cd21a368f26148bc8e722"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281495,
                    "digest": "sha256:bf71259e4439ff8a66c663015c0b825423507dd67c96bd056d205664830641b1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:89538355e42e5f4bf7c21a627240606a4158b3ede1cf8b88f6a129c78f1366a9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102677821,
                    "digest": "sha256:98cd20d8c20abb0d27bce770ef446b42c067e2212213e9dd74b7b233eb56fab4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:df95759559db161f03a8b789a3143cd99e7c30ed1b85e0fb95252dadc8393508"
                }
            ]
        },
        "1.14.15-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7032,
                "digest": "sha256:c7909254f92e63dae7ffbf97005b162f85fa6bae6ff36c0ee69faf317198f6a1"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49183229,
                    "digest": "sha256:c78c297fb0d010ee085f95ae439636ecb167b050c1acb4273bd576998cf94a83"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7694122,
                    "digest": "sha256:06af62193c25241eb123af8cf115c7a6298e834976fe148ac79ec11a7ca06ee5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9984281,
                    "digest": "sha256:8b846e1b73901174c506ae5e6219ac2f356ef71eaa5896dfbc238dc67ca4bf73"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52165287,
                    "digest": "sha256:fb44d26a138a8d064a4ab8f9b472c64e7136c2482ec5af19bab8811b6d2c15b7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 62587497,
                    "digest": "sha256:d638b6994818c673ce32f9ad2ad7c2bac3b21d54c4f341f941e10d9724b16b4b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 101416327,
                    "digest": "sha256:c83562ffe1b7b73f5f0976bcfdd50493ea6481f3cc94dca4f8ddec865e3726bb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:6dab3a1d94818778b0f784671a0f9dd4e1f324de54af373a765971990b3d434a"
                }
            ]
        },
        "1.14.15-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7064,
                "digest": "sha256:c519402648894ae1b98b11c5775eb14756df0f278fffe87920d8a8a53318c76f"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43177550,
                    "digest": "sha256:296c9f0bf5f2cf24e87bc5abd674fc486e8df419d4aa2d362453f64d38900504"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10182589,
                    "digest": "sha256:84d546321c8e11789c75187b5b592633207519d75f96e8f03e8378d2da4a72a9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4096615,
                    "digest": "sha256:f91c8ffe219846d18819503633eb252121c21cd20dbff74278b85c4029370992"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47734884,
                    "digest": "sha256:df8d698654f0ee6c5be4a19593a2d7a793c4bed9cb10de0c87d1d1c2ce6ba368"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49215383,
                    "digest": "sha256:600ecd7626593bc604fec33c44e5529f05965b4bd466459a372140895604fe35"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 101416326,
                    "digest": "sha256:c075c42f0d977e4d21c65cdd623d65ee2417e063e89dd76836487d8416053e18"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:3091c7a0268e88306f7207a386af8ff71a29c57f4fbff895ecbb08faf56ff550"
                }
            ]
        }
    },
    "tags": [
        "1",
        "1-alpine",
        "1-alpine3.10",
        "1-alpine3.11",
        "1-alpine3.12",
        "1-alpine3.13",
        "1-alpine3.14",
        "1-alpine3.15",
        "1-alpine3.16",
        "1-alpine3.17",
        "1-alpine3.18",
        "1-alpine3.19",
        "1-alpine3.20",
        "1-alpine3.6",
        "1-alpine3.7",
        "1-alpine3.8",
        "1-alpine3.9",
        "1-bookworm",
        "1-bullseye",
        "1-buster",
        "1-stretch",
        "1.10",
        "1.10-alpine",
        "1.10-alpine3.7",
        "1.10-alpine3.8",
        "1.10-alpine3.9",
        "1.10-rc",
        "1.10-rc-alpine",
        "1.10-rc-alpine3.7",
        "1.10-rc-stretch",
        "1.10-stretch",
        "1.10.0",
        "1.10.0-alpine",
        "1.10.0-alpine3.7",
        "1.10.0-stretch",
        "1.10.1",
        "1.10.1-alpine",
        "1.10.1-alpine3.7",
        "1.10.1-stretch",
        "1.10.2",
        "1.10.2-alpine",
        "1.10.2-alpine3.7",
        "1.10.2-stretch",
        "1.10.3",
        "1.10.3-alpine",
        "1.10.3-alpine3.7",
        "1.10.3-alpine3.8",
        "1.10.3-stretch",
        "1.10.4",
        "1.10.4-alpine",
        "1.10.4-alpine3.7",
        "1.10.4-alpine3.8",
        "1.10.4-stretch",
        "1.10.5",
        "1.10.5-alpine",
        "1.10.5-alpine3.7",
        "1.10.5-alpine3.8",
        "1.10.5-stretch",
        "1.10.6",
        "1.10.6-alpine",
        "1.10.6-alpine3.7",
        "1.10.6-alpine3.8",
        "1.10.6-stretch",
        "1.10.7",
        "1.10.7-alpine",
        "1.10.7-alpine3.7",
        "1.10.7-alpine3.8",
        "1.10.7-stretch",
        "1.10.8",
        "1.10.8-alpine",
        "1.10.8-alpine3.7",
        "1.10.8-alpine3.8",
        "1.10.8-alpine3.9",
        "1.10.8-stretch",
        "1.10beta1",
        "1.10beta1-alpine",
        "1.10beta1-alpine3.7",
        "1.10beta1-stretch",
        "1.10beta2",
        "1.10beta2-alpine",
        "1.10beta2-alpine3.7",
        "1.10beta2-stretch",
        "1.10rc1",
        "1.10rc1-alpine",
        "1.10rc1-alpine3.7",
        "1.10rc1-stretch",
        "1.10rc2",
        "1.10rc2-alpine",
        "1.10rc2-alpine3.7",
        "1.10rc2-stretch",
        "1.11",
        "1.11-alpine",
        "1.11-alpine3.10",
        "1.11-alpine3.7",
        "1.11-alpine3.8",
        "1.11-alpine3.9",
        "1.11-buster",
        "1.11-rc",
        "1.11-rc-alpine",
        "1.11-rc-alpine3.7",
        "1.11-rc-alpine3.8",
        "1.11-rc-stretch",
        "1.11-stretch",
        "1.11.0",
        "1.11.0-alpine",
        "1.11.0-alpine3.7",
        "1.11.0-alpine3.8",
        "1.11.0-stretch",
        "1.11.1",
        "1.11.1-alpine",
        "1.11.1-alpine3.7",
        "1.11.1-alpine3.8",
        "1.11.1-stretch",
        "1.11.10",
        "1.11.10-alpine",
        "1.11.10-alpine3.8",
        "1.11.10-alpine3.9",
        "1.11.10-stretch",
        "1.11.11",
        "1.11.11-alpine",
        "1.11.11-alpine3.10",
        "1.11.11-alpine3.8",
        "1.11.11-alpine3.9",
        "1.11.11-stretch",
        "1.11.12",
        "1.11.12-alpine",
        "1.11.12-alpine3.10",
        "1.11.12-alpine3.9",
        "1.11.12-buster",
        "1.11.12-stretch",
        "1.11.13",
        "1.11.13-alpine",
        "1.11.13-alpine3.10",
        "1.11.13-alpine3.9",
        "1.11.13-buster",
        "1.11.13-stretch",
        "1.11.2",
        "1.11.2-alpine",
        "1.11.2-alpine3.7",
        "1.11.2-alpine3.8",
        "1.11.2-stretch",
        "1.11.3",
        "1.11.3-alpine",
        "1.11.3-alpine3.7",
        "1.11.3-alpine3.8",
        "1.11.3-stretch",
        "1.11.4",
        "1.11.4-alpine",
        "1.11.4-alpine3.7",
        "1.11.4-alpine3.8",
        "1.11.4-stretch",
        "1.11.5",
        "1.11.5-alpine",
        "1.11.5-alpine3.7",
        "1.11.5-alpine3.8",
        "1.11.5-alpine3.9",
        "1.11.5-stretch",
        "1.11.6",
        "1.11.6-alpine",
        "1.11.6-alpine3.8",
        "1.11.6-alpine3.9",
        "1.11.6-stretch",
        "1.11.7",
        "1.11.7-alpine",
        "1.11.7-alpine3.8",
        "1.11.7-alpine3.9",
        "1.11.7-stretch",
        "1.11.8",
        "1.11.8-alpine",
        "1.11.8-alpine3.8",
        "1.11.8-alpine3.9",
        "1.11.8-stretch",
        "1.11.9",
        "1.11.9-alpine",
        "1.11.9-alpine3.8",
        "1.11.9-alpine3.9",
        "1.11.9-stretch",
        "1.11beta1",
        "1.11beta1-alpine",
        "1.11beta1-alpine3.7",
        "1.11beta1-alpine3.8",
        "1.11beta1-stretch",
        "1.11beta2",
        "1.11beta2-alpine",
        "1.11beta2-alpine3.7",
        "1.11beta2-alpine3.8",
        "1.11beta2-stretch",
        "1.11beta3",
        "1.11beta3-alpine",
        "1.11beta3-alpine3.7",
        "1.11beta3-alpine3.8",
        "1.11beta3-stretch",
        "1.11rc1",
        "1.11rc1-alpine",
        "1.11rc1-alpine3.7",
        "1.11rc1-alpine3.8",
        "1.11rc1-stretch",
        "1.11rc2",
        "1.11rc2-alpine",
        "1.11rc2-alpine3.7",
        "1.11rc2-alpine3.8",
        "1.11rc2-stretch",
        "1.12",
        "1.12-alpine",
        "1.12-alpine3.10",
        "1.12-alpine3.11",
        "1.12-alpine3.9",
        "1.12-buster",
        "1.12-rc",
        "1.12-rc-alpine",
        "1.12-rc-alpine3.8",
        "1.12-rc-alpine3.9",
        "1.12-rc-stretch",
        "1.12-stretch",
        "1.12.0",
        "1.12.0-alpine",
        "1.12.0-alpine3.9",
        "1.12.0-stretch",
        "1.12.1",
        "1.12.1-alpine",
        "1.12.1-alpine3.9",
        "1.12.1-stretch",
        "1.12.10",
        "1.12.10-alpine",
        "1.12.10-alpine3.10",
        "1.12.10-alpine3.9",
        "1.12.10-buster",
        "1.12.10-stretch",
        "1.12.11",
        "1.12.11-alpine",
        "1.12.11-alpine3.10",
        "1.12.11-alpine3.9",
        "1.12.11-buster",
        "1.12.11-stretch",
        "1.12.12",
        "1.12.12-alpine",
        "1.12.12-alpine3.10",
        "1.12.12-alpine3.9",
        "1.12.12-buster",
        "1.12.12-stretch",
        "1.12.13",
        "1.12.13-alpine",
        "1.12.13-alpine3.10",
        "1.12.13-alpine3.9",
        "1.12.13-buster",
        "1.12.13-stretch",
        "1.12.14",
        "1.12.14-alpine",
        "1.12.14-alpine3.10",
        "1.12.14-alpine3.11",
        "1.12.14-alpine3.9",
        "1.12.14-buster",
        "1.12.14-stretch",
        "1.12.15",
        "1.12.15-alpine",
        "1.12.15-alpine3.10",
        "1.12.15-alpine3.11",
        "1.12.15-buster",
        "1.12.15-stretch",
        "1.12.16",
        "1.12.16-alpine",
        "1.12.16-alpine3.10",
        "1.12.16-alpine3.11",
        "1.12.16-buster",
        "1.12.16-stretch",
        "1.12.17",
        "1.12.17-alpine",
        "1.12.17-alpine3.10",
        "1.12.17-alpine3.11",
        "1.12.17-buster",
        "1.12.17-stretch",
        "1.12.2",
        "1.12.2-alpine",
        "1.12.2-alpine3.9",
        "1.12.2-stretch",
        "1.12.3",
        "1.12.3-alpine",
        "1.12.3-alpine3.9",
        "1.12.3-stretch",
        "1.12.4",
        "1.12.4-alpine",
        "1.12.4-alpine3.9",
        "1.12.4-stretch",
        "1.12.5",
        "1.12.5-alpine",
        "1.12.5-alpine3.9",
        "1.12.5-stretch",
        "1.12.6",
        "1.12.6-alpine",
        "1.12.6-alpine3.10",
        "1.12.6-alpine3.9",
        "1.12.6-stretch",
        "1.12.7",
        "1.12.7-alpine",
        "1.12.7-alpine3.10",
        "1.12.7-alpine3.9",
        "1.12.7-buster",
        "1.12.7-stretch",
        "1.12.8",
        "1.12.8-alpine",
        "1.12.8-alpine3.10",
        "1.12.8-alpine3.9",
        "1.12.8-buster",
        "1.12.8-stretch",
        "1.12.9",
        "1.12.9-alpine",
        "1.12.9-alpine3.10",
        "1.12.9-alpine3.9",
        "1.12.9-buster",
        "1.12.9-stretch",
        "1.12beta1",
        "1.12beta1-alpine",
        "1.12beta1-alpine3.8",
        "1.12beta1-stretch",
        "1.12beta2",
        "1.12beta2-alpine",
        "1.12beta2-alpine3.8",
        "1.12beta2-alpine3.9",
        "1.12beta2-stretch",
        "1.12rc1",
        "1.12rc1-alpine",
        "1.12rc1-alpine3.8",
        "1.12rc1-alpine3.9",
        "1.12rc1-stretch",
        "1.13",
        "1.13-alpine",
        "1.13-alpine3.10",
        "1.13-alpine3.11",
        "1.13-alpine3.12",
        "1.13-buster",
        "1.13-rc",
        "1.13-rc-alpine",
        "1.13-rc-alpine3.10",
        "1.13-rc-buster",
        "1.13-stretch",
        "1.13.0",
        "1.13.0-alpine",
        "1.13.0-alpine3.10",
        "1.13.0-buster",
        "1.13.0-stretch",
        "1.13.1",
        "1.13.1-alpine",
        "1.13.1-alpine3.10",
        "1.13.1-buster",
        "1.13.1-stretch",
        "1.13.10",
        "1.13.10-alpine",
        "1.13.10-alpine3.10",
        "1.13.10-alpine3.11",
        "1.13.10-buster",
        "1.13.10-stretch",
        "1.13.11",
        "1.13.11-alpine",
        "1.13.11-alpine3.10",
        "1.13.11-alpine3.11",
        "1.13.11-buster",
        "1.13.11-stretch",
        "1.13.12",
        "1.13.12-alpine",
        "1.13.12-alpine3.11",
        "1.13.12-alpine3.12",
        "1.13.12-buster",
        "1.13.12-stretch",
        "1.13.13",
        "1.13.13-alpine",
        "1.13.13-alpine3.11",
        "1.13.13-alpine3.12",
        "1.13.13-buster",
        "1.13.13-stretch",
        "1.13.14",
        "1.13.14-alpine",
        "1.13.14-alpine3.11",
        "1.13.14-alpine3.12",
        "1.13.14-buster",
        "1.13.14-stretch",
        "1.13.15",
        "1.13.15-alpine",
        "1.13.15-alpine3.11",
        "1.13.15-alpine3.12",
        "1.13.15-buster",
        "1.13.15-stretch",
        "1.13.2",
        "1.13.2-alpine",
        "1.13.2-alpine3.10",
        "1.13.2-buster",
        "1.13.2-stretch",
        "1.13.3",
        "1.13.3-alpine",
        "1.13.3-alpine3.10",
        "1.13.3-buster",
        "1.13.3-stretch",
        "1.13.4",
        "1.13.4-alpine",
        "1.13.4-alpine3.10",
        "1.13.4-buster",
        "1.13.4-stretch",
        "1.13.5",
        "1.13.5-alpine",
        "1.13.5-alpine3.10",
        "1.13.5-alpine3.11",
        "1.13.5-buster",
        "1.13.5-stretch",
        "1.13.6",
        "1.13.6-alpine",
        "1.13.6-alpine3.10",
        "1.13.6-alpine3.11",
        "1.13.6-buster",
        "1.13.6-stretch",
        "1.13.7",
        "1.13.7-alpine",
        "1.13.7-alpine3.10",
        "1.13.7-alpine3.11",
        "1.13.7-buster",
        "1.13.7-stretch",
        "1.13.8",
        "1.13.8-alpine",
        "1.13.8-alpine3.10",
        "1.13.8-alpine3.11",
        "1.13.8-buster",
        "1.13.8-stretch",
        "1.13.9",
        "1.13.9-alpine",
        "1.13.9-alpine3.10",
        "1.13.9-alpine3.11",
        "1.13.9-buster",
        "1.13.9-stretch",
        "1.13beta1",
        "1.13beta1-alpine",
        "1.13beta1-alpine3.10",
        "1.13beta1-buster",
        "1.13rc1",
        "1.13rc1-alpine",
        "1.13rc1-alpine3.10",
        "1.13rc1-buster",
        "1.13rc2",
        "1.13rc2-alpine",
        "1.13rc2-alpine3.10",
        "1.13rc2-buster",
        "1.14",
        "1.14-alpine",
        "1.14-alpine3.11",
        "1.14-alpine3.12",
        "1.14-alpine3.13",
        "1.14-buster",
        "1.14-rc",
        "1.14-rc-alpine",
        "1.14-rc-alpine3.10",
        "1.14-rc-alpine3.11",
        "1.14-rc-buster",
        "1.14-rc-stretch",
        "1.14-stretch",
        "1.14.0",
        "1.14.0-alpine",
        "1.14.0-alpine3.11",
        "1.14.0-buster",
        "1.14.0-stretch",
        "1.14.1",
        "1.14.1-alpine",
        "1.14.1-alpine3.11",
        "1.14.1-buster",
        "1.14.1-stretch",
        "1.14.10",
        "1.14.10-alpine",
        "1.14.10-alpine3.11",
        "1.14.10-alpine3.12",
        "1.14.10-buster",
        "1.14.10-stretch",
        "1.14.11",
        "1.14.11-alpine",
        "1.14.11-alpine3.11",
        "1.14.11-alpine3.12",
        "1.14.11-buster",
        "1.14.11-stretch",
        "1.14.12",
        "1.14.12-alpine",
        "1.14.12-alpine3.11",
        "1.14.12-alpine3.12",
        "1.14.12-buster",
        "1.14.12-stretch",
        "1.14.13",
        "1.14.13-alpine",
        "1.14.13-alpine3.11",
        "1.14.13-alpine3.12",
        "1.14.13-alpine3.13",
        "1.14.13-buster",
        "1.14.13-stretch",
        "1.14.14",
        "1.14.14-alpine",
        "1.14.14-alpine3.11",
        "1.14.14-alpine3.12",
        "1.14.14-alpine3.13",
        "1.14.14-buster",
        "1.14.14-stretch",
        "1.14.15",
        "1.14.15-alpine",
        "1.14.15-alpine3.11",
        "1.14.15-alpine3.12",
        "1.14.15-alpine3.13",
        "1.14.15-buster",
        "1.14.15-stretch"
    ],
    "configs": {
        "1-alpine3.10": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:54f708fac0c44885a24d7e830bf9d7acc3a5bb4e9d0dc35bc2a32fc39b6c5741",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "864892ed15df8dac1fbfb47c7b5efe8d214e57af056c169c842f303db978321c",
            "container_config": {
                "Hostname": "864892ed15df",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:54f708fac0c44885a24d7e830bf9d7acc3a5bb4e9d0dc35bc2a32fc39b6c5741",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-14T00:48:15.224086866Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-01-23T16:54:39.663281449Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bdfbd4b0dfb53eecc80bac65894d1e2fcfafb27dcf24ab019176e2c9f60b9a39 in / "
                },
                {
                    "created": "2020-01-23T16:54:40.353281052Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-23T17:36:05.510608107Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-01-23T17:36:07.938033301Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-02-14T00:46:09.011567251Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.8",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T00:48:04.557035969Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'b13bf04633d4d8cf53226ebeaace8d4d2fd07ae6fa676d0844a688339debec34 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-14T00:48:10.474855811Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T00:48:11.205519324Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T00:48:14.589131189Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-14T00:48:15.224086866Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1aed0a4fa040a4b937e7b74a2e2386e40654c267d166dced87eb80d5a1a0826c",
                    "sha256:f2c832c0a239a603c1482fd9563201da92a86060471bc59a879d2d33043641e0",
                    "sha256:cd9b03c31d86db9cc14d8a724d86f89be4e4b2a05cf3fc5d6458851596fae784",
                    "sha256:3c56e99597928ca34d499814461b29a09fec229736840f83f24667323a6f43f6",
                    "sha256:95eea07b82fdfc9f0161fa9b1cba7d3a7961131c85b014c974a0ecbddd7bff9c"
                ]
            }
        },
        "1-alpine3.11": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:503dad9f78fc3cd57fa6bd2220f3f222bb691214832b52e1a2687dd8d2c13b91",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "e731c040561b0a2919e5663e8839dbbbc2071b210543907525f08ce5bb5506ac",
            "container_config": {
                "Hostname": "e731c040561b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:503dad9f78fc3cd57fa6bd2220f3f222bb691214832b52e1a2687dd8d2c13b91",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-08-07T00:01:10.955019357Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-04-24T00:14:18.623777014Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:85ae77bc1e43353ff14e6fe1658be1ed4ecbf4330212ac3d7ab7462add32dd39 in / "
                },
                {
                    "created": "2020-04-24T00:14:21.043191759Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-24T09:30:19.959732843Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-04-24T09:30:22.482603996Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-08-06T23:55:21.383892669Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.7",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-07T00:00:13.583824613Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '064392433563660c73186991c0a315787688e7c38a561e26647686f89b6c30e3 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-08-07T00:00:31.030889804Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-07T00:00:40.415248665Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-07T00:01:03.408845209Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-08-07T00:01:10.955019357Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:678a0785e7d29c77c56c1bb0af4b279374e731903506838956f7bc808665a6dd",
                    "sha256:079af829c0db80026b85d242cea6f54d5bd4d8d787d083da9ac0b6ada9e9cabc",
                    "sha256:b2e3f56df73e6b071d861884c1d0400f1dc635e9bc0f217a47886ba2cce82467",
                    "sha256:c716631f8ebc9df778a49afcbb7d1a6a2abbe384676393abcc7e21194502660e",
                    "sha256:bf1f876a39c25b5d39f770a09b897197990f754d1aec89d4f205818731db0982"
                ]
            }
        },
        "1-alpine3.12": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.16.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:82e3e6cff1c7d4dc13fcca70427e5c7e3d795dbb99998b5bcea4b78526bc1a23",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f9dd95ee03140a5595c2e031869652b868d8c6740a2e300a460a709a36e9721a",
            "container_config": {
                "Hostname": "f9dd95ee0314",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.16.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:82e3e6cff1c7d4dc13fcca70427e5c7e3d795dbb99998b5bcea4b78526bc1a23",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-06-15T23:45:27.826004897Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-06-15T21:45:09.825022654Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3db1e10ac5ebf1cb34939eff736f1384f7d3b17355758cec361489fa7a7e19ca in / "
                },
                {
                    "created": "2021-06-15T21:45:09.997503412Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-15T23:40:14.60786924Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2021-06-15T23:40:15.412629563Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2021-06-15T23:40:15.606071702Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-15T23:44:05.620710459Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.16.5",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-15T23:45:25.77321864Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\t'x86_64') \t\t\texport GOARCH='amd64' GOOS='linux'; \t\t\t;; \t\t'armhf') \t\t\texport GOARCH='arm' GOARM='6' GOOS='linux'; \t\t\t;; \t\t'armv7') \t\t\texport GOARCH='arm' GOARM='7' GOOS='linux'; \t\t\t;; \t\t'aarch64') \t\t\texport GOARCH='arm64' GOOS='linux'; \t\t\t;; \t\t'x86') \t\t\texport GO386='softfloat' GOARCH='386' GOOS='linux'; \t\t\t;; \t\t'ppc64le') \t\t\texport GOARCH='ppc64le' GOOS='linux'; \t\t\t;; \t\t's390x') \t\t\texport GOARCH='s390x' GOOS='linux'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$apkArch' (likely packaging update needed)\"; exit 1 ;; \tesac; \t\turl='https://dl.google.com/go/go1.16.5.src.tar.gz'; \tsha256='7bfa7e5908c7cc9e75da5ddf3066d7cbcf3fd9fa51945851325eebc17f50ba80'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\t( \t\tcd /usr/local/go/src; \t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\tif [ \"${GO386:-}\" = 'softfloat' ]; then \t\t\tGO386= ./bootstrap.bash; \t\t\texport GOROOT_BOOTSTRAP=\"/usr/local/go-$GOOS-$GOARCH-bootstrap\"; \t\t\t\"$GOROOT_BOOTSTRAP/bin/go\" version; \t\tfi; \t\t./make.bash; \t\tif [ \"${GO386:-}\" = 'softfloat' ]; then \t\t\trm -rf \"$GOROOT_BOOTSTRAP\"; \t\tfi; \t); \t\tgo install std; \t\tapk del --no-network .build-deps; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2021-06-15T23:45:26.609304909Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-15T23:45:26.809299964Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-15T23:45:27.608322804Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-06-15T23:45:27.826004897Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3fbe34a1663b53537f0523ceb716271b430be37404069492086d8859842016f3",
                    "sha256:e68e57767f9ae0f1c366beaf743aace416b3f74d34bf10ec7f52a4508bc228dd",
                    "sha256:425d2dbf0c7881091aceebc57b6257b1622607b6013464ce36bd49704b247249",
                    "sha256:841d18c678a17a63645110c888e5b20c86de0f4363ece8c00cb29f94adeee56f",
                    "sha256:cb514bf26a45bbe71170a5b44b4c3da447be63a4539816af7dabdecb34b7c4ce"
                ]
            }
        },
        "1-alpine3.13": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:743ffafffe4c1c988e9f98d3285fc91c722c1992329ec0426a3f56ccf76c3743",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "4238a6cf9fa872d5631992fcfcbe7994f361dabe576f34600884f14476e9a430",
            "container_config": {
                "Hostname": "4238a6cf9fa8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:743ffafffe4c1c988e9f98d3285fc91c722c1992329ec0426a3f56ccf76c3743",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-11-13T08:42:25.586717009Z",
            "docker_version": "20.10.7",
            "history": [
                {
                    "created": "2021-11-12T16:40:05.923736389Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ad85e8724ab9b90e37aadca9513807d07d557e7fc4287ca017f01f269aff3920 in / "
                },
                {
                    "created": "2021-11-12T16:40:06.052502542Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-13T08:40:52.745177072Z",
                    "created_by": "/bin/sh -c apk add --no-cache ca-certificates"
                },
                {
                    "created": "2021-11-13T08:40:53.525102538Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2021-11-13T08:40:54.131757851Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-13T08:40:55.122059053Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.3",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-13T08:42:22.42934904Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .fetch-deps gnupg; \tarch=\"$(apk --print-arch)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\texport GOARCH='amd64' GOOS='linux'; \t\t\t;; \t\t'armhf') \t\t\texport GOARCH='arm' GOARM='6' GOOS='linux'; \t\t\t;; \t\t'armv7') \t\t\texport GOARCH='arm' GOARM='7' GOOS='linux'; \t\t\t;; \t\t'aarch64') \t\t\texport GOARCH='arm64' GOOS='linux'; \t\t\t;; \t\t'x86') \t\t\texport GO386='softfloat' GOARCH='386' GOOS='linux'; \t\t\t;; \t\t'ppc64le') \t\t\texport GOARCH='ppc64le' GOOS='linux'; \t\t\t;; \t\t's390x') \t\t\texport GOARCH='s390x' GOOS='linux'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl='https://dl.google.com/go/go1.17.3.src.tar.gz'; \t\tsha256='705c64251e5b25d5d55ede1039c6aa22bea40a7a931d14c370339853643c3df0'; \tfi; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tapk add --no-cache --virtual .build-deps \t\t\tbash \t\t\tgcc \t\t\tgo \t\t\tmusl-dev \t\t; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\tif [ -n \"${GO386:-}\" ]; then \t\t\t\tGO386= ./bootstrap.bash; \t\t\t\texport GOROOT_BOOTSTRAP=\"/usr/local/go-$GOOS-$GOARCH-bootstrap\"; \t\t\t\t\"$GOROOT_BOOTSTRAP/bin/go\" version; \t\t\tfi; \t\t\t./make.bash; \t\t\tif [ -n \"${GO386:-}\" ]; then \t\t\t\trm -rf \"$GOROOT_BOOTSTRAP\"; \t\t\tfi; \t\t); \t\t\t\tapk del --no-network .build-deps; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tapk del --no-network .fetch-deps; \t\tgo version"
                },
                {
                    "created": "2021-11-13T08:42:23.196039377Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-13T08:42:23.714710634Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-13T08:42:25.072634715Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-11-13T08:42:25.586717009Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:95b262a8801233b6a420e060ea3ace84a98a651c2dec814c94e2bd9c74bc72d0",
                    "sha256:640d058e82826d18ea70856363890fcdf25edf1704f7eb2f6ddc1bd689badec8",
                    "sha256:417dee7245b94ec7b3d32b5a973e9ef94a533206830448ba84aab83bbe600f8a",
                    "sha256:6c4bb757e939c145c1e53e1fe57116fbac4750510b105954f3913bfd1e6dbe03",
                    "sha256:0de638d87affda550a189c134216007032433c84014043090cbb00aec37a0106"
                ]
            },
            "variant": "v8"
        },
        "1-alpine3.14": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:30c847bab57d601b3a1a335c8c5201c95bb997ab624b8f7510344f1f25dfd85c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "d55beccb57e786a2cb6086d50906f4c9dc32e6729d512b79110329bebb52ed43",
            "container_config": {
                "Hostname": "d55beccb57e7",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:30c847bab57d601b3a1a335c8c5201c95bb997ab624b8f7510344f1f25dfd85c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-05-10T22:44:22.53352822Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-04-04T23:39:39.174024596Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:66f473ec586f45376eb1941936c7829f636b90cad2022233cacf3186ac747ef9 in / "
                },
                {
                    "created": "2022-04-04T23:39:39.342957509Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-05T07:39:49.88217681Z",
                    "created_by": "/bin/sh -c apk add --no-cache ca-certificates"
                },
                {
                    "created": "2022-04-05T07:39:50.600856927Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2022-04-05T07:39:51.112877616Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-10T22:42:53.212404873Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.2",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-10T22:44:19.56231937Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .fetch-deps gnupg; \tarch=\"$(apk --print-arch)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\texport GOAMD64='v1' GOARCH='amd64' GOOS='linux'; \t\t\t;; \t\t'armhf') \t\t\texport GOARCH='arm' GOARM='6' GOOS='linux'; \t\t\t;; \t\t'armv7') \t\t\texport GOARCH='arm' GOARM='7' GOOS='linux'; \t\t\t;; \t\t'aarch64') \t\t\texport GOARCH='arm64' GOOS='linux'; \t\t\t;; \t\t'x86') \t\t\texport GO386='softfloat' GOARCH='386' GOOS='linux'; \t\t\t;; \t\t'ppc64le') \t\t\texport GOARCH='ppc64le' GOOS='linux'; \t\t\t;; \t\t's390x') \t\t\texport GOARCH='s390x' GOOS='linux'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl='https://dl.google.com/go/go1.18.2.src.tar.gz'; \t\tsha256='2c44d03ea2c34092137ab919ba602f2c261a038d08eb468528a3f3a28e5667e2'; \tfi; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tapk add --no-cache --virtual .build-deps \t\t\tbash \t\t\tgcc \t\t\tgo \t\t\tmusl-dev \t\t; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapk del --no-network .build-deps; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tapk del --no-network .fetch-deps; \t\tgo version"
                },
                {
                    "created": "2022-05-10T22:44:20.351281788Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-10T22:44:20.874570057Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-10T22:44:21.941655916Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-05-10T22:44:22.53352822Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f73e7dbfee583332e4288f887ee4189e325e7368454ca9ff167e56e7b47d33e4",
                    "sha256:9657d61c2e0e5f73dd840d189c57c131852edf7a550c9237ebc2c5c69433cde1",
                    "sha256:2be4a93a009c7924f29622581fa842f215c41ae187d8840feabd8c11326be9a9",
                    "sha256:9f7d45ee8cdbd9087bd5342c24befa52928c7757c757c1be52ff9feb4c575214",
                    "sha256:6e9f029d6d1c0e44738a7c068b651166aed88532d9840e0a8eac714bc7bee573"
                ]
            },
            "variant": "v8"
        },
        "1-alpine3.15": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.19.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:429d6c9f0c5e6b2af6e9e0115f3743a31e79c8e599e6d38c0820b17a43939e39",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "06ee5338d0fda6aeda76f707b28822cb7df55b0711eb27c1742e35b1c8e7efc1",
            "container_config": {
                "Hostname": "06ee5338d0fd",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.19.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:429d6c9f0c5e6b2af6e9e0115f3743a31e79c8e599e6d38c0820b17a43939e39",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-11-16T19:59:50.475719655Z",
            "docker_version": "20.10.17",
            "history": [
                {
                    "created": "2022-11-10T20:39:46.624075862Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4b51a9d40f20d2beb29d0759b161d2b9403493453beb509de4e86a5d98513f16 in / "
                },
                {
                    "created": "2022-11-10T20:39:46.698774172Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-10T21:34:39.140197631Z",
                    "created_by": "/bin/sh -c apk add --no-cache ca-certificates"
                },
                {
                    "created": "2022-11-16T19:58:36.637916019Z",
                    "created_by": "/bin/sh -c set -eux; \tif [ -e /etc/nsswitch.conf ]; then \t\tgrep '^hosts: files dns' /etc/nsswitch.conf; \telse \t\techo 'hosts: files dns' > /etc/nsswitch.conf; \tfi"
                },
                {
                    "created": "2022-11-16T19:58:36.712843601Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-16T19:58:36.787481961Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.19.3",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-16T19:59:47.528397426Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .fetch-deps gnupg; \tarch=\"$(apk --print-arch)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\texport GOAMD64='v1' GOARCH='amd64' GOOS='linux'; \t\t\t;; \t\t'armhf') \t\t\texport GOARCH='arm' GOARM='6' GOOS='linux'; \t\t\t;; \t\t'armv7') \t\t\texport GOARCH='arm' GOARM='7' GOOS='linux'; \t\t\t;; \t\t'aarch64') \t\t\texport GOARCH='arm64' GOOS='linux'; \t\t\t;; \t\t'x86') \t\t\texport GO386='softfloat' GOARCH='386' GOOS='linux'; \t\t\t;; \t\t'ppc64le') \t\t\texport GOARCH='ppc64le' GOOS='linux'; \t\t\t;; \t\t's390x') \t\t\texport GOARCH='s390x' GOOS='linux'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl='https://dl.google.com/go/go1.19.3.src.tar.gz'; \t\tsha256='18ac263e39210bcf68d85f4370e97fb1734166995a1f63fb38b4f6e07d90d212'; \tfi; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tapk add --no-cache --virtual .build-deps \t\t\tbash \t\t\tgcc \t\t\tgo \t\t\tmusl-dev \t\t; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\tif [ \"${GOARCH:-}\" = '386' ]; then \t\t\t\texport CGO_CFLAGS='-fno-stack-protector'; \t\t\tfi; \t\t\t./make.bash; \t\t); \t\t\t\tapk del --no-network .build-deps; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tapk del --no-network .fetch-deps; \t\tgo version"
                },
                {
                    "created": "2022-11-16T19:59:49.85262774Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-16T19:59:49.921231704Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-16T19:59:50.391023678Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-11-16T19:59:50.475719655Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9833f26c6bda49289ac8a34a3aa95591ec19bd573686c3c0b4e07e5e463edfa2",
                    "sha256:94e2db39ca095d1e8e28cb41f64138ca10750693efeeb7dc042e3eec3233d15e",
                    "sha256:0d31fc80150cf4f870a5d6765853543a7dfeca6909fb769ea062a49e2cb201a3",
                    "sha256:dee7d367ba8bf3a8d3073f4bd334d20c85f850f01f6ceac93b14350faad1c90d",
                    "sha256:4134b1bbf77bb92f78566d5acb8caff27f7de3ae4bc507762999ae5686ff0970"
                ]
            },
            "variant": "v8"
        },
        "1-alpine3.16": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.20.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:56b80be9124be856c57e40f306e0a4dcc834318b395b940d4845eaa0d8c41c97",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "3043cd5f66da2168098908aac58b10dbac0204a4436510c7eb3389ddfed4a463",
            "container_config": {
                "Hostname": "3043cd5f66da",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.20.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:56b80be9124be856c57e40f306e0a4dcc834318b395b940d4845eaa0d8c41c97",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2023-05-02T18:38:59.971290153Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2023-03-29T17:39:20.496660356Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a6a2f69b60d7d27bc6e2b9b7e9910dabdc3f5e3702c2345d26a7dc8c603ae595 in / "
                },
                {
                    "created": "2023-03-29T17:39:20.58605154Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-30T04:00:09.865784641Z",
                    "created_by": "/bin/sh -c apk add --no-cache ca-certificates"
                },
                {
                    "created": "2023-03-30T04:00:09.966609532Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-02T18:37:52.06260492Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.20.4",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-02T18:38:57.830834958Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .fetch-deps gnupg; \tarch=\"$(apk --print-arch)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\texport GOAMD64='v1' GOARCH='amd64' GOOS='linux'; \t\t\t;; \t\t'armhf') \t\t\texport GOARCH='arm' GOARM='6' GOOS='linux'; \t\t\t;; \t\t'armv7') \t\t\texport GOARCH='arm' GOARM='7' GOOS='linux'; \t\t\t;; \t\t'aarch64') \t\t\texport GOARCH='arm64' GOOS='linux'; \t\t\t;; \t\t'x86') \t\t\texport GO386='softfloat' GOARCH='386' GOOS='linux'; \t\t\t;; \t\t'ppc64le') \t\t\texport GOARCH='ppc64le' GOOS='linux'; \t\t\t;; \t\t's390x') \t\t\texport GOARCH='s390x' GOOS='linux'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl='https://dl.google.com/go/go1.20.4.src.tar.gz'; \t\tsha256='9f34ace128764b7a3a4b238b805856cc1b2184304df9e5690825b0710f4202d6'; \tfi; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tapk add --no-cache --virtual .build-deps \t\t\tbash \t\t\tgcc \t\t\tgo \t\t\tmusl-dev \t\t; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\tif [ \"${GOARCH:-}\" = '386' ]; then \t\t\t\texport CGO_CFLAGS='-fno-stack-protector'; \t\t\tfi; \t\t\t./make.bash; \t\t); \t\t\t\tapk del --no-network .build-deps; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tapk del --no-network .fetch-deps; \t\tgo version"
                },
                {
                    "created": "2023-05-02T18:38:59.368124998Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-02T18:38:59.445937779Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-02T18:38:59.890704698Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 1777 \"$GOPATH\""
                },
                {
                    "created": "2023-05-02T18:38:59.971290153Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:dc65b23a4b7c4b9ed9f634d3a1dd4cc10bbf0251e85480648acf7f22061b3949",
                    "sha256:40247da26d88ba195b59daa2c979cec17d15eff213a917b526fbb5144302b799",
                    "sha256:0291dedcf791b4b45f5cdb5d2fe71f3aa998acbbd88aa1cdca8e6b4922d6de02",
                    "sha256:84629bdb23fe108a9b1a9db13e55fc6e48049563a5277dfa24194c721168d91a"
                ]
            },
            "variant": "v8"
        },
        "1-alpine3.17": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.21.5",
                    "GOTOOLCHAIN=local",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:01c483aed00a3491cd6374db035f576e1832cac751919415c907a3f4dd26a1e2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f00b0e90b046dadb0cf7e468e4cfcd1959b163bc7fe51dfac21f1de49c729f2c",
            "container_config": {
                "Hostname": "f00b0e90b046",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.21.5",
                    "GOTOOLCHAIN=local",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:01c483aed00a3491cd6374db035f576e1832cac751919415c907a3f4dd26a1e2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2023-12-05T20:16:42.503254543Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2023-11-30T23:11:07.603746135Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e5c66967d6570e36da50c9d42dd8f8f55e6c6a65b92c79601ea9e750c076fa2a in / "
                },
                {
                    "created": "2023-11-30T23:11:07.707251622Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T03:18:45.35717473Z",
                    "created_by": "/bin/sh -c apk add --no-cache ca-certificates"
                },
                {
                    "created": "2023-12-01T03:18:45.443981844Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:16:31.615158947Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.21.5",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:16:40.512343493Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .fetch-deps gnupg; \tarch=\"$(apk --print-arch)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dl.google.com/go/go1.21.5.linux-amd64.tar.gz'; \t\t\tsha256='e2bc0b3e4b64111ec117295c088bde5f00eeed1567999ff77bc859d7df70078e'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dl.google.com/go/go1.21.5.linux-armv6l.tar.gz'; \t\t\tsha256='837f4bf4e22fcdf920ffeaa4abf3d02d1314e03725431065f4d44c46a01b42fe'; \t\t\t;; \t\t'armv7') \t\t\turl='https://dl.google.com/go/go1.21.5.linux-armv6l.tar.gz'; \t\t\tsha256='837f4bf4e22fcdf920ffeaa4abf3d02d1314e03725431065f4d44c46a01b42fe'; \t\t\t;; \t\t'aarch64') \t\t\turl='https://dl.google.com/go/go1.21.5.linux-arm64.tar.gz'; \t\t\tsha256='841cced7ecda9b2014f139f5bab5ae31785f35399f236b8b3e75dff2a2978d96'; \t\t\t;; \t\t'x86') \t\t\turl='https://dl.google.com/go/go1.21.5.linux-386.tar.gz'; \t\t\tsha256='8f4dba9cf5c61757bbd7e9ebdb93b6a30a1b03f4a636a1ba0cc2f27b907ab8e1'; \t\t\t;; \t\t'ppc64le') \t\t\turl='https://dl.google.com/go/go1.21.5.linux-ppc64le.tar.gz'; \t\t\tsha256='907b8c6ec4be9b184952e5d3493be66b1746442394a8bc78556c56834cd7c38b'; \t\t\t;; \t\t'riscv64') \t\t\turl='https://dl.google.com/go/go1.21.5.linux-riscv64.tar.gz'; \t\t\tsha256='984d8f999f5019d15527a1a0e6b0c3ef879833e26dcd422ab0ef4d81ac486b96'; \t\t\t;; \t\t's390x') \t\t\turl='https://dl.google.com/go/go1.21.5.linux-s390x.tar.gz'; \t\t\tsha256='9c4a81b72ebe44368813cd03684e1080a818bf915d84163abae2ed325a1b2dc0'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl='https://dl.google.com/go/go1.21.5.src.tar.gz'; \t\tsha256='285cbbdf4b6e6e62ed58f370f3f6d8c30825d6e56c5853c66d3c23bcdb09db19'; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tapk add --no-cache --virtual .build-deps \t\t\tbash \t\t\tgcc \t\t\tgo \t\t\tmusl-dev \t\t; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\tif [ \"${GOARCH:-}\" = '386' ]; then \t\t\t\texport CGO_CFLAGS='-fno-stack-protector'; \t\t\tfi; \t\t\t./make.bash; \t\t); \t\t\t\tapk del --no-network .build-deps; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tapk del --no-network .fetch-deps; \t\tgo version"
                },
                {
                    "created": "2023-12-05T20:16:41.824795317Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOTOOLCHAIN=local",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:16:41.899361329Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:16:41.973041119Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:16:42.418213867Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 1777 \"$GOPATH\""
                },
                {
                    "created": "2023-12-05T20:16:42.503254543Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:dcb5ba173dd4ea13356a2533054d308e54f2696002ddc6acec8b6f6a13759b46",
                    "sha256:a026d2f87d61aa3b1386b8b60c0d5a9cec9ed8ade3ae99bd9ca607f5b2558101",
                    "sha256:5ec0db9fee733de4d4a9213b495f69cd177e35874a9c19f988d186a4e92d3712",
                    "sha256:89a9c8c4d1c98c07af3088ed4ef5822ffcfe004677222608c7f1224472e55ac3"
                ]
            },
            "variant": "v8"
        },
        "1-alpine3.6": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.9.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7b68316f3ca791e21c3cc29f4af35c0738ef77d0bca7f67a50bbdaaeefadc63f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "fe9aea8cc14d205a1f23e6e0d409290e56386cd1c9b2324424d8aad21ec35d28",
            "container_config": {
                "Hostname": "fe9aea8cc14d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.9.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ea7c9f4702f94a0df05f60648914e97f7876c4a7c5163e7870dd98fa896ff722 in /usr/local/bin/ "
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7b68316f3ca791e21c3cc29f4af35c0738ef77d0bca7f67a50bbdaaeefadc63f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-02-08T21:02:51.5569255Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2017-10-25T23:28:58.527844585Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:45b5d3b8d5490ba7edfca2cf6f54cdcf49c772b0b3a2302ce69a7af061007aa4 in / "
                },
                {
                    "created": "2017-10-25T23:28:59.393582543Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2017-10-25T23:28:59.986572981Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-10-26T05:14:31.447813299Z",
                    "created_by": "/bin/sh -c apk add --no-cache ca-certificates"
                },
                {
                    "created": "2018-02-08T21:00:49.150675302Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.9.4",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-08T21:00:49.870953481Z",
                    "created_by": "/bin/sh -c #(nop) COPY multi:5340852d126c59a835fc30c4253b181919d512298cbb0226c1562e4ec4eba94c in /go-alpine-patches/ "
                },
                {
                    "created": "2018-02-08T21:02:47.309932722Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '0573a8df33168977185aa44173305e5a0450f55213600e94541604b75d46dc06 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf /go-alpine-patches; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-02-08T21:02:48.43311451Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-08T21:02:48.971122078Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-08T21:02:50.376137007Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-02-08T21:02:50.928858836Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-08T21:02:51.5569255Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ea7c9f4702f94a0df05f60648914e97f7876c4a7c5163e7870dd98fa896ff722 in /usr/local/bin/ "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:199db0687ace8b20b588602d3c7862720e6ceed5579b1c28592f8604759b6575",
                    "sha256:7678a22575498f8b94e63eedf9295ea062870de4da0a9b04f94a5a1cff4921bc",
                    "sha256:e1a37801c844499bec9e96c7a9d1f203190ac49c6a2f3444f2cc72c920b1f4bc",
                    "sha256:d57e8b3338b84f59b3ddb3382ff4179494ffafc437f8c833251c976cd91d7186",
                    "sha256:7da1bb48e2abc57a63f2d91c84f93480374b8f7edf714fddd6e7761d0dcb1130",
                    "sha256:ef09a918ef3739a403ebff6faa4cb70df64bab79ad1604edff7a2cf17a9980e1",
                    "sha256:bb470a6d95c472acceb9441d3b1ab8a214713fba1268ff5ff0077846dd28f9c7"
                ]
            }
        },
        "1-alpine3.7": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3ba44ac502b7cd8dc3aa058d72c8c7fd3a94cf6459f052fae71ff9d11596aea2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "93d4e65a4385e60c7f21be3e8df08fcee63fc775100ae5c13a553ad7471b9355",
            "container_config": {
                "Hostname": "93d4e65a4385",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3ba44ac502b7cd8dc3aa058d72c8c7fd3a94cf6459f052fae71ff9d11596aea2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-01-25T09:34:03.02276993Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2018-12-21T09:42:47.616920457Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7278e4df49d628c2bbb27c53665e671f57cd2db003e030b1be93eb81c5d28303 in / "
                },
                {
                    "created": "2018-12-21T09:42:48.140920422Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a10c133d8d5e9af3a9a1610709d3ed2f85b1507f1ba5745ac12bb495974e3fe6 in /etc/localtime "
                },
                {
                    "created": "2018-12-21T09:42:48.640087564Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T10:14:45.27493224Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-12-21T10:14:47.648984863Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-01-25T09:29:33.433290364Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.5",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-25T09:33:55.799230273Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'bc1ef02bb1668835db1390a2e478dcbccb5dd16911691af9d75184bbe5aa943e *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-01-25T09:33:57.679503632Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-25T09:33:58.689118974Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-25T09:34:02.036443359Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-01-25T09:34:03.02276993Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0376dca82a151dba64ed0b4492d714c7ebc6825e0138daded841bdb43996ab9e",
                    "sha256:d1ebf0a8b65281fbaac5f61a75ba9179c66ceb134610fd069e071357b61e531f",
                    "sha256:6532a6eb4787b26dd63f27fa3b33349c06774803b6f5f006701b9093b3183351",
                    "sha256:ab5180a942db0a82a751476b2480ee156ccd89448e7122a9b1c2f22570b0e5be",
                    "sha256:81e57ad2f67a9a8e97cd6ee673290e5e7b0e4e2ec15c1fb3b75fa13e2ebb0084",
                    "sha256:0ead02f1795fe09a94be316089d61f6ca1a32845a47d7cff8e2589a4ae4a391b"
                ]
            }
        },
        "1-alpine3.8": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ff79c51aed2da221f7010dda8628dd16c0fcfd0c106292033a67cccd5ecd52e5",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "0aacfe3b6a9c46e1024a9fd4b6b00367c9894edd6f17b115daa411460f141e1c",
            "container_config": {
                "Hostname": "0aacfe3b6a9c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ff79c51aed2da221f7010dda8628dd16c0fcfd0c106292033a67cccd5ecd52e5",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-01-25T09:29:20.300396649Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2018-12-21T09:43:06.705630029Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:79419748674899ac7d5d699fe62f837c69d04af3ceaabbb7951c35c2f0ff46fa in / "
                },
                {
                    "created": "2018-12-21T09:43:07.198401212Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a10c133d8d5e9af3a9a1610709d3ed2f85b1507f1ba5745ac12bb495974e3fe6 in /etc/localtime "
                },
                {
                    "created": "2018-12-21T09:43:07.722553865Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T10:00:50.393353587Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-12-21T10:00:52.818317624Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-01-25T09:26:18.201462207Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.5",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-25T09:29:15.550790999Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'bc1ef02bb1668835db1390a2e478dcbccb5dd16911691af9d75184bbe5aa943e *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-01-25T09:29:17.036263331Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-25T09:29:17.696198634Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-25T09:29:19.651737531Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-01-25T09:29:20.300396649Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:92d7b4d0b33cc1213ee394fabb26922447135080a3b7bd326e5bb7453e06be32",
                    "sha256:82fe62b38ba2a9028a57bee2d8e1b855733943e5491ad946e37e406208ff6e8b",
                    "sha256:0db26aa2ab49f54f8b357b9d4f8188543a065211dac4752eb7d9b65da88a52cf",
                    "sha256:6897c234601851e40044ce7b1194fc52052891863645562058c775deb9dc1342",
                    "sha256:09e36c4b52f3264c76cacabca3eec103992335ddceb2de5dac8cd04892b73044",
                    "sha256:fa053a8a05b0b18c227fa2937da6fba6ee68c06750ae3d2da4de49032d974917"
                ]
            }
        },
        "1-alpine3.9": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2485ef2582b0c34040472dc81dd967c68001d305e6ddc91813fe3dbd6ad4ab78",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "6dadcaa30e1740808a4e0337c7f32e1b203c5ef894ba266ea34b20e2ad67c4dd",
            "container_config": {
                "Hostname": "6dadcaa30e17",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2485ef2582b0c34040472dc81dd967c68001d305e6ddc91813fe3dbd6ad4ab78",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-16T20:45:41.020590567Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-06-19T20:39:47.282820492Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:66f49017dd7ba295602526dbf210046e47fd097298c17a3f268a47487b5b6379 in / "
                },
                {
                    "created": "2019-06-19T20:39:47.636619987Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-19T20:56:05.137314338Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-06-19T20:56:06.515114234Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-08-16T20:43:22.308277884Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.9",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-16T20:45:36.960861618Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'ab0e56ed9c4732a653ed22e232652709afbf573e710f56a07f7fdeca578d62fc *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-16T20:45:39.096780983Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-16T20:45:39.448387478Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-16T20:45:40.661081317Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-16T20:45:41.020590567Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6d626da635fcff8a8485691ff0156105a5fe75675870a779f0093a6aedce13f7",
                    "sha256:7a151b0f5372ba7688803bb1a0385aeaaa51dff30ded9d13bb0bd0253833077a",
                    "sha256:8ab68ccf1104e218ce48cf2fe4058a7f3d88d4cfb0a5c6500a59aadb616bd88c",
                    "sha256:d082d2cf71f4e7e1614f54f75d76e318f2ad9313f71e0b5b094b04a668f5a7dd",
                    "sha256:5b1eab7c0f1dfdb3c530bd174a10d2dfe3d74c4b512161a684e90c592c0c767d"
                ]
            }
        },
        "1-buster": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.20.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:b18981ddb79ee7ce099e0f34ddf16e3bc0634231aff5f17f42770b314dd42d1c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f8fc913aad47c0e9f03229129e97c43cfca27e85d878043740476c520fb4b2db",
            "container_config": {
                "Hostname": "f8fc913aad47",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.20.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:b18981ddb79ee7ce099e0f34ddf16e3bc0634231aff5f17f42770b314dd42d1c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2023-06-13T18:24:01.326682486Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2023-06-12T23:40:41.861244938Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bb3cb9e6abc423742d7c1b6bc006a7cef70038c5621c71a90a2ae7c1ea29ec63 in / "
                },
                {
                    "created": "2023-06-12T23:40:42.401803812Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-13T03:03:36.013611367Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tgnupg \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-06-13T03:03:56.901931899Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-06-13T18:23:50.37904908Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-06-13T18:23:51.12697732Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-13T18:23:51.200990952Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.20.5",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-13T18:23:59.217897004Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dl.google.com/go/go1.20.5.linux-amd64.tar.gz'; \t\t\tsha256='d7ec48cde0d3d2be2c69203bc3e0a44de8660b9c09a6e85c4732a3f7dc442612'; \t\t\t;; \t\t'armel') \t\t\texport GOARCH='arm' GOARM='5' GOOS='linux'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dl.google.com/go/go1.20.5.linux-armv6l.tar.gz'; \t\t\tsha256='79d8210efd4390569912274a98dffc16eb85993cccdeef4d704e9b0dfd50743a'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dl.google.com/go/go1.20.5.linux-arm64.tar.gz'; \t\t\tsha256='aa2fab0a7da20213ff975fa7876a66d47b48351558d98851b87d1cfef4360d09'; \t\t\t;; \t\t'i386') \t\t\turl='https://dl.google.com/go/go1.20.5.linux-386.tar.gz'; \t\t\tsha256='d394ac8fecf66812c78ffba7fb9a265bb1b9917564c7fd77f0edb0df6d5777a1'; \t\t\t;; \t\t'mips64el') \t\t\texport GOARCH='mips64le' GOOS='linux'; \t\t\t;; \t\t'ppc64el') \t\t\turl='https://dl.google.com/go/go1.20.5.linux-ppc64le.tar.gz'; \t\t\tsha256='049b8ab07d34077b90c0642138e10207f6db14bdd1743ea994a21e228f8ca53d'; \t\t\t;; \t\t's390x') \t\t\turl='https://dl.google.com/go/go1.20.5.linux-s390x.tar.gz'; \t\t\tsha256='bac14667f1217ccce1d2ef4e204687fe6191e6dc19a8870cfb81a41f78b04e48'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl='https://dl.google.com/go/go1.20.5.src.tar.gz'; \t\tsha256='9a15c133ba2cfafe79652f4815b62e7cfc267f68df1b9454c6ab2a3ca8b96a88'; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\t( \t\t\t. /etc/os-release; \t\t\techo \"deb https://deb.debian.org/debian $VERSION_CODENAME-backports main\" > /etc/apt/sources.list.d/backports.list; \t\t\t\t\t\tapt-get update; \t\t\tapt-get install -y --no-install-recommends -t \"$VERSION_CODENAME-backports\" golang-go; \t\t); \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2023-06-13T18:24:00.716752998Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-13T18:24:00.793622603Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-13T18:24:01.247359718Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 1777 \"$GOPATH\""
                },
                {
                    "created": "2023-06-13T18:24:01.326682486Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:97551bf43823913b6ca75b3f35674a374085a3e05771a26d3b4603d6d85a623d",
                    "sha256:c401210c496838dec191b8b1c46ac0555927adc253c4875b0e902dfa2b84aff0",
                    "sha256:7d9d4c2307c1d32f2cc47bddbf70aa34bd44cf30bb63be867c9fcbc41b9cce60",
                    "sha256:0e198705f75cbed8be1529e80dcd71cdd981264697c70091d1482c8e0ddf31b4",
                    "sha256:2d395862acb210ca9fe2a46f23688cdadcd4fb4bbbb916e516e355910be3ecf7",
                    "sha256:ea1d3a46c41b3e2f5fac93ec787e36fd4dd0594654de7d723eb8186bd1a646b4"
                ]
            },
            "variant": "v8"
        },
        "1-stretch": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:6fdaeb1747c29b5a50752ec674d4ea13e6be6f1e74c4cb7fb07dd39991d0a9c2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "4798bec17129ac88ec48652cc3de2a63af667df0f315d2715b3543a8ee1e6759",
            "container_config": {
                "Hostname": "4798bec17129",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:6fdaeb1747c29b5a50752ec674d4ea13e6be6f1e74c4cb7fb07dd39991d0a9c2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-06-23T18:53:32.485065188Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-06-23T00:42:45.082860306Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3d8b1da94fcec5d068e3e6465fac70cce404c331bb52e30a5bf7cbd950baa5fe in / "
                },
                {
                    "created": "2022-06-23T00:42:45.897823754Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-23T01:15:56.978732246Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tapt-transport-https \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-23T01:16:01.851854497Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-06-23T01:16:21.28038999Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-23T18:51:54.794724193Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-23T18:51:55.467563816Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-23T18:53:15.741567588Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.3",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-23T18:53:27.866126093Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dl.google.com/go/go1.18.3.linux-amd64.tar.gz'; \t\t\tsha256='956f8507b302ab0bb747613695cdae10af99bbd39a90cae522b7c0302cc27245'; \t\t\t;; \t\t'armel') \t\t\texport GOARCH='arm' GOARM='5' GOOS='linux'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dl.google.com/go/go1.18.3.linux-armv6l.tar.gz'; \t\t\tsha256='b8f0b5db24114388d5dcba7ca0698510ea05228b0402fcbeb0881f74ae9cb83b'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dl.google.com/go/go1.18.3.linux-arm64.tar.gz'; \t\t\tsha256='beacbe1441bee4d7978b900136d1d6a71d150f0a9bb77e9d50c822065623a35a'; \t\t\t;; \t\t'i386') \t\t\turl='https://dl.google.com/go/go1.18.3.linux-386.tar.gz'; \t\t\tsha256='72b73da021397a3a1ce182c19d2a890a5346bfe80885d9dd7d1ff04ce6597938'; \t\t\t;; \t\t'mips64el') \t\t\texport GOARCH='mips64le' GOOS='linux'; \t\t\t;; \t\t'ppc64el') \t\t\turl='https://dl.google.com/go/go1.18.3.linux-ppc64le.tar.gz'; \t\t\tsha256='5d42bd252e7af9f854df92e46bb2e88be7b2fb310cc937c0fe091afd8c4f2016'; \t\t\t;; \t\t's390x') \t\t\turl='https://dl.google.com/go/go1.18.3.linux-s390x.tar.gz'; \t\t\tsha256='ebb4efddec5bbd22bdd9c87137cb3dd59e874b5dfcf93d00bef351c60d2c7401'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl='https://dl.google.com/go/go1.18.3.src.tar.gz'; \t\tsha256='0012386ddcbb5f3350e407c679923811dbd283fcdc421724931614a842ecbc2d'; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-06-23T18:53:29.125854945Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-23T18:53:30.128197121Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-23T18:53:31.492562418Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-06-23T18:53:32.485065188Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8d796fa548097cef349c3c59fd49c2e9a603eabca13d312e9d19c26b6420dab1",
                    "sha256:09a30e15ff852b08d62cd20066edfea325f96a43efc559ddd1c1bac42fc18011",
                    "sha256:37870137c560743bda497a61f80278abed959ef065c85e737ea525e3296cb453",
                    "sha256:c2eea412e5b65116453a14496f0365ba7f2edc676e56f069994c0f1f5878b2e4",
                    "sha256:d7ef9abc28ba1385bf007af6e4846ec1bf3361925af3834ce308c5d78c776434",
                    "sha256:5521174d643b840bfcc16f48abd7855e9527efa949141a70006417dcf9fef6e9",
                    "sha256:a8df5763dfbaf9f22cb7eddb9a5de23bbdf4d5975485c5107486694553a15634"
                ]
            },
            "variant": "v8"
        },
        "1.10-alpine": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:66349372a0fdab62025ce81cf2a7156e84b8e7825b1d4409195724ed2c98fc3c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "aa890d627882def6f62f44af396e0f81d9411e688515542e024d0884880f56d1",
            "container_config": {
                "Hostname": "aa890d627882",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:66349372a0fdab62025ce81cf2a7156e84b8e7825b1d4409195724ed2c98fc3c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-02-06T10:49:24.171832067Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-01-31T09:40:55.59464559Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3c5f57c6644886bbb8164b9aa4cd60e233be7da48b7194a04963a8e7de058e28 in / "
                },
                {
                    "created": "2019-01-31T09:40:56.373934366Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a10c133d8d5e9af3a9a1610709d3ed2f85b1507f1ba5745ac12bb495974e3fe6 in /etc/localtime "
                },
                {
                    "created": "2019-01-31T09:40:57.414211885Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T10:35:48.859028851Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-02-06T10:35:53.718651346Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-02-06T10:45:47.043189513Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.8",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T10:49:08.389648675Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '6faf74046b5e24c2c0b46e78571cca4d65e1b89819da1089e53ea57539c63491 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-02-06T10:49:12.480361472Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T10:49:14.162810255Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T10:49:22.094740632Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-02-06T10:49:24.171832067Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b62d6d9a5cefd54dd8025cbfc842db54bbbc2268be8d05125c05ef82228da652",
                    "sha256:f8acf74b099c772d9f05156f67bc53953983b4f4edd19881dc2b138d1cfdb5dc",
                    "sha256:9079a9ec4fad7a526523322dad8473070caa3506e0da3d1de6796e849e7b2700",
                    "sha256:55321bf93b5623e0f3cfeb273381e036e21b0cf1873712feb570c153950a88a5",
                    "sha256:ea74a2813ebc4a2c6497e2cf3979ca7908272846b153706dc420a3a9b7106198",
                    "sha256:a98aebf83b10aa026b35b8b9b3130470e99a3ad6e90e30d7d3648339a70703d0"
                ]
            }
        },
        "1.10-alpine3.7": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:393a3bd347a5673af2d83e9b66e416acef7821b0ae6cd2975accb4b6cf7e651b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "6d420cd0095bcceceb8b32cbec89fb606f4798e82c21592f8e9058c4a0488de7",
            "container_config": {
                "Hostname": "6d420cd0095b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:393a3bd347a5673af2d83e9b66e416acef7821b0ae6cd2975accb4b6cf7e651b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-01-25T09:40:17.582862304Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2018-12-21T09:42:47.616920457Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7278e4df49d628c2bbb27c53665e671f57cd2db003e030b1be93eb81c5d28303 in / "
                },
                {
                    "created": "2018-12-21T09:42:48.140920422Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a10c133d8d5e9af3a9a1610709d3ed2f85b1507f1ba5745ac12bb495974e3fe6 in /etc/localtime "
                },
                {
                    "created": "2018-12-21T09:42:48.640087564Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T10:14:45.27493224Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-12-21T10:14:47.648984863Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-01-25T09:37:46.802136115Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.8",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-25T09:40:12.395084895Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '6faf74046b5e24c2c0b46e78571cca4d65e1b89819da1089e53ea57539c63491 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-01-25T09:40:13.620318942Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-25T09:40:14.369586236Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-25T09:40:16.582003728Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-01-25T09:40:17.582862304Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0376dca82a151dba64ed0b4492d714c7ebc6825e0138daded841bdb43996ab9e",
                    "sha256:d1ebf0a8b65281fbaac5f61a75ba9179c66ceb134610fd069e071357b61e531f",
                    "sha256:6532a6eb4787b26dd63f27fa3b33349c06774803b6f5f006701b9093b3183351",
                    "sha256:ab5180a942db0a82a751476b2480ee156ccd89448e7122a9b1c2f22570b0e5be",
                    "sha256:7549c99225316a074f3dbb71b6817f656c5e26aa61a42f525fabcc14a04dad0d",
                    "sha256:c248a95e965707a4ed0ec81d4d652f5460325e178bf7290c0a5efa2e610e0999"
                ]
            }
        },
        "1.10-alpine3.8": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7bc463c6d78588584d7ba9aabcef3e979f0d4e3ee881640923bd483c36345461",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "eaf587a4dd07501732a270856a8f5cea6c296bd682b090d6badb7a7b4c81a036",
            "container_config": {
                "Hostname": "eaf587a4dd07",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7bc463c6d78588584d7ba9aabcef3e979f0d4e3ee881640923bd483c36345461",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-01-25T09:37:41.739914045Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2018-12-21T09:43:06.705630029Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:79419748674899ac7d5d699fe62f837c69d04af3ceaabbb7951c35c2f0ff46fa in / "
                },
                {
                    "created": "2018-12-21T09:43:07.198401212Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a10c133d8d5e9af3a9a1610709d3ed2f85b1507f1ba5745ac12bb495974e3fe6 in /etc/localtime "
                },
                {
                    "created": "2018-12-21T09:43:07.722553865Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T10:00:50.393353587Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-12-21T10:00:52.818317624Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-01-25T09:35:04.417310645Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.8",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-25T09:37:35.915520802Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '6faf74046b5e24c2c0b46e78571cca4d65e1b89819da1089e53ea57539c63491 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-01-25T09:37:37.135040761Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-25T09:37:38.069653839Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-25T09:37:40.826787303Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-01-25T09:37:41.739914045Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:92d7b4d0b33cc1213ee394fabb26922447135080a3b7bd326e5bb7453e06be32",
                    "sha256:82fe62b38ba2a9028a57bee2d8e1b855733943e5491ad946e37e406208ff6e8b",
                    "sha256:0db26aa2ab49f54f8b357b9d4f8188543a065211dac4752eb7d9b65da88a52cf",
                    "sha256:6897c234601851e40044ce7b1194fc52052891863645562058c775deb9dc1342",
                    "sha256:fd82a7ec0470c743aefa9d8667e0ec7931b9436733e8c4a7180d9f8885345dcf",
                    "sha256:143c5d053ea6550963e6f6ef103fdb5507cf8ca5f4ae7aac2a6812784b771716"
                ]
            }
        },
        "1.10-alpine3.9": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:66349372a0fdab62025ce81cf2a7156e84b8e7825b1d4409195724ed2c98fc3c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "aa890d627882def6f62f44af396e0f81d9411e688515542e024d0884880f56d1",
            "container_config": {
                "Hostname": "aa890d627882",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:66349372a0fdab62025ce81cf2a7156e84b8e7825b1d4409195724ed2c98fc3c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-02-06T10:49:24.171832067Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-01-31T09:40:55.59464559Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3c5f57c6644886bbb8164b9aa4cd60e233be7da48b7194a04963a8e7de058e28 in / "
                },
                {
                    "created": "2019-01-31T09:40:56.373934366Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a10c133d8d5e9af3a9a1610709d3ed2f85b1507f1ba5745ac12bb495974e3fe6 in /etc/localtime "
                },
                {
                    "created": "2019-01-31T09:40:57.414211885Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T10:35:48.859028851Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-02-06T10:35:53.718651346Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-02-06T10:45:47.043189513Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.8",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T10:49:08.389648675Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '6faf74046b5e24c2c0b46e78571cca4d65e1b89819da1089e53ea57539c63491 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-02-06T10:49:12.480361472Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T10:49:14.162810255Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T10:49:22.094740632Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-02-06T10:49:24.171832067Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b62d6d9a5cefd54dd8025cbfc842db54bbbc2268be8d05125c05ef82228da652",
                    "sha256:f8acf74b099c772d9f05156f67bc53953983b4f4edd19881dc2b138d1cfdb5dc",
                    "sha256:9079a9ec4fad7a526523322dad8473070caa3506e0da3d1de6796e849e7b2700",
                    "sha256:55321bf93b5623e0f3cfeb273381e036e21b0cf1873712feb570c153950a88a5",
                    "sha256:ea74a2813ebc4a2c6497e2cf3979ca7908272846b153706dc420a3a9b7106198",
                    "sha256:a98aebf83b10aa026b35b8b9b3130470e99a3ad6e90e30d7d3648339a70703d0"
                ]
            }
        },
        "1.10-rc-alpine": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3c427675c04a75f1343ca26d26be47bd10f389a8917272054c534093e9472782",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "2a934b26f47f861c608a6dfba4708d19de623b0bd166ef529eb0cfefc6cd000f",
            "container_config": {
                "Hostname": "2a934b26f47f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3c427675c04a75f1343ca26d26be47bd10f389a8917272054c534093e9472782",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-02-08T20:57:53.393746326Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2017-12-01T18:42:42.17629931Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a6ef3cbbb1c0e5dfc6c3e41d70fd93e548594d9cb42c067e52df46d418c10a79 in / "
                },
                {
                    "created": "2017-12-01T18:42:42.958900633Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2017-12-01T18:42:43.535835924Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-08T20:56:00.152334049Z",
                    "created_by": "/bin/sh -c apk add --no-cache ca-certificates"
                },
                {
                    "created": "2018-02-08T20:55:26.463050796Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10rc2",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-08T20:55:27.092408772Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:05dc434ec17d0f39e5733c78e8250d0f8fb6dddc1c65ff8d43a8a82f38272d32 in /go-alpine-patches/ "
                },
                {
                    "created": "2018-02-08T20:57:49.517076142Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '360bb3e627cd5308626ebe994be734da9c1c444fb420d10e79082ec110d004f6 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf /go-alpine-patches; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-02-08T20:57:50.823398328Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-08T20:57:51.390551Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-08T20:57:52.86127616Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-02-08T20:57:53.393746326Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:58477411d6070ff18d58000c0453ecb014b688000a033b2c881d393eabe81d8c",
                    "sha256:05f52530ca7ba1de0fc93f4d43c9dabc47e18efdf1b886e4d7e533c72b46d443",
                    "sha256:8a096f9852f022c0412024449ae712315cb8ca475d9ce774399e4c6a980d4f7f",
                    "sha256:8ca595d551e2ca20dfe8abea8e048fe05d4d5f48492df3a0a3375baa7c079e67",
                    "sha256:fe119502e4177f72e6a514fccb7e80824a227a8fc648b37f2a24ce14f414d439",
                    "sha256:3eb72f5f0427976eadcaf3e0ef2894d1d9ed96af0564e65b11c2f5959ffa7493"
                ]
            }
        },
        "1.10-rc-alpine3.7": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3c427675c04a75f1343ca26d26be47bd10f389a8917272054c534093e9472782",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "2a934b26f47f861c608a6dfba4708d19de623b0bd166ef529eb0cfefc6cd000f",
            "container_config": {
                "Hostname": "2a934b26f47f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3c427675c04a75f1343ca26d26be47bd10f389a8917272054c534093e9472782",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-02-08T20:57:53.393746326Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2017-12-01T18:42:42.17629931Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a6ef3cbbb1c0e5dfc6c3e41d70fd93e548594d9cb42c067e52df46d418c10a79 in / "
                },
                {
                    "created": "2017-12-01T18:42:42.958900633Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2017-12-01T18:42:43.535835924Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-08T20:56:00.152334049Z",
                    "created_by": "/bin/sh -c apk add --no-cache ca-certificates"
                },
                {
                    "created": "2018-02-08T20:55:26.463050796Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10rc2",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-08T20:55:27.092408772Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:05dc434ec17d0f39e5733c78e8250d0f8fb6dddc1c65ff8d43a8a82f38272d32 in /go-alpine-patches/ "
                },
                {
                    "created": "2018-02-08T20:57:49.517076142Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '360bb3e627cd5308626ebe994be734da9c1c444fb420d10e79082ec110d004f6 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf /go-alpine-patches; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-02-08T20:57:50.823398328Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-08T20:57:51.390551Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-08T20:57:52.86127616Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-02-08T20:57:53.393746326Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:58477411d6070ff18d58000c0453ecb014b688000a033b2c881d393eabe81d8c",
                    "sha256:05f52530ca7ba1de0fc93f4d43c9dabc47e18efdf1b886e4d7e533c72b46d443",
                    "sha256:8a096f9852f022c0412024449ae712315cb8ca475d9ce774399e4c6a980d4f7f",
                    "sha256:8ca595d551e2ca20dfe8abea8e048fe05d4d5f48492df3a0a3375baa7c079e67",
                    "sha256:fe119502e4177f72e6a514fccb7e80824a227a8fc648b37f2a24ce14f414d439",
                    "sha256:3eb72f5f0427976eadcaf3e0ef2894d1d9ed96af0564e65b11c2f5959ffa7493"
                ]
            }
        },
        "1.10-rc-stretch": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:eb90a921232e7a436479e83212b09835ea72aeef680a29cf6e66dffbdd435df1",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "e3cf216fbdcd0173c7b8e7a91d94b3320be9e26a72dd844e145a345820b8d725",
            "container_config": {
                "Hostname": "e3cf216fbdcd",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:eb90a921232e7a436479e83212b09835ea72aeef680a29cf6e66dffbdd435df1",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-02-16T05:35:53.04073377Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-02-15T18:29:04.419292985Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f17659d511330c9a9c3fadf05151f88e9d532af1734ffadd1da10aa5e2aeb6ac in / "
                },
                {
                    "created": "2018-02-15T18:29:05.327820659Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-15T19:49:33.38177432Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-02-15T19:49:57.081817385Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-02-15T19:51:28.989092693Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-02-16T05:35:27.499078725Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-02-16T05:35:28.494682895Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10rc2",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-16T05:35:48.848087737Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='6a6a4c0654bc603bcfee4d6ac34a479c260ac61b3edcc8d6773384eb0bda512e' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='aa145c2a9736cbcb39b9340182c319f7fc0ab3d0f2156d7dfd722572f4da519b' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='dfa7fbe299b3766b94fb4bc231db4330b9860c44a57274f6a0d418bf00eccbc8' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='18832b97cdc2f21783ac60fc0136f25c19d39b7cc43459f5114dd62c0a212fe4' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='21a6e64c83df9f124993901dda2ec608640e97a13f50cf5a58f518651b576fd8' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='7d3aa6ec3a761b328e093b51ca14dbb8a8000685bb8957dbab44b4bb3b1d76e7' ;; \t\t*) goRelArch='src'; goRelSha256='360bb3e627cd5308626ebe994be734da9c1c444fb420d10e79082ec110d004f6'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-02-16T05:35:49.962675564Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-16T05:35:50.945997294Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-16T05:35:52.481945257Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-02-16T05:35:53.04073377Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:33a219683f24f66dc0fd0f2ca4051a4424753bda47ce5e7373c61c3154279217",
                    "sha256:e752cc5b8e27d5f2fb3e2acde17e9c56ff59155b3bbb74be35315c8e56811c3f",
                    "sha256:cc4ea6ab1561cef004e1e0632b1dcb761ac33732dc16f0cb19261bdb0c2d734b",
                    "sha256:51e4dd9ea6ce38724745e667d7109ad24affeb789eeffe5c05e8b2830dfce0da",
                    "sha256:fa3b61d217536928a0218986253b7470c48413c3a52cc64e112c7aa37bbadf4a",
                    "sha256:ca7869604518718435f53809d3b8d84ffb15300abe9c96facfb890a0f1133788",
                    "sha256:1b7389ff969949eb77c692480bb9bd2fa77e2fb8b544b9171f101f7fcb9b5772"
                ]
            }
        },
        "1.10-stretch": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:10f635ddec634de743c55be8383847279f433e4f00d60ee51ec8eccd267f7bbd",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "e1df96d50e669f0e3add9f43de91fe83d4b02987ae5fa2dacdbe66d1a1601f92",
            "container_config": {
                "Hostname": "e1df96d50e66",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:10f635ddec634de743c55be8383847279f433e4f00d60ee51ec8eccd267f7bbd",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-02-06T10:45:29.630550082Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-02-06T10:08:56.448426246Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4c7b5bcb5c347fb36236917e364936a9762b8bd6e8585c33379120f01c3a8d85 in / "
                },
                {
                    "created": "2019-02-06T10:08:58.411455795Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T10:37:59.282799901Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-02-06T10:38:20.923306295Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-02-06T10:39:59.470164799Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-02-06T10:44:54.502187336Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-02-06T10:44:55.795981876Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.8",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T10:45:17.680116162Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='d8626fb6f9a3ab397d88c483b576be41fa81eefcec2fd18562c87626dbb3c39e' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='6fdbc67524fc4c15fc87014869dddce9ecda7958b78f3cb1bbc5b0a9b61bfb95' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='0921a76e78022ec2ae217e85b04940e2e9912b4c3218d96a827deedb9abe1c7b' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='10202da0b7f2a0f2c2ec4dd65375584dd829ce88ccc58e5fe1fa1352e69fecaf' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='9054bcc7582ebb8a69ca43447a38e4b9ea11d08f05511cc7f13720e3a12ff299' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='6f71b189c6cf30f7736af21265e992990cb0374138b7a70b0880cf8579399a69' ;; \t\t*) goRelArch='src'; goRelSha256='6faf74046b5e24c2c0b46e78571cca4d65e1b89819da1089e53ea57539c63491'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-02-06T10:45:19.220580468Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T10:45:20.46840379Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T10:45:28.085239416Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-02-06T10:45:29.630550082Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3b1e812def9423169cf856a2785cf1c647d0b14e257f1d97d001f2eea597c8a9",
                    "sha256:944b169fa0fecd2d4b3b5dad05f280d7a9179485fe8c1839737c690e87fbc67b",
                    "sha256:692a708e68fbe95e5c9d80b2a5a3287fe3670dfcd31108ecf3621b4e758f3d4b",
                    "sha256:fbb13e302c5c808925f2c1f9c41c4cefeac1888499f44965cc340cc8c473b660",
                    "sha256:0cadb6f6c5d6ee70b9971ea95007e8da709427c29d8565ac23c12b8ed016dd3e",
                    "sha256:ab8d7ee937a7c49e6ec3a3f8e1374ee5fa4cbfecae6631a24f0634a1b5ea8534",
                    "sha256:cb3a76e15f43a7f88833689680c0210bc1890b79638ea3170cb4f57f0f48fc8c"
                ]
            }
        },
        "1.10.0-alpine": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:126eb3c62e02875635eac88c2df4158a03cb6f2071748156780baa21daf376b6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "88118502aa201b5d1dda54fbfb25e379879742df53305e2b08bc88cdd099a651",
            "container_config": {
                "Hostname": "88118502aa20",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:126eb3c62e02875635eac88c2df4158a03cb6f2071748156780baa21daf376b6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-02-17T20:57:28.242241988Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2017-12-01T18:42:42.17629931Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a6ef3cbbb1c0e5dfc6c3e41d70fd93e548594d9cb42c067e52df46d418c10a79 in / "
                },
                {
                    "created": "2017-12-01T18:42:42.958900633Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2017-12-01T18:42:43.535835924Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-08T20:56:00.152334049Z",
                    "created_by": "/bin/sh -c apk add --no-cache ca-certificates"
                },
                {
                    "created": "2018-02-17T20:54:55.630090239Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-17T20:54:56.215544278Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:05dc434ec17d0f39e5733c78e8250d0f8fb6dddc1c65ff8d43a8a82f38272d32 in /go-alpine-patches/ "
                },
                {
                    "created": "2018-02-17T20:57:21.058456124Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'f3de49289405fda5fd1483a8fe6bd2fa5469e005fd567df64485c4fa000c7f24 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf /go-alpine-patches; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-02-17T20:57:22.317803712Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-17T20:57:22.887941311Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-17T20:57:27.699151919Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-02-17T20:57:28.242241988Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:58477411d6070ff18d58000c0453ecb014b688000a033b2c881d393eabe81d8c",
                    "sha256:05f52530ca7ba1de0fc93f4d43c9dabc47e18efdf1b886e4d7e533c72b46d443",
                    "sha256:8a096f9852f022c0412024449ae712315cb8ca475d9ce774399e4c6a980d4f7f",
                    "sha256:b250b9322cd3165a651899d648389368eb6f02413d1abea2491ae06e65e63cb0",
                    "sha256:8c98ebc18ebfc0068dd168f0bbe12eff0cff9a8bc250c7860d0144f5d73106d1",
                    "sha256:5871dc1b9d0d9a035bcce516265e4fdcaebda7a787d316833b4aec18fc851c37"
                ]
            }
        },
        "1.10.0-alpine3.7": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:126eb3c62e02875635eac88c2df4158a03cb6f2071748156780baa21daf376b6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "88118502aa201b5d1dda54fbfb25e379879742df53305e2b08bc88cdd099a651",
            "container_config": {
                "Hostname": "88118502aa20",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:126eb3c62e02875635eac88c2df4158a03cb6f2071748156780baa21daf376b6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-02-17T20:57:28.242241988Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2017-12-01T18:42:42.17629931Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a6ef3cbbb1c0e5dfc6c3e41d70fd93e548594d9cb42c067e52df46d418c10a79 in / "
                },
                {
                    "created": "2017-12-01T18:42:42.958900633Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2017-12-01T18:42:43.535835924Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-08T20:56:00.152334049Z",
                    "created_by": "/bin/sh -c apk add --no-cache ca-certificates"
                },
                {
                    "created": "2018-02-17T20:54:55.630090239Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-17T20:54:56.215544278Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:05dc434ec17d0f39e5733c78e8250d0f8fb6dddc1c65ff8d43a8a82f38272d32 in /go-alpine-patches/ "
                },
                {
                    "created": "2018-02-17T20:57:21.058456124Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'f3de49289405fda5fd1483a8fe6bd2fa5469e005fd567df64485c4fa000c7f24 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf /go-alpine-patches; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-02-17T20:57:22.317803712Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-17T20:57:22.887941311Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-17T20:57:27.699151919Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-02-17T20:57:28.242241988Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:58477411d6070ff18d58000c0453ecb014b688000a033b2c881d393eabe81d8c",
                    "sha256:05f52530ca7ba1de0fc93f4d43c9dabc47e18efdf1b886e4d7e533c72b46d443",
                    "sha256:8a096f9852f022c0412024449ae712315cb8ca475d9ce774399e4c6a980d4f7f",
                    "sha256:b250b9322cd3165a651899d648389368eb6f02413d1abea2491ae06e65e63cb0",
                    "sha256:8c98ebc18ebfc0068dd168f0bbe12eff0cff9a8bc250c7860d0144f5d73106d1",
                    "sha256:5871dc1b9d0d9a035bcce516265e4fdcaebda7a787d316833b4aec18fc851c37"
                ]
            }
        },
        "1.10.0-stretch": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:57b4d673ff02f98d153fd6048e8ee7e8281f7c36684101d0970f8b2ace72b16f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "3714fadf3d30bc4db07c1b504efbf45a973fac73ff408618a3f95cde15917929",
            "container_config": {
                "Hostname": "3714fadf3d30",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:57b4d673ff02f98d153fd6048e8ee7e8281f7c36684101d0970f8b2ace72b16f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-03-15T05:14:22.634551766Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-03-14T17:30:57.243609723Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2ebfda145008a73d7d0f2dc29946bfc3ad65048b3a3f0ca0283263e413b692d4 in / "
                },
                {
                    "created": "2018-03-14T17:30:58.137283602Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-03-14T18:46:35.882688167Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-03-14T18:46:51.751471197Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-03-14T18:48:21.420265948Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-03-15T05:13:36.96550776Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-03-15T05:13:38.399773018Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10",
                    "empty_layer": true
                },
                {
                    "created": "2018-03-15T05:14:14.907755911Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='b5a64335f1490277b585832d1f6c7f8c6c11206cba5cd3f771dcb87b98ad1a33' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='6ff665a9ab61240cf9f11a07e03e6819e452a618a32ea05bbb2c80182f838f4f' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='efb47e5c0e020b180291379ab625c6ec1c2e9e9b289336bc7169e6aa1da43fd8' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='2d26a9f41fd80eeb445cc454c2ba6b3d0db2fc732c53d7d0427a9f605bfc55a1' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='a1e22e2fbcb3e551e0bf59d0f8aeb4b3f2df86714f09d2acd260c6597c43beee' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='71cde197e50afe17f097f81153edb450f880267699f22453272d184e0f4681d7' ;; \t\t*) goRelArch='src'; goRelSha256='f3de49289405fda5fd1483a8fe6bd2fa5469e005fd567df64485c4fa000c7f24'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-03-15T05:14:17.002849636Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-03-15T05:14:18.024136009Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-03-15T05:14:21.433187945Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-03-15T05:14:22.634551766Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f686bc9453d4458bbcc75fa65e7204871933c5d16aa3d2c544437721911c21a3",
                    "sha256:c1e930ebaeae84b036f6de2dbec251326908df99dec4e366c500d0cddaf417b2",
                    "sha256:af479ad32fc4bbabe11ccdce7857cba0424acb37fe1604540780f3c4f46db74b",
                    "sha256:e53a1e4d2de0ecbf6f6ca74d8d0a22ca1f7f0db7f1f32b0a42139b3fef8837af",
                    "sha256:c51853a628427aa29bad1c153b6c383f02efd53e1d60c8bfb4ead99a7205d4e9",
                    "sha256:4d7610722a6739def0e6250ab8473e454dfc9fb83e0af7624168f80c9b97a66c",
                    "sha256:efb63b4184741e77e06a527e88a3e14c6bcc7d2762d867caf0dd1fe23168d0c0"
                ]
            }
        },
        "1.10.1-alpine": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d5e6ed26db4aa0d43720bea3145d46f4af43168aecc014cf071655768db5d010",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "d1eed615564896457dfd993ea1323a3fda029a0c91075c7f268cfe744b461579",
            "container_config": {
                "Hostname": "d1eed6155648",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d5e6ed26db4aa0d43720bea3145d46f4af43168aecc014cf071655768db5d010",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-04-12T08:56:06.136043343Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2017-12-01T18:42:42.17629931Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a6ef3cbbb1c0e5dfc6c3e41d70fd93e548594d9cb42c067e52df46d418c10a79 in / "
                },
                {
                    "created": "2017-12-01T18:42:42.958900633Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2017-12-01T18:42:43.535835924Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-08T20:56:00.152334049Z",
                    "created_by": "/bin/sh -c apk add --no-cache ca-certificates"
                },
                {
                    "created": "2018-04-02T16:39:43.662532541Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.1",
                    "empty_layer": true
                },
                {
                    "created": "2018-04-12T08:55:48.498022686Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '589449ff6c3ccbff1d391d4e7ab5bb5d5643a5a41a04c99315e55c16bbf73ddc *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf /go-alpine-patches; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-04-12T08:56:02.199601832Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-04-12T08:56:03.151384503Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-04-12T08:56:05.143173577Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-04-12T08:56:06.136043343Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:58477411d6070ff18d58000c0453ecb014b688000a033b2c881d393eabe81d8c",
                    "sha256:05f52530ca7ba1de0fc93f4d43c9dabc47e18efdf1b886e4d7e533c72b46d443",
                    "sha256:8a096f9852f022c0412024449ae712315cb8ca475d9ce774399e4c6a980d4f7f",
                    "sha256:74acea965c44d9332647e8269d34d47ba5fd2fd0e64c6ed4cc027f3afee8cd40",
                    "sha256:a51eef303227f01e9f24c4ea07ef8a347cc10fb05487621483abfa21fd3eab30"
                ]
            }
        },
        "1.10.1-alpine3.7": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d5e6ed26db4aa0d43720bea3145d46f4af43168aecc014cf071655768db5d010",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "d1eed615564896457dfd993ea1323a3fda029a0c91075c7f268cfe744b461579",
            "container_config": {
                "Hostname": "d1eed6155648",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d5e6ed26db4aa0d43720bea3145d46f4af43168aecc014cf071655768db5d010",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-04-12T08:56:06.136043343Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2017-12-01T18:42:42.17629931Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a6ef3cbbb1c0e5dfc6c3e41d70fd93e548594d9cb42c067e52df46d418c10a79 in / "
                },
                {
                    "created": "2017-12-01T18:42:42.958900633Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2017-12-01T18:42:43.535835924Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-08T20:56:00.152334049Z",
                    "created_by": "/bin/sh -c apk add --no-cache ca-certificates"
                },
                {
                    "created": "2018-04-02T16:39:43.662532541Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.1",
                    "empty_layer": true
                },
                {
                    "created": "2018-04-12T08:55:48.498022686Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '589449ff6c3ccbff1d391d4e7ab5bb5d5643a5a41a04c99315e55c16bbf73ddc *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf /go-alpine-patches; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-04-12T08:56:02.199601832Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-04-12T08:56:03.151384503Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-04-12T08:56:05.143173577Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-04-12T08:56:06.136043343Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:58477411d6070ff18d58000c0453ecb014b688000a033b2c881d393eabe81d8c",
                    "sha256:05f52530ca7ba1de0fc93f4d43c9dabc47e18efdf1b886e4d7e533c72b46d443",
                    "sha256:8a096f9852f022c0412024449ae712315cb8ca475d9ce774399e4c6a980d4f7f",
                    "sha256:74acea965c44d9332647e8269d34d47ba5fd2fd0e64c6ed4cc027f3afee8cd40",
                    "sha256:a51eef303227f01e9f24c4ea07ef8a347cc10fb05487621483abfa21fd3eab30"
                ]
            }
        },
        "1.10.1-stretch": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3d1723a38013bf3508bd584cd311e57fe7eea621ed76d26b1d03af99137281e8",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "41a827ec364ca4375b512576ac7fd9551bf20002c393b262f5a71e776b612b1f",
            "container_config": {
                "Hostname": "41a827ec364c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3d1723a38013bf3508bd584cd311e57fe7eea621ed76d26b1d03af99137281e8",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-05-01T21:00:35.523520944Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-04-30T23:31:58.733791849Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:245a8cfe59ea071e4e215a722e0d4b4b14fa95dd6ffd03739fe048433cfaf523 in / "
                },
                {
                    "created": "2018-04-30T23:32:00.765486148Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-05-01T08:07:41.548719603Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-05-01T08:08:02.995532998Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-05-01T08:10:07.27076435Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-05-01T21:00:10.269848853Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-05-01T21:00:11.191435727Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.1",
                    "empty_layer": true
                },
                {
                    "created": "2018-05-01T21:00:31.233219159Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='72d820dec546752e5a8303b33b009079c15c2390ce76d67cf514991646c6127b' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='feca4e920d5ca25001dc0823390df79bc7ea5b5b8c03483e5a2c54f164654936' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='1e07a159414b5090d31166d1a06ee501762076ef21140dcd54cdcbe4e68a9c9b' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='acbe19d56123549faf747b4f61b730008b185a0e2145d220527d2383627dfe69' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='91d0026bbed601c4aad332473ed02f9a460b31437cbc6f2a37a88c0376fc3a65' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='e211a5abdacf843e16ac33a309d554403beb63959f96f9db70051f303035434b' ;; \t\t*) goRelArch='src'; goRelSha256='589449ff6c3ccbff1d391d4e7ab5bb5d5643a5a41a04c99315e55c16bbf73ddc'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-05-01T21:00:32.548642743Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-05-01T21:00:33.207725276Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-05-01T21:00:34.874325864Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-05-01T21:00:35.523520944Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:90a68d9843ec0a05b8cbc896510d2598cfde24b0c92d9c34cc54519ac4b2e0fe",
                    "sha256:6bdbee1ec7c0fafe980706c25a1f203b11d82a455f332a78fc8f2fc54ee356cf",
                    "sha256:dfdcc6012759f292602e7c3d7863c153c2f992d9e12dd64c47dfd9912e2c354c",
                    "sha256:f713139c9715a0502b06918fc6c8164456c32dea52a6f22c263c790ae650279d",
                    "sha256:913e099b23cc9590696a7e2ec1e514de27e8cf8c44b75aaacb2d5eb1115a7fd8",
                    "sha256:f55e04eadd1b8c22ee331d7235f1e08ad743fd22bc3a64b4166c5ee0a9e57b95",
                    "sha256:0785586406e7808c125601fa75fee3c68708805d9d2707f7e507238d83d3d1b9"
                ]
            }
        },
        "1.10.2-alpine": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d16d1401d628c145d2a590af9cf12bd32250c4e98352f1a270c43d185370a06d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "63ee2dcae0c4f741f0bf913349c6966d87485f590a206468360392abfec0e738",
            "container_config": {
                "Hostname": "63ee2dcae0c4",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d16d1401d628c145d2a590af9cf12bd32250c4e98352f1a270c43d185370a06d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-05-04T08:43:01.876921767Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2017-12-01T18:42:42.17629931Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a6ef3cbbb1c0e5dfc6c3e41d70fd93e548594d9cb42c067e52df46d418c10a79 in / "
                },
                {
                    "created": "2017-12-01T18:42:42.958900633Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2017-12-01T18:42:43.535835924Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-28T07:00:41.641030657Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2017-12-28T07:00:43.273265682Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-05-04T08:40:23.029091342Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.2",
                    "empty_layer": true
                },
                {
                    "created": "2018-05-04T08:42:51.158006042Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '6264609c6b9cd8ed8e02ca84605d727ce1898d74efa79841660b2e3e985a98bd *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf /go-alpine-patches; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-05-04T08:42:56.600207295Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-05-04T08:42:57.251440252Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-05-04T08:42:59.004362065Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-05-04T08:43:01.876921767Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:58477411d6070ff18d58000c0453ecb014b688000a033b2c881d393eabe81d8c",
                    "sha256:05f52530ca7ba1de0fc93f4d43c9dabc47e18efdf1b886e4d7e533c72b46d443",
                    "sha256:629a3191dada1a2e74de36174ddfd8fe56670e4538b5d0e5419286736609a13e",
                    "sha256:a8406382f5f096df763032c41e2b49ea3a53d52a786a372ecc0529a2de6a1b50",
                    "sha256:d11a92457bc6ad1ec5c854c00bd7b312444e101f1a9729f3d00522f932929d29",
                    "sha256:d37a9bbfda3dd7942cb6899d5e73b05b5036022f6d6cb43fbc8b6f53de65dd17"
                ]
            }
        },
        "1.10.2-alpine3.7": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d16d1401d628c145d2a590af9cf12bd32250c4e98352f1a270c43d185370a06d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "63ee2dcae0c4f741f0bf913349c6966d87485f590a206468360392abfec0e738",
            "container_config": {
                "Hostname": "63ee2dcae0c4",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d16d1401d628c145d2a590af9cf12bd32250c4e98352f1a270c43d185370a06d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-05-04T08:43:01.876921767Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2017-12-01T18:42:42.17629931Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a6ef3cbbb1c0e5dfc6c3e41d70fd93e548594d9cb42c067e52df46d418c10a79 in / "
                },
                {
                    "created": "2017-12-01T18:42:42.958900633Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2017-12-01T18:42:43.535835924Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-28T07:00:41.641030657Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2017-12-28T07:00:43.273265682Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-05-04T08:40:23.029091342Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.2",
                    "empty_layer": true
                },
                {
                    "created": "2018-05-04T08:42:51.158006042Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '6264609c6b9cd8ed8e02ca84605d727ce1898d74efa79841660b2e3e985a98bd *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf /go-alpine-patches; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-05-04T08:42:56.600207295Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-05-04T08:42:57.251440252Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-05-04T08:42:59.004362065Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-05-04T08:43:01.876921767Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:58477411d6070ff18d58000c0453ecb014b688000a033b2c881d393eabe81d8c",
                    "sha256:05f52530ca7ba1de0fc93f4d43c9dabc47e18efdf1b886e4d7e533c72b46d443",
                    "sha256:629a3191dada1a2e74de36174ddfd8fe56670e4538b5d0e5419286736609a13e",
                    "sha256:a8406382f5f096df763032c41e2b49ea3a53d52a786a372ecc0529a2de6a1b50",
                    "sha256:d11a92457bc6ad1ec5c854c00bd7b312444e101f1a9729f3d00522f932929d29",
                    "sha256:d37a9bbfda3dd7942cb6899d5e73b05b5036022f6d6cb43fbc8b6f53de65dd17"
                ]
            }
        },
        "1.10.2-stretch": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b2dbc9b28a747d3c5b79e91e1b04ccfa5864d15e8c9ce3490eebcf65209faf1a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "559821e4cef0f17400d397f0e1638e06d6144143c5d4d65befb3f42af017e307",
            "container_config": {
                "Hostname": "559821e4cef0",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b2dbc9b28a747d3c5b79e91e1b04ccfa5864d15e8c9ce3490eebcf65209faf1a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-05-05T20:46:50.788435583Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-04-30T23:31:58.733791849Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:245a8cfe59ea071e4e215a722e0d4b4b14fa95dd6ffd03739fe048433cfaf523 in / "
                },
                {
                    "created": "2018-04-30T23:32:00.765486148Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-05-05T09:38:42.782443129Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-05-05T09:39:04.612008503Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-05-05T09:40:27.420394756Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-05-05T20:46:14.518593182Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-05-05T20:46:15.817310796Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.2",
                    "empty_layer": true
                },
                {
                    "created": "2018-05-05T20:46:43.994953432Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='4b677d698c65370afa33757b6954ade60347aaca310ea92a63ed717d7cb0c2ff' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='529a16b531d4561572db6ba9d357215b58a1953437a63e76dc0c597be9e25dd2' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='d6af66c71b12d63c754d5bf49c3007dc1c9821eb1a945118bfd5a539a327c4c8' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='ea4caddf76b86ed5d101a61bc9a273be5b24d81f0567270bb4d5beaaded9b567' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='f0748502c90e9784b6368937f1d157913d18acdae72ac75add50e5c0c9efc85c' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='2266b7ebdbca13c21a1f6039c9f6887cd2c01617d1e2716ff4595307a0da1d46' ;; \t\t*) goRelArch='src'; goRelSha256='6264609c6b9cd8ed8e02ca84605d727ce1898d74efa79841660b2e3e985a98bd'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-05-05T20:46:45.693301266Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-05-05T20:46:46.631876856Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-05-05T20:46:49.761642475Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-05-05T20:46:50.788435583Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:90a68d9843ec0a05b8cbc896510d2598cfde24b0c92d9c34cc54519ac4b2e0fe",
                    "sha256:a45edd5b664c04553509db224f67958ded59533026ae1503645a5c4d8b6f4cee",
                    "sha256:9b33964473eee659282a84cd6bd380b24a346bf4d9c80aee84d6f818c88105fc",
                    "sha256:64a96bf4d33c9be616bd390a3b2f75da877abdaf9960cfb75516140cfcda13eb",
                    "sha256:c0be4e588229aaf237c8a657d69392f29e2534d15cf10355fc34294c2a7cf785",
                    "sha256:37f288fea101b38587bfc76be71a8e29ca99dfd4a029ecbaafa54cc5eb7e8efb",
                    "sha256:3dc27bb1b74f2f116fae13b434bf005729f7a4d4d0a19e909d782f95fa9fd7d9"
                ]
            }
        },
        "1.10.3-alpine": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c168c14b48f3ba0fd7576ee305da586f101bb447798ab936f997b2513552b0fe",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "822043c87bd52a22b7d5d35781f9d24083bcd521db401c4b3f99af9cf3bc0315",
            "container_config": {
                "Hostname": "822043c87bd5",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c168c14b48f3ba0fd7576ee305da586f101bb447798ab936f997b2513552b0fe",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-08-23T09:11:55.985988881Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-06T08:41:03.043896054Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:199a5a48bddabaf1f649f58f3b17c323a1aa1a50e939dfdea3542e4041e91b7b in / "
                },
                {
                    "created": "2018-07-06T08:41:03.994573726Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2018-07-06T08:41:04.672265132Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-13T08:41:59.008156316Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-07-13T08:42:00.758228253Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-07-13T08:46:02.894172211Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.3",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-23T09:11:50.57875215Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '567b1cc66c9704d1c019c50bef946272e911ec6baf244310f87f4e678be155f2 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf \t\t/go-alpine-patches \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-08-23T09:11:52.056107591Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-23T09:11:52.955033214Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-23T09:11:55.141874881Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-08-23T09:11:55.985988881Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd0a9a09f5aaebcb67aa6d173252640c31eecded3c0aee8bcf89b9f307fad7d2",
                    "sha256:b43ad2345ba516d8bf2087e0906db76bdb5fbd45c1e9e314afd0c3a8e9f13ea2",
                    "sha256:23510302cbd3bbd8afeeb07264fc540619e3f48d3ab6cc4c4d72e48a1f219cc0",
                    "sha256:5f136df344f25339e7ce78dbaa7371742167fd1a857cfdd33b2fa59a431e182e",
                    "sha256:7fde40c2bd03b62db5e5da3c66d2f1deb3532502dc31f6e3d0a11ebd6ced4306",
                    "sha256:b280390b6b91d6ad460e67c00e2856a9340514db320a87f687739d7dd445ef24"
                ]
            }
        },
        "1.10.3-alpine3.7": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9f5e42a7ec2de2e508d132fa5ff043d9ee8ddeaf88139be3cde51c9c74888359",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "c26f4ab435db40428da33b398d36712d3fc90fc1642a083b9b781c380f9f5e2f",
            "container_config": {
                "Hostname": "c26f4ab435db",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9f5e42a7ec2de2e508d132fa5ff043d9ee8ddeaf88139be3cde51c9c74888359",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-08-23T09:15:02.589475903Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2017-12-01T18:42:42.17629931Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a6ef3cbbb1c0e5dfc6c3e41d70fd93e548594d9cb42c067e52df46d418c10a79 in / "
                },
                {
                    "created": "2017-12-01T18:42:42.958900633Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2017-12-01T18:42:43.535835924Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-28T07:00:41.641030657Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2017-12-28T07:00:43.273265682Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-06-09T08:40:45.187093211Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.3",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-23T09:14:45.273422755Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '567b1cc66c9704d1c019c50bef946272e911ec6baf244310f87f4e678be155f2 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf \t\t/go-alpine-patches \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-08-23T09:14:59.005399649Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-23T09:14:59.747940496Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-23T09:15:01.636823709Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-08-23T09:15:02.589475903Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:58477411d6070ff18d58000c0453ecb014b688000a033b2c881d393eabe81d8c",
                    "sha256:05f52530ca7ba1de0fc93f4d43c9dabc47e18efdf1b886e4d7e533c72b46d443",
                    "sha256:629a3191dada1a2e74de36174ddfd8fe56670e4538b5d0e5419286736609a13e",
                    "sha256:a8406382f5f096df763032c41e2b49ea3a53d52a786a372ecc0529a2de6a1b50",
                    "sha256:6d09ace1305ac5f285a57386b9daf6a4ccad887c73257f06384f9a83d069ba5e",
                    "sha256:c9163238ddbb61ce9f7177ce8cc3bbedadc5b4f6fb2fcb94855751954457bc59"
                ]
            }
        },
        "1.10.3-alpine3.8": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c168c14b48f3ba0fd7576ee305da586f101bb447798ab936f997b2513552b0fe",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "822043c87bd52a22b7d5d35781f9d24083bcd521db401c4b3f99af9cf3bc0315",
            "container_config": {
                "Hostname": "822043c87bd5",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c168c14b48f3ba0fd7576ee305da586f101bb447798ab936f997b2513552b0fe",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-08-23T09:11:55.985988881Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-06T08:41:03.043896054Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:199a5a48bddabaf1f649f58f3b17c323a1aa1a50e939dfdea3542e4041e91b7b in / "
                },
                {
                    "created": "2018-07-06T08:41:03.994573726Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2018-07-06T08:41:04.672265132Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-13T08:41:59.008156316Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-07-13T08:42:00.758228253Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-07-13T08:46:02.894172211Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.3",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-23T09:11:50.57875215Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '567b1cc66c9704d1c019c50bef946272e911ec6baf244310f87f4e678be155f2 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf \t\t/go-alpine-patches \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-08-23T09:11:52.056107591Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-23T09:11:52.955033214Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-23T09:11:55.141874881Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-08-23T09:11:55.985988881Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd0a9a09f5aaebcb67aa6d173252640c31eecded3c0aee8bcf89b9f307fad7d2",
                    "sha256:b43ad2345ba516d8bf2087e0906db76bdb5fbd45c1e9e314afd0c3a8e9f13ea2",
                    "sha256:23510302cbd3bbd8afeeb07264fc540619e3f48d3ab6cc4c4d72e48a1f219cc0",
                    "sha256:5f136df344f25339e7ce78dbaa7371742167fd1a857cfdd33b2fa59a431e182e",
                    "sha256:7fde40c2bd03b62db5e5da3c66d2f1deb3532502dc31f6e3d0a11ebd6ced4306",
                    "sha256:b280390b6b91d6ad460e67c00e2856a9340514db320a87f687739d7dd445ef24"
                ]
            }
        },
        "1.10.3-stretch": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:62a5d8341f715b97b00e020a2779f6ddac0462d520efef9ebef68b40de1b5cea",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "2cdaefb749ea06355cf9eea97f7e8b2dd1b2e5762d4f8258d527c56d50cc2c3e",
            "container_config": {
                "Hostname": "2cdaefb749ea",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:62a5d8341f715b97b00e020a2779f6ddac0462d520efef9ebef68b40de1b5cea",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-07-18T04:26:27.47022475Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-17T08:47:22.828630475Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5e1a1aab339b0b1e3047eeab5d0c6c74ad3f388d0407dc86f41e4a78b99c6fd8 in / "
                },
                {
                    "created": "2018-07-17T08:47:23.896565687Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-17T14:51:45.703478382Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T14:52:06.204758622Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-07-17T14:54:31.796008203Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-18T04:25:05.968811446Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-18T04:26:02.279196008Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.3",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-18T04:26:22.990971908Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='fa1b0e45d3b647c252f51f5e1204aba049cde4af177ef9f2181f43004f901035' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='d3df3fa3d153e81041af24f31a82f86a21cb7b92c1b5552fb621bad0320f06b6' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='355128a05b456c9e68792143801ad18e0431510a53857f640f7b30ba92624ed2' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='3d5fe1932c904a01acb13dae07a5835bffafef38bef9e5a05450c52948ebdeb4' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='f3640b2f0990a9617c937775f669ee18f10a82e424e5f87a8ce794a6407b8347' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='34385f64651f82fbc11dc43bdc410c2abda237bdef87f3a430d35a508ec3ce0d' ;; \t\t*) goRelArch='src'; goRelSha256='567b1cc66c9704d1c019c50bef946272e911ec6baf244310f87f4e678be155f2'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-07-18T04:26:24.48349414Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-18T04:26:25.136405791Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-18T04:26:26.842526668Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-07-18T04:26:27.47022475Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:16815f59abc025030807119ef7ffa046ee88fd26cdca83380d6c7219cc1edae1",
                    "sha256:aeecc946906a50c3609d4615bddd5c132bfa5635f13a744e00cfbc0b66599d5d",
                    "sha256:b4d644f97489f0d15f730d48a24c0db08df74b12f72cedd5e7817638a471d92e",
                    "sha256:21fdf2fa41bb0abb9ae8d1b156d64a219ef332b120b2269f46cd422a8db9c379",
                    "sha256:2c1c91db38b25521158d58cd715dad770ce969a9792b32ac6fa5379f56383012",
                    "sha256:432a5cc96dd32a2a8ad5e739543b91d22988943fdfc4e94205920da1400e26e1",
                    "sha256:3caf4061848ec02ec7147a5cc9c1e797dffb3bebfa47e24a9e0d8e4d4d7facd0"
                ]
            }
        },
        "1.10.4-alpine": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6a487ce7ae1c0a8fe09889de64f145161c6ccbd5f0e96c9dc06b82e09236f3a6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "d9c482430b3d8a2e9ae0e3f1cee108422f6a1d79de94a54a21063bfed6175769",
            "container_config": {
                "Hostname": "d9c482430b3d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6a487ce7ae1c0a8fe09889de64f145161c6ccbd5f0e96c9dc06b82e09236f3a6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-10-03T09:01:42.289487079Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-09-12T08:42:24.118323939Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a4b53e2a2e207c5107a76c16d91b99cb1ed4ecb90b363913798e663426137d45 in / "
                },
                {
                    "created": "2018-09-12T08:42:24.99201639Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2018-09-12T08:42:25.666437528Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-03T08:51:01.460306453Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-10-03T08:51:03.570716077Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-10-03T08:59:03.702543877Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.4",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-03T09:01:25.029943817Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '6fe44965ed453cd968a81988523e9b0e794d3a478f91fd7983c28763d52d5781 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-10-03T09:01:29.96203766Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-03T09:01:30.679731929Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-03T09:01:32.304044261Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-10-03T09:01:42.289487079Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0684225156a70eeeaa1ab4dc6cbec89a76267f4f34e930e958a30c383ca9a61f",
                    "sha256:42f65d3fc3bbff9e9d68aa0f3c5a2d328273ec72c6e3dd2b5d51c527c82921ae",
                    "sha256:19e3fffbb433da0e8a7461f0be73beb4842a805443a7ca41eea1102deb3259cb",
                    "sha256:d61acf9569efdd43476441335c9163b3c684d3faf3c5a1aa76a6736b940600cc",
                    "sha256:230f4e6f6e0705d69290836638571eca68de89762e61e7a259f46a75a8dcd4ff",
                    "sha256:c85b0be5706ea33ad55e811e9b5e1fd65361baaa4bf2fb0efed8a78f2c24f44a"
                ]
            }
        },
        "1.10.4-alpine3.7": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c5550d67e3fc6f451811d3979d4519121d716f040c00d78443533f456d3ec8dd",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "0bc19b514462086324503ed778b400619bb0742e49c7c310577bb6afb729ec03",
            "container_config": {
                "Hostname": "0bc19b514462",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c5550d67e3fc6f451811d3979d4519121d716f040c00d78443533f456d3ec8dd",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-10-03T09:04:37.368115602Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-09-12T08:41:29.537447237Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d7effd9b71d0299a88ead16cb21ff39bd03c51dcd49408147c06b40183157703 in / "
                },
                {
                    "created": "2018-09-12T08:41:30.402954122Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2018-09-12T08:41:31.402060859Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-03T08:55:02.614502899Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-10-03T08:55:04.400198385Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-10-03T09:02:05.794035661Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.4",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-03T09:04:21.479247699Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '6fe44965ed453cd968a81988523e9b0e794d3a478f91fd7983c28763d52d5781 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-10-03T09:04:24.719274108Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-03T09:04:25.426921377Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-03T09:04:27.036322084Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-10-03T09:04:37.368115602Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0376dca82a151dba64ed0b4492d714c7ebc6825e0138daded841bdb43996ab9e",
                    "sha256:7c7e8e49d23b77868c3afd83e1c251ccca48b09a86af6a102f88130e13b70f12",
                    "sha256:2f1a2bef4b79ac58c1c909051f9a4a1a2d90d4f18f024e55b13dac3975638868",
                    "sha256:30a227595652cb8454d2ebc488cd72daa038830cd00655414c51bbc8627cf5c9",
                    "sha256:7a9cf39e7cd4dd4f60818b7e237fbcf082a18a7b6a892a44de53d047991c67fa",
                    "sha256:c44dfc5f7fc08fbd6889508228ce111ec1877bb1132c06a518ccd84de7b6d901"
                ]
            }
        },
        "1.10.4-alpine3.8": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6a487ce7ae1c0a8fe09889de64f145161c6ccbd5f0e96c9dc06b82e09236f3a6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "d9c482430b3d8a2e9ae0e3f1cee108422f6a1d79de94a54a21063bfed6175769",
            "container_config": {
                "Hostname": "d9c482430b3d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6a487ce7ae1c0a8fe09889de64f145161c6ccbd5f0e96c9dc06b82e09236f3a6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-10-03T09:01:42.289487079Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-09-12T08:42:24.118323939Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a4b53e2a2e207c5107a76c16d91b99cb1ed4ecb90b363913798e663426137d45 in / "
                },
                {
                    "created": "2018-09-12T08:42:24.99201639Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2018-09-12T08:42:25.666437528Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-03T08:51:01.460306453Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-10-03T08:51:03.570716077Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-10-03T08:59:03.702543877Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.4",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-03T09:01:25.029943817Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '6fe44965ed453cd968a81988523e9b0e794d3a478f91fd7983c28763d52d5781 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-10-03T09:01:29.96203766Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-03T09:01:30.679731929Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-03T09:01:32.304044261Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-10-03T09:01:42.289487079Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0684225156a70eeeaa1ab4dc6cbec89a76267f4f34e930e958a30c383ca9a61f",
                    "sha256:42f65d3fc3bbff9e9d68aa0f3c5a2d328273ec72c6e3dd2b5d51c527c82921ae",
                    "sha256:19e3fffbb433da0e8a7461f0be73beb4842a805443a7ca41eea1102deb3259cb",
                    "sha256:d61acf9569efdd43476441335c9163b3c684d3faf3c5a1aa76a6736b940600cc",
                    "sha256:230f4e6f6e0705d69290836638571eca68de89762e61e7a259f46a75a8dcd4ff",
                    "sha256:c85b0be5706ea33ad55e811e9b5e1fd65361baaa4bf2fb0efed8a78f2c24f44a"
                ]
            }
        },
        "1.10.4-stretch": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:8ec014e51ab096a7d94b89bbccc4b9b84e3ed485368d93c6fb9797ce048e6312",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "324e6570b7957d3aacfd94753a9f452a658a249e901d977b3f159dba32212d37",
            "container_config": {
                "Hostname": "324e6570b795",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:8ec014e51ab096a7d94b89bbccc4b9b84e3ed485368d93c6fb9797ce048e6312",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-10-17T00:52:42.633045127Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-10-16T08:43:08.802340828Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:961d2f24a0cebfcdd333e000ed4488e5c4f4d2a3d11056c45934d647caed5845 in / "
                },
                {
                    "created": "2018-10-16T08:43:10.118698854Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-16T12:01:13.620334986Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-10-16T12:01:39.234563636Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-10-16T12:02:49.548579781Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-10-17T00:50:50.254953564Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-10-17T00:52:11.405981893Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.4",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-17T00:52:28.020140284Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='fa04efdb17a275a0c6e137f969a1c4eb878939e91e1da16060ce42f02c2ec5ec' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='4e1e80bd98f3598c0c48ba0c189c836d01b602bfc769b827a4bfed01d2c14b21' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='2e0f9e99aeefaabba280b2bf85db0336da122accde73603159b3d72d0b2bd512' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='771f48e55776d4abc9c2a74907457066c7c282ac05fa01cf5ff4422ced76d2ee' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='1cfc147357c0be91a988998046997c5f30b20c6baaeb6cd5774717714db76093' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='5593d770d6544090c1bb20d57bb34c743131470695e195fbe5352bf056927a35' ;; \t\t*) goRelArch='src'; goRelSha256='6fe44965ed453cd968a81988523e9b0e794d3a478f91fd7983c28763d52d5781'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-10-17T00:52:31.441747003Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-17T00:52:34.505240766Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-17T00:52:41.332287997Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-10-17T00:52:42.633045127Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c399cdc243cf73baadf3bef4652ba8f588a5d8a92da68dcbd728b813a798a4b3",
                    "sha256:cde243eb0b8551f5fa73f46aa21aca81220bf612336dd86886a09a2afcea759d",
                    "sha256:345fe1adb4d85a6e0679bd7a7c17a45723bf1d75f10e7850104a5a7f1296792e",
                    "sha256:f6249dee7a3bdf0fb1ae3e4c748f22b78ef88a05e4c9d50f53b9367d133a9b04",
                    "sha256:6a42984fe29a76a89a93e7e3b5018c3daff899ab329a913003c633dad2e6504f",
                    "sha256:b03f0f971e1bd7dcb383f7b73d8cdfd9824791e2188100eb3a87e5ff412a1195",
                    "sha256:abd717b21ba47ee026d8656b271f4f5c5ebd4785068746ed8085088140b9d986"
                ]
            }
        },
        "1.10.5-alpine": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:8d6a612a0b83d6cc1f95123f47f3181155361c63b17366bdd135df756280a434",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "56b47cf41c673ca4c816a82279d851426406f92cafd17086190534a9cfed0df6",
            "container_config": {
                "Hostname": "56b47cf41c67",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:8d6a612a0b83d6cc1f95123f47f3181155361c63b17366bdd135df756280a434",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-11-03T08:52:53.988989282Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-09-12T08:42:24.118323939Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a4b53e2a2e207c5107a76c16d91b99cb1ed4ecb90b363913798e663426137d45 in / "
                },
                {
                    "created": "2018-09-12T08:42:24.99201639Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2018-09-12T08:42:25.666437528Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-03T08:51:01.460306453Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-10-03T08:51:03.570716077Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-11-03T08:50:12.402519461Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.5",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-03T08:52:36.331834282Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'f0a3ed5c775f39a970d4937c64b3b178992e23a5df57ae56a59a1c99253094f4 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-11-03T08:52:40.271970218Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-03T08:52:40.973061023Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-03T08:52:42.696880791Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-11-03T08:52:53.988989282Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0684225156a70eeeaa1ab4dc6cbec89a76267f4f34e930e958a30c383ca9a61f",
                    "sha256:42f65d3fc3bbff9e9d68aa0f3c5a2d328273ec72c6e3dd2b5d51c527c82921ae",
                    "sha256:19e3fffbb433da0e8a7461f0be73beb4842a805443a7ca41eea1102deb3259cb",
                    "sha256:d61acf9569efdd43476441335c9163b3c684d3faf3c5a1aa76a6736b940600cc",
                    "sha256:78923b445186634c54b93e0a0a5f0eecfd13444490f248b7959e6a1568d639dd",
                    "sha256:a39ff967f42823c46dedd9ca1f65896c298d0b868eae32f9f253bcefad07c3dd"
                ]
            }
        },
        "1.10.5-alpine3.7": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:47fa6fc2676cf160dee5c5ae3fe7beeb34ce88f95752c9d148e2e8bc99359e09",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "d38bc77cd1a8a97587eb016949b40f30e203e448afac567357b677f3db902271",
            "container_config": {
                "Hostname": "d38bc77cd1a8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:47fa6fc2676cf160dee5c5ae3fe7beeb34ce88f95752c9d148e2e8bc99359e09",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-11-03T08:55:49.562892767Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-09-12T08:41:29.537447237Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d7effd9b71d0299a88ead16cb21ff39bd03c51dcd49408147c06b40183157703 in / "
                },
                {
                    "created": "2018-09-12T08:41:30.402954122Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2018-09-12T08:41:31.402060859Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-03T08:55:02.614502899Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-10-03T08:55:04.400198385Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-11-03T08:53:21.946489374Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.5",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-03T08:55:44.121642539Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'f0a3ed5c775f39a970d4937c64b3b178992e23a5df57ae56a59a1c99253094f4 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-11-03T08:55:45.996123642Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-03T08:55:46.785149015Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-03T08:55:48.723572018Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-11-03T08:55:49.562892767Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0376dca82a151dba64ed0b4492d714c7ebc6825e0138daded841bdb43996ab9e",
                    "sha256:7c7e8e49d23b77868c3afd83e1c251ccca48b09a86af6a102f88130e13b70f12",
                    "sha256:2f1a2bef4b79ac58c1c909051f9a4a1a2d90d4f18f024e55b13dac3975638868",
                    "sha256:30a227595652cb8454d2ebc488cd72daa038830cd00655414c51bbc8627cf5c9",
                    "sha256:9ec15c56cfd39004b0c26b9c7b387a5c19dc425158bc85dd954501170d9335da",
                    "sha256:dea1c28a1f5e49ae527902861b1bc23ccaa23ab457ea3a48b69918c35385260a"
                ]
            }
        },
        "1.10.5-alpine3.8": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:8d6a612a0b83d6cc1f95123f47f3181155361c63b17366bdd135df756280a434",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "56b47cf41c673ca4c816a82279d851426406f92cafd17086190534a9cfed0df6",
            "container_config": {
                "Hostname": "56b47cf41c67",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:8d6a612a0b83d6cc1f95123f47f3181155361c63b17366bdd135df756280a434",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-11-03T08:52:53.988989282Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-09-12T08:42:24.118323939Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a4b53e2a2e207c5107a76c16d91b99cb1ed4ecb90b363913798e663426137d45 in / "
                },
                {
                    "created": "2018-09-12T08:42:24.99201639Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2018-09-12T08:42:25.666437528Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-03T08:51:01.460306453Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-10-03T08:51:03.570716077Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-11-03T08:50:12.402519461Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.5",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-03T08:52:36.331834282Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'f0a3ed5c775f39a970d4937c64b3b178992e23a5df57ae56a59a1c99253094f4 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-11-03T08:52:40.271970218Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-03T08:52:40.973061023Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-03T08:52:42.696880791Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-11-03T08:52:53.988989282Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0684225156a70eeeaa1ab4dc6cbec89a76267f4f34e930e958a30c383ca9a61f",
                    "sha256:42f65d3fc3bbff9e9d68aa0f3c5a2d328273ec72c6e3dd2b5d51c527c82921ae",
                    "sha256:19e3fffbb433da0e8a7461f0be73beb4842a805443a7ca41eea1102deb3259cb",
                    "sha256:d61acf9569efdd43476441335c9163b3c684d3faf3c5a1aa76a6736b940600cc",
                    "sha256:78923b445186634c54b93e0a0a5f0eecfd13444490f248b7959e6a1568d639dd",
                    "sha256:a39ff967f42823c46dedd9ca1f65896c298d0b868eae32f9f253bcefad07c3dd"
                ]
            }
        },
        "1.10.5-stretch": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:63e569e0845f122144d71dc384d4cc76705cca4b76551efea6c9f2b5dd0c2cea",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "e148da447de31933e69fb94525221f56033af59975176370c5d1fad0097ec85c",
            "container_config": {
                "Hostname": "e148da447de3",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:63e569e0845f122144d71dc384d4cc76705cca4b76551efea6c9f2b5dd0c2cea",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-11-17T17:09:58.361715518Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-11-16T10:13:25.263528653Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bf8c0ee6d5a7d54f0c1259b5f65569cf7e5e828cfbe98302312933537cd9087e in / "
                },
                {
                    "created": "2018-11-16T10:13:26.334703944Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-17T02:30:34.467108257Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-11-17T02:30:54.074921647Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-11-17T02:33:03.408430903Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-11-17T17:08:39.559486502Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-11-17T17:09:37.385504165Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.5",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-17T17:09:53.337074004Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='a035d9beda8341b645d3f45a1b620cf2d8fb0c5eb409be36b389c0fd384ecc3a' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='1d864a6d0ec599de9112c8354dcaaa886b4df928757966939402598e9bd9c238' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='b4c16fcee18bc79de2fa4776c8d0f9bc164ddfc32101e96fe1da83ebe881e3df' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='bc1bd42405a551ba7ac86b79b9d23a5635f21de53caf684acd8bf5dfee8bef5d' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='8fc13736d383312710249b24adf05af59ff14dacb73d9bd715ff463bc89c5c5f' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='e90269495fab7ef99aea6937caf7a049896b2dc7b181456f80a506e69a8b57fc' ;; \t\t*) goRelArch='src'; goRelSha256='f0a3ed5c775f39a970d4937c64b3b178992e23a5df57ae56a59a1c99253094f4'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-11-17T17:09:54.557065034Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-17T17:09:55.278910967Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-17T17:09:57.657442207Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-11-17T17:09:58.361715518Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:11300de7503751e0c7f2a078d8b8c3b1eec630d6852447b6ec7f72d02c7a3f86",
                    "sha256:4c0d82e8990ea10a547464a56d3c09d6e3f64d8929f3306b0b7b7012ee636f05",
                    "sha256:5e2c517c1956f6cc5b00087d13a8b9fb5878ca9df8be3dab018c5d0346458bec",
                    "sha256:97ea6e83ecdaf9ad109bcb768a896d5047da1fe82507893b1071e69b4661060c",
                    "sha256:0c66260563dbfeb99e09e97f4fb10a9d4b1499a22ece3792d1947b294eb97a71",
                    "sha256:ddf8ea54cf3fcacdedc0336c90ee81c73f9c46c0bf1b2f65117dc65c64cf2cec",
                    "sha256:7b6826ef847e0ad8bcca3344634fdd0f5098392479338067324b5fa12a575d41"
                ]
            }
        },
        "1.10.6-alpine": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3c35aca53910a6798447e969219fd0801ea23752cf5c294721561d621e0485d9",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "0489b5f7b73c4b7aa0b6b87f4752163f6664eb87acd9a7288607460fa3a0cb2a",
            "container_config": {
                "Hostname": "0489b5f7b73c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3c35aca53910a6798447e969219fd0801ea23752cf5c294721561d621e0485d9",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-12-14T09:52:22.021490835Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-09-12T08:42:24.118323939Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a4b53e2a2e207c5107a76c16d91b99cb1ed4ecb90b363913798e663426137d45 in / "
                },
                {
                    "created": "2018-09-12T08:42:24.99201639Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2018-09-12T08:42:25.666437528Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-03T08:51:01.460306453Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-10-03T08:51:03.570716077Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-12-14T09:50:03.463858678Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.6",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-14T09:52:18.275062934Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '0f6bd961f6d2d6fa6319b7dc9548e2ae22d0698e7432d4cabf737542913f8c14 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-12-14T09:52:19.426555187Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-14T09:52:19.975298194Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-14T09:52:21.4623357Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-12-14T09:52:22.021490835Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0684225156a70eeeaa1ab4dc6cbec89a76267f4f34e930e958a30c383ca9a61f",
                    "sha256:42f65d3fc3bbff9e9d68aa0f3c5a2d328273ec72c6e3dd2b5d51c527c82921ae",
                    "sha256:19e3fffbb433da0e8a7461f0be73beb4842a805443a7ca41eea1102deb3259cb",
                    "sha256:d61acf9569efdd43476441335c9163b3c684d3faf3c5a1aa76a6736b940600cc",
                    "sha256:2c716d03394c526138bd7b4a61fca18bb12bfc25c2719bc0e8bc30697f17bf7f",
                    "sha256:0d5644a77243faaf4400b3df7841f542906e6836c644ad51c7d712676119db4a"
                ]
            }
        },
        "1.10.6-alpine3.7": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:68de8bb80b407dea6a29fb94fa64bdf949cc30d54d656331a2df52d06462b3f8",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "3bb2e4a6e9d19e55a161518de899f011e71b55d30307402151bf4ce2266bb42d",
            "container_config": {
                "Hostname": "3bb2e4a6e9d1",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:68de8bb80b407dea6a29fb94fa64bdf949cc30d54d656331a2df52d06462b3f8",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-12-14T09:55:04.570613923Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-09-12T08:41:29.537447237Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d7effd9b71d0299a88ead16cb21ff39bd03c51dcd49408147c06b40183157703 in / "
                },
                {
                    "created": "2018-09-12T08:41:30.402954122Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2018-09-12T08:41:31.402060859Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-03T08:55:02.614502899Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-10-03T08:55:04.400198385Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-12-14T09:52:49.70280774Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.6",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-14T09:55:00.379365997Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '0f6bd961f6d2d6fa6319b7dc9548e2ae22d0698e7432d4cabf737542913f8c14 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-12-14T09:55:01.582184814Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-14T09:55:02.48490405Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-14T09:55:03.986886885Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-12-14T09:55:04.570613923Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0376dca82a151dba64ed0b4492d714c7ebc6825e0138daded841bdb43996ab9e",
                    "sha256:7c7e8e49d23b77868c3afd83e1c251ccca48b09a86af6a102f88130e13b70f12",
                    "sha256:2f1a2bef4b79ac58c1c909051f9a4a1a2d90d4f18f024e55b13dac3975638868",
                    "sha256:30a227595652cb8454d2ebc488cd72daa038830cd00655414c51bbc8627cf5c9",
                    "sha256:be732a2580ef03cb17785ced05245d9f420263fefdc5dce876d52172cdf4ec49",
                    "sha256:7c48bb680fa8db0ede40941be4744f39b25f30782f52b0f96af78681536380b5"
                ]
            }
        },
        "1.10.6-alpine3.8": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3c35aca53910a6798447e969219fd0801ea23752cf5c294721561d621e0485d9",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "0489b5f7b73c4b7aa0b6b87f4752163f6664eb87acd9a7288607460fa3a0cb2a",
            "container_config": {
                "Hostname": "0489b5f7b73c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3c35aca53910a6798447e969219fd0801ea23752cf5c294721561d621e0485d9",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-12-14T09:52:22.021490835Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-09-12T08:42:24.118323939Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a4b53e2a2e207c5107a76c16d91b99cb1ed4ecb90b363913798e663426137d45 in / "
                },
                {
                    "created": "2018-09-12T08:42:24.99201639Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2018-09-12T08:42:25.666437528Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-03T08:51:01.460306453Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-10-03T08:51:03.570716077Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-12-14T09:50:03.463858678Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.6",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-14T09:52:18.275062934Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '0f6bd961f6d2d6fa6319b7dc9548e2ae22d0698e7432d4cabf737542913f8c14 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-12-14T09:52:19.426555187Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-14T09:52:19.975298194Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-14T09:52:21.4623357Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-12-14T09:52:22.021490835Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0684225156a70eeeaa1ab4dc6cbec89a76267f4f34e930e958a30c383ca9a61f",
                    "sha256:42f65d3fc3bbff9e9d68aa0f3c5a2d328273ec72c6e3dd2b5d51c527c82921ae",
                    "sha256:19e3fffbb433da0e8a7461f0be73beb4842a805443a7ca41eea1102deb3259cb",
                    "sha256:d61acf9569efdd43476441335c9163b3c684d3faf3c5a1aa76a6736b940600cc",
                    "sha256:2c716d03394c526138bd7b4a61fca18bb12bfc25c2719bc0e8bc30697f17bf7f",
                    "sha256:0d5644a77243faaf4400b3df7841f542906e6836c644ad51c7d712676119db4a"
                ]
            }
        },
        "1.10.6-stretch": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2ca3ad7c4a4c33dfcac18a14de9e62c82bf28417a7604de9af9e4784d834c668",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "8a93d135009a912b15dd881d3b76ce47394975b67f59f74c25bfb854046c251e",
            "container_config": {
                "Hostname": "8a93d135009a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2ca3ad7c4a4c33dfcac18a14de9e62c82bf28417a7604de9af9e4784d834c668",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-12-14T09:49:47.9753243Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-11-16T10:13:25.263528653Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bf8c0ee6d5a7d54f0c1259b5f65569cf7e5e828cfbe98302312933537cd9087e in / "
                },
                {
                    "created": "2018-11-16T10:13:26.334703944Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-17T02:30:34.467108257Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-11-17T02:30:54.074921647Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-11-17T02:33:03.408430903Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-11-17T17:08:39.559486502Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-12-14T09:49:23.817496771Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.6",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-14T09:49:44.145967819Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='acbdedf28b55b38d2db6f06209a25a869a36d31bdcf09fd2ec3d40e1279e0592' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='4da252fc7e834b7ce35d349fb581aa84a08adece926a0b9a8e4216451ffcb11e' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='0fcbfbcbf6373c0b6876786900a4a100c1ed9af86bd3258f23ab498cca4c02a1' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='171fe6cbecb2845b875a35ac7ad758d4c0c5bd03f330fa35d340de85b9070e71' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='ebd7e4688f3e1baabbc735453b19c6c27116e1f292bf46622123bfc4c160c747' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='0223daa57bdef5bf85d308f6d2793c58055d294c13cbaca240ead2f568de2e9f' ;; \t\t*) goRelArch='src'; goRelSha256='0f6bd961f6d2d6fa6319b7dc9548e2ae22d0698e7432d4cabf737542913f8c14'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-12-14T09:49:45.262556154Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-14T09:49:45.836304588Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-14T09:49:47.396917516Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-12-14T09:49:47.9753243Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:11300de7503751e0c7f2a078d8b8c3b1eec630d6852447b6ec7f72d02c7a3f86",
                    "sha256:4c0d82e8990ea10a547464a56d3c09d6e3f64d8929f3306b0b7b7012ee636f05",
                    "sha256:5e2c517c1956f6cc5b00087d13a8b9fb5878ca9df8be3dab018c5d0346458bec",
                    "sha256:97ea6e83ecdaf9ad109bcb768a896d5047da1fe82507893b1071e69b4661060c",
                    "sha256:0c66260563dbfeb99e09e97f4fb10a9d4b1499a22ece3792d1947b294eb97a71",
                    "sha256:1eea6856e7da8abdee157fb4bc729eb7ffc5261ecd4303bc0d846beea6988549",
                    "sha256:366226859e1d14d6cb43bca20382c33b698ee9866a269b8d8214ae2f54d84911"
                ]
            }
        },
        "1.10.7-alpine": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:285ec3d333a65ac704b1b0de06f15fba104d98657b4596a854dd750310ddb423",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "8f76a46c090b1ce55a167964d1e7d104303973d9fa6857bdc7104401488b6422",
            "container_config": {
                "Hostname": "8f76a46c090b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:285ec3d333a65ac704b1b0de06f15fba104d98657b4596a854dd750310ddb423",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2018-12-21T10:20:52.338424326Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2018-12-21T09:43:06.705630029Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:79419748674899ac7d5d699fe62f837c69d04af3ceaabbb7951c35c2f0ff46fa in / "
                },
                {
                    "created": "2018-12-21T09:43:07.198401212Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a10c133d8d5e9af3a9a1610709d3ed2f85b1507f1ba5745ac12bb495974e3fe6 in /etc/localtime "
                },
                {
                    "created": "2018-12-21T09:43:07.722553865Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T10:00:50.393353587Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-12-21T10:00:52.818317624Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-12-21T10:18:11.584822487Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.7",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T10:20:48.21144895Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'b84a0d7c90789f3a2ec5349dbe7419efb81f1fac9289b6f60df86bd919bd4447 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-12-21T10:20:49.415181236Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T10:20:49.960059528Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T10:20:51.743665446Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-12-21T10:20:52.338424326Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:92d7b4d0b33cc1213ee394fabb26922447135080a3b7bd326e5bb7453e06be32",
                    "sha256:82fe62b38ba2a9028a57bee2d8e1b855733943e5491ad946e37e406208ff6e8b",
                    "sha256:0db26aa2ab49f54f8b357b9d4f8188543a065211dac4752eb7d9b65da88a52cf",
                    "sha256:6897c234601851e40044ce7b1194fc52052891863645562058c775deb9dc1342",
                    "sha256:ce6a69483759b38f4a2b7141d05d7a6777149c525258d5712472dd2eb8a7a861",
                    "sha256:746a09b3f8c4f939bb254883b83d154832e031ee0c61eb1883e52a88dfc14840"
                ]
            }
        },
        "1.10.7-alpine3.7": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:40cb52f0eb063e1a7ee1d1719fe00a22c3d382a2f5044d8ddf6e5f0b51742014",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "3bc3e9813bcb80599d69cdae5c47e2674533a8fa063cc4a2c5b15b0281684907",
            "container_config": {
                "Hostname": "3bc3e9813bcb",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:40cb52f0eb063e1a7ee1d1719fe00a22c3d382a2f5044d8ddf6e5f0b51742014",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2018-12-21T10:23:44.447020562Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2018-12-21T09:42:47.616920457Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7278e4df49d628c2bbb27c53665e671f57cd2db003e030b1be93eb81c5d28303 in / "
                },
                {
                    "created": "2018-12-21T09:42:48.140920422Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a10c133d8d5e9af3a9a1610709d3ed2f85b1507f1ba5745ac12bb495974e3fe6 in /etc/localtime "
                },
                {
                    "created": "2018-12-21T09:42:48.640087564Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T10:14:45.27493224Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-12-21T10:14:47.648984863Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-12-21T10:21:10.143883994Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.7",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T10:23:39.204586365Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'b84a0d7c90789f3a2ec5349dbe7419efb81f1fac9289b6f60df86bd919bd4447 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-12-21T10:23:40.369303973Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T10:23:40.922564402Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T10:23:43.661861859Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-12-21T10:23:44.447020562Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0376dca82a151dba64ed0b4492d714c7ebc6825e0138daded841bdb43996ab9e",
                    "sha256:d1ebf0a8b65281fbaac5f61a75ba9179c66ceb134610fd069e071357b61e531f",
                    "sha256:6532a6eb4787b26dd63f27fa3b33349c06774803b6f5f006701b9093b3183351",
                    "sha256:ab5180a942db0a82a751476b2480ee156ccd89448e7122a9b1c2f22570b0e5be",
                    "sha256:5148ac0b3c4d6a3aa52c7bff6de8c81bfa9574ee7ffe29aa7de31d4ea0190164",
                    "sha256:73ceb7b05761542ed40db3de7267703171440f2313214e987c018fdced456c9b"
                ]
            }
        },
        "1.10.7-alpine3.8": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:285ec3d333a65ac704b1b0de06f15fba104d98657b4596a854dd750310ddb423",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "8f76a46c090b1ce55a167964d1e7d104303973d9fa6857bdc7104401488b6422",
            "container_config": {
                "Hostname": "8f76a46c090b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:285ec3d333a65ac704b1b0de06f15fba104d98657b4596a854dd750310ddb423",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2018-12-21T10:20:52.338424326Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2018-12-21T09:43:06.705630029Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:79419748674899ac7d5d699fe62f837c69d04af3ceaabbb7951c35c2f0ff46fa in / "
                },
                {
                    "created": "2018-12-21T09:43:07.198401212Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a10c133d8d5e9af3a9a1610709d3ed2f85b1507f1ba5745ac12bb495974e3fe6 in /etc/localtime "
                },
                {
                    "created": "2018-12-21T09:43:07.722553865Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T10:00:50.393353587Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-12-21T10:00:52.818317624Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-12-21T10:18:11.584822487Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.7",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T10:20:48.21144895Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'b84a0d7c90789f3a2ec5349dbe7419efb81f1fac9289b6f60df86bd919bd4447 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-12-21T10:20:49.415181236Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T10:20:49.960059528Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T10:20:51.743665446Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-12-21T10:20:52.338424326Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:92d7b4d0b33cc1213ee394fabb26922447135080a3b7bd326e5bb7453e06be32",
                    "sha256:82fe62b38ba2a9028a57bee2d8e1b855733943e5491ad946e37e406208ff6e8b",
                    "sha256:0db26aa2ab49f54f8b357b9d4f8188543a065211dac4752eb7d9b65da88a52cf",
                    "sha256:6897c234601851e40044ce7b1194fc52052891863645562058c775deb9dc1342",
                    "sha256:ce6a69483759b38f4a2b7141d05d7a6777149c525258d5712472dd2eb8a7a861",
                    "sha256:746a09b3f8c4f939bb254883b83d154832e031ee0c61eb1883e52a88dfc14840"
                ]
            }
        },
        "1.10.7-stretch": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:53de9136436987206c02cd46dd2feb41e4ce72ee3139acb91f4ebf88ae338671",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "b4a5452c38b03f9729b7479acba71cd6ddb257925a3e633b61e9674593bbe018",
            "container_config": {
                "Hostname": "b4a5452c38b0",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:53de9136436987206c02cd46dd2feb41e4ce72ee3139acb91f4ebf88ae338671",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2018-12-30T01:43:19.074575205Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2018-12-29T10:08:10.656625229Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8238e4e08413d772a0383ef64eccc0448c682834c018a28e87a568a33b0da788 in / "
                },
                {
                    "created": "2018-12-29T10:08:11.85486118Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-29T12:10:28.859457803Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-12-29T12:11:00.592632628Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-12-29T12:13:11.487987513Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-12-30T01:40:43.643111942Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-12-30T01:42:45.948931548Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.7",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-30T01:43:12.03981111Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='1aabe10919048822f3bb1865f7a22f8b78387a12c03cd573101594bc8fb33579' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='1f81c995f829c8fc7def4d0cc1bde63cac1834386e6f650f2cd7be56ab5e8b98' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='cb5a274f7c8f6186957e4503e724dda8aeffe84b76a146748c55ea5bb22d9ae4' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='55cd25e550cb8ce8250dbc9eda56b9c10b3097c7f6beed45066fbaaf8c6c1ebd' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='11279ffebfcfa875b0552839d428cc72e2056e68681286429b57173c0da91fb4' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='e0d7802029ed8d2720a2b27ec1816e71cb29f818380abb8b449080e97547881e' ;; \t\t*) goRelArch='src'; goRelSha256='b84a0d7c90789f3a2ec5349dbe7419efb81f1fac9289b6f60df86bd919bd4447'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-12-30T01:43:13.732766964Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-30T01:43:14.773549399Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-30T01:43:18.06538713Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-12-30T01:43:19.074575205Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4fd5e5ad4086643e0c20d9508f9a93baf11ea08c57e39a2f6ba271c2bb902fe7",
                    "sha256:4a6a662b6bf2804c6a45343dbe6639b40181bd8e8f29eced123cc3b00f9975d7",
                    "sha256:8128a2e67b6e808b4bec88efc39f8b723107cfed827bbdf8bf74470cfa1e5d23",
                    "sha256:52bfb6dc2c8285c3c5c90c6374a3fcec37841dbb95bd46e964cf31c305ae4ac5",
                    "sha256:25584c973c02628d8138f06ad546ff930638604aafaf5c06c53b387b09a48df5",
                    "sha256:7a35b097017798e95c03c64eddab839672a57a52c3e103f9c573b83700e8787d",
                    "sha256:effeac87ea2541d15d1360a18a064eaa7739b10460d937a00cf645f388092e71"
                ]
            }
        },
        "1.10.8-alpine": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:66349372a0fdab62025ce81cf2a7156e84b8e7825b1d4409195724ed2c98fc3c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "aa890d627882def6f62f44af396e0f81d9411e688515542e024d0884880f56d1",
            "container_config": {
                "Hostname": "aa890d627882",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:66349372a0fdab62025ce81cf2a7156e84b8e7825b1d4409195724ed2c98fc3c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-02-06T10:49:24.171832067Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-01-31T09:40:55.59464559Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3c5f57c6644886bbb8164b9aa4cd60e233be7da48b7194a04963a8e7de058e28 in / "
                },
                {
                    "created": "2019-01-31T09:40:56.373934366Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a10c133d8d5e9af3a9a1610709d3ed2f85b1507f1ba5745ac12bb495974e3fe6 in /etc/localtime "
                },
                {
                    "created": "2019-01-31T09:40:57.414211885Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T10:35:48.859028851Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-02-06T10:35:53.718651346Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-02-06T10:45:47.043189513Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.8",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T10:49:08.389648675Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '6faf74046b5e24c2c0b46e78571cca4d65e1b89819da1089e53ea57539c63491 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-02-06T10:49:12.480361472Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T10:49:14.162810255Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T10:49:22.094740632Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-02-06T10:49:24.171832067Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b62d6d9a5cefd54dd8025cbfc842db54bbbc2268be8d05125c05ef82228da652",
                    "sha256:f8acf74b099c772d9f05156f67bc53953983b4f4edd19881dc2b138d1cfdb5dc",
                    "sha256:9079a9ec4fad7a526523322dad8473070caa3506e0da3d1de6796e849e7b2700",
                    "sha256:55321bf93b5623e0f3cfeb273381e036e21b0cf1873712feb570c153950a88a5",
                    "sha256:ea74a2813ebc4a2c6497e2cf3979ca7908272846b153706dc420a3a9b7106198",
                    "sha256:a98aebf83b10aa026b35b8b9b3130470e99a3ad6e90e30d7d3648339a70703d0"
                ]
            }
        },
        "1.10.8-alpine3.7": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:393a3bd347a5673af2d83e9b66e416acef7821b0ae6cd2975accb4b6cf7e651b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "6d420cd0095bcceceb8b32cbec89fb606f4798e82c21592f8e9058c4a0488de7",
            "container_config": {
                "Hostname": "6d420cd0095b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:393a3bd347a5673af2d83e9b66e416acef7821b0ae6cd2975accb4b6cf7e651b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-01-25T09:40:17.582862304Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2018-12-21T09:42:47.616920457Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7278e4df49d628c2bbb27c53665e671f57cd2db003e030b1be93eb81c5d28303 in / "
                },
                {
                    "created": "2018-12-21T09:42:48.140920422Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a10c133d8d5e9af3a9a1610709d3ed2f85b1507f1ba5745ac12bb495974e3fe6 in /etc/localtime "
                },
                {
                    "created": "2018-12-21T09:42:48.640087564Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T10:14:45.27493224Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-12-21T10:14:47.648984863Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-01-25T09:37:46.802136115Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.8",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-25T09:40:12.395084895Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '6faf74046b5e24c2c0b46e78571cca4d65e1b89819da1089e53ea57539c63491 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-01-25T09:40:13.620318942Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-25T09:40:14.369586236Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-25T09:40:16.582003728Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-01-25T09:40:17.582862304Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0376dca82a151dba64ed0b4492d714c7ebc6825e0138daded841bdb43996ab9e",
                    "sha256:d1ebf0a8b65281fbaac5f61a75ba9179c66ceb134610fd069e071357b61e531f",
                    "sha256:6532a6eb4787b26dd63f27fa3b33349c06774803b6f5f006701b9093b3183351",
                    "sha256:ab5180a942db0a82a751476b2480ee156ccd89448e7122a9b1c2f22570b0e5be",
                    "sha256:7549c99225316a074f3dbb71b6817f656c5e26aa61a42f525fabcc14a04dad0d",
                    "sha256:c248a95e965707a4ed0ec81d4d652f5460325e178bf7290c0a5efa2e610e0999"
                ]
            }
        },
        "1.10.8-alpine3.8": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7bc463c6d78588584d7ba9aabcef3e979f0d4e3ee881640923bd483c36345461",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "eaf587a4dd07501732a270856a8f5cea6c296bd682b090d6badb7a7b4c81a036",
            "container_config": {
                "Hostname": "eaf587a4dd07",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7bc463c6d78588584d7ba9aabcef3e979f0d4e3ee881640923bd483c36345461",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-01-25T09:37:41.739914045Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2018-12-21T09:43:06.705630029Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:79419748674899ac7d5d699fe62f837c69d04af3ceaabbb7951c35c2f0ff46fa in / "
                },
                {
                    "created": "2018-12-21T09:43:07.198401212Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a10c133d8d5e9af3a9a1610709d3ed2f85b1507f1ba5745ac12bb495974e3fe6 in /etc/localtime "
                },
                {
                    "created": "2018-12-21T09:43:07.722553865Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T10:00:50.393353587Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-12-21T10:00:52.818317624Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-01-25T09:35:04.417310645Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.8",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-25T09:37:35.915520802Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '6faf74046b5e24c2c0b46e78571cca4d65e1b89819da1089e53ea57539c63491 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-01-25T09:37:37.135040761Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-25T09:37:38.069653839Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-25T09:37:40.826787303Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-01-25T09:37:41.739914045Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:92d7b4d0b33cc1213ee394fabb26922447135080a3b7bd326e5bb7453e06be32",
                    "sha256:82fe62b38ba2a9028a57bee2d8e1b855733943e5491ad946e37e406208ff6e8b",
                    "sha256:0db26aa2ab49f54f8b357b9d4f8188543a065211dac4752eb7d9b65da88a52cf",
                    "sha256:6897c234601851e40044ce7b1194fc52052891863645562058c775deb9dc1342",
                    "sha256:fd82a7ec0470c743aefa9d8667e0ec7931b9436733e8c4a7180d9f8885345dcf",
                    "sha256:143c5d053ea6550963e6f6ef103fdb5507cf8ca5f4ae7aac2a6812784b771716"
                ]
            }
        },
        "1.10.8-alpine3.9": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:66349372a0fdab62025ce81cf2a7156e84b8e7825b1d4409195724ed2c98fc3c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "aa890d627882def6f62f44af396e0f81d9411e688515542e024d0884880f56d1",
            "container_config": {
                "Hostname": "aa890d627882",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:66349372a0fdab62025ce81cf2a7156e84b8e7825b1d4409195724ed2c98fc3c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-02-06T10:49:24.171832067Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-01-31T09:40:55.59464559Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3c5f57c6644886bbb8164b9aa4cd60e233be7da48b7194a04963a8e7de058e28 in / "
                },
                {
                    "created": "2019-01-31T09:40:56.373934366Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a10c133d8d5e9af3a9a1610709d3ed2f85b1507f1ba5745ac12bb495974e3fe6 in /etc/localtime "
                },
                {
                    "created": "2019-01-31T09:40:57.414211885Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T10:35:48.859028851Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-02-06T10:35:53.718651346Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-02-06T10:45:47.043189513Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.8",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T10:49:08.389648675Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '6faf74046b5e24c2c0b46e78571cca4d65e1b89819da1089e53ea57539c63491 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-02-06T10:49:12.480361472Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T10:49:14.162810255Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T10:49:22.094740632Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-02-06T10:49:24.171832067Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b62d6d9a5cefd54dd8025cbfc842db54bbbc2268be8d05125c05ef82228da652",
                    "sha256:f8acf74b099c772d9f05156f67bc53953983b4f4edd19881dc2b138d1cfdb5dc",
                    "sha256:9079a9ec4fad7a526523322dad8473070caa3506e0da3d1de6796e849e7b2700",
                    "sha256:55321bf93b5623e0f3cfeb273381e036e21b0cf1873712feb570c153950a88a5",
                    "sha256:ea74a2813ebc4a2c6497e2cf3979ca7908272846b153706dc420a3a9b7106198",
                    "sha256:a98aebf83b10aa026b35b8b9b3130470e99a3ad6e90e30d7d3648339a70703d0"
                ]
            }
        },
        "1.10.8-stretch": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:10f635ddec634de743c55be8383847279f433e4f00d60ee51ec8eccd267f7bbd",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "e1df96d50e669f0e3add9f43de91fe83d4b02987ae5fa2dacdbe66d1a1601f92",
            "container_config": {
                "Hostname": "e1df96d50e66",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:10f635ddec634de743c55be8383847279f433e4f00d60ee51ec8eccd267f7bbd",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-02-06T10:45:29.630550082Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-02-06T10:08:56.448426246Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4c7b5bcb5c347fb36236917e364936a9762b8bd6e8585c33379120f01c3a8d85 in / "
                },
                {
                    "created": "2019-02-06T10:08:58.411455795Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T10:37:59.282799901Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-02-06T10:38:20.923306295Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-02-06T10:39:59.470164799Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-02-06T10:44:54.502187336Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-02-06T10:44:55.795981876Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.8",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T10:45:17.680116162Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='d8626fb6f9a3ab397d88c483b576be41fa81eefcec2fd18562c87626dbb3c39e' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='6fdbc67524fc4c15fc87014869dddce9ecda7958b78f3cb1bbc5b0a9b61bfb95' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='0921a76e78022ec2ae217e85b04940e2e9912b4c3218d96a827deedb9abe1c7b' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='10202da0b7f2a0f2c2ec4dd65375584dd829ce88ccc58e5fe1fa1352e69fecaf' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='9054bcc7582ebb8a69ca43447a38e4b9ea11d08f05511cc7f13720e3a12ff299' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='6f71b189c6cf30f7736af21265e992990cb0374138b7a70b0880cf8579399a69' ;; \t\t*) goRelArch='src'; goRelSha256='6faf74046b5e24c2c0b46e78571cca4d65e1b89819da1089e53ea57539c63491'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-02-06T10:45:19.220580468Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T10:45:20.46840379Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T10:45:28.085239416Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-02-06T10:45:29.630550082Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3b1e812def9423169cf856a2785cf1c647d0b14e257f1d97d001f2eea597c8a9",
                    "sha256:944b169fa0fecd2d4b3b5dad05f280d7a9179485fe8c1839737c690e87fbc67b",
                    "sha256:692a708e68fbe95e5c9d80b2a5a3287fe3670dfcd31108ecf3621b4e758f3d4b",
                    "sha256:fbb13e302c5c808925f2c1f9c41c4cefeac1888499f44965cc340cc8c473b660",
                    "sha256:0cadb6f6c5d6ee70b9971ea95007e8da709427c29d8565ac23c12b8ed016dd3e",
                    "sha256:ab8d7ee937a7c49e6ec3a3f8e1374ee5fa4cbfecae6631a24f0634a1b5ea8534",
                    "sha256:cb3a76e15f43a7f88833689680c0210bc1890b79638ea3170cb4f57f0f48fc8c"
                ]
            }
        },
        "1.10beta1-alpine": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a4e5e73ee3d6d5fbd9b2efefc1e53d715fd87ed6b3dfe5bcd95c71b6d4ded4cf",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "1a311558d4461670c0a2a9667893c9028194946c10a63267b83c0d404b0e5b59",
            "container_config": {
                "Hostname": "1a311558d446",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ea7c9f4702f94a0df05f60648914e97f7876c4a7c5163e7870dd98fa896ff722 in /usr/local/bin/ "
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a4e5e73ee3d6d5fbd9b2efefc1e53d715fd87ed6b3dfe5bcd95c71b6d4ded4cf",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2017-12-08T20:58:29.633802525Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2017-12-01T18:42:42.17629931Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a6ef3cbbb1c0e5dfc6c3e41d70fd93e548594d9cb42c067e52df46d418c10a79 in / "
                },
                {
                    "created": "2017-12-01T18:42:42.958900633Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2017-12-01T18:42:43.535835924Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-08T20:56:00.152334049Z",
                    "created_by": "/bin/sh -c apk add --no-cache ca-certificates"
                },
                {
                    "created": "2017-12-08T20:56:00.799399488Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10beta1",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-08T20:56:01.624538604Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:05dc434ec17d0f39e5733c78e8250d0f8fb6dddc1c65ff8d43a8a82f38272d32 in /go-alpine-patches/ "
                },
                {
                    "created": "2017-12-08T20:58:24.456695011Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '841df62b20fd915d83a2e43b7d043c2a3781c299de78abc45480eec575186b6b *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf /go-alpine-patches; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2017-12-08T20:58:25.854612554Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-08T20:58:26.480939801Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-08T20:58:28.243573609Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2017-12-08T20:58:28.839674066Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-08T20:58:29.633802525Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ea7c9f4702f94a0df05f60648914e97f7876c4a7c5163e7870dd98fa896ff722 in /usr/local/bin/ "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:58477411d6070ff18d58000c0453ecb014b688000a033b2c881d393eabe81d8c",
                    "sha256:05f52530ca7ba1de0fc93f4d43c9dabc47e18efdf1b886e4d7e533c72b46d443",
                    "sha256:8a096f9852f022c0412024449ae712315cb8ca475d9ce774399e4c6a980d4f7f",
                    "sha256:ae0d33949ef632d2226fcfd61d8672ec465775e68d6d5d0275ef8fdf6902f3d6",
                    "sha256:16be5b07c260631d92d3e3dd84b6f2d2b477a2fadd5fcf8abf880e7cda5cdeb4",
                    "sha256:2b611da0d7fc5aef6742ee50748a26a5c619c91c29cf035d2f12beea7b0eba70",
                    "sha256:ac6ea2586db51c31902c77c10884c200f826116ec5a25f122e2605a51c0c1e6e"
                ]
            }
        },
        "1.10beta1-alpine3.7": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a4e5e73ee3d6d5fbd9b2efefc1e53d715fd87ed6b3dfe5bcd95c71b6d4ded4cf",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "1a311558d4461670c0a2a9667893c9028194946c10a63267b83c0d404b0e5b59",
            "container_config": {
                "Hostname": "1a311558d446",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ea7c9f4702f94a0df05f60648914e97f7876c4a7c5163e7870dd98fa896ff722 in /usr/local/bin/ "
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a4e5e73ee3d6d5fbd9b2efefc1e53d715fd87ed6b3dfe5bcd95c71b6d4ded4cf",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2017-12-08T20:58:29.633802525Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2017-12-01T18:42:42.17629931Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a6ef3cbbb1c0e5dfc6c3e41d70fd93e548594d9cb42c067e52df46d418c10a79 in / "
                },
                {
                    "created": "2017-12-01T18:42:42.958900633Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2017-12-01T18:42:43.535835924Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-08T20:56:00.152334049Z",
                    "created_by": "/bin/sh -c apk add --no-cache ca-certificates"
                },
                {
                    "created": "2017-12-08T20:56:00.799399488Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10beta1",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-08T20:56:01.624538604Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:05dc434ec17d0f39e5733c78e8250d0f8fb6dddc1c65ff8d43a8a82f38272d32 in /go-alpine-patches/ "
                },
                {
                    "created": "2017-12-08T20:58:24.456695011Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '841df62b20fd915d83a2e43b7d043c2a3781c299de78abc45480eec575186b6b *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf /go-alpine-patches; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2017-12-08T20:58:25.854612554Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-08T20:58:26.480939801Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-08T20:58:28.243573609Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2017-12-08T20:58:28.839674066Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-08T20:58:29.633802525Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ea7c9f4702f94a0df05f60648914e97f7876c4a7c5163e7870dd98fa896ff722 in /usr/local/bin/ "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:58477411d6070ff18d58000c0453ecb014b688000a033b2c881d393eabe81d8c",
                    "sha256:05f52530ca7ba1de0fc93f4d43c9dabc47e18efdf1b886e4d7e533c72b46d443",
                    "sha256:8a096f9852f022c0412024449ae712315cb8ca475d9ce774399e4c6a980d4f7f",
                    "sha256:ae0d33949ef632d2226fcfd61d8672ec465775e68d6d5d0275ef8fdf6902f3d6",
                    "sha256:16be5b07c260631d92d3e3dd84b6f2d2b477a2fadd5fcf8abf880e7cda5cdeb4",
                    "sha256:2b611da0d7fc5aef6742ee50748a26a5c619c91c29cf035d2f12beea7b0eba70",
                    "sha256:ac6ea2586db51c31902c77c10884c200f826116ec5a25f122e2605a51c0c1e6e"
                ]
            }
        },
        "1.10beta1-stretch": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:4cfa4810478bc995c850941d2518d9bd0bc1e01bee76cd0e92b53e63bff9d365",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "ff6a75fade28280215194f2a96340810835c6edae08a7c08a1bcb332650e3a42",
            "container_config": {
                "Hostname": "ff6a75fade28",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ea7c9f4702f94a0df05f60648914e97f7876c4a7c5163e7870dd98fa896ff722 in /usr/local/bin/ "
                ],
                "ArgsEscaped": true,
                "Image": "sha256:4cfa4810478bc995c850941d2518d9bd0bc1e01bee76cd0e92b53e63bff9d365",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2017-12-15T23:57:57.262471782Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2017-12-12T18:33:14.013144132Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ae07a2e0bd59c986cf9cec3d7ce9a3db8f8034bac7b69938557e472980c70cdc in / "
                },
                {
                    "created": "2017-12-12T18:33:14.886942828Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-15T16:14:25.871410553Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-12-15T16:14:42.825890157Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2017-12-15T16:15:58.10225484Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-12-15T23:57:08.90440218Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-12-15T23:57:09.790028065Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10beta1",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-15T23:57:50.98636349Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='ec7a10b5bf147a8e06cf64e27384ff3c6d065c74ebd8fdd31f572714f74a1055' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='32daa257a930ef85ca74bca107d477b3484f0b5ef7cc48086110916368d9c584' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='3a80555b3c4beecfb9af88c718f8676101ada74dea84f4aa1ade29d2d78554e0' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='e0f30e18384e3beae8ce16cc6d095d899e29fb786c57297650acb7727fb3090e' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='b4c7404771b380212277fecc3b9a4f99f9978d024a45d3644c495a469df31ed8' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='bc3c66ab980e782ce52165a3a1572484353904c1b884dbbb87a662776280489d' ;; \t\t*) goRelArch='src'; goRelSha256='841df62b20fd915d83a2e43b7d043c2a3781c299de78abc45480eec575186b6b'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2017-12-15T23:57:52.962135002Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-15T23:57:53.848221615Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-15T23:57:55.61286443Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2017-12-15T23:57:56.356588728Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-15T23:57:57.262471782Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ea7c9f4702f94a0df05f60648914e97f7876c4a7c5163e7870dd98fa896ff722 in /usr/local/bin/ "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:914c8434a9a6742cdb2f4565caa592ee8feb0d743ade998b1b07fc7efe3ed993",
                    "sha256:0986f94886a97d7326c9e8a0da0ff9a6f14bf8abcd23dc5c2412ad32e5e5a4c6",
                    "sha256:7afe2bc40d564e9b7be7e6f6291dc35cc5cbd7d8b397f798e85167b3d9a3c41a",
                    "sha256:a5d9ecfc975a843d03184a5881b0429ba215472a5eb3f45ddd16f5edf408b45f",
                    "sha256:0b4603705e1aec9ca50f3277d0d2f768b1299df6d75e631fbf87da498a39c1b5",
                    "sha256:f7afa213fa4f9d3f44a5d05cc6bc64c4b59ac1d2d738b112f935614eb1e3683a",
                    "sha256:8bf62c8250da58316eb82e31fa9dc4125693b350ab82ed62a04edae8a25649ff",
                    "sha256:f90b483bd4e7e4aad4b77c1b30674fe9847c9b90f32d7028e9e748cb5fc7b508"
                ]
            }
        },
        "1.10beta2-alpine": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10beta2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:5a57cb1cc5d96eefae0add5d44d6ac7674e649ec1dab873eb092cdb97be2d86b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "15d1d4e097c46664303958399028986203b246060ad413081884b38903d07230",
            "container_config": {
                "Hostname": "15d1d4e097c4",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10beta2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ea7c9f4702f94a0df05f60648914e97f7876c4a7c5163e7870dd98fa896ff722 in /usr/local/bin/ "
                ],
                "ArgsEscaped": true,
                "Image": "sha256:5a57cb1cc5d96eefae0add5d44d6ac7674e649ec1dab873eb092cdb97be2d86b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-01-15T20:56:58.699204188Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2017-12-01T18:42:42.17629931Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a6ef3cbbb1c0e5dfc6c3e41d70fd93e548594d9cb42c067e52df46d418c10a79 in / "
                },
                {
                    "created": "2017-12-01T18:42:42.958900633Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2017-12-01T18:42:43.535835924Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-08T20:56:00.152334049Z",
                    "created_by": "/bin/sh -c apk add --no-cache ca-certificates"
                },
                {
                    "created": "2018-01-15T20:54:29.960644283Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10beta2",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-15T20:54:30.559709093Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:05dc434ec17d0f39e5733c78e8250d0f8fb6dddc1c65ff8d43a8a82f38272d32 in /go-alpine-patches/ "
                },
                {
                    "created": "2018-01-15T20:56:54.55770856Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'a77c130eabfdea21fca629276f509b18da925912509903102b49113bc7dede9d *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf /go-alpine-patches; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-01-15T20:56:55.710539984Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-15T20:56:56.229017477Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-15T20:56:57.59961811Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-01-15T20:56:58.108457959Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-15T20:56:58.699204188Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ea7c9f4702f94a0df05f60648914e97f7876c4a7c5163e7870dd98fa896ff722 in /usr/local/bin/ "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:58477411d6070ff18d58000c0453ecb014b688000a033b2c881d393eabe81d8c",
                    "sha256:05f52530ca7ba1de0fc93f4d43c9dabc47e18efdf1b886e4d7e533c72b46d443",
                    "sha256:8a096f9852f022c0412024449ae712315cb8ca475d9ce774399e4c6a980d4f7f",
                    "sha256:4c61071f2a375414a44fab2e967a05ca553eb124722f01e8a4ca714358a1838e",
                    "sha256:8baa16df6e79fac49f32bb05c4047e5b5a7c0ee79f92c90813682806f6f03a64",
                    "sha256:b9ca4c0f4c8e87f8bbda1c6ef2ffcfc82c3c4754d0cd34b947b14229699d87dc",
                    "sha256:799d8ccb4b67042324ecb57de6a3ec0fb5eca702883b5d550caada127067e9dc"
                ]
            }
        },
        "1.10beta2-alpine3.7": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10beta2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:5a57cb1cc5d96eefae0add5d44d6ac7674e649ec1dab873eb092cdb97be2d86b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "15d1d4e097c46664303958399028986203b246060ad413081884b38903d07230",
            "container_config": {
                "Hostname": "15d1d4e097c4",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10beta2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ea7c9f4702f94a0df05f60648914e97f7876c4a7c5163e7870dd98fa896ff722 in /usr/local/bin/ "
                ],
                "ArgsEscaped": true,
                "Image": "sha256:5a57cb1cc5d96eefae0add5d44d6ac7674e649ec1dab873eb092cdb97be2d86b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-01-15T20:56:58.699204188Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2017-12-01T18:42:42.17629931Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a6ef3cbbb1c0e5dfc6c3e41d70fd93e548594d9cb42c067e52df46d418c10a79 in / "
                },
                {
                    "created": "2017-12-01T18:42:42.958900633Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2017-12-01T18:42:43.535835924Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-08T20:56:00.152334049Z",
                    "created_by": "/bin/sh -c apk add --no-cache ca-certificates"
                },
                {
                    "created": "2018-01-15T20:54:29.960644283Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10beta2",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-15T20:54:30.559709093Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:05dc434ec17d0f39e5733c78e8250d0f8fb6dddc1c65ff8d43a8a82f38272d32 in /go-alpine-patches/ "
                },
                {
                    "created": "2018-01-15T20:56:54.55770856Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'a77c130eabfdea21fca629276f509b18da925912509903102b49113bc7dede9d *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf /go-alpine-patches; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-01-15T20:56:55.710539984Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-15T20:56:56.229017477Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-15T20:56:57.59961811Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-01-15T20:56:58.108457959Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-15T20:56:58.699204188Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ea7c9f4702f94a0df05f60648914e97f7876c4a7c5163e7870dd98fa896ff722 in /usr/local/bin/ "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:58477411d6070ff18d58000c0453ecb014b688000a033b2c881d393eabe81d8c",
                    "sha256:05f52530ca7ba1de0fc93f4d43c9dabc47e18efdf1b886e4d7e533c72b46d443",
                    "sha256:8a096f9852f022c0412024449ae712315cb8ca475d9ce774399e4c6a980d4f7f",
                    "sha256:4c61071f2a375414a44fab2e967a05ca553eb124722f01e8a4ca714358a1838e",
                    "sha256:8baa16df6e79fac49f32bb05c4047e5b5a7c0ee79f92c90813682806f6f03a64",
                    "sha256:b9ca4c0f4c8e87f8bbda1c6ef2ffcfc82c3c4754d0cd34b947b14229699d87dc",
                    "sha256:799d8ccb4b67042324ecb57de6a3ec0fb5eca702883b5d550caada127067e9dc"
                ]
            }
        },
        "1.10beta2-stretch": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10beta2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:0f179b452009b7642addcab6d946cffbf6c9f7affe9aada5cc606de9950a2fc5",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "70de5241bf76697aa9974b3b4c037c71a80bad63f007a41eee30987ff3478c57",
            "container_config": {
                "Hostname": "70de5241bf76",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10beta2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ea7c9f4702f94a0df05f60648914e97f7876c4a7c5163e7870dd98fa896ff722 in /usr/local/bin/ "
                ],
                "ArgsEscaped": true,
                "Image": "sha256:0f179b452009b7642addcab6d946cffbf6c9f7affe9aada5cc606de9950a2fc5",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-01-15T20:54:19.461510826Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2017-12-12T18:33:14.013144132Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ae07a2e0bd59c986cf9cec3d7ce9a3db8f8034bac7b69938557e472980c70cdc in / "
                },
                {
                    "created": "2017-12-12T18:33:14.886942828Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-15T16:14:25.871410553Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-12-15T16:14:42.825890157Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2017-12-15T16:15:58.10225484Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-12-15T23:57:08.90440218Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-01-15T20:53:56.348495892Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10beta2",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-15T20:54:14.993862437Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='ab3abb7d731dd5ac7a06d5d5e64ef19946f57d4ce34555d262a87b8899901a93' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='777a59c2b1516598e161c0c5b25809c83fdec3737a0b7f4942c855259d57b3fe' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='2f51e94a227473d41bf3d9dbbdc5855308e64d82fb740a15019bd4fe733c9518' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='4e5bc465a828c88e0e3c6049c58ee735d8ca27a994bc1d709424425cd20cab79' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='ace75d03dc73351320d055535f1f314b7dbd27ab21c7878db27a385b1e00d5b0' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='4d8625f071edd2cb2b16251f23530a43f9ff64db1b6ce080daff0dcc984005da' ;; \t\t*) goRelArch='src'; goRelSha256='a77c130eabfdea21fca629276f509b18da925912509903102b49113bc7dede9d'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-01-15T20:54:16.028490269Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-15T20:54:16.544876621Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-15T20:54:17.940656994Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-01-15T20:54:18.859398967Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-15T20:54:19.461510826Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ea7c9f4702f94a0df05f60648914e97f7876c4a7c5163e7870dd98fa896ff722 in /usr/local/bin/ "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:914c8434a9a6742cdb2f4565caa592ee8feb0d743ade998b1b07fc7efe3ed993",
                    "sha256:0986f94886a97d7326c9e8a0da0ff9a6f14bf8abcd23dc5c2412ad32e5e5a4c6",
                    "sha256:7afe2bc40d564e9b7be7e6f6291dc35cc5cbd7d8b397f798e85167b3d9a3c41a",
                    "sha256:a5d9ecfc975a843d03184a5881b0429ba215472a5eb3f45ddd16f5edf408b45f",
                    "sha256:0b4603705e1aec9ca50f3277d0d2f768b1299df6d75e631fbf87da498a39c1b5",
                    "sha256:5a524010fc6df9a295d21d600ea295bbce6aeea4e4051a5c402e7882e67fdb6d",
                    "sha256:0a7a97ae79cffa29f688ac6735f64b2f810f4370df949e90634779afe8476f4b",
                    "sha256:f1b7c75480e1999f720c00773c61e3b54af760764e7288aff0ab8a20bedcca02"
                ]
            }
        },
        "1.10rc1-alpine": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9228d35defad2c73a8f27ec5f6af6f3120ff35a82780069346ca1ccb1df50018",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "fc76be608243761af1de230f9024d130d182b4a992d8d30afe8258fa49c3ea70",
            "container_config": {
                "Hostname": "fc76be608243",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9228d35defad2c73a8f27ec5f6af6f3120ff35a82780069346ca1ccb1df50018",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-01-26T17:05:15.811359684Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2017-12-01T18:42:42.17629931Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a6ef3cbbb1c0e5dfc6c3e41d70fd93e548594d9cb42c067e52df46d418c10a79 in / "
                },
                {
                    "created": "2017-12-01T18:42:42.958900633Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2017-12-01T18:42:43.535835924Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-08T20:56:00.152334049Z",
                    "created_by": "/bin/sh -c apk add --no-cache ca-certificates"
                },
                {
                    "created": "2018-01-26T17:02:46.576776242Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10rc1",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-26T17:02:47.443424865Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:05dc434ec17d0f39e5733c78e8250d0f8fb6dddc1c65ff8d43a8a82f38272d32 in /go-alpine-patches/ "
                },
                {
                    "created": "2018-01-26T17:05:11.709847285Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '743e97c856067f12fb39f1323d6e9956fb5f3339f0691d8749ecea553548ab03 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf /go-alpine-patches; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-01-26T17:05:12.98634494Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-26T17:05:13.644692523Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-26T17:05:15.20564501Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-01-26T17:05:15.811359684Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:58477411d6070ff18d58000c0453ecb014b688000a033b2c881d393eabe81d8c",
                    "sha256:05f52530ca7ba1de0fc93f4d43c9dabc47e18efdf1b886e4d7e533c72b46d443",
                    "sha256:8a096f9852f022c0412024449ae712315cb8ca475d9ce774399e4c6a980d4f7f",
                    "sha256:ed357e1fa9f8ac879d56bf91131b2c1642c93385d010960ba3497f4c72b65706",
                    "sha256:68aa850973f038c5ba470c93b2a656faac23e9fec916a8905dd68be33156039d",
                    "sha256:7fe33ffd7ce3d83ed1548e054678673d216ca7a0035cef322b23036c2df0a83b"
                ]
            }
        },
        "1.10rc1-alpine3.7": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9228d35defad2c73a8f27ec5f6af6f3120ff35a82780069346ca1ccb1df50018",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "fc76be608243761af1de230f9024d130d182b4a992d8d30afe8258fa49c3ea70",
            "container_config": {
                "Hostname": "fc76be608243",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9228d35defad2c73a8f27ec5f6af6f3120ff35a82780069346ca1ccb1df50018",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-01-26T17:05:15.811359684Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2017-12-01T18:42:42.17629931Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a6ef3cbbb1c0e5dfc6c3e41d70fd93e548594d9cb42c067e52df46d418c10a79 in / "
                },
                {
                    "created": "2017-12-01T18:42:42.958900633Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2017-12-01T18:42:43.535835924Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-08T20:56:00.152334049Z",
                    "created_by": "/bin/sh -c apk add --no-cache ca-certificates"
                },
                {
                    "created": "2018-01-26T17:02:46.576776242Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10rc1",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-26T17:02:47.443424865Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:05dc434ec17d0f39e5733c78e8250d0f8fb6dddc1c65ff8d43a8a82f38272d32 in /go-alpine-patches/ "
                },
                {
                    "created": "2018-01-26T17:05:11.709847285Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '743e97c856067f12fb39f1323d6e9956fb5f3339f0691d8749ecea553548ab03 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf /go-alpine-patches; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-01-26T17:05:12.98634494Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-26T17:05:13.644692523Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-26T17:05:15.20564501Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-01-26T17:05:15.811359684Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:58477411d6070ff18d58000c0453ecb014b688000a033b2c881d393eabe81d8c",
                    "sha256:05f52530ca7ba1de0fc93f4d43c9dabc47e18efdf1b886e4d7e533c72b46d443",
                    "sha256:8a096f9852f022c0412024449ae712315cb8ca475d9ce774399e4c6a980d4f7f",
                    "sha256:ed357e1fa9f8ac879d56bf91131b2c1642c93385d010960ba3497f4c72b65706",
                    "sha256:68aa850973f038c5ba470c93b2a656faac23e9fec916a8905dd68be33156039d",
                    "sha256:7fe33ffd7ce3d83ed1548e054678673d216ca7a0035cef322b23036c2df0a83b"
                ]
            }
        },
        "1.10rc1-stretch": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7e59ec761064542f6b22f9c3b2128b7fac6cd0ea103b88d1f8fce853171fefba",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "6c8629f91b353245473fcc2f53fecc2d27a0b0edb3612c21a2258b760dc2c575",
            "container_config": {
                "Hostname": "6c8629f91b35",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7e59ec761064542f6b22f9c3b2128b7fac6cd0ea103b88d1f8fce853171fefba",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-01-26T17:02:09.303081907Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2017-12-12T18:33:14.013144132Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ae07a2e0bd59c986cf9cec3d7ce9a3db8f8034bac7b69938557e472980c70cdc in / "
                },
                {
                    "created": "2017-12-12T18:33:14.886942828Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-15T16:14:25.871410553Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-12-15T16:14:42.825890157Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2017-12-15T16:15:58.10225484Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-12-15T23:57:08.90440218Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-01-26T17:01:43.996240766Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10rc1",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-26T17:02:05.007776986Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='c10d3cc7760bf3799037bd39027bbffdc568aea21d6fe60fe833373289c7b7c6' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='2c1ed86e3cbf9d9866333b73cee96a0cd0b8c73654f4705088caa64eb5a624d4' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='3a749faf38e80025b832dae250442ddc86d5bc353d752c781ea632e904922ff1' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='03a98cc12b65dde36ed9561fa23530bcf5fa7ed85596aa74f2380f686fcbe928' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='f482c7d6193c23d36657f8f026a74222c82eeb443331c38bbf3493d971144988' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='a20d4077c0bb1d58710e48478ba0042950cf282f6ef1593aea4ac6e66265d22c' ;; \t\t*) goRelArch='src'; goRelSha256='743e97c856067f12fb39f1323d6e9956fb5f3339f0691d8749ecea553548ab03'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-01-26T17:02:06.33909315Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-26T17:02:06.934117582Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-26T17:02:08.61013853Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-01-26T17:02:09.303081907Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:914c8434a9a6742cdb2f4565caa592ee8feb0d743ade998b1b07fc7efe3ed993",
                    "sha256:0986f94886a97d7326c9e8a0da0ff9a6f14bf8abcd23dc5c2412ad32e5e5a4c6",
                    "sha256:7afe2bc40d564e9b7be7e6f6291dc35cc5cbd7d8b397f798e85167b3d9a3c41a",
                    "sha256:a5d9ecfc975a843d03184a5881b0429ba215472a5eb3f45ddd16f5edf408b45f",
                    "sha256:0b4603705e1aec9ca50f3277d0d2f768b1299df6d75e631fbf87da498a39c1b5",
                    "sha256:22abe520babed478f3cf5dc74ece528da3b9630b0ce1b9040fe7fcacb670a8dd",
                    "sha256:bd22b19edd66270f75b7226971195f8cff36486bc3c249377e21dafdc2daa29a"
                ]
            }
        },
        "1.10rc2-alpine": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3c427675c04a75f1343ca26d26be47bd10f389a8917272054c534093e9472782",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "2a934b26f47f861c608a6dfba4708d19de623b0bd166ef529eb0cfefc6cd000f",
            "container_config": {
                "Hostname": "2a934b26f47f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3c427675c04a75f1343ca26d26be47bd10f389a8917272054c534093e9472782",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-02-08T20:57:53.393746326Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2017-12-01T18:42:42.17629931Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a6ef3cbbb1c0e5dfc6c3e41d70fd93e548594d9cb42c067e52df46d418c10a79 in / "
                },
                {
                    "created": "2017-12-01T18:42:42.958900633Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2017-12-01T18:42:43.535835924Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-08T20:56:00.152334049Z",
                    "created_by": "/bin/sh -c apk add --no-cache ca-certificates"
                },
                {
                    "created": "2018-02-08T20:55:26.463050796Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10rc2",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-08T20:55:27.092408772Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:05dc434ec17d0f39e5733c78e8250d0f8fb6dddc1c65ff8d43a8a82f38272d32 in /go-alpine-patches/ "
                },
                {
                    "created": "2018-02-08T20:57:49.517076142Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '360bb3e627cd5308626ebe994be734da9c1c444fb420d10e79082ec110d004f6 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf /go-alpine-patches; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-02-08T20:57:50.823398328Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-08T20:57:51.390551Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-08T20:57:52.86127616Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-02-08T20:57:53.393746326Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:58477411d6070ff18d58000c0453ecb014b688000a033b2c881d393eabe81d8c",
                    "sha256:05f52530ca7ba1de0fc93f4d43c9dabc47e18efdf1b886e4d7e533c72b46d443",
                    "sha256:8a096f9852f022c0412024449ae712315cb8ca475d9ce774399e4c6a980d4f7f",
                    "sha256:8ca595d551e2ca20dfe8abea8e048fe05d4d5f48492df3a0a3375baa7c079e67",
                    "sha256:fe119502e4177f72e6a514fccb7e80824a227a8fc648b37f2a24ce14f414d439",
                    "sha256:3eb72f5f0427976eadcaf3e0ef2894d1d9ed96af0564e65b11c2f5959ffa7493"
                ]
            }
        },
        "1.10rc2-alpine3.7": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3c427675c04a75f1343ca26d26be47bd10f389a8917272054c534093e9472782",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "2a934b26f47f861c608a6dfba4708d19de623b0bd166ef529eb0cfefc6cd000f",
            "container_config": {
                "Hostname": "2a934b26f47f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3c427675c04a75f1343ca26d26be47bd10f389a8917272054c534093e9472782",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-02-08T20:57:53.393746326Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2017-12-01T18:42:42.17629931Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a6ef3cbbb1c0e5dfc6c3e41d70fd93e548594d9cb42c067e52df46d418c10a79 in / "
                },
                {
                    "created": "2017-12-01T18:42:42.958900633Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2017-12-01T18:42:43.535835924Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-08T20:56:00.152334049Z",
                    "created_by": "/bin/sh -c apk add --no-cache ca-certificates"
                },
                {
                    "created": "2018-02-08T20:55:26.463050796Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10rc2",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-08T20:55:27.092408772Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:05dc434ec17d0f39e5733c78e8250d0f8fb6dddc1c65ff8d43a8a82f38272d32 in /go-alpine-patches/ "
                },
                {
                    "created": "2018-02-08T20:57:49.517076142Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '360bb3e627cd5308626ebe994be734da9c1c444fb420d10e79082ec110d004f6 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf /go-alpine-patches; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-02-08T20:57:50.823398328Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-08T20:57:51.390551Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-08T20:57:52.86127616Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-02-08T20:57:53.393746326Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:58477411d6070ff18d58000c0453ecb014b688000a033b2c881d393eabe81d8c",
                    "sha256:05f52530ca7ba1de0fc93f4d43c9dabc47e18efdf1b886e4d7e533c72b46d443",
                    "sha256:8a096f9852f022c0412024449ae712315cb8ca475d9ce774399e4c6a980d4f7f",
                    "sha256:8ca595d551e2ca20dfe8abea8e048fe05d4d5f48492df3a0a3375baa7c079e67",
                    "sha256:fe119502e4177f72e6a514fccb7e80824a227a8fc648b37f2a24ce14f414d439",
                    "sha256:3eb72f5f0427976eadcaf3e0ef2894d1d9ed96af0564e65b11c2f5959ffa7493"
                ]
            }
        },
        "1.10rc2-stretch": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:eb90a921232e7a436479e83212b09835ea72aeef680a29cf6e66dffbdd435df1",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "e3cf216fbdcd0173c7b8e7a91d94b3320be9e26a72dd844e145a345820b8d725",
            "container_config": {
                "Hostname": "e3cf216fbdcd",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:eb90a921232e7a436479e83212b09835ea72aeef680a29cf6e66dffbdd435df1",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-02-16T05:35:53.04073377Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-02-15T18:29:04.419292985Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f17659d511330c9a9c3fadf05151f88e9d532af1734ffadd1da10aa5e2aeb6ac in / "
                },
                {
                    "created": "2018-02-15T18:29:05.327820659Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-15T19:49:33.38177432Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-02-15T19:49:57.081817385Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-02-15T19:51:28.989092693Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-02-16T05:35:27.499078725Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-02-16T05:35:28.494682895Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10rc2",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-16T05:35:48.848087737Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='6a6a4c0654bc603bcfee4d6ac34a479c260ac61b3edcc8d6773384eb0bda512e' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='aa145c2a9736cbcb39b9340182c319f7fc0ab3d0f2156d7dfd722572f4da519b' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='dfa7fbe299b3766b94fb4bc231db4330b9860c44a57274f6a0d418bf00eccbc8' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='18832b97cdc2f21783ac60fc0136f25c19d39b7cc43459f5114dd62c0a212fe4' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='21a6e64c83df9f124993901dda2ec608640e97a13f50cf5a58f518651b576fd8' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='7d3aa6ec3a761b328e093b51ca14dbb8a8000685bb8957dbab44b4bb3b1d76e7' ;; \t\t*) goRelArch='src'; goRelSha256='360bb3e627cd5308626ebe994be734da9c1c444fb420d10e79082ec110d004f6'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-02-16T05:35:49.962675564Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-16T05:35:50.945997294Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-16T05:35:52.481945257Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-02-16T05:35:53.04073377Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:33a219683f24f66dc0fd0f2ca4051a4424753bda47ce5e7373c61c3154279217",
                    "sha256:e752cc5b8e27d5f2fb3e2acde17e9c56ff59155b3bbb74be35315c8e56811c3f",
                    "sha256:cc4ea6ab1561cef004e1e0632b1dcb761ac33732dc16f0cb19261bdb0c2d734b",
                    "sha256:51e4dd9ea6ce38724745e667d7109ad24affeb789eeffe5c05e8b2830dfce0da",
                    "sha256:fa3b61d217536928a0218986253b7470c48413c3a52cc64e112c7aa37bbadf4a",
                    "sha256:ca7869604518718435f53809d3b8d84ffb15300abe9c96facfb890a0f1133788",
                    "sha256:1b7389ff969949eb77c692480bb9bd2fa77e2fb8b544b9171f101f7fcb9b5772"
                ]
            }
        },
        "1.11-alpine": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:90cabe594841bbbbebe7fb2944ff7f7242217bf7aaed05baca26824c6a1e53cc",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "8b41cdcb932128859c744c60b0a25940f5150613e169aa32232be5553f65b3f9",
            "container_config": {
                "Hostname": "8b41cdcb9321",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:90cabe594841bbbbebe7fb2944ff7f7242217bf7aaed05baca26824c6a1e53cc",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-20T21:03:02.82490096Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-20T20:39:38.405945347Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:34737804ba78554795d5bcc75621595f8cc3d5b5887887d34e0e021b78e330b7 in / "
                },
                {
                    "created": "2019-08-20T20:39:38.821174355Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T20:56:21.289256818Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-08-20T20:56:22.869691367Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-08-20T21:01:13.132766596Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.13",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:02:58.626855674Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '5032095fd3f641cafcce164f551e5ae873785ce7b07ca7c143aecd18f7ba4076 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-20T21:03:00.601748042Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:03:01.034695368Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:03:02.397268239Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-20T21:03:02.82490096Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5e0d8111135538b8a86ce5fc969849efce16c455fd016bb3dc53131bcedc4da5",
                    "sha256:e3275698b6646fa0bbb59a0c5bcb22674d2098952d972968752905ca92f4c6c7",
                    "sha256:88ee3bd19f4a271e93edadba95c10387ef28c86ebb20c2b2373dad5741bffb77",
                    "sha256:691a036064d9e2793efcd9b20bf6653257fb228d63f099abbdcd6193c5e85689",
                    "sha256:991d8a97e0eeafca9309bd72a6cfc720606adfe26617319ca76629679b1af29e"
                ]
            }
        },
        "1.11-alpine3.10": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:90cabe594841bbbbebe7fb2944ff7f7242217bf7aaed05baca26824c6a1e53cc",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "8b41cdcb932128859c744c60b0a25940f5150613e169aa32232be5553f65b3f9",
            "container_config": {
                "Hostname": "8b41cdcb9321",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:90cabe594841bbbbebe7fb2944ff7f7242217bf7aaed05baca26824c6a1e53cc",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-20T21:03:02.82490096Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-20T20:39:38.405945347Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:34737804ba78554795d5bcc75621595f8cc3d5b5887887d34e0e021b78e330b7 in / "
                },
                {
                    "created": "2019-08-20T20:39:38.821174355Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T20:56:21.289256818Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-08-20T20:56:22.869691367Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-08-20T21:01:13.132766596Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.13",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:02:58.626855674Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '5032095fd3f641cafcce164f551e5ae873785ce7b07ca7c143aecd18f7ba4076 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-20T21:03:00.601748042Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:03:01.034695368Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:03:02.397268239Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-20T21:03:02.82490096Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5e0d8111135538b8a86ce5fc969849efce16c455fd016bb3dc53131bcedc4da5",
                    "sha256:e3275698b6646fa0bbb59a0c5bcb22674d2098952d972968752905ca92f4c6c7",
                    "sha256:88ee3bd19f4a271e93edadba95c10387ef28c86ebb20c2b2373dad5741bffb77",
                    "sha256:691a036064d9e2793efcd9b20bf6653257fb228d63f099abbdcd6193c5e85689",
                    "sha256:991d8a97e0eeafca9309bd72a6cfc720606adfe26617319ca76629679b1af29e"
                ]
            }
        },
        "1.11-alpine3.7": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3ba44ac502b7cd8dc3aa058d72c8c7fd3a94cf6459f052fae71ff9d11596aea2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "93d4e65a4385e60c7f21be3e8df08fcee63fc775100ae5c13a553ad7471b9355",
            "container_config": {
                "Hostname": "93d4e65a4385",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3ba44ac502b7cd8dc3aa058d72c8c7fd3a94cf6459f052fae71ff9d11596aea2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-01-25T09:34:03.02276993Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2018-12-21T09:42:47.616920457Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7278e4df49d628c2bbb27c53665e671f57cd2db003e030b1be93eb81c5d28303 in / "
                },
                {
                    "created": "2018-12-21T09:42:48.140920422Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a10c133d8d5e9af3a9a1610709d3ed2f85b1507f1ba5745ac12bb495974e3fe6 in /etc/localtime "
                },
                {
                    "created": "2018-12-21T09:42:48.640087564Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T10:14:45.27493224Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-12-21T10:14:47.648984863Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-01-25T09:29:33.433290364Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.5",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-25T09:33:55.799230273Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'bc1ef02bb1668835db1390a2e478dcbccb5dd16911691af9d75184bbe5aa943e *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-01-25T09:33:57.679503632Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-25T09:33:58.689118974Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-25T09:34:02.036443359Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-01-25T09:34:03.02276993Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0376dca82a151dba64ed0b4492d714c7ebc6825e0138daded841bdb43996ab9e",
                    "sha256:d1ebf0a8b65281fbaac5f61a75ba9179c66ceb134610fd069e071357b61e531f",
                    "sha256:6532a6eb4787b26dd63f27fa3b33349c06774803b6f5f006701b9093b3183351",
                    "sha256:ab5180a942db0a82a751476b2480ee156ccd89448e7122a9b1c2f22570b0e5be",
                    "sha256:81e57ad2f67a9a8e97cd6ee673290e5e7b0e4e2ec15c1fb3b75fa13e2ebb0084",
                    "sha256:0ead02f1795fe09a94be316089d61f6ca1a32845a47d7cff8e2589a4ae4a391b"
                ]
            }
        },
        "1.11-alpine3.8": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:20e93af14363f80ebd7a1e95bc9195ac85a25c33e67ca8fd01abac086c61ca4c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "c7dfb2852ea82a423defefe90613f892136dd93e5792a5e679e964efe42b26a7",
            "container_config": {
                "Hostname": "c7dfb2852ea8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:20e93af14363f80ebd7a1e95bc9195ac85a25c33e67ca8fd01abac086c61ca4c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-06-19T22:05:34.481624612Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-06-19T20:39:56.340043479Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bcdcef68213641766a211b02ac762b03c21a178b3ed03c4480cc736abd97b50c in / "
                },
                {
                    "created": "2019-06-19T20:39:56.804685472Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-19T22:03:41.368842306Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-06-19T22:03:42.705276243Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-06-19T22:03:43.089914573Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.11",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-19T22:05:25.355066479Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '1fff7c33ef2522e6dfaf6ab96ec4c2a8b76d018aae6fc88ce2bd40f2202d0f8c *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-06-19T22:05:30.322028457Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-19T22:05:30.937017066Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-19T22:05:33.885738536Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-06-19T22:05:34.481624612Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:11ef7eb924077338758ae26b531c652b6d81d8d46df77eb6a8a00feda53bf7b8",
                    "sha256:a26597083206e1d1439f9436d5982a803faccf07f3d7158c5c4d819a7f85bd82",
                    "sha256:b1179a3085ac63f4deac76e57c2fe97d19b15609dfd9d9b1ba136e271d1e39cd",
                    "sha256:31e2012ebfefcbb9697c05850b999b67351c9f31e48f8ed66ac5aa8f12d3300f",
                    "sha256:13282a5be54b2a3debb3e6cabb53396ded700adfb2a30bcbd2f0cfa16d6e5861"
                ]
            }
        },
        "1.11-alpine3.9": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:80f920421d51f44a2968910b855c5f6b635e54177e5b309796dbee730f51bd2f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "ced3075f19d191140185f4babdffce06fe0dced40a40ae7de9adec90ebbe4765",
            "container_config": {
                "Hostname": "ced3075f19d1",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:80f920421d51f44a2968910b855c5f6b635e54177e5b309796dbee730f51bd2f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-13T22:41:16.666458376Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-06-19T20:39:47.282820492Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:66f49017dd7ba295602526dbf210046e47fd097298c17a3f268a47487b5b6379 in / "
                },
                {
                    "created": "2019-06-19T20:39:47.636619987Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-19T20:56:05.137314338Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-06-19T20:56:06.515114234Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-08-13T22:39:26.700898212Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.13",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-13T22:41:11.828449254Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '5032095fd3f641cafcce164f551e5ae873785ce7b07ca7c143aecd18f7ba4076 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-13T22:41:14.001654954Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-13T22:41:14.450192778Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-13T22:41:16.184594679Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-13T22:41:16.666458376Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6d626da635fcff8a8485691ff0156105a5fe75675870a779f0093a6aedce13f7",
                    "sha256:7a151b0f5372ba7688803bb1a0385aeaaa51dff30ded9d13bb0bd0253833077a",
                    "sha256:8ab68ccf1104e218ce48cf2fe4058a7f3d88d4cfb0a5c6500a59aadb616bd88c",
                    "sha256:c19f7b903630c79f1b6ac74d870519fbe65f3fd2f3f8dd0f413fe7608debbc4a",
                    "sha256:82c5bc86b1fc451c11060b358c2e4d6fc35c46bd28aad6ee04d67c8d5c03702d"
                ]
            }
        },
        "1.11-buster": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d14170edcc42962204dc3a9d86cbf26b001553781bfda8bf15bf81647e36cb6a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "df122d02fec5f852ba6ff8d2fb773a14a153b5ed36f30fa707675594002bcf8e",
            "container_config": {
                "Hostname": "df122d02fec5",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d14170edcc42962204dc3a9d86cbf26b001553781bfda8bf15bf81647e36cb6a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-14T21:07:02.691124121Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-14T00:40:44.249210056Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f63b119fbe465bf5c6ca8b15f40bc0103b3e00d68628a80d1025b38e536a46b7 in / "
                },
                {
                    "created": "2019-08-14T00:40:45.352575059Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T02:30:03.501985656Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T02:30:14.635808353Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-08-14T02:30:48.715930266Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T21:04:50.976650827Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T21:06:44.505538547Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.13",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T21:06:56.219019111Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='50fe8e13592f8cf22304b9c4adfc11849a2c3d281b1d7e09c924ae24874c6daa' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='513eb46158917662e1588cb89f51d11839730e46847778646c36c69c687bfdc5' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='e94329c97b38b5bffe9c18e84e9f521dc995e02df7696897a7626293da9ac593' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='282e20167a7aaaba7b23de980696e1944a004efd0079e80d675d66b263ef595b' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='ad3c7397ddd41a5af9d9bf3c560d3d0f8c1bdef4ac4d21819a021ea88e25efca' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='bd00bd27e641450f165a37a83f1e83a4ef3c626ef5675b77184e9c0147257657' ;; \t\t*) goRelArch='src'; goRelSha256='5032095fd3f641cafcce164f551e5ae873785ce7b07ca7c143aecd18f7ba4076'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-14T21:07:00.773187016Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T21:07:01.088969288Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T21:07:02.353371144Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-14T21:07:02.691124121Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0a3fa153264b693d6d10457dc58b433dca1828a88c52750c2227f5926d15d737",
                    "sha256:f54065b956ab8a66f19f7e4e8ecd9104fa17c2e2580df52324c517cd33136df1",
                    "sha256:008074a8f55cf42e163cbb663d9647c6c03616ed7793f9ebd08602f01fa71a29",
                    "sha256:c1e303518b8e8e76f012f7b30cec7577595ef108919b05d67a6b891853ea21f9",
                    "sha256:a068c344f31fa4e9303790b3f06c8920f05871dc7df660370ac2cd0b318db5a3",
                    "sha256:4fbadb27a6017b59ee2e2c03040c8fe6dce1df2cec8ab6b3d0d6b64500ce7770",
                    "sha256:a1a752beb24698b8cc8d55f1c9927ca825092ea6d0c45db20e61bbc206e4352f"
                ]
            }
        },
        "1.11-rc-alpine": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c7e5d0e2c6d67ba3b36dd2ba9ef0eb6f852a12770e55c169bd6b988ece80ca8a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "f3f0b93795ae717e23446ea41997a720b6ebf0f7db6e946031fa387795a0283a",
            "container_config": {
                "Hostname": "f3f0b93795ae",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c7e5d0e2c6d67ba3b36dd2ba9ef0eb6f852a12770e55c169bd6b988ece80ca8a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-08-24T01:31:20.622760011Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-06T08:41:03.043896054Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:199a5a48bddabaf1f649f58f3b17c323a1aa1a50e939dfdea3542e4041e91b7b in / "
                },
                {
                    "created": "2018-07-06T08:41:03.994573726Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2018-07-06T08:41:04.672265132Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-13T08:41:59.008156316Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-07-13T08:42:00.758228253Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-08-24T01:28:21.267808599Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11rc2",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-24T01:31:14.608954513Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '5947695c5289ddb6ddc22d01d498b94ddb86bb6775593d772156c4e72a482516 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf \t\t/go-alpine-patches \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-08-24T01:31:16.416231551Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-24T01:31:17.43117356Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-24T01:31:19.818522178Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-08-24T01:31:20.622760011Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd0a9a09f5aaebcb67aa6d173252640c31eecded3c0aee8bcf89b9f307fad7d2",
                    "sha256:b43ad2345ba516d8bf2087e0906db76bdb5fbd45c1e9e314afd0c3a8e9f13ea2",
                    "sha256:23510302cbd3bbd8afeeb07264fc540619e3f48d3ab6cc4c4d72e48a1f219cc0",
                    "sha256:5f136df344f25339e7ce78dbaa7371742167fd1a857cfdd33b2fa59a431e182e",
                    "sha256:0736710ed225ee0f7842f4effa8a995b990541481fc3037d7742aac21fdef9c2",
                    "sha256:dc05bea48fc23f710a43e2df29d7d6a7e2c04d1445a65bbb2f0e41c9d769dec8"
                ]
            }
        },
        "1.11-rc-alpine3.7": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a9b2791640139b71a12becfca305a1d3baabf82c0c7230804bed74eb3cc1bdb8",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "10ffdef3abf3a21488e34ef58c932613a24169a2886a464f56a6636399217115",
            "container_config": {
                "Hostname": "10ffdef3abf3",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a9b2791640139b71a12becfca305a1d3baabf82c0c7230804bed74eb3cc1bdb8",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-08-24T01:35:21.206389866Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2017-12-01T18:42:42.17629931Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a6ef3cbbb1c0e5dfc6c3e41d70fd93e548594d9cb42c067e52df46d418c10a79 in / "
                },
                {
                    "created": "2017-12-01T18:42:42.958900633Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2017-12-01T18:42:43.535835924Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-28T07:00:41.641030657Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2017-12-28T07:00:43.273265682Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-08-24T01:32:03.221584724Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11rc2",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-24T01:35:07.90282347Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '5947695c5289ddb6ddc22d01d498b94ddb86bb6775593d772156c4e72a482516 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf \t\t/go-alpine-patches \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-08-24T01:35:17.606144426Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-24T01:35:18.48251476Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-24T01:35:20.379988283Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-08-24T01:35:21.206389866Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:58477411d6070ff18d58000c0453ecb014b688000a033b2c881d393eabe81d8c",
                    "sha256:05f52530ca7ba1de0fc93f4d43c9dabc47e18efdf1b886e4d7e533c72b46d443",
                    "sha256:629a3191dada1a2e74de36174ddfd8fe56670e4538b5d0e5419286736609a13e",
                    "sha256:a8406382f5f096df763032c41e2b49ea3a53d52a786a372ecc0529a2de6a1b50",
                    "sha256:f7d2f47942d301faad9f60b2c866f7ebad89769f15c6fbdf81aeadfd57702aa1",
                    "sha256:571414d6778bbd053aa1c98dea4ae04e16523acb2871f2d17f9cc46bb3ac9a76"
                ]
            }
        },
        "1.11-rc-alpine3.8": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c7e5d0e2c6d67ba3b36dd2ba9ef0eb6f852a12770e55c169bd6b988ece80ca8a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "f3f0b93795ae717e23446ea41997a720b6ebf0f7db6e946031fa387795a0283a",
            "container_config": {
                "Hostname": "f3f0b93795ae",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c7e5d0e2c6d67ba3b36dd2ba9ef0eb6f852a12770e55c169bd6b988ece80ca8a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-08-24T01:31:20.622760011Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-06T08:41:03.043896054Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:199a5a48bddabaf1f649f58f3b17c323a1aa1a50e939dfdea3542e4041e91b7b in / "
                },
                {
                    "created": "2018-07-06T08:41:03.994573726Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2018-07-06T08:41:04.672265132Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-13T08:41:59.008156316Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-07-13T08:42:00.758228253Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-08-24T01:28:21.267808599Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11rc2",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-24T01:31:14.608954513Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '5947695c5289ddb6ddc22d01d498b94ddb86bb6775593d772156c4e72a482516 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf \t\t/go-alpine-patches \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-08-24T01:31:16.416231551Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-24T01:31:17.43117356Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-24T01:31:19.818522178Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-08-24T01:31:20.622760011Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd0a9a09f5aaebcb67aa6d173252640c31eecded3c0aee8bcf89b9f307fad7d2",
                    "sha256:b43ad2345ba516d8bf2087e0906db76bdb5fbd45c1e9e314afd0c3a8e9f13ea2",
                    "sha256:23510302cbd3bbd8afeeb07264fc540619e3f48d3ab6cc4c4d72e48a1f219cc0",
                    "sha256:5f136df344f25339e7ce78dbaa7371742167fd1a857cfdd33b2fa59a431e182e",
                    "sha256:0736710ed225ee0f7842f4effa8a995b990541481fc3037d7742aac21fdef9c2",
                    "sha256:dc05bea48fc23f710a43e2df29d7d6a7e2c04d1445a65bbb2f0e41c9d769dec8"
                ]
            }
        },
        "1.11-rc-stretch": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c267e0c9f5e8c3f98b19fbd8cc30fc8fb3b1b22850fd941ad0a0a5d60275be6f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "32c057ba6a3aec780ae96575324f015c904511f2a3f7fd370a3b9f3632e0c401",
            "container_config": {
                "Hostname": "32c057ba6a3a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c267e0c9f5e8c3f98b19fbd8cc30fc8fb3b1b22850fd941ad0a0a5d60275be6f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-08-24T01:27:51.505943655Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-17T08:47:22.828630475Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5e1a1aab339b0b1e3047eeab5d0c6c74ad3f388d0407dc86f41e4a78b99c6fd8 in / "
                },
                {
                    "created": "2018-07-17T08:47:23.896565687Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-17T14:51:45.703478382Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T14:52:06.204758622Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-07-17T14:54:31.796008203Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-18T04:25:05.968811446Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-08-24T01:27:13.648703464Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11rc2",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-24T01:27:45.418390429Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='7d3fc1dec64b056cbd22ffd80bb9733725c1296aabfd58cc92bab8a5c6560e03' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='502272db03f6c6883fec5c9e17730b469966d87f9c07e6a306637ddf0fe83526' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='5b160c1ea4c863f82d5d9ebad51edc08f5a5ecf368d315c8aff2c99420fb075c' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='a1982f3af77875c1e8f7c5056ce815236a62902472aceb95fc66e47555d88010' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='d58470aa1e79282b35f7b61cb8d1ac3f0cbecd6d837076795a30003c947feef2' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='85f56c3847eb1ba6b1faf14869671b6d7c31d5ef0082dc1c32a2c53a5e831c76' ;; \t\t*) goRelArch='src'; goRelSha256='5947695c5289ddb6ddc22d01d498b94ddb86bb6775593d772156c4e72a482516'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-08-24T01:27:47.454474731Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-24T01:27:48.482104336Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-24T01:27:50.591190831Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-08-24T01:27:51.505943655Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:16815f59abc025030807119ef7ffa046ee88fd26cdca83380d6c7219cc1edae1",
                    "sha256:aeecc946906a50c3609d4615bddd5c132bfa5635f13a744e00cfbc0b66599d5d",
                    "sha256:b4d644f97489f0d15f730d48a24c0db08df74b12f72cedd5e7817638a471d92e",
                    "sha256:21fdf2fa41bb0abb9ae8d1b156d64a219ef332b120b2269f46cd422a8db9c379",
                    "sha256:2c1c91db38b25521158d58cd715dad770ce969a9792b32ac6fa5379f56383012",
                    "sha256:6d027178f5b2e257c4ce9f22183077f3e8a38315dc36b7457634c27bf76f4d66",
                    "sha256:ad99dfff9c0fcd0848113f6ecf6eb3d475b8f48191862f53bbccab2ebfda22ba"
                ]
            }
        },
        "1.11-stretch": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1bdfaa9e5fe40e07867ca8cd19abacf6ec0368ebf9185f8172608949c2645dd4",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "57986c3568cf7093201b04b44a54ecffc3a46466bb2dc9497bfeda350df0aafd",
            "container_config": {
                "Hostname": "57986c3568cf",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1bdfaa9e5fe40e07867ca8cd19abacf6ec0368ebf9185f8172608949c2645dd4",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-14T21:07:28.837038197Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-14T00:42:54.654151163Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:705744f1d46153f7b1e4e803e92a622e76091e0c7812e893ccadf4c3fa3f7582 in / "
                },
                {
                    "created": "2019-08-14T00:42:55.660620236Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T02:36:32.143422133Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T02:36:41.125736825Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-08-14T02:37:15.501343277Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T21:06:06.757228386Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T21:07:09.433707389Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.13",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T21:07:23.083593724Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='50fe8e13592f8cf22304b9c4adfc11849a2c3d281b1d7e09c924ae24874c6daa' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='513eb46158917662e1588cb89f51d11839730e46847778646c36c69c687bfdc5' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='e94329c97b38b5bffe9c18e84e9f521dc995e02df7696897a7626293da9ac593' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='282e20167a7aaaba7b23de980696e1944a004efd0079e80d675d66b263ef595b' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='ad3c7397ddd41a5af9d9bf3c560d3d0f8c1bdef4ac4d21819a021ea88e25efca' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='bd00bd27e641450f165a37a83f1e83a4ef3c626ef5675b77184e9c0147257657' ;; \t\t*) goRelArch='src'; goRelSha256='5032095fd3f641cafcce164f551e5ae873785ce7b07ca7c143aecd18f7ba4076'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-14T21:07:26.956984071Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T21:07:27.285045882Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T21:07:28.469163479Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-14T21:07:28.837038197Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6041800a8d9dd17ab84273c9e9c4655f98e80b0fdced98bc32f88ca2f13172e5",
                    "sha256:dced789b8bda47eb3ae32f98cd396f9336aee529a7866b5c77393ac799c1fd0a",
                    "sha256:67ec7ff41bc528f6b991d15c3f5c6d5ffb81d5ee231e6dd4f124c6d14fb71e37",
                    "sha256:03a48aa962bc7c95d3d16cbe9c14fc7d040bfc094a5c4486525d5a9614e0a043",
                    "sha256:25c6cc004c6cec11647130fdb25fcd3a6d90b436a89c66b6d36a35a74527eff6",
                    "sha256:f1da248683661cfebfc2db258b42d765b0ab614a2f5cc67362d58e8194acb1c3",
                    "sha256:91483d98ebb0f5a5097507258e2bf4010fdb0e9cd6f31b4123a70443f78aa0a9"
                ]
            }
        },
        "1.11.0-alpine": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1300652b9a218743ce06132c95d5bfeb0da09e78892a15ffb8a7ebbd0d9ce03a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "102b13230f5dfc67bceef86c04569d5476d14d36f8fa9a6a21e03734247bb90d",
            "container_config": {
                "Hostname": "102b13230f5d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1300652b9a218743ce06132c95d5bfeb0da09e78892a15ffb8a7ebbd0d9ce03a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-08-27T22:26:40.647096205Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-06T08:41:03.043896054Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:199a5a48bddabaf1f649f58f3b17c323a1aa1a50e939dfdea3542e4041e91b7b in / "
                },
                {
                    "created": "2018-07-06T08:41:03.994573726Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2018-07-06T08:41:04.672265132Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-13T08:41:59.008156316Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-07-13T08:42:00.758228253Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-08-27T22:23:57.945779604Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-27T22:26:35.62866495Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'afc1e12f5fe49a471e3aae7d906c73e9d5b1fdd36d52d72652dde8f6250152fb *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-08-27T22:26:37.694979237Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-27T22:26:38.363328688Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-27T22:26:39.959413986Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-08-27T22:26:40.647096205Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd0a9a09f5aaebcb67aa6d173252640c31eecded3c0aee8bcf89b9f307fad7d2",
                    "sha256:b43ad2345ba516d8bf2087e0906db76bdb5fbd45c1e9e314afd0c3a8e9f13ea2",
                    "sha256:23510302cbd3bbd8afeeb07264fc540619e3f48d3ab6cc4c4d72e48a1f219cc0",
                    "sha256:5f136df344f25339e7ce78dbaa7371742167fd1a857cfdd33b2fa59a431e182e",
                    "sha256:9fae4b2149bea1d13b782957d7f0d515b483ffd92f466363589e213d3508beb7",
                    "sha256:56690ca4a1d31cd4cc39295b9eeca225d747e2f66094b16b8b6ae825fcece578"
                ]
            }
        },
        "1.11.0-alpine3.7": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c8ed25cc8bf3fa320bd56d52da646e2e33f285f0999c734cb133e9bfefa884ba",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "101e7697a9b4097c31b29ca42aa4125712d350968d23920ed5e66acb680fcd67",
            "container_config": {
                "Hostname": "101e7697a9b4",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c8ed25cc8bf3fa320bd56d52da646e2e33f285f0999c734cb133e9bfefa884ba",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-08-27T22:29:46.294044254Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2017-12-01T18:42:42.17629931Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a6ef3cbbb1c0e5dfc6c3e41d70fd93e548594d9cb42c067e52df46d418c10a79 in / "
                },
                {
                    "created": "2017-12-01T18:42:42.958900633Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2017-12-01T18:42:43.535835924Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-28T07:00:41.641030657Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2017-12-28T07:00:43.273265682Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-08-27T22:27:05.428652897Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-27T22:29:42.164286188Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'afc1e12f5fe49a471e3aae7d906c73e9d5b1fdd36d52d72652dde8f6250152fb *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-08-27T22:29:43.403646152Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-27T22:29:44.012000738Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-27T22:29:45.624740351Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-08-27T22:29:46.294044254Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:58477411d6070ff18d58000c0453ecb014b688000a033b2c881d393eabe81d8c",
                    "sha256:05f52530ca7ba1de0fc93f4d43c9dabc47e18efdf1b886e4d7e533c72b46d443",
                    "sha256:629a3191dada1a2e74de36174ddfd8fe56670e4538b5d0e5419286736609a13e",
                    "sha256:a8406382f5f096df763032c41e2b49ea3a53d52a786a372ecc0529a2de6a1b50",
                    "sha256:6fc07c29d067f2c233152a9dcd764ab3c557f9a9a8c3bc0da1e0fa6d87b2ed69",
                    "sha256:a78062e3c1ca73973b455379a391a0b0da7491349da3f45341a8bd329eefccd7"
                ]
            }
        },
        "1.11.0-alpine3.8": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1300652b9a218743ce06132c95d5bfeb0da09e78892a15ffb8a7ebbd0d9ce03a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "102b13230f5dfc67bceef86c04569d5476d14d36f8fa9a6a21e03734247bb90d",
            "container_config": {
                "Hostname": "102b13230f5d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1300652b9a218743ce06132c95d5bfeb0da09e78892a15ffb8a7ebbd0d9ce03a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-08-27T22:26:40.647096205Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-06T08:41:03.043896054Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:199a5a48bddabaf1f649f58f3b17c323a1aa1a50e939dfdea3542e4041e91b7b in / "
                },
                {
                    "created": "2018-07-06T08:41:03.994573726Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2018-07-06T08:41:04.672265132Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-13T08:41:59.008156316Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-07-13T08:42:00.758228253Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-08-27T22:23:57.945779604Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-27T22:26:35.62866495Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'afc1e12f5fe49a471e3aae7d906c73e9d5b1fdd36d52d72652dde8f6250152fb *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-08-27T22:26:37.694979237Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-27T22:26:38.363328688Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-27T22:26:39.959413986Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-08-27T22:26:40.647096205Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd0a9a09f5aaebcb67aa6d173252640c31eecded3c0aee8bcf89b9f307fad7d2",
                    "sha256:b43ad2345ba516d8bf2087e0906db76bdb5fbd45c1e9e314afd0c3a8e9f13ea2",
                    "sha256:23510302cbd3bbd8afeeb07264fc540619e3f48d3ab6cc4c4d72e48a1f219cc0",
                    "sha256:5f136df344f25339e7ce78dbaa7371742167fd1a857cfdd33b2fa59a431e182e",
                    "sha256:9fae4b2149bea1d13b782957d7f0d515b483ffd92f466363589e213d3508beb7",
                    "sha256:56690ca4a1d31cd4cc39295b9eeca225d747e2f66094b16b8b6ae825fcece578"
                ]
            }
        },
        "1.11.0-stretch": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c4f0c570aa267d3b9a54d88bb5c98ca6ca9517ff81333dc9b15c27305f1bf484",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "5d18325be0f5637b7442acadd5355864cc9eea00f0ece97ae822b3168d4bec04",
            "container_config": {
                "Hostname": "5d18325be0f5",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c4f0c570aa267d3b9a54d88bb5c98ca6ca9517ff81333dc9b15c27305f1bf484",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-09-05T23:14:02.794733368Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-09-05T08:50:16.671677356Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4e01bc399974f6fe22cd2b4421c2e52c52380aa00a770986939071dbc59d734e in / "
                },
                {
                    "created": "2018-09-05T08:50:30.416591031Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-05T10:02:26.695588914Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-09-05T10:02:44.072034996Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-09-05T10:04:41.595436139Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-09-05T23:12:57.470897776Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-09-05T23:13:09.10078355Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-05T23:13:28.415740619Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='b3fcf280ff86558e0559e185b601c9eade0fd24c900b4c63cd14d1d38613e499' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='8ffeb3577d8ca5477064f1cb8739835973c866487f2bf81df1227eaa96826acd' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='e4853168f41d0bea65e4d38f992a2d44b58552605f623640c5ead89d515c56c9' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='1a91932b65b4af2f84ef2dce10d790e6a0d3d22c9ea1bdf3d8c4d9279dfa680e' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='e874d617f0e322f8c2dda8c23ea3a2ea21d5dfe7177abb1f8b6a0ac7cd653272' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='c113495fbb175d6beb1b881750de1dd034c7ae8657c30b3de8808032c9af0a15' ;; \t\t*) goRelArch='src'; goRelSha256='afc1e12f5fe49a471e3aae7d906c73e9d5b1fdd36d52d72652dde8f6250152fb'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-09-05T23:13:39.760897464Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-05T23:13:40.509431575Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-05T23:13:42.328084923Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-09-05T23:14:02.794733368Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8113639d1dbf24c8eea540ca8e4b44be058cea66606768986d2c0668cf86cf0e",
                    "sha256:348dde5dcd7e932ab3350ede49986645abe4c1fac26dfefdebbe944a1ae9166c",
                    "sha256:4ac5d71570835c5b20bc259bbd1760d56a5739ad4da07b32c46668ee9c7d6573",
                    "sha256:33624b187f3bbaef5d5798d1b978005db62ffc0c5bebddb9ec37def73b8bc614",
                    "sha256:ea4df6781aad44538bf0ea0f37801b038fdc40f15c566d696558108c7beb36b8",
                    "sha256:0c19b7091ea17b23be6ca7128e4cdfba3544260a55c23e96218620b14c189b0a",
                    "sha256:31223badcab6d609947d3bd54346c4a642a3fe953d70ff8d015fa90d14afe4ea"
                ]
            }
        },
        "1.11.1-alpine": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ffbeda5fe3dc181792e734bf3bdf0df034bbe58014ce1362c2b3ed34267ca893",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "33d351c912efa23745a828c679197e7926c0d8c27d2bd04d5e4c33624adc7455",
            "container_config": {
                "Hostname": "33d351c912ef",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ffbeda5fe3dc181792e734bf3bdf0df034bbe58014ce1362c2b3ed34267ca893",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-10-03T08:54:37.704338288Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-09-12T08:42:24.118323939Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a4b53e2a2e207c5107a76c16d91b99cb1ed4ecb90b363913798e663426137d45 in / "
                },
                {
                    "created": "2018-09-12T08:42:24.99201639Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2018-09-12T08:42:25.666437528Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-03T08:51:01.460306453Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-10-03T08:51:03.570716077Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-10-03T08:51:04.588766911Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.1",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-03T08:54:26.289238905Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '558f8c169ae215e25b81421596e8de7572bd3ba824b79add22fba6e284db1117 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-10-03T08:54:34.646532978Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-03T08:54:35.360642479Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-03T08:54:37.06132209Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-10-03T08:54:37.704338288Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0684225156a70eeeaa1ab4dc6cbec89a76267f4f34e930e958a30c383ca9a61f",
                    "sha256:42f65d3fc3bbff9e9d68aa0f3c5a2d328273ec72c6e3dd2b5d51c527c82921ae",
                    "sha256:19e3fffbb433da0e8a7461f0be73beb4842a805443a7ca41eea1102deb3259cb",
                    "sha256:d61acf9569efdd43476441335c9163b3c684d3faf3c5a1aa76a6736b940600cc",
                    "sha256:576b1314b040770f12f171ca79ce24deaed4f89a64d1ab2fde62a51d3b048ab1",
                    "sha256:bac9d2da55c9c0c02595d0f061c9a385b45d94f6815e61f50aa587af7338d815"
                ]
            }
        },
        "1.11.1-alpine3.7": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:56ecdfd7f29313e02aa7f7d981fef413a19fe41bbf52b3bd29207356170e51bd",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "274ad1810b23591d8afcd6102160ae1befcdba8c9bc01c0c9f3ab30d9eff784f",
            "container_config": {
                "Hostname": "274ad1810b23",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:56ecdfd7f29313e02aa7f7d981fef413a19fe41bbf52b3bd29207356170e51bd",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-10-03T08:57:57.477215874Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-09-12T08:41:29.537447237Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d7effd9b71d0299a88ead16cb21ff39bd03c51dcd49408147c06b40183157703 in / "
                },
                {
                    "created": "2018-09-12T08:41:30.402954122Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2018-09-12T08:41:31.402060859Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-03T08:55:02.614502899Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-10-03T08:55:04.400198385Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-10-03T08:55:05.198679414Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.1",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-03T08:57:42.88480179Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '558f8c169ae215e25b81421596e8de7572bd3ba824b79add22fba6e284db1117 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-10-03T08:57:44.22070354Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-03T08:57:55.126763076Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-03T08:57:56.827934571Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-10-03T08:57:57.477215874Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0376dca82a151dba64ed0b4492d714c7ebc6825e0138daded841bdb43996ab9e",
                    "sha256:7c7e8e49d23b77868c3afd83e1c251ccca48b09a86af6a102f88130e13b70f12",
                    "sha256:2f1a2bef4b79ac58c1c909051f9a4a1a2d90d4f18f024e55b13dac3975638868",
                    "sha256:30a227595652cb8454d2ebc488cd72daa038830cd00655414c51bbc8627cf5c9",
                    "sha256:cf78493b2d4ec701897cb976d6b0a659b505f257743075850a09b7946b23145b",
                    "sha256:b89cbfdde86191028aeef5d8c994e71fbae98793d5f06c440732e885364011e9"
                ]
            }
        },
        "1.11.1-alpine3.8": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ffbeda5fe3dc181792e734bf3bdf0df034bbe58014ce1362c2b3ed34267ca893",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "33d351c912efa23745a828c679197e7926c0d8c27d2bd04d5e4c33624adc7455",
            "container_config": {
                "Hostname": "33d351c912ef",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ffbeda5fe3dc181792e734bf3bdf0df034bbe58014ce1362c2b3ed34267ca893",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-10-03T08:54:37.704338288Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-09-12T08:42:24.118323939Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a4b53e2a2e207c5107a76c16d91b99cb1ed4ecb90b363913798e663426137d45 in / "
                },
                {
                    "created": "2018-09-12T08:42:24.99201639Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2018-09-12T08:42:25.666437528Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-03T08:51:01.460306453Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-10-03T08:51:03.570716077Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-10-03T08:51:04.588766911Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.1",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-03T08:54:26.289238905Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '558f8c169ae215e25b81421596e8de7572bd3ba824b79add22fba6e284db1117 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-10-03T08:54:34.646532978Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-03T08:54:35.360642479Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-03T08:54:37.06132209Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-10-03T08:54:37.704338288Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0684225156a70eeeaa1ab4dc6cbec89a76267f4f34e930e958a30c383ca9a61f",
                    "sha256:42f65d3fc3bbff9e9d68aa0f3c5a2d328273ec72c6e3dd2b5d51c527c82921ae",
                    "sha256:19e3fffbb433da0e8a7461f0be73beb4842a805443a7ca41eea1102deb3259cb",
                    "sha256:d61acf9569efdd43476441335c9163b3c684d3faf3c5a1aa76a6736b940600cc",
                    "sha256:576b1314b040770f12f171ca79ce24deaed4f89a64d1ab2fde62a51d3b048ab1",
                    "sha256:bac9d2da55c9c0c02595d0f061c9a385b45d94f6815e61f50aa587af7338d815"
                ]
            }
        },
        "1.11.1-stretch": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:21dbad0840ca0556a2380862e24e64d9b7b5e1632fd4193b644f54a5cf65be3b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "f16ee1923393c125f3ce5ffc20bd262627799e72f632b2290612eaeb38591960",
            "container_config": {
                "Hostname": "f16ee1923393",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:21dbad0840ca0556a2380862e24e64d9b7b5e1632fd4193b644f54a5cf65be3b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-10-17T00:51:26.868286677Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-10-16T08:43:08.802340828Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:961d2f24a0cebfcdd333e000ed4488e5c4f4d2a3d11056c45934d647caed5845 in / "
                },
                {
                    "created": "2018-10-16T08:43:10.118698854Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-16T12:01:13.620334986Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-10-16T12:01:39.234563636Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-10-16T12:02:49.548579781Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-10-17T00:50:50.254953564Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-10-17T00:50:51.193576104Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.1",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-17T00:51:13.848378633Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='2871270d8ff0c8c69f161aaae42f9f28739855ff5c5204752a8d92a1c9f63993' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='bc601e428f458da6028671d66581b026092742baf6d3124748bb044c82497d42' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='25e1a281b937022c70571ac5a538c9402dd74bceb71c2526377a7e5747df5522' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='52935db83719739d84a389a8f3b14544874fba803a316250b8d596313283aadf' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='f929d434d6db09fc4c6b67b03951596e576af5d02ff009633ca3c5be1c832bdd' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='93afc048ad72fa2a0e5ec56bcdcd8a34213eb262aee6f39a7e4dfeeb7e564c9d' ;; \t\t*) goRelArch='src'; goRelSha256='558f8c169ae215e25b81421596e8de7572bd3ba824b79add22fba6e284db1117'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-10-17T00:51:15.624552037Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-17T00:51:16.895861267Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-17T00:51:25.425268323Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-10-17T00:51:26.868286677Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c399cdc243cf73baadf3bef4652ba8f588a5d8a92da68dcbd728b813a798a4b3",
                    "sha256:cde243eb0b8551f5fa73f46aa21aca81220bf612336dd86886a09a2afcea759d",
                    "sha256:345fe1adb4d85a6e0679bd7a7c17a45723bf1d75f10e7850104a5a7f1296792e",
                    "sha256:f6249dee7a3bdf0fb1ae3e4c748f22b78ef88a05e4c9d50f53b9367d133a9b04",
                    "sha256:6a42984fe29a76a89a93e7e3b5018c3daff899ab329a913003c633dad2e6504f",
                    "sha256:49a3482ed5d0486bcb9720bbe71913424334f47e061f0eebc66523f12bc5ccd5",
                    "sha256:71827785758c2f9786962e11edfd30b7c84fe529c3bb990c2fbc4c5f7284795b"
                ]
            }
        },
        "1.11.10-alpine": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:be3cef78269d4d755e45a23fb367135b4b719135203f0244320092900cc25f28",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "fb1ad22c24446fd86a554f6d51716620fda1fc01ffde2065f06c3f3cfa61725e",
            "container_config": {
                "Hostname": "fb1ad22c2444",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:be3cef78269d4d755e45a23fb367135b4b719135203f0244320092900cc25f28",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-05-11T15:23:38.250095243Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-05-11T08:43:24.886692001Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:66f49017dd7ba295602526dbf210046e47fd097298c17a3f268a47487b5b6379 in / "
                },
                {
                    "created": "2019-05-11T08:43:25.494363315Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T09:00:02.017956678Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-05-11T09:00:03.8191483Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-05-11T15:19:01.193752831Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.10",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T15:23:31.162341292Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'df27e96a9d1d362c46ecd975f1faa56b8c300f5c529074e9ea79bdd885493c1b *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-05-11T15:23:33.311170767Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T15:23:34.160243423Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T15:23:37.151105664Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-05-11T15:23:38.250095243Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6d626da635fcff8a8485691ff0156105a5fe75675870a779f0093a6aedce13f7",
                    "sha256:66c1f9d3d7b2a869b3a7a3f111fa6227f82573b74084a64668eca94eb3af0366",
                    "sha256:7e8151238cd6d7545bfe9f1ed0c21497a3036807ccad3f0867037168564b3f2e",
                    "sha256:e2b5693af87a3c589e136241e3803648d2dcea780e04b09a9e3d24190e95e2f6",
                    "sha256:90a49c72a6d96aa8980d8e761592fa80e6070cf779f37f705ad650010683ba06"
                ]
            }
        },
        "1.11.10-alpine3.8": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:4257190f5de6e51a2fe0d2389622a1642251cc4290af7a72ef0d6f2601fcd805",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "a8320726ad213f38d0d97ffef730c3a1dec37ef2c3c3e671fdc088a5c9e025fb",
            "container_config": {
                "Hostname": "a8320726ad21",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:4257190f5de6e51a2fe0d2389622a1642251cc4290af7a72ef0d6f2601fcd805",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-05-07T23:17:21.175964464Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-08T03:37:11.938973415Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bcdcef68213641766a211b02ac762b03c21a178b3ed03c4480cc736abd97b50c in / "
                },
                {
                    "created": "2019-03-08T03:37:12.471254702Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-08T11:57:16.774040584Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-03-08T11:57:19.559637478Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-05-07T23:14:34.620661685Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.10",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-07T23:17:16.986423013Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'df27e96a9d1d362c46ecd975f1faa56b8c300f5c529074e9ea79bdd885493c1b *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-05-07T23:17:18.23450835Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-07T23:17:18.826198406Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-07T23:17:20.552269647Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-05-07T23:17:21.175964464Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:11ef7eb924077338758ae26b531c652b6d81d8d46df77eb6a8a00feda53bf7b8",
                    "sha256:d09260b6e16d801c0684056965cf2b7e3a2c59de01516c8887061248542e791c",
                    "sha256:cf65a1b85d34110ea5077330fcab8bacf6e5c3ff5875a866ed1d811d04cffd2c",
                    "sha256:a2c37c377de2a74435597b1404e4ffe75b47ceaf69eafdd7c5506761c8bad3cb",
                    "sha256:1765182711041358f86aadfc75c0c8005984de29ab7b6c29b3b2f555fd385611"
                ]
            }
        },
        "1.11.10-alpine3.9": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:be3cef78269d4d755e45a23fb367135b4b719135203f0244320092900cc25f28",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "fb1ad22c24446fd86a554f6d51716620fda1fc01ffde2065f06c3f3cfa61725e",
            "container_config": {
                "Hostname": "fb1ad22c2444",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:be3cef78269d4d755e45a23fb367135b4b719135203f0244320092900cc25f28",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-05-11T15:23:38.250095243Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-05-11T08:43:24.886692001Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:66f49017dd7ba295602526dbf210046e47fd097298c17a3f268a47487b5b6379 in / "
                },
                {
                    "created": "2019-05-11T08:43:25.494363315Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T09:00:02.017956678Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-05-11T09:00:03.8191483Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-05-11T15:19:01.193752831Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.10",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T15:23:31.162341292Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'df27e96a9d1d362c46ecd975f1faa56b8c300f5c529074e9ea79bdd885493c1b *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-05-11T15:23:33.311170767Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T15:23:34.160243423Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T15:23:37.151105664Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-05-11T15:23:38.250095243Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6d626da635fcff8a8485691ff0156105a5fe75675870a779f0093a6aedce13f7",
                    "sha256:66c1f9d3d7b2a869b3a7a3f111fa6227f82573b74084a64668eca94eb3af0366",
                    "sha256:7e8151238cd6d7545bfe9f1ed0c21497a3036807ccad3f0867037168564b3f2e",
                    "sha256:e2b5693af87a3c589e136241e3803648d2dcea780e04b09a9e3d24190e95e2f6",
                    "sha256:90a49c72a6d96aa8980d8e761592fa80e6070cf779f37f705ad650010683ba06"
                ]
            }
        },
        "1.11.10-stretch": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c14a5e83125d0c50ae55026fcc4491975039329d5196b81ba16179fb7ac16551",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "d154a876059eff1fced352202557c07ad9a43ed62516581e73363034b99d1a2b",
            "container_config": {
                "Hostname": "d154a876059e",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c14a5e83125d0c50ae55026fcc4491975039329d5196b81ba16179fb7ac16551",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-05-08T23:16:51.553588099Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-05-08T08:48:25.711659074Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:153045f4fe6532d8c2ff273bb249a7a3a4cba913c26a4103ba5ddce1af02c1e5 in / "
                },
                {
                    "created": "2019-05-08T08:48:26.648199121Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-08T11:51:12.205211825Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-05-08T11:51:50.230367537Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-05-08T11:54:19.607817927Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-05-08T23:15:42.19541508Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-05-08T23:16:25.906521804Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.10",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-08T23:16:47.119908634Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='aefaa228b68641e266d1f23f1d95dba33f17552ba132878b65bb798ffa37e6d0' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='29812e3443c469de6b976e4e44b5e6402d55f6358a544278addc22446a0abe8b' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='6743c54f0e33873c113cbd66df7749e81785f378567734831c2e5d3b6b6aa2b8' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='619ddab5b56597d72681467810c63238063ab0d221fe0df9b2e85608c10161e5' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='a6c7129e92fe325645229846257e563dab1d970bb0e61820d63524df2b54fcf8' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='35f196abd74db6f049018829ea6230fde6b8c2e24d2da9f9e75ce0e6d0292b49' ;; \t\t*) goRelArch='src'; goRelSha256='df27e96a9d1d362c46ecd975f1faa56b8c300f5c529074e9ea79bdd885493c1b'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-05-08T23:16:48.320514311Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-08T23:16:48.969934379Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-08T23:16:50.885604297Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-05-08T23:16:51.553588099Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ef9ee2bbae580cd8ce75e761a3d5fe29e3ff15b2585ff4ae69c9d8e56a1c8b9c",
                    "sha256:b75d612a0865b66e3f09b13b18c5b28913c7c5d2aed0769122085ff49404c5fc",
                    "sha256:ca88d05dec6b3725c7b655cf59b8a8decdc5e1c20f4d260ca7ade4ee8d718890",
                    "sha256:d6c3116ecf430d1841bb63ebdb12e30bff7affe75652ca808fd78851b87479a7",
                    "sha256:04902ff1c31972dfc9b103cc779c6724554ff2e57a630f92b08ffef66b0ba82a",
                    "sha256:7f14d365c889c76c0356ef357feac8eda96a484084f9518639d137186ad2e259",
                    "sha256:caca25b4ef33de53e63b44213392f67ac2597c98e8931bb28aa6373cad0e0194"
                ]
            }
        },
        "1.11.11-alpine": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2c5f47803e429369035383e8640acb82198f059dfb04ec086011703f713b1e66",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "2262ac92413fbc2efad71013a5ac0ecf7b1d926e93898933dc96fcd23e8b0de3",
            "container_config": {
                "Hostname": "2262ac92413f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2c5f47803e429369035383e8640acb82198f059dfb04ec086011703f713b1e66",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-06-20T20:44:07.816729754Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-06-19T20:39:38.119097445Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5ff5a563323bccd2fa42c7839aa0e7b4041af209e44bcb5bc9e07c4a94074b66 in / "
                },
                {
                    "created": "2019-06-19T20:39:38.520760373Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-20T20:39:43.832856561Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-06-20T20:39:45.072694908Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-06-20T20:42:05.303327407Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.11",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-20T20:44:03.167172544Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '1fff7c33ef2522e6dfaf6ab96ec4c2a8b76d018aae6fc88ce2bd40f2202d0f8c *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-06-20T20:44:05.639058151Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-20T20:44:06.048976705Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-20T20:44:07.441649646Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-06-20T20:44:07.816729754Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7b3463a46c2b13e2abbd97fcfa4a393ca1854561ba80e9d034e6cd9759575487",
                    "sha256:c74ed003a151642f64fb91e1e19caf0f81ccf041125fd0d9cfbf3641e8bbef84",
                    "sha256:5855e46d2922119cffdc00190a6c19d4a374145a72a1a703baf753d2fa69aba3",
                    "sha256:1dc677bfff02c62b5a3dc3dde56e025616e9bfed6ab395bc2067a2f0ce46dff9",
                    "sha256:6c082ffb384d59f100339410b9f4436c8f80e521a3d2f70a0c5293f2087dc95f"
                ]
            }
        },
        "1.11.11-alpine3.10": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2c5f47803e429369035383e8640acb82198f059dfb04ec086011703f713b1e66",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "2262ac92413fbc2efad71013a5ac0ecf7b1d926e93898933dc96fcd23e8b0de3",
            "container_config": {
                "Hostname": "2262ac92413f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2c5f47803e429369035383e8640acb82198f059dfb04ec086011703f713b1e66",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-06-20T20:44:07.816729754Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-06-19T20:39:38.119097445Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5ff5a563323bccd2fa42c7839aa0e7b4041af209e44bcb5bc9e07c4a94074b66 in / "
                },
                {
                    "created": "2019-06-19T20:39:38.520760373Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-20T20:39:43.832856561Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-06-20T20:39:45.072694908Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-06-20T20:42:05.303327407Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.11",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-20T20:44:03.167172544Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '1fff7c33ef2522e6dfaf6ab96ec4c2a8b76d018aae6fc88ce2bd40f2202d0f8c *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-06-20T20:44:05.639058151Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-20T20:44:06.048976705Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-20T20:44:07.441649646Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-06-20T20:44:07.816729754Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7b3463a46c2b13e2abbd97fcfa4a393ca1854561ba80e9d034e6cd9759575487",
                    "sha256:c74ed003a151642f64fb91e1e19caf0f81ccf041125fd0d9cfbf3641e8bbef84",
                    "sha256:5855e46d2922119cffdc00190a6c19d4a374145a72a1a703baf753d2fa69aba3",
                    "sha256:1dc677bfff02c62b5a3dc3dde56e025616e9bfed6ab395bc2067a2f0ce46dff9",
                    "sha256:6c082ffb384d59f100339410b9f4436c8f80e521a3d2f70a0c5293f2087dc95f"
                ]
            }
        },
        "1.11.11-alpine3.8": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:20e93af14363f80ebd7a1e95bc9195ac85a25c33e67ca8fd01abac086c61ca4c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "c7dfb2852ea82a423defefe90613f892136dd93e5792a5e679e964efe42b26a7",
            "container_config": {
                "Hostname": "c7dfb2852ea8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:20e93af14363f80ebd7a1e95bc9195ac85a25c33e67ca8fd01abac086c61ca4c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-06-19T22:05:34.481624612Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-06-19T20:39:56.340043479Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bcdcef68213641766a211b02ac762b03c21a178b3ed03c4480cc736abd97b50c in / "
                },
                {
                    "created": "2019-06-19T20:39:56.804685472Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-19T22:03:41.368842306Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-06-19T22:03:42.705276243Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-06-19T22:03:43.089914573Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.11",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-19T22:05:25.355066479Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '1fff7c33ef2522e6dfaf6ab96ec4c2a8b76d018aae6fc88ce2bd40f2202d0f8c *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-06-19T22:05:30.322028457Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-19T22:05:30.937017066Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-19T22:05:33.885738536Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-06-19T22:05:34.481624612Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:11ef7eb924077338758ae26b531c652b6d81d8d46df77eb6a8a00feda53bf7b8",
                    "sha256:a26597083206e1d1439f9436d5982a803faccf07f3d7158c5c4d819a7f85bd82",
                    "sha256:b1179a3085ac63f4deac76e57c2fe97d19b15609dfd9d9b1ba136e271d1e39cd",
                    "sha256:31e2012ebfefcbb9697c05850b999b67351c9f31e48f8ed66ac5aa8f12d3300f",
                    "sha256:13282a5be54b2a3debb3e6cabb53396ded700adfb2a30bcbd2f0cfa16d6e5861"
                ]
            }
        },
        "1.11.11-alpine3.9": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:fb89c6dc7290c95e349b278951fa50e1df046112b1b572750172dba82d994928",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "b26e2c5951164530a18d00a10052a73a1d257e1b9f4c111ccc71a79d94269a36",
            "container_config": {
                "Hostname": "b26e2c595116",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:fb89c6dc7290c95e349b278951fa50e1df046112b1b572750172dba82d994928",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-06-19T22:03:27.473808091Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-06-19T20:39:47.282820492Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:66f49017dd7ba295602526dbf210046e47fd097298c17a3f268a47487b5b6379 in / "
                },
                {
                    "created": "2019-06-19T20:39:47.636619987Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-19T20:56:05.137314338Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-06-19T20:56:06.515114234Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-06-19T22:01:40.581423136Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.11",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-19T22:03:22.390906759Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '1fff7c33ef2522e6dfaf6ab96ec4c2a8b76d018aae6fc88ce2bd40f2202d0f8c *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-06-19T22:03:25.16984799Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-19T22:03:25.586302535Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-19T22:03:27.050568314Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-06-19T22:03:27.473808091Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6d626da635fcff8a8485691ff0156105a5fe75675870a779f0093a6aedce13f7",
                    "sha256:7a151b0f5372ba7688803bb1a0385aeaaa51dff30ded9d13bb0bd0253833077a",
                    "sha256:8ab68ccf1104e218ce48cf2fe4058a7f3d88d4cfb0a5c6500a59aadb616bd88c",
                    "sha256:a259b83590e558a3f0a9782a639d7dd01b6e4d8086dd2696329c9dba0e5b969f",
                    "sha256:629a2fa97fb6ad40f32bfeee6def6b8f52b8daefedd39b9ce003ec4713c6f49a"
                ]
            }
        },
        "1.11.11-stretch": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:79f850b269990ca1eedda8dc97832d2f072392d9fa9c76973314e7ac8bfd9007",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "ea461d42ca4ef00514ecaed226ae7864e0460b220d11172b13e4e7f7594098c5",
            "container_config": {
                "Hostname": "ea461d42ca4e",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:79f850b269990ca1eedda8dc97832d2f072392d9fa9c76973314e7ac8bfd9007",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-06-13T00:26:36.912623638Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-05-08T08:48:25.711659074Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:153045f4fe6532d8c2ff273bb249a7a3a4cba913c26a4103ba5ddce1af02c1e5 in / "
                },
                {
                    "created": "2019-05-08T08:48:26.648199121Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-11T00:19:28.206830896Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-06-11T00:19:38.772747441Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-06-11T00:20:19.804365221Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-06-13T00:22:44.922415762Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-06-13T00:26:02.581547717Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.11",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-13T00:26:29.22479778Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='2fd47b824d6e32154b0f6c8742d066d816667715763e06cebb710304b195c775' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='c2b882a5fbb3bac5c9cc6d65bfe17a5febfe0251a339fc059306bb825dec9b17' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='5ee39ea08e5d8c017658f36d0f969b17a44d49576214f4a00710f2d98bb773be' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='c711fe5025608e14bcd0efda9403e9b8f05cb4a53a125e296d639c10d280a65f' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='98ff7ff2367239e26745231aabeaf9d7e51c40b616bb9aa15d4376792ff581d1' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='d7471874ed396f72dd550c3593c9f42d5e3d38a2cca7658e669305bf9023e6c8' ;; \t\t*) goRelArch='src'; goRelSha256='1fff7c33ef2522e6dfaf6ab96ec4c2a8b76d018aae6fc88ce2bd40f2202d0f8c'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-06-13T00:26:33.523874597Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-13T00:26:34.073559615Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-13T00:26:36.272249128Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-06-13T00:26:36.912623638Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ef9ee2bbae580cd8ce75e761a3d5fe29e3ff15b2585ff4ae69c9d8e56a1c8b9c",
                    "sha256:1c6f4c23073b93d98f3f98323200cb6e3584c44cf9d6f9dcb54688e3222da84d",
                    "sha256:d1b4bcba0655d4d941d2a257844ea16957332abbe8f3116cbf298161129907b4",
                    "sha256:54060bf84ed3993fad83787da15ee1d4ab9087e8fdb763f76eca7a61d4a16160",
                    "sha256:9bc9a4b4784a848a6f8bdc8efddb0d3350723a588a9f140708335fc662485bd5",
                    "sha256:cf72f73b52b655dccf555d31773a8ebdea005937b8cc6e3222bdcaacee290f25",
                    "sha256:532bdbc39748f71def5e023a0017f55bacf078e7c5734022774850c856565ec1"
                ]
            }
        },
        "1.11.12-alpine": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1c2faaf88206156450dab3011e534d65808489e695127cd10897195cfb978bb0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f5f6c5bf98111525a6530e9d1e9587838c74704eb0556bb2a0351ed593fee6b8",
            "container_config": {
                "Hostname": "f5f6c5bf9811",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1c2faaf88206156450dab3011e534d65808489e695127cd10897195cfb978bb0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-07-12T15:18:36.026734637Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-07-11T21:39:41.140831628Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5fcefa5daca822ead00a758f408db50619f81063a033290b7f31d5ec5634f6ba in / "
                },
                {
                    "created": "2019-07-11T21:39:41.588669567Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-11T21:57:41.792763712Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-07-11T21:57:43.259428137Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-07-12T15:15:36.017752867Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.12",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-12T15:18:28.898100363Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '6d7a5ba05476609a7614af3292f29c3be06327503c1f1fdc02ef417870fd6926 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-07-12T15:18:30.474735811Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-12T15:18:31.129728421Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-12T15:18:35.256067337Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-07-12T15:18:36.026734637Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d01207b1564878bf27a284ccb2e59ba4c847e876449d072e96d5ea141ded8d2d",
                    "sha256:bbe3bd4e6792826fb7828e46ca42d2a5e086c53c8fceca7c2cafe9b3445b45ce",
                    "sha256:5aa843a0e7ee983c43f432458cb1a9355fde32b07f0d7e8acac03558336b13b2",
                    "sha256:da6f2446d0a7eb30c4788709b454b013964327aec9c0a62aea16ca17433e6d2d",
                    "sha256:261153a76cb44e9ff8d9ac13289099056667b7094bc2f460ba57cac36c0099c6"
                ]
            }
        },
        "1.11.12-alpine3.10": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1c2faaf88206156450dab3011e534d65808489e695127cd10897195cfb978bb0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f5f6c5bf98111525a6530e9d1e9587838c74704eb0556bb2a0351ed593fee6b8",
            "container_config": {
                "Hostname": "f5f6c5bf9811",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1c2faaf88206156450dab3011e534d65808489e695127cd10897195cfb978bb0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-07-12T15:18:36.026734637Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-07-11T21:39:41.140831628Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5fcefa5daca822ead00a758f408db50619f81063a033290b7f31d5ec5634f6ba in / "
                },
                {
                    "created": "2019-07-11T21:39:41.588669567Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-11T21:57:41.792763712Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-07-11T21:57:43.259428137Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-07-12T15:15:36.017752867Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.12",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-12T15:18:28.898100363Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '6d7a5ba05476609a7614af3292f29c3be06327503c1f1fdc02ef417870fd6926 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-07-12T15:18:30.474735811Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-12T15:18:31.129728421Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-12T15:18:35.256067337Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-07-12T15:18:36.026734637Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d01207b1564878bf27a284ccb2e59ba4c847e876449d072e96d5ea141ded8d2d",
                    "sha256:bbe3bd4e6792826fb7828e46ca42d2a5e086c53c8fceca7c2cafe9b3445b45ce",
                    "sha256:5aa843a0e7ee983c43f432458cb1a9355fde32b07f0d7e8acac03558336b13b2",
                    "sha256:da6f2446d0a7eb30c4788709b454b013964327aec9c0a62aea16ca17433e6d2d",
                    "sha256:261153a76cb44e9ff8d9ac13289099056667b7094bc2f460ba57cac36c0099c6"
                ]
            }
        },
        "1.11.12-alpine3.9": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f3844a5044111bdd8a98eb9164942873e3b7768643bd574102de68254bc83705",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "80707439b03d454cf4c4985cc5ceb7bac8706ee7814a75c2699134675aefc0c1",
            "container_config": {
                "Hostname": "80707439b03d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f3844a5044111bdd8a98eb9164942873e3b7768643bd574102de68254bc83705",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-07-09T00:50:29.761556952Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-06-19T20:39:47.282820492Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:66f49017dd7ba295602526dbf210046e47fd097298c17a3f268a47487b5b6379 in / "
                },
                {
                    "created": "2019-06-19T20:39:47.636619987Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-19T20:56:05.137314338Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-06-19T20:56:06.515114234Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-07-09T00:48:05.689416023Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.12",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-09T00:50:25.489445403Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '6d7a5ba05476609a7614af3292f29c3be06327503c1f1fdc02ef417870fd6926 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-07-09T00:50:26.911218674Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-09T00:50:27.390376878Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-09T00:50:29.203695386Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-07-09T00:50:29.761556952Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6d626da635fcff8a8485691ff0156105a5fe75675870a779f0093a6aedce13f7",
                    "sha256:7a151b0f5372ba7688803bb1a0385aeaaa51dff30ded9d13bb0bd0253833077a",
                    "sha256:8ab68ccf1104e218ce48cf2fe4058a7f3d88d4cfb0a5c6500a59aadb616bd88c",
                    "sha256:ef48d184376e792d9c03e9b3a4d9acf162b01eba250d2d8df0cb01e44bc909c3",
                    "sha256:6db4dceaa167b3f8ddd72b2ce3ade13f1ae04cb2c7f541a18dee1ff6192abf6c"
                ]
            }
        },
        "1.11.12-buster": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:30eee960bce1677c621476d25f4889d10fda43e299f49b3bccd245445b8b599a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "7e18ab37c892d3eb7fe14abc7e57b713f59db203881cf7e5a5513f8420cca6f5",
            "container_config": {
                "Hostname": "7e18ab37c892",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:30eee960bce1677c621476d25f4889d10fda43e299f49b3bccd245445b8b599a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-07-20T01:40:43.168504891Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-07-09T21:44:04.817026736Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fed1da39b91cd72442176aeb0884ba1eceb64a664c51afe6524993fb3cd01a86 in / "
                },
                {
                    "created": "2019-07-09T21:44:06.094463178Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-09T22:29:30.688174661Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-07-09T22:29:42.976341806Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-07-09T22:30:21.188096988Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-07-10T05:08:01.024843975Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-07-20T01:40:23.488840807Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.12",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-20T01:40:39.239560332Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='14ec881815eb9e6618f95df5eb385d961283efc196d97912595ba6484a56180d' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='5ffe422dc054909da4e468cb0df6e2cd41cebfe4fd9515f32bb3e3fbfc416016' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='d79c075773fc3121d0e719b83b46115efff685ade94545a52f3ac22f43d76196' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='8467e68d6ed6f6a95c6db6a1e352fc529f256bba0955eaef472e50cf4c0cba61' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='92bd4dc0dc8227fb22ad88545dd72669923019760cd640d4cca189860870561a' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='a4d100a1c92e50fd9b8a4d529da0ef0f4509c72643d6fb481918fd543f5871c0' ;; \t\t*) goRelArch='src'; goRelSha256='6d7a5ba05476609a7614af3292f29c3be06327503c1f1fdc02ef417870fd6926'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-07-20T01:40:41.248775609Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-20T01:40:41.572662742Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-20T01:40:42.789015128Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-07-20T01:40:43.168504891Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:70de00010c7afc5feacb1a841f1cd88f59df2773eeeb889463890fcead9d440c",
                    "sha256:dbf18f403098623aa589908902a71d8e98f307525003e958c1b8d53e4591a875",
                    "sha256:f2db58a2b685fcf0f69ff7bc2d667a6df33620643e42e0a82b4b099e6671bd5a",
                    "sha256:e842b38ab00f82381aee6a1a773593b69f7c3232976ee9091725e893d8773341",
                    "sha256:3f6e08648d5cc98ccd5afc7ff83447f54fd592bfaf45a817e2fc1897e50c7f06",
                    "sha256:158a9ee5e4a486e41bfd6f36083c2ff87d03d51f2b6f3d999dc9638ba60237ff",
                    "sha256:b831be22a36cc0a2a6e07754d0878e1b70a88fd87aaf793fe907076d32baf879"
                ]
            }
        },
        "1.11.12-stretch": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:baef5a3c47e291f3d3f6058ccce0edca295bead82304a261d4c2138e8777a289",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "0e9ce74cab183442986b0439fc5bb4194106c86b6bead9289e30a3f1b3f2d5f8",
            "container_config": {
                "Hostname": "0e9ce74cab18",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:baef5a3c47e291f3d3f6058ccce0edca295bead82304a261d4c2138e8777a289",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-07-10T05:10:01.958040396Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-07-09T21:46:11.825732886Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4ad0e90fb81389a733d6948b0f068616b600a1be277ed228ace6196f667b0ead in / "
                },
                {
                    "created": "2019-07-09T21:46:12.932621419Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-09T22:36:53.463620837Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-07-09T22:37:03.901194916Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-07-09T22:37:42.349591221Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-07-10T05:08:55.124068575Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-07-10T05:09:39.953057889Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.12",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-10T05:09:57.440738259Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='14ec881815eb9e6618f95df5eb385d961283efc196d97912595ba6484a56180d' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='5ffe422dc054909da4e468cb0df6e2cd41cebfe4fd9515f32bb3e3fbfc416016' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='d79c075773fc3121d0e719b83b46115efff685ade94545a52f3ac22f43d76196' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='8467e68d6ed6f6a95c6db6a1e352fc529f256bba0955eaef472e50cf4c0cba61' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='92bd4dc0dc8227fb22ad88545dd72669923019760cd640d4cca189860870561a' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='a4d100a1c92e50fd9b8a4d529da0ef0f4509c72643d6fb481918fd543f5871c0' ;; \t\t*) goRelArch='src'; goRelSha256='6d7a5ba05476609a7614af3292f29c3be06327503c1f1fdc02ef417870fd6926'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-07-10T05:09:59.889174373Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-10T05:10:00.272811683Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-10T05:10:01.549179959Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-07-10T05:10:01.958040396Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9f9478778cf5398c5d114c37b150805346688e5d0cbcdb72a5082f36b060919d",
                    "sha256:e3fb8318971aa03027eb9cf7c0e45f5be2c8cb405d95f60a062aa7886590de77",
                    "sha256:52d2e6951bb8ea70bcea21eda19374da738fc57474671202cbbf7cee5258fcad",
                    "sha256:09c75e967e1a9c397d75ff52fb88dd42a92f9f7c107e0ec1d1133e94282cc94b",
                    "sha256:15e820bac37ff3441d032990f5a69de8d03be286af65308c4de305a02ccb8d0f",
                    "sha256:7f1575116d975b33efe811b0187d903e41d8fb605a313aeb1277e32a003857c2",
                    "sha256:e7ff07ccf1653b541ff9ed7d0b164019f3402328a6def2ebfb00c380b392123b"
                ]
            }
        },
        "1.11.13-alpine": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:90cabe594841bbbbebe7fb2944ff7f7242217bf7aaed05baca26824c6a1e53cc",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "8b41cdcb932128859c744c60b0a25940f5150613e169aa32232be5553f65b3f9",
            "container_config": {
                "Hostname": "8b41cdcb9321",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:90cabe594841bbbbebe7fb2944ff7f7242217bf7aaed05baca26824c6a1e53cc",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-20T21:03:02.82490096Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-20T20:39:38.405945347Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:34737804ba78554795d5bcc75621595f8cc3d5b5887887d34e0e021b78e330b7 in / "
                },
                {
                    "created": "2019-08-20T20:39:38.821174355Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T20:56:21.289256818Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-08-20T20:56:22.869691367Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-08-20T21:01:13.132766596Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.13",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:02:58.626855674Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '5032095fd3f641cafcce164f551e5ae873785ce7b07ca7c143aecd18f7ba4076 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-20T21:03:00.601748042Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:03:01.034695368Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:03:02.397268239Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-20T21:03:02.82490096Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5e0d8111135538b8a86ce5fc969849efce16c455fd016bb3dc53131bcedc4da5",
                    "sha256:e3275698b6646fa0bbb59a0c5bcb22674d2098952d972968752905ca92f4c6c7",
                    "sha256:88ee3bd19f4a271e93edadba95c10387ef28c86ebb20c2b2373dad5741bffb77",
                    "sha256:691a036064d9e2793efcd9b20bf6653257fb228d63f099abbdcd6193c5e85689",
                    "sha256:991d8a97e0eeafca9309bd72a6cfc720606adfe26617319ca76629679b1af29e"
                ]
            }
        },
        "1.11.13-alpine3.10": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:90cabe594841bbbbebe7fb2944ff7f7242217bf7aaed05baca26824c6a1e53cc",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "8b41cdcb932128859c744c60b0a25940f5150613e169aa32232be5553f65b3f9",
            "container_config": {
                "Hostname": "8b41cdcb9321",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:90cabe594841bbbbebe7fb2944ff7f7242217bf7aaed05baca26824c6a1e53cc",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-20T21:03:02.82490096Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-20T20:39:38.405945347Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:34737804ba78554795d5bcc75621595f8cc3d5b5887887d34e0e021b78e330b7 in / "
                },
                {
                    "created": "2019-08-20T20:39:38.821174355Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T20:56:21.289256818Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-08-20T20:56:22.869691367Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-08-20T21:01:13.132766596Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.13",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:02:58.626855674Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '5032095fd3f641cafcce164f551e5ae873785ce7b07ca7c143aecd18f7ba4076 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-20T21:03:00.601748042Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:03:01.034695368Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:03:02.397268239Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-20T21:03:02.82490096Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5e0d8111135538b8a86ce5fc969849efce16c455fd016bb3dc53131bcedc4da5",
                    "sha256:e3275698b6646fa0bbb59a0c5bcb22674d2098952d972968752905ca92f4c6c7",
                    "sha256:88ee3bd19f4a271e93edadba95c10387ef28c86ebb20c2b2373dad5741bffb77",
                    "sha256:691a036064d9e2793efcd9b20bf6653257fb228d63f099abbdcd6193c5e85689",
                    "sha256:991d8a97e0eeafca9309bd72a6cfc720606adfe26617319ca76629679b1af29e"
                ]
            }
        },
        "1.11.13-alpine3.9": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:80f920421d51f44a2968910b855c5f6b635e54177e5b309796dbee730f51bd2f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "ced3075f19d191140185f4babdffce06fe0dced40a40ae7de9adec90ebbe4765",
            "container_config": {
                "Hostname": "ced3075f19d1",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:80f920421d51f44a2968910b855c5f6b635e54177e5b309796dbee730f51bd2f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-13T22:41:16.666458376Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-06-19T20:39:47.282820492Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:66f49017dd7ba295602526dbf210046e47fd097298c17a3f268a47487b5b6379 in / "
                },
                {
                    "created": "2019-06-19T20:39:47.636619987Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-19T20:56:05.137314338Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-06-19T20:56:06.515114234Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-08-13T22:39:26.700898212Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.13",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-13T22:41:11.828449254Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '5032095fd3f641cafcce164f551e5ae873785ce7b07ca7c143aecd18f7ba4076 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-13T22:41:14.001654954Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-13T22:41:14.450192778Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-13T22:41:16.184594679Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-13T22:41:16.666458376Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6d626da635fcff8a8485691ff0156105a5fe75675870a779f0093a6aedce13f7",
                    "sha256:7a151b0f5372ba7688803bb1a0385aeaaa51dff30ded9d13bb0bd0253833077a",
                    "sha256:8ab68ccf1104e218ce48cf2fe4058a7f3d88d4cfb0a5c6500a59aadb616bd88c",
                    "sha256:c19f7b903630c79f1b6ac74d870519fbe65f3fd2f3f8dd0f413fe7608debbc4a",
                    "sha256:82c5bc86b1fc451c11060b358c2e4d6fc35c46bd28aad6ee04d67c8d5c03702d"
                ]
            }
        },
        "1.11.13-buster": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d14170edcc42962204dc3a9d86cbf26b001553781bfda8bf15bf81647e36cb6a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "df122d02fec5f852ba6ff8d2fb773a14a153b5ed36f30fa707675594002bcf8e",
            "container_config": {
                "Hostname": "df122d02fec5",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d14170edcc42962204dc3a9d86cbf26b001553781bfda8bf15bf81647e36cb6a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-14T21:07:02.691124121Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-14T00:40:44.249210056Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f63b119fbe465bf5c6ca8b15f40bc0103b3e00d68628a80d1025b38e536a46b7 in / "
                },
                {
                    "created": "2019-08-14T00:40:45.352575059Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T02:30:03.501985656Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T02:30:14.635808353Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-08-14T02:30:48.715930266Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T21:04:50.976650827Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T21:06:44.505538547Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.13",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T21:06:56.219019111Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='50fe8e13592f8cf22304b9c4adfc11849a2c3d281b1d7e09c924ae24874c6daa' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='513eb46158917662e1588cb89f51d11839730e46847778646c36c69c687bfdc5' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='e94329c97b38b5bffe9c18e84e9f521dc995e02df7696897a7626293da9ac593' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='282e20167a7aaaba7b23de980696e1944a004efd0079e80d675d66b263ef595b' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='ad3c7397ddd41a5af9d9bf3c560d3d0f8c1bdef4ac4d21819a021ea88e25efca' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='bd00bd27e641450f165a37a83f1e83a4ef3c626ef5675b77184e9c0147257657' ;; \t\t*) goRelArch='src'; goRelSha256='5032095fd3f641cafcce164f551e5ae873785ce7b07ca7c143aecd18f7ba4076'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-14T21:07:00.773187016Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T21:07:01.088969288Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T21:07:02.353371144Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-14T21:07:02.691124121Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0a3fa153264b693d6d10457dc58b433dca1828a88c52750c2227f5926d15d737",
                    "sha256:f54065b956ab8a66f19f7e4e8ecd9104fa17c2e2580df52324c517cd33136df1",
                    "sha256:008074a8f55cf42e163cbb663d9647c6c03616ed7793f9ebd08602f01fa71a29",
                    "sha256:c1e303518b8e8e76f012f7b30cec7577595ef108919b05d67a6b891853ea21f9",
                    "sha256:a068c344f31fa4e9303790b3f06c8920f05871dc7df660370ac2cd0b318db5a3",
                    "sha256:4fbadb27a6017b59ee2e2c03040c8fe6dce1df2cec8ab6b3d0d6b64500ce7770",
                    "sha256:a1a752beb24698b8cc8d55f1c9927ca825092ea6d0c45db20e61bbc206e4352f"
                ]
            }
        },
        "1.11.13-stretch": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1bdfaa9e5fe40e07867ca8cd19abacf6ec0368ebf9185f8172608949c2645dd4",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "57986c3568cf7093201b04b44a54ecffc3a46466bb2dc9497bfeda350df0aafd",
            "container_config": {
                "Hostname": "57986c3568cf",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1bdfaa9e5fe40e07867ca8cd19abacf6ec0368ebf9185f8172608949c2645dd4",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-14T21:07:28.837038197Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-14T00:42:54.654151163Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:705744f1d46153f7b1e4e803e92a622e76091e0c7812e893ccadf4c3fa3f7582 in / "
                },
                {
                    "created": "2019-08-14T00:42:55.660620236Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T02:36:32.143422133Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T02:36:41.125736825Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-08-14T02:37:15.501343277Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T21:06:06.757228386Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T21:07:09.433707389Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.13",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T21:07:23.083593724Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='50fe8e13592f8cf22304b9c4adfc11849a2c3d281b1d7e09c924ae24874c6daa' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='513eb46158917662e1588cb89f51d11839730e46847778646c36c69c687bfdc5' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='e94329c97b38b5bffe9c18e84e9f521dc995e02df7696897a7626293da9ac593' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='282e20167a7aaaba7b23de980696e1944a004efd0079e80d675d66b263ef595b' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='ad3c7397ddd41a5af9d9bf3c560d3d0f8c1bdef4ac4d21819a021ea88e25efca' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='bd00bd27e641450f165a37a83f1e83a4ef3c626ef5675b77184e9c0147257657' ;; \t\t*) goRelArch='src'; goRelSha256='5032095fd3f641cafcce164f551e5ae873785ce7b07ca7c143aecd18f7ba4076'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-14T21:07:26.956984071Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T21:07:27.285045882Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T21:07:28.469163479Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-14T21:07:28.837038197Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6041800a8d9dd17ab84273c9e9c4655f98e80b0fdced98bc32f88ca2f13172e5",
                    "sha256:dced789b8bda47eb3ae32f98cd396f9336aee529a7866b5c77393ac799c1fd0a",
                    "sha256:67ec7ff41bc528f6b991d15c3f5c6d5ffb81d5ee231e6dd4f124c6d14fb71e37",
                    "sha256:03a48aa962bc7c95d3d16cbe9c14fc7d040bfc094a5c4486525d5a9614e0a043",
                    "sha256:25c6cc004c6cec11647130fdb25fcd3a6d90b436a89c66b6d36a35a74527eff6",
                    "sha256:f1da248683661cfebfc2db258b42d765b0ab614a2f5cc67362d58e8194acb1c3",
                    "sha256:91483d98ebb0f5a5097507258e2bf4010fdb0e9cd6f31b4123a70443f78aa0a9"
                ]
            }
        },
        "1.11.2-alpine": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f11d31febf2354497f798dc7a39d05ab6737af81e769e394e57cc1fbe34bbe95",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "4211002927ec4c10f037a58192944003906b0606a5b30769a2374fd10c0d4e18",
            "container_config": {
                "Hostname": "4211002927ec",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f11d31febf2354497f798dc7a39d05ab6737af81e769e394e57cc1fbe34bbe95",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-11-03T08:45:41.007402008Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-09-12T08:42:24.118323939Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a4b53e2a2e207c5107a76c16d91b99cb1ed4ecb90b363913798e663426137d45 in / "
                },
                {
                    "created": "2018-09-12T08:42:24.99201639Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2018-09-12T08:42:25.666437528Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-03T08:51:01.460306453Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-10-03T08:51:03.570716077Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-11-03T08:42:42.565913062Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.2",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-03T08:45:26.378355491Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '042fba357210816160341f1002440550e952eb12678f7c9e7e9d389437942550 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-11-03T08:45:28.07601257Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-03T08:45:28.725943662Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-03T08:45:30.390500095Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-11-03T08:45:41.007402008Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0684225156a70eeeaa1ab4dc6cbec89a76267f4f34e930e958a30c383ca9a61f",
                    "sha256:42f65d3fc3bbff9e9d68aa0f3c5a2d328273ec72c6e3dd2b5d51c527c82921ae",
                    "sha256:19e3fffbb433da0e8a7461f0be73beb4842a805443a7ca41eea1102deb3259cb",
                    "sha256:d61acf9569efdd43476441335c9163b3c684d3faf3c5a1aa76a6736b940600cc",
                    "sha256:e5636cfa42297aff1111dd2a689fe64e880966634af8569cb17e146ec566c12d",
                    "sha256:a696a58dcc8b4d4c49bb218aa223287a03e118785f7c661eed01e7533ed21108"
                ]
            }
        },
        "1.11.2-alpine3.7": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e604e417d668bb9be55de326c6f6ced9f0c00eaabc36dd008f06f7cbe11c4463",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "0b789a67e02d3127731337f0c838b35dad854cd6b407695b9908ccd795381241",
            "container_config": {
                "Hostname": "0b789a67e02d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e604e417d668bb9be55de326c6f6ced9f0c00eaabc36dd008f06f7cbe11c4463",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-11-03T08:49:03.594343204Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-09-12T08:41:29.537447237Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d7effd9b71d0299a88ead16cb21ff39bd03c51dcd49408147c06b40183157703 in / "
                },
                {
                    "created": "2018-09-12T08:41:30.402954122Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2018-09-12T08:41:31.402060859Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-03T08:55:02.614502899Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-10-03T08:55:04.400198385Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-11-03T08:46:08.408754322Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.2",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-03T08:48:48.843419803Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '042fba357210816160341f1002440550e952eb12678f7c9e7e9d389437942550 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-11-03T08:48:59.116127752Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-03T08:49:00.745929491Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-03T08:49:02.89594816Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-11-03T08:49:03.594343204Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0376dca82a151dba64ed0b4492d714c7ebc6825e0138daded841bdb43996ab9e",
                    "sha256:7c7e8e49d23b77868c3afd83e1c251ccca48b09a86af6a102f88130e13b70f12",
                    "sha256:2f1a2bef4b79ac58c1c909051f9a4a1a2d90d4f18f024e55b13dac3975638868",
                    "sha256:30a227595652cb8454d2ebc488cd72daa038830cd00655414c51bbc8627cf5c9",
                    "sha256:1d0db2481c85cee15f5aa3a35574fd58095af20391a47abb78635266047629fe",
                    "sha256:a43bed872dcded38b82575479530bb35312c4f998275b26be0384e571e44cce5"
                ]
            }
        },
        "1.11.2-alpine3.8": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f11d31febf2354497f798dc7a39d05ab6737af81e769e394e57cc1fbe34bbe95",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "4211002927ec4c10f037a58192944003906b0606a5b30769a2374fd10c0d4e18",
            "container_config": {
                "Hostname": "4211002927ec",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f11d31febf2354497f798dc7a39d05ab6737af81e769e394e57cc1fbe34bbe95",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-11-03T08:45:41.007402008Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-09-12T08:42:24.118323939Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a4b53e2a2e207c5107a76c16d91b99cb1ed4ecb90b363913798e663426137d45 in / "
                },
                {
                    "created": "2018-09-12T08:42:24.99201639Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2018-09-12T08:42:25.666437528Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-03T08:51:01.460306453Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-10-03T08:51:03.570716077Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-11-03T08:42:42.565913062Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.2",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-03T08:45:26.378355491Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '042fba357210816160341f1002440550e952eb12678f7c9e7e9d389437942550 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-11-03T08:45:28.07601257Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-03T08:45:28.725943662Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-03T08:45:30.390500095Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-11-03T08:45:41.007402008Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0684225156a70eeeaa1ab4dc6cbec89a76267f4f34e930e958a30c383ca9a61f",
                    "sha256:42f65d3fc3bbff9e9d68aa0f3c5a2d328273ec72c6e3dd2b5d51c527c82921ae",
                    "sha256:19e3fffbb433da0e8a7461f0be73beb4842a805443a7ca41eea1102deb3259cb",
                    "sha256:d61acf9569efdd43476441335c9163b3c684d3faf3c5a1aa76a6736b940600cc",
                    "sha256:e5636cfa42297aff1111dd2a689fe64e880966634af8569cb17e146ec566c12d",
                    "sha256:a696a58dcc8b4d4c49bb218aa223287a03e118785f7c661eed01e7533ed21108"
                ]
            }
        },
        "1.11.2-stretch": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:87b8699f58745da8fcca7163af85ece1e34c13f78ffe5a6cd2903130845a5818",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "fcf4da15fa3aec240485d02abda0d82dfacd850b48897333464e9a3d3ec28473",
            "container_config": {
                "Hostname": "fcf4da15fa3a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:87b8699f58745da8fcca7163af85ece1e34c13f78ffe5a6cd2903130845a5818",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-11-17T17:09:05.251086227Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-11-16T10:13:25.263528653Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bf8c0ee6d5a7d54f0c1259b5f65569cf7e5e828cfbe98302312933537cd9087e in / "
                },
                {
                    "created": "2018-11-16T10:13:26.334703944Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-17T02:30:34.467108257Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-11-17T02:30:54.074921647Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-11-17T02:33:03.408430903Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-11-17T17:08:39.559486502Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-11-17T17:08:40.516251476Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.2",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-17T17:09:00.843936693Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='1dfe664fa3d8ad714bbd15a36627992effd150ddabd7523931f077b3926d736d' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='b9d16a8eb1f7b8fdadd27232f6300aa8b4427e5e4cb148c4be4089db8fb56429' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='98a42b9b8d3bacbcc6351a1e39af52eff582d0bc3ac804cd5a97ce497dd84026' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='e74f2f37b43b9b1bcf18008a11e0efb8921b41dff399a4f48ac09a4f25729881' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='23291935a299fdfde4b6a988ce3faa0c7a498aab6d56bbafbf1e7476468529a3' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='a67ef820ef8cfecc8d68c69dd5bf513aaf647c09b6605570af425bf5fe8a32f0' ;; \t\t*) goRelArch='src'; goRelSha256='042fba357210816160341f1002440550e952eb12678f7c9e7e9d389437942550'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-11-17T17:09:02.11587331Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-17T17:09:02.81749336Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-17T17:09:04.514555474Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-11-17T17:09:05.251086227Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:11300de7503751e0c7f2a078d8b8c3b1eec630d6852447b6ec7f72d02c7a3f86",
                    "sha256:4c0d82e8990ea10a547464a56d3c09d6e3f64d8929f3306b0b7b7012ee636f05",
                    "sha256:5e2c517c1956f6cc5b00087d13a8b9fb5878ca9df8be3dab018c5d0346458bec",
                    "sha256:97ea6e83ecdaf9ad109bcb768a896d5047da1fe82507893b1071e69b4661060c",
                    "sha256:0c66260563dbfeb99e09e97f4fb10a9d4b1499a22ece3792d1947b294eb97a71",
                    "sha256:fc59a1c4ddffaa723b5d313254f69dacd8e04224b3bbfd562170d312a9ed571d",
                    "sha256:674219729bf13096b7c0314313a2d4d3a3eddeae1dfbeaf9326c33db2f4cc995"
                ]
            }
        },
        "1.11.3-alpine": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b82e6e6241fdfd9e3c98ef7ccf6842101ffac272c0ad4e26a179d2edf489665e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "b9c628b30932812b4be3268b6c059551e39c1ca4ea76b253f7714d581c64f21a",
            "container_config": {
                "Hostname": "b9c628b30932",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b82e6e6241fdfd9e3c98ef7ccf6842101ffac272c0ad4e26a179d2edf489665e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-12-14T09:45:58.94207978Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-09-12T08:42:24.118323939Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a4b53e2a2e207c5107a76c16d91b99cb1ed4ecb90b363913798e663426137d45 in / "
                },
                {
                    "created": "2018-09-12T08:42:24.99201639Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2018-09-12T08:42:25.666437528Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-03T08:51:01.460306453Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-10-03T08:51:03.570716077Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-12-14T09:43:14.925497242Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.3",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-14T09:45:54.659052112Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '7ec5140f384db2bd42b396c93c231dfba342ee137ad8a4b33120016951eb1231 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-12-14T09:45:56.101560887Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-14T09:45:56.761540983Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-14T09:45:58.334687682Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-12-14T09:45:58.94207978Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0684225156a70eeeaa1ab4dc6cbec89a76267f4f34e930e958a30c383ca9a61f",
                    "sha256:42f65d3fc3bbff9e9d68aa0f3c5a2d328273ec72c6e3dd2b5d51c527c82921ae",
                    "sha256:19e3fffbb433da0e8a7461f0be73beb4842a805443a7ca41eea1102deb3259cb",
                    "sha256:d61acf9569efdd43476441335c9163b3c684d3faf3c5a1aa76a6736b940600cc",
                    "sha256:c71fd8090ff2450ac109d88066430279b549931d66f2d73bc47d2bffb3df83db",
                    "sha256:8b0cda62e1dce24f6eab6f22a49d5949b431d457297278e1626a6334a9d08d66"
                ]
            }
        },
        "1.11.3-alpine3.7": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c20cfd5f22bd2f540dd27ec510b7c07e9aa4de3309e71f544ee1dfe7a4a03449",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "dd4069a185d2927f0d5a3fa8774f1233d91d53699333c5307b71da22da86e967",
            "container_config": {
                "Hostname": "dd4069a185d2",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c20cfd5f22bd2f540dd27ec510b7c07e9aa4de3309e71f544ee1dfe7a4a03449",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-12-14T09:49:05.215949988Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-09-12T08:41:29.537447237Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d7effd9b71d0299a88ead16cb21ff39bd03c51dcd49408147c06b40183157703 in / "
                },
                {
                    "created": "2018-09-12T08:41:30.402954122Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2018-09-12T08:41:31.402060859Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-03T08:55:02.614502899Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-10-03T08:55:04.400198385Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-12-14T09:46:27.336599282Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.3",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-14T09:49:01.096041128Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '7ec5140f384db2bd42b396c93c231dfba342ee137ad8a4b33120016951eb1231 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-12-14T09:49:02.438658483Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-14T09:49:03.057011604Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-14T09:49:04.59792316Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-12-14T09:49:05.215949988Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0376dca82a151dba64ed0b4492d714c7ebc6825e0138daded841bdb43996ab9e",
                    "sha256:7c7e8e49d23b77868c3afd83e1c251ccca48b09a86af6a102f88130e13b70f12",
                    "sha256:2f1a2bef4b79ac58c1c909051f9a4a1a2d90d4f18f024e55b13dac3975638868",
                    "sha256:30a227595652cb8454d2ebc488cd72daa038830cd00655414c51bbc8627cf5c9",
                    "sha256:5036e5acd7d314193e77e0cf69720e2eb30e7b9bcdf17dffc7386f09a1946de2",
                    "sha256:614c75f8bebdfcde216d10aba8e6ea2c7c263a46893bf432e4d0ac1af7ca17a0"
                ]
            }
        },
        "1.11.3-alpine3.8": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b82e6e6241fdfd9e3c98ef7ccf6842101ffac272c0ad4e26a179d2edf489665e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "b9c628b30932812b4be3268b6c059551e39c1ca4ea76b253f7714d581c64f21a",
            "container_config": {
                "Hostname": "b9c628b30932",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b82e6e6241fdfd9e3c98ef7ccf6842101ffac272c0ad4e26a179d2edf489665e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-12-14T09:45:58.94207978Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-09-12T08:42:24.118323939Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a4b53e2a2e207c5107a76c16d91b99cb1ed4ecb90b363913798e663426137d45 in / "
                },
                {
                    "created": "2018-09-12T08:42:24.99201639Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2018-09-12T08:42:25.666437528Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-03T08:51:01.460306453Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-10-03T08:51:03.570716077Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-12-14T09:43:14.925497242Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.3",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-14T09:45:54.659052112Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '7ec5140f384db2bd42b396c93c231dfba342ee137ad8a4b33120016951eb1231 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-12-14T09:45:56.101560887Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-14T09:45:56.761540983Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-14T09:45:58.334687682Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-12-14T09:45:58.94207978Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0684225156a70eeeaa1ab4dc6cbec89a76267f4f34e930e958a30c383ca9a61f",
                    "sha256:42f65d3fc3bbff9e9d68aa0f3c5a2d328273ec72c6e3dd2b5d51c527c82921ae",
                    "sha256:19e3fffbb433da0e8a7461f0be73beb4842a805443a7ca41eea1102deb3259cb",
                    "sha256:d61acf9569efdd43476441335c9163b3c684d3faf3c5a1aa76a6736b940600cc",
                    "sha256:c71fd8090ff2450ac109d88066430279b549931d66f2d73bc47d2bffb3df83db",
                    "sha256:8b0cda62e1dce24f6eab6f22a49d5949b431d457297278e1626a6334a9d08d66"
                ]
            }
        },
        "1.11.3-stretch": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6323b7af119721dd266033f5af47b2062d73604392d01131d7d83ae2f3fb0ad1",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "2ae5527ee0af024b724ffee7d8a6346b7df6d06be0feb90aba8a25c1cb198e08",
            "container_config": {
                "Hostname": "2ae5527ee0af",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6323b7af119721dd266033f5af47b2062d73604392d01131d7d83ae2f3fb0ad1",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-12-14T09:42:59.528725052Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-11-16T10:13:25.263528653Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bf8c0ee6d5a7d54f0c1259b5f65569cf7e5e828cfbe98302312933537cd9087e in / "
                },
                {
                    "created": "2018-11-16T10:13:26.334703944Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-17T02:30:34.467108257Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-11-17T02:30:54.074921647Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-11-17T02:33:03.408430903Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-11-17T17:08:39.559486502Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-12-14T09:42:29.219267769Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.3",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-14T09:42:55.318120721Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='d20a4869ffb13cee0f7ee777bf18c7b9b67ef0375f93fac1298519e0c227a07f' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='384933e6e97b74c5125011c8f0539362bbed5a015978a34e441d7333d8e519b9' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='723c54cb081dd629a44d620197e4a789dccdfe6dee7f8b4ad7a6659f76952056' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='c3fadf7f8652c060e18b7907fb8e15b853955b25aa661dbd991f6d6bc581d7a9' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='57c89a047ef4f539580af4cadebf1364a906891b065afa0664592e72a034b0ee' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='183258709c051ceb2900dee5ee681abb0bc440624c8f657374bde2a5658bef27' ;; \t\t*) goRelArch='src'; goRelSha256='7ec5140f384db2bd42b396c93c231dfba342ee137ad8a4b33120016951eb1231'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-12-14T09:42:56.634078809Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-14T09:42:57.2577965Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-14T09:42:58.91170142Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-12-14T09:42:59.528725052Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:11300de7503751e0c7f2a078d8b8c3b1eec630d6852447b6ec7f72d02c7a3f86",
                    "sha256:4c0d82e8990ea10a547464a56d3c09d6e3f64d8929f3306b0b7b7012ee636f05",
                    "sha256:5e2c517c1956f6cc5b00087d13a8b9fb5878ca9df8be3dab018c5d0346458bec",
                    "sha256:97ea6e83ecdaf9ad109bcb768a896d5047da1fe82507893b1071e69b4661060c",
                    "sha256:0c66260563dbfeb99e09e97f4fb10a9d4b1499a22ece3792d1947b294eb97a71",
                    "sha256:643094cb7b8b1eebc5d79b566c1c0f0bd1ee68e49c1313e86428bf767635f57e",
                    "sha256:47cb5f091e5c9a327d04f00b9842cfb365abbfc83c8a59a8c27520021005059a"
                ]
            }
        },
        "1.11.4-alpine": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b832065ebe956de06962271d95e2aff08b051da0e6d832d6bf6a4a0aa6327545",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "0a485269393321763d1e38cd5af268086d6e9681dc47ebb4a99ce9a52efbf718",
            "container_config": {
                "Hostname": "0a4852693933",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b832065ebe956de06962271d95e2aff08b051da0e6d832d6bf6a4a0aa6327545",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2018-12-21T10:14:24.198674854Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2018-12-21T09:43:06.705630029Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:79419748674899ac7d5d699fe62f837c69d04af3ceaabbb7951c35c2f0ff46fa in / "
                },
                {
                    "created": "2018-12-21T09:43:07.198401212Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a10c133d8d5e9af3a9a1610709d3ed2f85b1507f1ba5745ac12bb495974e3fe6 in /etc/localtime "
                },
                {
                    "created": "2018-12-21T09:43:07.722553865Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T10:00:50.393353587Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-12-21T10:00:52.818317624Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-12-21T10:11:24.280048754Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.4",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T10:14:19.067927149Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '4cfd42720a6b1e79a8024895fa6607b69972e8e32446df76d6ce79801bbadb15 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-12-21T10:14:20.341725217Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T10:14:20.966172358Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T10:14:23.574203575Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-12-21T10:14:24.198674854Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:92d7b4d0b33cc1213ee394fabb26922447135080a3b7bd326e5bb7453e06be32",
                    "sha256:82fe62b38ba2a9028a57bee2d8e1b855733943e5491ad946e37e406208ff6e8b",
                    "sha256:0db26aa2ab49f54f8b357b9d4f8188543a065211dac4752eb7d9b65da88a52cf",
                    "sha256:6897c234601851e40044ce7b1194fc52052891863645562058c775deb9dc1342",
                    "sha256:76264f368e9525c394317c47be9bc23a90277961b34b856cc89dc93a95a2f9e1",
                    "sha256:cdb62fa214d1343e6d9a1b3950b87bb309b54a0f5771a6ae67a90ea73df3df17"
                ]
            }
        },
        "1.11.4-alpine3.7": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6180e039ae8c27fef252bd0ae54e08a9776286a48885ebaad546e84158667390",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "fa530765b1cf5ab4f00c6cfabead08d848cd9223001d803ddcb24bf9baa192b7",
            "container_config": {
                "Hostname": "fa530765b1cf",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6180e039ae8c27fef252bd0ae54e08a9776286a48885ebaad546e84158667390",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2018-12-21T10:17:54.69136172Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2018-12-21T09:42:47.616920457Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7278e4df49d628c2bbb27c53665e671f57cd2db003e030b1be93eb81c5d28303 in / "
                },
                {
                    "created": "2018-12-21T09:42:48.140920422Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a10c133d8d5e9af3a9a1610709d3ed2f85b1507f1ba5745ac12bb495974e3fe6 in /etc/localtime "
                },
                {
                    "created": "2018-12-21T09:42:48.640087564Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T10:14:45.27493224Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-12-21T10:14:47.648984863Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-12-21T10:14:48.473994388Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.4",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T10:17:49.089954166Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '4cfd42720a6b1e79a8024895fa6607b69972e8e32446df76d6ce79801bbadb15 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-12-21T10:17:50.684878793Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T10:17:51.921301988Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T10:17:54.082235289Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-12-21T10:17:54.69136172Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0376dca82a151dba64ed0b4492d714c7ebc6825e0138daded841bdb43996ab9e",
                    "sha256:d1ebf0a8b65281fbaac5f61a75ba9179c66ceb134610fd069e071357b61e531f",
                    "sha256:6532a6eb4787b26dd63f27fa3b33349c06774803b6f5f006701b9093b3183351",
                    "sha256:ab5180a942db0a82a751476b2480ee156ccd89448e7122a9b1c2f22570b0e5be",
                    "sha256:2520cd20b0fe9572fc1283e7a9e49efbdbb96b65f585edf9376d08f2b57a2012",
                    "sha256:8b6e318a7d1e3ed4114ca11de37d22c8aeb4c823859d186882b1cae546293efc"
                ]
            }
        },
        "1.11.4-alpine3.8": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b832065ebe956de06962271d95e2aff08b051da0e6d832d6bf6a4a0aa6327545",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "0a485269393321763d1e38cd5af268086d6e9681dc47ebb4a99ce9a52efbf718",
            "container_config": {
                "Hostname": "0a4852693933",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b832065ebe956de06962271d95e2aff08b051da0e6d832d6bf6a4a0aa6327545",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2018-12-21T10:14:24.198674854Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2018-12-21T09:43:06.705630029Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:79419748674899ac7d5d699fe62f837c69d04af3ceaabbb7951c35c2f0ff46fa in / "
                },
                {
                    "created": "2018-12-21T09:43:07.198401212Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a10c133d8d5e9af3a9a1610709d3ed2f85b1507f1ba5745ac12bb495974e3fe6 in /etc/localtime "
                },
                {
                    "created": "2018-12-21T09:43:07.722553865Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T10:00:50.393353587Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-12-21T10:00:52.818317624Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-12-21T10:11:24.280048754Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.4",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T10:14:19.067927149Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '4cfd42720a6b1e79a8024895fa6607b69972e8e32446df76d6ce79801bbadb15 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-12-21T10:14:20.341725217Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T10:14:20.966172358Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T10:14:23.574203575Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-12-21T10:14:24.198674854Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:92d7b4d0b33cc1213ee394fabb26922447135080a3b7bd326e5bb7453e06be32",
                    "sha256:82fe62b38ba2a9028a57bee2d8e1b855733943e5491ad946e37e406208ff6e8b",
                    "sha256:0db26aa2ab49f54f8b357b9d4f8188543a065211dac4752eb7d9b65da88a52cf",
                    "sha256:6897c234601851e40044ce7b1194fc52052891863645562058c775deb9dc1342",
                    "sha256:76264f368e9525c394317c47be9bc23a90277961b34b856cc89dc93a95a2f9e1",
                    "sha256:cdb62fa214d1343e6d9a1b3950b87bb309b54a0f5771a6ae67a90ea73df3df17"
                ]
            }
        },
        "1.11.4-stretch": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b37fd8e7b45e1ac30ee74c21026e712ee483306fbeaefcf7292130e0a3ea9e28",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "8a5174671835fb860e1900bd647f6224437b1d5bf24b4537046837b4e1a5201f",
            "container_config": {
                "Hostname": "8a5174671835",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b37fd8e7b45e1ac30ee74c21026e712ee483306fbeaefcf7292130e0a3ea9e28",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2018-12-30T01:42:19.797951373Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2018-12-29T10:08:10.656625229Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8238e4e08413d772a0383ef64eccc0448c682834c018a28e87a568a33b0da788 in / "
                },
                {
                    "created": "2018-12-29T10:08:11.85486118Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-29T12:10:28.859457803Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-12-29T12:11:00.592632628Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-12-29T12:13:11.487987513Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-12-30T01:40:43.643111942Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-12-30T01:41:41.228382704Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.4",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-30T01:42:12.65603658Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='fb26c30e6a04ad937bbc657a1b5bba92f80096af1e8ee6da6430c045a8db3a5b' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='9f7a71d27fef69f654a93e265560c8d9db1a2ca3f1dcdbe5288c46facfde5821' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='b76df430ba8caff197b8558921deef782cdb20b62fa36fa93f81a8c08ab7c8e7' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='cecd2da1849043237d5f0756a93d601db6798fa3bb27a14563d201088aa415f3' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='1f10146826acd56716b00b9188079af53823ddd79ceb6362e78e2f3aafb370ab' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='4467442dacf89eb94c5d6f9f700204cb360be82db60e6296cc2ef8d0e890cd42' ;; \t\t*) goRelArch='src'; goRelSha256='4cfd42720a6b1e79a8024895fa6607b69972e8e32446df76d6ce79801bbadb15'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-12-30T01:42:14.497930651Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-30T01:42:15.463701535Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-30T01:42:18.812847055Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-12-30T01:42:19.797951373Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4fd5e5ad4086643e0c20d9508f9a93baf11ea08c57e39a2f6ba271c2bb902fe7",
                    "sha256:4a6a662b6bf2804c6a45343dbe6639b40181bd8e8f29eced123cc3b00f9975d7",
                    "sha256:8128a2e67b6e808b4bec88efc39f8b723107cfed827bbdf8bf74470cfa1e5d23",
                    "sha256:52bfb6dc2c8285c3c5c90c6374a3fcec37841dbb95bd46e964cf31c305ae4ac5",
                    "sha256:25584c973c02628d8138f06ad546ff930638604aafaf5c06c53b387b09a48df5",
                    "sha256:4738d69d74d882b698c307b8bb51b6e0bc4891f5bb8af54c09e421d368a858c0",
                    "sha256:655433a6ae30b17674b499d8e1a687287951192b91072134a501487e6dbeceb5"
                ]
            }
        },
        "1.11.5-alpine": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ba37a8ffc64cd808dd800527a1a40524f88542b50933bb6e716e617e1227a05a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "88d3b83390656ec9ecc3ccadcc94adaffe5084b02a0851c099840636972f68a7",
            "container_config": {
                "Hostname": "88d3b8339065",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ba37a8ffc64cd808dd800527a1a40524f88542b50933bb6e716e617e1227a05a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-03-08T11:57:01.718789171Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-08T03:37:01.50193332Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2e80d7b240ac8c544a868180a2a08b2533c450061e0ec276ceacaff7b87a380c in / "
                },
                {
                    "created": "2019-03-08T03:37:02.050813908Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-08T04:18:47.872266951Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-03-08T04:18:49.827739314Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-03-08T11:54:01.447497622Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.5",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-08T11:56:56.800825161Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'bc1ef02bb1668835db1390a2e478dcbccb5dd16911691af9d75184bbe5aa943e *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-03-08T11:56:58.096511671Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-08T11:56:58.781840778Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-08T11:57:01.062143805Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-03-08T11:57:01.718789171Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b83703e07573d5eac589806f0afe1648f84ec111b9169ff9db1884730b5603e3",
                    "sha256:5e245268d749dca621ed93898e5846607a63f748ca5c57b0f2a9539dcc71dc23",
                    "sha256:912faf05df34b8984d955330b3678b8704e2668217e5c8d7e1a678cca17e462d",
                    "sha256:08cb815450527b87aa7371540fb8415263c59fba7a492662efe3633c2225b975",
                    "sha256:5e20ed00969f35289bd52645fafce94d6271cbae22049da5c96ffa02d2f89303"
                ]
            }
        },
        "1.11.5-alpine3.7": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3ba44ac502b7cd8dc3aa058d72c8c7fd3a94cf6459f052fae71ff9d11596aea2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "93d4e65a4385e60c7f21be3e8df08fcee63fc775100ae5c13a553ad7471b9355",
            "container_config": {
                "Hostname": "93d4e65a4385",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3ba44ac502b7cd8dc3aa058d72c8c7fd3a94cf6459f052fae71ff9d11596aea2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-01-25T09:34:03.02276993Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2018-12-21T09:42:47.616920457Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7278e4df49d628c2bbb27c53665e671f57cd2db003e030b1be93eb81c5d28303 in / "
                },
                {
                    "created": "2018-12-21T09:42:48.140920422Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a10c133d8d5e9af3a9a1610709d3ed2f85b1507f1ba5745ac12bb495974e3fe6 in /etc/localtime "
                },
                {
                    "created": "2018-12-21T09:42:48.640087564Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T10:14:45.27493224Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-12-21T10:14:47.648984863Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-01-25T09:29:33.433290364Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.5",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-25T09:33:55.799230273Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'bc1ef02bb1668835db1390a2e478dcbccb5dd16911691af9d75184bbe5aa943e *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-01-25T09:33:57.679503632Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-25T09:33:58.689118974Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-25T09:34:02.036443359Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-01-25T09:34:03.02276993Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0376dca82a151dba64ed0b4492d714c7ebc6825e0138daded841bdb43996ab9e",
                    "sha256:d1ebf0a8b65281fbaac5f61a75ba9179c66ceb134610fd069e071357b61e531f",
                    "sha256:6532a6eb4787b26dd63f27fa3b33349c06774803b6f5f006701b9093b3183351",
                    "sha256:ab5180a942db0a82a751476b2480ee156ccd89448e7122a9b1c2f22570b0e5be",
                    "sha256:81e57ad2f67a9a8e97cd6ee673290e5e7b0e4e2ec15c1fb3b75fa13e2ebb0084",
                    "sha256:0ead02f1795fe09a94be316089d61f6ca1a32845a47d7cff8e2589a4ae4a391b"
                ]
            }
        },
        "1.11.5-alpine3.8": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:36d8728239213f2b5bcfa985383a0181fefe5b599e71be0489881369471ee13f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "14fa3b53927a2e52491c3712bfd8229fd9de0588285241997a86d05c6b3b136b",
            "container_config": {
                "Hostname": "14fa3b53927a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:36d8728239213f2b5bcfa985383a0181fefe5b599e71be0489881369471ee13f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-03-08T12:00:14.800804186Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-08T03:37:11.938973415Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bcdcef68213641766a211b02ac762b03c21a178b3ed03c4480cc736abd97b50c in / "
                },
                {
                    "created": "2019-03-08T03:37:12.471254702Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-08T11:57:16.774040584Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-03-08T11:57:19.559637478Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-03-08T11:57:20.211317018Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.5",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-08T12:00:10.247954703Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'bc1ef02bb1668835db1390a2e478dcbccb5dd16911691af9d75184bbe5aa943e *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-03-08T12:00:11.582899993Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-08T12:00:12.282878096Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-08T12:00:14.175803867Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-03-08T12:00:14.800804186Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:11ef7eb924077338758ae26b531c652b6d81d8d46df77eb6a8a00feda53bf7b8",
                    "sha256:d09260b6e16d801c0684056965cf2b7e3a2c59de01516c8887061248542e791c",
                    "sha256:cf65a1b85d34110ea5077330fcab8bacf6e5c3ff5875a866ed1d811d04cffd2c",
                    "sha256:b53ea6f5545f28716c175efe65f20737e3a9144074eb8c5199b8f5ed0d1387a2",
                    "sha256:9263093d7abce90113812eeb02d0c1aa9cd1e83750629b01b3ec2c156dc171ad"
                ]
            }
        },
        "1.11.5-stretch": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:35f256e49d691aef31d62914b2e1479e46142d217001df87b4802c340da40aa0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "9bdecd14e6cfd448ba8df31bee0aee7545c8a433951bf289c2d561235c27068d",
            "container_config": {
                "Hostname": "9bdecd14e6cf",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:35f256e49d691aef31d62914b2e1479e46142d217001df87b4802c340da40aa0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-03-05T17:04:34.167073185Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-05T10:00:23.315122687Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7bdd35ab84858c7d5864b73a83750df5ac3db71ce3e586a7da68d50ed15904c8 in / "
                },
                {
                    "created": "2019-03-05T10:00:24.30479312Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-05T11:31:50.836515684Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-05T11:32:09.856542844Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-03-05T11:33:42.821964214Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-05T17:02:25.460621279Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-05T17:03:59.385679253Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.5",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-05T17:04:26.232450226Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='ff54aafedff961eb94792487e827515da683d61a5f9482f668008832631e5d25' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='b26b53c94923f78955236386fee0725ef4e76b6cb47e0df0ed0c0c4724e7b198' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='6ee9a5714444182a236d3cc4636e74cfc5e24a1bacf0463ac71dcf0e7d4288ed' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='acd8e05f8d3eed406e09bb58eab89de3f0a139d4aef15f74adeed2d2c24cb440' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='66e83152c68cb35d41f21453377d6a811585c9e01a6ac54b19f7a6e2cbb3d1f5' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='56209e5498c64a8338cd6f0fe0c2e2cbf6857c0acdb10c774894f0cc0d19f413' ;; \t\t*) goRelArch='src'; goRelSha256='bc1ef02bb1668835db1390a2e478dcbccb5dd16911691af9d75184bbe5aa943e'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-03-05T17:04:28.174609166Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-05T17:04:29.510668614Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-05T17:04:33.022078315Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-03-05T17:04:34.167073185Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6be2545885544984cc9203ec5877acc09980d9d0163624a7be7029c5dbfbb23f",
                    "sha256:6932c487d2172c143aa785f64df6e547e37dc3c65ed14d6220d5eb106c445f61",
                    "sha256:94ceb774b626cf3b3e750f80238bd84a26aacc45b5626f61c450546aeeb4c0fe",
                    "sha256:83649e2b33556051cb13609c8b54913a2f753d0871823c59b159331b00df2b4c",
                    "sha256:c49fa5fed8dc92fec48d821c8087b62928ce8683f37ff43fb217bc477917624c",
                    "sha256:181bc33acd27530ff4920556cb1f74aa642cff411c85d5c5d9635f9bf3bfc594",
                    "sha256:a88dcb3f24061ff8a89831317078cea6fb0b8e6b203ff1016f318fe6acc5c35c"
                ]
            }
        },
        "1.11.6-alpine": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9320b705e3a4840c8a95f9a325bdb254c0e92fbd3cc5b5aed05c5bad7ac124ab",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "d91983a99416486de913b5242fd610cca4d81c778b9bca901796b0ca2fe80302",
            "container_config": {
                "Hostname": "d91983a99416",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9320b705e3a4840c8a95f9a325bdb254c0e92fbd3cc5b5aed05c5bad7ac124ab",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-03-16T08:48:47.628257441Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-08T03:37:01.50193332Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2e80d7b240ac8c544a868180a2a08b2533c450061e0ec276ceacaff7b87a380c in / "
                },
                {
                    "created": "2019-03-08T03:37:02.050813908Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-08T04:18:47.872266951Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-03-08T04:18:49.827739314Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-03-16T08:45:51.106944556Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.6",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-16T08:48:40.482499964Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'a96da1425dcbec094736033a8a416316547f8100ab4b72c31d4824d761d3e133 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-03-16T08:48:42.03885326Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-16T08:48:42.844324324Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-16T08:48:46.696829809Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-03-16T08:48:47.628257441Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b83703e07573d5eac589806f0afe1648f84ec111b9169ff9db1884730b5603e3",
                    "sha256:5e245268d749dca621ed93898e5846607a63f748ca5c57b0f2a9539dcc71dc23",
                    "sha256:912faf05df34b8984d955330b3678b8704e2668217e5c8d7e1a678cca17e462d",
                    "sha256:ed82fbdfa967fa98a7b50ec3846b753e5751db5bc90a93396ec421240088d532",
                    "sha256:1858e0aae2748dfa73b7b96c5c90c6902fd4e083fb776f552010d0caad0b7161"
                ]
            }
        },
        "1.11.6-alpine3.8": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:83a3148dbe0fe14465308bf2b8edf7684fa6d0e0af053a168f677f6598b29074",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "6a883fd15fcc3d3e2e82c6a6aefc993c94fcc7bdebc277ab042772ce0ed473d3",
            "container_config": {
                "Hostname": "6a883fd15fcc",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:83a3148dbe0fe14465308bf2b8edf7684fa6d0e0af053a168f677f6598b29074",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-03-16T08:52:07.393601772Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-08T03:37:11.938973415Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bcdcef68213641766a211b02ac762b03c21a178b3ed03c4480cc736abd97b50c in / "
                },
                {
                    "created": "2019-03-08T03:37:12.471254702Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-08T11:57:16.774040584Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-03-08T11:57:19.559637478Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-03-16T08:49:05.144911183Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.6",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-16T08:52:00.914263458Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'a96da1425dcbec094736033a8a416316547f8100ab4b72c31d4824d761d3e133 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-03-16T08:52:02.408567348Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-16T08:52:03.407885648Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-16T08:52:06.455976084Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-03-16T08:52:07.393601772Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:11ef7eb924077338758ae26b531c652b6d81d8d46df77eb6a8a00feda53bf7b8",
                    "sha256:d09260b6e16d801c0684056965cf2b7e3a2c59de01516c8887061248542e791c",
                    "sha256:cf65a1b85d34110ea5077330fcab8bacf6e5c3ff5875a866ed1d811d04cffd2c",
                    "sha256:3b540a40f3fcaa2159421f781df877a0721096c8e44f021fd1b2a292d910d32c",
                    "sha256:18043df658b8827bc23bfdfe86a23ac9c50ce036bc854bb7ab6c799aec39f799"
                ]
            }
        },
        "1.11.6-alpine3.9": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9320b705e3a4840c8a95f9a325bdb254c0e92fbd3cc5b5aed05c5bad7ac124ab",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "d91983a99416486de913b5242fd610cca4d81c778b9bca901796b0ca2fe80302",
            "container_config": {
                "Hostname": "d91983a99416",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9320b705e3a4840c8a95f9a325bdb254c0e92fbd3cc5b5aed05c5bad7ac124ab",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-03-16T08:48:47.628257441Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-08T03:37:01.50193332Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2e80d7b240ac8c544a868180a2a08b2533c450061e0ec276ceacaff7b87a380c in / "
                },
                {
                    "created": "2019-03-08T03:37:02.050813908Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-08T04:18:47.872266951Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-03-08T04:18:49.827739314Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-03-16T08:45:51.106944556Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.6",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-16T08:48:40.482499964Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'a96da1425dcbec094736033a8a416316547f8100ab4b72c31d4824d761d3e133 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-03-16T08:48:42.03885326Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-16T08:48:42.844324324Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-16T08:48:46.696829809Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-03-16T08:48:47.628257441Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b83703e07573d5eac589806f0afe1648f84ec111b9169ff9db1884730b5603e3",
                    "sha256:5e245268d749dca621ed93898e5846607a63f748ca5c57b0f2a9539dcc71dc23",
                    "sha256:912faf05df34b8984d955330b3678b8704e2668217e5c8d7e1a678cca17e462d",
                    "sha256:ed82fbdfa967fa98a7b50ec3846b753e5751db5bc90a93396ec421240088d532",
                    "sha256:1858e0aae2748dfa73b7b96c5c90c6902fd4e083fb776f552010d0caad0b7161"
                ]
            }
        },
        "1.11.6-stretch": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:88c1cda22f69d623dd3351ad9918c65c88a9c1bb2ac4168d69abde280a05aace",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "6bea4cce198857dc7147af1abf21caacb09e21c75d7e0687304ac96d2421db89",
            "container_config": {
                "Hostname": "6bea4cce1988",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:88c1cda22f69d623dd3351ad9918c65c88a9c1bb2ac4168d69abde280a05aace",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-03-27T22:22:24.858640715Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-27T08:47:20.29754472Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8f991b13b28ce1de362b9f00e69aac8edc28124a08adeeb3b7fb02153e0b4e92 in / "
                },
                {
                    "created": "2019-03-27T08:47:21.400108146Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-27T10:15:55.61565095Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-27T10:16:13.26020269Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-03-27T10:17:48.418797173Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-27T22:20:12.728264648Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-27T22:21:30.455819809Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.6",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-27T22:22:11.030867941Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='4e1864282d8d20010d6385a12a1e35641783a380a7c57907bfb46a5499c5eb49' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='62597fe72f1170cbb939958823555a701510e00362eb8a10b7ace6e59c8e7e6e' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='29f64505cea47c57a46e2c8001ecf8d0c01cbf1ec86de96f4e3126b94a12ebb7' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='7d90e484bb92e68648c1a7b6b1790e97af33718bae457d2ee02ee5d1dd0ce2b7' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='43d7cc7d3cdc1e57af33a13296b48713735f55e25aa655187afb19a707143c77' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='c7f83fa5975a8f11641962bad79f89a7e17a6580d0d21ca828733dc0cfe470f7' ;; \t\t*) goRelArch='src'; goRelSha256='a96da1425dcbec094736033a8a416316547f8100ab4b72c31d4824d761d3e133'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-03-27T22:22:18.629007917Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-27T22:22:19.744707Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-27T22:22:23.638854099Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-03-27T22:22:24.858640715Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3fa17642530603a1dab4c25c34426e7befde7f29d5c58cf662286e2bedbd39cf",
                    "sha256:00f1e9bd82fbbd9ae578f126bea9d01d726299a87ffbf4c2d3b0ba3a751babcd",
                    "sha256:22758826ae9f21fa3d48d7827dc358962d0d52ae42671a6fbd96ef84f865a633",
                    "sha256:34aa8af3c0e3e90d629b5e52a9a3a57cd190a70802063784d9a8f328a1a4a0c8",
                    "sha256:2ff0644d5fee32819749af50a36d3d1fdd22f88cd8309b530d86e6db0cf68322",
                    "sha256:8116475aceb8c505d32f244beb9bccc327cce383bc898d89c626161b792fa5c2",
                    "sha256:fd36800a68661f564242652cf03a3f98bdf610276ef188174f1a928fbf5aa7bf"
                ]
            }
        },
        "1.11.7-alpine": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:4e1ed9d2f57bbd4a0b4df63efe94de04721772f8b044a3a3a7987d7c183d88c4",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "c6b473b27d086380eeabc697ed44177d7f716418770c596cd83c7b1578f8764d",
            "container_config": {
                "Hostname": "c6b473b27d08",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:4e1ed9d2f57bbd4a0b4df63efe94de04721772f8b044a3a3a7987d7c183d88c4",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-04-06T08:51:30.392368096Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-08T03:37:01.50193332Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2e80d7b240ac8c544a868180a2a08b2533c450061e0ec276ceacaff7b87a380c in / "
                },
                {
                    "created": "2019-03-08T03:37:02.050813908Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-08T04:18:47.872266951Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-03-08T04:18:49.827739314Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-04-06T08:48:22.227320193Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.7",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-06T08:51:21.703447089Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'cfbe1078fbb1e34e77ad09de40d96d47ef280ba15791da9f02fc05486a4b16bd *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-04-06T08:51:23.908177902Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-06T08:51:24.850720435Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-06T08:51:28.08138423Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-04-06T08:51:30.392368096Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b83703e07573d5eac589806f0afe1648f84ec111b9169ff9db1884730b5603e3",
                    "sha256:5e245268d749dca621ed93898e5846607a63f748ca5c57b0f2a9539dcc71dc23",
                    "sha256:912faf05df34b8984d955330b3678b8704e2668217e5c8d7e1a678cca17e462d",
                    "sha256:66c5a9d3c7a0eff782c2e7111e963ef89d901203800d3fdd6266cb765344d3b5",
                    "sha256:08c1fb067dc1aa24ea9a81eb5192dda3ae3705090384412f5fae9bfe287f7746"
                ]
            }
        },
        "1.11.7-alpine3.8": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:67528f73a48eaa958107dd4bafe1483bde47b6d7d52f08da1d409a39adf1a82f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "1dce4a4ca3f61b8ae615cd45c33f1cf1261dc763a403bdf64289943a1aa71b4a",
            "container_config": {
                "Hostname": "1dce4a4ca3f6",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:67528f73a48eaa958107dd4bafe1483bde47b6d7d52f08da1d409a39adf1a82f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-04-06T08:54:45.484467712Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-08T03:37:11.938973415Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bcdcef68213641766a211b02ac762b03c21a178b3ed03c4480cc736abd97b50c in / "
                },
                {
                    "created": "2019-03-08T03:37:12.471254702Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-08T11:57:16.774040584Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-03-08T11:57:19.559637478Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-04-06T08:51:41.401427685Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.7",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-06T08:54:39.655366883Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'cfbe1078fbb1e34e77ad09de40d96d47ef280ba15791da9f02fc05486a4b16bd *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-04-06T08:54:41.146503291Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-06T08:54:41.994207242Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-06T08:54:44.826121886Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-04-06T08:54:45.484467712Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:11ef7eb924077338758ae26b531c652b6d81d8d46df77eb6a8a00feda53bf7b8",
                    "sha256:d09260b6e16d801c0684056965cf2b7e3a2c59de01516c8887061248542e791c",
                    "sha256:cf65a1b85d34110ea5077330fcab8bacf6e5c3ff5875a866ed1d811d04cffd2c",
                    "sha256:734851ce0b9c914d70e823629e998c3fb11072c71d82f3ef5fbe23d2a6a4a20f",
                    "sha256:9fbb481099c2859ef8cef9c1069fd36896533c7133792669d8b894584a27bd86"
                ]
            }
        },
        "1.11.7-alpine3.9": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:4e1ed9d2f57bbd4a0b4df63efe94de04721772f8b044a3a3a7987d7c183d88c4",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "c6b473b27d086380eeabc697ed44177d7f716418770c596cd83c7b1578f8764d",
            "container_config": {
                "Hostname": "c6b473b27d08",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:4e1ed9d2f57bbd4a0b4df63efe94de04721772f8b044a3a3a7987d7c183d88c4",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-04-06T08:51:30.392368096Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-08T03:37:01.50193332Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2e80d7b240ac8c544a868180a2a08b2533c450061e0ec276ceacaff7b87a380c in / "
                },
                {
                    "created": "2019-03-08T03:37:02.050813908Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-08T04:18:47.872266951Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-03-08T04:18:49.827739314Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-04-06T08:48:22.227320193Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.7",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-06T08:51:21.703447089Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'cfbe1078fbb1e34e77ad09de40d96d47ef280ba15791da9f02fc05486a4b16bd *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-04-06T08:51:23.908177902Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-06T08:51:24.850720435Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-06T08:51:28.08138423Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-04-06T08:51:30.392368096Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b83703e07573d5eac589806f0afe1648f84ec111b9169ff9db1884730b5603e3",
                    "sha256:5e245268d749dca621ed93898e5846607a63f748ca5c57b0f2a9539dcc71dc23",
                    "sha256:912faf05df34b8984d955330b3678b8704e2668217e5c8d7e1a678cca17e462d",
                    "sha256:66c5a9d3c7a0eff782c2e7111e963ef89d901203800d3fdd6266cb765344d3b5",
                    "sha256:08c1fb067dc1aa24ea9a81eb5192dda3ae3705090384412f5fae9bfe287f7746"
                ]
            }
        },
        "1.11.7-stretch": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9562c5938d6d8045d50ff6b1f08861878c140255a782bea7abf80c4d1aad66c2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "795ea82403abee4d74a5848ac008384ca59424212d69d3053a830c5e7b726603",
            "container_config": {
                "Hostname": "795ea82403ab",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9562c5938d6d8045d50ff6b1f08861878c140255a782bea7abf80c4d1aad66c2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-04-06T08:48:11.273212276Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-27T08:47:20.29754472Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8f991b13b28ce1de362b9f00e69aac8edc28124a08adeeb3b7fb02153e0b4e92 in / "
                },
                {
                    "created": "2019-03-27T08:47:21.400108146Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-27T10:15:55.61565095Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-27T10:16:13.26020269Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-03-27T10:17:48.418797173Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-27T22:20:12.728264648Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-04-06T08:47:35.444217278Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.7",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-06T08:48:06.108134907Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='db687814288b3b541c1754dfd4ecc2b8fd0d5e7995624945e3054a350ca573d8' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='7d6ae2e119a432a4b00a6dc2c2085f56ead4973f40d58e534308f1535b45afc2' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='fe7ba5046aa4f52ae8fa36531aac4a949ad8e10c02b0f4aa05a420b4e803f8c6' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='86d11a58bd99298719cb7ebea160255aefc56735d14089d2b2241d581967a482' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='43b04f58b37808f86f526e6f1a8d6643fe196c1314acc3d7db710ec9ae960d18' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='178932743c7af70c94f170f800202f490e0f85e74796dabe0a23d50630ba0333' ;; \t\t*) goRelArch='src'; goRelSha256='cfbe1078fbb1e34e77ad09de40d96d47ef280ba15791da9f02fc05486a4b16bd'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-04-06T08:48:07.500428887Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-06T08:48:08.210394365Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-06T08:48:10.232767809Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-04-06T08:48:11.273212276Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3fa17642530603a1dab4c25c34426e7befde7f29d5c58cf662286e2bedbd39cf",
                    "sha256:00f1e9bd82fbbd9ae578f126bea9d01d726299a87ffbf4c2d3b0ba3a751babcd",
                    "sha256:22758826ae9f21fa3d48d7827dc358962d0d52ae42671a6fbd96ef84f865a633",
                    "sha256:34aa8af3c0e3e90d629b5e52a9a3a57cd190a70802063784d9a8f328a1a4a0c8",
                    "sha256:2ff0644d5fee32819749af50a36d3d1fdd22f88cd8309b530d86e6db0cf68322",
                    "sha256:b4700eff5beceaea66a4bb54f53f527fc5f9fada8407f7b4603838e30682f46f",
                    "sha256:a0bdc50a40c56ea057d892eecf77c3ddead1eb403d70cd69803b00b151c7e044"
                ]
            }
        },
        "1.11.8-alpine": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2142a3b0683868d39cc542a35bea9bd92b30c8a5c50de0c1f9915c79435d9cd5",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "5ae3ef0e320e59e8e6dfcccfacc1a22441554db2e152bd3e05ea99fbf158298d",
            "container_config": {
                "Hostname": "5ae3ef0e320e",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2142a3b0683868d39cc542a35bea9bd92b30c8a5c50de0c1f9915c79435d9cd5",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-04-10T14:14:46.802613611Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-04-10T08:49:11.672618918Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:30e0a8ccdca70b20b8ce637f0ba5108157f4ba491447d20aafbe45d82392bd81 in / "
                },
                {
                    "created": "2019-04-10T08:49:12.263392341Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-10T08:49:19.217880912Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-04-10T08:49:34.799051781Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-04-10T14:07:56.456948094Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.8",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-10T14:14:38.180581858Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'ba18bf8daf89218f9f2d853b3a9bc117d0ac24d3c98dac3474ed9ff9bf8efead *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-04-10T14:14:40.451877776Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-10T14:14:41.602990101Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-10T14:14:45.516958227Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-04-10T14:14:46.802613611Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e64a3852ea352321b9dc050e64aec275774fd574989d219fc541973a12445c7e",
                    "sha256:cb0b8a877518faf2fba91c8ee2f399d158d3910a4b7938aa68f947af24149d8f",
                    "sha256:916dd9a95078a646cc2609836012bc9fcb04a32dbb750666ff9f0a76deb4269d",
                    "sha256:c30cca73863f2078a3d6a27ee3f9e406c6b70e53b91aa5ada163e5e9f601dcfe",
                    "sha256:e8ae2b0e2b130184e0678c63ef0d1b3849715fe825f28625bb12bf9e7c447fc4"
                ]
            }
        },
        "1.11.8-alpine3.8": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7b77173dc8ce1569559e5f38ea03c4464db0c6caea448e6fdf625f1b0c6ec9d7",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f16934b64b594c8cb3b7d77a3f6b181665a77d910512b98022985086a42fb245",
            "container_config": {
                "Hostname": "f16934b64b59",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7b77173dc8ce1569559e5f38ea03c4464db0c6caea448e6fdf625f1b0c6ec9d7",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-04-09T08:51:04.414285982Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-08T03:37:11.938973415Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bcdcef68213641766a211b02ac762b03c21a178b3ed03c4480cc736abd97b50c in / "
                },
                {
                    "created": "2019-03-08T03:37:12.471254702Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-08T11:57:16.774040584Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-03-08T11:57:19.559637478Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-04-09T08:48:07.833184322Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.8",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-09T08:50:58.207176328Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'ba18bf8daf89218f9f2d853b3a9bc117d0ac24d3c98dac3474ed9ff9bf8efead *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-04-09T08:51:00.059206367Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-09T08:51:00.831476971Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-09T08:51:03.431141925Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-04-09T08:51:04.414285982Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:11ef7eb924077338758ae26b531c652b6d81d8d46df77eb6a8a00feda53bf7b8",
                    "sha256:d09260b6e16d801c0684056965cf2b7e3a2c59de01516c8887061248542e791c",
                    "sha256:cf65a1b85d34110ea5077330fcab8bacf6e5c3ff5875a866ed1d811d04cffd2c",
                    "sha256:57319e9bafe676ad7a2b825b9cb9e5b1b1fc9350a1bf4b08e931dd3bb94a93c7",
                    "sha256:63752c28716148710a50147665507ac28fffe4118e1a5b7c1940eadb4edf304a"
                ]
            }
        },
        "1.11.8-alpine3.9": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2142a3b0683868d39cc542a35bea9bd92b30c8a5c50de0c1f9915c79435d9cd5",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "5ae3ef0e320e59e8e6dfcccfacc1a22441554db2e152bd3e05ea99fbf158298d",
            "container_config": {
                "Hostname": "5ae3ef0e320e",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2142a3b0683868d39cc542a35bea9bd92b30c8a5c50de0c1f9915c79435d9cd5",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-04-10T14:14:46.802613611Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-04-10T08:49:11.672618918Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:30e0a8ccdca70b20b8ce637f0ba5108157f4ba491447d20aafbe45d82392bd81 in / "
                },
                {
                    "created": "2019-04-10T08:49:12.263392341Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-10T08:49:19.217880912Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-04-10T08:49:34.799051781Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-04-10T14:07:56.456948094Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.8",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-10T14:14:38.180581858Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'ba18bf8daf89218f9f2d853b3a9bc117d0ac24d3c98dac3474ed9ff9bf8efead *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-04-10T14:14:40.451877776Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-10T14:14:41.602990101Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-10T14:14:45.516958227Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-04-10T14:14:46.802613611Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e64a3852ea352321b9dc050e64aec275774fd574989d219fc541973a12445c7e",
                    "sha256:cb0b8a877518faf2fba91c8ee2f399d158d3910a4b7938aa68f947af24149d8f",
                    "sha256:916dd9a95078a646cc2609836012bc9fcb04a32dbb750666ff9f0a76deb4269d",
                    "sha256:c30cca73863f2078a3d6a27ee3f9e406c6b70e53b91aa5ada163e5e9f601dcfe",
                    "sha256:e8ae2b0e2b130184e0678c63ef0d1b3849715fe825f28625bb12bf9e7c447fc4"
                ]
            }
        },
        "1.11.8-stretch": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:55a3cbc2c225988c023230e03b04b3de97793c06f974834e174a2691aafd982d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "2c2db8bb0bd336d4da59daf1682136765d29d21efe4a7ec10aa34603d6fe440c",
            "container_config": {
                "Hostname": "2c2db8bb0bd3",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:55a3cbc2c225988c023230e03b04b3de97793c06f974834e174a2691aafd982d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-04-09T08:44:56.938983976Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-27T08:47:20.29754472Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8f991b13b28ce1de362b9f00e69aac8edc28124a08adeeb3b7fb02153e0b4e92 in / "
                },
                {
                    "created": "2019-03-27T08:47:21.400108146Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-27T10:15:55.61565095Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-27T10:16:13.26020269Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-03-27T10:17:48.418797173Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-27T22:20:12.728264648Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-04-09T08:44:23.517302833Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.8",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-09T08:44:51.489771Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='e32ab1c934b747999d04e8a550b97f4647f8b1b43e152de5650d4476bfd1d2e1' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='c5d4fd90242761c214124eedb0ffc35af52be19e7a4eb4006b036b5dcb422c87' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='68c42239d118b27f5e52a449f444c8a53e64a181b12d9ecbda14d0c3b765a5ee' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='e0e62a02516fa2197a2eb319a6957e7bd7007005a11b4da5c6650879999db899' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='4f0559832957c37022f771420902c1f19100c0a5b391c4957753c521a9eba56e' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='023928ee1d896af181c62acfd0a4e7bd713c8503a9b3b9aec745a3a830630e1b' ;; \t\t*) goRelArch='src'; goRelSha256='ba18bf8daf89218f9f2d853b3a9bc117d0ac24d3c98dac3474ed9ff9bf8efead'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-04-09T08:44:53.264968707Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-09T08:44:54.204622764Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-09T08:44:56.255350731Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-04-09T08:44:56.938983976Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3fa17642530603a1dab4c25c34426e7befde7f29d5c58cf662286e2bedbd39cf",
                    "sha256:00f1e9bd82fbbd9ae578f126bea9d01d726299a87ffbf4c2d3b0ba3a751babcd",
                    "sha256:22758826ae9f21fa3d48d7827dc358962d0d52ae42671a6fbd96ef84f865a633",
                    "sha256:34aa8af3c0e3e90d629b5e52a9a3a57cd190a70802063784d9a8f328a1a4a0c8",
                    "sha256:2ff0644d5fee32819749af50a36d3d1fdd22f88cd8309b530d86e6db0cf68322",
                    "sha256:401f20ffc479c0ec71c0f5af880d95601f6a7b6daeef3cc6728f824252fcecb0",
                    "sha256:52563ec1337edd2c2aa1d6b56c72689fe956f6310f1fe88475f2caf1a7b1859d"
                ]
            }
        },
        "1.11.9-alpine": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a5e27e78670aaca4eca45d6348538a7905e9b563c394a861446da408c3899f70",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "ae7d7f84208fafddcb306ee55fc88efc1972fedd06b0eac5afe85a6230143468",
            "container_config": {
                "Hostname": "ae7d7f84208f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a5e27e78670aaca4eca45d6348538a7905e9b563c394a861446da408c3899f70",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-04-15T19:59:44.130358916Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-04-10T08:49:11.672618918Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:30e0a8ccdca70b20b8ce637f0ba5108157f4ba491447d20aafbe45d82392bd81 in / "
                },
                {
                    "created": "2019-04-10T08:49:12.263392341Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-10T08:49:19.217880912Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-04-10T08:49:34.799051781Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-04-15T19:56:36.267321669Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.9",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-15T19:59:27.727460085Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'ee80684b352f8d6b49d804d4e615f015ae92da41c4096cfee89ed4783b2498e3 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-04-15T19:59:32.205695016Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-15T19:59:34.461120817Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-15T19:59:41.302591744Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-04-15T19:59:44.130358916Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e64a3852ea352321b9dc050e64aec275774fd574989d219fc541973a12445c7e",
                    "sha256:cb0b8a877518faf2fba91c8ee2f399d158d3910a4b7938aa68f947af24149d8f",
                    "sha256:916dd9a95078a646cc2609836012bc9fcb04a32dbb750666ff9f0a76deb4269d",
                    "sha256:a730730ef0020ee3879a4bf19375a2dc1f768a609f926e5ec82f8db5db15a5be",
                    "sha256:a38019845e2f87e6ca8559a2ad2140c613b319b0983aedc047f2f831e6d809ba"
                ]
            }
        },
        "1.11.9-alpine3.8": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7482d3d5d57a1940dda8102ddb2e7830cdfa85388375cdfeeeff6ea75187850b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f0ff73322f9e7f96d8d6b17403c54358ab50d5f43963e6fd4d38ef2facc49d7b",
            "container_config": {
                "Hostname": "f0ff73322f9e",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7482d3d5d57a1940dda8102ddb2e7830cdfa85388375cdfeeeff6ea75187850b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-04-15T20:03:14.61207235Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-08T03:37:11.938973415Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bcdcef68213641766a211b02ac762b03c21a178b3ed03c4480cc736abd97b50c in / "
                },
                {
                    "created": "2019-03-08T03:37:12.471254702Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-08T11:57:16.774040584Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-03-08T11:57:19.559637478Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-04-15T20:00:05.703022061Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.9",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-15T20:03:00.820972851Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'ee80684b352f8d6b49d804d4e615f015ae92da41c4096cfee89ed4783b2498e3 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-04-15T20:03:02.733676313Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-15T20:03:04.520926904Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-15T20:03:12.189293878Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-04-15T20:03:14.61207235Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:11ef7eb924077338758ae26b531c652b6d81d8d46df77eb6a8a00feda53bf7b8",
                    "sha256:d09260b6e16d801c0684056965cf2b7e3a2c59de01516c8887061248542e791c",
                    "sha256:cf65a1b85d34110ea5077330fcab8bacf6e5c3ff5875a866ed1d811d04cffd2c",
                    "sha256:16617c47c28957800b3b4dc207503c91da18ebf175f21e5c284982cf601b8f67",
                    "sha256:21ef6dcd6344ff2008d89438a460e3d4d575ef0cd4463d9eabd72b7f35cb40bb"
                ]
            }
        },
        "1.11.9-alpine3.9": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a5e27e78670aaca4eca45d6348538a7905e9b563c394a861446da408c3899f70",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "ae7d7f84208fafddcb306ee55fc88efc1972fedd06b0eac5afe85a6230143468",
            "container_config": {
                "Hostname": "ae7d7f84208f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a5e27e78670aaca4eca45d6348538a7905e9b563c394a861446da408c3899f70",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-04-15T19:59:44.130358916Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-04-10T08:49:11.672618918Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:30e0a8ccdca70b20b8ce637f0ba5108157f4ba491447d20aafbe45d82392bd81 in / "
                },
                {
                    "created": "2019-04-10T08:49:12.263392341Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-10T08:49:19.217880912Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-04-10T08:49:34.799051781Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-04-15T19:56:36.267321669Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.9",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-15T19:59:27.727460085Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'ee80684b352f8d6b49d804d4e615f015ae92da41c4096cfee89ed4783b2498e3 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-04-15T19:59:32.205695016Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-15T19:59:34.461120817Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-15T19:59:41.302591744Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-04-15T19:59:44.130358916Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e64a3852ea352321b9dc050e64aec275774fd574989d219fc541973a12445c7e",
                    "sha256:cb0b8a877518faf2fba91c8ee2f399d158d3910a4b7938aa68f947af24149d8f",
                    "sha256:916dd9a95078a646cc2609836012bc9fcb04a32dbb750666ff9f0a76deb4269d",
                    "sha256:a730730ef0020ee3879a4bf19375a2dc1f768a609f926e5ec82f8db5db15a5be",
                    "sha256:a38019845e2f87e6ca8559a2ad2140c613b319b0983aedc047f2f831e6d809ba"
                ]
            }
        },
        "1.11.9-stretch": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a12449eebfd401789abdad490757d0f06804b293bd449901c69f31fc6db9944d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "b286666954c76310545bdc6185f0be34c63a03a5025bf4328261408aa09e01d4",
            "container_config": {
                "Hostname": "b286666954c7",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a12449eebfd401789abdad490757d0f06804b293bd449901c69f31fc6db9944d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-04-15T19:56:23.013392489Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-27T08:47:20.29754472Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8f991b13b28ce1de362b9f00e69aac8edc28124a08adeeb3b7fb02153e0b4e92 in / "
                },
                {
                    "created": "2019-03-27T08:47:21.400108146Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-27T10:15:55.61565095Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-27T10:16:13.26020269Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-03-27T10:17:48.418797173Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-27T22:20:12.728264648Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-04-15T19:55:45.046174366Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.9",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-15T19:56:09.201928452Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='e88aa3e39104e3ba6a95a4e05629348b4a1ec82791fb3c941a493ca349730608' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='f0d7b039cae61efdc346669f3459460e3dc03b6c6de528ca107fc53970cba0d1' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='892ab6c2510c4caa5905b3b1b6a1d4c6f04e384841fec50881ca2be7e8accf05' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='0fa4001fcf1ef0644e261bf6dde02fc9f10ae4df6d74fda61fc4d3c3cbef1d79' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='6a0a6a80997529543a434667f404ead2da88ac8fecc59bfba82f62bd2588e6c8' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='0dd7073469d0f414b264fbadc4f720f9582b13ff6a0a978a9ef23020f9e42ac1' ;; \t\t*) goRelArch='src'; goRelSha256='ee80684b352f8d6b49d804d4e615f015ae92da41c4096cfee89ed4783b2498e3'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-04-15T19:56:15.952649259Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-15T19:56:18.380808931Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-15T19:56:21.527843335Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-04-15T19:56:23.013392489Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3fa17642530603a1dab4c25c34426e7befde7f29d5c58cf662286e2bedbd39cf",
                    "sha256:00f1e9bd82fbbd9ae578f126bea9d01d726299a87ffbf4c2d3b0ba3a751babcd",
                    "sha256:22758826ae9f21fa3d48d7827dc358962d0d52ae42671a6fbd96ef84f865a633",
                    "sha256:34aa8af3c0e3e90d629b5e52a9a3a57cd190a70802063784d9a8f328a1a4a0c8",
                    "sha256:2ff0644d5fee32819749af50a36d3d1fdd22f88cd8309b530d86e6db0cf68322",
                    "sha256:b2259f57a41838ed548a1d10a42d80f5a9007249ae36d2ba56080051933966d9",
                    "sha256:f3251fb51e6fdb1123c4a6b28ae9d31bbf03de1bcbc9122055a8e2012944dd64"
                ]
            }
        },
        "1.11beta1-alpine": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2f71dd007bb016f127798120dcbc06b3818d78680f083b947c8cc3745e5eefb3",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "476feebcc7e0d602851f9113ef7dc1176e8ecce6533ba14b72abff0cece41e5c",
            "container_config": {
                "Hostname": "476feebcc7e0",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2f71dd007bb016f127798120dcbc06b3818d78680f083b947c8cc3745e5eefb3",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-07-13T08:45:21.065857403Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-06T08:41:03.043896054Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:199a5a48bddabaf1f649f58f3b17c323a1aa1a50e939dfdea3542e4041e91b7b in / "
                },
                {
                    "created": "2018-07-06T08:41:03.994573726Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2018-07-06T08:41:04.672265132Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-13T08:41:59.008156316Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-07-13T08:42:00.758228253Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-07-13T08:42:01.804676866Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11beta1",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-13T08:45:15.689145844Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '5955eeb8f45e02aa5357fc18e62f1fe6c1b19e0c50aba93b8b9d9ef13b862dda *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf /go-alpine-patches; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-07-13T08:45:17.669449032Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-13T08:45:18.338413261Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-13T08:45:20.249023628Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-07-13T08:45:21.065857403Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd0a9a09f5aaebcb67aa6d173252640c31eecded3c0aee8bcf89b9f307fad7d2",
                    "sha256:b43ad2345ba516d8bf2087e0906db76bdb5fbd45c1e9e314afd0c3a8e9f13ea2",
                    "sha256:23510302cbd3bbd8afeeb07264fc540619e3f48d3ab6cc4c4d72e48a1f219cc0",
                    "sha256:5f136df344f25339e7ce78dbaa7371742167fd1a857cfdd33b2fa59a431e182e",
                    "sha256:e0d867c1cbeb8a07b9c16764804de8812731fa817c87750b212fd3a280a90f6b",
                    "sha256:3b8b3da3d8f83b303aa1b03923496bf68b663fbb58723c594b38684bce8464fc"
                ]
            }
        },
        "1.11beta1-alpine3.7": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ecc388e87a7fe88ad94d1626a25e4c7b61df2798eddd23b4ce83b381baed2522",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "1fb06046f680b9666156297359fd1771e1a033c20d66213dcca4c4ccd3212326",
            "container_config": {
                "Hostname": "1fb06046f680",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ecc388e87a7fe88ad94d1626a25e4c7b61df2798eddd23b4ce83b381baed2522",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-06-28T08:49:51.320597207Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2017-12-01T18:42:42.17629931Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a6ef3cbbb1c0e5dfc6c3e41d70fd93e548594d9cb42c067e52df46d418c10a79 in / "
                },
                {
                    "created": "2017-12-01T18:42:42.958900633Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2017-12-01T18:42:43.535835924Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-28T07:00:41.641030657Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2017-12-28T07:00:43.273265682Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-06-28T08:46:36.462260184Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11beta1",
                    "empty_layer": true
                },
                {
                    "created": "2018-06-28T08:49:46.794881572Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '5955eeb8f45e02aa5357fc18e62f1fe6c1b19e0c50aba93b8b9d9ef13b862dda *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf /go-alpine-patches; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-06-28T08:49:48.347354503Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-06-28T08:49:49.015703522Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-06-28T08:49:50.692315657Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-06-28T08:49:51.320597207Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:58477411d6070ff18d58000c0453ecb014b688000a033b2c881d393eabe81d8c",
                    "sha256:05f52530ca7ba1de0fc93f4d43c9dabc47e18efdf1b886e4d7e533c72b46d443",
                    "sha256:629a3191dada1a2e74de36174ddfd8fe56670e4538b5d0e5419286736609a13e",
                    "sha256:a8406382f5f096df763032c41e2b49ea3a53d52a786a372ecc0529a2de6a1b50",
                    "sha256:d5afdf97d28d7a7961974939fe899923eab0917ce6dccbec3c850d319bb69ebd",
                    "sha256:cf6adfb3ce6ae35ba15525600454803511641c90bd97224a28b33555d034275a"
                ]
            }
        },
        "1.11beta1-alpine3.8": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2f71dd007bb016f127798120dcbc06b3818d78680f083b947c8cc3745e5eefb3",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "476feebcc7e0d602851f9113ef7dc1176e8ecce6533ba14b72abff0cece41e5c",
            "container_config": {
                "Hostname": "476feebcc7e0",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2f71dd007bb016f127798120dcbc06b3818d78680f083b947c8cc3745e5eefb3",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-07-13T08:45:21.065857403Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-06T08:41:03.043896054Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:199a5a48bddabaf1f649f58f3b17c323a1aa1a50e939dfdea3542e4041e91b7b in / "
                },
                {
                    "created": "2018-07-06T08:41:03.994573726Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2018-07-06T08:41:04.672265132Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-13T08:41:59.008156316Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-07-13T08:42:00.758228253Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-07-13T08:42:01.804676866Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11beta1",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-13T08:45:15.689145844Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '5955eeb8f45e02aa5357fc18e62f1fe6c1b19e0c50aba93b8b9d9ef13b862dda *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf /go-alpine-patches; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-07-13T08:45:17.669449032Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-13T08:45:18.338413261Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-13T08:45:20.249023628Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-07-13T08:45:21.065857403Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd0a9a09f5aaebcb67aa6d173252640c31eecded3c0aee8bcf89b9f307fad7d2",
                    "sha256:b43ad2345ba516d8bf2087e0906db76bdb5fbd45c1e9e314afd0c3a8e9f13ea2",
                    "sha256:23510302cbd3bbd8afeeb07264fc540619e3f48d3ab6cc4c4d72e48a1f219cc0",
                    "sha256:5f136df344f25339e7ce78dbaa7371742167fd1a857cfdd33b2fa59a431e182e",
                    "sha256:e0d867c1cbeb8a07b9c16764804de8812731fa817c87750b212fd3a280a90f6b",
                    "sha256:3b8b3da3d8f83b303aa1b03923496bf68b663fbb58723c594b38684bce8464fc"
                ]
            }
        },
        "1.11beta1-stretch": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d3dcd9047ea39869c98ffa7ccaef182da33f936a8ebb39f5446d5258eb2ac300",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "c68f56cee19d316f821ecf26fd015407ab33299cdb60757d939d21e97d2a146d",
            "container_config": {
                "Hostname": "c68f56cee19d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d3dcd9047ea39869c98ffa7ccaef182da33f936a8ebb39f5446d5258eb2ac300",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-07-18T04:25:40.107159525Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-17T08:47:22.828630475Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5e1a1aab339b0b1e3047eeab5d0c6c74ad3f388d0407dc86f41e4a78b99c6fd8 in / "
                },
                {
                    "created": "2018-07-17T08:47:23.896565687Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-17T14:51:45.703478382Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T14:52:06.204758622Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-07-17T14:54:31.796008203Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-18T04:25:05.968811446Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-18T04:25:06.821947464Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11beta1",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-18T04:25:35.925803416Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='df7fe096ffab5d331d35c6d038d2ec0426b45ce17f55a93037e371d3af9d4e6d' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='844ed9e34b118a9c2b069a18924a7879236929e08c887a92e5be1af5d701fb90' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='9c1795148e777c81ac3cb381e3ea970eea60f5db2323658c061e5c4382125dd4' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='a6e804652f58785b3dfe272d96b8206250210e7ba7bdcb1ffb726ab3753db4af' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='66529a525c0369d2b79ecd19f6d16444ed162c9bf88f7b37715520841c36de65' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='731b9e6ac0d4c9709297f0efc1a6455589b978d2ecc207184d3e5be07a130c9c' ;; \t\t*) goRelArch='src'; goRelSha256='5955eeb8f45e02aa5357fc18e62f1fe6c1b19e0c50aba93b8b9d9ef13b862dda'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-07-18T04:25:37.262782439Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-18T04:25:37.902416675Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-18T04:25:39.473039998Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-07-18T04:25:40.107159525Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:16815f59abc025030807119ef7ffa046ee88fd26cdca83380d6c7219cc1edae1",
                    "sha256:aeecc946906a50c3609d4615bddd5c132bfa5635f13a744e00cfbc0b66599d5d",
                    "sha256:b4d644f97489f0d15f730d48a24c0db08df74b12f72cedd5e7817638a471d92e",
                    "sha256:21fdf2fa41bb0abb9ae8d1b156d64a219ef332b120b2269f46cd422a8db9c379",
                    "sha256:2c1c91db38b25521158d58cd715dad770ce969a9792b32ac6fa5379f56383012",
                    "sha256:68d978306a7a9fbdb06280ffa63ea34c336e674ae8e7ecf31a1a2dbc774ba52f",
                    "sha256:b3229205eca04e4e1af8f22663ca08b7206e90020167d84d45a7e5559d0a6f3f"
                ]
            }
        },
        "1.11beta2-alpine": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11beta2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:8ea6353ba5e58007955ae795a455d5312211f20943d51613bcca1471b1aabd2b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "7becce1ebf2c0d468d3e643a5bf44c7b2c24cfa100eb8b404f05b328ce8b4f22",
            "container_config": {
                "Hostname": "7becce1ebf2c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11beta2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:8ea6353ba5e58007955ae795a455d5312211f20943d51613bcca1471b1aabd2b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-07-21T09:02:39.779241711Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-06T08:41:03.043896054Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:199a5a48bddabaf1f649f58f3b17c323a1aa1a50e939dfdea3542e4041e91b7b in / "
                },
                {
                    "created": "2018-07-06T08:41:03.994573726Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2018-07-06T08:41:04.672265132Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-13T08:41:59.008156316Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-07-13T08:42:00.758228253Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-07-21T08:59:52.625534417Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11beta2",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-21T09:02:35.562762777Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '50f4bd23334f54c60ad7d07c742874c62488cf1556fa3e6e51dc03d5f5abda81 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf /go-alpine-patches; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-07-21T09:02:37.048231019Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-21T09:02:37.688241828Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-21T09:02:39.187160525Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-07-21T09:02:39.779241711Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd0a9a09f5aaebcb67aa6d173252640c31eecded3c0aee8bcf89b9f307fad7d2",
                    "sha256:b43ad2345ba516d8bf2087e0906db76bdb5fbd45c1e9e314afd0c3a8e9f13ea2",
                    "sha256:23510302cbd3bbd8afeeb07264fc540619e3f48d3ab6cc4c4d72e48a1f219cc0",
                    "sha256:5f136df344f25339e7ce78dbaa7371742167fd1a857cfdd33b2fa59a431e182e",
                    "sha256:78d39a23911012326b4035102a4128802ebbbab6ed8406c6a24d59c56273cc68",
                    "sha256:90545076bef1e3f7b791fd63be028cf3d857308add99230ebabc74646a113383"
                ]
            }
        },
        "1.11beta2-alpine3.7": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11beta2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:79b02c704bcd068d0d304d5b748e439439c3ef29222dfdc1c4e7f78d037aa6c2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "70f1a79de2e89e482aa2a41684b39939098c174a82e06f49950fd8d812844e2e",
            "container_config": {
                "Hostname": "70f1a79de2e8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11beta2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:79b02c704bcd068d0d304d5b748e439439c3ef29222dfdc1c4e7f78d037aa6c2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-07-21T09:05:48.338869818Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2017-12-01T18:42:42.17629931Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a6ef3cbbb1c0e5dfc6c3e41d70fd93e548594d9cb42c067e52df46d418c10a79 in / "
                },
                {
                    "created": "2017-12-01T18:42:42.958900633Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2017-12-01T18:42:43.535835924Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-28T07:00:41.641030657Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2017-12-28T07:00:43.273265682Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-07-21T09:03:03.315700627Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11beta2",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-21T09:05:43.96089298Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '50f4bd23334f54c60ad7d07c742874c62488cf1556fa3e6e51dc03d5f5abda81 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf /go-alpine-patches; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-07-21T09:05:45.544924575Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-21T09:05:46.164616429Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-21T09:05:47.704196975Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-07-21T09:05:48.338869818Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:58477411d6070ff18d58000c0453ecb014b688000a033b2c881d393eabe81d8c",
                    "sha256:05f52530ca7ba1de0fc93f4d43c9dabc47e18efdf1b886e4d7e533c72b46d443",
                    "sha256:629a3191dada1a2e74de36174ddfd8fe56670e4538b5d0e5419286736609a13e",
                    "sha256:a8406382f5f096df763032c41e2b49ea3a53d52a786a372ecc0529a2de6a1b50",
                    "sha256:ec83e1c4fb60ae03b1a9244a5cc8bad1b770b704805f39ca6cd659b513629774",
                    "sha256:b72e86b6f71f17d9722394464faf6457fe4088167aa7ebaa1550b84e51640673"
                ]
            }
        },
        "1.11beta2-alpine3.8": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11beta2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:8ea6353ba5e58007955ae795a455d5312211f20943d51613bcca1471b1aabd2b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "7becce1ebf2c0d468d3e643a5bf44c7b2c24cfa100eb8b404f05b328ce8b4f22",
            "container_config": {
                "Hostname": "7becce1ebf2c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11beta2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:8ea6353ba5e58007955ae795a455d5312211f20943d51613bcca1471b1aabd2b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-07-21T09:02:39.779241711Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-06T08:41:03.043896054Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:199a5a48bddabaf1f649f58f3b17c323a1aa1a50e939dfdea3542e4041e91b7b in / "
                },
                {
                    "created": "2018-07-06T08:41:03.994573726Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2018-07-06T08:41:04.672265132Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-13T08:41:59.008156316Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-07-13T08:42:00.758228253Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-07-21T08:59:52.625534417Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11beta2",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-21T09:02:35.562762777Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '50f4bd23334f54c60ad7d07c742874c62488cf1556fa3e6e51dc03d5f5abda81 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf /go-alpine-patches; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-07-21T09:02:37.048231019Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-21T09:02:37.688241828Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-21T09:02:39.187160525Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-07-21T09:02:39.779241711Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd0a9a09f5aaebcb67aa6d173252640c31eecded3c0aee8bcf89b9f307fad7d2",
                    "sha256:b43ad2345ba516d8bf2087e0906db76bdb5fbd45c1e9e314afd0c3a8e9f13ea2",
                    "sha256:23510302cbd3bbd8afeeb07264fc540619e3f48d3ab6cc4c4d72e48a1f219cc0",
                    "sha256:5f136df344f25339e7ce78dbaa7371742167fd1a857cfdd33b2fa59a431e182e",
                    "sha256:78d39a23911012326b4035102a4128802ebbbab6ed8406c6a24d59c56273cc68",
                    "sha256:90545076bef1e3f7b791fd63be028cf3d857308add99230ebabc74646a113383"
                ]
            }
        },
        "1.11beta2-stretch": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11beta2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:44604214364a99365492a991ca890907d46bc525a350d4f2b75a6266c761d6f4",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "07794af1409954095292fc457aeedf6f49516d39933d5522652612a77a4c3c6f",
            "container_config": {
                "Hostname": "07794af14099",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11beta2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:44604214364a99365492a991ca890907d46bc525a350d4f2b75a6266c761d6f4",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-07-21T08:59:28.432643086Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-17T08:47:22.828630475Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5e1a1aab339b0b1e3047eeab5d0c6c74ad3f388d0407dc86f41e4a78b99c6fd8 in / "
                },
                {
                    "created": "2018-07-17T08:47:23.896565687Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-17T14:51:45.703478382Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T14:52:06.204758622Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-07-17T14:54:31.796008203Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-18T04:25:05.968811446Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-21T08:58:57.860918484Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11beta2",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-21T08:59:24.118109415Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='ccb60f1ae6efe4fcef115db8143eb7f9ba134c63486f47b2c5176706ede35af5' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='3242225cc9bb151789b4ba606903862b68b0e81682a5ab75245d76ab1ddf38fb' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='835fc6ebae5cb4368fc39683a911fe5a25c36b4251b2b254112f3fc8f36a9f39' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='acc26b494699f7dca7e30ec2c08d0f2af8813437a234f17605fafe9c7c8cf69e' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='31168f17e2791e664e591dc4c5e2c37ab5c3b942a2898d84075437daed3fc9f9' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='648b0f22ff517668bf4b642749a2a479d421f69b1e11bcd0ab1a71994e1c94db' ;; \t\t*) goRelArch='src'; goRelSha256='50f4bd23334f54c60ad7d07c742874c62488cf1556fa3e6e51dc03d5f5abda81'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-07-21T08:59:25.520994131Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-21T08:59:26.119713656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-21T08:59:27.798539847Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-07-21T08:59:28.432643086Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:16815f59abc025030807119ef7ffa046ee88fd26cdca83380d6c7219cc1edae1",
                    "sha256:aeecc946906a50c3609d4615bddd5c132bfa5635f13a744e00cfbc0b66599d5d",
                    "sha256:b4d644f97489f0d15f730d48a24c0db08df74b12f72cedd5e7817638a471d92e",
                    "sha256:21fdf2fa41bb0abb9ae8d1b156d64a219ef332b120b2269f46cd422a8db9c379",
                    "sha256:2c1c91db38b25521158d58cd715dad770ce969a9792b32ac6fa5379f56383012",
                    "sha256:07f2fd599efc2ae3653add81a3230c52712dbce485eaaa330bc664c4b5decb0e",
                    "sha256:0df8d5380f54136be6b169e44e6894f828bbf5e69ce4ad3c110dff350668c1a1"
                ]
            }
        },
        "1.11beta3-alpine": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11beta3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:09bd2f277c2704da11f0c65b1b57a35e84a9026284729eba28399d52917b79d7",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "fc372cd1258fdf603ec6a8c405c9c425e50528234dbf6d6123637d12881be230",
            "container_config": {
                "Hostname": "fc372cd1258f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11beta3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:09bd2f277c2704da11f0c65b1b57a35e84a9026284729eba28399d52917b79d7",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-08-04T08:47:53.331983604Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-06T08:41:03.043896054Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:199a5a48bddabaf1f649f58f3b17c323a1aa1a50e939dfdea3542e4041e91b7b in / "
                },
                {
                    "created": "2018-07-06T08:41:03.994573726Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2018-07-06T08:41:04.672265132Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-13T08:41:59.008156316Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-07-13T08:42:00.758228253Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-08-04T08:44:28.78955043Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11beta3",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-04T08:47:20.787561492Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'b11a92814601c85910e3f98dd06b941974d03b48c2c255defbee1cc99f19d721 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf /go-alpine-patches; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-08-04T08:47:35.571220419Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-04T08:47:36.255747821Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-04T08:47:37.968257178Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-08-04T08:47:53.331983604Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd0a9a09f5aaebcb67aa6d173252640c31eecded3c0aee8bcf89b9f307fad7d2",
                    "sha256:b43ad2345ba516d8bf2087e0906db76bdb5fbd45c1e9e314afd0c3a8e9f13ea2",
                    "sha256:23510302cbd3bbd8afeeb07264fc540619e3f48d3ab6cc4c4d72e48a1f219cc0",
                    "sha256:5f136df344f25339e7ce78dbaa7371742167fd1a857cfdd33b2fa59a431e182e",
                    "sha256:6e6da556c5312c0d9dd272501285f8eca2d5b8e3cbe9d685ddb0b3a5e217bdd0",
                    "sha256:f452f3de56cb0d2875f605f6f82c0854c60cc7fa3574f4516ec0c7ddbf4db14f"
                ]
            }
        },
        "1.11beta3-alpine3.7": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11beta3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b6f819614ab8c36edd479323d0120c50dc79254cb82e32c1e4ff7e71169a4713",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "1f2baf1b763ee14161ec09cc831d576ad268965273a1e45e95b3dacc7caeea20",
            "container_config": {
                "Hostname": "1f2baf1b763e",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11beta3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b6f819614ab8c36edd479323d0120c50dc79254cb82e32c1e4ff7e71169a4713",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-08-04T08:51:22.552600702Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2017-12-01T18:42:42.17629931Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a6ef3cbbb1c0e5dfc6c3e41d70fd93e548594d9cb42c067e52df46d418c10a79 in / "
                },
                {
                    "created": "2017-12-01T18:42:42.958900633Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2017-12-01T18:42:43.535835924Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-28T07:00:41.641030657Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2017-12-28T07:00:43.273265682Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-08-04T08:48:28.140903492Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11beta3",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-04T08:51:18.13124734Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'b11a92814601c85910e3f98dd06b941974d03b48c2c255defbee1cc99f19d721 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf /go-alpine-patches; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-08-04T08:51:19.649114421Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-04T08:51:20.309998943Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-04T08:51:21.936669648Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-08-04T08:51:22.552600702Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:58477411d6070ff18d58000c0453ecb014b688000a033b2c881d393eabe81d8c",
                    "sha256:05f52530ca7ba1de0fc93f4d43c9dabc47e18efdf1b886e4d7e533c72b46d443",
                    "sha256:629a3191dada1a2e74de36174ddfd8fe56670e4538b5d0e5419286736609a13e",
                    "sha256:a8406382f5f096df763032c41e2b49ea3a53d52a786a372ecc0529a2de6a1b50",
                    "sha256:9ce5070ce05764ba932ff3affeb31cf3a16f79c95ae34fcb140a4558edf60990",
                    "sha256:f293a95b31297db4d75476a574a91cd980daf4e14b8970381b1574379de52c3c"
                ]
            }
        },
        "1.11beta3-alpine3.8": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11beta3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:09bd2f277c2704da11f0c65b1b57a35e84a9026284729eba28399d52917b79d7",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "fc372cd1258fdf603ec6a8c405c9c425e50528234dbf6d6123637d12881be230",
            "container_config": {
                "Hostname": "fc372cd1258f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11beta3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:09bd2f277c2704da11f0c65b1b57a35e84a9026284729eba28399d52917b79d7",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-08-04T08:47:53.331983604Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-06T08:41:03.043896054Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:199a5a48bddabaf1f649f58f3b17c323a1aa1a50e939dfdea3542e4041e91b7b in / "
                },
                {
                    "created": "2018-07-06T08:41:03.994573726Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2018-07-06T08:41:04.672265132Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-13T08:41:59.008156316Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-07-13T08:42:00.758228253Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-08-04T08:44:28.78955043Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11beta3",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-04T08:47:20.787561492Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'b11a92814601c85910e3f98dd06b941974d03b48c2c255defbee1cc99f19d721 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf /go-alpine-patches; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-08-04T08:47:35.571220419Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-04T08:47:36.255747821Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-04T08:47:37.968257178Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-08-04T08:47:53.331983604Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd0a9a09f5aaebcb67aa6d173252640c31eecded3c0aee8bcf89b9f307fad7d2",
                    "sha256:b43ad2345ba516d8bf2087e0906db76bdb5fbd45c1e9e314afd0c3a8e9f13ea2",
                    "sha256:23510302cbd3bbd8afeeb07264fc540619e3f48d3ab6cc4c4d72e48a1f219cc0",
                    "sha256:5f136df344f25339e7ce78dbaa7371742167fd1a857cfdd33b2fa59a431e182e",
                    "sha256:6e6da556c5312c0d9dd272501285f8eca2d5b8e3cbe9d685ddb0b3a5e217bdd0",
                    "sha256:f452f3de56cb0d2875f605f6f82c0854c60cc7fa3574f4516ec0c7ddbf4db14f"
                ]
            }
        },
        "1.11beta3-stretch": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11beta3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ba7d82145b759876c06534443bc0e1f1f9a2210a753860ab4675c95bc81488d0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "8cbb1a5693cce16a15441a4003e2e24865457493eea6da2aa76e4d5f63eb352f",
            "container_config": {
                "Hostname": "8cbb1a5693cc",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11beta3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ba7d82145b759876c06534443bc0e1f1f9a2210a753860ab4675c95bc81488d0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-08-04T08:44:06.084306287Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-17T08:47:22.828630475Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5e1a1aab339b0b1e3047eeab5d0c6c74ad3f388d0407dc86f41e4a78b99c6fd8 in / "
                },
                {
                    "created": "2018-07-17T08:47:23.896565687Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-17T14:51:45.703478382Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T14:52:06.204758622Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-07-17T14:54:31.796008203Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-18T04:25:05.968811446Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-08-04T08:43:22.742521897Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11beta3",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-04T08:43:53.249680534Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='674c1091f4712c1cfdcd77ecddafe6aef81cbda740af64a6e3f893ddf3dfb11c' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='491e4d1288ad9f69d16e8ec990d4a4a2b9cc494c3b9488743a96c168424cbb5c' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='d8fb9d36a3c862a68db828eb22268e0723e3e245f41cc33f5da0a5b7e293fea5' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='e3e4e1271aa74f7dc64c586048f351e89d7ab20b5f3c3a518e87a628f5abf582' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='6fe3a4db6a43a59fbe364069fd94536e1d2920df897d5ec93bea7fd519031c54' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='518762a66c9992d667bf7cae4adda285d14f856413ccc7cd853876aae0670382' ;; \t\t*) goRelArch='src'; goRelSha256='b11a92814601c85910e3f98dd06b941974d03b48c2c255defbee1cc99f19d721'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-08-04T08:44:00.062545146Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-04T08:44:00.973990393Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-04T08:44:05.247479352Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-08-04T08:44:06.084306287Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:16815f59abc025030807119ef7ffa046ee88fd26cdca83380d6c7219cc1edae1",
                    "sha256:aeecc946906a50c3609d4615bddd5c132bfa5635f13a744e00cfbc0b66599d5d",
                    "sha256:b4d644f97489f0d15f730d48a24c0db08df74b12f72cedd5e7817638a471d92e",
                    "sha256:21fdf2fa41bb0abb9ae8d1b156d64a219ef332b120b2269f46cd422a8db9c379",
                    "sha256:2c1c91db38b25521158d58cd715dad770ce969a9792b32ac6fa5379f56383012",
                    "sha256:8d6741261c9ae763941ea60a4104c41715a0f7a29924683889afed580a5d51b4",
                    "sha256:298503422d8a6fba5ed2806cabba81016df9af54543cd811b5ad0b868321d135"
                ]
            }
        },
        "1.11rc1-alpine": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:709c5d472550b58c53a58088a57db2b57a216f1a8794c75087db19a4962919f2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "6fdb50a626d1964f845103f82072d502b5f3fd2ff3f7621389e5a2e2ac3fb64c",
            "container_config": {
                "Hostname": "6fdb50a626d1",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:709c5d472550b58c53a58088a57db2b57a216f1a8794c75087db19a4962919f2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-08-23T09:04:38.643504437Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-06T08:41:03.043896054Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:199a5a48bddabaf1f649f58f3b17c323a1aa1a50e939dfdea3542e4041e91b7b in / "
                },
                {
                    "created": "2018-07-06T08:41:03.994573726Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2018-07-06T08:41:04.672265132Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-13T08:41:59.008156316Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-07-13T08:42:00.758228253Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-08-14T16:36:30.194744043Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11rc1",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-23T09:04:32.188566466Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'fcb8778ad5d1bb7f5bfd1564ba4107894011f1d65f69be9fa1e693f6b5143828 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf \t\t/go-alpine-patches \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-08-23T09:04:34.019063698Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-23T09:04:35.180025404Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-23T09:04:37.926462755Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-08-23T09:04:38.643504437Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd0a9a09f5aaebcb67aa6d173252640c31eecded3c0aee8bcf89b9f307fad7d2",
                    "sha256:b43ad2345ba516d8bf2087e0906db76bdb5fbd45c1e9e314afd0c3a8e9f13ea2",
                    "sha256:23510302cbd3bbd8afeeb07264fc540619e3f48d3ab6cc4c4d72e48a1f219cc0",
                    "sha256:5f136df344f25339e7ce78dbaa7371742167fd1a857cfdd33b2fa59a431e182e",
                    "sha256:498a02066d2b85e11dac642395f656333bfdf2ef3dffb4f1ab9ee58a2b8a9129",
                    "sha256:4fdc96d2ebf4b1716017d13ba216aa6446ad3b66360f852d2a3d1f33d939dd9a"
                ]
            }
        },
        "1.11rc1-alpine3.7": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1adb460223b9b3ac229bfb2257bf91549e8afa6d0432573114e93f012d3bbfec",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "2fb4d52dad07b37ea70f04259131b201c26962b44005f02edef21fc233444047",
            "container_config": {
                "Hostname": "2fb4d52dad07",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1adb460223b9b3ac229bfb2257bf91549e8afa6d0432573114e93f012d3bbfec",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-08-23T09:08:48.175084687Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2017-12-01T18:42:42.17629931Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a6ef3cbbb1c0e5dfc6c3e41d70fd93e548594d9cb42c067e52df46d418c10a79 in / "
                },
                {
                    "created": "2017-12-01T18:42:42.958900633Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2017-12-01T18:42:43.535835924Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-28T07:00:41.641030657Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2017-12-28T07:00:43.273265682Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-08-14T16:39:45.882129775Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11rc1",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-23T09:08:17.659314276Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'fcb8778ad5d1bb7f5bfd1564ba4107894011f1d65f69be9fa1e693f6b5143828 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf \t\t/go-alpine-patches \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-08-23T09:08:27.684662451Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-23T09:08:28.407899737Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-23T09:08:30.424251818Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-08-23T09:08:48.175084687Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:58477411d6070ff18d58000c0453ecb014b688000a033b2c881d393eabe81d8c",
                    "sha256:05f52530ca7ba1de0fc93f4d43c9dabc47e18efdf1b886e4d7e533c72b46d443",
                    "sha256:629a3191dada1a2e74de36174ddfd8fe56670e4538b5d0e5419286736609a13e",
                    "sha256:a8406382f5f096df763032c41e2b49ea3a53d52a786a372ecc0529a2de6a1b50",
                    "sha256:92bdc5acf88bba4bccfd00e5ed3d7b5109faa07f9964e5367fe67df823c6588a",
                    "sha256:bf3f323f0bebc0b71f2534e1c0bdebee07475a968521d82e08d7d451a99ed040"
                ]
            }
        },
        "1.11rc1-alpine3.8": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:709c5d472550b58c53a58088a57db2b57a216f1a8794c75087db19a4962919f2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "6fdb50a626d1964f845103f82072d502b5f3fd2ff3f7621389e5a2e2ac3fb64c",
            "container_config": {
                "Hostname": "6fdb50a626d1",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:709c5d472550b58c53a58088a57db2b57a216f1a8794c75087db19a4962919f2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-08-23T09:04:38.643504437Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-06T08:41:03.043896054Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:199a5a48bddabaf1f649f58f3b17c323a1aa1a50e939dfdea3542e4041e91b7b in / "
                },
                {
                    "created": "2018-07-06T08:41:03.994573726Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2018-07-06T08:41:04.672265132Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-13T08:41:59.008156316Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-07-13T08:42:00.758228253Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-08-14T16:36:30.194744043Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11rc1",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-23T09:04:32.188566466Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'fcb8778ad5d1bb7f5bfd1564ba4107894011f1d65f69be9fa1e693f6b5143828 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf \t\t/go-alpine-patches \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-08-23T09:04:34.019063698Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-23T09:04:35.180025404Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-23T09:04:37.926462755Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-08-23T09:04:38.643504437Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd0a9a09f5aaebcb67aa6d173252640c31eecded3c0aee8bcf89b9f307fad7d2",
                    "sha256:b43ad2345ba516d8bf2087e0906db76bdb5fbd45c1e9e314afd0c3a8e9f13ea2",
                    "sha256:23510302cbd3bbd8afeeb07264fc540619e3f48d3ab6cc4c4d72e48a1f219cc0",
                    "sha256:5f136df344f25339e7ce78dbaa7371742167fd1a857cfdd33b2fa59a431e182e",
                    "sha256:498a02066d2b85e11dac642395f656333bfdf2ef3dffb4f1ab9ee58a2b8a9129",
                    "sha256:4fdc96d2ebf4b1716017d13ba216aa6446ad3b66360f852d2a3d1f33d939dd9a"
                ]
            }
        },
        "1.11rc1-stretch": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d1481a33632578c3f6592ec56ebd15c81359a2514318a7c2f939cae3cd19e02b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "99e77de51bc40f7716b9066f0716951b76850959193878292dbb478d4ac3a559",
            "container_config": {
                "Hostname": "99e77de51bc4",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d1481a33632578c3f6592ec56ebd15c81359a2514318a7c2f939cae3cd19e02b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-08-14T16:36:07.940121051Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-17T08:47:22.828630475Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5e1a1aab339b0b1e3047eeab5d0c6c74ad3f388d0407dc86f41e4a78b99c6fd8 in / "
                },
                {
                    "created": "2018-07-17T08:47:23.896565687Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-17T14:51:45.703478382Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T14:52:06.204758622Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-07-17T14:54:31.796008203Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-18T04:25:05.968811446Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-08-14T16:35:36.049926469Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11rc1",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-14T16:36:03.787551032Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='1a071f069982427b245aea736d3174e065a12e8481c34051c672d62a5ca59ca9' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='6f2c0a53850e7dcd2f1592eb51325fa5da20ee953512bebf1b0d3fb046874dc4' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='8a3d96e3e7604cf5390b7e318ff35112cdb13e0e44ddf0130659cefd196ab50e' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='afe8f516fbd0316981e70fc0dda8c67116837baaa0431ee2da47f4fee4614433' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='972e7b6bfecee780a9cd970100297b35bed4c82cacc2bd55d78428928b66683d' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='bd30adfb32de8c441fc0b12a9a9acbd5098a77ab77609269aed7ea4f8dd682ae' ;; \t\t*) goRelArch='src'; goRelSha256='fcb8778ad5d1bb7f5bfd1564ba4107894011f1d65f69be9fa1e693f6b5143828'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-08-14T16:36:05.054833507Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-14T16:36:05.681085513Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-14T16:36:07.296692441Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-08-14T16:36:07.940121051Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:16815f59abc025030807119ef7ffa046ee88fd26cdca83380d6c7219cc1edae1",
                    "sha256:aeecc946906a50c3609d4615bddd5c132bfa5635f13a744e00cfbc0b66599d5d",
                    "sha256:b4d644f97489f0d15f730d48a24c0db08df74b12f72cedd5e7817638a471d92e",
                    "sha256:21fdf2fa41bb0abb9ae8d1b156d64a219ef332b120b2269f46cd422a8db9c379",
                    "sha256:2c1c91db38b25521158d58cd715dad770ce969a9792b32ac6fa5379f56383012",
                    "sha256:0a0d14e5d35572c36106fd1d7e658c926c9f514d0d4422fb6e8105b92778544d",
                    "sha256:d62680158284974421ad47ffc0b95444adc03041eda59caac03f1533293404e4"
                ]
            }
        },
        "1.11rc2-alpine": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c7e5d0e2c6d67ba3b36dd2ba9ef0eb6f852a12770e55c169bd6b988ece80ca8a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "f3f0b93795ae717e23446ea41997a720b6ebf0f7db6e946031fa387795a0283a",
            "container_config": {
                "Hostname": "f3f0b93795ae",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c7e5d0e2c6d67ba3b36dd2ba9ef0eb6f852a12770e55c169bd6b988ece80ca8a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-08-24T01:31:20.622760011Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-06T08:41:03.043896054Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:199a5a48bddabaf1f649f58f3b17c323a1aa1a50e939dfdea3542e4041e91b7b in / "
                },
                {
                    "created": "2018-07-06T08:41:03.994573726Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2018-07-06T08:41:04.672265132Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-13T08:41:59.008156316Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-07-13T08:42:00.758228253Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-08-24T01:28:21.267808599Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11rc2",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-24T01:31:14.608954513Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '5947695c5289ddb6ddc22d01d498b94ddb86bb6775593d772156c4e72a482516 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf \t\t/go-alpine-patches \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-08-24T01:31:16.416231551Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-24T01:31:17.43117356Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-24T01:31:19.818522178Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-08-24T01:31:20.622760011Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd0a9a09f5aaebcb67aa6d173252640c31eecded3c0aee8bcf89b9f307fad7d2",
                    "sha256:b43ad2345ba516d8bf2087e0906db76bdb5fbd45c1e9e314afd0c3a8e9f13ea2",
                    "sha256:23510302cbd3bbd8afeeb07264fc540619e3f48d3ab6cc4c4d72e48a1f219cc0",
                    "sha256:5f136df344f25339e7ce78dbaa7371742167fd1a857cfdd33b2fa59a431e182e",
                    "sha256:0736710ed225ee0f7842f4effa8a995b990541481fc3037d7742aac21fdef9c2",
                    "sha256:dc05bea48fc23f710a43e2df29d7d6a7e2c04d1445a65bbb2f0e41c9d769dec8"
                ]
            }
        },
        "1.11rc2-alpine3.7": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a9b2791640139b71a12becfca305a1d3baabf82c0c7230804bed74eb3cc1bdb8",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "10ffdef3abf3a21488e34ef58c932613a24169a2886a464f56a6636399217115",
            "container_config": {
                "Hostname": "10ffdef3abf3",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a9b2791640139b71a12becfca305a1d3baabf82c0c7230804bed74eb3cc1bdb8",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-08-24T01:35:21.206389866Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2017-12-01T18:42:42.17629931Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a6ef3cbbb1c0e5dfc6c3e41d70fd93e548594d9cb42c067e52df46d418c10a79 in / "
                },
                {
                    "created": "2017-12-01T18:42:42.958900633Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2017-12-01T18:42:43.535835924Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-28T07:00:41.641030657Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2017-12-28T07:00:43.273265682Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-08-24T01:32:03.221584724Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11rc2",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-24T01:35:07.90282347Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '5947695c5289ddb6ddc22d01d498b94ddb86bb6775593d772156c4e72a482516 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf \t\t/go-alpine-patches \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-08-24T01:35:17.606144426Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-24T01:35:18.48251476Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-24T01:35:20.379988283Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-08-24T01:35:21.206389866Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:58477411d6070ff18d58000c0453ecb014b688000a033b2c881d393eabe81d8c",
                    "sha256:05f52530ca7ba1de0fc93f4d43c9dabc47e18efdf1b886e4d7e533c72b46d443",
                    "sha256:629a3191dada1a2e74de36174ddfd8fe56670e4538b5d0e5419286736609a13e",
                    "sha256:a8406382f5f096df763032c41e2b49ea3a53d52a786a372ecc0529a2de6a1b50",
                    "sha256:f7d2f47942d301faad9f60b2c866f7ebad89769f15c6fbdf81aeadfd57702aa1",
                    "sha256:571414d6778bbd053aa1c98dea4ae04e16523acb2871f2d17f9cc46bb3ac9a76"
                ]
            }
        },
        "1.11rc2-alpine3.8": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c7e5d0e2c6d67ba3b36dd2ba9ef0eb6f852a12770e55c169bd6b988ece80ca8a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "f3f0b93795ae717e23446ea41997a720b6ebf0f7db6e946031fa387795a0283a",
            "container_config": {
                "Hostname": "f3f0b93795ae",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c7e5d0e2c6d67ba3b36dd2ba9ef0eb6f852a12770e55c169bd6b988ece80ca8a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-08-24T01:31:20.622760011Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-06T08:41:03.043896054Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:199a5a48bddabaf1f649f58f3b17c323a1aa1a50e939dfdea3542e4041e91b7b in / "
                },
                {
                    "created": "2018-07-06T08:41:03.994573726Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2018-07-06T08:41:04.672265132Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-13T08:41:59.008156316Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-07-13T08:42:00.758228253Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-08-24T01:28:21.267808599Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11rc2",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-24T01:31:14.608954513Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '5947695c5289ddb6ddc22d01d498b94ddb86bb6775593d772156c4e72a482516 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf \t\t/go-alpine-patches \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-08-24T01:31:16.416231551Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-24T01:31:17.43117356Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-24T01:31:19.818522178Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-08-24T01:31:20.622760011Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd0a9a09f5aaebcb67aa6d173252640c31eecded3c0aee8bcf89b9f307fad7d2",
                    "sha256:b43ad2345ba516d8bf2087e0906db76bdb5fbd45c1e9e314afd0c3a8e9f13ea2",
                    "sha256:23510302cbd3bbd8afeeb07264fc540619e3f48d3ab6cc4c4d72e48a1f219cc0",
                    "sha256:5f136df344f25339e7ce78dbaa7371742167fd1a857cfdd33b2fa59a431e182e",
                    "sha256:0736710ed225ee0f7842f4effa8a995b990541481fc3037d7742aac21fdef9c2",
                    "sha256:dc05bea48fc23f710a43e2df29d7d6a7e2c04d1445a65bbb2f0e41c9d769dec8"
                ]
            }
        },
        "1.11rc2-stretch": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c267e0c9f5e8c3f98b19fbd8cc30fc8fb3b1b22850fd941ad0a0a5d60275be6f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "32c057ba6a3aec780ae96575324f015c904511f2a3f7fd370a3b9f3632e0c401",
            "container_config": {
                "Hostname": "32c057ba6a3a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c267e0c9f5e8c3f98b19fbd8cc30fc8fb3b1b22850fd941ad0a0a5d60275be6f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-08-24T01:27:51.505943655Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-17T08:47:22.828630475Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5e1a1aab339b0b1e3047eeab5d0c6c74ad3f388d0407dc86f41e4a78b99c6fd8 in / "
                },
                {
                    "created": "2018-07-17T08:47:23.896565687Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-17T14:51:45.703478382Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T14:52:06.204758622Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-07-17T14:54:31.796008203Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-18T04:25:05.968811446Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-08-24T01:27:13.648703464Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11rc2",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-24T01:27:45.418390429Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='7d3fc1dec64b056cbd22ffd80bb9733725c1296aabfd58cc92bab8a5c6560e03' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='502272db03f6c6883fec5c9e17730b469966d87f9c07e6a306637ddf0fe83526' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='5b160c1ea4c863f82d5d9ebad51edc08f5a5ecf368d315c8aff2c99420fb075c' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='a1982f3af77875c1e8f7c5056ce815236a62902472aceb95fc66e47555d88010' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='d58470aa1e79282b35f7b61cb8d1ac3f0cbecd6d837076795a30003c947feef2' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='85f56c3847eb1ba6b1faf14869671b6d7c31d5ef0082dc1c32a2c53a5e831c76' ;; \t\t*) goRelArch='src'; goRelSha256='5947695c5289ddb6ddc22d01d498b94ddb86bb6775593d772156c4e72a482516'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-08-24T01:27:47.454474731Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-24T01:27:48.482104336Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-24T01:27:50.591190831Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-08-24T01:27:51.505943655Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:16815f59abc025030807119ef7ffa046ee88fd26cdca83380d6c7219cc1edae1",
                    "sha256:aeecc946906a50c3609d4615bddd5c132bfa5635f13a744e00cfbc0b66599d5d",
                    "sha256:b4d644f97489f0d15f730d48a24c0db08df74b12f72cedd5e7817638a471d92e",
                    "sha256:21fdf2fa41bb0abb9ae8d1b156d64a219ef332b120b2269f46cd422a8db9c379",
                    "sha256:2c1c91db38b25521158d58cd715dad770ce969a9792b32ac6fa5379f56383012",
                    "sha256:6d027178f5b2e257c4ce9f22183077f3e8a38315dc36b7457634c27bf76f4d66",
                    "sha256:ad99dfff9c0fcd0848113f6ecf6eb3d475b8f48191862f53bbccab2ebfda22ba"
                ]
            }
        },
        "1.12-alpine": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.17",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:12d74b31d2923577a60b8b5bef349054ac322745ae7ef768cb5c04aee120f164",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f6aa9378bc181ff9b2d2de83145ca9ff774523c85db304cdc7f1cdb75ff9cd57",
            "container_config": {
                "Hostname": "f6aa9378bc18",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.17",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:12d74b31d2923577a60b8b5bef349054ac322745ae7ef768cb5c04aee120f164",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-14T00:51:48.914141507Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-01-18T01:39:43.076306142Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4109fa86dd80850e84c689ff9e6a3243e30ab1bbcc00c765969b3011bfbb43e1 in / "
                },
                {
                    "created": "2020-01-18T01:39:43.809479591Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T06:10:29.605168752Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-01-18T06:10:36.930249136Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-02-14T00:49:28.641846617Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.17",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T00:51:38.257053385Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'de878218c43aa3c3bad54c1c52d95e3b0e5d336e1285c647383e775541a28b25 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-14T00:51:39.862645082Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T00:51:43.486276632Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T00:51:47.71955394Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-14T00:51:48.914141507Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:53745f29fdbf5642c5275f34b9803e69742e082df0a7bb3316ece48ba45c622f",
                    "sha256:9c60a09a3ecd837e13b7a944fdd5b15a2474f2e90c7816d4c28658263fcd525c",
                    "sha256:1e344161583c7ea28934eb5e22d72155510bdd29547dc503702fddac86a9a05f",
                    "sha256:ccad0a45fab58237077eb38a0356a11b62854af2b99830dc1426bf04fa879b5b",
                    "sha256:65e02ee814f79aa3782a18c14543f4c0586491bf438d01f0d2dfa79d726915e7"
                ]
            }
        },
        "1.12-alpine3.10": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.17",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:bc3ce7821f55cf8e4dbefe98203422be63ee268b1e3f91ea31c3683a26645a77",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "38236272a96d92d3ee523830a435ffa36eee9dc18539ccee36a4849b300de867",
            "container_config": {
                "Hostname": "38236272a96d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.17",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:bc3ce7821f55cf8e4dbefe98203422be63ee268b1e3f91ea31c3683a26645a77",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-14T00:54:29.530957783Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-01-23T16:54:39.663281449Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bdfbd4b0dfb53eecc80bac65894d1e2fcfafb27dcf24ab019176e2c9f60b9a39 in / "
                },
                {
                    "created": "2020-01-23T16:54:40.353281052Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-23T17:36:05.510608107Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-01-23T17:36:07.938033301Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-02-14T00:52:00.879821374Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.17",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T00:54:13.04903842Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'de878218c43aa3c3bad54c1c52d95e3b0e5d336e1285c647383e775541a28b25 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-14T00:54:19.692205452Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T00:54:20.969993554Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T00:54:25.947222055Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-14T00:54:29.530957783Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1aed0a4fa040a4b937e7b74a2e2386e40654c267d166dced87eb80d5a1a0826c",
                    "sha256:f2c832c0a239a603c1482fd9563201da92a86060471bc59a879d2d33043641e0",
                    "sha256:cd9b03c31d86db9cc14d8a724d86f89be4e4b2a05cf3fc5d6458851596fae784",
                    "sha256:4b77ab5e7fca503db82eafc9e27085a23275e66afc26cbc5dde81e31cfdd9cb3",
                    "sha256:127ae7e4ba5f78c458925e262f80914d3ce9e86f322f53497cc1086fdfd524a5"
                ]
            }
        },
        "1.12-alpine3.11": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.17",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:12d74b31d2923577a60b8b5bef349054ac322745ae7ef768cb5c04aee120f164",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f6aa9378bc181ff9b2d2de83145ca9ff774523c85db304cdc7f1cdb75ff9cd57",
            "container_config": {
                "Hostname": "f6aa9378bc18",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.17",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:12d74b31d2923577a60b8b5bef349054ac322745ae7ef768cb5c04aee120f164",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-14T00:51:48.914141507Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-01-18T01:39:43.076306142Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4109fa86dd80850e84c689ff9e6a3243e30ab1bbcc00c765969b3011bfbb43e1 in / "
                },
                {
                    "created": "2020-01-18T01:39:43.809479591Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T06:10:29.605168752Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-01-18T06:10:36.930249136Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-02-14T00:49:28.641846617Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.17",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T00:51:38.257053385Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'de878218c43aa3c3bad54c1c52d95e3b0e5d336e1285c647383e775541a28b25 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-14T00:51:39.862645082Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T00:51:43.486276632Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T00:51:47.71955394Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-14T00:51:48.914141507Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:53745f29fdbf5642c5275f34b9803e69742e082df0a7bb3316ece48ba45c622f",
                    "sha256:9c60a09a3ecd837e13b7a944fdd5b15a2474f2e90c7816d4c28658263fcd525c",
                    "sha256:1e344161583c7ea28934eb5e22d72155510bdd29547dc503702fddac86a9a05f",
                    "sha256:ccad0a45fab58237077eb38a0356a11b62854af2b99830dc1426bf04fa879b5b",
                    "sha256:65e02ee814f79aa3782a18c14543f4c0586491bf438d01f0d2dfa79d726915e7"
                ]
            }
        },
        "1.12-alpine3.9": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c3969a376a6d38c9933435d4e8c5054e58df0dd52cb0eacceb2b9d9d51dc96ee",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "a1511410aba6a620bd2d73bb2472cbbc8d76d84f5ed794d0075e9cbdea17c681",
            "container_config": {
                "Hostname": "a1511410aba6",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c3969a376a6d38c9933435d4e8c5054e58df0dd52cb0eacceb2b9d9d51dc96ee",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-12-05T22:48:35.874999607Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-06-19T20:39:47.282820492Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:66f49017dd7ba295602526dbf210046e47fd097298c17a3f268a47487b5b6379 in / "
                },
                {
                    "created": "2019-06-19T20:39:47.636619987Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-19T20:56:05.137314338Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-06-19T20:56:06.515114234Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-12-05T22:46:34.393904233Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.14",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-05T22:48:29.522450232Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '39dbf05f7e2ffcb19b08f07d53dcc96feadeb1987fef9e279e7ff0c598213064 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-12-05T22:48:32.695404893Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-05T22:48:33.579265381Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-05T22:48:35.109299163Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-12-05T22:48:35.874999607Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6d626da635fcff8a8485691ff0156105a5fe75675870a779f0093a6aedce13f7",
                    "sha256:7a151b0f5372ba7688803bb1a0385aeaaa51dff30ded9d13bb0bd0253833077a",
                    "sha256:8ab68ccf1104e218ce48cf2fe4058a7f3d88d4cfb0a5c6500a59aadb616bd88c",
                    "sha256:31e1c16019466f94cba97c043a85a2e7169b9cc61d3137041f8d6b36d6d0474d",
                    "sha256:838e7dfa425ca66d1f3663d2d5bea63bf402c8f7bbef998db85ee2614d529a2d"
                ]
            }
        },
        "1.12-buster": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.17",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c5e64ccc54ac3cbd6959ede4653d1ef2187727496c379cd7eee6ce543f913b60",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "065c49bb312762aa3345898c468f3131e14044c434bf78f475332fb943132821",
            "container_config": {
                "Hostname": "065c49bb3127",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.17",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c5e64ccc54ac3cbd6959ede4653d1ef2187727496c379cd7eee6ce543f913b60",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-14T00:48:50.085086754Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-02-01T16:40:50.672557644Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b423f4b0ed41dfe1334031fe9b21f7e1c88ccb031d7e8f2ff165d618323424d7 in / "
                },
                {
                    "created": "2020-02-01T16:40:53.171343122Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-01T17:18:39.317847599Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-01T17:18:51.706437073Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-02-01T17:19:27.114332889Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-02T11:08:58.969394142Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-14T00:48:24.579312371Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.17",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T00:48:39.968186917Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='a53dd476129d496047487bfd53d021dd17e0c96895865a0e7d0469ce3db8c8d2' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='a883c806fccb3eddb26da4a1a1f8536de863aee6807ed6c99606261877af7b99' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='9d0819cce1451abdb090071880fe8771f16a3bcee71d6f6906023d17799574e2' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='e33fc10c0486b02a019f120996d77792d8f19aae8bfdda97350a622a65d6b824' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='dca4df132da7579c352bccd9d6f4ecb8d8d61893a84b0feffcee2bb4246114a3' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='e50ffb6e0d7e7573ed9ca0f5228bdd43238a25ac34916de027036ff97322d236' ;; \t\t*) goRelArch='src'; goRelSha256='de878218c43aa3c3bad54c1c52d95e3b0e5d336e1285c647383e775541a28b25'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-14T00:48:46.717687734Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T00:48:47.31213804Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T00:48:48.993463388Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-14T00:48:50.085086754Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4c0a780b5c559771bd7939715e552ce5dd7f031b23dfb53bea76d8d303a07f4f",
                    "sha256:53882b0b06b691760199e1c8232da08dfb9a00a7914c4327acdf70a1f243fb79",
                    "sha256:d7c0094a20c8f46e323511c505f15f4bb53f8be0722b763620e2d74935ea4cd4",
                    "sha256:a1c545c647123030790d740c8deb543de50e789258eab2960a43205f442a6882",
                    "sha256:0c9ee1aead43b5e3b0f0edaa5812fed660d61b78e9cce2d53d046bbdd60bdf7e",
                    "sha256:2298b98f8188c93942e316d5397565f15a5b822b4dd1b36febe476fcb2d78aed",
                    "sha256:08f2edfaf4413074bb3227ff74404b681f65a9f0a4375955113058b5014ad394"
                ]
            }
        },
        "1.12-rc-alpine": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9f7bbc641dd8ac450d68ef0a938bb10aad2a83ae2a566304abb242b137bd1667",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "ef2542e7bfa8b9544665158dc28367dbfe705736e9e90708ac1c425ccec8d3bd",
            "container_config": {
                "Hostname": "ef2542e7bfa8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9f7bbc641dd8ac450d68ef0a938bb10aad2a83ae2a566304abb242b137bd1667",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-02-13T09:53:15.287741919Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-01-31T09:40:55.59464559Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3c5f57c6644886bbb8164b9aa4cd60e233be7da48b7194a04963a8e7de058e28 in / "
                },
                {
                    "created": "2019-01-31T09:40:56.373934366Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a10c133d8d5e9af3a9a1610709d3ed2f85b1507f1ba5745ac12bb495974e3fe6 in /etc/localtime "
                },
                {
                    "created": "2019-01-31T09:40:57.414211885Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T10:35:48.859028851Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-02-06T10:35:53.718651346Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-02-13T09:50:07.293628129Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12rc1",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-13T09:53:11.029771295Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'ed1d4f8e8a33f0d4a59a2f642584c7c6375fce2f8a4edaece73309cf2c89b8ee *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-02-13T09:53:12.337075259Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-13T09:53:12.937842375Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-13T09:53:14.671562886Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-02-13T09:53:15.287741919Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b62d6d9a5cefd54dd8025cbfc842db54bbbc2268be8d05125c05ef82228da652",
                    "sha256:f8acf74b099c772d9f05156f67bc53953983b4f4edd19881dc2b138d1cfdb5dc",
                    "sha256:9079a9ec4fad7a526523322dad8473070caa3506e0da3d1de6796e849e7b2700",
                    "sha256:55321bf93b5623e0f3cfeb273381e036e21b0cf1873712feb570c153950a88a5",
                    "sha256:693c4fd69876d8da7df2161df30be8078c92151ddd6c1ad4ea0ce98f167a1551",
                    "sha256:a74026ff0abba8d498248a7add7aa459c8707bae6354d79d8a4a7ca76fe1b42d"
                ]
            }
        },
        "1.12-rc-alpine3.8": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:74d7fe2d3777aeac035a20826577cb0f8d3055c60b8f2f03737a1b4b0271b3a3",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "dc5995079af5a98e96f96d8847e5387ca717cd9ba6e20df7478e65dfa762a47d",
            "container_config": {
                "Hostname": "dc5995079af5",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:74d7fe2d3777aeac035a20826577cb0f8d3055c60b8f2f03737a1b4b0271b3a3",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-02-13T09:56:33.123916588Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2018-12-21T09:43:06.705630029Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:79419748674899ac7d5d699fe62f837c69d04af3ceaabbb7951c35c2f0ff46fa in / "
                },
                {
                    "created": "2018-12-21T09:43:07.198401212Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a10c133d8d5e9af3a9a1610709d3ed2f85b1507f1ba5745ac12bb495974e3fe6 in /etc/localtime "
                },
                {
                    "created": "2018-12-21T09:43:07.722553865Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T10:00:50.393353587Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-12-21T10:00:52.818317624Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-02-13T09:53:20.752751331Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12rc1",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-13T09:56:28.804242706Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'ed1d4f8e8a33f0d4a59a2f642584c7c6375fce2f8a4edaece73309cf2c89b8ee *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-02-13T09:56:30.106639503Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-13T09:56:30.731088644Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-13T09:56:32.506452236Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-02-13T09:56:33.123916588Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:92d7b4d0b33cc1213ee394fabb26922447135080a3b7bd326e5bb7453e06be32",
                    "sha256:82fe62b38ba2a9028a57bee2d8e1b855733943e5491ad946e37e406208ff6e8b",
                    "sha256:0db26aa2ab49f54f8b357b9d4f8188543a065211dac4752eb7d9b65da88a52cf",
                    "sha256:6897c234601851e40044ce7b1194fc52052891863645562058c775deb9dc1342",
                    "sha256:af08fe851afbee8f0d9def6f7d15ee84c7892a566e77627d1590727c8b230d0f",
                    "sha256:851113324b2e4325ef43ddbf605aac72601d2f6dd07a48acc19201f7e8406552"
                ]
            }
        },
        "1.12-rc-alpine3.9": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9f7bbc641dd8ac450d68ef0a938bb10aad2a83ae2a566304abb242b137bd1667",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "ef2542e7bfa8b9544665158dc28367dbfe705736e9e90708ac1c425ccec8d3bd",
            "container_config": {
                "Hostname": "ef2542e7bfa8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9f7bbc641dd8ac450d68ef0a938bb10aad2a83ae2a566304abb242b137bd1667",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-02-13T09:53:15.287741919Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-01-31T09:40:55.59464559Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3c5f57c6644886bbb8164b9aa4cd60e233be7da48b7194a04963a8e7de058e28 in / "
                },
                {
                    "created": "2019-01-31T09:40:56.373934366Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a10c133d8d5e9af3a9a1610709d3ed2f85b1507f1ba5745ac12bb495974e3fe6 in /etc/localtime "
                },
                {
                    "created": "2019-01-31T09:40:57.414211885Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T10:35:48.859028851Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-02-06T10:35:53.718651346Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-02-13T09:50:07.293628129Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12rc1",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-13T09:53:11.029771295Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'ed1d4f8e8a33f0d4a59a2f642584c7c6375fce2f8a4edaece73309cf2c89b8ee *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-02-13T09:53:12.337075259Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-13T09:53:12.937842375Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-13T09:53:14.671562886Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-02-13T09:53:15.287741919Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b62d6d9a5cefd54dd8025cbfc842db54bbbc2268be8d05125c05ef82228da652",
                    "sha256:f8acf74b099c772d9f05156f67bc53953983b4f4edd19881dc2b138d1cfdb5dc",
                    "sha256:9079a9ec4fad7a526523322dad8473070caa3506e0da3d1de6796e849e7b2700",
                    "sha256:55321bf93b5623e0f3cfeb273381e036e21b0cf1873712feb570c153950a88a5",
                    "sha256:693c4fd69876d8da7df2161df30be8078c92151ddd6c1ad4ea0ce98f167a1551",
                    "sha256:a74026ff0abba8d498248a7add7aa459c8707bae6354d79d8a4a7ca76fe1b42d"
                ]
            }
        },
        "1.12-rc-stretch": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d09bbfd7317dd5002f158c04f9cbf5062a371a7d7b7c86fb94b54bfc0fd4cad9",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "ae79975d1ecea6d03bddd5cbe8c6001d14aebb341588df9f762d51f8b85b0cdd",
            "container_config": {
                "Hostname": "ae79975d1ece",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d09bbfd7317dd5002f158c04f9cbf5062a371a7d7b7c86fb94b54bfc0fd4cad9",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-02-13T09:49:58.438490842Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-02-06T10:08:56.448426246Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4c7b5bcb5c347fb36236917e364936a9762b8bd6e8585c33379120f01c3a8d85 in / "
                },
                {
                    "created": "2019-02-06T10:08:58.411455795Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T10:37:59.282799901Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-02-06T10:38:20.923306295Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-02-06T10:39:59.470164799Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-02-06T10:44:54.502187336Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-02-13T09:49:23.711035258Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12rc1",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-13T09:49:54.124809208Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='e5a03e1f2e065b17b2fbbd3429f18a6f51fe2848e0120586652b9f14ada72c9a' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='62126e4ca72e2fea9856fe0ec1a0f28cf1b385fb362d32cb56413c39cab318f8' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='654b90f75902d501e2201a7b438965132fd1242a102f54529e9ff7dbbdf0d4bb' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='1d8615576655decbadeefcfaa6d5144b370dbea67fd4b426f58b573deedbd918' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='cb6c7ba83ee8211da1d13d6db148adfdd6b86a790d3974d0c5702d229ca1da40' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='40208d21fca8469c20054e67250f288ab62d68794690aa2c0324d67018ba99c2' ;; \t\t*) goRelArch='src'; goRelSha256='ed1d4f8e8a33f0d4a59a2f642584c7c6375fce2f8a4edaece73309cf2c89b8ee'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-02-13T09:49:55.362963326Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-13T09:49:55.972054695Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-13T09:49:57.814053544Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-02-13T09:49:58.438490842Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3b1e812def9423169cf856a2785cf1c647d0b14e257f1d97d001f2eea597c8a9",
                    "sha256:944b169fa0fecd2d4b3b5dad05f280d7a9179485fe8c1839737c690e87fbc67b",
                    "sha256:692a708e68fbe95e5c9d80b2a5a3287fe3670dfcd31108ecf3621b4e758f3d4b",
                    "sha256:fbb13e302c5c808925f2c1f9c41c4cefeac1888499f44965cc340cc8c473b660",
                    "sha256:0cadb6f6c5d6ee70b9971ea95007e8da709427c29d8565ac23c12b8ed016dd3e",
                    "sha256:8a48e7017c432660894c9fefb8ecf7f5e32b8f6db804be1fd82e156a2c4517a3",
                    "sha256:1fe9b7726bde8e4173082114d4d9f9d5ef7ee06b465341c6b10d27173b979874"
                ]
            }
        },
        "1.12-stretch": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.17",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9b701b8ff4bd1109ef16c97fa67cf0856eb9b6d454a1b851eefea6418c77744a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "e2246ee4a3d6ea79dcef35e43300c70fa373f3bd9b6a8660d72714b3e5ae5a29",
            "container_config": {
                "Hostname": "e2246ee4a3d6",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.17",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9b701b8ff4bd1109ef16c97fa67cf0856eb9b6d454a1b851eefea6418c77744a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-14T00:49:23.105499359Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-02-01T16:43:01.284413168Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:1618e6474dbe6462a610ce7eed99f0bfd087ea37ddfc287bbd69def5c24ede47 in / "
                },
                {
                    "created": "2020-02-01T16:43:02.994039335Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-01T17:29:40.136456721Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-01T17:29:52.862467817Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-02-01T17:30:30.600101397Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-02T11:10:28.164144474Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-14T00:48:59.381809154Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.17",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T00:49:18.392304174Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='a53dd476129d496047487bfd53d021dd17e0c96895865a0e7d0469ce3db8c8d2' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='a883c806fccb3eddb26da4a1a1f8536de863aee6807ed6c99606261877af7b99' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='9d0819cce1451abdb090071880fe8771f16a3bcee71d6f6906023d17799574e2' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='e33fc10c0486b02a019f120996d77792d8f19aae8bfdda97350a622a65d6b824' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='dca4df132da7579c352bccd9d6f4ecb8d8d61893a84b0feffcee2bb4246114a3' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='e50ffb6e0d7e7573ed9ca0f5228bdd43238a25ac34916de027036ff97322d236' ;; \t\t*) goRelArch='src'; goRelSha256='de878218c43aa3c3bad54c1c52d95e3b0e5d336e1285c647383e775541a28b25'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-14T00:49:20.201106603Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T00:49:20.913797523Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T00:49:22.488183015Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-14T00:49:23.105499359Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b3a6ef74a999da2ed536dd1f8b5295125f78872a00882123d7d80e344f24f646",
                    "sha256:69fc517042bb1cf30e22fcce18abbd4da50d54ac2f76accbe7a083bc1a692c35",
                    "sha256:6db6ab27fb99f39477ca67b4ebae65dbfa6779a359326dabd5abca166c4c5c9b",
                    "sha256:f052fb6fefd44da08bd449d4a49081c17eb7b33e1258db8359d3bd1f8d5606c2",
                    "sha256:4cd9d6cdb137586211460efd96d5117a90bbc331c0adb01d9370ee49d6c014e1",
                    "sha256:4ffd1118ca447c6e1f0e953645f43356a44008f6d3af4420a41b9b7644f76487",
                    "sha256:fc2ae664f640744c89c7c2cd06904f1cb96cc91fa76952155f75ddbab4da21d0"
                ]
            }
        },
        "1.12.0-alpine": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a5ebf70386e8529a7c317a0527e31fe587ce5a6a8490196a63e4a9d3232dd750",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "3473e92f878083fe25adf8922bf7bff378bd863cac2387221cafa89592cd023f",
            "container_config": {
                "Hostname": "3473e92f8780",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a5ebf70386e8529a7c317a0527e31fe587ce5a6a8490196a63e4a9d3232dd750",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-03-08T11:53:50.359294825Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-08T03:37:01.50193332Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2e80d7b240ac8c544a868180a2a08b2533c450061e0ec276ceacaff7b87a380c in / "
                },
                {
                    "created": "2019-03-08T03:37:02.050813908Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-08T04:18:47.872266951Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-03-08T04:18:49.827739314Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-03-08T11:50:41.937665198Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-08T11:53:45.708364687Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '09c43d3336743866f2985f566db0520b36f4992aea2b4b2fd9f52f17049e88f2 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-03-08T11:53:47.116314421Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-08T11:53:47.892852082Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-08T11:53:49.708560362Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-03-08T11:53:50.359294825Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b83703e07573d5eac589806f0afe1648f84ec111b9169ff9db1884730b5603e3",
                    "sha256:5e245268d749dca621ed93898e5846607a63f748ca5c57b0f2a9539dcc71dc23",
                    "sha256:912faf05df34b8984d955330b3678b8704e2668217e5c8d7e1a678cca17e462d",
                    "sha256:15e8692b05717d9db230a656d4cf6950324e0423b4eeb37e013bbc3904f10347",
                    "sha256:8e429c7a843ab6638813439d8b3ee94b2fb7bccf92ef9de81d1d8281e28fdba5"
                ]
            }
        },
        "1.12.0-stretch": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a589721c640180ea385b50d7c5a63538fe5d7ecaf877c7c9db6c967deaccfc15",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "0a348ac4dcb5546b4ebb4d4fb184f9fe954639173a25ad0a5385b476bcff56d7",
            "container_config": {
                "Hostname": "0a348ac4dcb5",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a589721c640180ea385b50d7c5a63538fe5d7ecaf877c7c9db6c967deaccfc15",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-03-05T17:03:32.768275348Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-05T10:00:23.315122687Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7bdd35ab84858c7d5864b73a83750df5ac3db71ce3e586a7da68d50ed15904c8 in / "
                },
                {
                    "created": "2019-03-05T10:00:24.30479312Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-05T11:31:50.836515684Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-05T11:32:09.856542844Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-03-05T11:33:42.821964214Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-05T17:02:25.460621279Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-05T17:02:26.379914828Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-05T17:03:14.224561153Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='750a07fef8579ae4839458701f4df690e0b20b8bcce33b437e4df89c451b6f13' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='ea0636f055763d309437461b5817452419411eb1f598dc7f35999fae05bcb79a' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='b7bf59c2f1ac48eb587817a2a30b02168ecc99635fc19b6e677cce01406e3fac' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='3ac1db65a6fa5c13f424b53ee181755429df0c33775733cede1e0d540440fd7b' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='5be21e7035efa4a270802ea04fb104dc7a54e3492641ae44632170b93166fb68' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='c0aef360b99ebb4b834db8b5b22777b73a11fa37b382121b24bf587c40603915' ;; \t\t*) goRelArch='src'; goRelSha256='09c43d3336743866f2985f566db0520b36f4992aea2b4b2fd9f52f17049e88f2'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-03-05T17:03:29.144454054Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-05T17:03:30.029224687Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-05T17:03:32.111369606Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-03-05T17:03:32.768275348Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6be2545885544984cc9203ec5877acc09980d9d0163624a7be7029c5dbfbb23f",
                    "sha256:6932c487d2172c143aa785f64df6e547e37dc3c65ed14d6220d5eb106c445f61",
                    "sha256:94ceb774b626cf3b3e750f80238bd84a26aacc45b5626f61c450546aeeb4c0fe",
                    "sha256:83649e2b33556051cb13609c8b54913a2f753d0871823c59b159331b00df2b4c",
                    "sha256:c49fa5fed8dc92fec48d821c8087b62928ce8683f37ff43fb217bc477917624c",
                    "sha256:0c64710e21acf8c023884d25386656ec54ae8df5621eb9a1e27c2e5ec6997c85",
                    "sha256:a81bd41057284bf96b01cd4b3bcd67725676b1f6bfdfdb72f8827944613574f7"
                ]
            }
        },
        "1.12.1-alpine": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6e552894088af448ee76445c5d06a26de3820933c2d3005c9ac55dfa03e50590",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "cb5bb47c60ff2fbf6fbeb1cbb6771bbf7c19536491ea92aead7ee8e7a06214a1",
            "container_config": {
                "Hostname": "cb5bb47c60ff",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6e552894088af448ee76445c5d06a26de3820933c2d3005c9ac55dfa03e50590",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-03-16T08:45:03.33808427Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-08T03:37:01.50193332Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2e80d7b240ac8c544a868180a2a08b2533c450061e0ec276ceacaff7b87a380c in / "
                },
                {
                    "created": "2019-03-08T03:37:02.050813908Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-08T04:18:47.872266951Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-03-08T04:18:49.827739314Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-03-16T08:41:44.739036033Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.1",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-16T08:44:58.740824688Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '0be127684df4b842a64e58093154f9d15422f1405f1fcff4b2c36ffc6a15818a *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-03-16T08:45:00.346860371Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-16T08:45:00.95395361Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-16T08:45:02.718006372Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-03-16T08:45:03.33808427Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b83703e07573d5eac589806f0afe1648f84ec111b9169ff9db1884730b5603e3",
                    "sha256:5e245268d749dca621ed93898e5846607a63f748ca5c57b0f2a9539dcc71dc23",
                    "sha256:912faf05df34b8984d955330b3678b8704e2668217e5c8d7e1a678cca17e462d",
                    "sha256:f1eda6c431b54d7f31524c1ae1bda0a1405d1c988c662778c69363ad9134b62c",
                    "sha256:862daed1cf274b21190ef3aa700b63147f17f2fb26e7603527869b818589d81c"
                ]
            }
        },
        "1.12.1-alpine3.9": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6e552894088af448ee76445c5d06a26de3820933c2d3005c9ac55dfa03e50590",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "cb5bb47c60ff2fbf6fbeb1cbb6771bbf7c19536491ea92aead7ee8e7a06214a1",
            "container_config": {
                "Hostname": "cb5bb47c60ff",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6e552894088af448ee76445c5d06a26de3820933c2d3005c9ac55dfa03e50590",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-03-16T08:45:03.33808427Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-08T03:37:01.50193332Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2e80d7b240ac8c544a868180a2a08b2533c450061e0ec276ceacaff7b87a380c in / "
                },
                {
                    "created": "2019-03-08T03:37:02.050813908Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-08T04:18:47.872266951Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-03-08T04:18:49.827739314Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-03-16T08:41:44.739036033Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.1",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-16T08:44:58.740824688Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '0be127684df4b842a64e58093154f9d15422f1405f1fcff4b2c36ffc6a15818a *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-03-16T08:45:00.346860371Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-16T08:45:00.95395361Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-16T08:45:02.718006372Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-03-16T08:45:03.33808427Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b83703e07573d5eac589806f0afe1648f84ec111b9169ff9db1884730b5603e3",
                    "sha256:5e245268d749dca621ed93898e5846607a63f748ca5c57b0f2a9539dcc71dc23",
                    "sha256:912faf05df34b8984d955330b3678b8704e2668217e5c8d7e1a678cca17e462d",
                    "sha256:f1eda6c431b54d7f31524c1ae1bda0a1405d1c988c662778c69363ad9134b62c",
                    "sha256:862daed1cf274b21190ef3aa700b63147f17f2fb26e7603527869b818589d81c"
                ]
            }
        },
        "1.12.1-stretch": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b37084655798cc7b6d75db2b3c446d9e60b65df6b61e0b4c612acc32abfae3cf",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f4a964beeec91924350f472937cbf4090ecf469e8ed906d9cc41f357443393dd",
            "container_config": {
                "Hostname": "f4a964beeec9",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b37084655798cc7b6d75db2b3c446d9e60b65df6b61e0b4c612acc32abfae3cf",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-03-27T22:20:59.765597605Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-27T08:47:20.29754472Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8f991b13b28ce1de362b9f00e69aac8edc28124a08adeeb3b7fb02153e0b4e92 in / "
                },
                {
                    "created": "2019-03-27T08:47:21.400108146Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-27T10:15:55.61565095Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-27T10:16:13.26020269Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-03-27T10:17:48.418797173Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-27T22:20:12.728264648Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-27T22:20:14.00417895Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.1",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-27T22:20:53.933860502Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='2a3fdabf665496a0db5f41ec6af7a9b15a49fbe71a85a50ca38b1f13a103aeec' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='ceac33f07f8fdbccd6c6f7339db33479e1be8c206e67458ba259470fe796dbf2' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='10dba44cf95c7aa7abc3c72610c12ebcaf7cad6eed761d5ad92736ca3bc0d547' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='af74b6572dd0c133e5de121928616eab60a6252c66f6d9b15007c82207416a2c' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='e1258c81f420c88339abf40888423904c0023497b4e9bbffac9ee484597a57d3' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='a9b8f49be6b2083e2586c2ce8a2a86d5dbf47cca64ac6195546a81c9927f9513' ;; \t\t*) goRelArch='src'; goRelSha256='0be127684df4b842a64e58093154f9d15422f1405f1fcff4b2c36ffc6a15818a'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-03-27T22:20:55.700656006Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-27T22:20:56.48445387Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-27T22:20:58.909174055Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-03-27T22:20:59.765597605Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3fa17642530603a1dab4c25c34426e7befde7f29d5c58cf662286e2bedbd39cf",
                    "sha256:00f1e9bd82fbbd9ae578f126bea9d01d726299a87ffbf4c2d3b0ba3a751babcd",
                    "sha256:22758826ae9f21fa3d48d7827dc358962d0d52ae42671a6fbd96ef84f865a633",
                    "sha256:34aa8af3c0e3e90d629b5e52a9a3a57cd190a70802063784d9a8f328a1a4a0c8",
                    "sha256:2ff0644d5fee32819749af50a36d3d1fdd22f88cd8309b530d86e6db0cf68322",
                    "sha256:af9e2ed18c89a9960fdeabc9fb3cd4d1584cf075cbfce70ad3ad7d6a2d823e7d",
                    "sha256:ca4b50d6427ceeb9b8ea24713c6f25db4ca0427bbb627b4e936c13dd7c550ce1"
                ]
            }
        },
        "1.12.10-alpine": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7c1466c011e58ee6ff84b9baef658f06e0a9c1d86de94e8f4f737a447d1ab165",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "73b59027130c3f0ed4fdb2e49824ad12db211db305dcbe73c0058d520c011584",
            "container_config": {
                "Hostname": "73b59027130c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7c1466c011e58ee6ff84b9baef658f06e0a9c1d86de94e8f4f737a447d1ab165",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-09-25T23:04:08.473660288Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-20T20:39:38.405945347Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:34737804ba78554795d5bcc75621595f8cc3d5b5887887d34e0e021b78e330b7 in / "
                },
                {
                    "created": "2019-08-20T20:39:38.821174355Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T20:56:21.289256818Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-08-20T20:56:22.869691367Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-09-25T23:01:44.540067177Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.10",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-25T23:03:51.388156807Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'f56e48fce80646d3c94dcf36d3e3f490f6d541a92070ad409b87b6bbb9da3954 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-09-25T23:04:01.489869798Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-25T23:04:05.977426566Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-25T23:04:07.643925858Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-09-25T23:04:08.473660288Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5e0d8111135538b8a86ce5fc969849efce16c455fd016bb3dc53131bcedc4da5",
                    "sha256:e3275698b6646fa0bbb59a0c5bcb22674d2098952d972968752905ca92f4c6c7",
                    "sha256:88ee3bd19f4a271e93edadba95c10387ef28c86ebb20c2b2373dad5741bffb77",
                    "sha256:cd1b2b4f34319456304b77642071409cda20f56f7e44d7df56e9b201859b75e3",
                    "sha256:a013029ae235cf2fe4f37d544fbb97fede182920bb107414ddb2bed9ebbb850c"
                ]
            }
        },
        "1.12.10-alpine3.10": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7c1466c011e58ee6ff84b9baef658f06e0a9c1d86de94e8f4f737a447d1ab165",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "73b59027130c3f0ed4fdb2e49824ad12db211db305dcbe73c0058d520c011584",
            "container_config": {
                "Hostname": "73b59027130c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7c1466c011e58ee6ff84b9baef658f06e0a9c1d86de94e8f4f737a447d1ab165",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-09-25T23:04:08.473660288Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-20T20:39:38.405945347Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:34737804ba78554795d5bcc75621595f8cc3d5b5887887d34e0e021b78e330b7 in / "
                },
                {
                    "created": "2019-08-20T20:39:38.821174355Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T20:56:21.289256818Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-08-20T20:56:22.869691367Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-09-25T23:01:44.540067177Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.10",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-25T23:03:51.388156807Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'f56e48fce80646d3c94dcf36d3e3f490f6d541a92070ad409b87b6bbb9da3954 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-09-25T23:04:01.489869798Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-25T23:04:05.977426566Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-25T23:04:07.643925858Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-09-25T23:04:08.473660288Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5e0d8111135538b8a86ce5fc969849efce16c455fd016bb3dc53131bcedc4da5",
                    "sha256:e3275698b6646fa0bbb59a0c5bcb22674d2098952d972968752905ca92f4c6c7",
                    "sha256:88ee3bd19f4a271e93edadba95c10387ef28c86ebb20c2b2373dad5741bffb77",
                    "sha256:cd1b2b4f34319456304b77642071409cda20f56f7e44d7df56e9b201859b75e3",
                    "sha256:a013029ae235cf2fe4f37d544fbb97fede182920bb107414ddb2bed9ebbb850c"
                ]
            }
        },
        "1.12.10-alpine3.9": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ea0118ce53eb3e69778579fa9a80b995feb218bcefa9b8a02a40abd0d688f54d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "00d6184c031e28444c03b3398d79f5019319e4ee19c9fb9c6af54ca920985e5c",
            "container_config": {
                "Hostname": "00d6184c031e",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ea0118ce53eb3e69778579fa9a80b995feb218bcefa9b8a02a40abd0d688f54d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-09-25T23:06:24.841245708Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-06-19T20:39:47.282820492Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:66f49017dd7ba295602526dbf210046e47fd097298c17a3f268a47487b5b6379 in / "
                },
                {
                    "created": "2019-06-19T20:39:47.636619987Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-19T20:56:05.137314338Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-06-19T20:56:06.515114234Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-09-25T23:04:17.747288757Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.10",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-25T23:06:19.199179664Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'f56e48fce80646d3c94dcf36d3e3f490f6d541a92070ad409b87b6bbb9da3954 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-09-25T23:06:22.35281961Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-25T23:06:22.79748706Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-25T23:06:24.269582641Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-09-25T23:06:24.841245708Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6d626da635fcff8a8485691ff0156105a5fe75675870a779f0093a6aedce13f7",
                    "sha256:7a151b0f5372ba7688803bb1a0385aeaaa51dff30ded9d13bb0bd0253833077a",
                    "sha256:8ab68ccf1104e218ce48cf2fe4058a7f3d88d4cfb0a5c6500a59aadb616bd88c",
                    "sha256:f58cce4b03ebea34af7a1fbdb8fc9f43e2ea831847cc26e0e72288cfe3f42c09",
                    "sha256:e33c4ce99df3c173e1d15b2e3e105acd2c047de2473684c43232996afa16d71b"
                ]
            }
        },
        "1.12.10-buster": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:204ace616df3c2c84d82f05c26dfcac63ee816e4e6a73150532903d0170bfda4",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "a50b2c276b859a690f29e7fb8bb35688d2ba0fa4776757c3af4ab4b05a247e07",
            "container_config": {
                "Hostname": "a50b2c276b85",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:204ace616df3c2c84d82f05c26dfcac63ee816e4e6a73150532903d0170bfda4",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-10-17T21:25:44.956280612Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-10-16T23:40:34.178453259Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4868439e4e9dc7ca054514d800a326f209513653c3060ab702c16aab34caf2a8 in / "
                },
                {
                    "created": "2019-10-16T23:40:36.361535022Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-17T02:11:07.719204398Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-17T02:11:18.24005543Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-10-17T02:11:52.850248491Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-17T21:23:52.97083918Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-17T21:25:24.342991407Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.10",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-17T21:25:39.220919006Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='aaa84147433aed24e70b31da369bb6ca2859464a45de47c2a5023d8573412f6b' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='b20a897e3a078637a91e8c91ff69a27bcefea7384a0019e56fbfd21f8170fe6b' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='d45d1eebe10a33a3d850cafcefd45200091a9ddb880857135307ee0de9424d24' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='863ad8abc9a9a18a9d55e2a3a2c68046ae57ccd34c2fa0159b70d015957391d6' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='9c5787aeca109c6f90f0ef82328f9ec8d54cf5a4a51d23bfedfc440e92649f9d' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='a8ab50d133db183d9afa304f79c9e994c9208aec9d1bf14b04cd2bda478f406a' ;; \t\t*) goRelArch='src'; goRelSha256='f56e48fce80646d3c94dcf36d3e3f490f6d541a92070ad409b87b6bbb9da3954'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-10-17T21:25:42.137369644Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-17T21:25:42.713996381Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-17T21:25:44.40158543Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-10-17T21:25:44.956280612Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d620998337cd4e338272532deaf22cbcc0fcec532e5d0d0350b71bb95fdfb4f7",
                    "sha256:358123c8979c0dd31fe3b98ac05bc360676e1cac373fbd2ea16823741c4ae354",
                    "sha256:7f15e4d1dfa35b7067149621f77a83138390ab84f9464a3cc4983b554155cd91",
                    "sha256:31a5f606d930ae4257eccfdcf95c3dc622322837e6eef5ed929bf67c2f54fae0",
                    "sha256:f20c369bb5929591f9a4e429d9a6d1b667af24f66e5df577a6ee706838f691d3",
                    "sha256:148c8b52d657ea198021689b210e40d3aefb700c6c6ae45d91e2e2053fe8caf8",
                    "sha256:7000f593e80b392f20fc3dbc470f242d5d017842d7aaaa92aa45f87c26a7e78d"
                ]
            }
        },
        "1.12.10-stretch": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:88b4ef57853e499e1af65b0fc53a2b008068cecae1be695a4758260590eddb4e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "374edf388a3f33bf717d7e97e78ece1404dbf7973f807be09eace53251b0f275",
            "container_config": {
                "Hostname": "374edf388a3f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:88b4ef57853e499e1af65b0fc53a2b008068cecae1be695a4758260590eddb4e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-10-17T21:26:13.848586704Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-10-16T23:43:24.805941998Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c175e46d21fbcd99f833d917807088ceab257f27c16ec31b329be191e90626e0 in / "
                },
                {
                    "created": "2019-10-16T23:43:26.809937467Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-17T02:19:02.730435909Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-17T02:19:13.740616294Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-10-17T02:19:59.163121285Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-17T21:24:38.687614214Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-17T21:25:50.341547606Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.10",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-17T21:26:06.809109737Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='aaa84147433aed24e70b31da369bb6ca2859464a45de47c2a5023d8573412f6b' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='b20a897e3a078637a91e8c91ff69a27bcefea7384a0019e56fbfd21f8170fe6b' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='d45d1eebe10a33a3d850cafcefd45200091a9ddb880857135307ee0de9424d24' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='863ad8abc9a9a18a9d55e2a3a2c68046ae57ccd34c2fa0159b70d015957391d6' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='9c5787aeca109c6f90f0ef82328f9ec8d54cf5a4a51d23bfedfc440e92649f9d' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='a8ab50d133db183d9afa304f79c9e994c9208aec9d1bf14b04cd2bda478f406a' ;; \t\t*) goRelArch='src'; goRelSha256='f56e48fce80646d3c94dcf36d3e3f490f6d541a92070ad409b87b6bbb9da3954'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-10-17T21:26:10.910979396Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-17T21:26:11.597078586Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-17T21:26:13.172119625Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-10-17T21:26:13.848586704Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e001e199d3cd748aa182cbfbd0eed3bfd33928b855dff34e55516a2a0f533018",
                    "sha256:6d396da5e1541f8f44d61927f5a7dca6c69828eb54c48d70dcff3e7bafa88b36",
                    "sha256:33d497efb9fea8e81fcef4e893dcac72dc26208bac5d892b8437e93736b557b1",
                    "sha256:188416f548723d45c780455d4125a5d29e65b72fe3da82c56bf84e9d482698f3",
                    "sha256:23a46955f11e779084d7af4a13b61b3b5574cf72cc21a8794d750038b8659256",
                    "sha256:1752a00c11f4e7e4f45939813fa5d36e6be63c97746cb21481afd6199b8555e1",
                    "sha256:b55b3c829e65bbecf08637139cb23556310245f39e0b822d775d4b62968b3b7c"
                ]
            }
        },
        "1.12.11-alpine": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:98f3b8b2610a14bab1cf5f5232a6d81f84c5e0ed2085ddf0bd3f0133fc431278",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "cb3881d944d27e95471656f8c62ab7c1996e259ecc9b859edb1ef72f8b5d63cb",
            "container_config": {
                "Hostname": "cb3881d944d2",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:98f3b8b2610a14bab1cf5f5232a6d81f84c5e0ed2085ddf0bd3f0133fc431278",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-10-18T21:31:35.205546949Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-20T20:39:38.405945347Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:34737804ba78554795d5bcc75621595f8cc3d5b5887887d34e0e021b78e330b7 in / "
                },
                {
                    "created": "2019-08-20T20:39:38.821174355Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T20:56:21.289256818Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-08-20T20:56:22.869691367Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-10-18T21:29:29.268740228Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.11",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T21:31:29.647781899Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'fcf58935236802929f5726e96cd1d900853b377bec2c51b2e37219c658a4950f *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-10-18T21:31:32.674094352Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T21:31:33.169819073Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T21:31:34.675991633Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-10-18T21:31:35.205546949Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5e0d8111135538b8a86ce5fc969849efce16c455fd016bb3dc53131bcedc4da5",
                    "sha256:e3275698b6646fa0bbb59a0c5bcb22674d2098952d972968752905ca92f4c6c7",
                    "sha256:88ee3bd19f4a271e93edadba95c10387ef28c86ebb20c2b2373dad5741bffb77",
                    "sha256:52d0ac7ddec116cbc76fc70d4fea59072fb582d8136c1e897aef6fc9618847da",
                    "sha256:e3d9a9605968e22eecf1332fad3bdb88f15c0eab6916ee2accb29bce82a71f48"
                ]
            }
        },
        "1.12.11-alpine3.10": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:98f3b8b2610a14bab1cf5f5232a6d81f84c5e0ed2085ddf0bd3f0133fc431278",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "cb3881d944d27e95471656f8c62ab7c1996e259ecc9b859edb1ef72f8b5d63cb",
            "container_config": {
                "Hostname": "cb3881d944d2",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:98f3b8b2610a14bab1cf5f5232a6d81f84c5e0ed2085ddf0bd3f0133fc431278",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-10-18T21:31:35.205546949Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-20T20:39:38.405945347Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:34737804ba78554795d5bcc75621595f8cc3d5b5887887d34e0e021b78e330b7 in / "
                },
                {
                    "created": "2019-08-20T20:39:38.821174355Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T20:56:21.289256818Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-08-20T20:56:22.869691367Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-10-18T21:29:29.268740228Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.11",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T21:31:29.647781899Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'fcf58935236802929f5726e96cd1d900853b377bec2c51b2e37219c658a4950f *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-10-18T21:31:32.674094352Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T21:31:33.169819073Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T21:31:34.675991633Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-10-18T21:31:35.205546949Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5e0d8111135538b8a86ce5fc969849efce16c455fd016bb3dc53131bcedc4da5",
                    "sha256:e3275698b6646fa0bbb59a0c5bcb22674d2098952d972968752905ca92f4c6c7",
                    "sha256:88ee3bd19f4a271e93edadba95c10387ef28c86ebb20c2b2373dad5741bffb77",
                    "sha256:52d0ac7ddec116cbc76fc70d4fea59072fb582d8136c1e897aef6fc9618847da",
                    "sha256:e3d9a9605968e22eecf1332fad3bdb88f15c0eab6916ee2accb29bce82a71f48"
                ]
            }
        },
        "1.12.11-alpine3.9": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b2e0002ef17fada6d5c16799fbe4205654948e0d515076cff38b717bde24ded0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "54875e3df491cd91c99a10005f46f6fd75bb659359e9812c22c679fcf1545beb",
            "container_config": {
                "Hostname": "54875e3df491",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b2e0002ef17fada6d5c16799fbe4205654948e0d515076cff38b717bde24ded0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-10-18T21:33:50.425323429Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-06-19T20:39:47.282820492Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:66f49017dd7ba295602526dbf210046e47fd097298c17a3f268a47487b5b6379 in / "
                },
                {
                    "created": "2019-06-19T20:39:47.636619987Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-19T20:56:05.137314338Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-06-19T20:56:06.515114234Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-10-18T21:31:45.381713397Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.11",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T21:33:44.81869349Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'fcf58935236802929f5726e96cd1d900853b377bec2c51b2e37219c658a4950f *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-10-18T21:33:47.916877713Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T21:33:48.38867909Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T21:33:49.86598966Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-10-18T21:33:50.425323429Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6d626da635fcff8a8485691ff0156105a5fe75675870a779f0093a6aedce13f7",
                    "sha256:7a151b0f5372ba7688803bb1a0385aeaaa51dff30ded9d13bb0bd0253833077a",
                    "sha256:8ab68ccf1104e218ce48cf2fe4058a7f3d88d4cfb0a5c6500a59aadb616bd88c",
                    "sha256:cbc7746e194bf1bf14b58cf58414781fa3aea6cf783329b9d0686b04e38b8ad5",
                    "sha256:778194717b24c98d9adae9c220d2af80169023ef86b3cde3a7f82752a0638988"
                ]
            }
        },
        "1.12.11-buster": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:36d89a77a257f86215f2d312d30dd4c5b81b63670beb3ee138aa69b88928933d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "13562b0a079a78f694821fb686698f311bbe7f75ead8a6a58009391fa006d5e4",
            "container_config": {
                "Hostname": "13562b0a079a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:36d89a77a257f86215f2d312d30dd4c5b81b63670beb3ee138aa69b88928933d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-10-18T21:28:59.493905281Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-10-16T23:40:34.178453259Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4868439e4e9dc7ca054514d800a326f209513653c3060ab702c16aab34caf2a8 in / "
                },
                {
                    "created": "2019-10-16T23:40:36.361535022Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-17T02:11:07.719204398Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-17T02:11:18.24005543Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-10-17T02:11:52.850248491Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-17T21:23:52.97083918Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-18T21:28:35.357248777Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.11",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T21:28:54.029496172Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='2c5960292da8b747d83f171a28a04116b2977e809169c344268c893e4cf0a857' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='895766c9c1d1a32e9e0e7ea2f9fac6f33df0397954564c05b56ecdc58605fd1e' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='a05361badb95f6cc5724e32f59b0f33048dfca63b539cf2bd8ab77fa4f2ba923' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='9d979c489471c5ec9b9cd6b0922f061b2dca7b801effc39d7826a1255e8221c9' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='8f962f84bd36f5caad78710b32e074406d12e864e334bf6c8820836dbd1b6409' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='faa9de31cc41c0ecb79382569f1269758a7e51ca526aaf849d7189da6e28f716' ;; \t\t*) goRelArch='src'; goRelSha256='fcf58935236802929f5726e96cd1d900853b377bec2c51b2e37219c658a4950f'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-10-18T21:28:56.917621694Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T21:28:57.399108149Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T21:28:58.92232182Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-10-18T21:28:59.493905281Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d620998337cd4e338272532deaf22cbcc0fcec532e5d0d0350b71bb95fdfb4f7",
                    "sha256:358123c8979c0dd31fe3b98ac05bc360676e1cac373fbd2ea16823741c4ae354",
                    "sha256:7f15e4d1dfa35b7067149621f77a83138390ab84f9464a3cc4983b554155cd91",
                    "sha256:31a5f606d930ae4257eccfdcf95c3dc622322837e6eef5ed929bf67c2f54fae0",
                    "sha256:f20c369bb5929591f9a4e429d9a6d1b667af24f66e5df577a6ee706838f691d3",
                    "sha256:fab6e894c945baa9a1b5211f4b9fa054e5700b43daecd8a6bc398dd1f6c9da8a",
                    "sha256:673b62e91cc648effb16d492b353abf7c3135923569186b3ab07054d0e54909c"
                ]
            }
        },
        "1.12.11-stretch": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:af2a1c69ddc18c23da992f39f3ae5fc40505de7a03b73e76b0a962425be90cd1",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "37dab97b54e8e9ce034efd77627746bfd75666bbee57d0b220460b960734f6ca",
            "container_config": {
                "Hostname": "37dab97b54e8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:af2a1c69ddc18c23da992f39f3ae5fc40505de7a03b73e76b0a962425be90cd1",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-10-18T21:29:24.097488059Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-10-16T23:43:24.805941998Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c175e46d21fbcd99f833d917807088ceab257f27c16ec31b329be191e90626e0 in / "
                },
                {
                    "created": "2019-10-16T23:43:26.809937467Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-17T02:19:02.730435909Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-17T02:19:13.740616294Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-10-17T02:19:59.163121285Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-17T21:24:38.687614214Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-18T21:29:04.317121348Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.11",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T21:29:18.977953238Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='2c5960292da8b747d83f171a28a04116b2977e809169c344268c893e4cf0a857' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='895766c9c1d1a32e9e0e7ea2f9fac6f33df0397954564c05b56ecdc58605fd1e' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='a05361badb95f6cc5724e32f59b0f33048dfca63b539cf2bd8ab77fa4f2ba923' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='9d979c489471c5ec9b9cd6b0922f061b2dca7b801effc39d7826a1255e8221c9' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='8f962f84bd36f5caad78710b32e074406d12e864e334bf6c8820836dbd1b6409' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='faa9de31cc41c0ecb79382569f1269758a7e51ca526aaf849d7189da6e28f716' ;; \t\t*) goRelArch='src'; goRelSha256='fcf58935236802929f5726e96cd1d900853b377bec2c51b2e37219c658a4950f'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-10-18T21:29:21.357800686Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T21:29:21.877100536Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T21:29:23.480516883Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-10-18T21:29:24.097488059Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e001e199d3cd748aa182cbfbd0eed3bfd33928b855dff34e55516a2a0f533018",
                    "sha256:6d396da5e1541f8f44d61927f5a7dca6c69828eb54c48d70dcff3e7bafa88b36",
                    "sha256:33d497efb9fea8e81fcef4e893dcac72dc26208bac5d892b8437e93736b557b1",
                    "sha256:188416f548723d45c780455d4125a5d29e65b72fe3da82c56bf84e9d482698f3",
                    "sha256:23a46955f11e779084d7af4a13b61b3b5574cf72cc21a8794d750038b8659256",
                    "sha256:e7d3cd5122c8add3ce68d8a1f827b6bf40111b2e0064ae9f3711b16d2a8ec09c",
                    "sha256:53e1a19983966f5c9d966e78ce7dbd53647a42058368a417f2ab727c41e3786d"
                ]
            }
        },
        "1.12.12-alpine": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:77dd41462dcd903c2fb95c71892a9c7ba677112983df2ac705d9a2931ae82685",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "1c000a4239e5b5a16cca2a7c89af372db525bdc32ab94df67d2f4d91e14e312c",
            "container_config": {
                "Hostname": "1c000a4239e5",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:77dd41462dcd903c2fb95c71892a9c7ba677112983df2ac705d9a2931ae82685",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-10-21T20:15:49.674600512Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-10-21T18:07:03.117600212Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:02f4d68afd9e9e303ff893f198d535d0d78c4b2554f299ab2d0955b2bef0e06a in / "
                },
                {
                    "created": "2019-10-21T18:07:09.671538787Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T18:59:13.497484439Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-10-21T18:59:15.253383191Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-10-21T20:13:29.731800463Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.12",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T20:15:38.347978617Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'fcb33b5290fa9bcc52be3211501540df7483d7276b031fc77528672a3c705b99 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-10-21T20:15:45.092077074Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T20:15:46.108619782Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T20:15:48.591776262Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-10-21T20:15:49.674600512Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:98713a20507f1aad3aa66c7dbad7b0ff777101087c0b6bea75f01b639bb09e2f",
                    "sha256:05bcc5dae4ab2b9477ae7ba8c4b3c62fdb50d65b69442acdf8e8d36c0cb2a1b4",
                    "sha256:52cc6f662e05f85fcbc51bf5fdf53e3e51101e1b46970ed36ed5dcdf6fbd6076",
                    "sha256:673566d1006963969eff552d958eb3e8f0dd7592cb306b3f023dba8274dc4349",
                    "sha256:f6dd7199f5021c3951fd8794e85dbcce0d80145673790915f89787cb44ad121c"
                ]
            }
        },
        "1.12.12-alpine3.10": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:77dd41462dcd903c2fb95c71892a9c7ba677112983df2ac705d9a2931ae82685",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "1c000a4239e5b5a16cca2a7c89af372db525bdc32ab94df67d2f4d91e14e312c",
            "container_config": {
                "Hostname": "1c000a4239e5",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:77dd41462dcd903c2fb95c71892a9c7ba677112983df2ac705d9a2931ae82685",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-10-21T20:15:49.674600512Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-10-21T18:07:03.117600212Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:02f4d68afd9e9e303ff893f198d535d0d78c4b2554f299ab2d0955b2bef0e06a in / "
                },
                {
                    "created": "2019-10-21T18:07:09.671538787Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T18:59:13.497484439Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-10-21T18:59:15.253383191Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-10-21T20:13:29.731800463Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.12",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T20:15:38.347978617Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'fcb33b5290fa9bcc52be3211501540df7483d7276b031fc77528672a3c705b99 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-10-21T20:15:45.092077074Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T20:15:46.108619782Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T20:15:48.591776262Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-10-21T20:15:49.674600512Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:98713a20507f1aad3aa66c7dbad7b0ff777101087c0b6bea75f01b639bb09e2f",
                    "sha256:05bcc5dae4ab2b9477ae7ba8c4b3c62fdb50d65b69442acdf8e8d36c0cb2a1b4",
                    "sha256:52cc6f662e05f85fcbc51bf5fdf53e3e51101e1b46970ed36ed5dcdf6fbd6076",
                    "sha256:673566d1006963969eff552d958eb3e8f0dd7592cb306b3f023dba8274dc4349",
                    "sha256:f6dd7199f5021c3951fd8794e85dbcce0d80145673790915f89787cb44ad121c"
                ]
            }
        },
        "1.12.12-alpine3.9": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6be5de08cf06d20e0c9fed57ac80faa067297988367402cc0f86d01fa20f1206",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "2f946f2c72a6efc9e471b614761ce23fd533bf1143b0aaa24d7abdcffec8163a",
            "container_config": {
                "Hostname": "2f946f2c72a6",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6be5de08cf06d20e0c9fed57ac80faa067297988367402cc0f86d01fa20f1206",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-10-18T04:48:14.051724996Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-06-19T20:39:47.282820492Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:66f49017dd7ba295602526dbf210046e47fd097298c17a3f268a47487b5b6379 in / "
                },
                {
                    "created": "2019-06-19T20:39:47.636619987Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-19T20:56:05.137314338Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-06-19T20:56:06.515114234Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-10-18T04:46:11.013910423Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.12",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T04:48:06.782516384Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'fcb33b5290fa9bcc52be3211501540df7483d7276b031fc77528672a3c705b99 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-10-18T04:48:11.168664133Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T04:48:11.885909721Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T04:48:13.380688023Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-10-18T04:48:14.051724996Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6d626da635fcff8a8485691ff0156105a5fe75675870a779f0093a6aedce13f7",
                    "sha256:7a151b0f5372ba7688803bb1a0385aeaaa51dff30ded9d13bb0bd0253833077a",
                    "sha256:8ab68ccf1104e218ce48cf2fe4058a7f3d88d4cfb0a5c6500a59aadb616bd88c",
                    "sha256:4ac0dcb0ba8aadaac81d2269eb2e3d47a5dc02dc694c32f843d55d87fb5baabd",
                    "sha256:b63bd111a6b1e8d8e967ce47b09a6db3a15e721695593c9e6632af368ec5cde2"
                ]
            }
        },
        "1.12.12-buster": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e4623fbc5ecda4ec32a41e4d582f65d8b2b51b4864535c7cc6646ae629a8eddf",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "027a9c4251438db66e8dda2b8bd12d105ad8b2d64d66cf6dfa4574c990797ec7",
            "container_config": {
                "Hostname": "027a9c425143",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e4623fbc5ecda4ec32a41e4d582f65d8b2b51b4864535c7cc6646ae629a8eddf",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-10-18T04:43:16.250013544Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-10-16T23:40:34.178453259Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4868439e4e9dc7ca054514d800a326f209513653c3060ab702c16aab34caf2a8 in / "
                },
                {
                    "created": "2019-10-16T23:40:36.361535022Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-17T02:11:07.719204398Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-17T02:11:18.24005543Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-10-17T02:11:52.850248491Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-17T21:23:52.97083918Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-18T04:42:51.653018414Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.12",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T04:43:09.261116152Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='4cf11ac6a8fa42d26ab85e27a5d916ee171900a87745d9f7d4a29a21587d78fc' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='ed3cda3c2d0648a712fa13cfc25e82431772231ef8f3db70de2fa9c2b893a5ab' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='a7e2fed536904f2bf7007deed3609b3484c55660821bd2faaeb6928fa62fd33e' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='59a48035f9b1387347e8a8a0f7c6d693e6bc84e0374ef802fb8ec61f894db073' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='adee3f914baf578bd21526479f45f99782791dcd12bfba2a7ca2d3fb79e4d623' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='24b0be352713a6e047b21093cf2aaaf22c7757d3606839ddd26da60e7f18dba6' ;; \t\t*) goRelArch='src'; goRelSha256='fcb33b5290fa9bcc52be3211501540df7483d7276b031fc77528672a3c705b99'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-10-18T04:43:12.876280752Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T04:43:13.568418511Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T04:43:15.382238072Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-10-18T04:43:16.250013544Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d620998337cd4e338272532deaf22cbcc0fcec532e5d0d0350b71bb95fdfb4f7",
                    "sha256:358123c8979c0dd31fe3b98ac05bc360676e1cac373fbd2ea16823741c4ae354",
                    "sha256:7f15e4d1dfa35b7067149621f77a83138390ab84f9464a3cc4983b554155cd91",
                    "sha256:31a5f606d930ae4257eccfdcf95c3dc622322837e6eef5ed929bf67c2f54fae0",
                    "sha256:f20c369bb5929591f9a4e429d9a6d1b667af24f66e5df577a6ee706838f691d3",
                    "sha256:c058a35daec4d0bf8db03fbd6744e29bd8300f0d0cd04fbd8c76bc3522b7c3eb",
                    "sha256:d5fab0bc45b50c9903ea9baa70108303e1fa8d2c22877de95e0890a54ecde8d0"
                ]
            }
        },
        "1.12.12-stretch": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:97ab04c1a63b746fe5db90c1fca80b4e7dcc5ef9d581d847dd9c2f6a855bc8d9",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "8ae1f990814896a3730c4e6b4b8f36adbe6c009939b619aaeb3631fbfb1b1b54",
            "container_config": {
                "Hostname": "8ae1f9908148",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:97ab04c1a63b746fe5db90c1fca80b4e7dcc5ef9d581d847dd9c2f6a855bc8d9",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-10-18T04:43:47.118312664Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-10-16T23:43:24.805941998Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c175e46d21fbcd99f833d917807088ceab257f27c16ec31b329be191e90626e0 in / "
                },
                {
                    "created": "2019-10-16T23:43:26.809937467Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-17T02:19:02.730435909Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-17T02:19:13.740616294Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-10-17T02:19:59.163121285Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-17T21:24:38.687614214Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-18T04:43:25.701549677Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.12",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T04:43:42.381797942Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='4cf11ac6a8fa42d26ab85e27a5d916ee171900a87745d9f7d4a29a21587d78fc' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='ed3cda3c2d0648a712fa13cfc25e82431772231ef8f3db70de2fa9c2b893a5ab' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='a7e2fed536904f2bf7007deed3609b3484c55660821bd2faaeb6928fa62fd33e' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='59a48035f9b1387347e8a8a0f7c6d693e6bc84e0374ef802fb8ec61f894db073' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='adee3f914baf578bd21526479f45f99782791dcd12bfba2a7ca2d3fb79e4d623' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='24b0be352713a6e047b21093cf2aaaf22c7757d3606839ddd26da60e7f18dba6' ;; \t\t*) goRelArch='src'; goRelSha256='fcb33b5290fa9bcc52be3211501540df7483d7276b031fc77528672a3c705b99'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-10-18T04:43:44.441221813Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T04:43:44.920651811Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T04:43:46.518452974Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-10-18T04:43:47.118312664Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e001e199d3cd748aa182cbfbd0eed3bfd33928b855dff34e55516a2a0f533018",
                    "sha256:6d396da5e1541f8f44d61927f5a7dca6c69828eb54c48d70dcff3e7bafa88b36",
                    "sha256:33d497efb9fea8e81fcef4e893dcac72dc26208bac5d892b8437e93736b557b1",
                    "sha256:188416f548723d45c780455d4125a5d29e65b72fe3da82c56bf84e9d482698f3",
                    "sha256:23a46955f11e779084d7af4a13b61b3b5574cf72cc21a8794d750038b8659256",
                    "sha256:c5decbcc5ba95a9e272ee99a9ebaffe6a951dce4c7ef77cb978785ef9a6ddc06",
                    "sha256:a0963c2ad936997cbe48eb1ef8c4dad4ba091315b64d8abb59356d492e941945"
                ]
            }
        },
        "1.12.13-alpine": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:491f67b857430b24150a5079f5aad0b3ded1112659d3fc4b848027aa9f71f2f0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "3a66b22b95277d46a6db8e5bb91d045ffa6b74fd6780bb8478d62dac15997daa",
            "container_config": {
                "Hostname": "3a66b22b9527",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:491f67b857430b24150a5079f5aad0b3ded1112659d3fc4b848027aa9f71f2f0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-11-01T20:46:30.488951174Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-10-21T18:07:03.117600212Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:02f4d68afd9e9e303ff893f198d535d0d78c4b2554f299ab2d0955b2bef0e06a in / "
                },
                {
                    "created": "2019-10-21T18:07:09.671538787Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T18:59:13.497484439Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-10-21T18:59:15.253383191Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-11-01T20:44:26.305059475Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.13",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-01T20:46:24.831594943Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '5383d3b8db4baa48284ffcb14606d9cad6f03e9db843fa6d835b94d63cccf5a7 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-11-01T20:46:27.845611712Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-01T20:46:28.321359825Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-01T20:46:29.921142857Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-11-01T20:46:30.488951174Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:98713a20507f1aad3aa66c7dbad7b0ff777101087c0b6bea75f01b639bb09e2f",
                    "sha256:05bcc5dae4ab2b9477ae7ba8c4b3c62fdb50d65b69442acdf8e8d36c0cb2a1b4",
                    "sha256:52cc6f662e05f85fcbc51bf5fdf53e3e51101e1b46970ed36ed5dcdf6fbd6076",
                    "sha256:123ce7d1a4fb52872a4d534f2c1a9aa47abd0a6289513917a22ed580c6ae4d9a",
                    "sha256:19e5716082228d1cc489185a5e89a3d4982fb612df806cc0913b6a2587415331"
                ]
            }
        },
        "1.12.13-alpine3.10": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:491f67b857430b24150a5079f5aad0b3ded1112659d3fc4b848027aa9f71f2f0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "3a66b22b95277d46a6db8e5bb91d045ffa6b74fd6780bb8478d62dac15997daa",
            "container_config": {
                "Hostname": "3a66b22b9527",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:491f67b857430b24150a5079f5aad0b3ded1112659d3fc4b848027aa9f71f2f0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-11-01T20:46:30.488951174Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-10-21T18:07:03.117600212Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:02f4d68afd9e9e303ff893f198d535d0d78c4b2554f299ab2d0955b2bef0e06a in / "
                },
                {
                    "created": "2019-10-21T18:07:09.671538787Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T18:59:13.497484439Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-10-21T18:59:15.253383191Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-11-01T20:44:26.305059475Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.13",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-01T20:46:24.831594943Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '5383d3b8db4baa48284ffcb14606d9cad6f03e9db843fa6d835b94d63cccf5a7 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-11-01T20:46:27.845611712Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-01T20:46:28.321359825Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-01T20:46:29.921142857Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-11-01T20:46:30.488951174Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:98713a20507f1aad3aa66c7dbad7b0ff777101087c0b6bea75f01b639bb09e2f",
                    "sha256:05bcc5dae4ab2b9477ae7ba8c4b3c62fdb50d65b69442acdf8e8d36c0cb2a1b4",
                    "sha256:52cc6f662e05f85fcbc51bf5fdf53e3e51101e1b46970ed36ed5dcdf6fbd6076",
                    "sha256:123ce7d1a4fb52872a4d534f2c1a9aa47abd0a6289513917a22ed580c6ae4d9a",
                    "sha256:19e5716082228d1cc489185a5e89a3d4982fb612df806cc0913b6a2587415331"
                ]
            }
        },
        "1.12.13-alpine3.9": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7b9372fd00ebc6bc6d5d5d036d6e30e9d6af4d176dafd4faad2443d82676489a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "423a8e1c5e9d9271247715ed0bc8f92ac20ce2cdeaf33cb8ee2576e8259810d1",
            "container_config": {
                "Hostname": "423a8e1c5e9d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7b9372fd00ebc6bc6d5d5d036d6e30e9d6af4d176dafd4faad2443d82676489a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-11-01T20:48:46.109769875Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-06-19T20:39:47.282820492Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:66f49017dd7ba295602526dbf210046e47fd097298c17a3f268a47487b5b6379 in / "
                },
                {
                    "created": "2019-06-19T20:39:47.636619987Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-19T20:56:05.137314338Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-06-19T20:56:06.515114234Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-11-01T20:46:42.711417311Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.13",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-01T20:48:41.370809604Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '5383d3b8db4baa48284ffcb14606d9cad6f03e9db843fa6d835b94d63cccf5a7 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-11-01T20:48:43.365389813Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-01T20:48:43.948974765Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-01T20:48:45.509956045Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-11-01T20:48:46.109769875Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6d626da635fcff8a8485691ff0156105a5fe75675870a779f0093a6aedce13f7",
                    "sha256:7a151b0f5372ba7688803bb1a0385aeaaa51dff30ded9d13bb0bd0253833077a",
                    "sha256:8ab68ccf1104e218ce48cf2fe4058a7f3d88d4cfb0a5c6500a59aadb616bd88c",
                    "sha256:aab08d074397effef2d5be5ed7d3144acf81251870466e98e0e9dacadc835af4",
                    "sha256:706c8a89f32e7661fce97da3d9faa77e715cf5e8588eaf3e2504bfdba1ec3f7d"
                ]
            }
        },
        "1.12.13-buster": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ba4cfec40335546a45195b7893c1518ccd9353310ab534e0fb5217f344faf095",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "a09e959f64d8009409355ed025a237ceca70df7cd41fc7c1692cd89e19cdd703",
            "container_config": {
                "Hostname": "a09e959f64d8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ba4cfec40335546a45195b7893c1518ccd9353310ab534e0fb5217f344faf095",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-11-23T21:38:16.8732618Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-11-22T13:41:25.179816976Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9f9eea5881797502bfab12007544d80607c25d2748eeeba94c931d9e83b82ca9 in / "
                },
                {
                    "created": "2019-11-22T13:41:29.270974168Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-22T20:12:21.254265435Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-11-22T20:12:36.760289795Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-11-22T20:13:25.577033496Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-11-23T21:36:29.357057363Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-11-23T21:37:53.028908501Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.13",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-23T21:38:09.800832922Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='da036454cb3353f9f507f0ceed4048feac611065e4e1818b434365eb32ac9bdc' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='bf061cc3d4951e07904496b5c3d6c82419309d24634835522d786673a3f5438f' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='dcfcb3785292c98f7a75c2276169dfe2d445c19f8ffe1d40b3f7b8f59712d361' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='fafcb585591557b7b16d9b22dec4654193d205cf444b1810ab2988f658585e23' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='77056264abcf5444ed0d9ab7552552ae2145ca8fb6c39d33db3c735eaf3f42d2' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='8ef1ffbe7d0e944a52aadd529fc88fd6a2303ec67ee7eeb906712ca38ada0c91' ;; \t\t*) goRelArch='src'; goRelSha256='5383d3b8db4baa48284ffcb14606d9cad6f03e9db843fa6d835b94d63cccf5a7'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-11-23T21:38:13.299319916Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-23T21:38:14.201734168Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-23T21:38:16.161178033Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-11-23T21:38:16.8732618Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:81ce056350092ba28128dce7c2b11bb58f3ff3b43b77a47796dedd397de9ab7e",
                    "sha256:d64a7189de6ca4945e7f99e308a82b0c74daeae0850b3b7f3e9dbd92a93332b2",
                    "sha256:8c3e82a614233f72faaadb2e4b778cd7ca5ade8abb7e2b42d5f22c2e47c4dfc0",
                    "sha256:fe956dba89a1c4d7f7b32c8fb86825344628e0e76f43a3499f8bebccf69ca9f6",
                    "sha256:4a03c237f3c73a45fd222badd6a683725bb1c8d36c7584f1f82646b01d1e962f",
                    "sha256:bc0b3923f2f883069f59a6929490a3e897e1bfecfbc5e929077ed3ec41e8d971",
                    "sha256:0e4d4789337d54d748a2763dee922d75477821975705b626081c62baf6d50153"
                ]
            }
        },
        "1.12.13-stretch": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7188ff83faa4ed7f588aa8aa037466f2335d50693ef495ce564909c871ab1ebc",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "afc252c39d2f7bd1193e385be173ba0437aef64e7673303b270e87f23acd4ca6",
            "container_config": {
                "Hostname": "afc252c39d2f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7188ff83faa4ed7f588aa8aa037466f2335d50693ef495ce564909c871ab1ebc",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-11-23T21:38:59.68959643Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-11-22T13:45:17.685758738Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ad8ecaf59c4f4c76dd6d93f5efff4420e3b55b36937eb36df317c7cd9ba19aeb in / "
                },
                {
                    "created": "2019-11-22T13:45:20.981834037Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-22T20:21:54.953915488Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-11-22T20:22:05.895610411Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-11-22T20:22:56.035755144Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-11-23T21:37:17.430933934Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-11-23T21:38:23.738087141Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.13",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-23T21:38:53.649218263Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='da036454cb3353f9f507f0ceed4048feac611065e4e1818b434365eb32ac9bdc' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='bf061cc3d4951e07904496b5c3d6c82419309d24634835522d786673a3f5438f' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='dcfcb3785292c98f7a75c2276169dfe2d445c19f8ffe1d40b3f7b8f59712d361' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='fafcb585591557b7b16d9b22dec4654193d205cf444b1810ab2988f658585e23' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='77056264abcf5444ed0d9ab7552552ae2145ca8fb6c39d33db3c735eaf3f42d2' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='8ef1ffbe7d0e944a52aadd529fc88fd6a2303ec67ee7eeb906712ca38ada0c91' ;; \t\t*) goRelArch='src'; goRelSha256='5383d3b8db4baa48284ffcb14606d9cad6f03e9db843fa6d835b94d63cccf5a7'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-11-23T21:38:56.888713312Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-23T21:38:57.517116804Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-23T21:38:59.082210446Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-11-23T21:38:59.68959643Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5e782327f9ec116944598b1dd2a92f3e63f99c74e367e2633d129afd5017a7f3",
                    "sha256:4d2c12b74fdf5e262e71edffd5dbf473a7f96d18fd69730a9f71014b717cbe7f",
                    "sha256:b0cdd9568efdbcbe4f9ace657174df7ff2736fe5f29e67d1505706bde97b9c41",
                    "sha256:37bdeb28835a3782d4a8c547503b8f27e084763dc3e5155b8f46c7605c807548",
                    "sha256:c48ef88ab780479a4542cd3d0491f300926c61ad3b96ff214cf1d00d7ce69288",
                    "sha256:ee8a903ac00a862893a3a7f5c931acd2571d2e4b995cf95959a5c6562a4ca4f6",
                    "sha256:3fc8b640bd8731c263a89df50890d952535000a334227ccabc4c1b7800826eda"
                ]
            }
        },
        "1.12.14-alpine": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2e9f257701bb60076fc04927d14670870fabcaa99ac4ccb377251a12e8a84e02",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "c89feeb27d12e1aa43a1712c231357bbc65eb7a310cd8ef892b379610a78a1a2",
            "container_config": {
                "Hostname": "c89feeb27d12",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2e9f257701bb60076fc04927d14670870fabcaa99ac4ccb377251a12e8a84e02",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-12-26T21:54:45.855110056Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-12-24T20:26:15.216647584Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d6c3db0313ab0c6201770c7248d1bac964011a1c08f1a9b434442b7c21efef87 in / "
                },
                {
                    "created": "2019-12-24T20:26:24.654731415Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-26T21:44:17.280943534Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-12-26T21:44:19.843644131Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-12-26T21:52:20.449750679Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.14",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-26T21:54:33.674928443Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '39dbf05f7e2ffcb19b08f07d53dcc96feadeb1987fef9e279e7ff0c598213064 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-12-26T21:54:39.117068053Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-26T21:54:40.112568946Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-26T21:54:44.128382678Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-12-26T21:54:45.855110056Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9254d5c5e258a0b5bc17c41d8361c96ff6644d1c79cde403e7fe58630f69cb53",
                    "sha256:9465fe46b587835e864106cf78456e7f20b5582413fef6f460b9d8679e827b65",
                    "sha256:d0c521a5787097a81d4e912aed3b329c80704d50a1044a3872e191e0c3fea925",
                    "sha256:372667ea8def8cdb5579c59aa8b3257d03974e0364a6ef3a881a19078373437f",
                    "sha256:d3923e2ad95541f5b44b495550d83c6337749c5e2a1ba0dd66bc20923222b801"
                ]
            }
        },
        "1.12.14-alpine3.10": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:454f758099e20079795403551b19d6314e5b0c52b3adae9e8e936aa4ceeec3e5",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "0f66f252e96ec65ff6ccf115c3c3e77eb7845c4c5fa48940d86e2f628cc29a39",
            "container_config": {
                "Hostname": "0f66f252e96e",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:454f758099e20079795403551b19d6314e5b0c52b3adae9e8e936aa4ceeec3e5",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-12-26T21:57:23.161782846Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-10-21T18:07:03.117600212Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:02f4d68afd9e9e303ff893f198d535d0d78c4b2554f299ab2d0955b2bef0e06a in / "
                },
                {
                    "created": "2019-10-21T18:07:09.671538787Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T18:59:13.497484439Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-10-21T18:59:15.253383191Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-12-05T22:44:17.738283526Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.14",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-26T21:57:15.935448177Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '39dbf05f7e2ffcb19b08f07d53dcc96feadeb1987fef9e279e7ff0c598213064 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-12-26T21:57:18.327803788Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-26T21:57:19.118266158Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-26T21:57:21.99897091Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-12-26T21:57:23.161782846Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:98713a20507f1aad3aa66c7dbad7b0ff777101087c0b6bea75f01b639bb09e2f",
                    "sha256:05bcc5dae4ab2b9477ae7ba8c4b3c62fdb50d65b69442acdf8e8d36c0cb2a1b4",
                    "sha256:52cc6f662e05f85fcbc51bf5fdf53e3e51101e1b46970ed36ed5dcdf6fbd6076",
                    "sha256:5a9cd12275aa4e4bc6193ecb59559b793b77314125ca473504fa6f95b4df14cc",
                    "sha256:ba596ea8bd8caedf84c02833eaafc2be22717f9e0ff82852e9ed7e5fe098bc44"
                ]
            }
        },
        "1.12.14-alpine3.11": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2e9f257701bb60076fc04927d14670870fabcaa99ac4ccb377251a12e8a84e02",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "c89feeb27d12e1aa43a1712c231357bbc65eb7a310cd8ef892b379610a78a1a2",
            "container_config": {
                "Hostname": "c89feeb27d12",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2e9f257701bb60076fc04927d14670870fabcaa99ac4ccb377251a12e8a84e02",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-12-26T21:54:45.855110056Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-12-24T20:26:15.216647584Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d6c3db0313ab0c6201770c7248d1bac964011a1c08f1a9b434442b7c21efef87 in / "
                },
                {
                    "created": "2019-12-24T20:26:24.654731415Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-26T21:44:17.280943534Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-12-26T21:44:19.843644131Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-12-26T21:52:20.449750679Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.14",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-26T21:54:33.674928443Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '39dbf05f7e2ffcb19b08f07d53dcc96feadeb1987fef9e279e7ff0c598213064 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-12-26T21:54:39.117068053Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-26T21:54:40.112568946Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-26T21:54:44.128382678Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-12-26T21:54:45.855110056Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9254d5c5e258a0b5bc17c41d8361c96ff6644d1c79cde403e7fe58630f69cb53",
                    "sha256:9465fe46b587835e864106cf78456e7f20b5582413fef6f460b9d8679e827b65",
                    "sha256:d0c521a5787097a81d4e912aed3b329c80704d50a1044a3872e191e0c3fea925",
                    "sha256:372667ea8def8cdb5579c59aa8b3257d03974e0364a6ef3a881a19078373437f",
                    "sha256:d3923e2ad95541f5b44b495550d83c6337749c5e2a1ba0dd66bc20923222b801"
                ]
            }
        },
        "1.12.14-alpine3.9": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c3969a376a6d38c9933435d4e8c5054e58df0dd52cb0eacceb2b9d9d51dc96ee",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "a1511410aba6a620bd2d73bb2472cbbc8d76d84f5ed794d0075e9cbdea17c681",
            "container_config": {
                "Hostname": "a1511410aba6",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c3969a376a6d38c9933435d4e8c5054e58df0dd52cb0eacceb2b9d9d51dc96ee",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-12-05T22:48:35.874999607Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-06-19T20:39:47.282820492Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:66f49017dd7ba295602526dbf210046e47fd097298c17a3f268a47487b5b6379 in / "
                },
                {
                    "created": "2019-06-19T20:39:47.636619987Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-19T20:56:05.137314338Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-06-19T20:56:06.515114234Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-12-05T22:46:34.393904233Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.14",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-05T22:48:29.522450232Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '39dbf05f7e2ffcb19b08f07d53dcc96feadeb1987fef9e279e7ff0c598213064 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-12-05T22:48:32.695404893Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-05T22:48:33.579265381Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-05T22:48:35.109299163Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-12-05T22:48:35.874999607Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6d626da635fcff8a8485691ff0156105a5fe75675870a779f0093a6aedce13f7",
                    "sha256:7a151b0f5372ba7688803bb1a0385aeaaa51dff30ded9d13bb0bd0253833077a",
                    "sha256:8ab68ccf1104e218ce48cf2fe4058a7f3d88d4cfb0a5c6500a59aadb616bd88c",
                    "sha256:31e1c16019466f94cba97c043a85a2e7169b9cc61d3137041f8d6b36d6d0474d",
                    "sha256:838e7dfa425ca66d1f3663d2d5bea63bf402c8f7bbef998db85ee2614d529a2d"
                ]
            }
        },
        "1.12.14-buster": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:5a76d6171d593a53ae475c5356fc725162d6833a861acaa60bb1be1908d3617c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "64d0f7d4e17a019792a967f6089ee3591754dd555e528f0bf14181b44cf42dbf",
            "container_config": {
                "Hostname": "64d0f7d4e17a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:5a76d6171d593a53ae475c5356fc725162d6833a861acaa60bb1be1908d3617c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-12-29T00:21:59.697945694Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-12-28T04:40:41.417190599Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:88b3d02fc98aa9138e694bee7d5d1b61b295e4a1c7fae399bf24e52eeff7a5ae in / "
                },
                {
                    "created": "2019-12-28T04:40:45.849315772Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-28T06:04:54.975198193Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-12-28T06:05:07.359590324Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-12-28T06:05:57.542171616Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-12-29T00:19:08.405193157Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-12-29T00:21:39.281989451Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.14",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-29T00:21:54.6366695Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='925a1a9d8b31c2425d7313fe73d3342288968a66e26cd8bf1b6b5656f4603fcb' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='c7aa5562168b6eb3a4bb54af061d68bcb6b9ecae9d785f9a38255c107c986b73' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='1ab765f4cf74f05cfba40ddcea9160ca6cf9a57915036a559ca1691942862e7c' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='76dda90b4fc0410212094b433cfdc40c9802fba972427e95cbdec3c5b94fd7a6' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='4e237b1357922e186337989914201e98bd9aed855f4034a5918476650484f83d' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='affd9764e5b163591ca87f351984c17d74e518e03b9d5e16f2be57bd30a82c80' ;; \t\t*) goRelArch='src'; goRelSha256='39dbf05f7e2ffcb19b08f07d53dcc96feadeb1987fef9e279e7ff0c598213064'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-12-29T00:21:56.981811909Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-29T00:21:57.492945859Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-29T00:21:59.069803145Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-12-29T00:21:59.697945694Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:74c95512dcb466d4ad12ac39bb52dcccdec6fde1ca1bf2c53b7b5907dea35b60",
                    "sha256:39dedbbdbe04deae313313fb0f132ab8e120d0f4d2d4431706d72761d0e4fc07",
                    "sha256:7a20465dc83355096c0718ddaf2f81dc7f4309c535b007372818a816e8585bfb",
                    "sha256:6cde30c53e8fcc36c506213b8694fb90540239a7e401236d36d2553c9b0439da",
                    "sha256:77fcf8120a7b4d9c13c682fe948add78b373fb40bc1c07b85732a2ae8199465a",
                    "sha256:a84c805d37bc05029f57d4fa9e67f5573afcb5eb8193696633206f30425d4fd2",
                    "sha256:501c059995e9567db71538c74ac5e27d988b753b1d763bda0e75a3d08cf9298f"
                ]
            }
        },
        "1.12.14-stretch": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:67f66ffcb598f8ca57d3feea6a91f8b50603fffca1594bfadbebf8609543d3a0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "c185b1534d9086e8eba6da5f1c01bde7b4163fe0822d93fd038f46464cf40df3",
            "container_config": {
                "Hostname": "c185b1534d90",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:67f66ffcb598f8ca57d3feea6a91f8b50603fffca1594bfadbebf8609543d3a0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-12-29T00:22:27.310236466Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-12-28T04:43:15.415123666Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e439b3c387852978811a6a5a058745ebb9392da7e8936beb4f37ff076e656213 in / "
                },
                {
                    "created": "2019-12-28T04:43:17.745557273Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-28T06:15:19.920748807Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-12-28T06:15:34.784029632Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-12-28T06:16:19.124757771Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-12-29T00:20:59.103115824Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-12-29T00:22:05.645128435Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.14",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-29T00:22:22.019368454Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='925a1a9d8b31c2425d7313fe73d3342288968a66e26cd8bf1b6b5656f4603fcb' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='c7aa5562168b6eb3a4bb54af061d68bcb6b9ecae9d785f9a38255c107c986b73' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='1ab765f4cf74f05cfba40ddcea9160ca6cf9a57915036a559ca1691942862e7c' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='76dda90b4fc0410212094b433cfdc40c9802fba972427e95cbdec3c5b94fd7a6' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='4e237b1357922e186337989914201e98bd9aed855f4034a5918476650484f83d' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='affd9764e5b163591ca87f351984c17d74e518e03b9d5e16f2be57bd30a82c80' ;; \t\t*) goRelArch='src'; goRelSha256='39dbf05f7e2ffcb19b08f07d53dcc96feadeb1987fef9e279e7ff0c598213064'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-12-29T00:22:24.502201165Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-29T00:22:24.995946229Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-29T00:22:26.690465478Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-12-29T00:22:27.310236466Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f319319793e051d91227c0cccc5ea1a64e09158c273afebb8dcf13b2d397ea1b",
                    "sha256:8707682948834dcbc88cbb20b741486f66bac54baa0f8392f0ac8947d1fe091c",
                    "sha256:33b482d3030f4403e7c29087ed11059b39e585d2b9a6f70d2d4aa428b44a7442",
                    "sha256:bae4fdae8c7da6273f2520703b4ac1c898f4eacef1017a907f48d08768317fcd",
                    "sha256:bbce16622ff2c51394dd03ca8f29bd26045206bb42bcf4542145e4aa7505d022",
                    "sha256:2fbec44df7d915eac652d6bc0c4d709b037d7544666e866e1ea7584fd5d574b7",
                    "sha256:805013c5fe641f93e802c3bbc3fcfbbf586f141f80334db1a956d72b5f7e4214"
                ]
            }
        },
        "1.12.15-alpine": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:be42e2587f097fb329e38ffd75d1fd7618619ed2757bf13cbb5557fefeb49696",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "2366f474515e518f712b2ac9f98a416e20d68ba29e20e882cf6142f4a5e61d71",
            "container_config": {
                "Hostname": "2366f474515e",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:be42e2587f097fb329e38ffd75d1fd7618619ed2757bf13cbb5557fefeb49696",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-01-18T06:19:29.574372689Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2020-01-18T01:39:43.076306142Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4109fa86dd80850e84c689ff9e6a3243e30ab1bbcc00c765969b3011bfbb43e1 in / "
                },
                {
                    "created": "2020-01-18T01:39:43.809479591Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T06:10:29.605168752Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-01-18T06:10:36.930249136Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-01-18T06:16:50.696910967Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.15",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T06:19:17.170929503Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '8aba74417e527524ad5724e6e6c21016795d1017692db76d1b0851c6bdec84c3 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-01-18T06:19:21.137541624Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T06:19:22.56609026Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T06:19:28.01034814Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-01-18T06:19:29.574372689Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:53745f29fdbf5642c5275f34b9803e69742e082df0a7bb3316ece48ba45c622f",
                    "sha256:9c60a09a3ecd837e13b7a944fdd5b15a2474f2e90c7816d4c28658263fcd525c",
                    "sha256:1e344161583c7ea28934eb5e22d72155510bdd29547dc503702fddac86a9a05f",
                    "sha256:d690b399450909cef6ba8e42da40e0d0e1f567fe6742eeaa84d8a2a21aedff72",
                    "sha256:557ded5e645647719041e26faaa138b27ffce32dcfd4fd2e1bf7384e829801e6"
                ]
            }
        },
        "1.12.15-alpine3.10": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9c8a4a33272690b335ca95871e61cab7c353d43e1f825018c1c2be2d5be80879",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "880d36ebcabdf9d7c3f1bb3c5a1c1ec544b784dd7e3c6f73de1ac86383070e70",
            "container_config": {
                "Hostname": "880d36ebcabd",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9c8a4a33272690b335ca95871e61cab7c353d43e1f825018c1c2be2d5be80879",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-01-23T17:41:01.063903151Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2020-01-23T16:54:39.663281449Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bdfbd4b0dfb53eecc80bac65894d1e2fcfafb27dcf24ab019176e2c9f60b9a39 in / "
                },
                {
                    "created": "2020-01-23T16:54:40.353281052Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-23T17:36:05.510608107Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-01-23T17:36:07.938033301Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-01-23T17:38:48.088008588Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.15",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-23T17:40:52.748487497Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '8aba74417e527524ad5724e6e6c21016795d1017692db76d1b0851c6bdec84c3 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-01-23T17:40:57.695472118Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-23T17:40:58.372309696Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-23T17:41:00.103264402Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-01-23T17:41:01.063903151Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1aed0a4fa040a4b937e7b74a2e2386e40654c267d166dced87eb80d5a1a0826c",
                    "sha256:f2c832c0a239a603c1482fd9563201da92a86060471bc59a879d2d33043641e0",
                    "sha256:cd9b03c31d86db9cc14d8a724d86f89be4e4b2a05cf3fc5d6458851596fae784",
                    "sha256:ab646ec133150ccb6c4c8315f085d9322c4cfd62ccc2f30c05f1d24161540a2b",
                    "sha256:588a43f36c0bdd83160bc4b02c05cf628f476a6d3dacbf40dcf5359c11a817dc"
                ]
            }
        },
        "1.12.15-alpine3.11": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:be42e2587f097fb329e38ffd75d1fd7618619ed2757bf13cbb5557fefeb49696",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "2366f474515e518f712b2ac9f98a416e20d68ba29e20e882cf6142f4a5e61d71",
            "container_config": {
                "Hostname": "2366f474515e",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:be42e2587f097fb329e38ffd75d1fd7618619ed2757bf13cbb5557fefeb49696",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-01-18T06:19:29.574372689Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2020-01-18T01:39:43.076306142Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4109fa86dd80850e84c689ff9e6a3243e30ab1bbcc00c765969b3011bfbb43e1 in / "
                },
                {
                    "created": "2020-01-18T01:39:43.809479591Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T06:10:29.605168752Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-01-18T06:10:36.930249136Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-01-18T06:16:50.696910967Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.15",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T06:19:17.170929503Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '8aba74417e527524ad5724e6e6c21016795d1017692db76d1b0851c6bdec84c3 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-01-18T06:19:21.137541624Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T06:19:22.56609026Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T06:19:28.01034814Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-01-18T06:19:29.574372689Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:53745f29fdbf5642c5275f34b9803e69742e082df0a7bb3316ece48ba45c622f",
                    "sha256:9c60a09a3ecd837e13b7a944fdd5b15a2474f2e90c7816d4c28658263fcd525c",
                    "sha256:1e344161583c7ea28934eb5e22d72155510bdd29547dc503702fddac86a9a05f",
                    "sha256:d690b399450909cef6ba8e42da40e0d0e1f567fe6742eeaa84d8a2a21aedff72",
                    "sha256:557ded5e645647719041e26faaa138b27ffce32dcfd4fd2e1bf7384e829801e6"
                ]
            }
        },
        "1.12.15-buster": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e50b12446f04710a8f39e1f8a3ba7ea2b060092eac20b7d044fa4ff12a1436f7",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "b9204d2f5f72a3de70a99045afd54cc82e19e2fe6002636f2cf3d482caf1ad2c",
            "container_config": {
                "Hostname": "b9204d2f5f72",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e50b12446f04710a8f39e1f8a3ba7ea2b060092eac20b7d044fa4ff12a1436f7",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-01-10T00:03:44.306853982Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-12-28T04:40:41.417190599Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:88b3d02fc98aa9138e694bee7d5d1b61b295e4a1c7fae399bf24e52eeff7a5ae in / "
                },
                {
                    "created": "2019-12-28T04:40:45.849315772Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-28T06:04:54.975198193Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-12-28T06:05:07.359590324Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-12-28T06:05:57.542171616Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-12-29T00:19:08.405193157Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-01-10T00:03:08.911970609Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.15",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-10T00:03:30.011356031Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='61068419f3d3fcd3cc415c352c4a93d6ae0e723ac18a22ac572b4904d78b5a4c' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='3a36d168bf80c780694bf25d6cb2ed0dbb6d4bc29b1c82bb29e819d9dbe6347b' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='cff1a28f0b207dd54230bf822cdcfbcc7cd411261a9366616a05a1fa1fbeedd3' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='608c9fb90b2b35f7b4e4b110a9c6919d8902311388c6309487b5f77aed9d2b74' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='4fe9ce71a6cd9acd56f0e898dd87d95ed9bc83a6a5be0863e9b5b646e05eee05' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='a02061245a738bc80c645251cddd7a22c1ea9fee0726d5caf5da7645dea3787e' ;; \t\t*) goRelArch='src'; goRelSha256='8aba74417e527524ad5724e6e6c21016795d1017692db76d1b0851c6bdec84c3'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-01-10T00:03:38.931412856Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-10T00:03:40.083103715Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-10T00:03:43.188011285Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-01-10T00:03:44.306853982Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:74c95512dcb466d4ad12ac39bb52dcccdec6fde1ca1bf2c53b7b5907dea35b60",
                    "sha256:39dedbbdbe04deae313313fb0f132ab8e120d0f4d2d4431706d72761d0e4fc07",
                    "sha256:7a20465dc83355096c0718ddaf2f81dc7f4309c535b007372818a816e8585bfb",
                    "sha256:6cde30c53e8fcc36c506213b8694fb90540239a7e401236d36d2553c9b0439da",
                    "sha256:77fcf8120a7b4d9c13c682fe948add78b373fb40bc1c07b85732a2ae8199465a",
                    "sha256:88e576f15ea1c105eb8585916ec7950d8779dc9437e89177fef995a0678a1eb0",
                    "sha256:21e24a31f8a066276db649b716470c44aab4e7da552d6f9c5eb61aab2b05dd44"
                ]
            }
        },
        "1.12.15-stretch": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:24b0c694a38a1c7ef89dd65ce36de3c81ff280354c30fb3e314c4f80c22d3550",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "eb44af6d0051c4803b7ff40e8ec9fdb780a779379f71b635e8b2bfec26e4ddfa",
            "container_config": {
                "Hostname": "eb44af6d0051",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:24b0c694a38a1c7ef89dd65ce36de3c81ff280354c30fb3e314c4f80c22d3550",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-01-10T00:04:20.205991659Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-12-28T04:43:15.415123666Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e439b3c387852978811a6a5a058745ebb9392da7e8936beb4f37ff076e656213 in / "
                },
                {
                    "created": "2019-12-28T04:43:17.745557273Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-28T06:15:19.920748807Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-12-28T06:15:34.784029632Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-12-28T06:16:19.124757771Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-12-29T00:20:59.103115824Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-01-10T00:03:55.930198596Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.15",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-10T00:04:14.985157395Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='61068419f3d3fcd3cc415c352c4a93d6ae0e723ac18a22ac572b4904d78b5a4c' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='3a36d168bf80c780694bf25d6cb2ed0dbb6d4bc29b1c82bb29e819d9dbe6347b' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='cff1a28f0b207dd54230bf822cdcfbcc7cd411261a9366616a05a1fa1fbeedd3' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='608c9fb90b2b35f7b4e4b110a9c6919d8902311388c6309487b5f77aed9d2b74' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='4fe9ce71a6cd9acd56f0e898dd87d95ed9bc83a6a5be0863e9b5b646e05eee05' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='a02061245a738bc80c645251cddd7a22c1ea9fee0726d5caf5da7645dea3787e' ;; \t\t*) goRelArch='src'; goRelSha256='8aba74417e527524ad5724e6e6c21016795d1017692db76d1b0851c6bdec84c3'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-01-10T00:04:16.682034542Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-10T00:04:17.512412897Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-10T00:04:19.627000164Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-01-10T00:04:20.205991659Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f319319793e051d91227c0cccc5ea1a64e09158c273afebb8dcf13b2d397ea1b",
                    "sha256:8707682948834dcbc88cbb20b741486f66bac54baa0f8392f0ac8947d1fe091c",
                    "sha256:33b482d3030f4403e7c29087ed11059b39e585d2b9a6f70d2d4aa428b44a7442",
                    "sha256:bae4fdae8c7da6273f2520703b4ac1c898f4eacef1017a907f48d08768317fcd",
                    "sha256:bbce16622ff2c51394dd03ca8f29bd26045206bb42bcf4542145e4aa7505d022",
                    "sha256:34058a3fcd4d5783275bab2655ea8c768531e25e5c7ecf903f8a07eaab67a2fe",
                    "sha256:934a6daee9680c5cecccf3e04f0932cda98559af94e12e0e44cd3968b3bea8ba"
                ]
            }
        },
        "1.12.16-alpine": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.16",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ff7dc51e14eee93f60b392f98cc80725da0401ca84fa63dc9249bd8e8fb1ad1b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "9f2edad0939f65bb28ce44fe24cac97c98a07ca280408b04f4b97dfe6e761c52",
            "container_config": {
                "Hostname": "9f2edad0939f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.16",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ff7dc51e14eee93f60b392f98cc80725da0401ca84fa63dc9249bd8e8fb1ad1b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-01-28T21:48:49.269814952Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-01-18T01:39:43.076306142Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4109fa86dd80850e84c689ff9e6a3243e30ab1bbcc00c765969b3011bfbb43e1 in / "
                },
                {
                    "created": "2020-01-18T01:39:43.809479591Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T06:10:29.605168752Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-01-18T06:10:36.930249136Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-01-28T21:46:47.973207939Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.16",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-28T21:48:42.335925698Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'ce6e5ed85b4a54ffc01d55a5838ee313acb4a7f109a745440fecbead1d081df8 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-01-28T21:48:46.566740363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-28T21:48:47.058443849Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-28T21:48:48.65628825Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-01-28T21:48:49.269814952Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:53745f29fdbf5642c5275f34b9803e69742e082df0a7bb3316ece48ba45c622f",
                    "sha256:9c60a09a3ecd837e13b7a944fdd5b15a2474f2e90c7816d4c28658263fcd525c",
                    "sha256:1e344161583c7ea28934eb5e22d72155510bdd29547dc503702fddac86a9a05f",
                    "sha256:e675a516508ec9305edc82fae777f947cba90e606c445eaaf24e499f2730efd2",
                    "sha256:07c99bb2781fd344128e2a913ffc829eb055982e9f3ecdf49285614410afd6eb"
                ]
            }
        },
        "1.12.16-alpine3.10": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.16",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:91e6a2277509c1dd2dbe183bc73208d31994226aad84005c67a93abff59c9a07",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "9e05cc8706d54b37a573f2d33b47a105a50433d8a664a24cb2ed642ab78a1fe4",
            "container_config": {
                "Hostname": "9e05cc8706d5",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.16",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:91e6a2277509c1dd2dbe183bc73208d31994226aad84005c67a93abff59c9a07",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-01-28T21:51:20.381686067Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-01-23T16:54:39.663281449Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bdfbd4b0dfb53eecc80bac65894d1e2fcfafb27dcf24ab019176e2c9f60b9a39 in / "
                },
                {
                    "created": "2020-01-23T16:54:40.353281052Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-23T17:36:05.510608107Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-01-23T17:36:07.938033301Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-01-28T21:49:03.694549108Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.16",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-28T21:51:04.973685138Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'ce6e5ed85b4a54ffc01d55a5838ee313acb4a7f109a745440fecbead1d081df8 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-01-28T21:51:12.087353431Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-28T21:51:15.983435208Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-28T21:51:19.017503226Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-01-28T21:51:20.381686067Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1aed0a4fa040a4b937e7b74a2e2386e40654c267d166dced87eb80d5a1a0826c",
                    "sha256:f2c832c0a239a603c1482fd9563201da92a86060471bc59a879d2d33043641e0",
                    "sha256:cd9b03c31d86db9cc14d8a724d86f89be4e4b2a05cf3fc5d6458851596fae784",
                    "sha256:bf4c1ae28eb45eb07e660427dafc243693f40aab391dceb596eb429e878ce42d",
                    "sha256:7435e670082979a753d49d2d24216475fea683dee820a4563fbcea2f0a06863c"
                ]
            }
        },
        "1.12.16-alpine3.11": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.16",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ff7dc51e14eee93f60b392f98cc80725da0401ca84fa63dc9249bd8e8fb1ad1b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "9f2edad0939f65bb28ce44fe24cac97c98a07ca280408b04f4b97dfe6e761c52",
            "container_config": {
                "Hostname": "9f2edad0939f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.16",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ff7dc51e14eee93f60b392f98cc80725da0401ca84fa63dc9249bd8e8fb1ad1b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-01-28T21:48:49.269814952Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-01-18T01:39:43.076306142Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4109fa86dd80850e84c689ff9e6a3243e30ab1bbcc00c765969b3011bfbb43e1 in / "
                },
                {
                    "created": "2020-01-18T01:39:43.809479591Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T06:10:29.605168752Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-01-18T06:10:36.930249136Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-01-28T21:46:47.973207939Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.16",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-28T21:48:42.335925698Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'ce6e5ed85b4a54ffc01d55a5838ee313acb4a7f109a745440fecbead1d081df8 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-01-28T21:48:46.566740363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-28T21:48:47.058443849Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-28T21:48:48.65628825Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-01-28T21:48:49.269814952Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:53745f29fdbf5642c5275f34b9803e69742e082df0a7bb3316ece48ba45c622f",
                    "sha256:9c60a09a3ecd837e13b7a944fdd5b15a2474f2e90c7816d4c28658263fcd525c",
                    "sha256:1e344161583c7ea28934eb5e22d72155510bdd29547dc503702fddac86a9a05f",
                    "sha256:e675a516508ec9305edc82fae777f947cba90e606c445eaaf24e499f2730efd2",
                    "sha256:07c99bb2781fd344128e2a913ffc829eb055982e9f3ecdf49285614410afd6eb"
                ]
            }
        },
        "1.12.16-buster": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.16",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:75c435affd561059cdadfe9da1959bbe8f069bcedad126cc774ba8e002579933",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "6bd6a56b272e600f0862ced2cedfd729b5b913ee8c10fbc70020d89fd368d36a",
            "container_config": {
                "Hostname": "6bd6a56b272e",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.16",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:75c435affd561059cdadfe9da1959bbe8f069bcedad126cc774ba8e002579933",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-02T11:11:52.74131473Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-02-01T16:40:50.672557644Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b423f4b0ed41dfe1334031fe9b21f7e1c88ccb031d7e8f2ff165d618323424d7 in / "
                },
                {
                    "created": "2020-02-01T16:40:53.171343122Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-01T17:18:39.317847599Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-01T17:18:51.706437073Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-02-01T17:19:27.114332889Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-02T11:08:58.969394142Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-02T11:11:14.505322627Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.16",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-02T11:11:46.115950319Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='bf3a85d75658144c06ce986ba05e07ef08af4320089b74b1d41de3b0f340ea7e' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='2f77688eaf25d8ae58adc5164de0fc13d600705c2ebadc6e1138e5ce9ceadc41' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='a01df310bfeffc67480982cf6ad50c9b83f9aaf4ac855d5e581b95eb727bb24c' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='e6ebf5622203f2ceee138af16c765818bf65b74668d5e73c1da6491c3e890a88' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='7c133932d1beae68a483dbac69bb0e1023fa08196ebee100594b79c0672ce67c' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='e93326caefb3945054f9c98dd7934892b69dcb46d343cd3582c777874f5d2716' ;; \t\t*) goRelArch='src'; goRelSha256='ce6e5ed85b4a54ffc01d55a5838ee313acb4a7f109a745440fecbead1d081df8'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-02T11:11:49.550693461Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-02T11:11:50.229428012Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-02T11:11:52.142742024Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-02T11:11:52.74131473Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4c0a780b5c559771bd7939715e552ce5dd7f031b23dfb53bea76d8d303a07f4f",
                    "sha256:53882b0b06b691760199e1c8232da08dfb9a00a7914c4327acdf70a1f243fb79",
                    "sha256:d7c0094a20c8f46e323511c505f15f4bb53f8be0722b763620e2d74935ea4cd4",
                    "sha256:a1c545c647123030790d740c8deb543de50e789258eab2960a43205f442a6882",
                    "sha256:0c9ee1aead43b5e3b0f0edaa5812fed660d61b78e9cce2d53d046bbdd60bdf7e",
                    "sha256:1c9ea1e52bc903ea319b40f996a6ed16fdc8f4b4b0f91327fb6b9caa7124f1a1",
                    "sha256:eb1e749c21a2c8e8dbf0f35982d59414efbf7c294f9908409d5ffe16da8b6e56"
                ]
            }
        },
        "1.12.16-stretch": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.16",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f3469c9233563412cd30da49274bd7d3aa46146836fb496d629f2093c2df17aa",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "40a9a96fdfd8e700549cc192b823bf085788c46ba41dd44dd16b4f2515a35aaa",
            "container_config": {
                "Hostname": "40a9a96fdfd8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.16",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f3469c9233563412cd30da49274bd7d3aa46146836fb496d629f2093c2df17aa",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-02T11:12:26.309513158Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-02-01T16:43:01.284413168Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:1618e6474dbe6462a610ce7eed99f0bfd087ea37ddfc287bbd69def5c24ede47 in / "
                },
                {
                    "created": "2020-02-01T16:43:02.994039335Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-01T17:29:40.136456721Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-01T17:29:52.862467817Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-02-01T17:30:30.600101397Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-02T11:10:28.164144474Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-02T11:11:59.741867898Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.16",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-02T11:12:14.981870276Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='bf3a85d75658144c06ce986ba05e07ef08af4320089b74b1d41de3b0f340ea7e' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='2f77688eaf25d8ae58adc5164de0fc13d600705c2ebadc6e1138e5ce9ceadc41' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='a01df310bfeffc67480982cf6ad50c9b83f9aaf4ac855d5e581b95eb727bb24c' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='e6ebf5622203f2ceee138af16c765818bf65b74668d5e73c1da6491c3e890a88' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='7c133932d1beae68a483dbac69bb0e1023fa08196ebee100594b79c0672ce67c' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='e93326caefb3945054f9c98dd7934892b69dcb46d343cd3582c777874f5d2716' ;; \t\t*) goRelArch='src'; goRelSha256='ce6e5ed85b4a54ffc01d55a5838ee313acb4a7f109a745440fecbead1d081df8'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-02T11:12:23.250195353Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-02T11:12:23.833874523Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-02T11:12:25.641922223Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-02T11:12:26.309513158Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b3a6ef74a999da2ed536dd1f8b5295125f78872a00882123d7d80e344f24f646",
                    "sha256:69fc517042bb1cf30e22fcce18abbd4da50d54ac2f76accbe7a083bc1a692c35",
                    "sha256:6db6ab27fb99f39477ca67b4ebae65dbfa6779a359326dabd5abca166c4c5c9b",
                    "sha256:f052fb6fefd44da08bd449d4a49081c17eb7b33e1258db8359d3bd1f8d5606c2",
                    "sha256:4cd9d6cdb137586211460efd96d5117a90bbc331c0adb01d9370ee49d6c014e1",
                    "sha256:55a8d31e2b27e56fc87a10e1c887cbe921e1556cfb25b08c49d1880517d621c5",
                    "sha256:3e6974d606cc2c2bac42b26dda55d1e4af56e9ecf17ad5bb91eac2ef73f944b4"
                ]
            }
        },
        "1.12.17-alpine": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.17",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:12d74b31d2923577a60b8b5bef349054ac322745ae7ef768cb5c04aee120f164",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f6aa9378bc181ff9b2d2de83145ca9ff774523c85db304cdc7f1cdb75ff9cd57",
            "container_config": {
                "Hostname": "f6aa9378bc18",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.17",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:12d74b31d2923577a60b8b5bef349054ac322745ae7ef768cb5c04aee120f164",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-14T00:51:48.914141507Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-01-18T01:39:43.076306142Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4109fa86dd80850e84c689ff9e6a3243e30ab1bbcc00c765969b3011bfbb43e1 in / "
                },
                {
                    "created": "2020-01-18T01:39:43.809479591Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T06:10:29.605168752Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-01-18T06:10:36.930249136Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-02-14T00:49:28.641846617Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.17",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T00:51:38.257053385Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'de878218c43aa3c3bad54c1c52d95e3b0e5d336e1285c647383e775541a28b25 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-14T00:51:39.862645082Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T00:51:43.486276632Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T00:51:47.71955394Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-14T00:51:48.914141507Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:53745f29fdbf5642c5275f34b9803e69742e082df0a7bb3316ece48ba45c622f",
                    "sha256:9c60a09a3ecd837e13b7a944fdd5b15a2474f2e90c7816d4c28658263fcd525c",
                    "sha256:1e344161583c7ea28934eb5e22d72155510bdd29547dc503702fddac86a9a05f",
                    "sha256:ccad0a45fab58237077eb38a0356a11b62854af2b99830dc1426bf04fa879b5b",
                    "sha256:65e02ee814f79aa3782a18c14543f4c0586491bf438d01f0d2dfa79d726915e7"
                ]
            }
        },
        "1.12.17-alpine3.10": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.17",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:bc3ce7821f55cf8e4dbefe98203422be63ee268b1e3f91ea31c3683a26645a77",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "38236272a96d92d3ee523830a435ffa36eee9dc18539ccee36a4849b300de867",
            "container_config": {
                "Hostname": "38236272a96d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.17",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:bc3ce7821f55cf8e4dbefe98203422be63ee268b1e3f91ea31c3683a26645a77",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-14T00:54:29.530957783Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-01-23T16:54:39.663281449Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bdfbd4b0dfb53eecc80bac65894d1e2fcfafb27dcf24ab019176e2c9f60b9a39 in / "
                },
                {
                    "created": "2020-01-23T16:54:40.353281052Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-23T17:36:05.510608107Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-01-23T17:36:07.938033301Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-02-14T00:52:00.879821374Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.17",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T00:54:13.04903842Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'de878218c43aa3c3bad54c1c52d95e3b0e5d336e1285c647383e775541a28b25 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-14T00:54:19.692205452Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T00:54:20.969993554Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T00:54:25.947222055Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-14T00:54:29.530957783Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1aed0a4fa040a4b937e7b74a2e2386e40654c267d166dced87eb80d5a1a0826c",
                    "sha256:f2c832c0a239a603c1482fd9563201da92a86060471bc59a879d2d33043641e0",
                    "sha256:cd9b03c31d86db9cc14d8a724d86f89be4e4b2a05cf3fc5d6458851596fae784",
                    "sha256:4b77ab5e7fca503db82eafc9e27085a23275e66afc26cbc5dde81e31cfdd9cb3",
                    "sha256:127ae7e4ba5f78c458925e262f80914d3ce9e86f322f53497cc1086fdfd524a5"
                ]
            }
        },
        "1.12.17-alpine3.11": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.17",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:12d74b31d2923577a60b8b5bef349054ac322745ae7ef768cb5c04aee120f164",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f6aa9378bc181ff9b2d2de83145ca9ff774523c85db304cdc7f1cdb75ff9cd57",
            "container_config": {
                "Hostname": "f6aa9378bc18",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.17",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:12d74b31d2923577a60b8b5bef349054ac322745ae7ef768cb5c04aee120f164",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-14T00:51:48.914141507Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-01-18T01:39:43.076306142Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4109fa86dd80850e84c689ff9e6a3243e30ab1bbcc00c765969b3011bfbb43e1 in / "
                },
                {
                    "created": "2020-01-18T01:39:43.809479591Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T06:10:29.605168752Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-01-18T06:10:36.930249136Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-02-14T00:49:28.641846617Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.17",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T00:51:38.257053385Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'de878218c43aa3c3bad54c1c52d95e3b0e5d336e1285c647383e775541a28b25 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-14T00:51:39.862645082Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T00:51:43.486276632Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T00:51:47.71955394Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-14T00:51:48.914141507Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:53745f29fdbf5642c5275f34b9803e69742e082df0a7bb3316ece48ba45c622f",
                    "sha256:9c60a09a3ecd837e13b7a944fdd5b15a2474f2e90c7816d4c28658263fcd525c",
                    "sha256:1e344161583c7ea28934eb5e22d72155510bdd29547dc503702fddac86a9a05f",
                    "sha256:ccad0a45fab58237077eb38a0356a11b62854af2b99830dc1426bf04fa879b5b",
                    "sha256:65e02ee814f79aa3782a18c14543f4c0586491bf438d01f0d2dfa79d726915e7"
                ]
            }
        },
        "1.12.17-buster": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.17",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c5e64ccc54ac3cbd6959ede4653d1ef2187727496c379cd7eee6ce543f913b60",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "065c49bb312762aa3345898c468f3131e14044c434bf78f475332fb943132821",
            "container_config": {
                "Hostname": "065c49bb3127",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.17",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c5e64ccc54ac3cbd6959ede4653d1ef2187727496c379cd7eee6ce543f913b60",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-14T00:48:50.085086754Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-02-01T16:40:50.672557644Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b423f4b0ed41dfe1334031fe9b21f7e1c88ccb031d7e8f2ff165d618323424d7 in / "
                },
                {
                    "created": "2020-02-01T16:40:53.171343122Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-01T17:18:39.317847599Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-01T17:18:51.706437073Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-02-01T17:19:27.114332889Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-02T11:08:58.969394142Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-14T00:48:24.579312371Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.17",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T00:48:39.968186917Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='a53dd476129d496047487bfd53d021dd17e0c96895865a0e7d0469ce3db8c8d2' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='a883c806fccb3eddb26da4a1a1f8536de863aee6807ed6c99606261877af7b99' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='9d0819cce1451abdb090071880fe8771f16a3bcee71d6f6906023d17799574e2' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='e33fc10c0486b02a019f120996d77792d8f19aae8bfdda97350a622a65d6b824' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='dca4df132da7579c352bccd9d6f4ecb8d8d61893a84b0feffcee2bb4246114a3' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='e50ffb6e0d7e7573ed9ca0f5228bdd43238a25ac34916de027036ff97322d236' ;; \t\t*) goRelArch='src'; goRelSha256='de878218c43aa3c3bad54c1c52d95e3b0e5d336e1285c647383e775541a28b25'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-14T00:48:46.717687734Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T00:48:47.31213804Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T00:48:48.993463388Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-14T00:48:50.085086754Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4c0a780b5c559771bd7939715e552ce5dd7f031b23dfb53bea76d8d303a07f4f",
                    "sha256:53882b0b06b691760199e1c8232da08dfb9a00a7914c4327acdf70a1f243fb79",
                    "sha256:d7c0094a20c8f46e323511c505f15f4bb53f8be0722b763620e2d74935ea4cd4",
                    "sha256:a1c545c647123030790d740c8deb543de50e789258eab2960a43205f442a6882",
                    "sha256:0c9ee1aead43b5e3b0f0edaa5812fed660d61b78e9cce2d53d046bbdd60bdf7e",
                    "sha256:2298b98f8188c93942e316d5397565f15a5b822b4dd1b36febe476fcb2d78aed",
                    "sha256:08f2edfaf4413074bb3227ff74404b681f65a9f0a4375955113058b5014ad394"
                ]
            }
        },
        "1.12.17-stretch": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.17",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9b701b8ff4bd1109ef16c97fa67cf0856eb9b6d454a1b851eefea6418c77744a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "e2246ee4a3d6ea79dcef35e43300c70fa373f3bd9b6a8660d72714b3e5ae5a29",
            "container_config": {
                "Hostname": "e2246ee4a3d6",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.17",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9b701b8ff4bd1109ef16c97fa67cf0856eb9b6d454a1b851eefea6418c77744a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-14T00:49:23.105499359Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-02-01T16:43:01.284413168Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:1618e6474dbe6462a610ce7eed99f0bfd087ea37ddfc287bbd69def5c24ede47 in / "
                },
                {
                    "created": "2020-02-01T16:43:02.994039335Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-01T17:29:40.136456721Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-01T17:29:52.862467817Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-02-01T17:30:30.600101397Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-02T11:10:28.164144474Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-14T00:48:59.381809154Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.17",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T00:49:18.392304174Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='a53dd476129d496047487bfd53d021dd17e0c96895865a0e7d0469ce3db8c8d2' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='a883c806fccb3eddb26da4a1a1f8536de863aee6807ed6c99606261877af7b99' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='9d0819cce1451abdb090071880fe8771f16a3bcee71d6f6906023d17799574e2' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='e33fc10c0486b02a019f120996d77792d8f19aae8bfdda97350a622a65d6b824' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='dca4df132da7579c352bccd9d6f4ecb8d8d61893a84b0feffcee2bb4246114a3' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='e50ffb6e0d7e7573ed9ca0f5228bdd43238a25ac34916de027036ff97322d236' ;; \t\t*) goRelArch='src'; goRelSha256='de878218c43aa3c3bad54c1c52d95e3b0e5d336e1285c647383e775541a28b25'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-14T00:49:20.201106603Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T00:49:20.913797523Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T00:49:22.488183015Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-14T00:49:23.105499359Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b3a6ef74a999da2ed536dd1f8b5295125f78872a00882123d7d80e344f24f646",
                    "sha256:69fc517042bb1cf30e22fcce18abbd4da50d54ac2f76accbe7a083bc1a692c35",
                    "sha256:6db6ab27fb99f39477ca67b4ebae65dbfa6779a359326dabd5abca166c4c5c9b",
                    "sha256:f052fb6fefd44da08bd449d4a49081c17eb7b33e1258db8359d3bd1f8d5606c2",
                    "sha256:4cd9d6cdb137586211460efd96d5117a90bbc331c0adb01d9370ee49d6c014e1",
                    "sha256:4ffd1118ca447c6e1f0e953645f43356a44008f6d3af4420a41b9b7644f76487",
                    "sha256:fc2ae664f640744c89c7c2cd06904f1cb96cc91fa76952155f75ddbab4da21d0"
                ]
            }
        },
        "1.12.2-alpine": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:86d4bc6898c248f5babdb4fc0820af7c6c8526cd9e45a8a3d3dc87b3c37d3895",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "6a4c51733d36db68dcd61337bc02378971690ff3c154b9bbc93c139763d5a330",
            "container_config": {
                "Hostname": "6a4c51733d36",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:86d4bc6898c248f5babdb4fc0820af7c6c8526cd9e45a8a3d3dc87b3c37d3895",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-04-06T08:47:17.939958555Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-08T03:37:01.50193332Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2e80d7b240ac8c544a868180a2a08b2533c450061e0ec276ceacaff7b87a380c in / "
                },
                {
                    "created": "2019-03-08T03:37:02.050813908Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-08T04:18:47.872266951Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-03-08T04:18:49.827739314Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-04-06T08:43:46.312208114Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.2",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-06T08:47:12.711929895Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'af992580a4a609309c734d46fd4374fe3095961263e609d9b017e2dffc3b7b58 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-04-06T08:47:14.211836998Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-06T08:47:14.836309798Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-06T08:47:17.107560137Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-04-06T08:47:17.939958555Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b83703e07573d5eac589806f0afe1648f84ec111b9169ff9db1884730b5603e3",
                    "sha256:5e245268d749dca621ed93898e5846607a63f748ca5c57b0f2a9539dcc71dc23",
                    "sha256:912faf05df34b8984d955330b3678b8704e2668217e5c8d7e1a678cca17e462d",
                    "sha256:c77ff9fa6a013bf50a393ce96f507aba634bc35bccd2064d4f2622b7d76d40ae",
                    "sha256:a7c244cf47dc5642d70d1badef8fd551efa4bf48e375c735fe51045d9fd462d9"
                ]
            }
        },
        "1.12.2-alpine3.9": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:86d4bc6898c248f5babdb4fc0820af7c6c8526cd9e45a8a3d3dc87b3c37d3895",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "6a4c51733d36db68dcd61337bc02378971690ff3c154b9bbc93c139763d5a330",
            "container_config": {
                "Hostname": "6a4c51733d36",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:86d4bc6898c248f5babdb4fc0820af7c6c8526cd9e45a8a3d3dc87b3c37d3895",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-04-06T08:47:17.939958555Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-08T03:37:01.50193332Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2e80d7b240ac8c544a868180a2a08b2533c450061e0ec276ceacaff7b87a380c in / "
                },
                {
                    "created": "2019-03-08T03:37:02.050813908Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-08T04:18:47.872266951Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-03-08T04:18:49.827739314Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-04-06T08:43:46.312208114Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.2",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-06T08:47:12.711929895Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'af992580a4a609309c734d46fd4374fe3095961263e609d9b017e2dffc3b7b58 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-04-06T08:47:14.211836998Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-06T08:47:14.836309798Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-06T08:47:17.107560137Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-04-06T08:47:17.939958555Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b83703e07573d5eac589806f0afe1648f84ec111b9169ff9db1884730b5603e3",
                    "sha256:5e245268d749dca621ed93898e5846607a63f748ca5c57b0f2a9539dcc71dc23",
                    "sha256:912faf05df34b8984d955330b3678b8704e2668217e5c8d7e1a678cca17e462d",
                    "sha256:c77ff9fa6a013bf50a393ce96f507aba634bc35bccd2064d4f2622b7d76d40ae",
                    "sha256:a7c244cf47dc5642d70d1badef8fd551efa4bf48e375c735fe51045d9fd462d9"
                ]
            }
        },
        "1.12.2-stretch": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:db20deb7cee4e107b83c6250e0ee40c607e52b8f3691eea498052b512c7d0f93",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "d784709e658636f1e6835f0caf18b87e0b562e6fe9f4c947d9caf3b805f715b5",
            "container_config": {
                "Hostname": "d784709e6586",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:db20deb7cee4e107b83c6250e0ee40c607e52b8f3691eea498052b512c7d0f93",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-04-06T08:43:39.349883374Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-27T08:47:20.29754472Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8f991b13b28ce1de362b9f00e69aac8edc28124a08adeeb3b7fb02153e0b4e92 in / "
                },
                {
                    "created": "2019-03-27T08:47:21.400108146Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-27T10:15:55.61565095Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-27T10:16:13.26020269Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-03-27T10:17:48.418797173Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-27T22:20:12.728264648Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-04-06T08:43:10.024435931Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.2",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-06T08:43:33.6314402Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='f28c1fde8f293cc5c83ae8de76373cf76ae9306909564f54e0edcf140ce8fe3f' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='38d92116cd8c408e995972ff7fb0b6453c4f2214bde602d1772bd88f9d4d5c60' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='598558fe54bbdce8b676f81e37f514dd70b8fc1377086658ae6e836480e900eb' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='3005a7937ff2be7ea9badd416cc37dfe2ff589d3a311f1685de0a805e45455b6' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='62be1d5f38e322edc21de0debd3051247faff59890c343a7f2173c15098dbd35' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='a41b0b11f5e34c3cccd7619bddf79a6d4b94bcbd2160fefcdf25f0afe87cad0a' ;; \t\t*) goRelArch='src'; goRelSha256='af992580a4a609309c734d46fd4374fe3095961263e609d9b017e2dffc3b7b58'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-04-06T08:43:35.752985766Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-06T08:43:36.369116651Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-06T08:43:38.665282371Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-04-06T08:43:39.349883374Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3fa17642530603a1dab4c25c34426e7befde7f29d5c58cf662286e2bedbd39cf",
                    "sha256:00f1e9bd82fbbd9ae578f126bea9d01d726299a87ffbf4c2d3b0ba3a751babcd",
                    "sha256:22758826ae9f21fa3d48d7827dc358962d0d52ae42671a6fbd96ef84f865a633",
                    "sha256:34aa8af3c0e3e90d629b5e52a9a3a57cd190a70802063784d9a8f328a1a4a0c8",
                    "sha256:2ff0644d5fee32819749af50a36d3d1fdd22f88cd8309b530d86e6db0cf68322",
                    "sha256:888c92b7648dc9f1a667189b22f571031d64a32bf758f7fa6b226fe7c73ba859",
                    "sha256:5650a368231e63b98d2627c625a974c4a5552d14ba2bdf853ff97afbd92c87dd"
                ]
            }
        },
        "1.12.3-alpine": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f56432bae34a0b22e2a092955d03a81d79a64e842f7593ca041f7d098fab9423",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "ea4a6969c11eb5e9377d443c3af39381ac3a66f252d10305d598c13da5313e60",
            "container_config": {
                "Hostname": "ea4a6969c11e",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f56432bae34a0b22e2a092955d03a81d79a64e842f7593ca041f7d098fab9423",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-04-10T14:07:32.402437083Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-04-10T08:49:11.672618918Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:30e0a8ccdca70b20b8ce637f0ba5108157f4ba491447d20aafbe45d82392bd81 in / "
                },
                {
                    "created": "2019-04-10T08:49:12.263392341Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-10T08:49:19.217880912Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-04-10T08:49:34.799051781Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-04-10T13:59:49.23042064Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.3",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-10T14:07:22.687263534Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '5c507abe8818429d74ebb650a4155d36bc3f9a725e59e76f5d6aca9690be2373 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-04-10T14:07:24.990939518Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-10T14:07:26.241770553Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-10T14:07:31.238199833Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-04-10T14:07:32.402437083Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e64a3852ea352321b9dc050e64aec275774fd574989d219fc541973a12445c7e",
                    "sha256:cb0b8a877518faf2fba91c8ee2f399d158d3910a4b7938aa68f947af24149d8f",
                    "sha256:916dd9a95078a646cc2609836012bc9fcb04a32dbb750666ff9f0a76deb4269d",
                    "sha256:0ffbff741876cef22f213dab26ffb147b5d0eda425a2f60fd68c9c9f68f35c65",
                    "sha256:f519547af1c616d4d2b4f2b4ea52ca2331ad24a8afaae7bc664c96c17bbefb71"
                ]
            }
        },
        "1.12.3-alpine3.9": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f56432bae34a0b22e2a092955d03a81d79a64e842f7593ca041f7d098fab9423",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "ea4a6969c11eb5e9377d443c3af39381ac3a66f252d10305d598c13da5313e60",
            "container_config": {
                "Hostname": "ea4a6969c11e",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f56432bae34a0b22e2a092955d03a81d79a64e842f7593ca041f7d098fab9423",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-04-10T14:07:32.402437083Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-04-10T08:49:11.672618918Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:30e0a8ccdca70b20b8ce637f0ba5108157f4ba491447d20aafbe45d82392bd81 in / "
                },
                {
                    "created": "2019-04-10T08:49:12.263392341Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-10T08:49:19.217880912Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-04-10T08:49:34.799051781Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-04-10T13:59:49.23042064Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.3",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-10T14:07:22.687263534Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '5c507abe8818429d74ebb650a4155d36bc3f9a725e59e76f5d6aca9690be2373 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-04-10T14:07:24.990939518Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-10T14:07:26.241770553Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-10T14:07:31.238199833Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-04-10T14:07:32.402437083Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e64a3852ea352321b9dc050e64aec275774fd574989d219fc541973a12445c7e",
                    "sha256:cb0b8a877518faf2fba91c8ee2f399d158d3910a4b7938aa68f947af24149d8f",
                    "sha256:916dd9a95078a646cc2609836012bc9fcb04a32dbb750666ff9f0a76deb4269d",
                    "sha256:0ffbff741876cef22f213dab26ffb147b5d0eda425a2f60fd68c9c9f68f35c65",
                    "sha256:f519547af1c616d4d2b4f2b4ea52ca2331ad24a8afaae7bc664c96c17bbefb71"
                ]
            }
        },
        "1.12.3-stretch": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3ef99e831369eb321c87072c03af69c79a08ea16df9ea7d495f55e5955f95228",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "01a384c20fac3543bc27a8f842c251162dc8ce0c8f5773f15974d4b0f16f4442",
            "container_config": {
                "Hostname": "01a384c20fac",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3ef99e831369eb321c87072c03af69c79a08ea16df9ea7d495f55e5955f95228",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-04-09T08:40:43.28825399Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-27T08:47:20.29754472Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8f991b13b28ce1de362b9f00e69aac8edc28124a08adeeb3b7fb02153e0b4e92 in / "
                },
                {
                    "created": "2019-03-27T08:47:21.400108146Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-27T10:15:55.61565095Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-27T10:16:13.26020269Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-03-27T10:17:48.418797173Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-27T22:20:12.728264648Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-04-09T08:40:03.554072879Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.3",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-09T08:40:28.508558279Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='3924819eed16e55114f02d25d03e77c916ec40b7fd15c8acb5838b63135b03df' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='efce59fac5ebc7302263ca1093fe2c3252c1b936f5b1ae08afc328eea0403c79' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='4deb7f3b90d03f71f5cac3654e0e1f9cb46c45b85c5475510222b958e4ea2ed6' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='67599ae0788ed88260531d4be4293cb8f5199e5c7e06d30c6bd95eb54f014be7' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='8bd04e742be8ed3f7f6fd2c78e2303be2ee70709cdc28758f101765a5e7d6dc1' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='102fe607818ba21b9853ddfa3b1225b2af802010af3a032c6487144fbb7f3521' ;; \t\t*) goRelArch='src'; goRelSha256='5c507abe8818429d74ebb650a4155d36bc3f9a725e59e76f5d6aca9690be2373'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-04-09T08:40:39.355539677Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-09T08:40:40.259329287Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-09T08:40:42.672122334Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-04-09T08:40:43.28825399Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3fa17642530603a1dab4c25c34426e7befde7f29d5c58cf662286e2bedbd39cf",
                    "sha256:00f1e9bd82fbbd9ae578f126bea9d01d726299a87ffbf4c2d3b0ba3a751babcd",
                    "sha256:22758826ae9f21fa3d48d7827dc358962d0d52ae42671a6fbd96ef84f865a633",
                    "sha256:34aa8af3c0e3e90d629b5e52a9a3a57cd190a70802063784d9a8f328a1a4a0c8",
                    "sha256:2ff0644d5fee32819749af50a36d3d1fdd22f88cd8309b530d86e6db0cf68322",
                    "sha256:242180401cc3ccab8dea33232719df9f165f74136d4273976db8bd98c72cc5f1",
                    "sha256:933d54feda53b03b1dbbb630723342ac847e3e3c36bdf7530939f16d58acce48"
                ]
            }
        },
        "1.12.4-alpine": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:10552ac0940672f93f4e3b5ee60687417de424e082ea9d569164a8837140bb6e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "ca79d83127a6430416fa264f8be7ea4716827463a19dd7616a8c233c41a5ca2b",
            "container_config": {
                "Hostname": "ca79d83127a6",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:10552ac0940672f93f4e3b5ee60687417de424e082ea9d569164a8837140bb6e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-04-15T19:55:18.369460642Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-04-10T08:49:11.672618918Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:30e0a8ccdca70b20b8ce637f0ba5108157f4ba491447d20aafbe45d82392bd81 in / "
                },
                {
                    "created": "2019-04-10T08:49:12.263392341Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-10T08:49:19.217880912Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-04-10T08:49:34.799051781Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-04-15T19:51:45.677481723Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.4",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-15T19:55:07.747363518Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '4affc3e610cd8182c47abbc5b0c0e4e3c6a2b945b55aaa2ba952964ad9df1467 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-04-15T19:55:09.544696867Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-15T19:55:11.262170872Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-15T19:55:16.280052163Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-04-15T19:55:18.369460642Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e64a3852ea352321b9dc050e64aec275774fd574989d219fc541973a12445c7e",
                    "sha256:cb0b8a877518faf2fba91c8ee2f399d158d3910a4b7938aa68f947af24149d8f",
                    "sha256:916dd9a95078a646cc2609836012bc9fcb04a32dbb750666ff9f0a76deb4269d",
                    "sha256:cffafdb4ffaaa69509756dbfdc77b95afcd7cbcd823985054799646b97e9a589",
                    "sha256:3a28271b895b796b2a5a3c73454ffb480082aef0bea6a2741f634b3503de8145"
                ]
            }
        },
        "1.12.4-alpine3.9": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:10552ac0940672f93f4e3b5ee60687417de424e082ea9d569164a8837140bb6e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "ca79d83127a6430416fa264f8be7ea4716827463a19dd7616a8c233c41a5ca2b",
            "container_config": {
                "Hostname": "ca79d83127a6",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:10552ac0940672f93f4e3b5ee60687417de424e082ea9d569164a8837140bb6e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-04-15T19:55:18.369460642Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-04-10T08:49:11.672618918Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:30e0a8ccdca70b20b8ce637f0ba5108157f4ba491447d20aafbe45d82392bd81 in / "
                },
                {
                    "created": "2019-04-10T08:49:12.263392341Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-10T08:49:19.217880912Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-04-10T08:49:34.799051781Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-04-15T19:51:45.677481723Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.4",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-15T19:55:07.747363518Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '4affc3e610cd8182c47abbc5b0c0e4e3c6a2b945b55aaa2ba952964ad9df1467 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-04-15T19:55:09.544696867Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-15T19:55:11.262170872Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-15T19:55:16.280052163Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-04-15T19:55:18.369460642Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e64a3852ea352321b9dc050e64aec275774fd574989d219fc541973a12445c7e",
                    "sha256:cb0b8a877518faf2fba91c8ee2f399d158d3910a4b7938aa68f947af24149d8f",
                    "sha256:916dd9a95078a646cc2609836012bc9fcb04a32dbb750666ff9f0a76deb4269d",
                    "sha256:cffafdb4ffaaa69509756dbfdc77b95afcd7cbcd823985054799646b97e9a589",
                    "sha256:3a28271b895b796b2a5a3c73454ffb480082aef0bea6a2741f634b3503de8145"
                ]
            }
        },
        "1.12.4-stretch": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:5ff67f82fd1ad926f4c1c373977273b73874be551e59c1db0ac11c31b042aa7d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "751f253831f83be835ae4a56845fb69e7d4b934ea357f3e5dbe75ad19756df55",
            "container_config": {
                "Hostname": "751f253831f8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:5ff67f82fd1ad926f4c1c373977273b73874be551e59c1db0ac11c31b042aa7d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-04-15T19:51:38.905856948Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-27T08:47:20.29754472Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8f991b13b28ce1de362b9f00e69aac8edc28124a08adeeb3b7fb02153e0b4e92 in / "
                },
                {
                    "created": "2019-03-27T08:47:21.400108146Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-27T10:15:55.61565095Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-27T10:16:13.26020269Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-03-27T10:17:48.418797173Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-27T22:20:12.728264648Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-04-15T19:51:05.659159352Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.4",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-15T19:51:33.041652007Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='d7d1f1f88ddfe55840712dc1747f37a790cbcaa448f6c9cf51bbe10aa65442f5' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='c43457b6d89016e9b79b92823003fd7858fb02aea22b335cfd204e0b5be71d92' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='b7d7b4319b2d86a2ed20cef3b47aa23f0c97612b469178deecd021610f6917df' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='eba5c51f657c1b05d5930475d1723758cd86db74499125ab48f0f9d1863845f7' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='51642f3cd6ef9af6c4a092c2929e4fb478f102fe949921bd77ecd6905952c216' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='0aab0f368c090da71f52531ebac977cc7396b692145acee557b3f9500b42467a' ;; \t\t*) goRelArch='src'; goRelSha256='4affc3e610cd8182c47abbc5b0c0e4e3c6a2b945b55aaa2ba952964ad9df1467'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-04-15T19:51:34.535686376Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-15T19:51:35.439894552Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-15T19:51:38.059144085Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-04-15T19:51:38.905856948Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3fa17642530603a1dab4c25c34426e7befde7f29d5c58cf662286e2bedbd39cf",
                    "sha256:00f1e9bd82fbbd9ae578f126bea9d01d726299a87ffbf4c2d3b0ba3a751babcd",
                    "sha256:22758826ae9f21fa3d48d7827dc358962d0d52ae42671a6fbd96ef84f865a633",
                    "sha256:34aa8af3c0e3e90d629b5e52a9a3a57cd190a70802063784d9a8f328a1a4a0c8",
                    "sha256:2ff0644d5fee32819749af50a36d3d1fdd22f88cd8309b530d86e6db0cf68322",
                    "sha256:f3c23e0e1804bbcc83022cd14a0da74e70f7c4e9f749f8eb6ccb9a2bf2040a23",
                    "sha256:45b5545d8e536f208c653b5adb79334d87549df079a7cdfa214978916b959c1d"
                ]
            }
        },
        "1.12.5-alpine": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c3905fafa6d8c74bc553498dfb391370611f7166b916e3879da570fb4e124411",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "b3aa7d1244c5b86f586445a7bf93698c6a3dbdaca49742908c200e33a4b92b3c",
            "container_config": {
                "Hostname": "b3aa7d1244c5",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c3905fafa6d8c74bc553498dfb391370611f7166b916e3879da570fb4e124411",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-05-11T15:18:32.799404435Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-05-11T08:43:24.886692001Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:66f49017dd7ba295602526dbf210046e47fd097298c17a3f268a47487b5b6379 in / "
                },
                {
                    "created": "2019-05-11T08:43:25.494363315Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T09:00:02.017956678Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-05-11T09:00:03.8191483Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-05-11T15:13:58.95284202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.5",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T15:18:23.789573507Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '2aa5f088cbb332e73fc3def546800616b38d3bfe6b8713b8a6404060f22503e8 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-05-11T15:18:26.347190993Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T15:18:27.607465202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T15:18:31.533764317Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-05-11T15:18:32.799404435Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6d626da635fcff8a8485691ff0156105a5fe75675870a779f0093a6aedce13f7",
                    "sha256:66c1f9d3d7b2a869b3a7a3f111fa6227f82573b74084a64668eca94eb3af0366",
                    "sha256:7e8151238cd6d7545bfe9f1ed0c21497a3036807ccad3f0867037168564b3f2e",
                    "sha256:59723bdb29556b57a6a4a100add726f99438eb78b6c79cccc7594d7992a8a560",
                    "sha256:3ba4dfec0b771e83663e72a9336f0315b6337cd8e0773fb195462b3943e9518b"
                ]
            }
        },
        "1.12.5-alpine3.9": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c3905fafa6d8c74bc553498dfb391370611f7166b916e3879da570fb4e124411",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "b3aa7d1244c5b86f586445a7bf93698c6a3dbdaca49742908c200e33a4b92b3c",
            "container_config": {
                "Hostname": "b3aa7d1244c5",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c3905fafa6d8c74bc553498dfb391370611f7166b916e3879da570fb4e124411",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-05-11T15:18:32.799404435Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-05-11T08:43:24.886692001Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:66f49017dd7ba295602526dbf210046e47fd097298c17a3f268a47487b5b6379 in / "
                },
                {
                    "created": "2019-05-11T08:43:25.494363315Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T09:00:02.017956678Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-05-11T09:00:03.8191483Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-05-11T15:13:58.95284202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.5",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T15:18:23.789573507Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '2aa5f088cbb332e73fc3def546800616b38d3bfe6b8713b8a6404060f22503e8 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-05-11T15:18:26.347190993Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T15:18:27.607465202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T15:18:31.533764317Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-05-11T15:18:32.799404435Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6d626da635fcff8a8485691ff0156105a5fe75675870a779f0093a6aedce13f7",
                    "sha256:66c1f9d3d7b2a869b3a7a3f111fa6227f82573b74084a64668eca94eb3af0366",
                    "sha256:7e8151238cd6d7545bfe9f1ed0c21497a3036807ccad3f0867037168564b3f2e",
                    "sha256:59723bdb29556b57a6a4a100add726f99438eb78b6c79cccc7594d7992a8a560",
                    "sha256:3ba4dfec0b771e83663e72a9336f0315b6337cd8e0773fb195462b3943e9518b"
                ]
            }
        },
        "1.12.5-stretch": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6ab7ed793ab43eefb050e24ed295c8b3a5c83a22da5a217d22fc2d307fc8cb44",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "eb63f01c9877584e9cabb073835681173e556b9fa15fb54aa7d92f4a50c7bc18",
            "container_config": {
                "Hostname": "eb63f01c9877",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6ab7ed793ab43eefb050e24ed295c8b3a5c83a22da5a217d22fc2d307fc8cb44",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-05-08T23:16:14.07929003Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-05-08T08:48:25.711659074Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:153045f4fe6532d8c2ff273bb249a7a3a4cba913c26a4103ba5ddce1af02c1e5 in / "
                },
                {
                    "created": "2019-05-08T08:48:26.648199121Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-08T11:51:12.205211825Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-05-08T11:51:50.230367537Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-05-08T11:54:19.607817927Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-05-08T23:15:42.19541508Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-05-08T23:15:43.036848718Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.5",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-08T23:16:06.988829336Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='aea86e3c73495f205929cfebba0d63f1382c8ac59be081b6351681415f4063cf' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='311f5e76c7cec1ec752474a61d837e474b8e750b8e3eed267911ab57c0e5da9a' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='ff09f34935cd189a4912f3f308ec83e4683c309304144eae9cf60ebc552e7cd8' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='146605e13bf337ff3aacd941a816c5d97a8fef8b5817e07fcec4540632085980' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='e88b2a2098bc79ad33912d1d27bc3282a7f3231b6f4672f306465bf46ff784ca' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='168d297ec910cb446d1aea878baeb85f1387209f9eb55dde68bddcd4c006dcbb' ;; \t\t*) goRelArch='src'; goRelSha256='2aa5f088cbb332e73fc3def546800616b38d3bfe6b8713b8a6404060f22503e8'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-05-08T23:16:08.204374874Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-08T23:16:08.820486915Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-08T23:16:10.675589541Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-05-08T23:16:14.07929003Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ef9ee2bbae580cd8ce75e761a3d5fe29e3ff15b2585ff4ae69c9d8e56a1c8b9c",
                    "sha256:b75d612a0865b66e3f09b13b18c5b28913c7c5d2aed0769122085ff49404c5fc",
                    "sha256:ca88d05dec6b3725c7b655cf59b8a8decdc5e1c20f4d260ca7ade4ee8d718890",
                    "sha256:d6c3116ecf430d1841bb63ebdb12e30bff7affe75652ca808fd78851b87479a7",
                    "sha256:04902ff1c31972dfc9b103cc779c6724554ff2e57a630f92b08ffef66b0ba82a",
                    "sha256:4b5aaeb677bcaa4b4ac436b8c0cd3b853bdcfb176459e49e488a068918346ca1",
                    "sha256:0acc6badd73790df0798da1275dfcf240fa8e579d8b34212de645f04f79e7c0c"
                ]
            }
        },
        "1.12.6-alpine": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:209201f46ac88b47b5d328e9caefdd78991af37f7e1920a79d2e730016606039",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "385927ffa31238d9af23db4784697d57c4422f7a7a514e26ac72308a886e3e3b",
            "container_config": {
                "Hostname": "385927ffa312",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:209201f46ac88b47b5d328e9caefdd78991af37f7e1920a79d2e730016606039",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-06-20T20:41:46.261190283Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-06-19T20:39:38.119097445Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5ff5a563323bccd2fa42c7839aa0e7b4041af209e44bcb5bc9e07c4a94074b66 in / "
                },
                {
                    "created": "2019-06-19T20:39:38.520760373Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-20T20:39:43.832856561Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-06-20T20:39:45.072694908Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-06-20T20:39:45.396804392Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.6",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-20T20:41:41.8126701Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'c96c5ccc7455638ae1a8b7498a030fe653731c8391c5f8e79590bce72f92b4ca *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-06-20T20:41:43.912709129Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-20T20:41:44.34082669Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-20T20:41:45.76969702Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-06-20T20:41:46.261190283Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7b3463a46c2b13e2abbd97fcfa4a393ca1854561ba80e9d034e6cd9759575487",
                    "sha256:c74ed003a151642f64fb91e1e19caf0f81ccf041125fd0d9cfbf3641e8bbef84",
                    "sha256:5855e46d2922119cffdc00190a6c19d4a374145a72a1a703baf753d2fa69aba3",
                    "sha256:9f6f0109154cb8078a630e29f58917d6594144d1b32d7117860a0393d1b473c9",
                    "sha256:abdd4ccf31516dfe9bd67abffa21517d4889c00d9917f9a64510eb324170e747"
                ]
            }
        },
        "1.12.6-alpine3.10": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:209201f46ac88b47b5d328e9caefdd78991af37f7e1920a79d2e730016606039",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "385927ffa31238d9af23db4784697d57c4422f7a7a514e26ac72308a886e3e3b",
            "container_config": {
                "Hostname": "385927ffa312",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:209201f46ac88b47b5d328e9caefdd78991af37f7e1920a79d2e730016606039",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-06-20T20:41:46.261190283Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-06-19T20:39:38.119097445Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5ff5a563323bccd2fa42c7839aa0e7b4041af209e44bcb5bc9e07c4a94074b66 in / "
                },
                {
                    "created": "2019-06-19T20:39:38.520760373Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-20T20:39:43.832856561Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-06-20T20:39:45.072694908Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-06-20T20:39:45.396804392Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.6",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-20T20:41:41.8126701Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'c96c5ccc7455638ae1a8b7498a030fe653731c8391c5f8e79590bce72f92b4ca *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-06-20T20:41:43.912709129Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-20T20:41:44.34082669Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-20T20:41:45.76969702Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-06-20T20:41:46.261190283Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7b3463a46c2b13e2abbd97fcfa4a393ca1854561ba80e9d034e6cd9759575487",
                    "sha256:c74ed003a151642f64fb91e1e19caf0f81ccf041125fd0d9cfbf3641e8bbef84",
                    "sha256:5855e46d2922119cffdc00190a6c19d4a374145a72a1a703baf753d2fa69aba3",
                    "sha256:9f6f0109154cb8078a630e29f58917d6594144d1b32d7117860a0393d1b473c9",
                    "sha256:abdd4ccf31516dfe9bd67abffa21517d4889c00d9917f9a64510eb324170e747"
                ]
            }
        },
        "1.12.6-alpine3.9": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:eb317c1359828f5d1b14691fe233d3b4c84993dd6904c4af3bb00639362b1442",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "2b0e296a68a235cf7e7986d03129954cfd45cb1ecdadf86666651bdd9311bca7",
            "container_config": {
                "Hostname": "2b0e296a68a2",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:eb317c1359828f5d1b14691fe233d3b4c84993dd6904c4af3bb00639362b1442",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-06-19T22:01:20.932984249Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-06-19T20:39:47.282820492Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:66f49017dd7ba295602526dbf210046e47fd097298c17a3f268a47487b5b6379 in / "
                },
                {
                    "created": "2019-06-19T20:39:47.636619987Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-19T20:56:05.137314338Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-06-19T20:56:06.515114234Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-06-19T21:58:37.364607507Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.6",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-19T22:01:16.249369267Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'c96c5ccc7455638ae1a8b7498a030fe653731c8391c5f8e79590bce72f92b4ca *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-06-19T22:01:18.838174759Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-19T22:01:19.257123977Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-19T22:01:20.49745009Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-06-19T22:01:20.932984249Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6d626da635fcff8a8485691ff0156105a5fe75675870a779f0093a6aedce13f7",
                    "sha256:7a151b0f5372ba7688803bb1a0385aeaaa51dff30ded9d13bb0bd0253833077a",
                    "sha256:8ab68ccf1104e218ce48cf2fe4058a7f3d88d4cfb0a5c6500a59aadb616bd88c",
                    "sha256:7785fd04088490a16a4c137c5c17b870b4137d5d2a3b784bf0b24747286eff1b",
                    "sha256:5abafcee9375104c911d6976ab7d15ca983e9890c4eb5c8dbe8dbfc53a8f8cce"
                ]
            }
        },
        "1.12.6-stretch": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2dfe683d3f10149bf522c56fa15b458d6007cd487ad49414e870b6042a256a4e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "5d220c8624ee5abbc55a59d447cff99adf231ba37cf249da76006e376e7a0111",
            "container_config": {
                "Hostname": "5d220c8624ee",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2dfe683d3f10149bf522c56fa15b458d6007cd487ad49414e870b6042a256a4e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-06-13T00:23:08.619076483Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-05-08T08:48:25.711659074Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:153045f4fe6532d8c2ff273bb249a7a3a4cba913c26a4103ba5ddce1af02c1e5 in / "
                },
                {
                    "created": "2019-05-08T08:48:26.648199121Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-11T00:19:28.206830896Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-06-11T00:19:38.772747441Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-06-11T00:20:19.804365221Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-06-13T00:22:44.922415762Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-06-13T00:22:46.373618412Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.6",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-13T00:23:01.9363063Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='dbcf71a3c1ea53b8d54ef1b48c85a39a6c9a935d01fc8291ff2b92028e59913c' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='0708fbc125e7b782b44d450f3a3864859419b3691121ad401f1b9f00e488bddb' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='8f4e3909c74b4f3f3956715f32419b28d32a4ad57dbd79f74b7a8a920b21a1a3' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='7aaf25164a9ab5e1005c15535ed16ee122df50ac192c2d79b7940315c2b74f2c' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='67eacb68c1e251c1428e588776c5a02e287a508e3d44f940d31d8ff5d57f0eef' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='c14baa10b87a38e56f28a176fae8a839e9052b0e691bdc0461677d4bcedea9aa' ;; \t\t*) goRelArch='src'; goRelSha256='c96c5ccc7455638ae1a8b7498a030fe653731c8391c5f8e79590bce72f92b4ca'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-06-13T00:23:04.975865714Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-13T00:23:05.487117829Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-13T00:23:07.608830792Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-06-13T00:23:08.619076483Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ef9ee2bbae580cd8ce75e761a3d5fe29e3ff15b2585ff4ae69c9d8e56a1c8b9c",
                    "sha256:1c6f4c23073b93d98f3f98323200cb6e3584c44cf9d6f9dcb54688e3222da84d",
                    "sha256:d1b4bcba0655d4d941d2a257844ea16957332abbe8f3116cbf298161129907b4",
                    "sha256:54060bf84ed3993fad83787da15ee1d4ab9087e8fdb763f76eca7a61d4a16160",
                    "sha256:9bc9a4b4784a848a6f8bdc8efddb0d3350723a588a9f140708335fc662485bd5",
                    "sha256:696f52c355468774e9056e9b38fa1d2842eebff0244cf487524b50e2571aa519",
                    "sha256:21c0c3d693a77c36be8f216ab0faffd3b44a1d7b03d845561e2445516f13528c"
                ]
            }
        },
        "1.12.7-alpine": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9d4de5d490df2824779fb7b7b2400fe60b95aabf6a6b9edfd701b1adc580b4c8",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "56208523a20c26bc84eebcf7b1f44dc12ae7ca1d98d107248f1d2469dda69495",
            "container_config": {
                "Hostname": "56208523a20c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9d4de5d490df2824779fb7b7b2400fe60b95aabf6a6b9edfd701b1adc580b4c8",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-07-12T15:15:14.189050355Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-07-11T21:39:41.140831628Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5fcefa5daca822ead00a758f408db50619f81063a033290b7f31d5ec5634f6ba in / "
                },
                {
                    "created": "2019-07-11T21:39:41.588669567Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-11T21:57:41.792763712Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-07-11T21:57:43.259428137Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-07-12T15:11:33.23412316Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.7",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-12T15:15:05.904807026Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '95e8447d6f04b8d6a62de1726defbb20ab203208ee167ed15f83d7978ce43b13 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-07-12T15:15:10.470153682Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-12T15:15:11.123078805Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-12T15:15:13.343357316Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-07-12T15:15:14.189050355Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d01207b1564878bf27a284ccb2e59ba4c847e876449d072e96d5ea141ded8d2d",
                    "sha256:bbe3bd4e6792826fb7828e46ca42d2a5e086c53c8fceca7c2cafe9b3445b45ce",
                    "sha256:5aa843a0e7ee983c43f432458cb1a9355fde32b07f0d7e8acac03558336b13b2",
                    "sha256:5dabe9f11ae146071c4e6a9bd31a571ce36286ce30612ff8e759a5b094ecec24",
                    "sha256:4daa38afa623c4aae60958f5ce0ece188db308ea0be292a328a7c69081b167cc"
                ]
            }
        },
        "1.12.7-alpine3.10": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9d4de5d490df2824779fb7b7b2400fe60b95aabf6a6b9edfd701b1adc580b4c8",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "56208523a20c26bc84eebcf7b1f44dc12ae7ca1d98d107248f1d2469dda69495",
            "container_config": {
                "Hostname": "56208523a20c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9d4de5d490df2824779fb7b7b2400fe60b95aabf6a6b9edfd701b1adc580b4c8",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-07-12T15:15:14.189050355Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-07-11T21:39:41.140831628Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5fcefa5daca822ead00a758f408db50619f81063a033290b7f31d5ec5634f6ba in / "
                },
                {
                    "created": "2019-07-11T21:39:41.588669567Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-11T21:57:41.792763712Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-07-11T21:57:43.259428137Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-07-12T15:11:33.23412316Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.7",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-12T15:15:05.904807026Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '95e8447d6f04b8d6a62de1726defbb20ab203208ee167ed15f83d7978ce43b13 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-07-12T15:15:10.470153682Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-12T15:15:11.123078805Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-12T15:15:13.343357316Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-07-12T15:15:14.189050355Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d01207b1564878bf27a284ccb2e59ba4c847e876449d072e96d5ea141ded8d2d",
                    "sha256:bbe3bd4e6792826fb7828e46ca42d2a5e086c53c8fceca7c2cafe9b3445b45ce",
                    "sha256:5aa843a0e7ee983c43f432458cb1a9355fde32b07f0d7e8acac03558336b13b2",
                    "sha256:5dabe9f11ae146071c4e6a9bd31a571ce36286ce30612ff8e759a5b094ecec24",
                    "sha256:4daa38afa623c4aae60958f5ce0ece188db308ea0be292a328a7c69081b167cc"
                ]
            }
        },
        "1.12.7-alpine3.9": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:75ecda8051b91717fb8c1a4905a4acbc322bfb1d47c11fbd82c7c23309484dc1",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f109a4ae61928a19d0ceebc72e6cdd6cd424389009e2f7471cb3efc0e77af84b",
            "container_config": {
                "Hostname": "f109a4ae6192",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:75ecda8051b91717fb8c1a4905a4acbc322bfb1d47c11fbd82c7c23309484dc1",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-07-09T00:45:30.532922425Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-06-19T20:39:47.282820492Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:66f49017dd7ba295602526dbf210046e47fd097298c17a3f268a47487b5b6379 in / "
                },
                {
                    "created": "2019-06-19T20:39:47.636619987Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-19T20:56:05.137314338Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-06-19T20:56:06.515114234Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-07-09T00:42:57.68920443Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.7",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-09T00:45:25.588550224Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '95e8447d6f04b8d6a62de1726defbb20ab203208ee167ed15f83d7978ce43b13 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-07-09T00:45:28.285220703Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-09T00:45:28.69301469Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-09T00:45:30.093416696Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-07-09T00:45:30.532922425Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6d626da635fcff8a8485691ff0156105a5fe75675870a779f0093a6aedce13f7",
                    "sha256:7a151b0f5372ba7688803bb1a0385aeaaa51dff30ded9d13bb0bd0253833077a",
                    "sha256:8ab68ccf1104e218ce48cf2fe4058a7f3d88d4cfb0a5c6500a59aadb616bd88c",
                    "sha256:9058038a05fb8af564637390652282376995829c2c34b9de912160208de8af60",
                    "sha256:4d90e9b6b19b55cc000742f9c102eb3148fafe996fd6cce580a5489c6224a69d"
                ]
            }
        },
        "1.12.7-buster": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7cae31d3015e7fe2d9c8e4621c98b99da5e90490988787253ef87d026703587b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "8a96130744d57097acb07b2cc9a975a522c89ed194c8400cf6c48e481186c7af",
            "container_config": {
                "Hostname": "8a96130744d5",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7cae31d3015e7fe2d9c8e4621c98b99da5e90490988787253ef87d026703587b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-07-20T01:40:09.112437157Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-07-09T21:44:04.817026736Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fed1da39b91cd72442176aeb0884ba1eceb64a664c51afe6524993fb3cd01a86 in / "
                },
                {
                    "created": "2019-07-09T21:44:06.094463178Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-09T22:29:30.688174661Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-07-09T22:29:42.976341806Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-07-09T22:30:21.188096988Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-07-10T05:08:01.024843975Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-07-20T01:39:49.436791795Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.7",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-20T01:40:05.064237919Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='66d83bfb5a9ede000e33c6579a91a29e6b101829ad41fffb5c5bb6c900e109d9' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='48edbe936e9eb74f259bfc4b621fafca4d4ec43156b4ee7bd0d979f257dcd60a' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='4da1f7198a8fa0c4067852656b6c10153a4eca5a26aca28ef02ae9f4a7939ba5' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='ae2424b7ff557a708be12d3141f25b645966489ca49af1ad10b4fbe4c97d4c41' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='8eda20600d90247efbfa70d116d80056e11192d62592240975b2a8c53caa5bf3' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='3374ac3d646555e50be790091b51849319cfcb176904048458c7f4252337fce8' ;; \t\t*) goRelArch='src'; goRelSha256='95e8447d6f04b8d6a62de1726defbb20ab203208ee167ed15f83d7978ce43b13'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-07-20T01:40:07.212878933Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-20T01:40:07.516572667Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-20T01:40:08.745174473Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-07-20T01:40:09.112437157Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:70de00010c7afc5feacb1a841f1cd88f59df2773eeeb889463890fcead9d440c",
                    "sha256:dbf18f403098623aa589908902a71d8e98f307525003e958c1b8d53e4591a875",
                    "sha256:f2db58a2b685fcf0f69ff7bc2d667a6df33620643e42e0a82b4b099e6671bd5a",
                    "sha256:e842b38ab00f82381aee6a1a773593b69f7c3232976ee9091725e893d8773341",
                    "sha256:3f6e08648d5cc98ccd5afc7ff83447f54fd592bfaf45a817e2fc1897e50c7f06",
                    "sha256:cb9ee62f6621812ce1b54b4afa8d80ef2cb4e7f7bfebedca73b3cd18a69459cc",
                    "sha256:e6908be2c41104b67108e7da122d5b56b065d6fbad88d67bf8ca7beb5ed55acd"
                ]
            }
        },
        "1.12.7-stretch": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:492d9ac88fb7ddd15ffb26c8c38db0b3dd9a63333fe946a46d08417db7e0a748",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f86467fd2400969b13e92a36044d113c3796f746421b2308c68bf020f540c12e",
            "container_config": {
                "Hostname": "f86467fd2400",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:492d9ac88fb7ddd15ffb26c8c38db0b3dd9a63333fe946a46d08417db7e0a748",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-07-10T05:09:20.816666365Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-07-09T21:46:11.825732886Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4ad0e90fb81389a733d6948b0f068616b600a1be277ed228ace6196f667b0ead in / "
                },
                {
                    "created": "2019-07-09T21:46:12.932621419Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-09T22:36:53.463620837Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-07-09T22:37:03.901194916Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-07-09T22:37:42.349591221Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-07-10T05:08:55.124068575Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-07-10T05:08:56.460989547Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.7",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-10T05:09:13.8563777Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='66d83bfb5a9ede000e33c6579a91a29e6b101829ad41fffb5c5bb6c900e109d9' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='48edbe936e9eb74f259bfc4b621fafca4d4ec43156b4ee7bd0d979f257dcd60a' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='4da1f7198a8fa0c4067852656b6c10153a4eca5a26aca28ef02ae9f4a7939ba5' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='ae2424b7ff557a708be12d3141f25b645966489ca49af1ad10b4fbe4c97d4c41' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='8eda20600d90247efbfa70d116d80056e11192d62592240975b2a8c53caa5bf3' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='3374ac3d646555e50be790091b51849319cfcb176904048458c7f4252337fce8' ;; \t\t*) goRelArch='src'; goRelSha256='95e8447d6f04b8d6a62de1726defbb20ab203208ee167ed15f83d7978ce43b13'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-07-10T05:09:17.510514299Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-10T05:09:18.002306909Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-10T05:09:20.183456172Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-07-10T05:09:20.816666365Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9f9478778cf5398c5d114c37b150805346688e5d0cbcdb72a5082f36b060919d",
                    "sha256:e3fb8318971aa03027eb9cf7c0e45f5be2c8cb405d95f60a062aa7886590de77",
                    "sha256:52d2e6951bb8ea70bcea21eda19374da738fc57474671202cbbf7cee5258fcad",
                    "sha256:09c75e967e1a9c397d75ff52fb88dd42a92f9f7c107e0ec1d1133e94282cc94b",
                    "sha256:15e820bac37ff3441d032990f5a69de8d03be286af65308c4de305a02ccb8d0f",
                    "sha256:c3dccc2efa329020a63f04e36e395d9975f303cd5a58c8764bddc3515f40cf60",
                    "sha256:a0786bf187287dba950f2ae78b9bb29d73f5e96387970ebedd1fa0ba05f4c0cc"
                ]
            }
        },
        "1.12.8-alpine": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a4a3d88703ded01de1e3816b50abc406d0a308676c9920b035d6ff33984c2a15",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "1de49ca8c701b2587f064de6bef6ea8b40295af0cf13b6c7165ffe1d37fba755",
            "container_config": {
                "Hostname": "1de49ca8c701",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a4a3d88703ded01de1e3816b50abc406d0a308676c9920b035d6ff33984c2a15",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-13T22:34:09.332975228Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-07-11T21:39:41.140831628Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5fcefa5daca822ead00a758f408db50619f81063a033290b7f31d5ec5634f6ba in / "
                },
                {
                    "created": "2019-07-11T21:39:41.588669567Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-11T21:57:41.792763712Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-07-11T21:57:43.259428137Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-08-13T22:32:02.508975652Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.8",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-13T22:34:03.039227374Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '11ad2e2e31ff63fcf8a2bdffbe9bfa2e1845653358daed593c8c2d03453c9898 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-13T22:34:06.51862927Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-13T22:34:06.970019345Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-13T22:34:08.801591885Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-13T22:34:09.332975228Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d01207b1564878bf27a284ccb2e59ba4c847e876449d072e96d5ea141ded8d2d",
                    "sha256:bbe3bd4e6792826fb7828e46ca42d2a5e086c53c8fceca7c2cafe9b3445b45ce",
                    "sha256:5aa843a0e7ee983c43f432458cb1a9355fde32b07f0d7e8acac03558336b13b2",
                    "sha256:d97fde35f15b9414c41c54d58bf4455707969e9114114f6dfda76a958bce1381",
                    "sha256:b5708235ea07a9d4f5307bfe5ee7ea19b06e4c7f0a5574411288762cfbf474e5"
                ]
            }
        },
        "1.12.8-alpine3.10": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a4a3d88703ded01de1e3816b50abc406d0a308676c9920b035d6ff33984c2a15",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "1de49ca8c701b2587f064de6bef6ea8b40295af0cf13b6c7165ffe1d37fba755",
            "container_config": {
                "Hostname": "1de49ca8c701",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a4a3d88703ded01de1e3816b50abc406d0a308676c9920b035d6ff33984c2a15",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-13T22:34:09.332975228Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-07-11T21:39:41.140831628Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5fcefa5daca822ead00a758f408db50619f81063a033290b7f31d5ec5634f6ba in / "
                },
                {
                    "created": "2019-07-11T21:39:41.588669567Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-11T21:57:41.792763712Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-07-11T21:57:43.259428137Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-08-13T22:32:02.508975652Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.8",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-13T22:34:03.039227374Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '11ad2e2e31ff63fcf8a2bdffbe9bfa2e1845653358daed593c8c2d03453c9898 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-13T22:34:06.51862927Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-13T22:34:06.970019345Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-13T22:34:08.801591885Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-13T22:34:09.332975228Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d01207b1564878bf27a284ccb2e59ba4c847e876449d072e96d5ea141ded8d2d",
                    "sha256:bbe3bd4e6792826fb7828e46ca42d2a5e086c53c8fceca7c2cafe9b3445b45ce",
                    "sha256:5aa843a0e7ee983c43f432458cb1a9355fde32b07f0d7e8acac03558336b13b2",
                    "sha256:d97fde35f15b9414c41c54d58bf4455707969e9114114f6dfda76a958bce1381",
                    "sha256:b5708235ea07a9d4f5307bfe5ee7ea19b06e4c7f0a5574411288762cfbf474e5"
                ]
            }
        },
        "1.12.8-alpine3.9": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7a160d68ca0dac62961570387e4df7a20fa88c4faea833fbce552d9cbf328fdf",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "894dc4b6efd4227535481d39d8ec175f6e708412debfafce2f9ad6bece8fd322",
            "container_config": {
                "Hostname": "894dc4b6efd4",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7a160d68ca0dac62961570387e4df7a20fa88c4faea833fbce552d9cbf328fdf",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-13T22:36:25.456566588Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-06-19T20:39:47.282820492Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:66f49017dd7ba295602526dbf210046e47fd097298c17a3f268a47487b5b6379 in / "
                },
                {
                    "created": "2019-06-19T20:39:47.636619987Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-19T20:56:05.137314338Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-06-19T20:56:06.515114234Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-08-13T22:34:20.135946014Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.8",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-13T22:36:20.469143392Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '11ad2e2e31ff63fcf8a2bdffbe9bfa2e1845653358daed593c8c2d03453c9898 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-13T22:36:22.790358627Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-13T22:36:23.149036116Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-13T22:36:24.824561061Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-13T22:36:25.456566588Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6d626da635fcff8a8485691ff0156105a5fe75675870a779f0093a6aedce13f7",
                    "sha256:7a151b0f5372ba7688803bb1a0385aeaaa51dff30ded9d13bb0bd0253833077a",
                    "sha256:8ab68ccf1104e218ce48cf2fe4058a7f3d88d4cfb0a5c6500a59aadb616bd88c",
                    "sha256:10430a63de858a57fc1d4d59c6b4a78373c52fa2d703e3e858d00143de7070e8",
                    "sha256:44a0c543156e4f8ad9a8b33ef6e8b70655ff02ae9494bffeab6a2a5b0307ea45"
                ]
            }
        },
        "1.12.8-buster": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:08c1aeea91649afef03677c4de9257b5283801af6243c4f85230c6a65851823d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "a038dcc87c135c04c10b24f1e0f2be147ca14d7eaa7dd649f88666d085c0522e",
            "container_config": {
                "Hostname": "a038dcc87c13",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:08c1aeea91649afef03677c4de9257b5283801af6243c4f85230c6a65851823d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-14T21:05:43.53683401Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-14T00:40:44.249210056Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f63b119fbe465bf5c6ca8b15f40bc0103b3e00d68628a80d1025b38e536a46b7 in / "
                },
                {
                    "created": "2019-08-14T00:40:45.352575059Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T02:30:03.501985656Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T02:30:14.635808353Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-08-14T02:30:48.715930266Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T21:04:50.976650827Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T21:05:23.545374475Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.8",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T21:05:39.434883481Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='bd26cd4962a362ed3c11835bca32c2e131c2ae050304f2c4df9fa6ded8db85d2' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='b6b057e7b5c740894132ce30e70503d7d36988dcd61a00f0865d1e7d6dcc74ca' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='15e9e0b5b414d1a0322896368c0050af6ab1cd82d050e93f8eceb38ef2626652' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='be164c4e04205c4fc713e81594bc2fdd4c94dff3d567ec8e0072223dd0778287' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='24a65f8a702ade1854f86ddf96eda554a8abd89c8a54ddc32788769419e90232' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='db78fc8f9610cb27ac35aab55cb11698f4daa2101acdf46f0ba64e1db16323e5' ;; \t\t*) goRelArch='src'; goRelSha256='11ad2e2e31ff63fcf8a2bdffbe9bfa2e1845653358daed593c8c2d03453c9898'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-14T21:05:41.404777812Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T21:05:41.8211514Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T21:05:43.10103115Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-14T21:05:43.53683401Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0a3fa153264b693d6d10457dc58b433dca1828a88c52750c2227f5926d15d737",
                    "sha256:f54065b956ab8a66f19f7e4e8ecd9104fa17c2e2580df52324c517cd33136df1",
                    "sha256:008074a8f55cf42e163cbb663d9647c6c03616ed7793f9ebd08602f01fa71a29",
                    "sha256:c1e303518b8e8e76f012f7b30cec7577595ef108919b05d67a6b891853ea21f9",
                    "sha256:a068c344f31fa4e9303790b3f06c8920f05871dc7df660370ac2cd0b318db5a3",
                    "sha256:09d027815b360769a61982ce42132aef9d3f5fc935e9c3467d974126e6e8ba20",
                    "sha256:c273c8a50bb01aa5c7a714f52ad01fa381d8b095f779dbfa612493a37d105781"
                ]
            }
        },
        "1.12.8-stretch": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2d40ac58e57dc0f6d94829f89b855323b3303a99911af4eb5c4773eb14ca8210",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "b435704c4535b1efe26fb1352a559840a5970b165b6c12e4553a140c7ded6148",
            "container_config": {
                "Hostname": "b435704c4535",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2d40ac58e57dc0f6d94829f89b855323b3303a99911af4eb5c4773eb14ca8210",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-14T21:06:24.765124402Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-14T00:42:54.654151163Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:705744f1d46153f7b1e4e803e92a622e76091e0c7812e893ccadf4c3fa3f7582 in / "
                },
                {
                    "created": "2019-08-14T00:42:55.660620236Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T02:36:32.143422133Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T02:36:41.125736825Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-08-14T02:37:15.501343277Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T21:06:06.757228386Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T21:06:07.740760455Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.8",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T21:06:20.525034821Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='bd26cd4962a362ed3c11835bca32c2e131c2ae050304f2c4df9fa6ded8db85d2' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='b6b057e7b5c740894132ce30e70503d7d36988dcd61a00f0865d1e7d6dcc74ca' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='15e9e0b5b414d1a0322896368c0050af6ab1cd82d050e93f8eceb38ef2626652' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='be164c4e04205c4fc713e81594bc2fdd4c94dff3d567ec8e0072223dd0778287' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='24a65f8a702ade1854f86ddf96eda554a8abd89c8a54ddc32788769419e90232' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='db78fc8f9610cb27ac35aab55cb11698f4daa2101acdf46f0ba64e1db16323e5' ;; \t\t*) goRelArch='src'; goRelSha256='11ad2e2e31ff63fcf8a2bdffbe9bfa2e1845653358daed593c8c2d03453c9898'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-14T21:06:22.801057479Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T21:06:23.121052992Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T21:06:24.381232008Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-14T21:06:24.765124402Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6041800a8d9dd17ab84273c9e9c4655f98e80b0fdced98bc32f88ca2f13172e5",
                    "sha256:dced789b8bda47eb3ae32f98cd396f9336aee529a7866b5c77393ac799c1fd0a",
                    "sha256:67ec7ff41bc528f6b991d15c3f5c6d5ffb81d5ee231e6dd4f124c6d14fb71e37",
                    "sha256:03a48aa962bc7c95d3d16cbe9c14fc7d040bfc094a5c4486525d5a9614e0a043",
                    "sha256:25c6cc004c6cec11647130fdb25fcd3a6d90b436a89c66b6d36a35a74527eff6",
                    "sha256:a6a98a61fbc8af26b32d9be9b83dc16d6f89dfc6a5e0cd31cddc7a733bca9515",
                    "sha256:21ad2c30bc3879613a8b18c5075bd9983f2e02bf83301920f401d089592de0a0"
                ]
            }
        },
        "1.12.9-alpine": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:bf2e9af94919e8585c97e9b29078e553fe61eb71ca34d41101b76960d9c4df26",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f0002e16ff1a00ddeec401825a42922c76752d80d35723277d537d022f4f2017",
            "container_config": {
                "Hostname": "f0002e16ff1a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:bf2e9af94919e8585c97e9b29078e553fe61eb71ca34d41101b76960d9c4df26",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-20T21:00:49.370133847Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-20T20:39:38.405945347Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:34737804ba78554795d5bcc75621595f8cc3d5b5887887d34e0e021b78e330b7 in / "
                },
                {
                    "created": "2019-08-20T20:39:38.821174355Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T20:56:21.289256818Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-08-20T20:56:22.869691367Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-08-20T20:58:45.978632896Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.9",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:00:44.553424406Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'ab0e56ed9c4732a653ed22e232652709afbf573e710f56a07f7fdeca578d62fc *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-20T21:00:46.714241819Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:00:47.113092968Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:00:48.862729295Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-20T21:00:49.370133847Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5e0d8111135538b8a86ce5fc969849efce16c455fd016bb3dc53131bcedc4da5",
                    "sha256:e3275698b6646fa0bbb59a0c5bcb22674d2098952d972968752905ca92f4c6c7",
                    "sha256:88ee3bd19f4a271e93edadba95c10387ef28c86ebb20c2b2373dad5741bffb77",
                    "sha256:86a38b898bb9921f022a2c09ac433cd6de6e7566bfda70f43145146c3fbd0ae2",
                    "sha256:6c2e0d4e9d2d6e72a262c6e54afb10de0cd6890c8d98bb43ab4ee942bb271c88"
                ]
            }
        },
        "1.12.9-alpine3.10": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:bf2e9af94919e8585c97e9b29078e553fe61eb71ca34d41101b76960d9c4df26",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f0002e16ff1a00ddeec401825a42922c76752d80d35723277d537d022f4f2017",
            "container_config": {
                "Hostname": "f0002e16ff1a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:bf2e9af94919e8585c97e9b29078e553fe61eb71ca34d41101b76960d9c4df26",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-20T21:00:49.370133847Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-20T20:39:38.405945347Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:34737804ba78554795d5bcc75621595f8cc3d5b5887887d34e0e021b78e330b7 in / "
                },
                {
                    "created": "2019-08-20T20:39:38.821174355Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T20:56:21.289256818Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-08-20T20:56:22.869691367Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-08-20T20:58:45.978632896Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.9",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:00:44.553424406Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'ab0e56ed9c4732a653ed22e232652709afbf573e710f56a07f7fdeca578d62fc *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-20T21:00:46.714241819Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:00:47.113092968Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:00:48.862729295Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-20T21:00:49.370133847Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5e0d8111135538b8a86ce5fc969849efce16c455fd016bb3dc53131bcedc4da5",
                    "sha256:e3275698b6646fa0bbb59a0c5bcb22674d2098952d972968752905ca92f4c6c7",
                    "sha256:88ee3bd19f4a271e93edadba95c10387ef28c86ebb20c2b2373dad5741bffb77",
                    "sha256:86a38b898bb9921f022a2c09ac433cd6de6e7566bfda70f43145146c3fbd0ae2",
                    "sha256:6c2e0d4e9d2d6e72a262c6e54afb10de0cd6890c8d98bb43ab4ee942bb271c88"
                ]
            }
        },
        "1.12.9-alpine3.9": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2485ef2582b0c34040472dc81dd967c68001d305e6ddc91813fe3dbd6ad4ab78",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "6dadcaa30e1740808a4e0337c7f32e1b203c5ef894ba266ea34b20e2ad67c4dd",
            "container_config": {
                "Hostname": "6dadcaa30e17",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2485ef2582b0c34040472dc81dd967c68001d305e6ddc91813fe3dbd6ad4ab78",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-16T20:45:41.020590567Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-06-19T20:39:47.282820492Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:66f49017dd7ba295602526dbf210046e47fd097298c17a3f268a47487b5b6379 in / "
                },
                {
                    "created": "2019-06-19T20:39:47.636619987Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-19T20:56:05.137314338Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-06-19T20:56:06.515114234Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-08-16T20:43:22.308277884Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.9",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-16T20:45:36.960861618Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'ab0e56ed9c4732a653ed22e232652709afbf573e710f56a07f7fdeca578d62fc *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-16T20:45:39.096780983Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-16T20:45:39.448387478Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-16T20:45:40.661081317Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-16T20:45:41.020590567Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6d626da635fcff8a8485691ff0156105a5fe75675870a779f0093a6aedce13f7",
                    "sha256:7a151b0f5372ba7688803bb1a0385aeaaa51dff30ded9d13bb0bd0253833077a",
                    "sha256:8ab68ccf1104e218ce48cf2fe4058a7f3d88d4cfb0a5c6500a59aadb616bd88c",
                    "sha256:d082d2cf71f4e7e1614f54f75d76e318f2ad9313f71e0b5b094b04a668f5a7dd",
                    "sha256:5b1eab7c0f1dfdb3c530bd174a10d2dfe3d74c4b512161a684e90c592c0c767d"
                ]
            }
        },
        "1.12.9-buster": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:4f189bb79b318722b92a8c1033d7b65730e08b95d9af7b5af7612675d8bb4a3e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "44e0f284f744974c76748c2afe84fd6be36b4e78c58918cc28b682e68246ed48",
            "container_config": {
                "Hostname": "44e0f284f744",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:4f189bb79b318722b92a8c1033d7b65730e08b95d9af7b5af7612675d8bb4a3e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-09-12T21:34:30.662256129Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-09-11T22:40:29.620262031Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:616e45df7a9383ad8cb38a4350f146077c9ebefb211c02174c7e9b1c7d141040 in / "
                },
                {
                    "created": "2019-09-11T22:40:31.90949299Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-12T00:39:27.744269847Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-09-12T00:39:41.997036766Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-09-12T00:40:16.074897181Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-09-12T21:32:50.182481037Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-09-12T21:34:09.141467188Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.9",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-12T21:34:26.626842544Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='ac2a6efcc1f5ec8bdc0db0a988bb1d301d64b6d61b7e8d9e42f662fbb75a2b9b' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='0d9be0efa9cd296d6f8ab47de45356ba45cb82102bc5df2614f7af52e3fb5842' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='3606dc6ce8b4a5faad81d7365714a86b3162df041a32f44568418c9efbd7f646' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='c40824a3e6c948b8ecad8fe9095b620c488b3d8d6694bdd48084a4798db4799a' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='2e74c071c6a68446c9b00c1717ceeb59a826025b9202b3b0efed4f128e868b30' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='2aac6de8e83b253b8413781a2f9a0733384d859cff1b89a2ad0d13814541c336' ;; \t\t*) goRelArch='src'; goRelSha256='ab0e56ed9c4732a653ed22e232652709afbf573e710f56a07f7fdeca578d62fc'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-09-12T21:34:28.126177697Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-12T21:34:28.573872201Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-12T21:34:30.154019038Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-09-12T21:34:30.662256129Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:934b023166db55cf38d7566edd4ac7f8c2abcd3fe93b16fd8fba09ebb638742e",
                    "sha256:d6d2d0048f55e477c6a258194d385dd7897c45862883a1283a1940e8a096972e",
                    "sha256:fea06f0027a7ca4add434f46541d7726a584b85646e81e53906ac79afc1786d3",
                    "sha256:d036b0571cbfc773699c07339a73b752de6ab2517deec30611c93c13629183d0",
                    "sha256:44c34c78c6a0de84909b89417883665ad5cdce00085120f58251c5da833a8bcd",
                    "sha256:6a59ffde89508ca7ce6668f3710dabc56218a4d378a3e3b2094a7c6990b93241",
                    "sha256:dc4088c6769a4b9d6ae2959b56a0eb18cc103054f12812a9eb4a3b24dd667b34"
                ]
            }
        },
        "1.12.9-stretch": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e780442effe78bdd840f0572178e7b191f6591ba21d1264d0dba9de7cef2992b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "a0737ab4daf604060c82a2404e7c42756130d5833443b86ca4f0e1b366fe27af",
            "container_config": {
                "Hostname": "a0737ab4daf6",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e780442effe78bdd840f0572178e7b191f6591ba21d1264d0dba9de7cef2992b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-09-12T21:34:58.881259899Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-09-11T22:43:01.797512841Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:caf4d612b52451d22260b0d5cffb0fbb4b73aa3841a8a622c9a87923dee2f910 in / "
                },
                {
                    "created": "2019-09-11T22:43:03.870050897Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-12T00:46:51.291216368Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-09-12T00:47:02.13693739Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-09-12T00:47:45.124146109Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-09-12T21:33:34.251327452Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-09-12T21:34:39.497267887Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.9",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-12T21:34:53.269096811Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='ac2a6efcc1f5ec8bdc0db0a988bb1d301d64b6d61b7e8d9e42f662fbb75a2b9b' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='0d9be0efa9cd296d6f8ab47de45356ba45cb82102bc5df2614f7af52e3fb5842' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='3606dc6ce8b4a5faad81d7365714a86b3162df041a32f44568418c9efbd7f646' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='c40824a3e6c948b8ecad8fe9095b620c488b3d8d6694bdd48084a4798db4799a' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='2e74c071c6a68446c9b00c1717ceeb59a826025b9202b3b0efed4f128e868b30' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='2aac6de8e83b253b8413781a2f9a0733384d859cff1b89a2ad0d13814541c336' ;; \t\t*) goRelArch='src'; goRelSha256='ab0e56ed9c4732a653ed22e232652709afbf573e710f56a07f7fdeca578d62fc'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-09-12T21:34:55.586906288Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-12T21:34:56.172859868Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-12T21:34:58.274558141Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-09-12T21:34:58.881259899Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cb3ae7ea1af65e7b5329dbead3f108d8150dadee3b38abf0ce6544d806e81021",
                    "sha256:ac252c443492958adbd71b3e17a689f98964eb7a8a4ef8f78985b175c38493bb",
                    "sha256:08f36f226ccca40acf68459776d1a28de18c42a524a3833e5a89432a89d8cda1",
                    "sha256:2ad3df54bc03c5689ede6a3747bf505359e97c13642f2d09510b298eb0acac10",
                    "sha256:0567c2fa6008380ab72deca273abaec2870ac969354d3b0e3208c6f75f652c21",
                    "sha256:3a9824f3b231e450a93b53bdac669a47eaf499e46a066b0b5c4e73aa5302bd18",
                    "sha256:24aef3b1810e4cc221ede18cfffe10f0c3cff8ee39989d9d03a498ae02aeac19"
                ]
            }
        },
        "1.12beta1-alpine": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:5d995c301991e06cbd7239956338b3f036b995caf5421196b064b88a705fc786",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "625cf670ce0366a4d1aa8a7a31b1a211d61092e67f88bd531c0c3a8fafd5f852",
            "container_config": {
                "Hostname": "625cf670ce03",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:5d995c301991e06cbd7239956338b3f036b995caf5421196b064b88a705fc786",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2018-12-21T10:10:57.637345996Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2018-12-21T09:43:06.705630029Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:79419748674899ac7d5d699fe62f837c69d04af3ceaabbb7951c35c2f0ff46fa in / "
                },
                {
                    "created": "2018-12-21T09:43:07.198401212Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a10c133d8d5e9af3a9a1610709d3ed2f85b1507f1ba5745ac12bb495974e3fe6 in /etc/localtime "
                },
                {
                    "created": "2018-12-21T09:43:07.722553865Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T10:00:50.393353587Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-12-21T10:00:52.818317624Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-12-21T10:07:28.96544449Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12beta1",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T10:10:53.34809697Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '639585de6bfb67865a85cd750d41ecc39968039dafb9d1fdb15361eb118d150a *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-12-21T10:10:54.731427607Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T10:10:55.309568017Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T10:10:57.02596966Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-12-21T10:10:57.637345996Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:92d7b4d0b33cc1213ee394fabb26922447135080a3b7bd326e5bb7453e06be32",
                    "sha256:82fe62b38ba2a9028a57bee2d8e1b855733943e5491ad946e37e406208ff6e8b",
                    "sha256:0db26aa2ab49f54f8b357b9d4f8188543a065211dac4752eb7d9b65da88a52cf",
                    "sha256:6897c234601851e40044ce7b1194fc52052891863645562058c775deb9dc1342",
                    "sha256:c5651e48ae60d0724c9e5a6f7e07d9aafdf32ac7d982e079d7eba68ab6ff8535",
                    "sha256:5e512e295f5f1da3a83f0ad2a8b1ac1ceb9fe5d40d67701c7e7c8054fc0ac93f"
                ]
            }
        },
        "1.12beta1-alpine3.8": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:5d995c301991e06cbd7239956338b3f036b995caf5421196b064b88a705fc786",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "625cf670ce0366a4d1aa8a7a31b1a211d61092e67f88bd531c0c3a8fafd5f852",
            "container_config": {
                "Hostname": "625cf670ce03",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:5d995c301991e06cbd7239956338b3f036b995caf5421196b064b88a705fc786",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2018-12-21T10:10:57.637345996Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2018-12-21T09:43:06.705630029Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:79419748674899ac7d5d699fe62f837c69d04af3ceaabbb7951c35c2f0ff46fa in / "
                },
                {
                    "created": "2018-12-21T09:43:07.198401212Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a10c133d8d5e9af3a9a1610709d3ed2f85b1507f1ba5745ac12bb495974e3fe6 in /etc/localtime "
                },
                {
                    "created": "2018-12-21T09:43:07.722553865Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T10:00:50.393353587Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-12-21T10:00:52.818317624Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-12-21T10:07:28.96544449Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12beta1",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T10:10:53.34809697Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '639585de6bfb67865a85cd750d41ecc39968039dafb9d1fdb15361eb118d150a *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-12-21T10:10:54.731427607Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T10:10:55.309568017Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T10:10:57.02596966Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-12-21T10:10:57.637345996Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:92d7b4d0b33cc1213ee394fabb26922447135080a3b7bd326e5bb7453e06be32",
                    "sha256:82fe62b38ba2a9028a57bee2d8e1b855733943e5491ad946e37e406208ff6e8b",
                    "sha256:0db26aa2ab49f54f8b357b9d4f8188543a065211dac4752eb7d9b65da88a52cf",
                    "sha256:6897c234601851e40044ce7b1194fc52052891863645562058c775deb9dc1342",
                    "sha256:c5651e48ae60d0724c9e5a6f7e07d9aafdf32ac7d982e079d7eba68ab6ff8535",
                    "sha256:5e512e295f5f1da3a83f0ad2a8b1ac1ceb9fe5d40d67701c7e7c8054fc0ac93f"
                ]
            }
        },
        "1.12beta1-stretch": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3612f656664c187724f5f1f0039f8a6a809146cb7a8969d0280f585fda92251c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "9098fd44f18c10f211a5fe469dba7921dc60ae2466e5cf758e53363331358fe7",
            "container_config": {
                "Hostname": "9098fd44f18c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3612f656664c187724f5f1f0039f8a6a809146cb7a8969d0280f585fda92251c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2018-12-30T01:41:19.181161633Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2018-12-29T10:08:10.656625229Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8238e4e08413d772a0383ef64eccc0448c682834c018a28e87a568a33b0da788 in / "
                },
                {
                    "created": "2018-12-29T10:08:11.85486118Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-29T12:10:28.859457803Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-12-29T12:11:00.592632628Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-12-29T12:13:11.487987513Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-12-30T01:40:43.643111942Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-12-30T01:40:44.459082673Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12beta1",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-30T01:41:09.972718594Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='65bfd4a99925f1f85d712f4c1109977aa24ee4c6e198162bf8e819fdde19e875' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='e0ba7091227b42e98a9ed83f52e3821f7b3b836a16a5815ccf237bcaa590083a' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='df79a288b2c569bd26e43ea3acc245b7eabae897b4783f7b4acffdd97ba0a01c' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='5c93266b9b9f6e4ac452517b073a54d2dbb4cbbae901bc7e2b5d34415adf658b' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='8ae18d580913cc4cb67cdac36c058aad279419640f469931e44d6b7f0bbd9062' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='c575e5835a0ed3b19040497e24f7de6913eb73a42983e828f5dc2af4c9fcecf7' ;; \t\t*) goRelArch='src'; goRelSha256='639585de6bfb67865a85cd750d41ecc39968039dafb9d1fdb15361eb118d150a'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-12-30T01:41:13.945145872Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-30T01:41:14.846403595Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-30T01:41:18.193860302Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-12-30T01:41:19.181161633Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4fd5e5ad4086643e0c20d9508f9a93baf11ea08c57e39a2f6ba271c2bb902fe7",
                    "sha256:4a6a662b6bf2804c6a45343dbe6639b40181bd8e8f29eced123cc3b00f9975d7",
                    "sha256:8128a2e67b6e808b4bec88efc39f8b723107cfed827bbdf8bf74470cfa1e5d23",
                    "sha256:52bfb6dc2c8285c3c5c90c6374a3fcec37841dbb95bd46e964cf31c305ae4ac5",
                    "sha256:25584c973c02628d8138f06ad546ff930638604aafaf5c06c53b387b09a48df5",
                    "sha256:ccc02039384395ab7b5dff11b5d99627ecba5c2e28498454fb4073c33a99858a",
                    "sha256:fd9083d3591781cbcb45375b5377b56b6aaf57cb584d0ad69143ce8920bb4d14"
                ]
            }
        },
        "1.12beta2-alpine": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12beta2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:dc38afe999232188d00153c4be0ab995f7373c30f2736139f4cdea8467d5246e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "2e2422a27d905092f5d9220684df02c01c64a489df979ca73cc9e3670afadc19",
            "container_config": {
                "Hostname": "2e2422a27d90",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12beta2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:dc38afe999232188d00153c4be0ab995f7373c30f2736139f4cdea8467d5246e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-02-06T10:39:25.243508657Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-01-31T09:40:55.59464559Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3c5f57c6644886bbb8164b9aa4cd60e233be7da48b7194a04963a8e7de058e28 in / "
                },
                {
                    "created": "2019-01-31T09:40:56.373934366Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a10c133d8d5e9af3a9a1610709d3ed2f85b1507f1ba5745ac12bb495974e3fe6 in /etc/localtime "
                },
                {
                    "created": "2019-01-31T09:40:57.414211885Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T10:35:48.859028851Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-02-06T10:35:53.718651346Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-02-06T10:35:55.441166049Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12beta2",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T10:39:14.585497082Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'fd3f4e1860ac59d647c22a2c1589fcf4a96c02bbbfef1ca1ea44bc25cf62a490 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-02-06T10:39:18.679346722Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T10:39:19.828069339Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T10:39:24.084368193Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-02-06T10:39:25.243508657Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b62d6d9a5cefd54dd8025cbfc842db54bbbc2268be8d05125c05ef82228da652",
                    "sha256:f8acf74b099c772d9f05156f67bc53953983b4f4edd19881dc2b138d1cfdb5dc",
                    "sha256:9079a9ec4fad7a526523322dad8473070caa3506e0da3d1de6796e849e7b2700",
                    "sha256:55321bf93b5623e0f3cfeb273381e036e21b0cf1873712feb570c153950a88a5",
                    "sha256:46c399bbb822e2596acb57b1ce6e4611f54a500eefeeeb02eb4a3f9a1bb13f9f",
                    "sha256:7265fa6bea23307c7fb648ce143ae894d248b91e58e03b1b13edd8e25cf09a79"
                ]
            }
        },
        "1.12beta2-alpine3.8": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12beta2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:0e7e553cf0a85a15c06cfa623196c3002cd31d0b688dcedd17fdb416f6ce7252",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "e01b35bcead1210258ccc9883d6246808be566783d1853aef4a5f25487502be7",
            "container_config": {
                "Hostname": "e01b35bcead1",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12beta2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:0e7e553cf0a85a15c06cfa623196c3002cd31d0b688dcedd17fdb416f6ce7252",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-01-11T09:48:20.481842974Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2018-12-21T09:43:06.705630029Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:79419748674899ac7d5d699fe62f837c69d04af3ceaabbb7951c35c2f0ff46fa in / "
                },
                {
                    "created": "2018-12-21T09:43:07.198401212Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a10c133d8d5e9af3a9a1610709d3ed2f85b1507f1ba5745ac12bb495974e3fe6 in /etc/localtime "
                },
                {
                    "created": "2018-12-21T09:43:07.722553865Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T10:00:50.393353587Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-12-21T10:00:52.818317624Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-01-11T09:44:50.314532659Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12beta2",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-11T09:48:14.139947115Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'fd3f4e1860ac59d647c22a2c1589fcf4a96c02bbbfef1ca1ea44bc25cf62a490 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-01-11T09:48:17.260594163Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-11T09:48:17.914212848Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-11T09:48:19.836392377Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-01-11T09:48:20.481842974Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:92d7b4d0b33cc1213ee394fabb26922447135080a3b7bd326e5bb7453e06be32",
                    "sha256:82fe62b38ba2a9028a57bee2d8e1b855733943e5491ad946e37e406208ff6e8b",
                    "sha256:0db26aa2ab49f54f8b357b9d4f8188543a065211dac4752eb7d9b65da88a52cf",
                    "sha256:6897c234601851e40044ce7b1194fc52052891863645562058c775deb9dc1342",
                    "sha256:9ec22827b4a9df0180d3d59b7788575a09cadc003277d38d6263e6e9d6ad1b39",
                    "sha256:5d5fe4801d26aaa73ce947a9b768d2f7785c2ca3fc103d306b44df4c034d71bd"
                ]
            }
        },
        "1.12beta2-alpine3.9": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12beta2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:dc38afe999232188d00153c4be0ab995f7373c30f2736139f4cdea8467d5246e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "2e2422a27d905092f5d9220684df02c01c64a489df979ca73cc9e3670afadc19",
            "container_config": {
                "Hostname": "2e2422a27d90",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12beta2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:dc38afe999232188d00153c4be0ab995f7373c30f2736139f4cdea8467d5246e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-02-06T10:39:25.243508657Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-01-31T09:40:55.59464559Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3c5f57c6644886bbb8164b9aa4cd60e233be7da48b7194a04963a8e7de058e28 in / "
                },
                {
                    "created": "2019-01-31T09:40:56.373934366Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a10c133d8d5e9af3a9a1610709d3ed2f85b1507f1ba5745ac12bb495974e3fe6 in /etc/localtime "
                },
                {
                    "created": "2019-01-31T09:40:57.414211885Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T10:35:48.859028851Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-02-06T10:35:53.718651346Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-02-06T10:35:55.441166049Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12beta2",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T10:39:14.585497082Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'fd3f4e1860ac59d647c22a2c1589fcf4a96c02bbbfef1ca1ea44bc25cf62a490 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-02-06T10:39:18.679346722Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T10:39:19.828069339Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T10:39:24.084368193Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-02-06T10:39:25.243508657Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b62d6d9a5cefd54dd8025cbfc842db54bbbc2268be8d05125c05ef82228da652",
                    "sha256:f8acf74b099c772d9f05156f67bc53953983b4f4edd19881dc2b138d1cfdb5dc",
                    "sha256:9079a9ec4fad7a526523322dad8473070caa3506e0da3d1de6796e849e7b2700",
                    "sha256:55321bf93b5623e0f3cfeb273381e036e21b0cf1873712feb570c153950a88a5",
                    "sha256:46c399bbb822e2596acb57b1ce6e4611f54a500eefeeeb02eb4a3f9a1bb13f9f",
                    "sha256:7265fa6bea23307c7fb648ce143ae894d248b91e58e03b1b13edd8e25cf09a79"
                ]
            }
        },
        "1.12beta2-stretch": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12beta2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e754f2bf8c0a1e736dd5d82f397ff3097c38f87402d2fb04fce031f79de454ec",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "c01cd2c4f4fd29b6f6a2e3020f21edf14d2a7df410e957e18af008df7efdf304",
            "container_config": {
                "Hostname": "c01cd2c4f4fd",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12beta2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e754f2bf8c0a1e736dd5d82f397ff3097c38f87402d2fb04fce031f79de454ec",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-02-07T04:06:36.5431862Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-02-06T10:08:56.448426246Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4c7b5bcb5c347fb36236917e364936a9762b8bd6e8585c33379120f01c3a8d85 in / "
                },
                {
                    "created": "2019-02-06T10:08:58.411455795Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T10:37:59.282799901Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-02-06T10:38:20.923306295Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-02-06T10:39:59.470164799Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-02-06T10:44:54.502187336Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-02-07T04:05:55.562767284Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12beta2",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-07T04:06:27.764418109Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='9e4884b46a72e0558187a8af6e8733e039432df1b755f14b361f18b63fa5a63e' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='d41674dda2e33a539929a980c7ba8d68c90c8aabcb138b65a2dc36704af02ace' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='77d80484e455ad65aa0778aa82391c02ded01a37ee65f7887167dc03a6ef3251' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='ffe0d1c92473b2fd653e399c1ddb11535b9666f22b6ae5653bd1fb4f84534c46' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='a1701e3c216c970a833248d6e5df5f2c27c6103e8e3bde34c5c3c25e839e87f9' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='bb4ea794a8fa459ad596c03b08fba9de647c62369c74f5daf21a6bae8c855b11' ;; \t\t*) goRelArch='src'; goRelSha256='fd3f4e1860ac59d647c22a2c1589fcf4a96c02bbbfef1ca1ea44bc25cf62a490'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-02-07T04:06:29.703960312Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-07T04:06:30.846427463Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-07T04:06:35.308099482Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-02-07T04:06:36.5431862Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3b1e812def9423169cf856a2785cf1c647d0b14e257f1d97d001f2eea597c8a9",
                    "sha256:944b169fa0fecd2d4b3b5dad05f280d7a9179485fe8c1839737c690e87fbc67b",
                    "sha256:692a708e68fbe95e5c9d80b2a5a3287fe3670dfcd31108ecf3621b4e758f3d4b",
                    "sha256:fbb13e302c5c808925f2c1f9c41c4cefeac1888499f44965cc340cc8c473b660",
                    "sha256:0cadb6f6c5d6ee70b9971ea95007e8da709427c29d8565ac23c12b8ed016dd3e",
                    "sha256:f3afa2d909ab85bc97f35a8142077b8189aa582d3ef66ff47533b452ea096f0a",
                    "sha256:0ae264420ea57b3aa76b5ae1140d1f06b8d28fd5e65d207cfd981be83ea1eeda"
                ]
            }
        },
        "1.12rc1-alpine": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9f7bbc641dd8ac450d68ef0a938bb10aad2a83ae2a566304abb242b137bd1667",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "ef2542e7bfa8b9544665158dc28367dbfe705736e9e90708ac1c425ccec8d3bd",
            "container_config": {
                "Hostname": "ef2542e7bfa8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9f7bbc641dd8ac450d68ef0a938bb10aad2a83ae2a566304abb242b137bd1667",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-02-13T09:53:15.287741919Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-01-31T09:40:55.59464559Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3c5f57c6644886bbb8164b9aa4cd60e233be7da48b7194a04963a8e7de058e28 in / "
                },
                {
                    "created": "2019-01-31T09:40:56.373934366Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a10c133d8d5e9af3a9a1610709d3ed2f85b1507f1ba5745ac12bb495974e3fe6 in /etc/localtime "
                },
                {
                    "created": "2019-01-31T09:40:57.414211885Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T10:35:48.859028851Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-02-06T10:35:53.718651346Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-02-13T09:50:07.293628129Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12rc1",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-13T09:53:11.029771295Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'ed1d4f8e8a33f0d4a59a2f642584c7c6375fce2f8a4edaece73309cf2c89b8ee *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-02-13T09:53:12.337075259Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-13T09:53:12.937842375Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-13T09:53:14.671562886Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-02-13T09:53:15.287741919Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b62d6d9a5cefd54dd8025cbfc842db54bbbc2268be8d05125c05ef82228da652",
                    "sha256:f8acf74b099c772d9f05156f67bc53953983b4f4edd19881dc2b138d1cfdb5dc",
                    "sha256:9079a9ec4fad7a526523322dad8473070caa3506e0da3d1de6796e849e7b2700",
                    "sha256:55321bf93b5623e0f3cfeb273381e036e21b0cf1873712feb570c153950a88a5",
                    "sha256:693c4fd69876d8da7df2161df30be8078c92151ddd6c1ad4ea0ce98f167a1551",
                    "sha256:a74026ff0abba8d498248a7add7aa459c8707bae6354d79d8a4a7ca76fe1b42d"
                ]
            }
        },
        "1.12rc1-alpine3.8": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:74d7fe2d3777aeac035a20826577cb0f8d3055c60b8f2f03737a1b4b0271b3a3",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "dc5995079af5a98e96f96d8847e5387ca717cd9ba6e20df7478e65dfa762a47d",
            "container_config": {
                "Hostname": "dc5995079af5",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:74d7fe2d3777aeac035a20826577cb0f8d3055c60b8f2f03737a1b4b0271b3a3",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-02-13T09:56:33.123916588Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2018-12-21T09:43:06.705630029Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:79419748674899ac7d5d699fe62f837c69d04af3ceaabbb7951c35c2f0ff46fa in / "
                },
                {
                    "created": "2018-12-21T09:43:07.198401212Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a10c133d8d5e9af3a9a1610709d3ed2f85b1507f1ba5745ac12bb495974e3fe6 in /etc/localtime "
                },
                {
                    "created": "2018-12-21T09:43:07.722553865Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T10:00:50.393353587Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-12-21T10:00:52.818317624Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-02-13T09:53:20.752751331Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12rc1",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-13T09:56:28.804242706Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'ed1d4f8e8a33f0d4a59a2f642584c7c6375fce2f8a4edaece73309cf2c89b8ee *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-02-13T09:56:30.106639503Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-13T09:56:30.731088644Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-13T09:56:32.506452236Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-02-13T09:56:33.123916588Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:92d7b4d0b33cc1213ee394fabb26922447135080a3b7bd326e5bb7453e06be32",
                    "sha256:82fe62b38ba2a9028a57bee2d8e1b855733943e5491ad946e37e406208ff6e8b",
                    "sha256:0db26aa2ab49f54f8b357b9d4f8188543a065211dac4752eb7d9b65da88a52cf",
                    "sha256:6897c234601851e40044ce7b1194fc52052891863645562058c775deb9dc1342",
                    "sha256:af08fe851afbee8f0d9def6f7d15ee84c7892a566e77627d1590727c8b230d0f",
                    "sha256:851113324b2e4325ef43ddbf605aac72601d2f6dd07a48acc19201f7e8406552"
                ]
            }
        },
        "1.12rc1-alpine3.9": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9f7bbc641dd8ac450d68ef0a938bb10aad2a83ae2a566304abb242b137bd1667",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "ef2542e7bfa8b9544665158dc28367dbfe705736e9e90708ac1c425ccec8d3bd",
            "container_config": {
                "Hostname": "ef2542e7bfa8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9f7bbc641dd8ac450d68ef0a938bb10aad2a83ae2a566304abb242b137bd1667",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-02-13T09:53:15.287741919Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-01-31T09:40:55.59464559Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3c5f57c6644886bbb8164b9aa4cd60e233be7da48b7194a04963a8e7de058e28 in / "
                },
                {
                    "created": "2019-01-31T09:40:56.373934366Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a10c133d8d5e9af3a9a1610709d3ed2f85b1507f1ba5745ac12bb495974e3fe6 in /etc/localtime "
                },
                {
                    "created": "2019-01-31T09:40:57.414211885Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T10:35:48.859028851Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-02-06T10:35:53.718651346Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-02-13T09:50:07.293628129Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12rc1",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-13T09:53:11.029771295Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'ed1d4f8e8a33f0d4a59a2f642584c7c6375fce2f8a4edaece73309cf2c89b8ee *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-02-13T09:53:12.337075259Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-13T09:53:12.937842375Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-13T09:53:14.671562886Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-02-13T09:53:15.287741919Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b62d6d9a5cefd54dd8025cbfc842db54bbbc2268be8d05125c05ef82228da652",
                    "sha256:f8acf74b099c772d9f05156f67bc53953983b4f4edd19881dc2b138d1cfdb5dc",
                    "sha256:9079a9ec4fad7a526523322dad8473070caa3506e0da3d1de6796e849e7b2700",
                    "sha256:55321bf93b5623e0f3cfeb273381e036e21b0cf1873712feb570c153950a88a5",
                    "sha256:693c4fd69876d8da7df2161df30be8078c92151ddd6c1ad4ea0ce98f167a1551",
                    "sha256:a74026ff0abba8d498248a7add7aa459c8707bae6354d79d8a4a7ca76fe1b42d"
                ]
            }
        },
        "1.12rc1-stretch": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d09bbfd7317dd5002f158c04f9cbf5062a371a7d7b7c86fb94b54bfc0fd4cad9",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "ae79975d1ecea6d03bddd5cbe8c6001d14aebb341588df9f762d51f8b85b0cdd",
            "container_config": {
                "Hostname": "ae79975d1ece",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d09bbfd7317dd5002f158c04f9cbf5062a371a7d7b7c86fb94b54bfc0fd4cad9",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-02-13T09:49:58.438490842Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-02-06T10:08:56.448426246Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4c7b5bcb5c347fb36236917e364936a9762b8bd6e8585c33379120f01c3a8d85 in / "
                },
                {
                    "created": "2019-02-06T10:08:58.411455795Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T10:37:59.282799901Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-02-06T10:38:20.923306295Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-02-06T10:39:59.470164799Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-02-06T10:44:54.502187336Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-02-13T09:49:23.711035258Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12rc1",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-13T09:49:54.124809208Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='e5a03e1f2e065b17b2fbbd3429f18a6f51fe2848e0120586652b9f14ada72c9a' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='62126e4ca72e2fea9856fe0ec1a0f28cf1b385fb362d32cb56413c39cab318f8' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='654b90f75902d501e2201a7b438965132fd1242a102f54529e9ff7dbbdf0d4bb' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='1d8615576655decbadeefcfaa6d5144b370dbea67fd4b426f58b573deedbd918' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='cb6c7ba83ee8211da1d13d6db148adfdd6b86a790d3974d0c5702d229ca1da40' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='40208d21fca8469c20054e67250f288ab62d68794690aa2c0324d67018ba99c2' ;; \t\t*) goRelArch='src'; goRelSha256='ed1d4f8e8a33f0d4a59a2f642584c7c6375fce2f8a4edaece73309cf2c89b8ee'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-02-13T09:49:55.362963326Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-13T09:49:55.972054695Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-13T09:49:57.814053544Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-02-13T09:49:58.438490842Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3b1e812def9423169cf856a2785cf1c647d0b14e257f1d97d001f2eea597c8a9",
                    "sha256:944b169fa0fecd2d4b3b5dad05f280d7a9179485fe8c1839737c690e87fbc67b",
                    "sha256:692a708e68fbe95e5c9d80b2a5a3287fe3670dfcd31108ecf3621b4e758f3d4b",
                    "sha256:fbb13e302c5c808925f2c1f9c41c4cefeac1888499f44965cc340cc8c473b660",
                    "sha256:0cadb6f6c5d6ee70b9971ea95007e8da709427c29d8565ac23c12b8ed016dd3e",
                    "sha256:8a48e7017c432660894c9fefb8ecf7f5e32b8f6db804be1fd82e156a2c4517a3",
                    "sha256:1fe9b7726bde8e4173082114d4d9f9d5ef7ee06b465341c6b10d27173b979874"
                ]
            }
        },
        "1.13-alpine": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c1ca5d4547c7ae90fa725ba86cb5b3476b34009aac5fd206685ded151ecfc461",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "0c0ac7971609e7f74f610a62001cd5517d64a597f3b1b9cf21d9d529e3f21b02",
            "container_config": {
                "Hostname": "0c0ac7971609",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c1ca5d4547c7ae90fa725ba86cb5b3476b34009aac5fd206685ded151ecfc461",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-08-07T00:15:02.479525793Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-05-29T21:43:19.040389267Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7574aee4e37a85460ab889212d52912723a9b30dda1c060548f0deb4a05fc398 in / "
                },
                {
                    "created": "2020-05-29T21:43:20.806476688Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T01:57:21.455062196Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-06-02T01:58:08.352994569Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-08-07T00:08:43.148207505Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.15",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-07T00:13:19.162650377Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '5fb43171046cf8784325e67913d55f88a683435071eef8e9da1aa8a1588fcf5d *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-08-07T00:13:37.733276002Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-07T00:13:52.993600247Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-07T00:14:54.372458923Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-08-07T00:15:02.479525793Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e2f13739ad415e6f8d9f73253910e4984563a1ec98bd0e0af715fc2c74dfe84b",
                    "sha256:472a1bfdabca804e038c0de19450b89544c73d626a7750d65ed29cb7ded9a01e",
                    "sha256:748b0f102369b9deb5d70340aa4868484fab876b16660e4a87c68991a63b36e6",
                    "sha256:59f851b1e610d4987ed388475a9fa53a17c21da18f1894be1fdf9dde564329bb",
                    "sha256:3074d4733426f56a1c33247d0e31b696117061ca69bfc64c3a2c82b4fbcca512"
                ]
            }
        },
        "1.13-alpine3.10": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9820e9f6ee53116784fe7650bd4932627da01b90b8f11e559b0d68a9db849f2d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "4fcd75e11178fd1762fcfb24f8f2d69e55569f53c48aadb110118d58a0997446",
            "container_config": {
                "Hostname": "4fcd75e11178",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9820e9f6ee53116784fe7650bd4932627da01b90b8f11e559b0d68a9db849f2d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-05-16T11:49:33.313819756Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-04-24T00:14:52.324434922Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:75529f7e83edb6d0457a3b8bbfe33d4e3a12f339c5ace517d0f52dbedd9a146b in / "
                },
                {
                    "created": "2020-04-24T00:14:53.295795467Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-24T09:36:09.462770325Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-04-24T09:36:11.32299018Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-05-16T11:46:58.415686111Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.11",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-16T11:49:21.224205071Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '89ed1abce25ad003521c125d6583c93c1280de200ad221f961085200a6c00679 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-05-16T11:49:30.12244592Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-16T11:49:30.774528455Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-16T11:49:32.55778012Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-05-16T11:49:33.313819756Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:66b385cf80cf7abb99f6a1068b39c7d6255b5fc81544e99b23510edc5e4a1d29",
                    "sha256:30d10fef154d58f561711b09c31c98aa0ef1c24fcb3ae5942447b3fda7ef8b61",
                    "sha256:f378e970a654defd6de7c194e65b924b7200baa1cea96ae2f22edd8ddefd1d96",
                    "sha256:e62dde2c56ea0029d823c7bb61a8a753af733031ca305c1518bb68630309076c",
                    "sha256:6e64a3c23c1b1b3e6bdc71e3be9af4ee2d0e0706f531eff391ffd6d27cc1e0d3"
                ]
            }
        },
        "1.13-alpine3.11": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:8b7be23c1245d452f0c763e3dbb8d2073a189a63dff3a7ef0c425365aa23c718",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "338ff999114695976894c07966acf1c340e70e1b02771309c0b63159b6472deb",
            "container_config": {
                "Hostname": "338ff9991146",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:8b7be23c1245d452f0c763e3dbb8d2073a189a63dff3a7ef0c425365aa23c718",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-08-07T00:21:09.093736056Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-04-24T00:14:18.623777014Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:85ae77bc1e43353ff14e6fe1658be1ed4ecbf4330212ac3d7ab7462add32dd39 in / "
                },
                {
                    "created": "2020-04-24T00:14:21.043191759Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-24T09:30:19.959732843Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-04-24T09:30:22.482603996Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-08-07T00:15:20.403329919Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.15",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-07T00:19:55.40559924Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '5fb43171046cf8784325e67913d55f88a683435071eef8e9da1aa8a1588fcf5d *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-08-07T00:20:10.118476752Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-07T00:20:26.485038249Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-07T00:20:52.848574236Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-08-07T00:21:09.093736056Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:678a0785e7d29c77c56c1bb0af4b279374e731903506838956f7bc808665a6dd",
                    "sha256:079af829c0db80026b85d242cea6f54d5bd4d8d787d083da9ac0b6ada9e9cabc",
                    "sha256:b2e3f56df73e6b071d861884c1d0400f1dc635e9bc0f217a47886ba2cce82467",
                    "sha256:56eaf1785c5cb481c383dbe728e18b80b7982e06cbb64ff8159bf88c5f29b758",
                    "sha256:6934aae5c3d3e8fb1cd5fab3de132dc621809dcc2a0f3991c6832480299d7305"
                ]
            }
        },
        "1.13-alpine3.12": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c1ca5d4547c7ae90fa725ba86cb5b3476b34009aac5fd206685ded151ecfc461",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "0c0ac7971609e7f74f610a62001cd5517d64a597f3b1b9cf21d9d529e3f21b02",
            "container_config": {
                "Hostname": "0c0ac7971609",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c1ca5d4547c7ae90fa725ba86cb5b3476b34009aac5fd206685ded151ecfc461",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-08-07T00:15:02.479525793Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-05-29T21:43:19.040389267Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7574aee4e37a85460ab889212d52912723a9b30dda1c060548f0deb4a05fc398 in / "
                },
                {
                    "created": "2020-05-29T21:43:20.806476688Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T01:57:21.455062196Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-06-02T01:58:08.352994569Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-08-07T00:08:43.148207505Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.15",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-07T00:13:19.162650377Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '5fb43171046cf8784325e67913d55f88a683435071eef8e9da1aa8a1588fcf5d *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-08-07T00:13:37.733276002Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-07T00:13:52.993600247Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-07T00:14:54.372458923Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-08-07T00:15:02.479525793Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e2f13739ad415e6f8d9f73253910e4984563a1ec98bd0e0af715fc2c74dfe84b",
                    "sha256:472a1bfdabca804e038c0de19450b89544c73d626a7750d65ed29cb7ded9a01e",
                    "sha256:748b0f102369b9deb5d70340aa4868484fab876b16660e4a87c68991a63b36e6",
                    "sha256:59f851b1e610d4987ed388475a9fa53a17c21da18f1894be1fdf9dde564329bb",
                    "sha256:3074d4733426f56a1c33247d0e31b696117061ca69bfc64c3a2c82b4fbcca512"
                ]
            }
        },
        "1.13-buster": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:57dd5c99966b4f2a67f2be6b15fbebccaa043bc8299b307c551c9d7f9705ecbb",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "5377c3a24eaa9ac21b4d1cd182a62ec1ea9ea233fa312cddee0b2e68d7923dda",
            "container_config": {
                "Hostname": "5377c3a24eaa",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:57dd5c99966b4f2a67f2be6b15fbebccaa043bc8299b307c551c9d7f9705ecbb",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-08-07T00:03:34.020561594Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-08-04T06:57:06.460802121Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ce999027b153d392f8a0f85e2e7a17b9279f3cf7ad0e45192378d527275f99c6 in / "
                },
                {
                    "created": "2020-08-04T06:57:08.915443015Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-04T11:10:05.552247836Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-08-04T11:10:17.539042228Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-08-04T11:10:53.648894661Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-08-05T07:19:15.076533344Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-08-05T07:19:17.649744102Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-07T00:01:25.932490529Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.15",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-07T00:02:11.956720033Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='01cc3ddf6273900eba3e2bf311238828b7168b822bb57a9ccab4d7aa2acd6028' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='c58eacae1745769e77328aec08e0e3b4da1b4e99e1153046b1b00ae0b3338d42' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='a5c59e3f0aeaf6e939790152a8bfabb91d70c9787afb7aee06aef9bd4411c551' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='1a63e97b6f1a673966d6a4f4f7f9c724fdd68bdeac11425bf8a39c7a24ddc0a7' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='bee55510a87bd366381df0be4736fd5cc89523228f9ca20eb1687f59e80ca029' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='6c370800d470ae116a9521f5439b3fa6271f06a6d4c2a18913c8c6226d78fe4b' ;; \t\t*) goRelArch='src'; goRelSha256='5fb43171046cf8784325e67913d55f88a683435071eef8e9da1aa8a1588fcf5d'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \t\teval \"$goEnv\"; \t\t[ -n \"$GOOS\" ]; \t\t[ -n \"$GOARCH\" ]; \t\t( \t\t\tcd /usr/local/go/src; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2020-08-07T00:02:20.627478526Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-07T00:02:23.217017231Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-07T00:03:25.543079168Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-08-07T00:03:34.020561594Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:07f1d3c8fd8ac676a02d5265b34507fb91fdd89ba05a834d4ff03934b1390611",
                    "sha256:c9d518b45cb70ebc392d7aee024b2503338285725e68a6fc63634c37bcc8bcaa",
                    "sha256:c5e2074ee091ab7013419433e30a55508ac339e55be1961dc7c7aa88a62c34bd",
                    "sha256:469f78d4c045fe01589a5533bf6f48fd3397c083b726794d6214255ebc505603",
                    "sha256:45a95ba760e41e2bdc435ed641e987ab43f65e6287b602cae8118c909295705d",
                    "sha256:d7e8876a7bf45a7da3a8cc71a9f1d351dfa1c918043ce93d6f865eaa23e69820",
                    "sha256:269b4d3883cb64c7a12c49680131edc288053d7c47d8d39aff4b0b8b463b3886"
                ]
            }
        },
        "1.13-rc-alpine": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c8e2181088c39e75391eb6e09c036c9a737c4b52aeff8aead4fd9177aa50cb6c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "6c34450543f772df247010e9a61b88842708255c6d968a0585f691cc5bf49589",
            "container_config": {
                "Hostname": "6c34450543f7",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c8e2181088c39e75391eb6e09c036c9a737c4b52aeff8aead4fd9177aa50cb6c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-29T21:46:08.880551468Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-20T20:39:38.405945347Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:34737804ba78554795d5bcc75621595f8cc3d5b5887887d34e0e021b78e330b7 in / "
                },
                {
                    "created": "2019-08-20T20:39:38.821174355Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T20:56:21.289256818Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-08-20T20:56:22.869691367Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-08-29T21:43:31.7246675Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13rc2",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-29T21:46:04.958726615Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '0c7387b3be32718282a39faa3020ff30365ef70e64fa71e10017a986587b7fe9 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-29T21:46:07.076619971Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-29T21:46:07.388667799Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-29T21:46:08.544926466Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-29T21:46:08.880551468Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5e0d8111135538b8a86ce5fc969849efce16c455fd016bb3dc53131bcedc4da5",
                    "sha256:e3275698b6646fa0bbb59a0c5bcb22674d2098952d972968752905ca92f4c6c7",
                    "sha256:88ee3bd19f4a271e93edadba95c10387ef28c86ebb20c2b2373dad5741bffb77",
                    "sha256:f9feeafbc5b31a33c8198489483785f6dca9aa1cc1ac7b7e8677806df1c64256",
                    "sha256:93ae36c7a4609504a2c12ec6c2b3e3c97336008de78ace59c194d42eb573f2d0"
                ]
            }
        },
        "1.13-rc-alpine3.10": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c8e2181088c39e75391eb6e09c036c9a737c4b52aeff8aead4fd9177aa50cb6c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "6c34450543f772df247010e9a61b88842708255c6d968a0585f691cc5bf49589",
            "container_config": {
                "Hostname": "6c34450543f7",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c8e2181088c39e75391eb6e09c036c9a737c4b52aeff8aead4fd9177aa50cb6c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-29T21:46:08.880551468Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-20T20:39:38.405945347Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:34737804ba78554795d5bcc75621595f8cc3d5b5887887d34e0e021b78e330b7 in / "
                },
                {
                    "created": "2019-08-20T20:39:38.821174355Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T20:56:21.289256818Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-08-20T20:56:22.869691367Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-08-29T21:43:31.7246675Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13rc2",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-29T21:46:04.958726615Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '0c7387b3be32718282a39faa3020ff30365ef70e64fa71e10017a986587b7fe9 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-29T21:46:07.076619971Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-29T21:46:07.388667799Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-29T21:46:08.544926466Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-29T21:46:08.880551468Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5e0d8111135538b8a86ce5fc969849efce16c455fd016bb3dc53131bcedc4da5",
                    "sha256:e3275698b6646fa0bbb59a0c5bcb22674d2098952d972968752905ca92f4c6c7",
                    "sha256:88ee3bd19f4a271e93edadba95c10387ef28c86ebb20c2b2373dad5741bffb77",
                    "sha256:f9feeafbc5b31a33c8198489483785f6dca9aa1cc1ac7b7e8677806df1c64256",
                    "sha256:93ae36c7a4609504a2c12ec6c2b3e3c97336008de78ace59c194d42eb573f2d0"
                ]
            }
        },
        "1.13-rc-buster": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:96daff576c7cdd6751e9ab89848740a5ba4ed4adda44c55b29e78c28fa891a98",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "af1d4d8dd1a00a5ab6642ba0755b0ca61661e78a7648977ac2cb82537dff78e8",
            "container_config": {
                "Hostname": "af1d4d8dd1a0",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:96daff576c7cdd6751e9ab89848740a5ba4ed4adda44c55b29e78c28fa891a98",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-29T21:43:26.524510183Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-14T00:40:44.249210056Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f63b119fbe465bf5c6ca8b15f40bc0103b3e00d68628a80d1025b38e536a46b7 in / "
                },
                {
                    "created": "2019-08-14T00:40:45.352575059Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T02:30:03.501985656Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T02:30:14.635808353Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-08-14T02:30:48.715930266Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T21:04:50.976650827Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-29T21:43:10.168646563Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13rc2",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-29T21:43:22.942771052Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='3cd4490021a5f1f25a7440edca03910e40a38e587b578cf52ab7143a81db1861' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='deebe2b723c818293046629344f09ead1610fba608aea038bcf25da70766f944' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='184c9fff6bba9da1cf23ba7f52561cc777ac7feaf73621b3824f4a30ffa4648d' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='5f5d235b73672ee5d26917d3907f8f1966af60d4391477a5afd4300d070ca852' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='7656da8bb13e450754d5df35c7d21dafb5847b00779dcc08f3c41eec7d817037' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='6016103bab62f1fe6b8f90665888a23ae8c825a8e7db7a607877298148e593cf' ;; \t\t*) goRelArch='src'; goRelSha256='0c7387b3be32718282a39faa3020ff30365ef70e64fa71e10017a986587b7fe9'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-29T21:43:24.66470861Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-29T21:43:24.984518429Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-29T21:43:26.165119396Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-29T21:43:26.524510183Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0a3fa153264b693d6d10457dc58b433dca1828a88c52750c2227f5926d15d737",
                    "sha256:f54065b956ab8a66f19f7e4e8ecd9104fa17c2e2580df52324c517cd33136df1",
                    "sha256:008074a8f55cf42e163cbb663d9647c6c03616ed7793f9ebd08602f01fa71a29",
                    "sha256:c1e303518b8e8e76f012f7b30cec7577595ef108919b05d67a6b891853ea21f9",
                    "sha256:a068c344f31fa4e9303790b3f06c8920f05871dc7df660370ac2cd0b318db5a3",
                    "sha256:85589d829abd75cd33e0ea1fefb3349b53737b7282fb1a2af8e3a6667a2701d9",
                    "sha256:9766744990c2714a5dd5bcb588ba7e8b1d3aef18ee92398fe2b9507f3ae71484"
                ]
            }
        },
        "1.13-stretch": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:752e47bedd40a8aa83aa8a90a434e697a320d63b3136286f7580ae40ac5fbec0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "c68a4c26699681829844db68b39ec3c98f99980bc7a0641ab129cf5607be1130",
            "container_config": {
                "Hostname": "c68a4c266996",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:752e47bedd40a8aa83aa8a90a434e697a320d63b3136286f7580ae40ac5fbec0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-08-07T00:08:12.486509529Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-08-04T06:59:38.790621302Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0a7a65de4c9dc6ea7f7ac97362a47b82a02a45ecab668ddc84cfd011dad26d33 in / "
                },
                {
                    "created": "2020-08-04T06:59:41.020342042Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-04T11:16:35.77869248Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-08-04T11:16:46.146083763Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-08-04T11:17:28.242091388Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-08-05T07:20:50.246113577Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-08-05T07:20:52.077846216Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-07T00:04:07.066025519Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.15",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-07T00:05:23.195133893Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='01cc3ddf6273900eba3e2bf311238828b7168b822bb57a9ccab4d7aa2acd6028' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='c58eacae1745769e77328aec08e0e3b4da1b4e99e1153046b1b00ae0b3338d42' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='a5c59e3f0aeaf6e939790152a8bfabb91d70c9787afb7aee06aef9bd4411c551' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='1a63e97b6f1a673966d6a4f4f7f9c724fdd68bdeac11425bf8a39c7a24ddc0a7' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='bee55510a87bd366381df0be4736fd5cc89523228f9ca20eb1687f59e80ca029' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='6c370800d470ae116a9521f5439b3fa6271f06a6d4c2a18913c8c6226d78fe4b' ;; \t\t*) goRelArch='src'; goRelSha256='5fb43171046cf8784325e67913d55f88a683435071eef8e9da1aa8a1588fcf5d'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \t\teval \"$goEnv\"; \t\t[ -n \"$GOOS\" ]; \t\t[ -n \"$GOARCH\" ]; \t\t( \t\t\tcd /usr/local/go/src; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2020-08-07T00:05:47.919613637Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-07T00:06:06.303150144Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-07T00:07:42.623384075Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-08-07T00:08:12.486509529Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b16667ca674701438aec7239c03cad4e7f543ff9372ef5271da80035283a5d2e",
                    "sha256:4ed8cff05c9a4423a28c9b27dd4d3289c54c0c635f7c0a02855ae93fdb3a1b1e",
                    "sha256:a1da41b5781c6f6f2bd25ab739ed7db9a7a61bf7a7d6b36006f3a6f858e5c347",
                    "sha256:9d88224eb523b7872dc1a272c34b954a431729083787be6e8ea3c54b8ab5c714",
                    "sha256:40e2498ec4dd2ba9b7f885d14eebe0f186959ae250179616aa1aad44b939ac25",
                    "sha256:e65ffb84f49df67c8ed5cab015dd72286c54898bfae9a149111a63c1422f5d53",
                    "sha256:785924c0641cc177cd25c404aca03b82e1eb04c58ebab437a55f6df6acbfe5a3"
                ]
            }
        },
        "1.13.0-alpine": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b573ec70d589b37177617aeceab3845d1038ac2e84f7548f38b02d56efaea62c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "d39281dea1582c24c4fe26994dd37d1b3b7c6a9a4af60f31e033d478ccf1d2e4",
            "container_config": {
                "Hostname": "d39281dea158",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b573ec70d589b37177617aeceab3845d1038ac2e84f7548f38b02d56efaea62c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-09-03T20:44:39.228593425Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-20T20:39:38.405945347Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:34737804ba78554795d5bcc75621595f8cc3d5b5887887d34e0e021b78e330b7 in / "
                },
                {
                    "created": "2019-08-20T20:39:38.821174355Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T20:56:21.289256818Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-08-20T20:56:22.869691367Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-09-03T20:41:57.164627725Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-03T20:44:35.333406286Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '3fc0b8b6101d42efd7da1da3029c0a13f22079c0c37ef9730209d8ec665bf122 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-09-03T20:44:37.408662007Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-03T20:44:37.728463075Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-03T20:44:38.86894785Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-09-03T20:44:39.228593425Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5e0d8111135538b8a86ce5fc969849efce16c455fd016bb3dc53131bcedc4da5",
                    "sha256:e3275698b6646fa0bbb59a0c5bcb22674d2098952d972968752905ca92f4c6c7",
                    "sha256:88ee3bd19f4a271e93edadba95c10387ef28c86ebb20c2b2373dad5741bffb77",
                    "sha256:ed8c1c2c1df6c14555db4c72f67b9afe9d7d01a39e4ab4930c8a71c62a3df75c",
                    "sha256:580ae4129a14bcfadb612a0e5b870baf75c4d098d524d10b55cacb117e24f70d"
                ]
            }
        },
        "1.13.0-alpine3.10": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b573ec70d589b37177617aeceab3845d1038ac2e84f7548f38b02d56efaea62c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "d39281dea1582c24c4fe26994dd37d1b3b7c6a9a4af60f31e033d478ccf1d2e4",
            "container_config": {
                "Hostname": "d39281dea158",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b573ec70d589b37177617aeceab3845d1038ac2e84f7548f38b02d56efaea62c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-09-03T20:44:39.228593425Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-20T20:39:38.405945347Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:34737804ba78554795d5bcc75621595f8cc3d5b5887887d34e0e021b78e330b7 in / "
                },
                {
                    "created": "2019-08-20T20:39:38.821174355Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T20:56:21.289256818Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-08-20T20:56:22.869691367Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-09-03T20:41:57.164627725Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-03T20:44:35.333406286Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '3fc0b8b6101d42efd7da1da3029c0a13f22079c0c37ef9730209d8ec665bf122 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-09-03T20:44:37.408662007Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-03T20:44:37.728463075Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-03T20:44:38.86894785Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-09-03T20:44:39.228593425Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5e0d8111135538b8a86ce5fc969849efce16c455fd016bb3dc53131bcedc4da5",
                    "sha256:e3275698b6646fa0bbb59a0c5bcb22674d2098952d972968752905ca92f4c6c7",
                    "sha256:88ee3bd19f4a271e93edadba95c10387ef28c86ebb20c2b2373dad5741bffb77",
                    "sha256:ed8c1c2c1df6c14555db4c72f67b9afe9d7d01a39e4ab4930c8a71c62a3df75c",
                    "sha256:580ae4129a14bcfadb612a0e5b870baf75c4d098d524d10b55cacb117e24f70d"
                ]
            }
        },
        "1.13.0-buster": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d5dbfe09e1768c209a8471f0d429c3d5ef9f0c0d6d8d875b861d817d3ef50fd3",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "6795ff9e299cd4c15ee14f8390bbe3bcb98b2fc2eecf5919099a546549d7226b",
            "container_config": {
                "Hostname": "6795ff9e299c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d5dbfe09e1768c209a8471f0d429c3d5ef9f0c0d6d8d875b861d817d3ef50fd3",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-09-12T21:33:09.245237895Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-09-11T22:40:29.620262031Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:616e45df7a9383ad8cb38a4350f146077c9ebefb211c02174c7e9b1c7d141040 in / "
                },
                {
                    "created": "2019-09-11T22:40:31.90949299Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-12T00:39:27.744269847Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-09-12T00:39:41.997036766Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-09-12T00:40:16.074897181Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-09-12T21:32:50.182481037Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-09-12T21:32:52.367759242Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-12T21:33:04.262911223Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='68a2297eb099d1a76097905a2ce334e3155004ec08cdea85f24527be3c48e856' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='931906d67cae1222f501e7be26e0ee73ba89420be0c4591925901cb9a4e156f0' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='e2a61328101eff3b9c1ba47ecfec5eb2fdc3eb35d8c27d505737ba98bfcb197b' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='519b3e6ae4db011b93b60e6fabb055773ae6448355b6909a6befef87e02d98f5' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='807b036bb058061b6090635e2a8612aaf301895dce70a773bbcd67fa1e57337c' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='b7122795910b70b68e4118d0d34685a30925f4dd861c065cf20b699a7783807a' ;; \t\t*) goRelArch='src'; goRelSha256='3fc0b8b6101d42efd7da1da3029c0a13f22079c0c37ef9730209d8ec665bf122'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-09-12T21:33:06.666053401Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-12T21:33:07.197610843Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-12T21:33:08.702151079Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-09-12T21:33:09.245237895Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:934b023166db55cf38d7566edd4ac7f8c2abcd3fe93b16fd8fba09ebb638742e",
                    "sha256:d6d2d0048f55e477c6a258194d385dd7897c45862883a1283a1940e8a096972e",
                    "sha256:fea06f0027a7ca4add434f46541d7726a584b85646e81e53906ac79afc1786d3",
                    "sha256:d036b0571cbfc773699c07339a73b752de6ab2517deec30611c93c13629183d0",
                    "sha256:44c34c78c6a0de84909b89417883665ad5cdce00085120f58251c5da833a8bcd",
                    "sha256:610f7589e036d6298cb425950cb7f5150e00338abd75f677c2d7ae36c28d51bc",
                    "sha256:fccef972c4702e4e9333fbd8344d017ead2d83d83b8f56631cb8692d9b0bf12c"
                ]
            }
        },
        "1.13.0-stretch": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:bf10ba479686e848aaf5e8cc8c0154269ff0173bc2fa8cb8fb634a313d48dcca",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "046ea8c04158c491a25b3460f7f59b5d9839617668ee60e2cb3a26925493d485",
            "container_config": {
                "Hostname": "046ea8c04158",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:bf10ba479686e848aaf5e8cc8c0154269ff0173bc2fa8cb8fb634a313d48dcca",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-09-12T21:33:55.651709892Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-09-11T22:43:01.797512841Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:caf4d612b52451d22260b0d5cffb0fbb4b73aa3841a8a622c9a87923dee2f910 in / "
                },
                {
                    "created": "2019-09-11T22:43:03.870050897Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-12T00:46:51.291216368Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-09-12T00:47:02.13693739Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-09-12T00:47:45.124146109Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-09-12T21:33:34.251327452Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-09-12T21:33:36.091461001Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-12T21:33:49.47097535Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='68a2297eb099d1a76097905a2ce334e3155004ec08cdea85f24527be3c48e856' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='931906d67cae1222f501e7be26e0ee73ba89420be0c4591925901cb9a4e156f0' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='e2a61328101eff3b9c1ba47ecfec5eb2fdc3eb35d8c27d505737ba98bfcb197b' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='519b3e6ae4db011b93b60e6fabb055773ae6448355b6909a6befef87e02d98f5' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='807b036bb058061b6090635e2a8612aaf301895dce70a773bbcd67fa1e57337c' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='b7122795910b70b68e4118d0d34685a30925f4dd861c065cf20b699a7783807a' ;; \t\t*) goRelArch='src'; goRelSha256='3fc0b8b6101d42efd7da1da3029c0a13f22079c0c37ef9730209d8ec665bf122'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-09-12T21:33:51.933383692Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-12T21:33:52.786507639Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-12T21:33:54.844908464Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-09-12T21:33:55.651709892Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cb3ae7ea1af65e7b5329dbead3f108d8150dadee3b38abf0ce6544d806e81021",
                    "sha256:ac252c443492958adbd71b3e17a689f98964eb7a8a4ef8f78985b175c38493bb",
                    "sha256:08f36f226ccca40acf68459776d1a28de18c42a524a3833e5a89432a89d8cda1",
                    "sha256:2ad3df54bc03c5689ede6a3747bf505359e97c13642f2d09510b298eb0acac10",
                    "sha256:0567c2fa6008380ab72deca273abaec2870ac969354d3b0e3208c6f75f652c21",
                    "sha256:fec66fa4d452911ae12602c1bb968b38df9b7905eadbcf6989fddcc33560eb87",
                    "sha256:55f98c4d48915d932588381e6ba6ea92ed8bfc3026f33439a5930b067aff758e"
                ]
            }
        },
        "1.13.1-alpine": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a66b4e690476964cadf0be8d010581e97be29c9f2d1253460cfd1d3b1c2e259d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "e580397c11627b6d3a6c5c9415fa6e19332430883f5aaf6eb9bba78b38131356",
            "container_config": {
                "Hostname": "e580397c1162",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a66b4e690476964cadf0be8d010581e97be29c9f2d1253460cfd1d3b1c2e259d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-09-25T23:00:22.737409356Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-20T20:39:38.405945347Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:34737804ba78554795d5bcc75621595f8cc3d5b5887887d34e0e021b78e330b7 in / "
                },
                {
                    "created": "2019-08-20T20:39:38.821174355Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T20:56:21.289256818Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-08-20T20:56:22.869691367Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-09-25T22:58:11.814035681Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.1",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-25T23:00:12.377253477Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '81f154e69544b9fa92b1475ff5f11e64270260d46e7e36c34aafc8bc96209358 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-09-25T23:00:19.173137493Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-25T23:00:19.886018038Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-25T23:00:22.023144065Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-09-25T23:00:22.737409356Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5e0d8111135538b8a86ce5fc969849efce16c455fd016bb3dc53131bcedc4da5",
                    "sha256:e3275698b6646fa0bbb59a0c5bcb22674d2098952d972968752905ca92f4c6c7",
                    "sha256:88ee3bd19f4a271e93edadba95c10387ef28c86ebb20c2b2373dad5741bffb77",
                    "sha256:c60eb0dcc448e63440c239dd244a1e796dd50e33aebeefa3a475314540439b47",
                    "sha256:25cde732131dc25748af11a9502a2ca524847e01da7a7670f45598fe591fd2d9"
                ]
            }
        },
        "1.13.1-alpine3.10": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a66b4e690476964cadf0be8d010581e97be29c9f2d1253460cfd1d3b1c2e259d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "e580397c11627b6d3a6c5c9415fa6e19332430883f5aaf6eb9bba78b38131356",
            "container_config": {
                "Hostname": "e580397c1162",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a66b4e690476964cadf0be8d010581e97be29c9f2d1253460cfd1d3b1c2e259d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-09-25T23:00:22.737409356Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-20T20:39:38.405945347Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:34737804ba78554795d5bcc75621595f8cc3d5b5887887d34e0e021b78e330b7 in / "
                },
                {
                    "created": "2019-08-20T20:39:38.821174355Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T20:56:21.289256818Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-08-20T20:56:22.869691367Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-09-25T22:58:11.814035681Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.1",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-25T23:00:12.377253477Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '81f154e69544b9fa92b1475ff5f11e64270260d46e7e36c34aafc8bc96209358 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-09-25T23:00:19.173137493Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-25T23:00:19.886018038Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-25T23:00:22.023144065Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-09-25T23:00:22.737409356Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5e0d8111135538b8a86ce5fc969849efce16c455fd016bb3dc53131bcedc4da5",
                    "sha256:e3275698b6646fa0bbb59a0c5bcb22674d2098952d972968752905ca92f4c6c7",
                    "sha256:88ee3bd19f4a271e93edadba95c10387ef28c86ebb20c2b2373dad5741bffb77",
                    "sha256:c60eb0dcc448e63440c239dd244a1e796dd50e33aebeefa3a475314540439b47",
                    "sha256:25cde732131dc25748af11a9502a2ca524847e01da7a7670f45598fe591fd2d9"
                ]
            }
        },
        "1.13.1-buster": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:720e1f14ecd17c1ba75e65eea8276bc5c99719c378434939d1456d024bcb5f47",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "975069523aa3a4712d88b48dfe2769671da73f93b62382f16a644a694ba89232",
            "container_config": {
                "Hostname": "975069523aa3",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:720e1f14ecd17c1ba75e65eea8276bc5c99719c378434939d1456d024bcb5f47",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-10-17T21:24:13.949399513Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-10-16T23:40:34.178453259Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4868439e4e9dc7ca054514d800a326f209513653c3060ab702c16aab34caf2a8 in / "
                },
                {
                    "created": "2019-10-16T23:40:36.361535022Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-17T02:11:07.719204398Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-17T02:11:18.24005543Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-10-17T02:11:52.850248491Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-17T21:23:52.97083918Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-17T21:23:54.702579622Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.1",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-17T21:24:08.265489372Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='94f874037b82ea5353f4061e543681a0e79657f787437974214629af8407d124' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='7c75d4002321ea4a066dfe13f6dd5168076e9a231317c5afd55e78b86f478e37' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='8af8787b7c2a3c0eb3f20f872577fcb6c36098bf725c59c4923921443084c807' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='4bf7a961fda7ad892b8824002036de8c0f290df05df2e8f11252d1f8c77dcd8f' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='72422c68dbed013ee321a05dbb97d9c8d6b2c75f347de707138c2c748fc4aceb' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='5f0859ae1037ad7af6cdb6d16f638de908fd9de044d463eeab92b9578d4c7c75' ;; \t\t*) goRelArch='src'; goRelSha256='81f154e69544b9fa92b1475ff5f11e64270260d46e7e36c34aafc8bc96209358'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-10-17T21:24:10.427182363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-17T21:24:11.111307283Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-17T21:24:13.083550423Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-10-17T21:24:13.949399513Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d620998337cd4e338272532deaf22cbcc0fcec532e5d0d0350b71bb95fdfb4f7",
                    "sha256:358123c8979c0dd31fe3b98ac05bc360676e1cac373fbd2ea16823741c4ae354",
                    "sha256:7f15e4d1dfa35b7067149621f77a83138390ab84f9464a3cc4983b554155cd91",
                    "sha256:31a5f606d930ae4257eccfdcf95c3dc622322837e6eef5ed929bf67c2f54fae0",
                    "sha256:f20c369bb5929591f9a4e429d9a6d1b667af24f66e5df577a6ee706838f691d3",
                    "sha256:66c639f4c1a03f84baa051af13a5f114790684e9cfc21eceec60861692927a53",
                    "sha256:bf38bd00bcb03a766c52e830c75b699e11a807f3d1ffda2d4a9ba356f3cf39fa"
                ]
            }
        },
        "1.13.1-stretch": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f86abd81c44ecca04a06eab05a73d35afd30d28779a425830d1356a10af130f4",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "4fdbbee7c89db68512aed2a4ac12bf9c3d22b5064458fe1bc1f8cf61aea8bf3e",
            "container_config": {
                "Hostname": "4fdbbee7c89d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f86abd81c44ecca04a06eab05a73d35afd30d28779a425830d1356a10af130f4",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-10-17T21:25:04.757707317Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-10-16T23:43:24.805941998Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c175e46d21fbcd99f833d917807088ceab257f27c16ec31b329be191e90626e0 in / "
                },
                {
                    "created": "2019-10-16T23:43:26.809937467Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-17T02:19:02.730435909Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-17T02:19:13.740616294Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-10-17T02:19:59.163121285Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-17T21:24:38.687614214Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-17T21:24:41.097778904Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.1",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-17T21:24:55.446830582Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='94f874037b82ea5353f4061e543681a0e79657f787437974214629af8407d124' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='7c75d4002321ea4a066dfe13f6dd5168076e9a231317c5afd55e78b86f478e37' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='8af8787b7c2a3c0eb3f20f872577fcb6c36098bf725c59c4923921443084c807' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='4bf7a961fda7ad892b8824002036de8c0f290df05df2e8f11252d1f8c77dcd8f' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='72422c68dbed013ee321a05dbb97d9c8d6b2c75f347de707138c2c748fc4aceb' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='5f0859ae1037ad7af6cdb6d16f638de908fd9de044d463eeab92b9578d4c7c75' ;; \t\t*) goRelArch='src'; goRelSha256='81f154e69544b9fa92b1475ff5f11e64270260d46e7e36c34aafc8bc96209358'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-10-17T21:25:00.684561546Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-17T21:25:01.578685844Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-17T21:25:03.711970126Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-10-17T21:25:04.757707317Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e001e199d3cd748aa182cbfbd0eed3bfd33928b855dff34e55516a2a0f533018",
                    "sha256:6d396da5e1541f8f44d61927f5a7dca6c69828eb54c48d70dcff3e7bafa88b36",
                    "sha256:33d497efb9fea8e81fcef4e893dcac72dc26208bac5d892b8437e93736b557b1",
                    "sha256:188416f548723d45c780455d4125a5d29e65b72fe3da82c56bf84e9d482698f3",
                    "sha256:23a46955f11e779084d7af4a13b61b3b5574cf72cc21a8794d750038b8659256",
                    "sha256:72d3c0c47cb0480d93770a2390137c5a377e2283ad0feec3dd1ca3810cba6e3b",
                    "sha256:bad8d2a64a01afb21c50c604a32a9b3d1d00d27fb630db8e0df494074a2c8ade"
                ]
            }
        },
        "1.13.10-alpine": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ce303ab9e90f48f00adedbbe0e8aea9173526c1a0312169915bec89af5a5cff0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "9b46b9ea10e04f017d145a0ff73200d03517522de1c861ae5a18a66084b2bdce",
            "container_config": {
                "Hostname": "9b46b9ea10e0",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ce303ab9e90f48f00adedbbe0e8aea9173526c1a0312169915bec89af5a5cff0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-04-24T09:35:47.759447801Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-04-24T00:14:18.623777014Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:85ae77bc1e43353ff14e6fe1658be1ed4ecbf4330212ac3d7ab7462add32dd39 in / "
                },
                {
                    "created": "2020-04-24T00:14:21.043191759Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-24T09:30:19.959732843Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-04-24T09:30:22.482603996Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-04-24T09:33:32.738193429Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.10",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-24T09:35:40.191426143Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'eb9ccc8bf59ed068e7eff73e154e4f5ee7eec0a47a610fb864e3332a2fdc8b8c *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-04-24T09:35:44.570237482Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-24T09:35:45.216214168Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-24T09:35:47.142453586Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-04-24T09:35:47.759447801Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:678a0785e7d29c77c56c1bb0af4b279374e731903506838956f7bc808665a6dd",
                    "sha256:079af829c0db80026b85d242cea6f54d5bd4d8d787d083da9ac0b6ada9e9cabc",
                    "sha256:b2e3f56df73e6b071d861884c1d0400f1dc635e9bc0f217a47886ba2cce82467",
                    "sha256:cb765f6bdd19239d1d6baafc256586ceedbe0799866abede6bee0a3d5ee2d2b7",
                    "sha256:bebc7b106a59731ebd37d9d3807f6d3a1d2dec84f18c72f74cf8c9fb162ea125"
                ]
            }
        },
        "1.13.10-alpine3.10": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2e491c1af73cc5444f4585a9c27a39cf6dfa3ad80ac18988c8475ef2e5c270a7",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "633a11d7ada1c7c2c72f56c9ad4bb6132c981ac33695562a186af00122eb13f4",
            "container_config": {
                "Hostname": "633a11d7ada1",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2e491c1af73cc5444f4585a9c27a39cf6dfa3ad80ac18988c8475ef2e5c270a7",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-04-24T09:38:19.723202259Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-04-24T00:14:52.324434922Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:75529f7e83edb6d0457a3b8bbfe33d4e3a12f339c5ace517d0f52dbedd9a146b in / "
                },
                {
                    "created": "2020-04-24T00:14:53.295795467Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-24T09:36:09.462770325Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-04-24T09:36:11.32299018Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-04-24T09:36:12.068173563Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.10",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-24T09:38:11.38225142Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'eb9ccc8bf59ed068e7eff73e154e4f5ee7eec0a47a610fb864e3332a2fdc8b8c *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-04-24T09:38:15.732381236Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-24T09:38:16.622955078Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-24T09:38:18.813133475Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-04-24T09:38:19.723202259Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:66b385cf80cf7abb99f6a1068b39c7d6255b5fc81544e99b23510edc5e4a1d29",
                    "sha256:30d10fef154d58f561711b09c31c98aa0ef1c24fcb3ae5942447b3fda7ef8b61",
                    "sha256:f378e970a654defd6de7c194e65b924b7200baa1cea96ae2f22edd8ddefd1d96",
                    "sha256:f06ced1709319909f36553f8acff6b8320d0e729ec61f7271565fc6ddb518717",
                    "sha256:6ed3b096780eac3be017bd9ff31c9fd6d5783ac1e6a0c816a3a44ba8616a7f23"
                ]
            }
        },
        "1.13.10-alpine3.11": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ce303ab9e90f48f00adedbbe0e8aea9173526c1a0312169915bec89af5a5cff0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "9b46b9ea10e04f017d145a0ff73200d03517522de1c861ae5a18a66084b2bdce",
            "container_config": {
                "Hostname": "9b46b9ea10e0",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ce303ab9e90f48f00adedbbe0e8aea9173526c1a0312169915bec89af5a5cff0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-04-24T09:35:47.759447801Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-04-24T00:14:18.623777014Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:85ae77bc1e43353ff14e6fe1658be1ed4ecbf4330212ac3d7ab7462add32dd39 in / "
                },
                {
                    "created": "2020-04-24T00:14:21.043191759Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-24T09:30:19.959732843Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-04-24T09:30:22.482603996Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-04-24T09:33:32.738193429Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.10",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-24T09:35:40.191426143Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'eb9ccc8bf59ed068e7eff73e154e4f5ee7eec0a47a610fb864e3332a2fdc8b8c *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-04-24T09:35:44.570237482Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-24T09:35:45.216214168Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-24T09:35:47.142453586Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-04-24T09:35:47.759447801Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:678a0785e7d29c77c56c1bb0af4b279374e731903506838956f7bc808665a6dd",
                    "sha256:079af829c0db80026b85d242cea6f54d5bd4d8d787d083da9ac0b6ada9e9cabc",
                    "sha256:b2e3f56df73e6b071d861884c1d0400f1dc635e9bc0f217a47886ba2cce82467",
                    "sha256:cb765f6bdd19239d1d6baafc256586ceedbe0799866abede6bee0a3d5ee2d2b7",
                    "sha256:bebc7b106a59731ebd37d9d3807f6d3a1d2dec84f18c72f74cf8c9fb162ea125"
                ]
            }
        },
        "1.13.10-buster": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ea3dad04ebda5f3c9ffb161e034e87d11088b71efa3feb4ee03a566fecfe1022",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "74a6bbfdf64d6d701f8e603f9e5ccf13c34ece7983166a557948c45f30cb1b4a",
            "container_config": {
                "Hostname": "74a6bbfdf64d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ea3dad04ebda5f3c9ffb161e034e87d11088b71efa3feb4ee03a566fecfe1022",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-04-23T18:16:01.291718099Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-04-23T00:54:22.668123248Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c49818672222185a0a985a8511744bd524fce453bddb137364d79a793dc5740f in / "
                },
                {
                    "created": "2020-04-23T00:54:26.023603349Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-23T03:37:56.71525997Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-04-23T03:38:12.217565948Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-04-23T03:39:00.943283408Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-04-23T18:13:52.114081966Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-04-23T18:15:40.304752226Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.10",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-23T18:15:55.335592088Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='8a4cbc9f2b95d114c38f6cbe94a45372d48c604b707db2057c787398dfbf8e7f' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='3c581f11ed49eaf0954f62ffebc123f8c392fc536f01c5a44cb38185701101fc' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='f16f19947855b410e48f395ca488bd39223c7b35e8b69c7f15ec00201e20b572' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='233c9d43fe2fab27ee489efea08b84665aec5855cce95a81dba3846636de5fed' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='6b9505388ecafa3cb04d5f51638276b25f7d80c5f70bd74ed72f8013f5006fd9' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='41cb67266e809920363ff620e8cabce152ab54bebd6a337e9f903f5c1996ec35' ;; \t\t*) goRelArch='src'; goRelSha256='eb9ccc8bf59ed068e7eff73e154e4f5ee7eec0a47a610fb864e3332a2fdc8b8c'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-04-23T18:15:57.561926285Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-23T18:15:58.260429616Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-23T18:16:00.329787772Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-04-23T18:16:01.291718099Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:20fccfa1cfe087e001d9e4316ac937fb14d80a84c91fb7df8a5a67b866bc5a13",
                    "sha256:73a67005d833c255c5e563247c6c9f55a78af166c31535dd4c19424cdb353100",
                    "sha256:1e43cf7cfcf40a97477cc78e818699b5d38c46cab4db2e8a17cecae4610663f6",
                    "sha256:d675e09e396a36ba6f24bde934bde1d614d7100eeb1a07868046ee52475f99c1",
                    "sha256:fb5585c375b947d352fba941718d077eda910dc1623ca140fcf0743947dec3d7",
                    "sha256:f3da08b5de9b85b3e7f83ed3c4ae1db384fa888f25c0abfd4990b2f6e501ceef",
                    "sha256:da7077ebf19c7e74105d7f8146575db6bf14d87ad65d11ed2013946e601e975a"
                ]
            }
        },
        "1.13.10-stretch": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:00a59fd1561c554744e7984a420322f7e57c231f398d9839b0c0ea4d53bc546d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "fbeb4f78854ba7ee2159527073c1ca6ba8812b521bb7b2039fcddc6b1e9d22d2",
            "container_config": {
                "Hostname": "fbeb4f78854b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:00a59fd1561c554744e7984a420322f7e57c231f398d9839b0c0ea4d53bc546d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-04-23T18:16:31.193490446Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-04-23T00:58:27.005739669Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4921b222c4914e830c4c018324aed1904bf1526e01493120ddc9c905373b2673 in / "
                },
                {
                    "created": "2020-04-23T00:58:29.601987645Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-23T03:46:01.68973484Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-04-23T03:46:11.794506976Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-04-23T03:46:54.022495319Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-04-23T18:14:52.771050676Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-04-23T18:16:09.465910683Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.10",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-23T18:16:25.901002204Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='8a4cbc9f2b95d114c38f6cbe94a45372d48c604b707db2057c787398dfbf8e7f' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='3c581f11ed49eaf0954f62ffebc123f8c392fc536f01c5a44cb38185701101fc' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='f16f19947855b410e48f395ca488bd39223c7b35e8b69c7f15ec00201e20b572' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='233c9d43fe2fab27ee489efea08b84665aec5855cce95a81dba3846636de5fed' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='6b9505388ecafa3cb04d5f51638276b25f7d80c5f70bd74ed72f8013f5006fd9' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='41cb67266e809920363ff620e8cabce152ab54bebd6a337e9f903f5c1996ec35' ;; \t\t*) goRelArch='src'; goRelSha256='eb9ccc8bf59ed068e7eff73e154e4f5ee7eec0a47a610fb864e3332a2fdc8b8c'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-04-23T18:16:27.641082139Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-23T18:16:28.378412313Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-23T18:16:30.53416384Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-04-23T18:16:31.193490446Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:883b5ed54c8ab4cdf6c2a4d7aaa2f2fd755342cb6d6dd6fe495671a40201512b",
                    "sha256:2938ce8a0b9539a6531cac496ddacf2a68d6d3f889f1de5cdcc35246d7b89cc2",
                    "sha256:f1741016cc31f7db182662d93a6d65aaacb8f94c257fcab57774c5d17007b45b",
                    "sha256:8cd1cc5ebe916a6964bff9038fe2d11efb9e7e4160a299d2334f07f4f9590684",
                    "sha256:2f0241907cecc8579df57596807a721295c3310df6323ba72acd0410d18b4279",
                    "sha256:9d8817baafebe0604f035f6ce4b7265aa862446306f7ecd53a04764bb5db886a",
                    "sha256:cfcf19bf46c5037928f2651dc6885c186190753722de71484aba1c849bbceb75"
                ]
            }
        },
        "1.13.11-alpine": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:5c8ade0ffc71e99cc5ecc5d075a8168d4595d1468ad91daf17a2cc5f339a062f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "2083f6cd0b285532f37ed3d7a733f3e8895a5964c030a22ab79ae0e43cfb6adf",
            "container_config": {
                "Hostname": "2083f6cd0b28",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:5c8ade0ffc71e99cc5ecc5d075a8168d4595d1468ad91daf17a2cc5f339a062f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-05-16T11:46:40.741488944Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-04-24T00:14:18.623777014Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:85ae77bc1e43353ff14e6fe1658be1ed4ecbf4330212ac3d7ab7462add32dd39 in / "
                },
                {
                    "created": "2020-04-24T00:14:21.043191759Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-24T09:30:19.959732843Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-04-24T09:30:22.482603996Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-05-16T11:43:22.441070442Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.11",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-16T11:46:33.057256563Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '89ed1abce25ad003521c125d6583c93c1280de200ad221f961085200a6c00679 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-05-16T11:46:37.769192832Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-16T11:46:38.321135645Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-16T11:46:40.065817927Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-05-16T11:46:40.741488944Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:678a0785e7d29c77c56c1bb0af4b279374e731903506838956f7bc808665a6dd",
                    "sha256:079af829c0db80026b85d242cea6f54d5bd4d8d787d083da9ac0b6ada9e9cabc",
                    "sha256:b2e3f56df73e6b071d861884c1d0400f1dc635e9bc0f217a47886ba2cce82467",
                    "sha256:f806c73d0a99334a1f68289a549cf577951639c3f0f4fa994bb97313dcd8eb5a",
                    "sha256:bdf4ebde0b4a39e41e043b4cf3b585f0b6bdd019d81c5b71410fb82f5c76b95d"
                ]
            }
        },
        "1.13.11-alpine3.10": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9820e9f6ee53116784fe7650bd4932627da01b90b8f11e559b0d68a9db849f2d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "4fcd75e11178fd1762fcfb24f8f2d69e55569f53c48aadb110118d58a0997446",
            "container_config": {
                "Hostname": "4fcd75e11178",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9820e9f6ee53116784fe7650bd4932627da01b90b8f11e559b0d68a9db849f2d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-05-16T11:49:33.313819756Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-04-24T00:14:52.324434922Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:75529f7e83edb6d0457a3b8bbfe33d4e3a12f339c5ace517d0f52dbedd9a146b in / "
                },
                {
                    "created": "2020-04-24T00:14:53.295795467Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-24T09:36:09.462770325Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-04-24T09:36:11.32299018Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-05-16T11:46:58.415686111Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.11",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-16T11:49:21.224205071Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '89ed1abce25ad003521c125d6583c93c1280de200ad221f961085200a6c00679 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-05-16T11:49:30.12244592Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-16T11:49:30.774528455Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-16T11:49:32.55778012Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-05-16T11:49:33.313819756Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:66b385cf80cf7abb99f6a1068b39c7d6255b5fc81544e99b23510edc5e4a1d29",
                    "sha256:30d10fef154d58f561711b09c31c98aa0ef1c24fcb3ae5942447b3fda7ef8b61",
                    "sha256:f378e970a654defd6de7c194e65b924b7200baa1cea96ae2f22edd8ddefd1d96",
                    "sha256:e62dde2c56ea0029d823c7bb61a8a753af733031ca305c1518bb68630309076c",
                    "sha256:6e64a3c23c1b1b3e6bdc71e3be9af4ee2d0e0706f531eff391ffd6d27cc1e0d3"
                ]
            }
        },
        "1.13.11-alpine3.11": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:5c8ade0ffc71e99cc5ecc5d075a8168d4595d1468ad91daf17a2cc5f339a062f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "2083f6cd0b285532f37ed3d7a733f3e8895a5964c030a22ab79ae0e43cfb6adf",
            "container_config": {
                "Hostname": "2083f6cd0b28",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:5c8ade0ffc71e99cc5ecc5d075a8168d4595d1468ad91daf17a2cc5f339a062f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-05-16T11:46:40.741488944Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-04-24T00:14:18.623777014Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:85ae77bc1e43353ff14e6fe1658be1ed4ecbf4330212ac3d7ab7462add32dd39 in / "
                },
                {
                    "created": "2020-04-24T00:14:21.043191759Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-24T09:30:19.959732843Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-04-24T09:30:22.482603996Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-05-16T11:43:22.441070442Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.11",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-16T11:46:33.057256563Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '89ed1abce25ad003521c125d6583c93c1280de200ad221f961085200a6c00679 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-05-16T11:46:37.769192832Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-16T11:46:38.321135645Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-16T11:46:40.065817927Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-05-16T11:46:40.741488944Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:678a0785e7d29c77c56c1bb0af4b279374e731903506838956f7bc808665a6dd",
                    "sha256:079af829c0db80026b85d242cea6f54d5bd4d8d787d083da9ac0b6ada9e9cabc",
                    "sha256:b2e3f56df73e6b071d861884c1d0400f1dc635e9bc0f217a47886ba2cce82467",
                    "sha256:f806c73d0a99334a1f68289a549cf577951639c3f0f4fa994bb97313dcd8eb5a",
                    "sha256:bdf4ebde0b4a39e41e043b4cf3b585f0b6bdd019d81c5b71410fb82f5c76b95d"
                ]
            }
        },
        "1.13.11-buster": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:db3dc7e9f1c16bef7ccae17bad894c3f459628e682a4856b0dec59d43aecc87d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "d3a92495dd6f7c44ba44d2e66dec2324daae36cc555f5f16ca10fb1061982dd4",
            "container_config": {
                "Hostname": "d3a92495dd6f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:db3dc7e9f1c16bef7ccae17bad894c3f459628e682a4856b0dec59d43aecc87d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-05-16T11:42:42.96906053Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-05-15T12:43:21.028577506Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:be06dd722febf4e72f7e626f70029986a5c75880941cabd553f695dd66bcbaff in / "
                },
                {
                    "created": "2020-05-15T12:43:25.251142313Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-15T20:06:10.846144944Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-05-15T20:06:23.186212376Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-05-15T20:07:02.261756643Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-05-16T11:37:09.440686296Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-05-16T11:42:19.53854495Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.11",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-16T11:42:36.377384244Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='a4d71ca9e02923fa96669a4b5faf78ee8331b18e7209b09dd87fe763b4838ada' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='f762f3acdaf2bb8d32041110022104aa430d96c39a8fc9cf3d4ab74faa607fca' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='6c81c0ce79be2bd3ac5ea69c709ea9bd588069632ded4ac39d58dadf4d2f93e6' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='c61ea511a4e82e9a7d31684d33c7b8bbb275e4110490f9a320c8026b76cac4ee' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='d9697e5bcf3a3ac0ba1ff299bb72ffd4957b9893a19a1e65adce683144d795e3' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='076f31fb29aa5129151aaf850593b16b4391157870a15a3f0199554a99db0b9b' ;; \t\t*) goRelArch='src'; goRelSha256='89ed1abce25ad003521c125d6583c93c1280de200ad221f961085200a6c00679'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-05-16T11:42:39.821111667Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-16T11:42:40.503138336Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-16T11:42:42.274358254Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-05-16T11:42:42.96906053Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:dd29fe64f25e46e20c101ba0c038c60721e737e66558d01bdc3f02653812715e",
                    "sha256:e2ad3b65f0b7ad12c0839adcb422bdfb8275ce3e9e4356c72465114964bdf25b",
                    "sha256:5a63f10f3e4fc2ce2228522ae6a8f9cd0aa22056077eb9d7073e0537c7a26d9f",
                    "sha256:6f4bcb5862af61815d4975e79ebc10f26b5250cc649e5537bc4cd96e172098e5",
                    "sha256:a55013f9daf163f8778c3935f5ed2032737c9719d8203f97a34c2a83d29e34b7",
                    "sha256:e031267221ac0991b3496034e06e42ae75ee00d887846e89ce08b6bb87ef6ec2",
                    "sha256:fc6eee515e177fdc5aa655e62e00b639576c07de857d506bda2d308bd92b2e89"
                ]
            }
        },
        "1.13.11-stretch": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:66584305a82d3b3f5a5519de9b690f5607cc38c93e999523a8195d5125cacaa2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "705f3d28ffe4abf5ebe47d27598d18fd31d69200a4c46b6245ad759520277d7c",
            "container_config": {
                "Hostname": "705f3d28ffe4",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:66584305a82d3b3f5a5519de9b690f5607cc38c93e999523a8195d5125cacaa2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-05-16T11:43:14.361748792Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-05-15T12:48:07.658375114Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:251053dbd1ce0b3744de3eecf53a3ef8ccf92ea509678e59800952c3dbd1b32c in / "
                },
                {
                    "created": "2020-05-15T12:48:09.37710902Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-15T20:13:07.338004318Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-05-15T20:13:16.83121253Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-05-15T20:13:59.976392883Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-05-16T11:37:56.911499271Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-05-16T11:42:50.67789007Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.11",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-16T11:43:08.045962302Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='a4d71ca9e02923fa96669a4b5faf78ee8331b18e7209b09dd87fe763b4838ada' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='f762f3acdaf2bb8d32041110022104aa430d96c39a8fc9cf3d4ab74faa607fca' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='6c81c0ce79be2bd3ac5ea69c709ea9bd588069632ded4ac39d58dadf4d2f93e6' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='c61ea511a4e82e9a7d31684d33c7b8bbb275e4110490f9a320c8026b76cac4ee' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='d9697e5bcf3a3ac0ba1ff299bb72ffd4957b9893a19a1e65adce683144d795e3' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='076f31fb29aa5129151aaf850593b16b4391157870a15a3f0199554a99db0b9b' ;; \t\t*) goRelArch='src'; goRelSha256='89ed1abce25ad003521c125d6583c93c1280de200ad221f961085200a6c00679'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-05-16T11:43:11.241949815Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-16T11:43:11.909079507Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-16T11:43:13.693780416Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-05-16T11:43:14.361748792Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:68634def4e88ac2e2d94ff54bf5e71b66bdcd02f84498d804bb58e854cc8107e",
                    "sha256:2c5682d24dabb811be45d39aa1511de5ee28894579e11e1a4a6c55ab823868f2",
                    "sha256:3fc9d26005fcc933caa26bbbae91d6e97c6ff9f75b3988197452f5b83db2932b",
                    "sha256:9ad898f49b05891717538a36fd6ddc4fa748333f49973ebe3b040e7da223948e",
                    "sha256:e6650a01a0914010ac0a722023829c23fa0ed7705b67f547b3a89b800405b844",
                    "sha256:f1a2313c668829237e7de29e0659a1949bd7cadb489abcf0ee8ef6c685c7b3ae",
                    "sha256:515441c0b468124a2cc55b4f1d2f7527683c92023064728b20e72e304a929853"
                ]
            }
        },
        "1.13.12-alpine": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:39eb8c6fd34b62fc819e72cb7db1494856a99a3096830f30218d53cccacba12c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "8947fe6b881a0c64e815616b0bf34a9ea364c23edfe42fe560b654328011f403",
            "container_config": {
                "Hostname": "8947fe6b881a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:39eb8c6fd34b62fc819e72cb7db1494856a99a3096830f30218d53cccacba12c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-06-02T02:19:00.851122634Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-05-29T21:43:19.040389267Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7574aee4e37a85460ab889212d52912723a9b30dda1c060548f0deb4a05fc398 in / "
                },
                {
                    "created": "2020-05-29T21:43:20.806476688Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T01:57:21.455062196Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-06-02T01:58:08.352994569Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-06-02T02:13:18.533200978Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.12",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T02:17:13.587840106Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '17ba2c4de4d78793a21cc659d9907f4356cd9c8de8b7d0899cdedcef712eba34 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-06-02T02:17:33.947509133Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T02:17:44.666339712Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T02:18:42.780770787Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-06-02T02:19:00.851122634Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e2f13739ad415e6f8d9f73253910e4984563a1ec98bd0e0af715fc2c74dfe84b",
                    "sha256:472a1bfdabca804e038c0de19450b89544c73d626a7750d65ed29cb7ded9a01e",
                    "sha256:748b0f102369b9deb5d70340aa4868484fab876b16660e4a87c68991a63b36e6",
                    "sha256:a4142967f5a732f4fdd074b46612aee36b8eaddc07aff28f8de8671eb18752ea",
                    "sha256:301f7fb97bbc3affa75491c3058a2df2c6fc642fa2ab7a98a8d921d09b4b6cbe"
                ]
            }
        },
        "1.13.12-alpine3.11": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b256ea8410fad322d18255414b3a7a4a354d7212865efc055ae952cd81e5b6a0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "0433186cf590f1ea1466cfe18f96b1317da42ac340abeb7e8f955d44eb07de50",
            "container_config": {
                "Hostname": "0433186cf590",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b256ea8410fad322d18255414b3a7a4a354d7212865efc055ae952cd81e5b6a0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-06-02T02:26:36.653770717Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-04-24T00:14:18.623777014Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:85ae77bc1e43353ff14e6fe1658be1ed4ecbf4330212ac3d7ab7462add32dd39 in / "
                },
                {
                    "created": "2020-04-24T00:14:21.043191759Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-24T09:30:19.959732843Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-04-24T09:30:22.482603996Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-06-02T02:19:40.150414978Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.12",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T02:25:20.343121915Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '17ba2c4de4d78793a21cc659d9907f4356cd9c8de8b7d0899cdedcef712eba34 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-06-02T02:25:34.242287813Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T02:25:44.133845505Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T02:26:24.087963961Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-06-02T02:26:36.653770717Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:678a0785e7d29c77c56c1bb0af4b279374e731903506838956f7bc808665a6dd",
                    "sha256:079af829c0db80026b85d242cea6f54d5bd4d8d787d083da9ac0b6ada9e9cabc",
                    "sha256:b2e3f56df73e6b071d861884c1d0400f1dc635e9bc0f217a47886ba2cce82467",
                    "sha256:ccec3acee5e41e33c2722b78011f527868cf799897372ecb6b53b50f85a9299c",
                    "sha256:4d9bf7a6348ed048a6dcab96d975eb08815ea104eac0595cbae6dd2793c5d550"
                ]
            }
        },
        "1.13.12-alpine3.12": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:39eb8c6fd34b62fc819e72cb7db1494856a99a3096830f30218d53cccacba12c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "8947fe6b881a0c64e815616b0bf34a9ea364c23edfe42fe560b654328011f403",
            "container_config": {
                "Hostname": "8947fe6b881a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:39eb8c6fd34b62fc819e72cb7db1494856a99a3096830f30218d53cccacba12c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-06-02T02:19:00.851122634Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-05-29T21:43:19.040389267Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7574aee4e37a85460ab889212d52912723a9b30dda1c060548f0deb4a05fc398 in / "
                },
                {
                    "created": "2020-05-29T21:43:20.806476688Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T01:57:21.455062196Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-06-02T01:58:08.352994569Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-06-02T02:13:18.533200978Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.12",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T02:17:13.587840106Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '17ba2c4de4d78793a21cc659d9907f4356cd9c8de8b7d0899cdedcef712eba34 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-06-02T02:17:33.947509133Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T02:17:44.666339712Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T02:18:42.780770787Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-06-02T02:19:00.851122634Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e2f13739ad415e6f8d9f73253910e4984563a1ec98bd0e0af715fc2c74dfe84b",
                    "sha256:472a1bfdabca804e038c0de19450b89544c73d626a7750d65ed29cb7ded9a01e",
                    "sha256:748b0f102369b9deb5d70340aa4868484fab876b16660e4a87c68991a63b36e6",
                    "sha256:a4142967f5a732f4fdd074b46612aee36b8eaddc07aff28f8de8671eb18752ea",
                    "sha256:301f7fb97bbc3affa75491c3058a2df2c6fc642fa2ab7a98a8d921d09b4b6cbe"
                ]
            }
        },
        "1.13.12-buster": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a49b5be540885eee4b218a24534a997873fd931518dafe9aa1fcad8a7a6a6f22",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "30195c29373037ec6645917155b4bde1e093fb9224672d98d10d1bc9c476f985",
            "container_config": {
                "Hostname": "30195c293730",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a49b5be540885eee4b218a24534a997873fd931518dafe9aa1fcad8a7a6a6f22",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-06-23T21:08:28.321455589Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-06-09T01:51:33.905533524Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:73f1cc6ac15b24788e78ae41cd6c89cb5211d64baf491accbd95b6fe9718f17f in / "
                },
                {
                    "created": "2020-06-09T01:51:36.287378966Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-09T02:31:58.599517678Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-06-09T02:32:17.479060885Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-06-09T02:32:56.298351854Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-06-09T21:55:49.869754429Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-06-23T21:06:02.891284108Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-23T21:08:06.686521731Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.12",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-23T21:08:22.052518016Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='9cacc6653563771b458c13056265aa0c21b8a23ca9408278484e4efde4160618' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='552db731a120d341a1756c6ce0b1029cb5f5c756c09de9f45273893268d19c23' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='7a8b4e7841d978c95dae8ef53e19811ee2d5c595a1c5ec7afed74bb8f71588b8' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='625d9cdb25ba55e1afba9490c79c55767117fa272e067f81643d22268d51308a' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='97d762a62eae2e1f4d89ce09a89407a63e12c22d5c0fb952e409b323927cd38e' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='8dd2d50666176cbe5cab7557081acb0f380cef2240e18d05db7faffc03d8f356' ;; \t\t*) goRelArch='src'; goRelSha256='17ba2c4de4d78793a21cc659d9907f4356cd9c8de8b7d0899cdedcef712eba34'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \t\teval \"$goEnv\"; \t\t[ -n \"$GOOS\" ]; \t\t[ -n \"$GOARCH\" ]; \t\t( \t\t\tcd /usr/local/go/src; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2020-06-23T21:08:24.539088922Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-23T21:08:25.1665429Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-23T21:08:27.510641906Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-06-23T21:08:28.321455589Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:38c9830b1f76ba335fe93eef5e16bb60e2e940fbb51ba9920030bc7b1d28f4e6",
                    "sha256:29eee0a4caab51a6377c4305c026530c7ad92bd6747ef3d9c47f1b31c7361d07",
                    "sha256:5bdb2932c5113ab50bb2a3b01d28354148d8aa3027e2cb6ebe45ce1510b59106",
                    "sha256:5a2680c55d0935cfc1d66f41387a215bf4a75f2e73f96a73eb664a7dcf90dd31",
                    "sha256:a1fcc08aa7dcb4469eb286afa846a16e2a776ff9f3344f04dc80628abdbecd3f",
                    "sha256:08aee56114a2970a65bcd1fc98c88046235f9bd45ea28764fd2b7ed51f8d608e",
                    "sha256:4d671456b94e94af21c58858b5d68c7a5564bc99d39a9702fd8146dffcedabd9"
                ]
            }
        },
        "1.13.12-stretch": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:004d73d7f96117cd39dab05f4b6737d51c3c1507cad2d4f43b492e0a165a7dc3",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "da0a7de0572020413cd9d3ffeb2bf8a648978548a28cc8d45b3911c52c47076c",
            "container_config": {
                "Hostname": "da0a7de05720",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:004d73d7f96117cd39dab05f4b6737d51c3c1507cad2d4f43b492e0a165a7dc3",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-06-23T21:09:01.733133583Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-06-09T01:54:22.787286685Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5cbf00485aed776e940988cadfad6853c640c13635ae54fb2b00aafccfe81a73 in / "
                },
                {
                    "created": "2020-06-09T01:54:25.401427618Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-09T02:39:37.025301899Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-06-09T02:39:50.507016762Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-06-09T02:40:49.435124314Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-06-09T21:57:08.9356416Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-06-23T21:07:07.379671536Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-23T21:08:39.398276569Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.12",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-23T21:08:55.72162226Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='9cacc6653563771b458c13056265aa0c21b8a23ca9408278484e4efde4160618' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='552db731a120d341a1756c6ce0b1029cb5f5c756c09de9f45273893268d19c23' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='7a8b4e7841d978c95dae8ef53e19811ee2d5c595a1c5ec7afed74bb8f71588b8' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='625d9cdb25ba55e1afba9490c79c55767117fa272e067f81643d22268d51308a' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='97d762a62eae2e1f4d89ce09a89407a63e12c22d5c0fb952e409b323927cd38e' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='8dd2d50666176cbe5cab7557081acb0f380cef2240e18d05db7faffc03d8f356' ;; \t\t*) goRelArch='src'; goRelSha256='17ba2c4de4d78793a21cc659d9907f4356cd9c8de8b7d0899cdedcef712eba34'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \t\teval \"$goEnv\"; \t\t[ -n \"$GOOS\" ]; \t\t[ -n \"$GOARCH\" ]; \t\t( \t\t\tcd /usr/local/go/src; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2020-06-23T21:08:58.238537493Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-23T21:08:58.898945832Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-23T21:09:01.070582652Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-06-23T21:09:01.733133583Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:db4e0d4c041076b17076a0be4241dfd49d6b689707e57fc3661675617c1a1f27",
                    "sha256:33c19d48a4f3d4e584c05a8440acabf6a8d85899bc7523bcd1ee6a1a75a3f100",
                    "sha256:bfdc94824303a05d25168e48b9f03a049cfcd0abc3c36d0f910733950f50c68d",
                    "sha256:38a97d5a6ebd6f8676d55bca28cb5db7638a09c2604542f53a1be39b1d8ace02",
                    "sha256:db13d2fe34fbf70e6bc50b62f97dfeaa6b80aa8677d8ff3678b24ffe34f80beb",
                    "sha256:d25187e3fabd0a837772f9043b7b644ff8cfea602d59fdaa15d0ca61ab29119e",
                    "sha256:03b7951b24b95689f52950d4cff54b6c5dc0f31adaeef001f24f75727a2c0b9b"
                ]
            }
        },
        "1.13.13-alpine": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:0060c643af6a78f9db9679573b538f95386a8335b72cd77c73245389597159ff",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "1abc4a180fe140a5c848c336758b0e9cf1c51b217175681526d0b7c48dfde344",
            "container_config": {
                "Hostname": "1abc4a180fe1",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:0060c643af6a78f9db9679573b538f95386a8335b72cd77c73245389597159ff",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-07-14T18:49:35.752182665Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-05-29T21:43:19.040389267Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7574aee4e37a85460ab889212d52912723a9b30dda1c060548f0deb4a05fc398 in / "
                },
                {
                    "created": "2020-05-29T21:43:20.806476688Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T01:57:21.455062196Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-06-02T01:58:08.352994569Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-07-14T18:47:19.377698929Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.13",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-14T18:49:28.550674327Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'ab7e44461e734ce1fd5f4f82c74c6d236e947194d868514d48a2b1ea73d25137 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-07-14T18:49:31.841920378Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-14T18:49:32.481932029Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-14T18:49:34.628546777Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-07-14T18:49:35.752182665Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e2f13739ad415e6f8d9f73253910e4984563a1ec98bd0e0af715fc2c74dfe84b",
                    "sha256:472a1bfdabca804e038c0de19450b89544c73d626a7750d65ed29cb7ded9a01e",
                    "sha256:748b0f102369b9deb5d70340aa4868484fab876b16660e4a87c68991a63b36e6",
                    "sha256:bc23bf4ddd7a31e1c863aa33df0f0a642c4716a702f36e0aa7601d68175be739",
                    "sha256:e8407a9511a99341129fa6e178a27eb54e49aac9489d4f4a251c6ae6df27f95b"
                ]
            }
        },
        "1.13.13-alpine3.11": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:70ba84ffffcec643e5afd73e1e3358d3ed8d86e11409d5f44089aa4f2d1761e4",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "d6ab1fbb0be6500748abca1de45f03de3badc866e204e99966b5e906ef4d0da4",
            "container_config": {
                "Hostname": "d6ab1fbb0be6",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:70ba84ffffcec643e5afd73e1e3358d3ed8d86e11409d5f44089aa4f2d1761e4",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-07-14T18:57:47.231403531Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-04-24T00:14:18.623777014Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:85ae77bc1e43353ff14e6fe1658be1ed4ecbf4330212ac3d7ab7462add32dd39 in / "
                },
                {
                    "created": "2020-04-24T00:14:21.043191759Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-24T09:30:19.959732843Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-04-24T09:30:22.482603996Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-07-14T18:50:10.040174713Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.13",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-14T18:55:29.805257926Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'ab7e44461e734ce1fd5f4f82c74c6d236e947194d868514d48a2b1ea73d25137 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-07-14T18:56:00.040327096Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-14T18:56:14.644836891Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-14T18:57:30.555960675Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-07-14T18:57:47.231403531Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:678a0785e7d29c77c56c1bb0af4b279374e731903506838956f7bc808665a6dd",
                    "sha256:079af829c0db80026b85d242cea6f54d5bd4d8d787d083da9ac0b6ada9e9cabc",
                    "sha256:b2e3f56df73e6b071d861884c1d0400f1dc635e9bc0f217a47886ba2cce82467",
                    "sha256:a5e54d6cd630b1ec33e54b1b67633777e0d19078856b197f944ac6aeacf4eb80",
                    "sha256:f68f6e0e91215b28dd5cf70f6c9eddcfdc906aa1c54b37cf5d1310adc7e8dae2"
                ]
            }
        },
        "1.13.13-alpine3.12": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:0060c643af6a78f9db9679573b538f95386a8335b72cd77c73245389597159ff",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "1abc4a180fe140a5c848c336758b0e9cf1c51b217175681526d0b7c48dfde344",
            "container_config": {
                "Hostname": "1abc4a180fe1",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:0060c643af6a78f9db9679573b538f95386a8335b72cd77c73245389597159ff",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-07-14T18:49:35.752182665Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-05-29T21:43:19.040389267Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7574aee4e37a85460ab889212d52912723a9b30dda1c060548f0deb4a05fc398 in / "
                },
                {
                    "created": "2020-05-29T21:43:20.806476688Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T01:57:21.455062196Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-06-02T01:58:08.352994569Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-07-14T18:47:19.377698929Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.13",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-14T18:49:28.550674327Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'ab7e44461e734ce1fd5f4f82c74c6d236e947194d868514d48a2b1ea73d25137 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-07-14T18:49:31.841920378Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-14T18:49:32.481932029Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-14T18:49:34.628546777Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-07-14T18:49:35.752182665Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e2f13739ad415e6f8d9f73253910e4984563a1ec98bd0e0af715fc2c74dfe84b",
                    "sha256:472a1bfdabca804e038c0de19450b89544c73d626a7750d65ed29cb7ded9a01e",
                    "sha256:748b0f102369b9deb5d70340aa4868484fab876b16660e4a87c68991a63b36e6",
                    "sha256:bc23bf4ddd7a31e1c863aa33df0f0a642c4716a702f36e0aa7601d68175be739",
                    "sha256:e8407a9511a99341129fa6e178a27eb54e49aac9489d4f4a251c6ae6df27f95b"
                ]
            }
        },
        "1.13.13-buster": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9840404a08e5c54818ac482fde387c1cfd692fe366843fbf70d46a1896cf9139",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "11e98b54784bbf7304893fd6408f9f3642567390a532e76a897f7b572db6a74f",
            "container_config": {
                "Hostname": "11e98b54784b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9840404a08e5c54818ac482fde387c1cfd692fe366843fbf70d46a1896cf9139",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-07-14T18:46:44.722111972Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-06-09T01:51:33.905533524Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:73f1cc6ac15b24788e78ae41cd6c89cb5211d64baf491accbd95b6fe9718f17f in / "
                },
                {
                    "created": "2020-06-09T01:51:36.287378966Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-09T02:31:58.599517678Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-06-09T02:32:17.479060885Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-06-09T02:32:56.298351854Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-06-09T21:55:49.869754429Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-06-23T21:06:02.891284108Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-14T18:46:23.991028974Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.13",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-14T18:46:39.578826834Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='0b8573c2335bebef53e819ab8d323456dc2b94838bebdbd8cc6623bb8a6d77b7' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='621081207d4d8549d33e2bc0623e50195152f40f3132327efecaa372f080af55' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='999fcd9090b164062e166523086a54f4152549c41f627ff5ccad3c3ec2da0657' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='efcadf5d927558429ce1156e12943639e0f33d4b5b75919683ec2529ffb8c3e1' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='f816b5ac28322af6692fb61d6e12b11697c4927eec42226ebcf8ef32cee5bf9b' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='333a437e579f7a8e8188c6431eb13f31517d72310b6583d1df69022e09965ce8' ;; \t\t*) goRelArch='src'; goRelSha256='ab7e44461e734ce1fd5f4f82c74c6d236e947194d868514d48a2b1ea73d25137'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \t\teval \"$goEnv\"; \t\t[ -n \"$GOOS\" ]; \t\t[ -n \"$GOARCH\" ]; \t\t( \t\t\tcd /usr/local/go/src; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2020-07-14T18:46:41.814335289Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-14T18:46:42.377913624Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-14T18:46:44.073081712Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-07-14T18:46:44.722111972Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:38c9830b1f76ba335fe93eef5e16bb60e2e940fbb51ba9920030bc7b1d28f4e6",
                    "sha256:29eee0a4caab51a6377c4305c026530c7ad92bd6747ef3d9c47f1b31c7361d07",
                    "sha256:5bdb2932c5113ab50bb2a3b01d28354148d8aa3027e2cb6ebe45ce1510b59106",
                    "sha256:5a2680c55d0935cfc1d66f41387a215bf4a75f2e73f96a73eb664a7dcf90dd31",
                    "sha256:a1fcc08aa7dcb4469eb286afa846a16e2a776ff9f3344f04dc80628abdbecd3f",
                    "sha256:0f230034e1b332f724b8da026f66ca1137d1473398fd366c493cbdd75e0fa10d",
                    "sha256:46d1055228367cf7a2807155cb1785cc8cae74bfd1fb8e40dba19f63ff0e5529"
                ]
            }
        },
        "1.13.13-stretch": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:4ee3d9b50c0db814ddf76ab3905cf20145b116e28f9d7ab12b82a1d596f690eb",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "78ce8d0702b4c6ecb0bc4eea7bb66b807ab3eefb387ab26b1a6ba0acce08e1a3",
            "container_config": {
                "Hostname": "78ce8d0702b4",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:4ee3d9b50c0db814ddf76ab3905cf20145b116e28f9d7ab12b82a1d596f690eb",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-07-14T18:47:12.029441263Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-06-09T01:54:22.787286685Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5cbf00485aed776e940988cadfad6853c640c13635ae54fb2b00aafccfe81a73 in / "
                },
                {
                    "created": "2020-06-09T01:54:25.401427618Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-09T02:39:37.025301899Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-06-09T02:39:50.507016762Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-06-09T02:40:49.435124314Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-06-09T21:57:08.9356416Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-06-23T21:07:07.379671536Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-14T18:46:51.224482605Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.13",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-14T18:47:06.876426472Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='0b8573c2335bebef53e819ab8d323456dc2b94838bebdbd8cc6623bb8a6d77b7' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='621081207d4d8549d33e2bc0623e50195152f40f3132327efecaa372f080af55' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='999fcd9090b164062e166523086a54f4152549c41f627ff5ccad3c3ec2da0657' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='efcadf5d927558429ce1156e12943639e0f33d4b5b75919683ec2529ffb8c3e1' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='f816b5ac28322af6692fb61d6e12b11697c4927eec42226ebcf8ef32cee5bf9b' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='333a437e579f7a8e8188c6431eb13f31517d72310b6583d1df69022e09965ce8' ;; \t\t*) goRelArch='src'; goRelSha256='ab7e44461e734ce1fd5f4f82c74c6d236e947194d868514d48a2b1ea73d25137'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \t\teval \"$goEnv\"; \t\t[ -n \"$GOOS\" ]; \t\t[ -n \"$GOARCH\" ]; \t\t( \t\t\tcd /usr/local/go/src; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2020-07-14T18:47:09.107678924Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-14T18:47:09.658118227Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-14T18:47:11.372054677Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-07-14T18:47:12.029441263Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:db4e0d4c041076b17076a0be4241dfd49d6b689707e57fc3661675617c1a1f27",
                    "sha256:33c19d48a4f3d4e584c05a8440acabf6a8d85899bc7523bcd1ee6a1a75a3f100",
                    "sha256:bfdc94824303a05d25168e48b9f03a049cfcd0abc3c36d0f910733950f50c68d",
                    "sha256:38a97d5a6ebd6f8676d55bca28cb5db7638a09c2604542f53a1be39b1d8ace02",
                    "sha256:db13d2fe34fbf70e6bc50b62f97dfeaa6b80aa8677d8ff3678b24ffe34f80beb",
                    "sha256:7f1de23d97bd41f7e4a9ce35f2f8ff3fa865c6b5936a57a91d6998cb926fe6f9",
                    "sha256:d3773c9ce4dae71f0ac54bd9734fb2d04b836f702e7b82dae886d368770049ce"
                ]
            }
        },
        "1.13.14-alpine": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:38ad9b4f6000aaeb854931676b8ca2162b92bdcd929af968ce88eb92c595318c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "25400e5bbc5a25f16cce19e7e92b98dfc488f2f7aa13dd0860cb45a60e31f42b",
            "container_config": {
                "Hostname": "25400e5bbc5a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:38ad9b4f6000aaeb854931676b8ca2162b92bdcd929af968ce88eb92c595318c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-07-17T03:26:10.282643224Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-05-29T21:43:19.040389267Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7574aee4e37a85460ab889212d52912723a9b30dda1c060548f0deb4a05fc398 in / "
                },
                {
                    "created": "2020-05-29T21:43:20.806476688Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T01:57:21.455062196Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-06-02T01:58:08.352994569Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-07-17T03:19:19.110202837Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.14",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-17T03:24:17.861905795Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '197333e97290e9ea8796f738d61019dcba1c377c2f3961fd6a114918ecc7ab06 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-07-17T03:24:39.683442874Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-17T03:24:57.217975665Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-17T03:25:59.471972105Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-07-17T03:26:10.282643224Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e2f13739ad415e6f8d9f73253910e4984563a1ec98bd0e0af715fc2c74dfe84b",
                    "sha256:472a1bfdabca804e038c0de19450b89544c73d626a7750d65ed29cb7ded9a01e",
                    "sha256:748b0f102369b9deb5d70340aa4868484fab876b16660e4a87c68991a63b36e6",
                    "sha256:1dd640b0a1fa17c4b55b0fddc8a4dc9a79ab949055d7bc2599d8d0e2b12a2ff4",
                    "sha256:74a59b2c7c5445e0a76cbcca6b959d3af66dbaa534b4a7a27bc90785c415edf4"
                ]
            }
        },
        "1.13.14-alpine3.11": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:390d0d50e58271afdba7f0db6858e065bcb9263dfb499f925185314972d24f13",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "2b0f07045e06f4636c9a4c79cde704e41a762d9c12de695fe2c87409e0034f82",
            "container_config": {
                "Hostname": "2b0f07045e06",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:390d0d50e58271afdba7f0db6858e065bcb9263dfb499f925185314972d24f13",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-07-17T03:32:36.976384126Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-04-24T00:14:18.623777014Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:85ae77bc1e43353ff14e6fe1658be1ed4ecbf4330212ac3d7ab7462add32dd39 in / "
                },
                {
                    "created": "2020-04-24T00:14:21.043191759Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-24T09:30:19.959732843Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-04-24T09:30:22.482603996Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-07-17T03:26:32.533156582Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.14",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-17T03:30:57.233712015Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '197333e97290e9ea8796f738d61019dcba1c377c2f3961fd6a114918ecc7ab06 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-07-17T03:31:10.965225459Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-17T03:31:24.799553782Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-17T03:32:27.93671424Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-07-17T03:32:36.976384126Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:678a0785e7d29c77c56c1bb0af4b279374e731903506838956f7bc808665a6dd",
                    "sha256:079af829c0db80026b85d242cea6f54d5bd4d8d787d083da9ac0b6ada9e9cabc",
                    "sha256:b2e3f56df73e6b071d861884c1d0400f1dc635e9bc0f217a47886ba2cce82467",
                    "sha256:7339bc0c9d2d763c85709a63549f46e66c56a113e4be0e7490befa4a7013a5f1",
                    "sha256:59c537928a8a05a9e00c5b80633972d3a1ce7df84410ddd6f2ef3371ea67fa21"
                ]
            }
        },
        "1.13.14-alpine3.12": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:38ad9b4f6000aaeb854931676b8ca2162b92bdcd929af968ce88eb92c595318c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "25400e5bbc5a25f16cce19e7e92b98dfc488f2f7aa13dd0860cb45a60e31f42b",
            "container_config": {
                "Hostname": "25400e5bbc5a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:38ad9b4f6000aaeb854931676b8ca2162b92bdcd929af968ce88eb92c595318c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-07-17T03:26:10.282643224Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-05-29T21:43:19.040389267Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7574aee4e37a85460ab889212d52912723a9b30dda1c060548f0deb4a05fc398 in / "
                },
                {
                    "created": "2020-05-29T21:43:20.806476688Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T01:57:21.455062196Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-06-02T01:58:08.352994569Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-07-17T03:19:19.110202837Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.14",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-17T03:24:17.861905795Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '197333e97290e9ea8796f738d61019dcba1c377c2f3961fd6a114918ecc7ab06 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-07-17T03:24:39.683442874Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-17T03:24:57.217975665Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-17T03:25:59.471972105Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-07-17T03:26:10.282643224Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e2f13739ad415e6f8d9f73253910e4984563a1ec98bd0e0af715fc2c74dfe84b",
                    "sha256:472a1bfdabca804e038c0de19450b89544c73d626a7750d65ed29cb7ded9a01e",
                    "sha256:748b0f102369b9deb5d70340aa4868484fab876b16660e4a87c68991a63b36e6",
                    "sha256:1dd640b0a1fa17c4b55b0fddc8a4dc9a79ab949055d7bc2599d8d0e2b12a2ff4",
                    "sha256:74a59b2c7c5445e0a76cbcca6b959d3af66dbaa534b4a7a27bc90785c415edf4"
                ]
            }
        },
        "1.13.14-buster": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:cead163c8a7528fdc2217189ff675c689b1f4e7b1559d38d242eba740cb8d74f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "0ab9fdb07b70094aba54cfb093e5b3c305acfd3657a87d618fffed445ab08404",
            "container_config": {
                "Hostname": "0ab9fdb07b70",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:cead163c8a7528fdc2217189ff675c689b1f4e7b1559d38d242eba740cb8d74f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-08-05T07:22:00.32415099Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-08-04T06:57:06.460802121Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ce999027b153d392f8a0f85e2e7a17b9279f3cf7ad0e45192378d527275f99c6 in / "
                },
                {
                    "created": "2020-08-04T06:57:08.915443015Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-04T11:10:05.552247836Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-08-04T11:10:17.539042228Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-08-04T11:10:53.648894661Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-08-05T07:19:15.076533344Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-08-05T07:19:17.649744102Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-05T07:21:37.02997417Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.14",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-05T07:21:52.713078513Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='32617db984b18308f2b00279c763bff060d2739229cb8037217a49c9e691b46a' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='1a238daa3cd00611145d66a5577ea57bf90266443d1a2bef076ca74302a02c48' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='ee5f84e3bc0548e4963344a887f684458bec1e5a822d0d413d1c6925b784a16e' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='537bb1769827852673ab96ce5f7676c162bba3d5394e6828733b53b4c9449c11' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='c91a424a4738993d2e77bb0f134ad6c5af1aa5b785f5a3a8a642d50a36de7471' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='8c4cf33742a1374644cbade2db39bbeebf50bb044b2409c48bdf0526f96fcce5' ;; \t\t*) goRelArch='src'; goRelSha256='197333e97290e9ea8796f738d61019dcba1c377c2f3961fd6a114918ecc7ab06'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \t\teval \"$goEnv\"; \t\t[ -n \"$GOOS\" ]; \t\t[ -n \"$GOARCH\" ]; \t\t( \t\t\tcd /usr/local/go/src; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2020-08-05T07:21:55.825287463Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-05T07:21:56.86519098Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-05T07:21:59.451045756Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-08-05T07:22:00.32415099Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:07f1d3c8fd8ac676a02d5265b34507fb91fdd89ba05a834d4ff03934b1390611",
                    "sha256:c9d518b45cb70ebc392d7aee024b2503338285725e68a6fc63634c37bcc8bcaa",
                    "sha256:c5e2074ee091ab7013419433e30a55508ac339e55be1961dc7c7aa88a62c34bd",
                    "sha256:469f78d4c045fe01589a5533bf6f48fd3397c083b726794d6214255ebc505603",
                    "sha256:45a95ba760e41e2bdc435ed641e987ab43f65e6287b602cae8118c909295705d",
                    "sha256:0c908c214d67bdefb8e8665eb665e09ad6fd3a0eb6c4a8a3cc7845f649174716",
                    "sha256:63afcbb505f42e4685c2f52080acb900e32a450d3915113515e9a72df5826d8c"
                ]
            }
        },
        "1.13.14-stretch": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:974b3e6b1f2a290eeee602ea4dcd3ecbc2349296dd761e714c18e753d8c646b9",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "465e5b3d8e85b6be3f308914bfc3c9525b72e306ab5f11d44373e04ea43a7621",
            "container_config": {
                "Hostname": "465e5b3d8e85",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:974b3e6b1f2a290eeee602ea4dcd3ecbc2349296dd761e714c18e753d8c646b9",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-08-05T07:22:34.224692705Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-08-04T06:59:38.790621302Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0a7a65de4c9dc6ea7f7ac97362a47b82a02a45ecab668ddc84cfd011dad26d33 in / "
                },
                {
                    "created": "2020-08-04T06:59:41.020342042Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-04T11:16:35.77869248Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-08-04T11:16:46.146083763Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-08-04T11:17:28.242091388Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-08-05T07:20:50.246113577Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-08-05T07:20:52.077846216Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-05T07:22:08.001504935Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.14",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-05T07:22:25.496054996Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='32617db984b18308f2b00279c763bff060d2739229cb8037217a49c9e691b46a' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='1a238daa3cd00611145d66a5577ea57bf90266443d1a2bef076ca74302a02c48' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='ee5f84e3bc0548e4963344a887f684458bec1e5a822d0d413d1c6925b784a16e' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='537bb1769827852673ab96ce5f7676c162bba3d5394e6828733b53b4c9449c11' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='c91a424a4738993d2e77bb0f134ad6c5af1aa5b785f5a3a8a642d50a36de7471' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='8c4cf33742a1374644cbade2db39bbeebf50bb044b2409c48bdf0526f96fcce5' ;; \t\t*) goRelArch='src'; goRelSha256='197333e97290e9ea8796f738d61019dcba1c377c2f3961fd6a114918ecc7ab06'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \t\teval \"$goEnv\"; \t\t[ -n \"$GOOS\" ]; \t\t[ -n \"$GOARCH\" ]; \t\t( \t\t\tcd /usr/local/go/src; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2020-08-05T07:22:29.632560159Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-05T07:22:30.497450228Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-05T07:22:33.080579691Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-08-05T07:22:34.224692705Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b16667ca674701438aec7239c03cad4e7f543ff9372ef5271da80035283a5d2e",
                    "sha256:4ed8cff05c9a4423a28c9b27dd4d3289c54c0c635f7c0a02855ae93fdb3a1b1e",
                    "sha256:a1da41b5781c6f6f2bd25ab739ed7db9a7a61bf7a7d6b36006f3a6f858e5c347",
                    "sha256:9d88224eb523b7872dc1a272c34b954a431729083787be6e8ea3c54b8ab5c714",
                    "sha256:40e2498ec4dd2ba9b7f885d14eebe0f186959ae250179616aa1aad44b939ac25",
                    "sha256:e3c394146f1263e25391855330238098239f3f736efe8c8446894da97ef8f735",
                    "sha256:e4f96f3d6ef3df6e56489d6f5709b3de426eb293294663cf94729971404d1d4b"
                ]
            }
        },
        "1.13.15-alpine": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c1ca5d4547c7ae90fa725ba86cb5b3476b34009aac5fd206685ded151ecfc461",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "0c0ac7971609e7f74f610a62001cd5517d64a597f3b1b9cf21d9d529e3f21b02",
            "container_config": {
                "Hostname": "0c0ac7971609",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c1ca5d4547c7ae90fa725ba86cb5b3476b34009aac5fd206685ded151ecfc461",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-08-07T00:15:02.479525793Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-05-29T21:43:19.040389267Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7574aee4e37a85460ab889212d52912723a9b30dda1c060548f0deb4a05fc398 in / "
                },
                {
                    "created": "2020-05-29T21:43:20.806476688Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T01:57:21.455062196Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-06-02T01:58:08.352994569Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-08-07T00:08:43.148207505Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.15",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-07T00:13:19.162650377Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '5fb43171046cf8784325e67913d55f88a683435071eef8e9da1aa8a1588fcf5d *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-08-07T00:13:37.733276002Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-07T00:13:52.993600247Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-07T00:14:54.372458923Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-08-07T00:15:02.479525793Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e2f13739ad415e6f8d9f73253910e4984563a1ec98bd0e0af715fc2c74dfe84b",
                    "sha256:472a1bfdabca804e038c0de19450b89544c73d626a7750d65ed29cb7ded9a01e",
                    "sha256:748b0f102369b9deb5d70340aa4868484fab876b16660e4a87c68991a63b36e6",
                    "sha256:59f851b1e610d4987ed388475a9fa53a17c21da18f1894be1fdf9dde564329bb",
                    "sha256:3074d4733426f56a1c33247d0e31b696117061ca69bfc64c3a2c82b4fbcca512"
                ]
            }
        },
        "1.13.15-alpine3.11": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:8b7be23c1245d452f0c763e3dbb8d2073a189a63dff3a7ef0c425365aa23c718",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "338ff999114695976894c07966acf1c340e70e1b02771309c0b63159b6472deb",
            "container_config": {
                "Hostname": "338ff9991146",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:8b7be23c1245d452f0c763e3dbb8d2073a189a63dff3a7ef0c425365aa23c718",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-08-07T00:21:09.093736056Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-04-24T00:14:18.623777014Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:85ae77bc1e43353ff14e6fe1658be1ed4ecbf4330212ac3d7ab7462add32dd39 in / "
                },
                {
                    "created": "2020-04-24T00:14:21.043191759Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-24T09:30:19.959732843Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-04-24T09:30:22.482603996Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-08-07T00:15:20.403329919Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.15",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-07T00:19:55.40559924Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '5fb43171046cf8784325e67913d55f88a683435071eef8e9da1aa8a1588fcf5d *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-08-07T00:20:10.118476752Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-07T00:20:26.485038249Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-07T00:20:52.848574236Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-08-07T00:21:09.093736056Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:678a0785e7d29c77c56c1bb0af4b279374e731903506838956f7bc808665a6dd",
                    "sha256:079af829c0db80026b85d242cea6f54d5bd4d8d787d083da9ac0b6ada9e9cabc",
                    "sha256:b2e3f56df73e6b071d861884c1d0400f1dc635e9bc0f217a47886ba2cce82467",
                    "sha256:56eaf1785c5cb481c383dbe728e18b80b7982e06cbb64ff8159bf88c5f29b758",
                    "sha256:6934aae5c3d3e8fb1cd5fab3de132dc621809dcc2a0f3991c6832480299d7305"
                ]
            }
        },
        "1.13.15-alpine3.12": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c1ca5d4547c7ae90fa725ba86cb5b3476b34009aac5fd206685ded151ecfc461",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "0c0ac7971609e7f74f610a62001cd5517d64a597f3b1b9cf21d9d529e3f21b02",
            "container_config": {
                "Hostname": "0c0ac7971609",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c1ca5d4547c7ae90fa725ba86cb5b3476b34009aac5fd206685ded151ecfc461",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-08-07T00:15:02.479525793Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-05-29T21:43:19.040389267Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7574aee4e37a85460ab889212d52912723a9b30dda1c060548f0deb4a05fc398 in / "
                },
                {
                    "created": "2020-05-29T21:43:20.806476688Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T01:57:21.455062196Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-06-02T01:58:08.352994569Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-08-07T00:08:43.148207505Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.15",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-07T00:13:19.162650377Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '5fb43171046cf8784325e67913d55f88a683435071eef8e9da1aa8a1588fcf5d *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-08-07T00:13:37.733276002Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-07T00:13:52.993600247Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-07T00:14:54.372458923Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-08-07T00:15:02.479525793Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e2f13739ad415e6f8d9f73253910e4984563a1ec98bd0e0af715fc2c74dfe84b",
                    "sha256:472a1bfdabca804e038c0de19450b89544c73d626a7750d65ed29cb7ded9a01e",
                    "sha256:748b0f102369b9deb5d70340aa4868484fab876b16660e4a87c68991a63b36e6",
                    "sha256:59f851b1e610d4987ed388475a9fa53a17c21da18f1894be1fdf9dde564329bb",
                    "sha256:3074d4733426f56a1c33247d0e31b696117061ca69bfc64c3a2c82b4fbcca512"
                ]
            }
        },
        "1.13.15-buster": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:57dd5c99966b4f2a67f2be6b15fbebccaa043bc8299b307c551c9d7f9705ecbb",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "5377c3a24eaa9ac21b4d1cd182a62ec1ea9ea233fa312cddee0b2e68d7923dda",
            "container_config": {
                "Hostname": "5377c3a24eaa",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:57dd5c99966b4f2a67f2be6b15fbebccaa043bc8299b307c551c9d7f9705ecbb",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-08-07T00:03:34.020561594Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-08-04T06:57:06.460802121Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ce999027b153d392f8a0f85e2e7a17b9279f3cf7ad0e45192378d527275f99c6 in / "
                },
                {
                    "created": "2020-08-04T06:57:08.915443015Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-04T11:10:05.552247836Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-08-04T11:10:17.539042228Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-08-04T11:10:53.648894661Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-08-05T07:19:15.076533344Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-08-05T07:19:17.649744102Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-07T00:01:25.932490529Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.15",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-07T00:02:11.956720033Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='01cc3ddf6273900eba3e2bf311238828b7168b822bb57a9ccab4d7aa2acd6028' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='c58eacae1745769e77328aec08e0e3b4da1b4e99e1153046b1b00ae0b3338d42' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='a5c59e3f0aeaf6e939790152a8bfabb91d70c9787afb7aee06aef9bd4411c551' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='1a63e97b6f1a673966d6a4f4f7f9c724fdd68bdeac11425bf8a39c7a24ddc0a7' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='bee55510a87bd366381df0be4736fd5cc89523228f9ca20eb1687f59e80ca029' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='6c370800d470ae116a9521f5439b3fa6271f06a6d4c2a18913c8c6226d78fe4b' ;; \t\t*) goRelArch='src'; goRelSha256='5fb43171046cf8784325e67913d55f88a683435071eef8e9da1aa8a1588fcf5d'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \t\teval \"$goEnv\"; \t\t[ -n \"$GOOS\" ]; \t\t[ -n \"$GOARCH\" ]; \t\t( \t\t\tcd /usr/local/go/src; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2020-08-07T00:02:20.627478526Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-07T00:02:23.217017231Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-07T00:03:25.543079168Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-08-07T00:03:34.020561594Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:07f1d3c8fd8ac676a02d5265b34507fb91fdd89ba05a834d4ff03934b1390611",
                    "sha256:c9d518b45cb70ebc392d7aee024b2503338285725e68a6fc63634c37bcc8bcaa",
                    "sha256:c5e2074ee091ab7013419433e30a55508ac339e55be1961dc7c7aa88a62c34bd",
                    "sha256:469f78d4c045fe01589a5533bf6f48fd3397c083b726794d6214255ebc505603",
                    "sha256:45a95ba760e41e2bdc435ed641e987ab43f65e6287b602cae8118c909295705d",
                    "sha256:d7e8876a7bf45a7da3a8cc71a9f1d351dfa1c918043ce93d6f865eaa23e69820",
                    "sha256:269b4d3883cb64c7a12c49680131edc288053d7c47d8d39aff4b0b8b463b3886"
                ]
            }
        },
        "1.13.15-stretch": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:752e47bedd40a8aa83aa8a90a434e697a320d63b3136286f7580ae40ac5fbec0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "c68a4c26699681829844db68b39ec3c98f99980bc7a0641ab129cf5607be1130",
            "container_config": {
                "Hostname": "c68a4c266996",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:752e47bedd40a8aa83aa8a90a434e697a320d63b3136286f7580ae40ac5fbec0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-08-07T00:08:12.486509529Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-08-04T06:59:38.790621302Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0a7a65de4c9dc6ea7f7ac97362a47b82a02a45ecab668ddc84cfd011dad26d33 in / "
                },
                {
                    "created": "2020-08-04T06:59:41.020342042Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-04T11:16:35.77869248Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-08-04T11:16:46.146083763Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-08-04T11:17:28.242091388Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-08-05T07:20:50.246113577Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-08-05T07:20:52.077846216Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-07T00:04:07.066025519Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.15",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-07T00:05:23.195133893Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='01cc3ddf6273900eba3e2bf311238828b7168b822bb57a9ccab4d7aa2acd6028' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='c58eacae1745769e77328aec08e0e3b4da1b4e99e1153046b1b00ae0b3338d42' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='a5c59e3f0aeaf6e939790152a8bfabb91d70c9787afb7aee06aef9bd4411c551' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='1a63e97b6f1a673966d6a4f4f7f9c724fdd68bdeac11425bf8a39c7a24ddc0a7' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='bee55510a87bd366381df0be4736fd5cc89523228f9ca20eb1687f59e80ca029' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='6c370800d470ae116a9521f5439b3fa6271f06a6d4c2a18913c8c6226d78fe4b' ;; \t\t*) goRelArch='src'; goRelSha256='5fb43171046cf8784325e67913d55f88a683435071eef8e9da1aa8a1588fcf5d'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \t\teval \"$goEnv\"; \t\t[ -n \"$GOOS\" ]; \t\t[ -n \"$GOARCH\" ]; \t\t( \t\t\tcd /usr/local/go/src; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2020-08-07T00:05:47.919613637Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-07T00:06:06.303150144Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-07T00:07:42.623384075Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-08-07T00:08:12.486509529Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b16667ca674701438aec7239c03cad4e7f543ff9372ef5271da80035283a5d2e",
                    "sha256:4ed8cff05c9a4423a28c9b27dd4d3289c54c0c635f7c0a02855ae93fdb3a1b1e",
                    "sha256:a1da41b5781c6f6f2bd25ab739ed7db9a7a61bf7a7d6b36006f3a6f858e5c347",
                    "sha256:9d88224eb523b7872dc1a272c34b954a431729083787be6e8ea3c54b8ab5c714",
                    "sha256:40e2498ec4dd2ba9b7f885d14eebe0f186959ae250179616aa1aad44b939ac25",
                    "sha256:e65ffb84f49df67c8ed5cab015dd72286c54898bfae9a149111a63c1422f5d53",
                    "sha256:785924c0641cc177cd25c404aca03b82e1eb04c58ebab437a55f6df6acbfe5a3"
                ]
            }
        },
        "1.13.2-alpine": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e48c07a77dd12c3ef2bb9a85b2eac9f3862036a651e2d613476b62517d174853",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "e9170375523633ec209e0384a6c984959c31401536605016b0deb0e4c80dc8ef",
            "container_config": {
                "Hostname": "e91703755236",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e48c07a77dd12c3ef2bb9a85b2eac9f3862036a651e2d613476b62517d174853",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-10-18T21:28:03.301691161Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-20T20:39:38.405945347Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:34737804ba78554795d5bcc75621595f8cc3d5b5887887d34e0e021b78e330b7 in / "
                },
                {
                    "created": "2019-08-20T20:39:38.821174355Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T20:56:21.289256818Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-08-20T20:56:22.869691367Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-10-18T21:26:04.228667444Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.2",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T21:27:57.602781855Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '1ea68e01472e4276526902b8817abd65cf84ed921977266f0c11968d5e915f44 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-10-18T21:28:00.75952867Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T21:28:01.190964286Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T21:28:02.752840418Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-10-18T21:28:03.301691161Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5e0d8111135538b8a86ce5fc969849efce16c455fd016bb3dc53131bcedc4da5",
                    "sha256:e3275698b6646fa0bbb59a0c5bcb22674d2098952d972968752905ca92f4c6c7",
                    "sha256:88ee3bd19f4a271e93edadba95c10387ef28c86ebb20c2b2373dad5741bffb77",
                    "sha256:9220865bd8c56f062edc21ce010f5c0e5425872c3cc3d735503f7b6a5fadc156",
                    "sha256:ac63aee311eacde11af709d2587225b2656361a1f599f89b33c45e68ea4963a7"
                ]
            }
        },
        "1.13.2-alpine3.10": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e48c07a77dd12c3ef2bb9a85b2eac9f3862036a651e2d613476b62517d174853",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "e9170375523633ec209e0384a6c984959c31401536605016b0deb0e4c80dc8ef",
            "container_config": {
                "Hostname": "e91703755236",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e48c07a77dd12c3ef2bb9a85b2eac9f3862036a651e2d613476b62517d174853",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-10-18T21:28:03.301691161Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-20T20:39:38.405945347Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:34737804ba78554795d5bcc75621595f8cc3d5b5887887d34e0e021b78e330b7 in / "
                },
                {
                    "created": "2019-08-20T20:39:38.821174355Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T20:56:21.289256818Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-08-20T20:56:22.869691367Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-10-18T21:26:04.228667444Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.2",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T21:27:57.602781855Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '1ea68e01472e4276526902b8817abd65cf84ed921977266f0c11968d5e915f44 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-10-18T21:28:00.75952867Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T21:28:01.190964286Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T21:28:02.752840418Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-10-18T21:28:03.301691161Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5e0d8111135538b8a86ce5fc969849efce16c455fd016bb3dc53131bcedc4da5",
                    "sha256:e3275698b6646fa0bbb59a0c5bcb22674d2098952d972968752905ca92f4c6c7",
                    "sha256:88ee3bd19f4a271e93edadba95c10387ef28c86ebb20c2b2373dad5741bffb77",
                    "sha256:9220865bd8c56f062edc21ce010f5c0e5425872c3cc3d735503f7b6a5fadc156",
                    "sha256:ac63aee311eacde11af709d2587225b2656361a1f599f89b33c45e68ea4963a7"
                ]
            }
        },
        "1.13.2-buster": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6481be2dc3d45b14064e12873c12f38981109f448225ffc94c4c082c6bfd1f3c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "a7363feff538b466e1ae9944b264083e2b9eaf7b66b4e88013d4209cd6d57fdf",
            "container_config": {
                "Hostname": "a7363feff538",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6481be2dc3d45b14064e12873c12f38981109f448225ffc94c4c082c6bfd1f3c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-10-18T21:25:27.076639816Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-10-16T23:40:34.178453259Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4868439e4e9dc7ca054514d800a326f209513653c3060ab702c16aab34caf2a8 in / "
                },
                {
                    "created": "2019-10-16T23:40:36.361535022Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-17T02:11:07.719204398Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-17T02:11:18.24005543Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-10-17T02:11:52.850248491Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-17T21:23:52.97083918Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-18T21:25:01.301339337Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.2",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T21:25:22.245852681Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='293b41a6ccd735eebcfb4094b6931bfd187595555cecf3e4386e9e119220c0b7' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='6f2e90b5d08a177be14938a905f7b91e9b17052318b5ea0e6d7c0a83af252421' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='a2d27f341d6b7968f9da229990aa9ab7a6d4bd1c722945be11576a09eb538482' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='468f116889631405da0c89b1765985e8bbeddbf8642c2a552a81f0bfbe58ab55' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='ffcc3651fce34fc6418e33836d5417c0e6b713fda99033259e67538fa802900a' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='dbed59db3e4f57df7c86120be37bdbf3516891214174b771cff40d81ba8577e2' ;; \t\t*) goRelArch='src'; goRelSha256='1ea68e01472e4276526902b8817abd65cf84ed921977266f0c11968d5e915f44'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-10-18T21:25:24.558731867Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T21:25:25.017170643Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T21:25:26.558160329Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-10-18T21:25:27.076639816Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d620998337cd4e338272532deaf22cbcc0fcec532e5d0d0350b71bb95fdfb4f7",
                    "sha256:358123c8979c0dd31fe3b98ac05bc360676e1cac373fbd2ea16823741c4ae354",
                    "sha256:7f15e4d1dfa35b7067149621f77a83138390ab84f9464a3cc4983b554155cd91",
                    "sha256:31a5f606d930ae4257eccfdcf95c3dc622322837e6eef5ed929bf67c2f54fae0",
                    "sha256:f20c369bb5929591f9a4e429d9a6d1b667af24f66e5df577a6ee706838f691d3",
                    "sha256:5f89d1cb0658cd4bfad3da758d5a1c9070c008adb71159b1e2263ba2d91c1ed4",
                    "sha256:c0bf416312abe3f8aa0eed703e78ad043f460d4e3656272beb8798777f93a3ff"
                ]
            }
        },
        "1.13.2-stretch": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:fac57d94db808d024982c4fa0b1f235e9af895355f4221204485542494c9b828",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "c62f580771bb2c21a562adafd9a6ba0a37ddba3c7c98c0195a5b37fe07988564",
            "container_config": {
                "Hostname": "c62f580771bb",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:fac57d94db808d024982c4fa0b1f235e9af895355f4221204485542494c9b828",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-10-18T21:25:56.598254583Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-10-16T23:43:24.805941998Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c175e46d21fbcd99f833d917807088ceab257f27c16ec31b329be191e90626e0 in / "
                },
                {
                    "created": "2019-10-16T23:43:26.809937467Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-17T02:19:02.730435909Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-17T02:19:13.740616294Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-10-17T02:19:59.163121285Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-17T21:24:38.687614214Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-18T21:25:35.657480004Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.2",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T21:25:51.822952137Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='293b41a6ccd735eebcfb4094b6931bfd187595555cecf3e4386e9e119220c0b7' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='6f2e90b5d08a177be14938a905f7b91e9b17052318b5ea0e6d7c0a83af252421' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='a2d27f341d6b7968f9da229990aa9ab7a6d4bd1c722945be11576a09eb538482' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='468f116889631405da0c89b1765985e8bbeddbf8642c2a552a81f0bfbe58ab55' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='ffcc3651fce34fc6418e33836d5417c0e6b713fda99033259e67538fa802900a' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='dbed59db3e4f57df7c86120be37bdbf3516891214174b771cff40d81ba8577e2' ;; \t\t*) goRelArch='src'; goRelSha256='1ea68e01472e4276526902b8817abd65cf84ed921977266f0c11968d5e915f44'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-10-18T21:25:53.8690328Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T21:25:54.373601254Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T21:25:56.00921447Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-10-18T21:25:56.598254583Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e001e199d3cd748aa182cbfbd0eed3bfd33928b855dff34e55516a2a0f533018",
                    "sha256:6d396da5e1541f8f44d61927f5a7dca6c69828eb54c48d70dcff3e7bafa88b36",
                    "sha256:33d497efb9fea8e81fcef4e893dcac72dc26208bac5d892b8437e93736b557b1",
                    "sha256:188416f548723d45c780455d4125a5d29e65b72fe3da82c56bf84e9d482698f3",
                    "sha256:23a46955f11e779084d7af4a13b61b3b5574cf72cc21a8794d750038b8659256",
                    "sha256:3ee5a2b864ecdfd1af10e1f9ad33c3575c83d66e5c8dbe488684228f04d298b1",
                    "sha256:d37f24d041a000d8febcaf3f3bea7ce6ddda92020fca98ee105ad717850f98d3"
                ]
            }
        },
        "1.13.3-alpine": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:46fd406ec24972766d20f0c05d7acadb8ffe94c24d1ccb6e61e0e11ccd5d2afd",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "daf69956c3082c77d30ddfd31f0461b1d35da379595f4f7097bb1e91ef8a141b",
            "container_config": {
                "Hostname": "daf69956c308",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:46fd406ec24972766d20f0c05d7acadb8ffe94c24d1ccb6e61e0e11ccd5d2afd",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-10-21T20:13:03.109746914Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-10-21T18:07:03.117600212Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:02f4d68afd9e9e303ff893f198d535d0d78c4b2554f299ab2d0955b2bef0e06a in / "
                },
                {
                    "created": "2019-10-21T18:07:09.671538787Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T18:59:13.497484439Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-10-21T18:59:15.253383191Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-10-21T20:10:49.207530616Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.3",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T20:12:55.632797471Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '4f7123044375d5c404280737fbd2d0b17064b66182a65919ffe20ffe8620e3df *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-10-21T20:12:59.606047585Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T20:13:00.173788876Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T20:13:02.322723571Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-10-21T20:13:03.109746914Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:98713a20507f1aad3aa66c7dbad7b0ff777101087c0b6bea75f01b639bb09e2f",
                    "sha256:05bcc5dae4ab2b9477ae7ba8c4b3c62fdb50d65b69442acdf8e8d36c0cb2a1b4",
                    "sha256:52cc6f662e05f85fcbc51bf5fdf53e3e51101e1b46970ed36ed5dcdf6fbd6076",
                    "sha256:247d614792442034e5acbc614e13cabebc70aabfd3d39748776d4805d940840d",
                    "sha256:86291f6e19b322686a6a6451510a1751543831ef8e8594a18a22a6c1a95dd54f"
                ]
            }
        },
        "1.13.3-alpine3.10": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:46fd406ec24972766d20f0c05d7acadb8ffe94c24d1ccb6e61e0e11ccd5d2afd",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "daf69956c3082c77d30ddfd31f0461b1d35da379595f4f7097bb1e91ef8a141b",
            "container_config": {
                "Hostname": "daf69956c308",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:46fd406ec24972766d20f0c05d7acadb8ffe94c24d1ccb6e61e0e11ccd5d2afd",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-10-21T20:13:03.109746914Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-10-21T18:07:03.117600212Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:02f4d68afd9e9e303ff893f198d535d0d78c4b2554f299ab2d0955b2bef0e06a in / "
                },
                {
                    "created": "2019-10-21T18:07:09.671538787Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T18:59:13.497484439Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-10-21T18:59:15.253383191Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-10-21T20:10:49.207530616Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.3",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T20:12:55.632797471Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '4f7123044375d5c404280737fbd2d0b17064b66182a65919ffe20ffe8620e3df *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-10-21T20:12:59.606047585Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T20:13:00.173788876Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T20:13:02.322723571Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-10-21T20:13:03.109746914Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:98713a20507f1aad3aa66c7dbad7b0ff777101087c0b6bea75f01b639bb09e2f",
                    "sha256:05bcc5dae4ab2b9477ae7ba8c4b3c62fdb50d65b69442acdf8e8d36c0cb2a1b4",
                    "sha256:52cc6f662e05f85fcbc51bf5fdf53e3e51101e1b46970ed36ed5dcdf6fbd6076",
                    "sha256:247d614792442034e5acbc614e13cabebc70aabfd3d39748776d4805d940840d",
                    "sha256:86291f6e19b322686a6a6451510a1751543831ef8e8594a18a22a6c1a95dd54f"
                ]
            }
        },
        "1.13.3-buster": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e00fd1f658f82555edaa2cf3bc71a34a27ad392d8bfa3025178dbf620de5099d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "e744f3ba74865336162b7b0a405a9019f8a784aca3e63c7c631e7e0c42642aa2",
            "container_config": {
                "Hostname": "e744f3ba7486",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e00fd1f658f82555edaa2cf3bc71a34a27ad392d8bfa3025178dbf620de5099d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-10-18T04:39:58.682226818Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-10-16T23:40:34.178453259Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4868439e4e9dc7ca054514d800a326f209513653c3060ab702c16aab34caf2a8 in / "
                },
                {
                    "created": "2019-10-16T23:40:36.361535022Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-17T02:11:07.719204398Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-17T02:11:18.24005543Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-10-17T02:11:52.850248491Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-17T21:23:52.97083918Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-18T04:39:37.800899908Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.3",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T04:39:52.479954334Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='0804bf02020dceaa8a7d7275ee79f7a142f1996bfd0c39216ccb405f93f994c0' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='9f15d6aa4098cd53ec5cb48d1a1e554d062b2263a03985d50c2568757d966dc6' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='9fa65ae42665baff53802091b49b83af6f2e397986b6cbea2ae30e2c7ee0f2f2' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='c68ebb127924ee753d05fcd4cc893e3409a6754e8884bb04e5248e9b5849f6ba' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='2373b60d7f7b4825b1d0ec195079833a3dac72ddd55b207ee22b0032b1a658d9' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='9241ce5bf362b7066c90da5abc4c85ec7b4054637e1a8a01b8cc83281e228b7e' ;; \t\t*) goRelArch='src'; goRelSha256='4f7123044375d5c404280737fbd2d0b17064b66182a65919ffe20ffe8620e3df'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-10-18T04:39:55.402686889Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T04:39:56.214937418Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T04:39:57.998310182Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-10-18T04:39:58.682226818Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d620998337cd4e338272532deaf22cbcc0fcec532e5d0d0350b71bb95fdfb4f7",
                    "sha256:358123c8979c0dd31fe3b98ac05bc360676e1cac373fbd2ea16823741c4ae354",
                    "sha256:7f15e4d1dfa35b7067149621f77a83138390ab84f9464a3cc4983b554155cd91",
                    "sha256:31a5f606d930ae4257eccfdcf95c3dc622322837e6eef5ed929bf67c2f54fae0",
                    "sha256:f20c369bb5929591f9a4e429d9a6d1b667af24f66e5df577a6ee706838f691d3",
                    "sha256:6b836db250cdf2f8527fb6f0074b5f19295f4612fb78e6451c871009f3e2b436",
                    "sha256:278c156e1b2b71340fcc13dfbe8250e98dbfe0be709bba616a44ac55b855e55d"
                ]
            }
        },
        "1.13.3-stretch": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:62c76f23217d98daeede73ad554c566f99e7c5f58e4b0994be656411bf3326e4",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "fbb333e1e90f6ceff05a7963177145da75d74cd1d2d4cfb87c15a1925e911387",
            "container_config": {
                "Hostname": "fbb333e1e90f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:62c76f23217d98daeede73ad554c566f99e7c5f58e4b0994be656411bf3326e4",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-10-18T04:40:27.63761513Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-10-16T23:43:24.805941998Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c175e46d21fbcd99f833d917807088ceab257f27c16ec31b329be191e90626e0 in / "
                },
                {
                    "created": "2019-10-16T23:43:26.809937467Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-17T02:19:02.730435909Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-17T02:19:13.740616294Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-10-17T02:19:59.163121285Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-17T21:24:38.687614214Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-18T04:40:06.85758599Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.3",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T04:40:22.591527982Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='0804bf02020dceaa8a7d7275ee79f7a142f1996bfd0c39216ccb405f93f994c0' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='9f15d6aa4098cd53ec5cb48d1a1e554d062b2263a03985d50c2568757d966dc6' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='9fa65ae42665baff53802091b49b83af6f2e397986b6cbea2ae30e2c7ee0f2f2' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='c68ebb127924ee753d05fcd4cc893e3409a6754e8884bb04e5248e9b5849f6ba' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='2373b60d7f7b4825b1d0ec195079833a3dac72ddd55b207ee22b0032b1a658d9' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='9241ce5bf362b7066c90da5abc4c85ec7b4054637e1a8a01b8cc83281e228b7e' ;; \t\t*) goRelArch='src'; goRelSha256='4f7123044375d5c404280737fbd2d0b17064b66182a65919ffe20ffe8620e3df'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-10-18T04:40:25.125995924Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T04:40:25.609404821Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T04:40:27.048365095Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-10-18T04:40:27.63761513Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e001e199d3cd748aa182cbfbd0eed3bfd33928b855dff34e55516a2a0f533018",
                    "sha256:6d396da5e1541f8f44d61927f5a7dca6c69828eb54c48d70dcff3e7bafa88b36",
                    "sha256:33d497efb9fea8e81fcef4e893dcac72dc26208bac5d892b8437e93736b557b1",
                    "sha256:188416f548723d45c780455d4125a5d29e65b72fe3da82c56bf84e9d482698f3",
                    "sha256:23a46955f11e779084d7af4a13b61b3b5574cf72cc21a8794d750038b8659256",
                    "sha256:77a32efdd9c96c1db3efc7eda693e49428153540c37b57eb21356308b1f5592d",
                    "sha256:1cae5252e37458356c0396c85ebeaf7cf1edecc4f7d094b57d8c6519f74c6408"
                ]
            }
        },
        "1.13.4-alpine": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ad1263a476e74e56bf0f8feec93c6dd781be437386f599d46dfe39a0ca89028f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "ae095a95e00c6156a14690ddca37d8fb59ffe3fb7110f681636114420681f43c",
            "container_config": {
                "Hostname": "ae095a95e00c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ad1263a476e74e56bf0f8feec93c6dd781be437386f599d46dfe39a0ca89028f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-11-01T20:43:24.271528761Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-10-21T18:07:03.117600212Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:02f4d68afd9e9e303ff893f198d535d0d78c4b2554f299ab2d0955b2bef0e06a in / "
                },
                {
                    "created": "2019-10-21T18:07:09.671538787Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T18:59:13.497484439Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-10-21T18:59:15.253383191Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-11-01T20:41:20.28884914Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.4",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-01T20:43:18.957144621Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '95dbeab442ee2746b9acf0934c8e2fc26414a0565c008631b04addb8c02e7624 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-11-01T20:43:21.686470987Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-01T20:43:22.177263516Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-01T20:43:23.665146519Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-11-01T20:43:24.271528761Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:98713a20507f1aad3aa66c7dbad7b0ff777101087c0b6bea75f01b639bb09e2f",
                    "sha256:05bcc5dae4ab2b9477ae7ba8c4b3c62fdb50d65b69442acdf8e8d36c0cb2a1b4",
                    "sha256:52cc6f662e05f85fcbc51bf5fdf53e3e51101e1b46970ed36ed5dcdf6fbd6076",
                    "sha256:b904f93266d2ff7c9123bb03fbdd576570a83a4fc74ae47c689a65f8e790b2ac",
                    "sha256:2d0d43a770dd90ec9746deb02cc509a94ca0ffae1ca797b825d96bb4a0fdb8ed"
                ]
            }
        },
        "1.13.4-alpine3.10": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ad1263a476e74e56bf0f8feec93c6dd781be437386f599d46dfe39a0ca89028f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "ae095a95e00c6156a14690ddca37d8fb59ffe3fb7110f681636114420681f43c",
            "container_config": {
                "Hostname": "ae095a95e00c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ad1263a476e74e56bf0f8feec93c6dd781be437386f599d46dfe39a0ca89028f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-11-01T20:43:24.271528761Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-10-21T18:07:03.117600212Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:02f4d68afd9e9e303ff893f198d535d0d78c4b2554f299ab2d0955b2bef0e06a in / "
                },
                {
                    "created": "2019-10-21T18:07:09.671538787Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T18:59:13.497484439Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-10-21T18:59:15.253383191Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-11-01T20:41:20.28884914Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.4",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-01T20:43:18.957144621Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '95dbeab442ee2746b9acf0934c8e2fc26414a0565c008631b04addb8c02e7624 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-11-01T20:43:21.686470987Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-01T20:43:22.177263516Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-01T20:43:23.665146519Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-11-01T20:43:24.271528761Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:98713a20507f1aad3aa66c7dbad7b0ff777101087c0b6bea75f01b639bb09e2f",
                    "sha256:05bcc5dae4ab2b9477ae7ba8c4b3c62fdb50d65b69442acdf8e8d36c0cb2a1b4",
                    "sha256:52cc6f662e05f85fcbc51bf5fdf53e3e51101e1b46970ed36ed5dcdf6fbd6076",
                    "sha256:b904f93266d2ff7c9123bb03fbdd576570a83a4fc74ae47c689a65f8e790b2ac",
                    "sha256:2d0d43a770dd90ec9746deb02cc509a94ca0ffae1ca797b825d96bb4a0fdb8ed"
                ]
            }
        },
        "1.13.4-buster": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:44e63c30376eabba77b8e88334494a9a5c016bf8ffcbcc31f2777142bd13edf0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "c4784da9c0635a1e95f8d309cea062df4cb71f87bcaae23095acfe710531392f",
            "container_config": {
                "Hostname": "c4784da9c063",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:44e63c30376eabba77b8e88334494a9a5c016bf8ffcbcc31f2777142bd13edf0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-11-23T21:36:48.725333554Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-11-22T13:41:25.179816976Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9f9eea5881797502bfab12007544d80607c25d2748eeeba94c931d9e83b82ca9 in / "
                },
                {
                    "created": "2019-11-22T13:41:29.270974168Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-22T20:12:21.254265435Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-11-22T20:12:36.760289795Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-11-22T20:13:25.577033496Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-11-23T21:36:29.357057363Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-11-23T21:36:30.923399277Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.4",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-23T21:36:43.279815466Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='692d17071736f74be04a72a06dab9cac1cd759377bd85316e52b2227604c004c' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='9f76e6353c9ae2dcad1731b7239531eb8be2fe171f29f2a9c5040945a930fd41' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='8b8d99eb07206f082468fb4d0ec962a819ae45d54065fc1ed6e2c502e774aaf0' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='497934398ca57c7c207ce3388f099823923b4c7b74394d6ed64cd2d3751aecb8' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='815bf3c7100e73cfac50c4a07c8eeb4b0458a49ffa0e13a74a6cf7ad8e2a6499' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='efc6947e8eb0a6409f4c8ba62b00ae4e54404064bc221df1b73364a95945a350' ;; \t\t*) goRelArch='src'; goRelSha256='95dbeab442ee2746b9acf0934c8e2fc26414a0565c008631b04addb8c02e7624'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-11-23T21:36:45.636028131Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-23T21:36:46.239019175Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-23T21:36:47.849832039Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-11-23T21:36:48.725333554Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:81ce056350092ba28128dce7c2b11bb58f3ff3b43b77a47796dedd397de9ab7e",
                    "sha256:d64a7189de6ca4945e7f99e308a82b0c74daeae0850b3b7f3e9dbd92a93332b2",
                    "sha256:8c3e82a614233f72faaadb2e4b778cd7ca5ade8abb7e2b42d5f22c2e47c4dfc0",
                    "sha256:fe956dba89a1c4d7f7b32c8fb86825344628e0e76f43a3499f8bebccf69ca9f6",
                    "sha256:4a03c237f3c73a45fd222badd6a683725bb1c8d36c7584f1f82646b01d1e962f",
                    "sha256:4cf761d615755a516bee8a9c0d14a7dfd125fa502bc6687092d89028602a9235",
                    "sha256:6d0e436fe72c815766f0134020b7e0f678e7d64445e0cf12616752d8fb501ed2"
                ]
            }
        },
        "1.13.4-stretch": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a2e07548bed9f03c1f6376e0f5fcae2e28e01dbd180917ac240a45693757e753",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "2fe83565ee9d093fcdff6772d28f555ec1b9e19308b147aecf2ce73617ef53ba",
            "container_config": {
                "Hostname": "2fe83565ee9d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a2e07548bed9f03c1f6376e0f5fcae2e28e01dbd180917ac240a45693757e753",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-11-23T21:37:39.377171509Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-11-22T13:45:17.685758738Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ad8ecaf59c4f4c76dd6d93f5efff4420e3b55b36937eb36df317c7cd9ba19aeb in / "
                },
                {
                    "created": "2019-11-22T13:45:20.981834037Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-22T20:21:54.953915488Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-11-22T20:22:05.895610411Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-11-22T20:22:56.035755144Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-11-23T21:37:17.430933934Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-11-23T21:37:18.925321934Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.4",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-23T21:37:32.366597304Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='692d17071736f74be04a72a06dab9cac1cd759377bd85316e52b2227604c004c' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='9f76e6353c9ae2dcad1731b7239531eb8be2fe171f29f2a9c5040945a930fd41' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='8b8d99eb07206f082468fb4d0ec962a819ae45d54065fc1ed6e2c502e774aaf0' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='497934398ca57c7c207ce3388f099823923b4c7b74394d6ed64cd2d3751aecb8' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='815bf3c7100e73cfac50c4a07c8eeb4b0458a49ffa0e13a74a6cf7ad8e2a6499' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='efc6947e8eb0a6409f4c8ba62b00ae4e54404064bc221df1b73364a95945a350' ;; \t\t*) goRelArch='src'; goRelSha256='95dbeab442ee2746b9acf0934c8e2fc26414a0565c008631b04addb8c02e7624'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-11-23T21:37:35.775878939Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-23T21:37:36.573638891Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-23T21:37:38.44660667Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-11-23T21:37:39.377171509Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5e782327f9ec116944598b1dd2a92f3e63f99c74e367e2633d129afd5017a7f3",
                    "sha256:4d2c12b74fdf5e262e71edffd5dbf473a7f96d18fd69730a9f71014b717cbe7f",
                    "sha256:b0cdd9568efdbcbe4f9ace657174df7ff2736fe5f29e67d1505706bde97b9c41",
                    "sha256:37bdeb28835a3782d4a8c547503b8f27e084763dc3e5155b8f46c7605c807548",
                    "sha256:c48ef88ab780479a4542cd3d0491f300926c61ad3b96ff214cf1d00d7ce69288",
                    "sha256:9b2c61beedfe70829a17dc2787a2596a625768a75a0d33054f982382a35bc5c9",
                    "sha256:3c6b8a18a1abcfb8b80d8aabdfcec2d556e9bc7d7b53d9bdf5124e23dccde332"
                ]
            }
        },
        "1.13.5-alpine": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:5d790b1379f1638be8f833f19adee75c593e9bdd6e0b4ed011ce0164dc978cca",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "6970e5aa63aad5599d8174d4150653549497684927168f2a4a9976dd23b7062f",
            "container_config": {
                "Hostname": "6970e5aa63aa",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:5d790b1379f1638be8f833f19adee75c593e9bdd6e0b4ed011ce0164dc978cca",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-12-26T21:49:19.491756089Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-12-24T20:26:15.216647584Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d6c3db0313ab0c6201770c7248d1bac964011a1c08f1a9b434442b7c21efef87 in / "
                },
                {
                    "created": "2019-12-24T20:26:24.654731415Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-26T21:44:17.280943534Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-12-26T21:44:19.843644131Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-12-26T21:47:07.561736137Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.5",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-26T21:49:03.826460215Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '27d356e2a0b30d9983b60a788cf225da5f914066b37a6b4f69d457ba55a626ff *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-12-26T21:49:11.562478348Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-26T21:49:13.84144661Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-26T21:49:17.785528592Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-12-26T21:49:19.491756089Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9254d5c5e258a0b5bc17c41d8361c96ff6644d1c79cde403e7fe58630f69cb53",
                    "sha256:9465fe46b587835e864106cf78456e7f20b5582413fef6f460b9d8679e827b65",
                    "sha256:d0c521a5787097a81d4e912aed3b329c80704d50a1044a3872e191e0c3fea925",
                    "sha256:0425bc532c40a8099faebbf2b1cc162b6b87bd88e22e5f6db574e0a7b88367e5",
                    "sha256:869301a99bc46723e0a0ea83b31eadecb24484474bcbd9a2b8984e691d3ee0c6"
                ]
            }
        },
        "1.13.5-alpine3.10": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1bebbc2b3aa0d3d92aae0f9ca701477f2c6ccd2456bbf43757467dad4db6e848",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "5965de5e9fe85f8f5683d42320319f6835698a04a1dec1568f536c9ae2a2d97a",
            "container_config": {
                "Hostname": "5965de5e9fe8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1bebbc2b3aa0d3d92aae0f9ca701477f2c6ccd2456bbf43757467dad4db6e848",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-12-26T21:52:04.201556836Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-10-21T18:07:03.117600212Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:02f4d68afd9e9e303ff893f198d535d0d78c4b2554f299ab2d0955b2bef0e06a in / "
                },
                {
                    "created": "2019-10-21T18:07:09.671538787Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T18:59:13.497484439Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-10-21T18:59:15.253383191Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-12-05T22:40:55.997683863Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.5",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-26T21:51:55.744008937Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '27d356e2a0b30d9983b60a788cf225da5f914066b37a6b4f69d457ba55a626ff *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-12-26T21:51:58.97631759Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-26T21:52:00.184034599Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-26T21:52:02.929895701Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-12-26T21:52:04.201556836Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:98713a20507f1aad3aa66c7dbad7b0ff777101087c0b6bea75f01b639bb09e2f",
                    "sha256:05bcc5dae4ab2b9477ae7ba8c4b3c62fdb50d65b69442acdf8e8d36c0cb2a1b4",
                    "sha256:52cc6f662e05f85fcbc51bf5fdf53e3e51101e1b46970ed36ed5dcdf6fbd6076",
                    "sha256:e249bcb3acb1f3302378ba77eb3e0a618d93219ec5dd82ceb54c512f7bb0be6f",
                    "sha256:1e0dbba6bc390b834570ae43edae75c55acad385c305a7b3134bccd9a2a9ed3c"
                ]
            }
        },
        "1.13.5-alpine3.11": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:5d790b1379f1638be8f833f19adee75c593e9bdd6e0b4ed011ce0164dc978cca",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "6970e5aa63aad5599d8174d4150653549497684927168f2a4a9976dd23b7062f",
            "container_config": {
                "Hostname": "6970e5aa63aa",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:5d790b1379f1638be8f833f19adee75c593e9bdd6e0b4ed011ce0164dc978cca",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-12-26T21:49:19.491756089Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-12-24T20:26:15.216647584Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d6c3db0313ab0c6201770c7248d1bac964011a1c08f1a9b434442b7c21efef87 in / "
                },
                {
                    "created": "2019-12-24T20:26:24.654731415Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-26T21:44:17.280943534Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-12-26T21:44:19.843644131Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-12-26T21:47:07.561736137Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.5",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-26T21:49:03.826460215Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '27d356e2a0b30d9983b60a788cf225da5f914066b37a6b4f69d457ba55a626ff *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-12-26T21:49:11.562478348Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-26T21:49:13.84144661Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-26T21:49:17.785528592Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-12-26T21:49:19.491756089Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9254d5c5e258a0b5bc17c41d8361c96ff6644d1c79cde403e7fe58630f69cb53",
                    "sha256:9465fe46b587835e864106cf78456e7f20b5582413fef6f460b9d8679e827b65",
                    "sha256:d0c521a5787097a81d4e912aed3b329c80704d50a1044a3872e191e0c3fea925",
                    "sha256:0425bc532c40a8099faebbf2b1cc162b6b87bd88e22e5f6db574e0a7b88367e5",
                    "sha256:869301a99bc46723e0a0ea83b31eadecb24484474bcbd9a2b8984e691d3ee0c6"
                ]
            }
        },
        "1.13.5-buster": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:63fd5441aae660f5ac35243bdab64ee25a631b39ef3017b03a2290c3b8d784f7",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "420e8c8b07a795a9d582354e112f032a06bd8903308b45d1283dc177c047d40d",
            "container_config": {
                "Hostname": "420e8c8b07a7",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:63fd5441aae660f5ac35243bdab64ee25a631b39ef3017b03a2290c3b8d784f7",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-12-29T00:20:26.522928298Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-12-28T04:40:41.417190599Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:88b3d02fc98aa9138e694bee7d5d1b61b295e4a1c7fae399bf24e52eeff7a5ae in / "
                },
                {
                    "created": "2019-12-28T04:40:45.849315772Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-28T06:04:54.975198193Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-12-28T06:05:07.359590324Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-12-28T06:05:57.542171616Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-12-29T00:19:08.405193157Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-12-29T00:19:59.208698203Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.5",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-29T00:20:19.114097986Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='512103d7ad296467814a6e3f635631bd35574cab3369a97a323c9a585ccaa569' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='26259f61d52ee2297b1e8feef3a0fc82144b666a2b95512402c31cc49713c133' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='227b718923e20c846460bbecddde9cb86bad73acc5fb6f8e1a96b81b5c84668b' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='3b830fa25f79ab08b476f02c84ea4125f41296b074017b492ac1ff748cf1c7c9' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='292814a5ea42a6fc43e1d1ea61c01334e53959e7ab34de86eb5f6efa9742afb6' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='cfbb2959f243880abd1e2efd85d798b8d7ae4a502ab87c4b722c1bd3541e5dc3' ;; \t\t*) goRelArch='src'; goRelSha256='27d356e2a0b30d9983b60a788cf225da5f914066b37a6b4f69d457ba55a626ff'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-12-29T00:20:21.973441739Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-29T00:20:22.886932921Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-29T00:20:25.431416635Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-12-29T00:20:26.522928298Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:74c95512dcb466d4ad12ac39bb52dcccdec6fde1ca1bf2c53b7b5907dea35b60",
                    "sha256:39dedbbdbe04deae313313fb0f132ab8e120d0f4d2d4431706d72761d0e4fc07",
                    "sha256:7a20465dc83355096c0718ddaf2f81dc7f4309c535b007372818a816e8585bfb",
                    "sha256:6cde30c53e8fcc36c506213b8694fb90540239a7e401236d36d2553c9b0439da",
                    "sha256:77fcf8120a7b4d9c13c682fe948add78b373fb40bc1c07b85732a2ae8199465a",
                    "sha256:9aba325b60fc3e12396fd8d2e348cd6f99ff24e5cc0e7131c90b7f417db48fa6",
                    "sha256:45fde3786ec8eca6a5b0208961f173a3c5d59b2ce34e0d34b66148d4c19f851d"
                ]
            }
        },
        "1.13.5-stretch": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:45a304f5e2b7838b5690bc05d70aa56e5fac3391d2afb4f9c829c4a6ad21f9b6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "14fdfb30b8c38fa7645d6b08ddf6916673dc5dd0201465a2ed2832cc99b769f5",
            "container_config": {
                "Hostname": "14fdfb30b8c3",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:45a304f5e2b7838b5690bc05d70aa56e5fac3391d2afb4f9c829c4a6ad21f9b6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-12-29T00:21:22.425219888Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-12-28T04:43:15.415123666Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e439b3c387852978811a6a5a058745ebb9392da7e8936beb4f37ff076e656213 in / "
                },
                {
                    "created": "2019-12-28T04:43:17.745557273Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-28T06:15:19.920748807Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-12-28T06:15:34.784029632Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-12-28T06:16:19.124757771Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-12-29T00:20:59.103115824Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-12-29T00:21:02.356233266Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.5",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-29T00:21:16.487384715Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='512103d7ad296467814a6e3f635631bd35574cab3369a97a323c9a585ccaa569' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='26259f61d52ee2297b1e8feef3a0fc82144b666a2b95512402c31cc49713c133' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='227b718923e20c846460bbecddde9cb86bad73acc5fb6f8e1a96b81b5c84668b' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='3b830fa25f79ab08b476f02c84ea4125f41296b074017b492ac1ff748cf1c7c9' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='292814a5ea42a6fc43e1d1ea61c01334e53959e7ab34de86eb5f6efa9742afb6' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='cfbb2959f243880abd1e2efd85d798b8d7ae4a502ab87c4b722c1bd3541e5dc3' ;; \t\t*) goRelArch='src'; goRelSha256='27d356e2a0b30d9983b60a788cf225da5f914066b37a6b4f69d457ba55a626ff'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-12-29T00:21:19.658296631Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-29T00:21:20.161909844Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-29T00:21:21.789956983Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-12-29T00:21:22.425219888Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f319319793e051d91227c0cccc5ea1a64e09158c273afebb8dcf13b2d397ea1b",
                    "sha256:8707682948834dcbc88cbb20b741486f66bac54baa0f8392f0ac8947d1fe091c",
                    "sha256:33b482d3030f4403e7c29087ed11059b39e585d2b9a6f70d2d4aa428b44a7442",
                    "sha256:bae4fdae8c7da6273f2520703b4ac1c898f4eacef1017a907f48d08768317fcd",
                    "sha256:bbce16622ff2c51394dd03ca8f29bd26045206bb42bcf4542145e4aa7505d022",
                    "sha256:2f0178c8800541ff852c3042475b3f5ddc1eaf7fde7bcbfce3569ec81c3997ce",
                    "sha256:65669b74d8524a9b3e08a7abb7411e8e08d0599776948da72c40e72232fb5994"
                ]
            }
        },
        "1.13.6-alpine": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:25ff063a9c9a4f72cc5c412061c5f16e2a2d154a91ceb7d37ddf1b6f00b2bcaf",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "e16d23e00ad8cf768c7453a076273d3cad361064c3d15afc3867afd26270b6af",
            "container_config": {
                "Hostname": "e16d23e00ad8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:25ff063a9c9a4f72cc5c412061c5f16e2a2d154a91ceb7d37ddf1b6f00b2bcaf",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-01-18T06:16:30.81013564Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2020-01-18T01:39:43.076306142Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4109fa86dd80850e84c689ff9e6a3243e30ab1bbcc00c765969b3011bfbb43e1 in / "
                },
                {
                    "created": "2020-01-18T01:39:43.809479591Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T06:10:29.605168752Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-01-18T06:10:36.930249136Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-01-18T06:14:04.893634977Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.6",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T06:16:08.530274351Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'aae5be954bdc40bcf8006eb77e8d8a5dde412722bc8effcdaf9772620d06420c *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-01-18T06:16:11.143428767Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T06:16:18.768081385Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T06:16:26.102595907Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-01-18T06:16:30.81013564Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:53745f29fdbf5642c5275f34b9803e69742e082df0a7bb3316ece48ba45c622f",
                    "sha256:9c60a09a3ecd837e13b7a944fdd5b15a2474f2e90c7816d4c28658263fcd525c",
                    "sha256:1e344161583c7ea28934eb5e22d72155510bdd29547dc503702fddac86a9a05f",
                    "sha256:17aa0478963d5e131a2ce9b3ec4dd4e9dcf59a227f70a842b0a1b2ee821918b2",
                    "sha256:0d0e6cd548502f2538cad9f5f1b5fa363a6f2e62a0b86cca638d23a86d8d2bb1"
                ]
            }
        },
        "1.13.6-alpine3.10": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9bc7745c75b847e5085e9532cd670ab58617f9d1049adfd5ee93913c062b17fb",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "3cbdae67f63c1677e7c72c5b9d8ea3212ce380f7455d422773b60e9fe8512c26",
            "container_config": {
                "Hostname": "3cbdae67f63c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9bc7745c75b847e5085e9532cd670ab58617f9d1049adfd5ee93913c062b17fb",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-01-23T17:38:23.068722406Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2020-01-23T16:54:39.663281449Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bdfbd4b0dfb53eecc80bac65894d1e2fcfafb27dcf24ab019176e2c9f60b9a39 in / "
                },
                {
                    "created": "2020-01-23T16:54:40.353281052Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-23T17:36:05.510608107Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-01-23T17:36:07.938033301Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-01-23T17:36:08.646188917Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.6",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-23T17:38:14.307415653Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'aae5be954bdc40bcf8006eb77e8d8a5dde412722bc8effcdaf9772620d06420c *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-01-23T17:38:19.214580259Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-23T17:38:20.335923766Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-23T17:38:22.163550802Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-01-23T17:38:23.068722406Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1aed0a4fa040a4b937e7b74a2e2386e40654c267d166dced87eb80d5a1a0826c",
                    "sha256:f2c832c0a239a603c1482fd9563201da92a86060471bc59a879d2d33043641e0",
                    "sha256:cd9b03c31d86db9cc14d8a724d86f89be4e4b2a05cf3fc5d6458851596fae784",
                    "sha256:0ea09e439351673d247df4a3a8e563f880deefbfe2381cc941dc3adbbb4aefc8",
                    "sha256:73982968af5ec4f4e8e963e9d5c3459ab91ce717d5ee73fdb85658199f08cdbd"
                ]
            }
        },
        "1.13.6-alpine3.11": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:25ff063a9c9a4f72cc5c412061c5f16e2a2d154a91ceb7d37ddf1b6f00b2bcaf",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "e16d23e00ad8cf768c7453a076273d3cad361064c3d15afc3867afd26270b6af",
            "container_config": {
                "Hostname": "e16d23e00ad8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:25ff063a9c9a4f72cc5c412061c5f16e2a2d154a91ceb7d37ddf1b6f00b2bcaf",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-01-18T06:16:30.81013564Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2020-01-18T01:39:43.076306142Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4109fa86dd80850e84c689ff9e6a3243e30ab1bbcc00c765969b3011bfbb43e1 in / "
                },
                {
                    "created": "2020-01-18T01:39:43.809479591Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T06:10:29.605168752Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-01-18T06:10:36.930249136Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-01-18T06:14:04.893634977Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.6",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T06:16:08.530274351Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'aae5be954bdc40bcf8006eb77e8d8a5dde412722bc8effcdaf9772620d06420c *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-01-18T06:16:11.143428767Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T06:16:18.768081385Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T06:16:26.102595907Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-01-18T06:16:30.81013564Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:53745f29fdbf5642c5275f34b9803e69742e082df0a7bb3316ece48ba45c622f",
                    "sha256:9c60a09a3ecd837e13b7a944fdd5b15a2474f2e90c7816d4c28658263fcd525c",
                    "sha256:1e344161583c7ea28934eb5e22d72155510bdd29547dc503702fddac86a9a05f",
                    "sha256:17aa0478963d5e131a2ce9b3ec4dd4e9dcf59a227f70a842b0a1b2ee821918b2",
                    "sha256:0d0e6cd548502f2538cad9f5f1b5fa363a6f2e62a0b86cca638d23a86d8d2bb1"
                ]
            }
        },
        "1.13.6-buster": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:8a2e3f1458b048ee0d20ea8a50185d2161f21e1b6cda0e0c9d46cdcb2eb0fbbd",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "9a22fc3a69c5195415dc24dfc5126b744ed8052bd5e850801e5233e010401569",
            "container_config": {
                "Hostname": "9a22fc3a69c5",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:8a2e3f1458b048ee0d20ea8a50185d2161f21e1b6cda0e0c9d46cdcb2eb0fbbd",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-01-09T23:51:04.954743111Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-12-28T04:40:41.417190599Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:88b3d02fc98aa9138e694bee7d5d1b61b295e4a1c7fae399bf24e52eeff7a5ae in / "
                },
                {
                    "created": "2019-12-28T04:40:45.849315772Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-28T06:04:54.975198193Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-12-28T06:05:07.359590324Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-12-28T06:05:57.542171616Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-12-29T00:19:08.405193157Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-01-09T23:50:24.447015025Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.6",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-09T23:50:42.96378854Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='a1bc06deb070155c4f67c579f896a45eeda5a8fa54f35ba233304074c4abbbbd' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='37a1a83e363dcf146a67fa839d170fd1afb13009585fdd493d0a3370fbe6f785' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='0a18125c4ed80f9c3045cf92384670907c4796b43ed63c4307210fe93e5bbca5' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='27feb013106da784f09e560720aa41ab395c67f7eed4c4a0fce04bc6e3d01c7d' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='26a977a8af5dc50a562f0a57b58dded5fa3bacfe77722cf8a84ea54ca54728dd' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='5cd9900a1fa0f0cac657930b648381cad9b8c5e2bbc77caf86a6fb5cedad0017' ;; \t\t*) goRelArch='src'; goRelSha256='aae5be954bdc40bcf8006eb77e8d8a5dde412722bc8effcdaf9772620d06420c'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-01-09T23:50:57.575008151Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-09T23:50:59.722082721Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-09T23:51:03.858650765Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-01-09T23:51:04.954743111Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:74c95512dcb466d4ad12ac39bb52dcccdec6fde1ca1bf2c53b7b5907dea35b60",
                    "sha256:39dedbbdbe04deae313313fb0f132ab8e120d0f4d2d4431706d72761d0e4fc07",
                    "sha256:7a20465dc83355096c0718ddaf2f81dc7f4309c535b007372818a816e8585bfb",
                    "sha256:6cde30c53e8fcc36c506213b8694fb90540239a7e401236d36d2553c9b0439da",
                    "sha256:77fcf8120a7b4d9c13c682fe948add78b373fb40bc1c07b85732a2ae8199465a",
                    "sha256:4c99ac3a0976280ee40658b4910bacad872c890f857e3b9720c292a4b8f789b6",
                    "sha256:baf374e87567b567bb75dc2486dad994ae6ba99ba350a2af4544af5061a81c39"
                ]
            }
        },
        "1.13.6-stretch": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:300bfb6a1e3b5cf9d58c143f5419a0dfc292e79542b2267dc67d913356716e8d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "fe6c871d53f0873037d2287793672ddd129ebf95b7dcfe9928f75d807f16818e",
            "container_config": {
                "Hostname": "fe6c871d53f0",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:300bfb6a1e3b5cf9d58c143f5419a0dfc292e79542b2267dc67d913356716e8d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-01-09T23:51:52.987808372Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-12-28T04:43:15.415123666Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e439b3c387852978811a6a5a058745ebb9392da7e8936beb4f37ff076e656213 in / "
                },
                {
                    "created": "2019-12-28T04:43:17.745557273Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-28T06:15:19.920748807Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-12-28T06:15:34.784029632Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-12-28T06:16:19.124757771Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-12-29T00:20:59.103115824Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-01-09T23:51:18.395720149Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.6",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-09T23:51:40.661995236Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='a1bc06deb070155c4f67c579f896a45eeda5a8fa54f35ba233304074c4abbbbd' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='37a1a83e363dcf146a67fa839d170fd1afb13009585fdd493d0a3370fbe6f785' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='0a18125c4ed80f9c3045cf92384670907c4796b43ed63c4307210fe93e5bbca5' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='27feb013106da784f09e560720aa41ab395c67f7eed4c4a0fce04bc6e3d01c7d' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='26a977a8af5dc50a562f0a57b58dded5fa3bacfe77722cf8a84ea54ca54728dd' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='5cd9900a1fa0f0cac657930b648381cad9b8c5e2bbc77caf86a6fb5cedad0017' ;; \t\t*) goRelArch='src'; goRelSha256='aae5be954bdc40bcf8006eb77e8d8a5dde412722bc8effcdaf9772620d06420c'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-01-09T23:51:45.497033804Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-09T23:51:47.932770818Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-09T23:51:51.900359548Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-01-09T23:51:52.987808372Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f319319793e051d91227c0cccc5ea1a64e09158c273afebb8dcf13b2d397ea1b",
                    "sha256:8707682948834dcbc88cbb20b741486f66bac54baa0f8392f0ac8947d1fe091c",
                    "sha256:33b482d3030f4403e7c29087ed11059b39e585d2b9a6f70d2d4aa428b44a7442",
                    "sha256:bae4fdae8c7da6273f2520703b4ac1c898f4eacef1017a907f48d08768317fcd",
                    "sha256:bbce16622ff2c51394dd03ca8f29bd26045206bb42bcf4542145e4aa7505d022",
                    "sha256:231e774e2b1315a1373be90b6a1f78dd0ee4523865e242d895d4250baee720e7",
                    "sha256:2d730fce160cff098afeb992d5593817677fe4b0580e67e0ce094ff1279d96c4"
                ]
            }
        },
        "1.13.7-alpine": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:130385b8a4be82a52e86ab78828c3b10f189a1bda0bd71480e656747855f4e29",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "e9f04c03d298ae0882e4eb1772e6be882aba140cb93b075740095de4475e6cf9",
            "container_config": {
                "Hostname": "e9f04c03d298",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:130385b8a4be82a52e86ab78828c3b10f189a1bda0bd71480e656747855f4e29",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-01-28T21:43:25.093732148Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-01-18T01:39:43.076306142Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4109fa86dd80850e84c689ff9e6a3243e30ab1bbcc00c765969b3011bfbb43e1 in / "
                },
                {
                    "created": "2020-01-18T01:39:43.809479591Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T06:10:29.605168752Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-01-18T06:10:36.930249136Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-01-28T21:41:22.22964809Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.7",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-28T21:43:19.513275079Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'e4ad42cc5f5c19521fbbbde3680995f2546110b5c6aa2b48c3754ff7af9b41f4 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-01-28T21:43:22.645143947Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-28T21:43:23.101146167Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-28T21:43:24.538970332Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-01-28T21:43:25.093732148Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:53745f29fdbf5642c5275f34b9803e69742e082df0a7bb3316ece48ba45c622f",
                    "sha256:9c60a09a3ecd837e13b7a944fdd5b15a2474f2e90c7816d4c28658263fcd525c",
                    "sha256:1e344161583c7ea28934eb5e22d72155510bdd29547dc503702fddac86a9a05f",
                    "sha256:b9cd92a2e39c75617e873d2e11516c42ae2414034fac91f233c44834a7b00852",
                    "sha256:05a7bd4258d76093fadb2df3585b8238f0a88c5cb9b4227e0799f60d2fa607de"
                ]
            }
        },
        "1.13.7-alpine3.10": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f30ff53b4bfd3610cd539b71b52464c03c487d52f49cf3088d08ef0ea9d2f893",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "97ac8e143d7ad5b88447c1f3b157fc21c01aa22b80881737d2c89c5dcf950d7d",
            "container_config": {
                "Hostname": "97ac8e143d7a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f30ff53b4bfd3610cd539b71b52464c03c487d52f49cf3088d08ef0ea9d2f893",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-01-28T21:45:39.798334317Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-01-23T16:54:39.663281449Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bdfbd4b0dfb53eecc80bac65894d1e2fcfafb27dcf24ab019176e2c9f60b9a39 in / "
                },
                {
                    "created": "2020-01-23T16:54:40.353281052Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-23T17:36:05.510608107Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-01-23T17:36:07.938033301Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-01-28T21:43:38.22132623Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.7",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-28T21:45:34.114264687Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'e4ad42cc5f5c19521fbbbde3680995f2546110b5c6aa2b48c3754ff7af9b41f4 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-01-28T21:45:37.257972337Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-28T21:45:37.769594828Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-28T21:45:39.269665218Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-01-28T21:45:39.798334317Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1aed0a4fa040a4b937e7b74a2e2386e40654c267d166dced87eb80d5a1a0826c",
                    "sha256:f2c832c0a239a603c1482fd9563201da92a86060471bc59a879d2d33043641e0",
                    "sha256:cd9b03c31d86db9cc14d8a724d86f89be4e4b2a05cf3fc5d6458851596fae784",
                    "sha256:bc99122462d8500102a19fabaa8aa4c2038efb5da8b4918b305fa81b57718fb3",
                    "sha256:072f3e8f238551edbb8ffa2b30a3cfc0542307fda8cad8b36ceaf41aa06572bf"
                ]
            }
        },
        "1.13.7-alpine3.11": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:130385b8a4be82a52e86ab78828c3b10f189a1bda0bd71480e656747855f4e29",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "e9f04c03d298ae0882e4eb1772e6be882aba140cb93b075740095de4475e6cf9",
            "container_config": {
                "Hostname": "e9f04c03d298",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:130385b8a4be82a52e86ab78828c3b10f189a1bda0bd71480e656747855f4e29",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-01-28T21:43:25.093732148Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-01-18T01:39:43.076306142Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4109fa86dd80850e84c689ff9e6a3243e30ab1bbcc00c765969b3011bfbb43e1 in / "
                },
                {
                    "created": "2020-01-18T01:39:43.809479591Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T06:10:29.605168752Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-01-18T06:10:36.930249136Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-01-28T21:41:22.22964809Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.7",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-28T21:43:19.513275079Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'e4ad42cc5f5c19521fbbbde3680995f2546110b5c6aa2b48c3754ff7af9b41f4 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-01-28T21:43:22.645143947Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-28T21:43:23.101146167Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-28T21:43:24.538970332Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-01-28T21:43:25.093732148Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:53745f29fdbf5642c5275f34b9803e69742e082df0a7bb3316ece48ba45c622f",
                    "sha256:9c60a09a3ecd837e13b7a944fdd5b15a2474f2e90c7816d4c28658263fcd525c",
                    "sha256:1e344161583c7ea28934eb5e22d72155510bdd29547dc503702fddac86a9a05f",
                    "sha256:b9cd92a2e39c75617e873d2e11516c42ae2414034fac91f233c44834a7b00852",
                    "sha256:05a7bd4258d76093fadb2df3585b8238f0a88c5cb9b4227e0799f60d2fa607de"
                ]
            }
        },
        "1.13.7-buster": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:915c3f1e6db30f4009b0a93903615bd5d1f932a4aadf500ece04d26a4031ced5",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "2d3c1b2e6b68ab52d4fbf7115f21c49fde7259e9efb71291f5fda1a6aaabbeec",
            "container_config": {
                "Hostname": "2d3c1b2e6b68",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:915c3f1e6db30f4009b0a93903615bd5d1f932a4aadf500ece04d26a4031ced5",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-02T11:10:02.426292071Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-02-01T16:40:50.672557644Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b423f4b0ed41dfe1334031fe9b21f7e1c88ccb031d7e8f2ff165d618323424d7 in / "
                },
                {
                    "created": "2020-02-01T16:40:53.171343122Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-01T17:18:39.317847599Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-01T17:18:51.706437073Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-02-01T17:19:27.114332889Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-02T11:08:58.969394142Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-02T11:09:37.669475607Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.7",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-02T11:09:53.49618061Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='b3dd4bd781a0271b33168e627f7f43886b4c5d1c794a4015abf34e99c6526ca3' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='ff8b870222d82c38a0108810706811dcbd1fcdbddc877789184a0f903cbdf11a' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='8717de6c662ada01b7bf318f5025c046b57f8c10cd39a88268bdc171cc7e4eab' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='93e82683f32d9fe7fda9b686415aeee599a92c4e450b69519bb53e1d62144a85' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='8fe0aeb41e87fd901845c9598f17f1aae90dca25d2d2744e9664c173fbf7f784' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='7d405e515029d19131bae2820310681c31b665178998335ecc4494e8de01dfeb' ;; \t\t*) goRelArch='src'; goRelSha256='e4ad42cc5f5c19521fbbbde3680995f2546110b5c6aa2b48c3754ff7af9b41f4'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-02T11:09:57.406453576Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-02T11:09:58.751715616Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-02T11:10:01.626456948Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-02T11:10:02.426292071Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4c0a780b5c559771bd7939715e552ce5dd7f031b23dfb53bea76d8d303a07f4f",
                    "sha256:53882b0b06b691760199e1c8232da08dfb9a00a7914c4327acdf70a1f243fb79",
                    "sha256:d7c0094a20c8f46e323511c505f15f4bb53f8be0722b763620e2d74935ea4cd4",
                    "sha256:a1c545c647123030790d740c8deb543de50e789258eab2960a43205f442a6882",
                    "sha256:0c9ee1aead43b5e3b0f0edaa5812fed660d61b78e9cce2d53d046bbdd60bdf7e",
                    "sha256:587370ebfe785bf4bf7778143502655bb2ccc39ca0766a44266a50c5a44c2ca3",
                    "sha256:a0678db66f4ccac8693d3718d2d604d2109e0bbc4f78602a39ef160f4987c2e5"
                ]
            }
        },
        "1.13.7-stretch": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f738de5e696ab9c06a9683f89ae34654528325b3c74876deeb3eb28b21046eb6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f062bdae7459be6f733e7bac47774401e8a415e7cf8d0516b59fd7eff4699f60",
            "container_config": {
                "Hostname": "f062bdae7459",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f738de5e696ab9c06a9683f89ae34654528325b3c74876deeb3eb28b21046eb6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-02T11:10:49.725989748Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-02-01T16:43:01.284413168Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:1618e6474dbe6462a610ce7eed99f0bfd087ea37ddfc287bbd69def5c24ede47 in / "
                },
                {
                    "created": "2020-02-01T16:43:02.994039335Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-01T17:29:40.136456721Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-01T17:29:52.862467817Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-02-01T17:30:30.600101397Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-02T11:10:28.164144474Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-02T11:10:29.72613183Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.7",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-02T11:10:44.06253882Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='b3dd4bd781a0271b33168e627f7f43886b4c5d1c794a4015abf34e99c6526ca3' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='ff8b870222d82c38a0108810706811dcbd1fcdbddc877789184a0f903cbdf11a' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='8717de6c662ada01b7bf318f5025c046b57f8c10cd39a88268bdc171cc7e4eab' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='93e82683f32d9fe7fda9b686415aeee599a92c4e450b69519bb53e1d62144a85' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='8fe0aeb41e87fd901845c9598f17f1aae90dca25d2d2744e9664c173fbf7f784' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='7d405e515029d19131bae2820310681c31b665178998335ecc4494e8de01dfeb' ;; \t\t*) goRelArch='src'; goRelSha256='e4ad42cc5f5c19521fbbbde3680995f2546110b5c6aa2b48c3754ff7af9b41f4'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-02T11:10:46.530016873Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-02T11:10:47.130129487Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-02T11:10:48.93889643Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-02T11:10:49.725989748Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b3a6ef74a999da2ed536dd1f8b5295125f78872a00882123d7d80e344f24f646",
                    "sha256:69fc517042bb1cf30e22fcce18abbd4da50d54ac2f76accbe7a083bc1a692c35",
                    "sha256:6db6ab27fb99f39477ca67b4ebae65dbfa6779a359326dabd5abca166c4c5c9b",
                    "sha256:f052fb6fefd44da08bd449d4a49081c17eb7b33e1258db8359d3bd1f8d5606c2",
                    "sha256:4cd9d6cdb137586211460efd96d5117a90bbc331c0adb01d9370ee49d6c014e1",
                    "sha256:29a7dddbe58bbae831270e1d93eb17df6b0af844390e03a2c0337213cbe295fe",
                    "sha256:4036a62ff296eec01749f8ac0241be898ad3716e09dc37aaa512dee5a61515d0"
                ]
            }
        },
        "1.13.8-alpine": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a5865c521c7cb822ef21cc67e4864c713b7fa67937b154e65b25ca39242546f7",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "eb1fcf537a48a979713fd640594e9e2be1fbbe834a063dc0aef8d1e30a463f85",
            "container_config": {
                "Hostname": "eb1fcf537a48",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a5865c521c7cb822ef21cc67e4864c713b7fa67937b154e65b25ca39242546f7",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-14T00:45:57.142501821Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-01-18T01:39:43.076306142Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4109fa86dd80850e84c689ff9e6a3243e30ab1bbcc00c765969b3011bfbb43e1 in / "
                },
                {
                    "created": "2020-01-18T01:39:43.809479591Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T06:10:29.605168752Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-01-18T06:10:36.930249136Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-02-14T00:43:53.473639466Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.8",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T00:45:51.604056803Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'b13bf04633d4d8cf53226ebeaace8d4d2fd07ae6fa676d0844a688339debec34 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-14T00:45:54.489973588Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T00:45:54.994188186Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T00:45:56.558262188Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-14T00:45:57.142501821Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:53745f29fdbf5642c5275f34b9803e69742e082df0a7bb3316ece48ba45c622f",
                    "sha256:9c60a09a3ecd837e13b7a944fdd5b15a2474f2e90c7816d4c28658263fcd525c",
                    "sha256:1e344161583c7ea28934eb5e22d72155510bdd29547dc503702fddac86a9a05f",
                    "sha256:eeec5f2f38fa68dc76770da68dfdd535dcf575c60cd929ac18b9e728f9dabc17",
                    "sha256:d21c1d6e517e62f744cc547d883e6ae1f92752ef38baadeb0588bd1a32104e4a"
                ]
            }
        },
        "1.13.8-alpine3.10": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:54f708fac0c44885a24d7e830bf9d7acc3a5bb4e9d0dc35bc2a32fc39b6c5741",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "864892ed15df8dac1fbfb47c7b5efe8d214e57af056c169c842f303db978321c",
            "container_config": {
                "Hostname": "864892ed15df",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:54f708fac0c44885a24d7e830bf9d7acc3a5bb4e9d0dc35bc2a32fc39b6c5741",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-14T00:48:15.224086866Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-01-23T16:54:39.663281449Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bdfbd4b0dfb53eecc80bac65894d1e2fcfafb27dcf24ab019176e2c9f60b9a39 in / "
                },
                {
                    "created": "2020-01-23T16:54:40.353281052Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-23T17:36:05.510608107Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-01-23T17:36:07.938033301Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-02-14T00:46:09.011567251Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.8",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T00:48:04.557035969Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'b13bf04633d4d8cf53226ebeaace8d4d2fd07ae6fa676d0844a688339debec34 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-14T00:48:10.474855811Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T00:48:11.205519324Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T00:48:14.589131189Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-14T00:48:15.224086866Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1aed0a4fa040a4b937e7b74a2e2386e40654c267d166dced87eb80d5a1a0826c",
                    "sha256:f2c832c0a239a603c1482fd9563201da92a86060471bc59a879d2d33043641e0",
                    "sha256:cd9b03c31d86db9cc14d8a724d86f89be4e4b2a05cf3fc5d6458851596fae784",
                    "sha256:3c56e99597928ca34d499814461b29a09fec229736840f83f24667323a6f43f6",
                    "sha256:95eea07b82fdfc9f0161fa9b1cba7d3a7961131c85b014c974a0ecbddd7bff9c"
                ]
            }
        },
        "1.13.8-alpine3.11": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a5865c521c7cb822ef21cc67e4864c713b7fa67937b154e65b25ca39242546f7",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "eb1fcf537a48a979713fd640594e9e2be1fbbe834a063dc0aef8d1e30a463f85",
            "container_config": {
                "Hostname": "eb1fcf537a48",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a5865c521c7cb822ef21cc67e4864c713b7fa67937b154e65b25ca39242546f7",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-14T00:45:57.142501821Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-01-18T01:39:43.076306142Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4109fa86dd80850e84c689ff9e6a3243e30ab1bbcc00c765969b3011bfbb43e1 in / "
                },
                {
                    "created": "2020-01-18T01:39:43.809479591Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T06:10:29.605168752Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-01-18T06:10:36.930249136Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-02-14T00:43:53.473639466Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.8",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T00:45:51.604056803Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'b13bf04633d4d8cf53226ebeaace8d4d2fd07ae6fa676d0844a688339debec34 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-14T00:45:54.489973588Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T00:45:54.994188186Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T00:45:56.558262188Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-14T00:45:57.142501821Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:53745f29fdbf5642c5275f34b9803e69742e082df0a7bb3316ece48ba45c622f",
                    "sha256:9c60a09a3ecd837e13b7a944fdd5b15a2474f2e90c7816d4c28658263fcd525c",
                    "sha256:1e344161583c7ea28934eb5e22d72155510bdd29547dc503702fddac86a9a05f",
                    "sha256:eeec5f2f38fa68dc76770da68dfdd535dcf575c60cd929ac18b9e728f9dabc17",
                    "sha256:d21c1d6e517e62f744cc547d883e6ae1f92752ef38baadeb0588bd1a32104e4a"
                ]
            }
        },
        "1.13.8-buster": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:4085668f0d82e0884b8444c85ba454d6016e905eb4315b71f72b495378feeadb",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "e097b2e0788a25d1b1075023dace7662a8d10040a9ee5607d14a764838c60394",
            "container_config": {
                "Hostname": "e097b2e0788a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:4085668f0d82e0884b8444c85ba454d6016e905eb4315b71f72b495378feeadb",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-26T23:01:41.804372974Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-02-26T00:46:17.069622833Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e3320653f0d517a6181aa46fb47407790018e2d8dee590005ffdbee3d04f72d4 in / "
                },
                {
                    "created": "2020-02-26T00:46:19.28110458Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-26T03:50:14.468879735Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-26T03:50:28.223407967Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-02-26T03:51:23.435681399Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-26T22:59:41.219684666Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-26T23:01:20.705533821Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.8",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-26T23:01:36.603132312Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='0567734d558aef19112f2b2873caa0c600f1b4a5827930eb5a7f35235219e9d8' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='75f590d8e048a97cbf8b09837b15b3e6b44e1374718a96a5c3a994843ef44a4d' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='b46c0235054d0eb69a295a2634aec8a11c7ae19b3dc53556a626b89dc1f8cdb0' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='2305c1c46b3eaf574c7b03cfa6b167c199a2b52da85872317438c90074fdb46e' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='4c987b3969d33a93880a218064d2330d7f55c9b58698e78db6b56012058e91a9' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='994f961df0d7bdbfa6f7eed604539acf9159444dabdff3ce8e938d095d85f756' ;; \t\t*) goRelArch='src'; goRelSha256='b13bf04633d4d8cf53226ebeaace8d4d2fd07ae6fa676d0844a688339debec34'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-26T23:01:39.065810434Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-26T23:01:39.565712794Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-26T23:01:41.210055876Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-26T23:01:41.804372974Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:61143ad0ddbaf6e73ad5713b4a9b38faf88d3978bedcd3fad4a31293f7cb6242",
                    "sha256:d86716fab0a30b5df7674a2c6d3892faf866c1aeb0ef9e03675187df283fd2d8",
                    "sha256:7add67e9ac341bda1e2dcc1e61396b2b20c843b90d45532bca10f620eb6e0db2",
                    "sha256:258526303f1fa23e2bb86777d2b3f8bf84bf7e9bf15004ad22abfb3b0df1cfd0",
                    "sha256:d5b021294439fd7c07c436dbcc3131a19d0dc0ce44413c5f36d95d8b693d232e",
                    "sha256:5105d62d60b1fe56493be7ee3226321b07146f99beb6ab7e66978e5a05149dbf",
                    "sha256:c50765ba68c46491618574144955985555c2c7584137e69a0bd1017f411111d2"
                ]
            }
        },
        "1.13.8-stretch": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:5af44aa36cb520f34b8eb77800f539935b715bb6b405442e536a2bea39d921f5",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "2734b008c24269821bbed937294dc360a17113a22e257c068b026a659330d10c",
            "container_config": {
                "Hostname": "2734b008c242",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:5af44aa36cb520f34b8eb77800f539935b715bb6b405442e536a2bea39d921f5",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-26T23:02:07.846097816Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-02-26T00:50:03.175190157Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c82c7dc82c2eb3b50218c35e1b848f707b134d2df957f57125408f69aaeb9b96 in / "
                },
                {
                    "created": "2020-02-26T00:50:15.222470421Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-26T03:59:11.8365466Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-26T03:59:21.415072037Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-02-26T04:00:04.400012095Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-26T23:00:31.778247699Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-26T23:01:48.010896786Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.8",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-26T23:02:02.128173878Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='0567734d558aef19112f2b2873caa0c600f1b4a5827930eb5a7f35235219e9d8' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='75f590d8e048a97cbf8b09837b15b3e6b44e1374718a96a5c3a994843ef44a4d' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='b46c0235054d0eb69a295a2634aec8a11c7ae19b3dc53556a626b89dc1f8cdb0' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='2305c1c46b3eaf574c7b03cfa6b167c199a2b52da85872317438c90074fdb46e' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='4c987b3969d33a93880a218064d2330d7f55c9b58698e78db6b56012058e91a9' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='994f961df0d7bdbfa6f7eed604539acf9159444dabdff3ce8e938d095d85f756' ;; \t\t*) goRelArch='src'; goRelSha256='b13bf04633d4d8cf53226ebeaace8d4d2fd07ae6fa676d0844a688339debec34'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-26T23:02:04.886309964Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-26T23:02:05.719214923Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-26T23:02:07.284125208Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-26T23:02:07.846097816Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:37094b4768a4eb3d0b68bc14e6af00fa7ec73bcd9f974c3e9868984fe29068fc",
                    "sha256:604f5dee74405af2f20628dfbf6e7d6e8d9fa420c4c1553dd01d8866996265f6",
                    "sha256:3bd284db7fec7bf9c528866597f1c2dd1e3398640e8ec3de0129857b1e908c3f",
                    "sha256:3eba10c625ca226e60492f46ea16e61c698ed007b45a91911c07960f964a03f8",
                    "sha256:0d6fa7132bb69bea3b0408a2d16ed9639ec85bd741617a0b2f46658c19025b2f",
                    "sha256:4ac08c72aab1af1c49f856801eef28d2b0dfc3263c1352281074727f3c82e775",
                    "sha256:1ff122bdb7c89f733f6d3dd17497699cc84dd22a81ed3ac798c4872e923ec399"
                ]
            }
        },
        "1.13.9-alpine": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:0d4be731fa889b7dd7eff878f978cb9350b68d1539dc71c70348718e310de3e7",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "73d17b8ff4e68abf14814df04028e9150b5f0dd925c5a0b9d1b8ee35379731b4",
            "container_config": {
                "Hostname": "73d17b8ff4e6",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:0d4be731fa889b7dd7eff878f978cb9350b68d1539dc71c70348718e310de3e7",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-03-23T23:03:00.825190375Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-03-23T21:39:52.296870342Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:746a5c3838a898d6acf7877552ff13d1ab40d0036ace7a662e7c747018315ddb in / "
                },
                {
                    "created": "2020-03-23T21:39:53.041338799Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-23T22:58:12.028046079Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-03-23T22:58:13.897468867Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-03-23T23:00:54.161424625Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.9",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-23T23:02:54.392226982Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '34bb19d806e0bc4ad8f508ae24bade5e9fedfa53d09be63b488a9314d2d4f31d *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-03-23T23:02:57.38215194Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-23T23:02:58.075521867Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-23T23:03:00.161874244Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-03-23T23:03:00.825190375Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a",
                    "sha256:a35056393a88a3b8e3a9c354458d9a881a578ab16139e85a969673609658c630",
                    "sha256:f2b86cb5927e2a2cbad780c59ce754ee57649ceaeb394c870000939d766d551d",
                    "sha256:176ae48d5b0a2cb847c2528ce3c8f48301330311960fdca027b5040f871d4bbd",
                    "sha256:ac202375eaf7cb0e947a404c30702861b7b6dc7e632d3f4cb0bb7450d37c7e40"
                ]
            }
        },
        "1.13.9-alpine3.10": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:04d503d664c9949256f315261b352b25814f7666f1ef0ec53ea67d070d3da1b3",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "3fe026eefacab96c7427c00563f4bea645a211a6181e84eae64df7488a4b2940",
            "container_config": {
                "Hostname": "3fe026eefaca",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:04d503d664c9949256f315261b352b25814f7666f1ef0ec53ea67d070d3da1b3",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-03-20T02:03:12.975900466Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-01-23T16:54:39.663281449Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bdfbd4b0dfb53eecc80bac65894d1e2fcfafb27dcf24ab019176e2c9f60b9a39 in / "
                },
                {
                    "created": "2020-01-23T16:54:40.353281052Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-23T17:36:05.510608107Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-01-23T17:36:07.938033301Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-03-20T01:58:46.978420541Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.9",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-20T02:02:01.713016802Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '34bb19d806e0bc4ad8f508ae24bade5e9fedfa53d09be63b488a9314d2d4f31d *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-03-20T02:02:18.263210833Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-20T02:02:25.419533305Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-20T02:02:53.208170215Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-03-20T02:03:12.975900466Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1aed0a4fa040a4b937e7b74a2e2386e40654c267d166dced87eb80d5a1a0826c",
                    "sha256:f2c832c0a239a603c1482fd9563201da92a86060471bc59a879d2d33043641e0",
                    "sha256:cd9b03c31d86db9cc14d8a724d86f89be4e4b2a05cf3fc5d6458851596fae784",
                    "sha256:25215562065e2d75f882c64a1e1df4105d22c115bee72017e3093a01a174a9ee",
                    "sha256:92c24a8b8e4f7d24507df1dd466612295d931c8164b13f7dcc6f8a666237ac74"
                ]
            }
        },
        "1.13.9-alpine3.11": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:0d4be731fa889b7dd7eff878f978cb9350b68d1539dc71c70348718e310de3e7",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "73d17b8ff4e68abf14814df04028e9150b5f0dd925c5a0b9d1b8ee35379731b4",
            "container_config": {
                "Hostname": "73d17b8ff4e6",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:0d4be731fa889b7dd7eff878f978cb9350b68d1539dc71c70348718e310de3e7",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-03-23T23:03:00.825190375Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-03-23T21:39:52.296870342Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:746a5c3838a898d6acf7877552ff13d1ab40d0036ace7a662e7c747018315ddb in / "
                },
                {
                    "created": "2020-03-23T21:39:53.041338799Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-23T22:58:12.028046079Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-03-23T22:58:13.897468867Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-03-23T23:00:54.161424625Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.9",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-23T23:02:54.392226982Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '34bb19d806e0bc4ad8f508ae24bade5e9fedfa53d09be63b488a9314d2d4f31d *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-03-23T23:02:57.38215194Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-23T23:02:58.075521867Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-23T23:03:00.161874244Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-03-23T23:03:00.825190375Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a",
                    "sha256:a35056393a88a3b8e3a9c354458d9a881a578ab16139e85a969673609658c630",
                    "sha256:f2b86cb5927e2a2cbad780c59ce754ee57649ceaeb394c870000939d766d551d",
                    "sha256:176ae48d5b0a2cb847c2528ce3c8f48301330311960fdca027b5040f871d4bbd",
                    "sha256:ac202375eaf7cb0e947a404c30702861b7b6dc7e632d3f4cb0bb7450d37c7e40"
                ]
            }
        },
        "1.13.9-buster": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2b812e7b0602405a08452e6acba72b814510605e6ec34727527238272260af55",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "d24914ddaa420a6beac3a7b55849c29527eb9d3b3fe26b5a87893dc8fc431186",
            "container_config": {
                "Hostname": "d24914ddaa42",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2b812e7b0602405a08452e6acba72b814510605e6ec34727527238272260af55",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-04-01T00:47:35.877929489Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-03-31T02:05:07.518979913Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d0df7ac13226f8d35c078941a20d8a465b09a4e226c5ca37709fa23599cd56dc in / "
                },
                {
                    "created": "2020-03-31T02:05:09.596883488Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-31T04:33:05.996689392Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-03-31T04:33:18.142759556Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-03-31T04:33:56.352948949Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-04-01T00:45:53.888266804Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-04-01T00:47:14.653849564Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.9",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-01T00:47:30.533316046Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='f4ad8180dd0aaf7d7cda7e2b0a2bf27e84131320896d376549a7d849ecf237d7' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='a3c2941a1fde8692514ece7e2180a0e3ca70609f52756a66bc0ab68c63572361' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='b53cb466d7986e5e17a3d4c196bc95df08a35968eced5efd7e128387a246c46e' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='a2744aa2ddc68d888e9f65c2cbe4c8b527b139688ce232ead90dc2961f8d51a8' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='90beb01962202f332be0a7c8dad2db3d30242759ba863db3f36c45d241940efc' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='a40949aaf55912b06df8fda511c33fde3e52d377706bdc095332652c1ad225e3' ;; \t\t*) goRelArch='src'; goRelSha256='34bb19d806e0bc4ad8f508ae24bade5e9fedfa53d09be63b488a9314d2d4f31d'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-04-01T00:47:32.977713876Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-01T00:47:33.581410233Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-01T00:47:35.242797663Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-04-01T00:47:35.877929489Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ec72c4870d531e57c5410ad62494252529b3f31bda5e961e351720552e7cc8e5",
                    "sha256:f74f498a8f88bc6f2f42618546ea97ff8e65d35b288d1af634766cea61239b40",
                    "sha256:96b07624b4f9c1b0bf6476b27cff2f2e938ea7df484166782e669e6eb0552648",
                    "sha256:378efb1f503323ca34fd81f6287f117313068f2e6240c1867193335278f87283",
                    "sha256:bf209a15a7f86288709891ede554a922e10c446e802cc944ef177baeb4c47387",
                    "sha256:d19826136c35605d7a2112a576617f0ebf5c6bc83080b696e48a46c00a34cf52",
                    "sha256:f0933907ff1c11938b49fd1b4ddc7e27c8bdfe5b320d1b550b7a6a8499da9cd2"
                ]
            }
        },
        "1.13.9-stretch": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:503b2e12e4eb3ba1ab32f1ad5b5a5685707b2acde1ad3b8c72dfa9658f10fabf",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "3846a985db43224aa7e0ba9592347b01c5e9a68596f9ed49c72adb290dbb9e1c",
            "container_config": {
                "Hostname": "3846a985db43",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:503b2e12e4eb3ba1ab32f1ad5b5a5685707b2acde1ad3b8c72dfa9658f10fabf",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-04-01T00:48:02.430491723Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-03-31T02:08:11.937458664Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ab80e35f9496440fac439083c9c9c18cd80521039d4bc4f4082e8e84a5e9fcda in / "
                },
                {
                    "created": "2020-03-31T02:08:15.286406718Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-31T04:41:08.834879561Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-03-31T04:41:19.462772318Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-03-31T04:42:03.768866698Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-04-01T00:46:38.494282806Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-04-01T00:47:44.334648021Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.9",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-01T00:47:56.660037359Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='f4ad8180dd0aaf7d7cda7e2b0a2bf27e84131320896d376549a7d849ecf237d7' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='a3c2941a1fde8692514ece7e2180a0e3ca70609f52756a66bc0ab68c63572361' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='b53cb466d7986e5e17a3d4c196bc95df08a35968eced5efd7e128387a246c46e' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='a2744aa2ddc68d888e9f65c2cbe4c8b527b139688ce232ead90dc2961f8d51a8' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='90beb01962202f332be0a7c8dad2db3d30242759ba863db3f36c45d241940efc' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='a40949aaf55912b06df8fda511c33fde3e52d377706bdc095332652c1ad225e3' ;; \t\t*) goRelArch='src'; goRelSha256='34bb19d806e0bc4ad8f508ae24bade5e9fedfa53d09be63b488a9314d2d4f31d'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-04-01T00:47:59.314008911Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-01T00:47:59.934012836Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-01T00:48:01.612210175Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-04-01T00:48:02.430491723Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1cfc75702c7404bde4c584658a7da37aa536aa04853a1b37e14423829f202e65",
                    "sha256:712389188961228ef6fe8af2d6e498e20f14a64270a05c38f7dc530201f32dff",
                    "sha256:a5f86e74b38a95b1317ccdfe461be2021e6038f79aa7bef8972e9996ee288237",
                    "sha256:ede9347f4c59eff115522dacf7dc7dd982ce227b520858c4fa57df912ac739d2",
                    "sha256:c16a7fe806fbb0a26d2b9f24e0a689e7c9c1dc48c05cf1023473c5f14b8fd3ad",
                    "sha256:41cad242c9bc467f60e4cf08be5eae462ed56ca34dc6a656ebcc6763802bc5b1",
                    "sha256:20706d5c6e63bb83a8cb55753d9b1dd73fa2fad0cdf7a1f6628b72519d83028e"
                ]
            }
        },
        "1.13beta1-alpine": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f648bfe5888c944e0a062d83a606d83d9f9f58b9ea1056f6f41703acb53199a4",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "cf6b21fbb14fdfd85f63d4f985b6cd8042b3a07a15c586e9c9effb03f1d96932",
            "container_config": {
                "Hostname": "cf6b21fbb14f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f648bfe5888c944e0a062d83a606d83d9f9f58b9ea1056f6f41703acb53199a4",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-20T20:58:26.382132571Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-20T20:39:38.405945347Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:34737804ba78554795d5bcc75621595f8cc3d5b5887887d34e0e021b78e330b7 in / "
                },
                {
                    "created": "2019-08-20T20:39:38.821174355Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T20:56:21.289256818Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-08-20T20:56:22.869691367Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-08-20T20:56:23.228753352Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13beta1",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T20:58:22.960043967Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'e8a7c504cd6775b8a6af101158b8871455918c9a61162f0180f7a9f118dc4102 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-20T20:58:24.300621421Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T20:58:24.644577196Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T20:58:25.973362116Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-20T20:58:26.382132571Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5e0d8111135538b8a86ce5fc969849efce16c455fd016bb3dc53131bcedc4da5",
                    "sha256:e3275698b6646fa0bbb59a0c5bcb22674d2098952d972968752905ca92f4c6c7",
                    "sha256:88ee3bd19f4a271e93edadba95c10387ef28c86ebb20c2b2373dad5741bffb77",
                    "sha256:a78668fc1f56a8dbe77c1999c8e6c708e27501ee23a6a5b2b2b8e68ad1e29ae0",
                    "sha256:05c3bf22244ad21279a10e4b0a0a1871ebbf32886f964309f084b32f4109580d"
                ]
            }
        },
        "1.13beta1-alpine3.10": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f648bfe5888c944e0a062d83a606d83d9f9f58b9ea1056f6f41703acb53199a4",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "cf6b21fbb14fdfd85f63d4f985b6cd8042b3a07a15c586e9c9effb03f1d96932",
            "container_config": {
                "Hostname": "cf6b21fbb14f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f648bfe5888c944e0a062d83a606d83d9f9f58b9ea1056f6f41703acb53199a4",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-20T20:58:26.382132571Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-20T20:39:38.405945347Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:34737804ba78554795d5bcc75621595f8cc3d5b5887887d34e0e021b78e330b7 in / "
                },
                {
                    "created": "2019-08-20T20:39:38.821174355Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T20:56:21.289256818Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-08-20T20:56:22.869691367Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-08-20T20:56:23.228753352Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13beta1",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T20:58:22.960043967Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'e8a7c504cd6775b8a6af101158b8871455918c9a61162f0180f7a9f118dc4102 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-20T20:58:24.300621421Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T20:58:24.644577196Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T20:58:25.973362116Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-20T20:58:26.382132571Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5e0d8111135538b8a86ce5fc969849efce16c455fd016bb3dc53131bcedc4da5",
                    "sha256:e3275698b6646fa0bbb59a0c5bcb22674d2098952d972968752905ca92f4c6c7",
                    "sha256:88ee3bd19f4a271e93edadba95c10387ef28c86ebb20c2b2373dad5741bffb77",
                    "sha256:a78668fc1f56a8dbe77c1999c8e6c708e27501ee23a6a5b2b2b8e68ad1e29ae0",
                    "sha256:05c3bf22244ad21279a10e4b0a0a1871ebbf32886f964309f084b32f4109580d"
                ]
            }
        },
        "1.13beta1-buster": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:42617185ba301ef8bbd91ab3482bc08e0147aa74ce5127decdddffe20a2b3f1f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "ae302eeb39fe2c83c711efb15eea09c5ebf060097eb9b9a96b86409562223640",
            "container_config": {
                "Hostname": "ae302eeb39fe",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:42617185ba301ef8bbd91ab3482bc08e0147aa74ce5127decdddffe20a2b3f1f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-14T21:05:10.565668082Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-14T00:40:44.249210056Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f63b119fbe465bf5c6ca8b15f40bc0103b3e00d68628a80d1025b38e536a46b7 in / "
                },
                {
                    "created": "2019-08-14T00:40:45.352575059Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T02:30:03.501985656Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T02:30:14.635808353Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-08-14T02:30:48.715930266Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T21:04:50.976650827Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T21:04:52.048933955Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13beta1",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T21:05:06.242109705Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='dbd131c92f381a5bc5ca1f0cfd942cb8be7d537007b6f412b5be41ff38a7d0d9' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='77993f1dce5b4d080cbd06a4553e5e1c6caa7ad6817ea3c62254b89d6f079504' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='298a325d8eeba561a26312a9cdc821a96873c10fca7f48a7f98bbd8848bd8bd4' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='38039e4f7b6eea8f55e91d90607150d5d397f9063c06445c45009dd1e6dba8cc' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='0f3c5c7b7956911ed8d1fc4e9dbeb2584d0be695c5c15b528422e3bb2d5989f0' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='877065ac7d1729e5de1bbfe1e712788bf9dee5613a5502cf0ba76e65c2521b26' ;; \t\t*) goRelArch='src'; goRelSha256='e8a7c504cd6775b8a6af101158b8871455918c9a61162f0180f7a9f118dc4102'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-14T21:05:08.464901392Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T21:05:08.808837598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T21:05:10.117198442Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-14T21:05:10.565668082Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0a3fa153264b693d6d10457dc58b433dca1828a88c52750c2227f5926d15d737",
                    "sha256:f54065b956ab8a66f19f7e4e8ecd9104fa17c2e2580df52324c517cd33136df1",
                    "sha256:008074a8f55cf42e163cbb663d9647c6c03616ed7793f9ebd08602f01fa71a29",
                    "sha256:c1e303518b8e8e76f012f7b30cec7577595ef108919b05d67a6b891853ea21f9",
                    "sha256:a068c344f31fa4e9303790b3f06c8920f05871dc7df660370ac2cd0b318db5a3",
                    "sha256:620f9e788cbfdddce0bd8756880b83c7d8eb508e3873f8a8fbf016621d820421",
                    "sha256:4b27e7ba8969f4e056a31d4b5b3e618326a5a9a73a283d32a9560b2d0c323cc2"
                ]
            }
        },
        "1.13rc1-alpine": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b379429be3661b3bdf45b83915bcdbcd08fe4f0425088a7627a33337edc0e5e5",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "edbb9cdf4851ed47dc90eff8709638d8fd1402d2c9d678a423a2eea3e31490f0",
            "container_config": {
                "Hostname": "edbb9cdf4851",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b379429be3661b3bdf45b83915bcdbcd08fe4f0425088a7627a33337edc0e5e5",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-21T22:05:02.409404804Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-20T20:39:38.405945347Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:34737804ba78554795d5bcc75621595f8cc3d5b5887887d34e0e021b78e330b7 in / "
                },
                {
                    "created": "2019-08-20T20:39:38.821174355Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T20:56:21.289256818Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-08-20T20:56:22.869691367Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-08-21T22:02:57.044805657Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13rc1",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-21T22:04:57.575347233Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'dc5c1f4501daf486f69ca9a795202b289824c303291bf26c42a5b6c1770ba3a9 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-21T22:04:59.841732315Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-21T22:05:00.253755513Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-21T22:05:01.822980982Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-21T22:05:02.409404804Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5e0d8111135538b8a86ce5fc969849efce16c455fd016bb3dc53131bcedc4da5",
                    "sha256:e3275698b6646fa0bbb59a0c5bcb22674d2098952d972968752905ca92f4c6c7",
                    "sha256:88ee3bd19f4a271e93edadba95c10387ef28c86ebb20c2b2373dad5741bffb77",
                    "sha256:e0257d4ba42d86c26ffa683dfddb3ce3ace4f9172fbfb35610b782f2a9fe25a7",
                    "sha256:8cf7ffcc1c7ebb0fb89695a044f68b1bb339c6d577f81b2a8c59bc04b07163a0"
                ]
            }
        },
        "1.13rc1-alpine3.10": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b379429be3661b3bdf45b83915bcdbcd08fe4f0425088a7627a33337edc0e5e5",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "edbb9cdf4851ed47dc90eff8709638d8fd1402d2c9d678a423a2eea3e31490f0",
            "container_config": {
                "Hostname": "edbb9cdf4851",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b379429be3661b3bdf45b83915bcdbcd08fe4f0425088a7627a33337edc0e5e5",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-21T22:05:02.409404804Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-20T20:39:38.405945347Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:34737804ba78554795d5bcc75621595f8cc3d5b5887887d34e0e021b78e330b7 in / "
                },
                {
                    "created": "2019-08-20T20:39:38.821174355Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T20:56:21.289256818Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-08-20T20:56:22.869691367Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-08-21T22:02:57.044805657Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13rc1",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-21T22:04:57.575347233Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'dc5c1f4501daf486f69ca9a795202b289824c303291bf26c42a5b6c1770ba3a9 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-21T22:04:59.841732315Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-21T22:05:00.253755513Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-21T22:05:01.822980982Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-21T22:05:02.409404804Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5e0d8111135538b8a86ce5fc969849efce16c455fd016bb3dc53131bcedc4da5",
                    "sha256:e3275698b6646fa0bbb59a0c5bcb22674d2098952d972968752905ca92f4c6c7",
                    "sha256:88ee3bd19f4a271e93edadba95c10387ef28c86ebb20c2b2373dad5741bffb77",
                    "sha256:e0257d4ba42d86c26ffa683dfddb3ce3ace4f9172fbfb35610b782f2a9fe25a7",
                    "sha256:8cf7ffcc1c7ebb0fb89695a044f68b1bb339c6d577f81b2a8c59bc04b07163a0"
                ]
            }
        },
        "1.13rc1-buster": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e7bece88c6b35a5bbe2469a944a63a0412e65249c3b77c4bff5dddfb3b209f65",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "8785030d4b9c382e0ad56ee987b2f3583d7370682542dfa6a6cb2347cbf9aea8",
            "container_config": {
                "Hostname": "8785030d4b9c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e7bece88c6b35a5bbe2469a944a63a0412e65249c3b77c4bff5dddfb3b209f65",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-21T22:02:51.797671768Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-14T00:40:44.249210056Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f63b119fbe465bf5c6ca8b15f40bc0103b3e00d68628a80d1025b38e536a46b7 in / "
                },
                {
                    "created": "2019-08-14T00:40:45.352575059Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T02:30:03.501985656Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T02:30:14.635808353Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-08-14T02:30:48.715930266Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T21:04:50.976650827Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-21T22:02:27.105267997Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13rc1",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-21T22:02:47.503900771Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='0b45d086aefcfb9d0ebe7fc9ffbe470e45f9c104a6a97ea275512152cdbfead1' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='d0118038c68276179523dfffba3ad49662842b8e4e37b5801d753c731241d745' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='be16145c9fa218340766b19edd175b109adab826155add2fd504430a751aaa19' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='98368195013a6140573835db93038a7977c61cabff53618a785659edb9378bb1' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='e351c396262b3c411459e08a2ff9bec9d720760bd8811fd1f59262d02f9f504f' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='2fd64292498fb70074ff4560da4a7e444d3325c219a6987f4b2186d231244921' ;; \t\t*) goRelArch='src'; goRelSha256='dc5c1f4501daf486f69ca9a795202b289824c303291bf26c42a5b6c1770ba3a9'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-21T22:02:49.565887209Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-21T22:02:49.957385392Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-21T22:02:51.389559888Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-21T22:02:51.797671768Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0a3fa153264b693d6d10457dc58b433dca1828a88c52750c2227f5926d15d737",
                    "sha256:f54065b956ab8a66f19f7e4e8ecd9104fa17c2e2580df52324c517cd33136df1",
                    "sha256:008074a8f55cf42e163cbb663d9647c6c03616ed7793f9ebd08602f01fa71a29",
                    "sha256:c1e303518b8e8e76f012f7b30cec7577595ef108919b05d67a6b891853ea21f9",
                    "sha256:a068c344f31fa4e9303790b3f06c8920f05871dc7df660370ac2cd0b318db5a3",
                    "sha256:f50ac20612572593d3b175128a9c66da9e68c8962c837586e5bc7eeb64f53669",
                    "sha256:ccab82ffc8e3c49b1816bc39048173c7da7045b00008f02acb3dd53c94b06b84"
                ]
            }
        },
        "1.13rc2-alpine": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c8e2181088c39e75391eb6e09c036c9a737c4b52aeff8aead4fd9177aa50cb6c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "6c34450543f772df247010e9a61b88842708255c6d968a0585f691cc5bf49589",
            "container_config": {
                "Hostname": "6c34450543f7",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c8e2181088c39e75391eb6e09c036c9a737c4b52aeff8aead4fd9177aa50cb6c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-29T21:46:08.880551468Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-20T20:39:38.405945347Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:34737804ba78554795d5bcc75621595f8cc3d5b5887887d34e0e021b78e330b7 in / "
                },
                {
                    "created": "2019-08-20T20:39:38.821174355Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T20:56:21.289256818Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-08-20T20:56:22.869691367Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-08-29T21:43:31.7246675Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13rc2",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-29T21:46:04.958726615Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '0c7387b3be32718282a39faa3020ff30365ef70e64fa71e10017a986587b7fe9 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-29T21:46:07.076619971Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-29T21:46:07.388667799Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-29T21:46:08.544926466Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-29T21:46:08.880551468Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5e0d8111135538b8a86ce5fc969849efce16c455fd016bb3dc53131bcedc4da5",
                    "sha256:e3275698b6646fa0bbb59a0c5bcb22674d2098952d972968752905ca92f4c6c7",
                    "sha256:88ee3bd19f4a271e93edadba95c10387ef28c86ebb20c2b2373dad5741bffb77",
                    "sha256:f9feeafbc5b31a33c8198489483785f6dca9aa1cc1ac7b7e8677806df1c64256",
                    "sha256:93ae36c7a4609504a2c12ec6c2b3e3c97336008de78ace59c194d42eb573f2d0"
                ]
            }
        },
        "1.13rc2-alpine3.10": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c8e2181088c39e75391eb6e09c036c9a737c4b52aeff8aead4fd9177aa50cb6c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "6c34450543f772df247010e9a61b88842708255c6d968a0585f691cc5bf49589",
            "container_config": {
                "Hostname": "6c34450543f7",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c8e2181088c39e75391eb6e09c036c9a737c4b52aeff8aead4fd9177aa50cb6c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-29T21:46:08.880551468Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-20T20:39:38.405945347Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:34737804ba78554795d5bcc75621595f8cc3d5b5887887d34e0e021b78e330b7 in / "
                },
                {
                    "created": "2019-08-20T20:39:38.821174355Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T20:56:21.289256818Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-08-20T20:56:22.869691367Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-08-29T21:43:31.7246675Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13rc2",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-29T21:46:04.958726615Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '0c7387b3be32718282a39faa3020ff30365ef70e64fa71e10017a986587b7fe9 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-29T21:46:07.076619971Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-29T21:46:07.388667799Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-29T21:46:08.544926466Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-29T21:46:08.880551468Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5e0d8111135538b8a86ce5fc969849efce16c455fd016bb3dc53131bcedc4da5",
                    "sha256:e3275698b6646fa0bbb59a0c5bcb22674d2098952d972968752905ca92f4c6c7",
                    "sha256:88ee3bd19f4a271e93edadba95c10387ef28c86ebb20c2b2373dad5741bffb77",
                    "sha256:f9feeafbc5b31a33c8198489483785f6dca9aa1cc1ac7b7e8677806df1c64256",
                    "sha256:93ae36c7a4609504a2c12ec6c2b3e3c97336008de78ace59c194d42eb573f2d0"
                ]
            }
        },
        "1.13rc2-buster": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:96daff576c7cdd6751e9ab89848740a5ba4ed4adda44c55b29e78c28fa891a98",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "af1d4d8dd1a00a5ab6642ba0755b0ca61661e78a7648977ac2cb82537dff78e8",
            "container_config": {
                "Hostname": "af1d4d8dd1a0",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:96daff576c7cdd6751e9ab89848740a5ba4ed4adda44c55b29e78c28fa891a98",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-29T21:43:26.524510183Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-14T00:40:44.249210056Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f63b119fbe465bf5c6ca8b15f40bc0103b3e00d68628a80d1025b38e536a46b7 in / "
                },
                {
                    "created": "2019-08-14T00:40:45.352575059Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T02:30:03.501985656Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T02:30:14.635808353Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-08-14T02:30:48.715930266Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T21:04:50.976650827Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-29T21:43:10.168646563Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13rc2",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-29T21:43:22.942771052Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='3cd4490021a5f1f25a7440edca03910e40a38e587b578cf52ab7143a81db1861' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='deebe2b723c818293046629344f09ead1610fba608aea038bcf25da70766f944' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='184c9fff6bba9da1cf23ba7f52561cc777ac7feaf73621b3824f4a30ffa4648d' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='5f5d235b73672ee5d26917d3907f8f1966af60d4391477a5afd4300d070ca852' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='7656da8bb13e450754d5df35c7d21dafb5847b00779dcc08f3c41eec7d817037' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='6016103bab62f1fe6b8f90665888a23ae8c825a8e7db7a607877298148e593cf' ;; \t\t*) goRelArch='src'; goRelSha256='0c7387b3be32718282a39faa3020ff30365ef70e64fa71e10017a986587b7fe9'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-29T21:43:24.66470861Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-29T21:43:24.984518429Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-29T21:43:26.165119396Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-29T21:43:26.524510183Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0a3fa153264b693d6d10457dc58b433dca1828a88c52750c2227f5926d15d737",
                    "sha256:f54065b956ab8a66f19f7e4e8ecd9104fa17c2e2580df52324c517cd33136df1",
                    "sha256:008074a8f55cf42e163cbb663d9647c6c03616ed7793f9ebd08602f01fa71a29",
                    "sha256:c1e303518b8e8e76f012f7b30cec7577595ef108919b05d67a6b891853ea21f9",
                    "sha256:a068c344f31fa4e9303790b3f06c8920f05871dc7df660370ac2cd0b318db5a3",
                    "sha256:85589d829abd75cd33e0ea1fefb3349b53737b7282fb1a2af8e3a6667a2701d9",
                    "sha256:9766744990c2714a5dd5bcb588ba7e8b1d3aef18ee92398fe2b9507f3ae71484"
                ]
            }
        },
        "1.14-alpine": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:c2af1ac720dca520a69c3ba86d312abe01095e5992302a36108384f10d669d40",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "e160f0ce24d1403c429fb3e3e9a7e32e33ddd4ae82041caf823e892ebcf19da1",
            "container_config": {
                "Hostname": "e160f0ce24d1",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:c2af1ac720dca520a69c3ba86d312abe01095e5992302a36108384f10d669d40",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-02-05T02:24:18.66803713Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-01-28T23:39:33.173069025Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fecabe41deaeb72acdd63023566d87ae48b013ef80c97fdd993b55d6c727da93 in / "
                },
                {
                    "created": "2021-01-28T23:39:34.152729289Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-29T00:25:09.918160191Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2021-01-29T00:25:12.497748248Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2021-01-29T00:25:13.290262095Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T02:22:02.018815183Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.15",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T02:24:07.622588443Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\turl='https://storage.googleapis.com/golang/go1.14.15.src.tar.gz'; \tsha256='7ed13b2209e54a451835997f78035530b331c5b6943cdcd68a3d815fdc009149'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \teval \"$goEnv\"; \t[ -n \"$GOOS\" ]; \t[ -n \"$GOARCH\" ]; \t( \t\tcd /usr/local/go/src; \t\t./make.bash; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2021-02-05T02:24:13.141993696Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T02:24:14.651330653Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T02:24:17.864393621Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-02-05T02:24:18.66803713Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:bc1660ee125400c1f1b66d87c5e65ba65e05b021e7e4e6b76a3e16e2e4b6fd3c",
                    "sha256:a96c0b17fff498a5a0a769fb636c6c2ed1e28a8c738158562401f27dbc1d32fb",
                    "sha256:ac7e341c4ea9a2f4e98edc06a702c76726cf8d6365ae52e43d2ed3452604a033",
                    "sha256:a7da2a36cc3a35006aa3f547646fec4864a1babf33e27d7881a9a75430d99759",
                    "sha256:2782d25976db03326acb8ddb0298ef02ccbbfd51b274dc0f151337ae23affd17"
                ]
            }
        },
        "1.14-alpine3.11": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:e8c82b0198b6e76d1cef3938733fde66bf9c4c79d037503ea31c4488d7eb1dbd",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "422c92f6281b2bbda2063bf85a367007950382d6f505139e7202a2e4b7a56c76",
            "container_config": {
                "Hostname": "422c92f6281b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:e8c82b0198b6e76d1cef3938733fde66bf9c4c79d037503ea31c4488d7eb1dbd",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-02-05T02:29:12.054621943Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-12-16T23:40:37.939971563Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:47bb1b85a4eb4d0b355ae89ec5c71c09e2c2b7e21e1851a2896365eb17134f57 in / "
                },
                {
                    "created": "2020-12-16T23:40:39.397059722Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-17T04:47:53.39179737Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-12-17T04:47:56.491386814Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-12-17T04:47:57.306953642Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T02:26:57.759444054Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.15",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T02:29:04.330047387Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\turl='https://storage.googleapis.com/golang/go1.14.15.src.tar.gz'; \tsha256='7ed13b2209e54a451835997f78035530b331c5b6943cdcd68a3d815fdc009149'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \teval \"$goEnv\"; \t[ -n \"$GOOS\" ]; \t[ -n \"$GOARCH\" ]; \t( \t\tcd /usr/local/go/src; \t\t./make.bash; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2021-02-05T02:29:07.515146924Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T02:29:08.735081102Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T02:29:11.029254829Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-02-05T02:29:12.054621943Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4d0185f84beff0ee0f58428a2c2f0ad9f1ad6b9f0d41443df725ff2bb29a3fc0",
                    "sha256:fe5ed3126b5619ac0ec12b30c34d0b46e21521790a77a38a8cf37e1365166d3f",
                    "sha256:f275eb2a4f11a64cb1f22e25c33f310497bc8eb3a7148a62311abf47efd5233a",
                    "sha256:26262b4919aa147a528abaf1d420da0aca4e819a83bdbaae30cfaef2549c9764",
                    "sha256:6650b000d5176a1fd97e205bf946cbed2da543ac497dc587defd6141f0c5b68d"
                ]
            }
        },
        "1.14-alpine3.12": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:3c10672b14a55a4cc9c286c620524682c35efb4cba420bfc1a6c38f7eee2718f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "9c5a15c3a560598dd91c059d074ec6073bc47fefa5a0c9919b1aa355bf3b6b2f",
            "container_config": {
                "Hostname": "9c5a15c3a560",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:3c10672b14a55a4cc9c286c620524682c35efb4cba420bfc1a6c38f7eee2718f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-02-05T02:26:43.86527883Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-12-16T23:40:26.733219846Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a4845c3840a3fd0e41e4635a179cce20c81afc6c02e34e3fd5bd2d535698918b in / "
                },
                {
                    "created": "2020-12-16T23:40:29.16971129Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-17T04:41:45.854743048Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-12-17T04:41:48.375073413Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-12-17T04:41:49.288544943Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T02:24:39.150101905Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.15",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T02:26:33.883035401Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\turl='https://storage.googleapis.com/golang/go1.14.15.src.tar.gz'; \tsha256='7ed13b2209e54a451835997f78035530b331c5b6943cdcd68a3d815fdc009149'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \teval \"$goEnv\"; \t[ -n \"$GOOS\" ]; \t[ -n \"$GOARCH\" ]; \t( \t\tcd /usr/local/go/src; \t\t./make.bash; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2021-02-05T02:26:38.022479452Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T02:26:39.060493079Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T02:26:41.854551626Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-02-05T02:26:43.86527883Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:379067d0cb5309d203a84fb900c950812df2089dedb822239d389ac45a20efe9",
                    "sha256:e9d38d210a8343fa45a8db0d774c9c38fba69b7807cd4816b80bf6356a925ddb",
                    "sha256:5746c35e32ecb5d07dec2dae715eac9b9e5096247ad0a5dcb36db3161aa5b0b4",
                    "sha256:2d9612d3847c5da714b1f72e758e1e781ab2801c7aec0ebc18e52977c40da084",
                    "sha256:1e2e179ad1c373ede037f6bf0ef01759f0fa04b9fb20cc56475ee943bba387d4"
                ]
            }
        },
        "1.14-alpine3.13": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:c2af1ac720dca520a69c3ba86d312abe01095e5992302a36108384f10d669d40",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "e160f0ce24d1403c429fb3e3e9a7e32e33ddd4ae82041caf823e892ebcf19da1",
            "container_config": {
                "Hostname": "e160f0ce24d1",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:c2af1ac720dca520a69c3ba86d312abe01095e5992302a36108384f10d669d40",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-02-05T02:24:18.66803713Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-01-28T23:39:33.173069025Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fecabe41deaeb72acdd63023566d87ae48b013ef80c97fdd993b55d6c727da93 in / "
                },
                {
                    "created": "2021-01-28T23:39:34.152729289Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-29T00:25:09.918160191Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2021-01-29T00:25:12.497748248Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2021-01-29T00:25:13.290262095Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T02:22:02.018815183Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.15",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T02:24:07.622588443Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\turl='https://storage.googleapis.com/golang/go1.14.15.src.tar.gz'; \tsha256='7ed13b2209e54a451835997f78035530b331c5b6943cdcd68a3d815fdc009149'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \teval \"$goEnv\"; \t[ -n \"$GOOS\" ]; \t[ -n \"$GOARCH\" ]; \t( \t\tcd /usr/local/go/src; \t\t./make.bash; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2021-02-05T02:24:13.141993696Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T02:24:14.651330653Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T02:24:17.864393621Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-02-05T02:24:18.66803713Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:bc1660ee125400c1f1b66d87c5e65ba65e05b021e7e4e6b76a3e16e2e4b6fd3c",
                    "sha256:a96c0b17fff498a5a0a769fb636c6c2ed1e28a8c738158562401f27dbc1d32fb",
                    "sha256:ac7e341c4ea9a2f4e98edc06a702c76726cf8d6365ae52e43d2ed3452604a033",
                    "sha256:a7da2a36cc3a35006aa3f547646fec4864a1babf33e27d7881a9a75430d99759",
                    "sha256:2782d25976db03326acb8ddb0298ef02ccbbfd51b274dc0f151337ae23affd17"
                ]
            }
        },
        "1.14-buster": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:30dfee8ee31347eafdf2af403564f583724d0c2cee8ac542c506bb92493b2c09",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "4626ad67e08416a476d61760f088c06d3a5b2f52ce05a415fddca40b786803e6",
            "container_config": {
                "Hostname": "4626ad67e084",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:30dfee8ee31347eafdf2af403564f583724d0c2cee8ac542c506bb92493b2c09",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-02-09T21:51:48.444106365Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-02-09T02:40:45.953725429Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:78412ee35e3dc6fb5fdfce41eb05dd273ba1d49328ab327465639bfa4821aa51 in / "
                },
                {
                    "created": "2021-02-09T02:40:50.212588912Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-09T04:43:43.898983099Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-02-09T04:43:54.867823571Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2021-02-09T04:44:26.980723568Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-02-09T21:49:51.728205337Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-02-09T21:49:54.122012674Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-09T21:51:26.166773056Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.15",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-09T21:51:41.587340605Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\t'amd64') \t\t\tarch='linux-amd64'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.15.linux-amd64.tar.gz'; \t\t\tsha256='c64a57b374a81f7cf1408d2c410a28c6f142414f1ffa9d1062de1d653b0ae0d6'; \t\t\t;; \t\t'armhf') \t\t\tarch='linux-armv6l'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.15.linux-armv6l.tar.gz'; \t\t\tsha256='a63960d9b9c14954e299ffe060c0574ffb91ab810837da5941853b664d0652da'; \t\t\t;; \t\t'arm64') \t\t\tarch='linux-arm64'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.15.linux-arm64.tar.gz'; \t\t\tsha256='4d964166a189c22032521c63935437c304bb7f01673b196898cff525897a1c27'; \t\t\t;; \t\t'i386') \t\t\tarch='linux-386'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.15.linux-386.tar.gz'; \t\t\tsha256='cab962eaf954378bbb5b24f703baf3b471e9690a109082dd688593fbb6f9008e'; \t\t\t;; \t\t'ppc64el') \t\t\tarch='linux-ppc64le'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.15.linux-ppc64le.tar.gz'; \t\t\tsha256='64d82004270bcd00948dbed9f1a123ef844ceb7633e6a87a5ca7ef8bdf59cfc1'; \t\t\t;; \t\t's390x') \t\t\tarch='linux-s390x'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.15.linux-s390x.tar.gz'; \t\t\tsha256='8e121c947ec531628d37ad0292623f22c8f9fecac6067192b5cce34b36cedd79'; \t\t\t;; \t\t*) \t\t\tarch='src'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.15.src.tar.gz'; \t\t\tsha256='7ed13b2209e54a451835997f78035530b331c5b6943cdcd68a3d815fdc009149'; \t\t\techo >&2; \t\t\techo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; \t\t\techo >&2; \t\t\t;; \tesac; \t\twget -O go.tgz.asc \"$url.asc\" --progress=dot:giga; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum --strict --check -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$arch\" = 'src' ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \t\teval \"$goEnv\"; \t\t[ -n \"$GOOS\" ]; \t\t[ -n \"$GOARCH\" ]; \t\t( \t\t\tcd /usr/local/go/src; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2021-02-09T21:51:44.852113428Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-09T21:51:45.592925951Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-09T21:51:47.671619465Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-02-09T21:51:48.444106365Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8b48d02fb3dba95b118eedf573f2597e68b023b573afba0f7d3d022916403fe2",
                    "sha256:a962cf2c9f2de76abccf25ff88b0e4ff5f57479c9ffd0cd9282ff927a7967bb8",
                    "sha256:cc76a08251e16bc5622f718892764d4a20324dff712fe0bd360d5d535277929e",
                    "sha256:7e651d61f4f6e7e9e8f2cba5b9285c02bb3491487d8cef1366b7b679b91b69c5",
                    "sha256:fc91257f3d3554ff917fe8e82da3f62e9e80534a8c942e88ed0777cb11ea449f",
                    "sha256:e0c5606e3b2f4c51afafac46da0f3d5b36237d734a8d4eeecec9c420f48703f4",
                    "sha256:6b25dbda83643b99ca3a6480eeb5e386fdd10782eec6cba0a58e2a3e21d9962e"
                ]
            }
        },
        "1.14-rc-alpine": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:36354fb24bd554f96c40a84d76b7eb58289cb2a639527cf72f66753be66216b0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "a882446d1ca61fdd1f9dc82f4e0f71d202fe9be559acdc268f7b26fd52557c41",
            "container_config": {
                "Hostname": "a882446d1ca6",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:36354fb24bd554f96c40a84d76b7eb58289cb2a639527cf72f66753be66216b0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-06T01:43:33.954805042Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-01-18T01:39:43.076306142Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4109fa86dd80850e84c689ff9e6a3243e30ab1bbcc00c765969b3011bfbb43e1 in / "
                },
                {
                    "created": "2020-01-18T01:39:43.809479591Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T06:10:29.605168752Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-01-18T06:10:36.930249136Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-02-06T01:41:03.473138342Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14rc1",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-06T01:43:25.369514503Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '76188ea84e95baa502d058c9598020c7654d6adaf40b82cabcf57c68df19963a *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-06T01:43:29.019063527Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-06T01:43:30.044363046Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-06T01:43:32.85728396Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-06T01:43:33.954805042Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:53745f29fdbf5642c5275f34b9803e69742e082df0a7bb3316ece48ba45c622f",
                    "sha256:9c60a09a3ecd837e13b7a944fdd5b15a2474f2e90c7816d4c28658263fcd525c",
                    "sha256:1e344161583c7ea28934eb5e22d72155510bdd29547dc503702fddac86a9a05f",
                    "sha256:bdc24a4477bfec5e2441c1ff29b6fb905103e9b02aa3f866cc47cd577784afa4",
                    "sha256:6861411843a28cd6c9e56eb8e5cc429ce4fa8b4437d55f4c7f90ad41e69426b1"
                ]
            }
        },
        "1.14-rc-alpine3.10": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:88269c097148c3edfce84e64b6b2c40a48fd63e3afe84df62e525f6c8ab4e9c6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "91a90572baf189a721b759bfba41d63d81c1672c1f20e96d0414afc02e035783",
            "container_config": {
                "Hostname": "91a90572baf1",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:88269c097148c3edfce84e64b6b2c40a48fd63e3afe84df62e525f6c8ab4e9c6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-12-18T00:42:57.930144297Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-10-21T18:07:03.117600212Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:02f4d68afd9e9e303ff893f198d535d0d78c4b2554f299ab2d0955b2bef0e06a in / "
                },
                {
                    "created": "2019-10-21T18:07:09.671538787Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T18:59:13.497484439Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-10-21T18:59:15.253383191Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-12-18T00:40:25.981229001Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14beta1",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-18T00:42:39.258468884Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'af952217fcb408180006f29e77f1c3b871192fba7f99abd5aa421cf2f0358fea *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-12-18T00:42:48.699035328Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-18T00:42:50.237782798Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-18T00:42:55.891966333Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-12-18T00:42:57.930144297Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:98713a20507f1aad3aa66c7dbad7b0ff777101087c0b6bea75f01b639bb09e2f",
                    "sha256:05bcc5dae4ab2b9477ae7ba8c4b3c62fdb50d65b69442acdf8e8d36c0cb2a1b4",
                    "sha256:52cc6f662e05f85fcbc51bf5fdf53e3e51101e1b46970ed36ed5dcdf6fbd6076",
                    "sha256:80c9756ea5a39d640fee219b9add79fd9399cea264f0993d0792e195e859b0b2",
                    "sha256:d10b49e6dd8610e0a983c3657322b0a2c7a844abaa85b59cba875ec2d64f7e5b"
                ]
            }
        },
        "1.14-rc-alpine3.11": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:36354fb24bd554f96c40a84d76b7eb58289cb2a639527cf72f66753be66216b0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "a882446d1ca61fdd1f9dc82f4e0f71d202fe9be559acdc268f7b26fd52557c41",
            "container_config": {
                "Hostname": "a882446d1ca6",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:36354fb24bd554f96c40a84d76b7eb58289cb2a639527cf72f66753be66216b0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-06T01:43:33.954805042Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-01-18T01:39:43.076306142Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4109fa86dd80850e84c689ff9e6a3243e30ab1bbcc00c765969b3011bfbb43e1 in / "
                },
                {
                    "created": "2020-01-18T01:39:43.809479591Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T06:10:29.605168752Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-01-18T06:10:36.930249136Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-02-06T01:41:03.473138342Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14rc1",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-06T01:43:25.369514503Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '76188ea84e95baa502d058c9598020c7654d6adaf40b82cabcf57c68df19963a *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-06T01:43:29.019063527Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-06T01:43:30.044363046Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-06T01:43:32.85728396Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-06T01:43:33.954805042Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:53745f29fdbf5642c5275f34b9803e69742e082df0a7bb3316ece48ba45c622f",
                    "sha256:9c60a09a3ecd837e13b7a944fdd5b15a2474f2e90c7816d4c28658263fcd525c",
                    "sha256:1e344161583c7ea28934eb5e22d72155510bdd29547dc503702fddac86a9a05f",
                    "sha256:bdc24a4477bfec5e2441c1ff29b6fb905103e9b02aa3f866cc47cd577784afa4",
                    "sha256:6861411843a28cd6c9e56eb8e5cc429ce4fa8b4437d55f4c7f90ad41e69426b1"
                ]
            }
        },
        "1.14-rc-buster": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:4ed7b88a1ffa032a03177a139e59fdfc3d7e7d9f097010a8eae26899c6cd3e49",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "9d13308f741cbf00fa6d4cd5e8fafb6037e77b973323559b81c1eb49518e2653",
            "container_config": {
                "Hostname": "9d13308f741c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:4ed7b88a1ffa032a03177a139e59fdfc3d7e7d9f097010a8eae26899c6cd3e49",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-06T01:40:54.017550421Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-02-01T16:40:50.672557644Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b423f4b0ed41dfe1334031fe9b21f7e1c88ccb031d7e8f2ff165d618323424d7 in / "
                },
                {
                    "created": "2020-02-01T16:40:53.171343122Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-01T17:18:39.317847599Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-01T17:18:51.706437073Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-02-01T17:19:27.114332889Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-02T11:08:58.969394142Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-06T01:40:08.527056399Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14rc1",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-06T01:40:37.725441989Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='69398d41e5f6b87cdf3969aae665be4dfd3cc2ef36a61ab47a261f96130ed788' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='bfe041f7d2a62f895f2d11703a29bdd31a48cca9a3c36418d59680bc1cbb8a6d' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='a5509448b06f02f5198fe8bbf5af88ab483af9c46f231c3f308748016fbc32c9' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='831087aa0eba8b6dfa221036d00641613996ac66d7c635f1e34c53d5f0922623' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='fe1bf34d2b117d785f2fb33151c44ca8bc2188678c9e903fa0ad30573547b412' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='2302fa0e30144a969cb1879eed8aeb9a82c2b520fcda8aebbb20a539ad427c25' ;; \t\t*) goRelArch='src'; goRelSha256='76188ea84e95baa502d058c9598020c7654d6adaf40b82cabcf57c68df19963a'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-06T01:40:41.200263983Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-06T01:40:44.956026837Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-06T01:40:50.413045202Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-06T01:40:54.017550421Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4c0a780b5c559771bd7939715e552ce5dd7f031b23dfb53bea76d8d303a07f4f",
                    "sha256:53882b0b06b691760199e1c8232da08dfb9a00a7914c4327acdf70a1f243fb79",
                    "sha256:d7c0094a20c8f46e323511c505f15f4bb53f8be0722b763620e2d74935ea4cd4",
                    "sha256:a1c545c647123030790d740c8deb543de50e789258eab2960a43205f442a6882",
                    "sha256:0c9ee1aead43b5e3b0f0edaa5812fed660d61b78e9cce2d53d046bbdd60bdf7e",
                    "sha256:a3c9328ac747706135437052b72e6cc7491036e3808f4bb1ac1bc4b4ac153e1b",
                    "sha256:896bfd23970bdb93ab71e4c90dac7a23507f4f3a2e98ad5a4c1ec8009248cc52"
                ]
            }
        },
        "1.14-rc-stretch": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f65ccb2358a1aa9dc84a03162577294d38d52b166f55ef6fa4b7512f70de8ffc",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "c1d24bc1d93602c28fc806a750d284960994c099fec76556c2055f65dbd61fa0",
            "container_config": {
                "Hostname": "c1d24bc1d936",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f65ccb2358a1aa9dc84a03162577294d38d52b166f55ef6fa4b7512f70de8ffc",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-10T23:44:11.715720879Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-02-01T16:43:01.284413168Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:1618e6474dbe6462a610ce7eed99f0bfd087ea37ddfc287bbd69def5c24ede47 in / "
                },
                {
                    "created": "2020-02-01T16:43:02.994039335Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-01T17:29:40.136456721Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-01T17:29:52.862467817Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-02-01T17:30:30.600101397Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-02T11:10:28.164144474Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-10T23:43:51.302228001Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14rc1",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-10T23:44:06.943494431Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='69398d41e5f6b87cdf3969aae665be4dfd3cc2ef36a61ab47a261f96130ed788' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='bfe041f7d2a62f895f2d11703a29bdd31a48cca9a3c36418d59680bc1cbb8a6d' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='a5509448b06f02f5198fe8bbf5af88ab483af9c46f231c3f308748016fbc32c9' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='831087aa0eba8b6dfa221036d00641613996ac66d7c635f1e34c53d5f0922623' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='fe1bf34d2b117d785f2fb33151c44ca8bc2188678c9e903fa0ad30573547b412' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='2302fa0e30144a969cb1879eed8aeb9a82c2b520fcda8aebbb20a539ad427c25' ;; \t\t*) goRelArch='src'; goRelSha256='76188ea84e95baa502d058c9598020c7654d6adaf40b82cabcf57c68df19963a'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-10T23:44:09.07799003Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-10T23:44:09.605899162Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-10T23:44:11.170518562Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-10T23:44:11.715720879Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b3a6ef74a999da2ed536dd1f8b5295125f78872a00882123d7d80e344f24f646",
                    "sha256:69fc517042bb1cf30e22fcce18abbd4da50d54ac2f76accbe7a083bc1a692c35",
                    "sha256:6db6ab27fb99f39477ca67b4ebae65dbfa6779a359326dabd5abca166c4c5c9b",
                    "sha256:f052fb6fefd44da08bd449d4a49081c17eb7b33e1258db8359d3bd1f8d5606c2",
                    "sha256:4cd9d6cdb137586211460efd96d5117a90bbc331c0adb01d9370ee49d6c014e1",
                    "sha256:4814563285930f7202bbb2d2bf2f190b5427336d49f9f7415723214a15427e4a",
                    "sha256:df5e00a537ed32de5afd4158fb89bacec798b0022e7787e182196fe3936df6b6"
                ]
            }
        },
        "1.14-stretch": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:64785276c643aae4a1d99fd728c0d72470a1434f7f71b7aba7f710d29cc92f4f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "e4c7973c1bff6a6c844fdb5d73440e7e4d21ff10ce9e6cf24c8eaca3cad302d1",
            "container_config": {
                "Hostname": "e4c7973c1bff",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:64785276c643aae4a1d99fd728c0d72470a1434f7f71b7aba7f710d29cc92f4f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-02-09T21:52:40.527539924Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-02-09T02:43:17.215780489Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fb69ff7b2a28f793efbd16e04b74ffb4557d39e1844b3789075b4d3ff97a0eaa in / "
                },
                {
                    "created": "2021-02-09T02:43:20.032537103Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-09T04:50:24.605173051Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tapt-transport-https \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-02-09T04:50:35.219512446Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2021-02-09T04:51:15.494967404Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-02-09T21:52:14.626649885Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-02-09T21:52:16.312628939Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-09T21:52:16.984348612Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.15",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-09T21:52:34.033416623Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\t'amd64') \t\t\tarch='linux-amd64'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.15.linux-amd64.tar.gz'; \t\t\tsha256='c64a57b374a81f7cf1408d2c410a28c6f142414f1ffa9d1062de1d653b0ae0d6'; \t\t\t;; \t\t'armhf') \t\t\tarch='linux-armv6l'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.15.linux-armv6l.tar.gz'; \t\t\tsha256='a63960d9b9c14954e299ffe060c0574ffb91ab810837da5941853b664d0652da'; \t\t\t;; \t\t'arm64') \t\t\tarch='linux-arm64'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.15.linux-arm64.tar.gz'; \t\t\tsha256='4d964166a189c22032521c63935437c304bb7f01673b196898cff525897a1c27'; \t\t\t;; \t\t'i386') \t\t\tarch='linux-386'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.15.linux-386.tar.gz'; \t\t\tsha256='cab962eaf954378bbb5b24f703baf3b471e9690a109082dd688593fbb6f9008e'; \t\t\t;; \t\t'ppc64el') \t\t\tarch='linux-ppc64le'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.15.linux-ppc64le.tar.gz'; \t\t\tsha256='64d82004270bcd00948dbed9f1a123ef844ceb7633e6a87a5ca7ef8bdf59cfc1'; \t\t\t;; \t\t's390x') \t\t\tarch='linux-s390x'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.15.linux-s390x.tar.gz'; \t\t\tsha256='8e121c947ec531628d37ad0292623f22c8f9fecac6067192b5cce34b36cedd79'; \t\t\t;; \t\t*) \t\t\tarch='src'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.15.src.tar.gz'; \t\t\tsha256='7ed13b2209e54a451835997f78035530b331c5b6943cdcd68a3d815fdc009149'; \t\t\techo >&2; \t\t\techo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; \t\t\techo >&2; \t\t\t;; \tesac; \t\twget -O go.tgz.asc \"$url.asc\" --progress=dot:giga; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum --strict --check -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$arch\" = 'src' ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \t\teval \"$goEnv\"; \t\t[ -n \"$GOOS\" ]; \t\t[ -n \"$GOARCH\" ]; \t\t( \t\t\tcd /usr/local/go/src; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2021-02-09T21:52:36.791681837Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-09T21:52:37.555554842Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-09T21:52:39.804873455Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-02-09T21:52:40.527539924Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ffff308d208ea88d0d9952f38ebeca34d2f3300ae5cef0a5d1db0c4d5d921bd9",
                    "sha256:78e30c2fe499706708ade019b7b5562a04cab5f1a337c79c078f7d083a3a0472",
                    "sha256:71e69eecdf654c26f98fb1ade95bf990275f3d0221631f219633ffdbeacf9240",
                    "sha256:15af7dc952c03b28c96b12562f11cd3c064275c8d4d2eb41ef724c42a2d81aa6",
                    "sha256:f5099313dd660c29a3172140b3164d4c211a155be8ee0c25b46ec9756393ad38",
                    "sha256:2fe43ec8cb93cf0cae3c382de21dbeb0f38be67126bdeb5877b60aff2cf330f9",
                    "sha256:221364bce8fd9d05c963785a66d2f3b54983266189307a7c326578769448d347"
                ]
            }
        },
        "1.14.0-alpine": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3fa109f208f3408e27c27e92eef63643d8124e8564f5fa05f54fbf62f46b6db1",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "a540702a9a5f57940ad4ae62880dcc0aaac5d6b9f496f74ca902279b9675f562",
            "container_config": {
                "Hostname": "a540702a9a5f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3fa109f208f3408e27c27e92eef63643d8124e8564f5fa05f54fbf62f46b6db1",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-26T01:09:12.419940322Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-01-18T01:39:43.076306142Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4109fa86dd80850e84c689ff9e6a3243e30ab1bbcc00c765969b3011bfbb43e1 in / "
                },
                {
                    "created": "2020-01-18T01:39:43.809479591Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T06:10:29.605168752Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-01-18T06:10:36.930249136Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-02-26T01:04:27.030931217Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-26T01:08:21.6627052Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '6d643e46ad565058c7a39dac01144172ef9bd476521f42148be59249e4b74389 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-26T01:08:33.308666248Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-26T01:08:43.560054511Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-26T01:09:06.737222899Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-26T01:09:12.419940322Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:53745f29fdbf5642c5275f34b9803e69742e082df0a7bb3316ece48ba45c622f",
                    "sha256:9c60a09a3ecd837e13b7a944fdd5b15a2474f2e90c7816d4c28658263fcd525c",
                    "sha256:1e344161583c7ea28934eb5e22d72155510bdd29547dc503702fddac86a9a05f",
                    "sha256:03fcfc79d86fdf5ed403f68e56d98d0b0845c2f6f78019d7d6d68ce184e952e3",
                    "sha256:c75ce7626d688ae89aa7901a77d34828881fe68f6862934131b7f2460b2ea0ee"
                ]
            }
        },
        "1.14.0-alpine3.11": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3fa109f208f3408e27c27e92eef63643d8124e8564f5fa05f54fbf62f46b6db1",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "a540702a9a5f57940ad4ae62880dcc0aaac5d6b9f496f74ca902279b9675f562",
            "container_config": {
                "Hostname": "a540702a9a5f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3fa109f208f3408e27c27e92eef63643d8124e8564f5fa05f54fbf62f46b6db1",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-26T01:09:12.419940322Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-01-18T01:39:43.076306142Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4109fa86dd80850e84c689ff9e6a3243e30ab1bbcc00c765969b3011bfbb43e1 in / "
                },
                {
                    "created": "2020-01-18T01:39:43.809479591Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T06:10:29.605168752Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-01-18T06:10:36.930249136Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-02-26T01:04:27.030931217Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-26T01:08:21.6627052Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '6d643e46ad565058c7a39dac01144172ef9bd476521f42148be59249e4b74389 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-26T01:08:33.308666248Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-26T01:08:43.560054511Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-26T01:09:06.737222899Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-26T01:09:12.419940322Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:53745f29fdbf5642c5275f34b9803e69742e082df0a7bb3316ece48ba45c622f",
                    "sha256:9c60a09a3ecd837e13b7a944fdd5b15a2474f2e90c7816d4c28658263fcd525c",
                    "sha256:1e344161583c7ea28934eb5e22d72155510bdd29547dc503702fddac86a9a05f",
                    "sha256:03fcfc79d86fdf5ed403f68e56d98d0b0845c2f6f78019d7d6d68ce184e952e3",
                    "sha256:c75ce7626d688ae89aa7901a77d34828881fe68f6862934131b7f2460b2ea0ee"
                ]
            }
        },
        "1.14.0-buster": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c11145ca3a6a4bca6d42589335457454cc3658a5eef93b24d06b378e8a3d83fb",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "b3d54aca125e44681f5f334aa359c51b29722afddffa7b62321cca4cd94cd801",
            "container_config": {
                "Hostname": "b3d54aca125e",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c11145ca3a6a4bca6d42589335457454cc3658a5eef93b24d06b378e8a3d83fb",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-26T23:00:02.109449521Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-02-26T00:46:17.069622833Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e3320653f0d517a6181aa46fb47407790018e2d8dee590005ffdbee3d04f72d4 in / "
                },
                {
                    "created": "2020-02-26T00:46:19.28110458Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-26T03:50:14.468879735Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-26T03:50:28.223407967Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-02-26T03:51:23.435681399Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-26T22:59:41.219684666Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-26T22:59:43.764679247Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-26T22:59:56.553246875Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='08df79b46b0adf498ea9f320a0f23d6ec59e9003660b4c9c1ce8e5e2c6f823ca' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='b5e682176d7ad3944404619a39b585453a740a2f82683e789f4279ec285b7ecd' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='cd813387f770c07819912f8ff4b9796a4e317dee92548b7226a19e60ac79eb27' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='cdcdab6c8d1f2dcea3bbec793352ef84db167a2eb6c60ff69e5cf94dca575f9a' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='b896b5eba616d27fd3bb8218de6bef557cb62221e42f73c84ae4b89cdb602dec' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='22e67470fe872c893face196f02323a11ffe89999260c136b9c50f06619e0243' ;; \t\t*) goRelArch='src'; goRelSha256='6d643e46ad565058c7a39dac01144172ef9bd476521f42148be59249e4b74389'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-26T22:59:59.417806484Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-26T22:59:59.936736861Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-26T23:00:01.563896204Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-26T23:00:02.109449521Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:61143ad0ddbaf6e73ad5713b4a9b38faf88d3978bedcd3fad4a31293f7cb6242",
                    "sha256:d86716fab0a30b5df7674a2c6d3892faf866c1aeb0ef9e03675187df283fd2d8",
                    "sha256:7add67e9ac341bda1e2dcc1e61396b2b20c843b90d45532bca10f620eb6e0db2",
                    "sha256:258526303f1fa23e2bb86777d2b3f8bf84bf7e9bf15004ad22abfb3b0df1cfd0",
                    "sha256:d5b021294439fd7c07c436dbcc3131a19d0dc0ce44413c5f36d95d8b693d232e",
                    "sha256:2052c9682d466acb012010dd8cd4ff3a08bc01b26a148af1b250683a9747c94f",
                    "sha256:44cbc30cb4a08724191ca06c29eb745a521fa6378d5e1275d0fdd3d9c841b071"
                ]
            }
        },
        "1.14.0-stretch": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a11843ddf4979e035f0691ef91cf906eac7774ad801cec2c6e035c28c1c229f7",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "98df09670b1982253604fc3c984f48df41d2302f88c13d4bc9075a5072281ca3",
            "container_config": {
                "Hostname": "98df09670b19",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a11843ddf4979e035f0691ef91cf906eac7774ad801cec2c6e035c28c1c229f7",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-26T23:01:03.038186804Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-02-26T00:50:03.175190157Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c82c7dc82c2eb3b50218c35e1b848f707b134d2df957f57125408f69aaeb9b96 in / "
                },
                {
                    "created": "2020-02-26T00:50:15.222470421Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-26T03:59:11.8365466Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-26T03:59:21.415072037Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-02-26T04:00:04.400012095Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-26T23:00:31.778247699Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-26T23:00:34.625706864Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-26T23:00:52.589674699Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='08df79b46b0adf498ea9f320a0f23d6ec59e9003660b4c9c1ce8e5e2c6f823ca' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='b5e682176d7ad3944404619a39b585453a740a2f82683e789f4279ec285b7ecd' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='cd813387f770c07819912f8ff4b9796a4e317dee92548b7226a19e60ac79eb27' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='cdcdab6c8d1f2dcea3bbec793352ef84db167a2eb6c60ff69e5cf94dca575f9a' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='b896b5eba616d27fd3bb8218de6bef557cb62221e42f73c84ae4b89cdb602dec' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='22e67470fe872c893face196f02323a11ffe89999260c136b9c50f06619e0243' ;; \t\t*) goRelArch='src'; goRelSha256='6d643e46ad565058c7a39dac01144172ef9bd476521f42148be59249e4b74389'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-26T23:00:54.997166265Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-26T23:00:57.456199723Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-26T23:01:00.116440863Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-26T23:01:03.038186804Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:37094b4768a4eb3d0b68bc14e6af00fa7ec73bcd9f974c3e9868984fe29068fc",
                    "sha256:604f5dee74405af2f20628dfbf6e7d6e8d9fa420c4c1553dd01d8866996265f6",
                    "sha256:3bd284db7fec7bf9c528866597f1c2dd1e3398640e8ec3de0129857b1e908c3f",
                    "sha256:3eba10c625ca226e60492f46ea16e61c698ed007b45a91911c07960f964a03f8",
                    "sha256:0d6fa7132bb69bea3b0408a2d16ed9639ec85bd741617a0b2f46658c19025b2f",
                    "sha256:b168c4ad6985aa732ce94fb49b852a14bc1c66c0f6620c573704bc929305f935",
                    "sha256:d402b6bdfd8d4b1bbf876f13d377664bbae969f1619e716f1402916893b01c04"
                ]
            }
        },
        "1.14.1-alpine": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f3424e641877864c8892115a1df49f224a739e3b15a1751ad110a3901c5567d5",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "709df81f162f22aa588fa26572047bf48c5aeb0f60d52baf6c0e328a9696f302",
            "container_config": {
                "Hostname": "709df81f162f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f3424e641877864c8892115a1df49f224a739e3b15a1751ad110a3901c5567d5",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-03-23T23:00:25.848211557Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-03-23T21:39:52.296870342Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:746a5c3838a898d6acf7877552ff13d1ab40d0036ace7a662e7c747018315ddb in / "
                },
                {
                    "created": "2020-03-23T21:39:53.041338799Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-23T22:58:12.028046079Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-03-23T22:58:13.897468867Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-03-23T22:58:14.437217716Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.1",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-23T23:00:19.645458741Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '2ad2572115b0d1b4cb4c138e6b3a31cee6294cb48af75ee86bec3dca04507676 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-03-23T23:00:21.32287605Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-23T23:00:22.345979293Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-23T23:00:24.84357011Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-03-23T23:00:25.848211557Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a",
                    "sha256:a35056393a88a3b8e3a9c354458d9a881a578ab16139e85a969673609658c630",
                    "sha256:f2b86cb5927e2a2cbad780c59ce754ee57649ceaeb394c870000939d766d551d",
                    "sha256:3ebb01128f890b905885c293419a5edfea799641737da5c093cd92abef8f2d3e",
                    "sha256:c12f7d2903a5ac4fcde0c9d162b73a4e9bd2c881222430e84bb9bd4fcfd70158"
                ]
            }
        },
        "1.14.1-alpine3.11": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f3424e641877864c8892115a1df49f224a739e3b15a1751ad110a3901c5567d5",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "709df81f162f22aa588fa26572047bf48c5aeb0f60d52baf6c0e328a9696f302",
            "container_config": {
                "Hostname": "709df81f162f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f3424e641877864c8892115a1df49f224a739e3b15a1751ad110a3901c5567d5",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-03-23T23:00:25.848211557Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-03-23T21:39:52.296870342Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:746a5c3838a898d6acf7877552ff13d1ab40d0036ace7a662e7c747018315ddb in / "
                },
                {
                    "created": "2020-03-23T21:39:53.041338799Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-23T22:58:12.028046079Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-03-23T22:58:13.897468867Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-03-23T22:58:14.437217716Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.1",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-23T23:00:19.645458741Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '2ad2572115b0d1b4cb4c138e6b3a31cee6294cb48af75ee86bec3dca04507676 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-03-23T23:00:21.32287605Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-23T23:00:22.345979293Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-23T23:00:24.84357011Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-03-23T23:00:25.848211557Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a",
                    "sha256:a35056393a88a3b8e3a9c354458d9a881a578ab16139e85a969673609658c630",
                    "sha256:f2b86cb5927e2a2cbad780c59ce754ee57649ceaeb394c870000939d766d551d",
                    "sha256:3ebb01128f890b905885c293419a5edfea799641737da5c093cd92abef8f2d3e",
                    "sha256:c12f7d2903a5ac4fcde0c9d162b73a4e9bd2c881222430e84bb9bd4fcfd70158"
                ]
            }
        },
        "1.14.1-buster": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:381658fa773ee2a954bcda11936ceb7d9498fb14548caa5a0b864c64763c4e64",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "d194157bb94e52bef5efd62f133daefb15ef572ab5e4a9e3349f41984c78fb23",
            "container_config": {
                "Hostname": "d194157bb94e",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:381658fa773ee2a954bcda11936ceb7d9498fb14548caa5a0b864c64763c4e64",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-04-01T00:46:15.765849076Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-03-31T02:05:07.518979913Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d0df7ac13226f8d35c078941a20d8a465b09a4e226c5ca37709fa23599cd56dc in / "
                },
                {
                    "created": "2020-03-31T02:05:09.596883488Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-31T04:33:05.996689392Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-03-31T04:33:18.142759556Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-03-31T04:33:56.352948949Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-04-01T00:45:53.888266804Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-04-01T00:45:55.465970347Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.1",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-01T00:46:10.678747929Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='2f49eb17ce8b48c680cdb166ffd7389702c0dec6effa090c324804a5cac8a7f8' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='04f10e345dae0d7c6c32ffd6356b47f2d4d0e8a0cb757f4ef48ead6c5bef206f' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='5d8f2c202f35481617e24e63cca30c6afb1ec2585006c4a6ecf16c5f4928ab3c' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='92d465accdebbe2d0749b2f90c22ecb1fd2492435144923f88ce410cd56b6546' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='6559201d452ee2782dfd684d59c05e3ecf789dc40a7ec0ad9ae2dd9f489c0fe1' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='af009bd6e7729c441fec78af427743fefbf11f919c562e01b37836d835f74226' ;; \t\t*) goRelArch='src'; goRelSha256='2ad2572115b0d1b4cb4c138e6b3a31cee6294cb48af75ee86bec3dca04507676'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-04-01T00:46:12.70169146Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-01T00:46:13.252986237Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-01T00:46:15.118591004Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-04-01T00:46:15.765849076Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ec72c4870d531e57c5410ad62494252529b3f31bda5e961e351720552e7cc8e5",
                    "sha256:f74f498a8f88bc6f2f42618546ea97ff8e65d35b288d1af634766cea61239b40",
                    "sha256:96b07624b4f9c1b0bf6476b27cff2f2e938ea7df484166782e669e6eb0552648",
                    "sha256:378efb1f503323ca34fd81f6287f117313068f2e6240c1867193335278f87283",
                    "sha256:bf209a15a7f86288709891ede554a922e10c446e802cc944ef177baeb4c47387",
                    "sha256:11b963e9d43e5fa50749fb65d6b8533e01081b5854b7b83f12b3bab35bc7c7e4",
                    "sha256:da3b15cffd13efc681b1e859dec99ef8f49eb39a49e047e91cadf24f2cc2996f"
                ]
            }
        },
        "1.14.1-stretch": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d6aeca47b6cbc713ef48ed63d310376986ade27f5d798457c803f6d8db9a1127",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "beb433df38858adb5bbd61dba23e0fac79a2a0a2084749f2bf056968bc3713b1",
            "container_config": {
                "Hostname": "beb433df3885",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d6aeca47b6cbc713ef48ed63d310376986ade27f5d798457c803f6d8db9a1127",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-04-01T00:47:00.834306866Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-03-31T02:08:11.937458664Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ab80e35f9496440fac439083c9c9c18cd80521039d4bc4f4082e8e84a5e9fcda in / "
                },
                {
                    "created": "2020-03-31T02:08:15.286406718Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-31T04:41:08.834879561Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-03-31T04:41:19.462772318Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-03-31T04:42:03.768866698Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-04-01T00:46:38.494282806Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-04-01T00:46:40.99150646Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.1",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-01T00:46:54.835406132Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='2f49eb17ce8b48c680cdb166ffd7389702c0dec6effa090c324804a5cac8a7f8' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='04f10e345dae0d7c6c32ffd6356b47f2d4d0e8a0cb757f4ef48ead6c5bef206f' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='5d8f2c202f35481617e24e63cca30c6afb1ec2585006c4a6ecf16c5f4928ab3c' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='92d465accdebbe2d0749b2f90c22ecb1fd2492435144923f88ce410cd56b6546' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='6559201d452ee2782dfd684d59c05e3ecf789dc40a7ec0ad9ae2dd9f489c0fe1' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='af009bd6e7729c441fec78af427743fefbf11f919c562e01b37836d835f74226' ;; \t\t*) goRelArch='src'; goRelSha256='2ad2572115b0d1b4cb4c138e6b3a31cee6294cb48af75ee86bec3dca04507676'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-04-01T00:46:57.313586323Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-01T00:46:58.381694652Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-01T00:47:00.203733664Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-04-01T00:47:00.834306866Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1cfc75702c7404bde4c584658a7da37aa536aa04853a1b37e14423829f202e65",
                    "sha256:712389188961228ef6fe8af2d6e498e20f14a64270a05c38f7dc530201f32dff",
                    "sha256:a5f86e74b38a95b1317ccdfe461be2021e6038f79aa7bef8972e9996ee288237",
                    "sha256:ede9347f4c59eff115522dacf7dc7dd982ce227b520858c4fa57df912ac739d2",
                    "sha256:c16a7fe806fbb0a26d2b9f24e0a689e7c9c1dc48c05cf1023473c5f14b8fd3ad",
                    "sha256:276ce42d7efcb0f1ff30447fc06a15cd8aba43547a8788e03ef267607f7e7c49",
                    "sha256:a440e0a949c93437bc7735b5b13ee6b98b1cb70dc00c1a0e4077882a3a95ab01"
                ]
            }
        },
        "1.14.10-alpine": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:81414a437de7325233d7cfb640c3306422d092e280aa5a64ab3faab25036367c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f0c53c6b1f65662f15b9dc55b5674387e29adca3043d3443eb4c06ee73bdb4bf",
            "container_config": {
                "Hostname": "f0c53c6b1f65",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:81414a437de7325233d7cfb640c3306422d092e280aa5a64ab3faab25036367c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-10-22T04:25:37.541258098Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-10-22T02:01:01.644449272Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:55c4e9752146061a2b5f76027221329f423687987c0744ef577130c60ff0ba42 in / "
                },
                {
                    "created": "2020-10-22T02:01:06.861515944Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-22T04:08:19.956593783Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-10-22T04:09:32.568220128Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-10-22T04:09:56.235354738Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-22T04:18:31.417345788Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.10",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-22T04:24:16.575429323Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\turl='https://storage.googleapis.com/golang/go1.14.10.src.tar.gz'; \tsha256='b37699a7e3eab0f90412b3969a90fd072023ecf61e0b86369da532810a95d665'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \teval \"$goEnv\"; \t[ -n \"$GOOS\" ]; \t[ -n \"$GOARCH\" ]; \t( \t\tcd /usr/local/go/src; \t\t./make.bash; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2020-10-22T04:24:23.076142412Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-22T04:24:35.430252346Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-22T04:25:17.679090892Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-10-22T04:25:37.541258098Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd3761cfa1d9a67e63677d272007823b2b19f90706286017eba48c79a1b3381c",
                    "sha256:80ca65ea30d3abc3231bd9a96a655df62c867d775e2e41c53f59086c5705fc50",
                    "sha256:eba31345ed7e2b78da240304df6e1f7b62eef94ad2ab5a872d33e31b9fc0b649",
                    "sha256:5a69211b874c8a86f4e87bb8e6b446539665c02205a92890fd8bf7544e1d9303",
                    "sha256:4589fc0bd683d77e72756b821fa33cc004bfe0a1857cea84e52312dbb659f9b6"
                ]
            }
        },
        "1.14.10-alpine3.11": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:84643df6a3e7bd4c7f89c7c68bd81912fd99282104973e11ab009cca368028aa",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f0693f15d1dc9536a12ea3477a015a9133ceaadcaafcb955f609e43bcdb4ce45",
            "container_config": {
                "Hostname": "f0693f15d1dc",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:84643df6a3e7bd4c7f89c7c68bd81912fd99282104973e11ab009cca368028aa",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-10-15T01:57:46.304578692Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-04-24T00:14:18.623777014Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:85ae77bc1e43353ff14e6fe1658be1ed4ecbf4330212ac3d7ab7462add32dd39 in / "
                },
                {
                    "created": "2020-04-24T00:14:21.043191759Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-24T09:30:19.959732843Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-04-24T09:30:22.482603996Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-09-01T00:10:56.985198147Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-15T01:49:21.041592433Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.10",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-15T01:55:17.249950783Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\turl='https://storage.googleapis.com/golang/go1.14.10.src.tar.gz'; \tsha256='b37699a7e3eab0f90412b3969a90fd072023ecf61e0b86369da532810a95d665'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \teval \"$goEnv\"; \t[ -n \"$GOOS\" ]; \t[ -n \"$GOARCH\" ]; \t( \t\tcd /usr/local/go/src; \t\t./make.bash; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2020-10-15T01:55:39.476765252Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-15T01:55:54.145994655Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-15T01:57:15.002040056Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-10-15T01:57:46.304578692Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:678a0785e7d29c77c56c1bb0af4b279374e731903506838956f7bc808665a6dd",
                    "sha256:079af829c0db80026b85d242cea6f54d5bd4d8d787d083da9ac0b6ada9e9cabc",
                    "sha256:b2e3f56df73e6b071d861884c1d0400f1dc635e9bc0f217a47886ba2cce82467",
                    "sha256:4d8c6fdf030d5d7df2d142a1e79c04133989615f097821e77d7e056c9d3fda6f",
                    "sha256:bbf59cafbc480512509a70026dce8c9f24c8148e44ac367173ea0ffb4144675c"
                ]
            }
        },
        "1.14.10-alpine3.12": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:81414a437de7325233d7cfb640c3306422d092e280aa5a64ab3faab25036367c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f0c53c6b1f65662f15b9dc55b5674387e29adca3043d3443eb4c06ee73bdb4bf",
            "container_config": {
                "Hostname": "f0c53c6b1f65",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:81414a437de7325233d7cfb640c3306422d092e280aa5a64ab3faab25036367c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-10-22T04:25:37.541258098Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-10-22T02:01:01.644449272Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:55c4e9752146061a2b5f76027221329f423687987c0744ef577130c60ff0ba42 in / "
                },
                {
                    "created": "2020-10-22T02:01:06.861515944Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-22T04:08:19.956593783Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-10-22T04:09:32.568220128Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-10-22T04:09:56.235354738Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-22T04:18:31.417345788Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.10",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-22T04:24:16.575429323Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\turl='https://storage.googleapis.com/golang/go1.14.10.src.tar.gz'; \tsha256='b37699a7e3eab0f90412b3969a90fd072023ecf61e0b86369da532810a95d665'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \teval \"$goEnv\"; \t[ -n \"$GOOS\" ]; \t[ -n \"$GOARCH\" ]; \t( \t\tcd /usr/local/go/src; \t\t./make.bash; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2020-10-22T04:24:23.076142412Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-22T04:24:35.430252346Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-22T04:25:17.679090892Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-10-22T04:25:37.541258098Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd3761cfa1d9a67e63677d272007823b2b19f90706286017eba48c79a1b3381c",
                    "sha256:80ca65ea30d3abc3231bd9a96a655df62c867d775e2e41c53f59086c5705fc50",
                    "sha256:eba31345ed7e2b78da240304df6e1f7b62eef94ad2ab5a872d33e31b9fc0b649",
                    "sha256:5a69211b874c8a86f4e87bb8e6b446539665c02205a92890fd8bf7544e1d9303",
                    "sha256:4589fc0bd683d77e72756b821fa33cc004bfe0a1857cea84e52312dbb659f9b6"
                ]
            }
        },
        "1.14.10-buster": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9ac6c4b199575d1fcc93f5c12bc5a33823395accdd1d288143551cd083e4934a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "d5df4e15a913d1fbbe5e479dd69f92029dc9e4309c50ba683126884664baea4f",
            "container_config": {
                "Hostname": "d5df4e15a913",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9ac6c4b199575d1fcc93f5c12bc5a33823395accdd1d288143551cd083e4934a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-10-15T01:44:03.725656243Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-10-13T01:40:40.372937592Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7a9016f6c75910c392bbea2cb9e146d1eba3942cdfd666a44004c79951c5d46f in / "
                },
                {
                    "created": "2020-10-13T01:40:45.467467779Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-13T02:32:48.525658926Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-10-13T02:33:03.560652691Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-10-13T02:33:48.976233314Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-10-13T22:19:27.886289607Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-10-13T22:19:40.46015242Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-15T01:43:42.490483536Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.10",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-15T01:43:57.431796548Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\t'amd64') \t\t\tarch='linux-amd64'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.10.linux-amd64.tar.gz'; \t\t\tsha256='66eb6858f375731ba07b0b33f5c813b141a81253e7e74071eec3ae85e9b37098'; \t\t\t;; \t\t'armhf') \t\t\tarch='linux-armv6l'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.10.linux-armv6l.tar.gz'; \t\t\tsha256='b601dbb186d786488470d73d4637c2144896bf6f499a4122bdd30f4e8dd79e70'; \t\t\t;; \t\t'arm64') \t\t\tarch='linux-arm64'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.10.linux-arm64.tar.gz'; \t\t\tsha256='30700f7a9df3148df81013bd38715acd09ca5203b8e0aafa8b985306d5e9882e'; \t\t\t;; \t\t'i386') \t\t\tarch='linux-386'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.10.linux-386.tar.gz'; \t\t\tsha256='0e8e955cc80d2d7046312d16d800be82aa8ce9c5165b936348851923a75b4484'; \t\t\t;; \t\t'ppc64el') \t\t\tarch='linux-ppc64le'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.10.linux-ppc64le.tar.gz'; \t\t\tsha256='ed5f7ab928ad8414598626740feac5918f7a915da943f21b41a81ad5c1dfa940'; \t\t\t;; \t\t's390x') \t\t\tarch='linux-s390x'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.10.linux-s390x.tar.gz'; \t\t\tsha256='0bd8b4ad9f4c5a766013cff898770cc1af63910ab680799c78b264d934cf8aab'; \t\t\t;; \t\t*) \t\t\tarch='src'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.10.src.tar.gz'; \t\t\tsha256='b37699a7e3eab0f90412b3969a90fd072023ecf61e0b86369da532810a95d665'; \t\t\techo >&2; \t\t\techo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; \t\t\techo >&2; \t\t\t;; \tesac; \t\twget -O go.tgz.asc \"$url.asc\" --progress=dot:giga; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum --strict --check -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$arch\" = 'src' ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \t\teval \"$goEnv\"; \t\t[ -n \"$GOOS\" ]; \t\t[ -n \"$GOARCH\" ]; \t\t( \t\t\tcd /usr/local/go/src; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2020-10-15T01:44:00.566655358Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-15T01:44:01.235898925Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-15T01:44:03.050490744Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-10-15T01:44:03.725656243Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:89046a2414a48772fae1738ba31ddb764f64120c410a4695d8c79363a6db0326",
                    "sha256:c023e7c8f74c04df3f70a48c40696b5905c75fa16ee67991057d32a22f3c04ad",
                    "sha256:97f28d2c0632f62a277804bf41ad43f3e457172e228ad2adcd420b65fb15c1f7",
                    "sha256:0524a6941b223e421edaaf1437280b05cb9036950d578fae948e9f7c3930788c",
                    "sha256:1bee2d07a933fc0fee1e7e983b0470c238e6bd60370ebc94211bd9b068121c4d",
                    "sha256:98dd469966ceb94337cda095740af58edae9771dfe01dd35d225bed5d5cfe9ad",
                    "sha256:ec8ddadea314f09181c8ec80764c3675f24d4979af160543cae8a587c64755a2"
                ]
            }
        },
        "1.14.10-stretch": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2de846969656c2aacfeb049f50eb589c05ad68e02033e67e3d294d9286ca6d12",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "2151afa3b2ac60a43775f627cedf17f25d9fc129a06b528f4ccd5e17d21c4e2e",
            "container_config": {
                "Hostname": "2151afa3b2ac",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2de846969656c2aacfeb049f50eb589c05ad68e02033e67e3d294d9286ca6d12",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-10-15T01:44:34.81783731Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-10-13T01:43:49.330828794Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2752d391988f4ad7e086be863c36a83a3226e31e44ea816ca4c89d6a410727b1 in / "
                },
                {
                    "created": "2020-10-13T01:43:51.548160165Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-13T02:40:07.92306492Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-10-13T02:40:20.114220108Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-10-13T02:41:14.708172956Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-10-13T22:22:27.778902374Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-10-13T22:22:31.052695678Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-15T01:44:10.244282736Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.10",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-15T01:44:28.759029197Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\t'amd64') \t\t\tarch='linux-amd64'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.10.linux-amd64.tar.gz'; \t\t\tsha256='66eb6858f375731ba07b0b33f5c813b141a81253e7e74071eec3ae85e9b37098'; \t\t\t;; \t\t'armhf') \t\t\tarch='linux-armv6l'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.10.linux-armv6l.tar.gz'; \t\t\tsha256='b601dbb186d786488470d73d4637c2144896bf6f499a4122bdd30f4e8dd79e70'; \t\t\t;; \t\t'arm64') \t\t\tarch='linux-arm64'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.10.linux-arm64.tar.gz'; \t\t\tsha256='30700f7a9df3148df81013bd38715acd09ca5203b8e0aafa8b985306d5e9882e'; \t\t\t;; \t\t'i386') \t\t\tarch='linux-386'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.10.linux-386.tar.gz'; \t\t\tsha256='0e8e955cc80d2d7046312d16d800be82aa8ce9c5165b936348851923a75b4484'; \t\t\t;; \t\t'ppc64el') \t\t\tarch='linux-ppc64le'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.10.linux-ppc64le.tar.gz'; \t\t\tsha256='ed5f7ab928ad8414598626740feac5918f7a915da943f21b41a81ad5c1dfa940'; \t\t\t;; \t\t's390x') \t\t\tarch='linux-s390x'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.10.linux-s390x.tar.gz'; \t\t\tsha256='0bd8b4ad9f4c5a766013cff898770cc1af63910ab680799c78b264d934cf8aab'; \t\t\t;; \t\t*) \t\t\tarch='src'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.10.src.tar.gz'; \t\t\tsha256='b37699a7e3eab0f90412b3969a90fd072023ecf61e0b86369da532810a95d665'; \t\t\techo >&2; \t\t\techo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; \t\t\techo >&2; \t\t\t;; \tesac; \t\twget -O go.tgz.asc \"$url.asc\" --progress=dot:giga; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum --strict --check -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$arch\" = 'src' ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \t\teval \"$goEnv\"; \t\t[ -n \"$GOOS\" ]; \t\t[ -n \"$GOARCH\" ]; \t\t( \t\t\tcd /usr/local/go/src; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2020-10-15T01:44:31.705905692Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-15T01:44:32.353494237Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-15T01:44:34.138121146Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-10-15T01:44:34.81783731Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:14acf6b1f32c84e326f00348c22cdc2dffcb50044ceb7e127498b54d5298973a",
                    "sha256:8ab70653842204ce299d540d0427148dd33e0c7324405f5eb8aa5fe7fababc40",
                    "sha256:06e7370667dee65ea66abad12d5e2128faf08dba155794893ffba11936b432e4",
                    "sha256:a1d6a9bb9bfb7e2aef435c9ae06b7f9abb1ded8cbff2b8c0903b9554685fbccd",
                    "sha256:4577ebfa64f2dcae44bfebbffd4b9e00ece9d9fb5c6b88903776c83e7a40b047",
                    "sha256:be90bfaf48fc01cd4053e2ae221f3b0ace1d41ea1aca5d416ed238948409c4d4",
                    "sha256:45cc51c78928ed8d5d109751c63e10dea3bac2c0bf91c3fc486b20a4d08916b0"
                ]
            }
        },
        "1.14.11-alpine": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:ade7cbf10d3919e9125328501b01034f18af60e68188671fe4cfbf0a263da1bc",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "2ac3991180c6f9da56fbec11e38211a67c8a6145d7b9cb9b7690e4543f53117f",
            "container_config": {
                "Hostname": "2ac3991180c6",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:ade7cbf10d3919e9125328501b01034f18af60e68188671fe4cfbf0a263da1bc",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-11-06T19:24:24.820418739Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-10-22T02:01:01.644449272Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:55c4e9752146061a2b5f76027221329f423687987c0744ef577130c60ff0ba42 in / "
                },
                {
                    "created": "2020-10-22T02:01:06.861515944Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-22T04:08:19.956593783Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-10-22T04:09:32.568220128Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-10-22T04:09:56.235354738Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-06T19:22:27.40745656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.11",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-06T19:24:16.525596806Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\turl='https://storage.googleapis.com/golang/go1.14.11.src.tar.gz'; \tsha256='1871f3d29b0cf1ebb739c9b134c9bc559282bd3625856e5f12f5aea29ab70f16'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \teval \"$goEnv\"; \t[ -n \"$GOOS\" ]; \t[ -n \"$GOARCH\" ]; \t( \t\tcd /usr/local/go/src; \t\t./make.bash; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2020-11-06T19:24:21.613021913Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-06T19:24:22.509177151Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-06T19:24:24.232091784Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-11-06T19:24:24.820418739Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd3761cfa1d9a67e63677d272007823b2b19f90706286017eba48c79a1b3381c",
                    "sha256:80ca65ea30d3abc3231bd9a96a655df62c867d775e2e41c53f59086c5705fc50",
                    "sha256:eba31345ed7e2b78da240304df6e1f7b62eef94ad2ab5a872d33e31b9fc0b649",
                    "sha256:a2c7f516bf027798d1d7559fd40dbbe383e2a08aac4851a437f8c43b62649d17",
                    "sha256:68082fdb29ca545470a208eec0afc78bccb79d3fa93e093f875c068ff94926bc"
                ]
            }
        },
        "1.14.11-alpine3.11": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1af67097f5a07e3940c9f59c2995396cddd1d90afd70c13a335cb2e96fa77a5c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "1c5882ff305badebe7f51a65f4c082b24bc6452602b3a103e490e07e2a2d73c2",
            "container_config": {
                "Hostname": "1c5882ff305b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1af67097f5a07e3940c9f59c2995396cddd1d90afd70c13a335cb2e96fa77a5c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-11-06T19:26:40.196298585Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-04-24T00:14:18.623777014Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:85ae77bc1e43353ff14e6fe1658be1ed4ecbf4330212ac3d7ab7462add32dd39 in / "
                },
                {
                    "created": "2020-04-24T00:14:21.043191759Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-24T09:30:19.959732843Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-04-24T09:30:22.482603996Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-09-01T00:10:56.985198147Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-06T19:24:31.079080907Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.11",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-06T19:26:33.029208379Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\turl='https://storage.googleapis.com/golang/go1.14.11.src.tar.gz'; \tsha256='1871f3d29b0cf1ebb739c9b134c9bc559282bd3625856e5f12f5aea29ab70f16'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \teval \"$goEnv\"; \t[ -n \"$GOOS\" ]; \t[ -n \"$GOARCH\" ]; \t( \t\tcd /usr/local/go/src; \t\t./make.bash; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2020-11-06T19:26:36.815054552Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-06T19:26:37.350909477Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-06T19:26:39.300146065Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-11-06T19:26:40.196298585Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:678a0785e7d29c77c56c1bb0af4b279374e731903506838956f7bc808665a6dd",
                    "sha256:079af829c0db80026b85d242cea6f54d5bd4d8d787d083da9ac0b6ada9e9cabc",
                    "sha256:b2e3f56df73e6b071d861884c1d0400f1dc635e9bc0f217a47886ba2cce82467",
                    "sha256:8cfa3090b3c36c49b3deb322f6ceedc9758dac70ce67ba77aedbae584f667954",
                    "sha256:d3d3efba147e4fb1d4c2f5fb3ed9a031638eb8bc2329f10dd984d4839645d5c1"
                ]
            }
        },
        "1.14.11-alpine3.12": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:ade7cbf10d3919e9125328501b01034f18af60e68188671fe4cfbf0a263da1bc",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "2ac3991180c6f9da56fbec11e38211a67c8a6145d7b9cb9b7690e4543f53117f",
            "container_config": {
                "Hostname": "2ac3991180c6",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:ade7cbf10d3919e9125328501b01034f18af60e68188671fe4cfbf0a263da1bc",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-11-06T19:24:24.820418739Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-10-22T02:01:01.644449272Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:55c4e9752146061a2b5f76027221329f423687987c0744ef577130c60ff0ba42 in / "
                },
                {
                    "created": "2020-10-22T02:01:06.861515944Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-22T04:08:19.956593783Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-10-22T04:09:32.568220128Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-10-22T04:09:56.235354738Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-06T19:22:27.40745656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.11",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-06T19:24:16.525596806Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\turl='https://storage.googleapis.com/golang/go1.14.11.src.tar.gz'; \tsha256='1871f3d29b0cf1ebb739c9b134c9bc559282bd3625856e5f12f5aea29ab70f16'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \teval \"$goEnv\"; \t[ -n \"$GOOS\" ]; \t[ -n \"$GOARCH\" ]; \t( \t\tcd /usr/local/go/src; \t\t./make.bash; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2020-11-06T19:24:21.613021913Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-06T19:24:22.509177151Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-06T19:24:24.232091784Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-11-06T19:24:24.820418739Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd3761cfa1d9a67e63677d272007823b2b19f90706286017eba48c79a1b3381c",
                    "sha256:80ca65ea30d3abc3231bd9a96a655df62c867d775e2e41c53f59086c5705fc50",
                    "sha256:eba31345ed7e2b78da240304df6e1f7b62eef94ad2ab5a872d33e31b9fc0b649",
                    "sha256:a2c7f516bf027798d1d7559fd40dbbe383e2a08aac4851a437f8c43b62649d17",
                    "sha256:68082fdb29ca545470a208eec0afc78bccb79d3fa93e093f875c068ff94926bc"
                ]
            }
        },
        "1.14.11-buster": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a8c99f3246ad48582157d842cf7256950ec5dfd26e101a710fbe3c39b55f1922",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f7a7665ced94e55f19668fdf26f221301132f654e33da19f60bad4c98770fde8",
            "container_config": {
                "Hostname": "f7a7665ced94",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a8c99f3246ad48582157d842cf7256950ec5dfd26e101a710fbe3c39b55f1922",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-11-06T19:21:27.551990675Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-10-13T01:40:40.372937592Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7a9016f6c75910c392bbea2cb9e146d1eba3942cdfd666a44004c79951c5d46f in / "
                },
                {
                    "created": "2020-10-13T01:40:45.467467779Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-13T02:32:48.525658926Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-10-13T02:33:03.560652691Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-10-13T02:33:48.976233314Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-10-13T22:19:27.886289607Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-10-13T22:19:40.46015242Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-06T19:21:06.082810284Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.11",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-06T19:21:19.894685581Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\t'amd64') \t\t\tarch='linux-amd64'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.11.linux-amd64.tar.gz'; \t\t\tsha256='ef150041e1af0890ecdd98ebdd6c759096884052a584c09ce50b2b5bb9bab2cd'; \t\t\t;; \t\t'armhf') \t\t\tarch='linux-armv6l'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.11.linux-armv6l.tar.gz'; \t\t\tsha256='14ecce9dc6d9225d5686ff6c517c27d1d9189d7967b78a596d5f4325516fd093'; \t\t\t;; \t\t'arm64') \t\t\tarch='linux-arm64'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.11.linux-arm64.tar.gz'; \t\t\tsha256='6a2dc3c8d41683cf5dbb695d58556ec187fea7ae1afd913e25fc0750ab9c162c'; \t\t\t;; \t\t'i386') \t\t\tarch='linux-386'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.11.linux-386.tar.gz'; \t\t\tsha256='3789de3f29cccb31004885f72065e947a5020cdc33ecd94db0b5f20d319c49f0'; \t\t\t;; \t\t'ppc64el') \t\t\tarch='linux-ppc64le'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.11.linux-ppc64le.tar.gz'; \t\t\tsha256='e9c5edcbba0b7cb46ef4a00891ceb1f64f84d0849071638027194a52943a7c95'; \t\t\t;; \t\t's390x') \t\t\tarch='linux-s390x'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.11.linux-s390x.tar.gz'; \t\t\tsha256='e5eb70a16d19ee9d25420d1eafd1e4710bc6197c162a95a32217e49e1bd6055c'; \t\t\t;; \t\t*) \t\t\tarch='src'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.11.src.tar.gz'; \t\t\tsha256='1871f3d29b0cf1ebb739c9b134c9bc559282bd3625856e5f12f5aea29ab70f16'; \t\t\techo >&2; \t\t\techo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; \t\t\techo >&2; \t\t\t;; \tesac; \t\twget -O go.tgz.asc \"$url.asc\" --progress=dot:giga; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum --strict --check -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$arch\" = 'src' ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \t\teval \"$goEnv\"; \t\t[ -n \"$GOOS\" ]; \t\t[ -n \"$GOARCH\" ]; \t\t( \t\t\tcd /usr/local/go/src; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2020-11-06T19:21:24.658067058Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-06T19:21:25.216103265Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-06T19:21:26.884547352Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-11-06T19:21:27.551990675Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:89046a2414a48772fae1738ba31ddb764f64120c410a4695d8c79363a6db0326",
                    "sha256:c023e7c8f74c04df3f70a48c40696b5905c75fa16ee67991057d32a22f3c04ad",
                    "sha256:97f28d2c0632f62a277804bf41ad43f3e457172e228ad2adcd420b65fb15c1f7",
                    "sha256:0524a6941b223e421edaaf1437280b05cb9036950d578fae948e9f7c3930788c",
                    "sha256:1bee2d07a933fc0fee1e7e983b0470c238e6bd60370ebc94211bd9b068121c4d",
                    "sha256:085bd04b4cc2e32913c7be9c6c4a659dd79d10b59c5b94ac25f52c1901e0f902",
                    "sha256:9e22cacc21ac7d3f963464ef565664b1aae5e5b66b04df30e3fc0fd0895e73bb"
                ]
            }
        },
        "1.14.11-stretch": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:96838541242af1bb92d39db400c40fc167e41d825394a8e738b3aa7cc9b41cd1",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "0ec4d7f613f0cdd5c316ac4c25fed102dd1a3ffa04a1fd38935994a39d535f54",
            "container_config": {
                "Hostname": "0ec4d7f613f0",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:96838541242af1bb92d39db400c40fc167e41d825394a8e738b3aa7cc9b41cd1",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-11-06T19:22:13.757355489Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-10-13T01:43:49.330828794Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2752d391988f4ad7e086be863c36a83a3226e31e44ea816ca4c89d6a410727b1 in / "
                },
                {
                    "created": "2020-10-13T01:43:51.548160165Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-13T02:40:07.92306492Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-10-13T02:40:20.114220108Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-10-13T02:41:14.708172956Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-10-13T22:22:27.778902374Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-10-13T22:22:31.052695678Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-06T19:21:37.455877616Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.11",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-06T19:22:02.097871472Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\t'amd64') \t\t\tarch='linux-amd64'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.11.linux-amd64.tar.gz'; \t\t\tsha256='ef150041e1af0890ecdd98ebdd6c759096884052a584c09ce50b2b5bb9bab2cd'; \t\t\t;; \t\t'armhf') \t\t\tarch='linux-armv6l'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.11.linux-armv6l.tar.gz'; \t\t\tsha256='14ecce9dc6d9225d5686ff6c517c27d1d9189d7967b78a596d5f4325516fd093'; \t\t\t;; \t\t'arm64') \t\t\tarch='linux-arm64'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.11.linux-arm64.tar.gz'; \t\t\tsha256='6a2dc3c8d41683cf5dbb695d58556ec187fea7ae1afd913e25fc0750ab9c162c'; \t\t\t;; \t\t'i386') \t\t\tarch='linux-386'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.11.linux-386.tar.gz'; \t\t\tsha256='3789de3f29cccb31004885f72065e947a5020cdc33ecd94db0b5f20d319c49f0'; \t\t\t;; \t\t'ppc64el') \t\t\tarch='linux-ppc64le'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.11.linux-ppc64le.tar.gz'; \t\t\tsha256='e9c5edcbba0b7cb46ef4a00891ceb1f64f84d0849071638027194a52943a7c95'; \t\t\t;; \t\t's390x') \t\t\tarch='linux-s390x'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.11.linux-s390x.tar.gz'; \t\t\tsha256='e5eb70a16d19ee9d25420d1eafd1e4710bc6197c162a95a32217e49e1bd6055c'; \t\t\t;; \t\t*) \t\t\tarch='src'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.11.src.tar.gz'; \t\t\tsha256='1871f3d29b0cf1ebb739c9b134c9bc559282bd3625856e5f12f5aea29ab70f16'; \t\t\techo >&2; \t\t\techo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; \t\t\techo >&2; \t\t\t;; \tesac; \t\twget -O go.tgz.asc \"$url.asc\" --progress=dot:giga; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum --strict --check -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$arch\" = 'src' ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \t\teval \"$goEnv\"; \t\t[ -n \"$GOOS\" ]; \t\t[ -n \"$GOARCH\" ]; \t\t( \t\t\tcd /usr/local/go/src; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2020-11-06T19:22:06.805932756Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-06T19:22:07.888668181Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-06T19:22:13.116470635Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-11-06T19:22:13.757355489Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:14acf6b1f32c84e326f00348c22cdc2dffcb50044ceb7e127498b54d5298973a",
                    "sha256:8ab70653842204ce299d540d0427148dd33e0c7324405f5eb8aa5fe7fababc40",
                    "sha256:06e7370667dee65ea66abad12d5e2128faf08dba155794893ffba11936b432e4",
                    "sha256:a1d6a9bb9bfb7e2aef435c9ae06b7f9abb1ded8cbff2b8c0903b9554685fbccd",
                    "sha256:4577ebfa64f2dcae44bfebbffd4b9e00ece9d9fb5c6b88903776c83e7a40b047",
                    "sha256:8dfdc4d4a7bfef129273a04a2188a3786f541260ddcda9393457a63c86316da1",
                    "sha256:91048c6c53ffa26dc10082d68f3a5d5a1bb58ff3d0dc5d25cd4cac0b52066820"
                ]
            }
        },
        "1.14.12-alpine": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:36e3dc721149d55a84798a2a3792cb4da4d635fff308dbd4a31345ee14539c71",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "b06a98907e529228dd3c21fe778e1f79d5d41a462a235c132450fe0b3a4b8901",
            "container_config": {
                "Hostname": "b06a98907e52",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:36e3dc721149d55a84798a2a3792cb4da4d635fff308dbd4a31345ee14539c71",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-11-12T21:45:20.175622404Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-10-22T02:01:01.644449272Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:55c4e9752146061a2b5f76027221329f423687987c0744ef577130c60ff0ba42 in / "
                },
                {
                    "created": "2020-10-22T02:01:06.861515944Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-22T04:08:19.956593783Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-10-22T04:09:32.568220128Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-10-22T04:09:56.235354738Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-12T21:43:23.754313507Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.12",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-12T21:45:13.149407008Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\turl='https://storage.googleapis.com/golang/go1.14.12.src.tar.gz'; \tsha256='b34f4b7ad799eab4c1a52bdef253602ce957125a512f5a1b28dce43c6841b971'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \teval \"$goEnv\"; \t[ -n \"$GOOS\" ]; \t[ -n \"$GOARCH\" ]; \t( \t\tcd /usr/local/go/src; \t\t./make.bash; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2020-11-12T21:45:16.892231549Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-12T21:45:17.612562121Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-12T21:45:19.476278269Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-11-12T21:45:20.175622404Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd3761cfa1d9a67e63677d272007823b2b19f90706286017eba48c79a1b3381c",
                    "sha256:80ca65ea30d3abc3231bd9a96a655df62c867d775e2e41c53f59086c5705fc50",
                    "sha256:eba31345ed7e2b78da240304df6e1f7b62eef94ad2ab5a872d33e31b9fc0b649",
                    "sha256:d6f42b5b8a8499bb6f8eded424ee0f414d861d63076ea4c2742dacfd1f273643",
                    "sha256:38db68a5756602625ec7f58ff2cb340af163e75b862aa71a303f857428c39c31"
                ]
            }
        },
        "1.14.12-alpine3.11": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:06acff96818912cd2561eff78ffc6928a7564585e3ebc61c9296f9f63ddb69f3",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "3924e92404d5de1c474168ef7a101f82015f6c460e39c9a5e5249ed0d147a9d2",
            "container_config": {
                "Hostname": "3924e92404d5",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:06acff96818912cd2561eff78ffc6928a7564585e3ebc61c9296f9f63ddb69f3",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-11-12T21:47:36.217654165Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-04-24T00:14:18.623777014Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:85ae77bc1e43353ff14e6fe1658be1ed4ecbf4330212ac3d7ab7462add32dd39 in / "
                },
                {
                    "created": "2020-04-24T00:14:21.043191759Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-24T09:30:19.959732843Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-04-24T09:30:22.482603996Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-09-01T00:10:56.985198147Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-12T21:45:28.150900841Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.12",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-12T21:47:29.682978126Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\turl='https://storage.googleapis.com/golang/go1.14.12.src.tar.gz'; \tsha256='b34f4b7ad799eab4c1a52bdef253602ce957125a512f5a1b28dce43c6841b971'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \teval \"$goEnv\"; \t[ -n \"$GOOS\" ]; \t[ -n \"$GOARCH\" ]; \t( \t\tcd /usr/local/go/src; \t\t./make.bash; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2020-11-12T21:47:32.968189254Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-12T21:47:33.683054296Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-12T21:47:35.50054663Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-11-12T21:47:36.217654165Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:678a0785e7d29c77c56c1bb0af4b279374e731903506838956f7bc808665a6dd",
                    "sha256:079af829c0db80026b85d242cea6f54d5bd4d8d787d083da9ac0b6ada9e9cabc",
                    "sha256:b2e3f56df73e6b071d861884c1d0400f1dc635e9bc0f217a47886ba2cce82467",
                    "sha256:ad1e05e81cb7459e2fcced75a1bde480d1a001bbd4eff73a5721602f70d698db",
                    "sha256:b784ff900ff20c284d47f3a39898847ebffc442f2173e86d6dec7baad3bcfd44"
                ]
            }
        },
        "1.14.12-alpine3.12": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:36e3dc721149d55a84798a2a3792cb4da4d635fff308dbd4a31345ee14539c71",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "b06a98907e529228dd3c21fe778e1f79d5d41a462a235c132450fe0b3a4b8901",
            "container_config": {
                "Hostname": "b06a98907e52",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:36e3dc721149d55a84798a2a3792cb4da4d635fff308dbd4a31345ee14539c71",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-11-12T21:45:20.175622404Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-10-22T02:01:01.644449272Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:55c4e9752146061a2b5f76027221329f423687987c0744ef577130c60ff0ba42 in / "
                },
                {
                    "created": "2020-10-22T02:01:06.861515944Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-22T04:08:19.956593783Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-10-22T04:09:32.568220128Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-10-22T04:09:56.235354738Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-12T21:43:23.754313507Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.12",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-12T21:45:13.149407008Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\turl='https://storage.googleapis.com/golang/go1.14.12.src.tar.gz'; \tsha256='b34f4b7ad799eab4c1a52bdef253602ce957125a512f5a1b28dce43c6841b971'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \teval \"$goEnv\"; \t[ -n \"$GOOS\" ]; \t[ -n \"$GOARCH\" ]; \t( \t\tcd /usr/local/go/src; \t\t./make.bash; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2020-11-12T21:45:16.892231549Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-12T21:45:17.612562121Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-12T21:45:19.476278269Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-11-12T21:45:20.175622404Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd3761cfa1d9a67e63677d272007823b2b19f90706286017eba48c79a1b3381c",
                    "sha256:80ca65ea30d3abc3231bd9a96a655df62c867d775e2e41c53f59086c5705fc50",
                    "sha256:eba31345ed7e2b78da240304df6e1f7b62eef94ad2ab5a872d33e31b9fc0b649",
                    "sha256:d6f42b5b8a8499bb6f8eded424ee0f414d861d63076ea4c2742dacfd1f273643",
                    "sha256:38db68a5756602625ec7f58ff2cb340af163e75b862aa71a303f857428c39c31"
                ]
            }
        },
        "1.14.12-buster": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:663e036e42c8914ac8a968558dd4f8b0cfd1bc5a30de74a7f024d0fa3bf26767",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "7e7fbf8204565edd4265a85bbc73381c4ea5a25491db662d09f65b99c0a38e0b",
            "container_config": {
                "Hostname": "7e7fbf820456",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:663e036e42c8914ac8a968558dd4f8b0cfd1bc5a30de74a7f024d0fa3bf26767",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-11-18T21:17:57.837450958Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-11-17T20:23:04.124376765Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:28343d2066831f0ffb2002914f158698f92b4af6dc16ac22e3d8e9c388c688bb in / "
                },
                {
                    "created": "2020-11-17T20:23:05.817194146Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-17T22:20:52.373260722Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-11-17T22:21:10.770104981Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-11-17T22:21:47.37456094Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-11-18T21:17:00.063734507Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-11-18T21:17:02.299795007Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-18T21:17:36.233598147Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.12",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-18T21:17:49.550496507Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\t'amd64') \t\t\tarch='linux-amd64'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.12.linux-amd64.tar.gz'; \t\t\tsha256='fb26f951c88c0685d7df393611189c58e6eabd3c17bdaef37df11355ab8db9d3'; \t\t\t;; \t\t'armhf') \t\t\tarch='linux-armv6l'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.12.linux-armv6l.tar.gz'; \t\t\tsha256='548d0d93884d4c30684125a19ea169acf6195cf0fe467efb325adb595fffeacf'; \t\t\t;; \t\t'arm64') \t\t\tarch='linux-arm64'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.12.linux-arm64.tar.gz'; \t\t\tsha256='833c762bf205ae5caaca246d5c2205ae919bad7484f7c38db72941937e28fa24'; \t\t\t;; \t\t'i386') \t\t\tarch='linux-386'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.12.linux-386.tar.gz'; \t\t\tsha256='80d1aa5c2a22cf57da97c71bbb3ee96f2600f15212f0fe8d6e07c7fc2744cf82'; \t\t\t;; \t\t'ppc64el') \t\t\tarch='linux-ppc64le'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.12.linux-ppc64le.tar.gz'; \t\t\tsha256='7c51a32851ae8331e1bc9ebc439a71f430053bd3c8e739a72df4354a377982e8'; \t\t\t;; \t\t's390x') \t\t\tarch='linux-s390x'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.12.linux-s390x.tar.gz'; \t\t\tsha256='e0d3cd0112edcd820d4860c2b95d7b32ef8900ca7f7207f15cc7675de7efe7cf'; \t\t\t;; \t\t*) \t\t\tarch='src'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.12.src.tar.gz'; \t\t\tsha256='b34f4b7ad799eab4c1a52bdef253602ce957125a512f5a1b28dce43c6841b971'; \t\t\techo >&2; \t\t\techo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; \t\t\techo >&2; \t\t\t;; \tesac; \t\twget -O go.tgz.asc \"$url.asc\" --progress=dot:giga; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum --strict --check -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$arch\" = 'src' ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \t\teval \"$goEnv\"; \t\t[ -n \"$GOOS\" ]; \t\t[ -n \"$GOARCH\" ]; \t\t( \t\t\tcd /usr/local/go/src; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2020-11-18T21:17:52.319283434Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-18T21:17:53.458120343Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-18T21:17:56.995020033Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-11-18T21:17:57.837450958Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c749c806978d2ab27b699f6d7418dc5bb3b8a23e9a6ab3740c5b5887c792ab92",
                    "sha256:5d2c09fd93500455486c54ed5c90a0cf8dc040e5fbc7b74f0811ff8b9974bb11",
                    "sha256:84bb85cfcffcf6ad5453741470c463bd35f3dd9c9c149304dd918a718f9c5774",
                    "sha256:c6ebc317660cbdac7de26fe42cd06e79597154156a2d30a6e19c5402d9f07d3a",
                    "sha256:16bf1d27e868dd5c49efaff6a1a6b177027a4421dc4b399d6562f120d028a14f",
                    "sha256:70437573de7e38b1c72597372c8fd3ab81d2a9b19706bdf57f5ecbba262bc8b4",
                    "sha256:3f59609ccc549c3aa702b108210ba93d90d648d9cb96ce9d04004108413c1b14"
                ]
            }
        },
        "1.14.12-stretch": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:5772aaadd8f7eb90a494e59ebf80baafe27e476c1def52a555a696ba31e54c12",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "d98afdf64ee2a0d5e2cee082128984943e89215734217effe27ba76efc5df831",
            "container_config": {
                "Hostname": "d98afdf64ee2",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:5772aaadd8f7eb90a494e59ebf80baafe27e476c1def52a555a696ba31e54c12",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-11-18T21:18:48.688373569Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-11-17T20:27:33.101323073Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d2e307c3e54ad69dff47f6bdacca7c8ee0957a09346bb21baec02b9de1a657e1 in / "
                },
                {
                    "created": "2020-11-17T20:27:37.250848753Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-17T22:28:49.492389736Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-11-17T22:28:59.593505152Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-11-17T22:29:38.070880807Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-11-18T21:18:24.096806538Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-11-18T21:18:26.019243078Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-18T21:18:26.948781578Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.12",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-18T21:18:42.712251701Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\t'amd64') \t\t\tarch='linux-amd64'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.12.linux-amd64.tar.gz'; \t\t\tsha256='fb26f951c88c0685d7df393611189c58e6eabd3c17bdaef37df11355ab8db9d3'; \t\t\t;; \t\t'armhf') \t\t\tarch='linux-armv6l'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.12.linux-armv6l.tar.gz'; \t\t\tsha256='548d0d93884d4c30684125a19ea169acf6195cf0fe467efb325adb595fffeacf'; \t\t\t;; \t\t'arm64') \t\t\tarch='linux-arm64'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.12.linux-arm64.tar.gz'; \t\t\tsha256='833c762bf205ae5caaca246d5c2205ae919bad7484f7c38db72941937e28fa24'; \t\t\t;; \t\t'i386') \t\t\tarch='linux-386'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.12.linux-386.tar.gz'; \t\t\tsha256='80d1aa5c2a22cf57da97c71bbb3ee96f2600f15212f0fe8d6e07c7fc2744cf82'; \t\t\t;; \t\t'ppc64el') \t\t\tarch='linux-ppc64le'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.12.linux-ppc64le.tar.gz'; \t\t\tsha256='7c51a32851ae8331e1bc9ebc439a71f430053bd3c8e739a72df4354a377982e8'; \t\t\t;; \t\t's390x') \t\t\tarch='linux-s390x'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.12.linux-s390x.tar.gz'; \t\t\tsha256='e0d3cd0112edcd820d4860c2b95d7b32ef8900ca7f7207f15cc7675de7efe7cf'; \t\t\t;; \t\t*) \t\t\tarch='src'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.12.src.tar.gz'; \t\t\tsha256='b34f4b7ad799eab4c1a52bdef253602ce957125a512f5a1b28dce43c6841b971'; \t\t\techo >&2; \t\t\techo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; \t\t\techo >&2; \t\t\t;; \tesac; \t\twget -O go.tgz.asc \"$url.asc\" --progress=dot:giga; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum --strict --check -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$arch\" = 'src' ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \t\teval \"$goEnv\"; \t\t[ -n \"$GOOS\" ]; \t\t[ -n \"$GOARCH\" ]; \t\t( \t\t\tcd /usr/local/go/src; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2020-11-18T21:18:45.087265872Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-18T21:18:45.833652912Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-18T21:18:47.834191476Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-11-18T21:18:48.688373569Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0114045c68e579255c0408075fd89e65045313e55b038ec5e2645293bae0c494",
                    "sha256:4a00745c7933b771d7cd6aebe4f7ec9d0efc8fb42b8c10d136a8b5d036583895",
                    "sha256:0dfb81028e06aeef652bf8cf1441eea8741a5fa621f5f65bae9bbd932a31d25e",
                    "sha256:f92d6e9261dc6282765de52eb8e65c34f44039dbab4959cc59cee1e4d765e9d5",
                    "sha256:97f7ad0a84ba4b01a0690f4e1aecaa547a7fea4ac2714835d3f3ff1c2a85e276",
                    "sha256:d0ab257e5338c3be4afb1bb6b5b3a3c4676995a6f888a340f4713e379d6e13f5",
                    "sha256:116c0efb3248329b791d028492fa1119d81540cf02189a10e0d849f6f95e1848"
                ]
            }
        },
        "1.14.13-alpine": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:9d7c3e2c8352b8e00126c883dd21992b8a32e4eae005d7f6b96dcafdd69cd2cf",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "2c6f50e16f397fd886230550178265d9e24379976eef223d46b0cdae5ff5872b",
            "container_config": {
                "Hostname": "2c6f50e16f39",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:9d7c3e2c8352b8e00126c883dd21992b8a32e4eae005d7f6b96dcafdd69cd2cf",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-01-19T22:47:45.043666712Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-01-15T01:47:51.357280648Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:95be2cec37537b3fd70aeb1d4eb3479fc4a56b00ad7180788ddd7fa772ca65e7 in / "
                },
                {
                    "created": "2021-01-15T01:47:52.169316891Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-19T22:40:00.696318881Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2021-01-19T22:40:02.636462332Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2021-01-19T22:40:03.231580911Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-19T22:45:31.880564392Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.13",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-19T22:47:38.656905333Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\turl='https://storage.googleapis.com/golang/go1.14.13.src.tar.gz'; \tsha256='ba1d244c6b5c0ed04aa0d7856d06aceb89ed31b895de6ff783efb1cc8ab6b177'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \teval \"$goEnv\"; \t[ -n \"$GOOS\" ]; \t[ -n \"$GOARCH\" ]; \t( \t\tcd /usr/local/go/src; \t\t./make.bash; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2021-01-19T22:47:41.860444403Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-19T22:47:42.540859648Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-19T22:47:44.341051176Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-01-19T22:47:45.043666712Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7fc22f762ef372092798e581a876662ef45832fc008e8b5d48ebe26630bad0e5",
                    "sha256:bc7eabaea2d840ea147892650802f44930b29391aabc9ffed2e0a5aff54cc4d7",
                    "sha256:5bc0f3aeed8723ef79a958f1d549811aa1cba77ec078e82260fd2b283165481d",
                    "sha256:fd93823c59d9ba34661314339729c508479343e8ef855ea729c4f41a7c571899",
                    "sha256:349d8849693fabf1b0240bb2f5ecdb9f909738276a2d0f6a75c512c6c82f8c6b"
                ]
            }
        },
        "1.14.13-alpine3.11": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:5d04b52f067c3e5daa65821b4b2ba0c596005350070584e3f7b2b1b31de5cf74",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "303c12275c4e3f36a38069aef49e96a9931b577fbc04286fd7dd59cc1c329723",
            "container_config": {
                "Hostname": "303c12275c4e",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:5d04b52f067c3e5daa65821b4b2ba0c596005350070584e3f7b2b1b31de5cf74",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-12-17T04:50:14.524890921Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-12-16T23:40:37.939971563Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:47bb1b85a4eb4d0b355ae89ec5c71c09e2c2b7e21e1851a2896365eb17134f57 in / "
                },
                {
                    "created": "2020-12-16T23:40:39.397059722Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-17T04:47:53.39179737Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-12-17T04:47:56.491386814Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-12-17T04:47:57.306953642Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-17T04:47:58.108381516Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.13",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-17T04:50:05.964105898Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\turl='https://storage.googleapis.com/golang/go1.14.13.src.tar.gz'; \tsha256='ba1d244c6b5c0ed04aa0d7856d06aceb89ed31b895de6ff783efb1cc8ab6b177'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \teval \"$goEnv\"; \t[ -n \"$GOOS\" ]; \t[ -n \"$GOARCH\" ]; \t( \t\tcd /usr/local/go/src; \t\t./make.bash; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2020-12-17T04:50:08.724922058Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-17T04:50:10.161433346Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-17T04:50:13.200149106Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-12-17T04:50:14.524890921Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4d0185f84beff0ee0f58428a2c2f0ad9f1ad6b9f0d41443df725ff2bb29a3fc0",
                    "sha256:fe5ed3126b5619ac0ec12b30c34d0b46e21521790a77a38a8cf37e1365166d3f",
                    "sha256:f275eb2a4f11a64cb1f22e25c33f310497bc8eb3a7148a62311abf47efd5233a",
                    "sha256:c843ba3a216e919f00e29eb3e3334ca080cb967480cf42273ca7605181792930",
                    "sha256:0d20ced1aacf5ed17ca54d8c7f445c03c02dee6ecb4503b624fa492018e01d46"
                ]
            }
        },
        "1.14.13-alpine3.12": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:2a3af7484aaf361dfe5087420ce2725f6fdc0ea98cf7743b29b4a6a20295cb56",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "1e8b08e47a58d9a3083a7e387d1de33befcc32863c59052ffcd95971bc2ac0a6",
            "container_config": {
                "Hostname": "1e8b08e47a58",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:2a3af7484aaf361dfe5087420ce2725f6fdc0ea98cf7743b29b4a6a20295cb56",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-12-17T04:47:25.665054883Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-12-16T23:40:26.733219846Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a4845c3840a3fd0e41e4635a179cce20c81afc6c02e34e3fd5bd2d535698918b in / "
                },
                {
                    "created": "2020-12-16T23:40:29.16971129Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-17T04:41:45.854743048Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-12-17T04:41:48.375073413Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-12-17T04:41:49.288544943Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-17T04:44:54.6115561Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.13",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-17T04:47:05.49639009Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\turl='https://storage.googleapis.com/golang/go1.14.13.src.tar.gz'; \tsha256='ba1d244c6b5c0ed04aa0d7856d06aceb89ed31b895de6ff783efb1cc8ab6b177'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \teval \"$goEnv\"; \t[ -n \"$GOOS\" ]; \t[ -n \"$GOARCH\" ]; \t( \t\tcd /usr/local/go/src; \t\t./make.bash; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2020-12-17T04:47:11.266161698Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-17T04:47:14.716526671Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-17T04:47:23.101444229Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-12-17T04:47:25.665054883Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:379067d0cb5309d203a84fb900c950812df2089dedb822239d389ac45a20efe9",
                    "sha256:e9d38d210a8343fa45a8db0d774c9c38fba69b7807cd4816b80bf6356a925ddb",
                    "sha256:5746c35e32ecb5d07dec2dae715eac9b9e5096247ad0a5dcb36db3161aa5b0b4",
                    "sha256:d8a23f6fa6516cd4174318dca7a9a8d0ef15a0acef71dd90dd1ffee365ffd2eb",
                    "sha256:b37352893955deef7092d74f107cb2e2cbaf406764d6c9f851a0609dc1e3028f"
                ]
            }
        },
        "1.14.13-alpine3.13": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:9d7c3e2c8352b8e00126c883dd21992b8a32e4eae005d7f6b96dcafdd69cd2cf",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "2c6f50e16f397fd886230550178265d9e24379976eef223d46b0cdae5ff5872b",
            "container_config": {
                "Hostname": "2c6f50e16f39",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:9d7c3e2c8352b8e00126c883dd21992b8a32e4eae005d7f6b96dcafdd69cd2cf",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-01-19T22:47:45.043666712Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-01-15T01:47:51.357280648Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:95be2cec37537b3fd70aeb1d4eb3479fc4a56b00ad7180788ddd7fa772ca65e7 in / "
                },
                {
                    "created": "2021-01-15T01:47:52.169316891Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-19T22:40:00.696318881Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2021-01-19T22:40:02.636462332Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2021-01-19T22:40:03.231580911Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-19T22:45:31.880564392Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.13",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-19T22:47:38.656905333Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\turl='https://storage.googleapis.com/golang/go1.14.13.src.tar.gz'; \tsha256='ba1d244c6b5c0ed04aa0d7856d06aceb89ed31b895de6ff783efb1cc8ab6b177'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \teval \"$goEnv\"; \t[ -n \"$GOOS\" ]; \t[ -n \"$GOARCH\" ]; \t( \t\tcd /usr/local/go/src; \t\t./make.bash; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2021-01-19T22:47:41.860444403Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-19T22:47:42.540859648Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-19T22:47:44.341051176Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-01-19T22:47:45.043666712Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7fc22f762ef372092798e581a876662ef45832fc008e8b5d48ebe26630bad0e5",
                    "sha256:bc7eabaea2d840ea147892650802f44930b29391aabc9ffed2e0a5aff54cc4d7",
                    "sha256:5bc0f3aeed8723ef79a958f1d549811aa1cba77ec078e82260fd2b283165481d",
                    "sha256:fd93823c59d9ba34661314339729c508479343e8ef855ea729c4f41a7c571899",
                    "sha256:349d8849693fabf1b0240bb2f5ecdb9f909738276a2d0f6a75c512c6c82f8c6b"
                ]
            }
        },
        "1.14.13-buster": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:b96518d866b5e28f2b865cd992a938b09b4160be7f1ffda1d478b034dd5b7efe",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "6431ca5242727ba84b6109af1ba0d28328036cb89ed9181197800ad6bfd5a4c7",
            "container_config": {
                "Hostname": "6431ca524272",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:b96518d866b5e28f2b865cd992a938b09b4160be7f1ffda1d478b034dd5b7efe",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-01-12T20:19:25.280804759Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-01-12T00:40:39.953186383Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:849d424ecc8572facb3ca68eff836dce211bc677cb32d3c3eaa129d364d33878 in / "
                },
                {
                    "created": "2021-01-12T00:40:43.460463354Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-12T01:23:26.100499084Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-01-12T01:23:41.997927053Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2021-01-12T01:24:24.232826775Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-01-12T20:17:26.707410789Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-01-12T20:17:29.504828433Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-12T20:18:56.244899093Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.13",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-12T20:19:15.470337284Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\t'amd64') \t\t\tarch='linux-amd64'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.13.linux-amd64.tar.gz'; \t\t\tsha256='bfea0c8d7b70c1ad99b0266b321608db57df75820e8f4333efa448a43da01992'; \t\t\t;; \t\t'armhf') \t\t\tarch='linux-armv6l'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.13.linux-armv6l.tar.gz'; \t\t\tsha256='cee8785fad978693c7b68ea635e76412a0a44917c3d58efa82b2edbf538a2868'; \t\t\t;; \t\t'arm64') \t\t\tarch='linux-arm64'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.13.linux-arm64.tar.gz'; \t\t\tsha256='445b719ebf46d8825360dabad65226db154ca8053de60609bc20f80a17452cbb'; \t\t\t;; \t\t'i386') \t\t\tarch='linux-386'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.13.linux-386.tar.gz'; \t\t\tsha256='a168c7e03e305d33a5651acb5bfdbfb5141053a0d98f06af3e1e5081167af963'; \t\t\t;; \t\t'ppc64el') \t\t\tarch='linux-ppc64le'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.13.linux-ppc64le.tar.gz'; \t\t\tsha256='1bd057adc1004b22e530ac738ccb077b56f89e84209df9bb755aacb37668c547'; \t\t\t;; \t\t's390x') \t\t\tarch='linux-s390x'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.13.linux-s390x.tar.gz'; \t\t\tsha256='263a9bef1b8d695cc459b83fd7c4cee06f7e435adec0d0c948309b0655d0770e'; \t\t\t;; \t\t*) \t\t\tarch='src'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.13.src.tar.gz'; \t\t\tsha256='ba1d244c6b5c0ed04aa0d7856d06aceb89ed31b895de6ff783efb1cc8ab6b177'; \t\t\techo >&2; \t\t\techo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; \t\t\techo >&2; \t\t\t;; \tesac; \t\twget -O go.tgz.asc \"$url.asc\" --progress=dot:giga; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum --strict --check -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$arch\" = 'src' ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \t\teval \"$goEnv\"; \t\t[ -n \"$GOOS\" ]; \t\t[ -n \"$GOARCH\" ]; \t\t( \t\t\tcd /usr/local/go/src; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2021-01-12T20:19:20.172803945Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-12T20:19:21.199647171Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-12T20:19:24.276818149Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-01-12T20:19:25.280804759Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7ce7f234bab77e0253069b93abf52000e714b9fe82ad5e3b47d60bbde097781b",
                    "sha256:a09cc058b0610fd54c6ff3c907d4da1dcf5897f5f92cdfda08ddab5f941db2f6",
                    "sha256:5404989e9c63a2de36e58414ad8da02978eac80f5fffa1ceb5df9ab265f26b8d",
                    "sha256:d8af944d736329ab907bb507d5f9a691a6fe9ebf205b428c89a023908416d174",
                    "sha256:1637a90a9934fb2b8c12b50084ab0cbedb168a7e0a1d9d415fe31153dc0859df",
                    "sha256:4b05632c289e182dfe88f468698dae3f75a63ebef3ceecf20a1ed77d283aa859",
                    "sha256:bf28576c3d002bf25cf4c08e884cc38032b7ed538f28789f1eda1afab5487953"
                ]
            }
        },
        "1.14.13-stretch": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:1a812c71096b811a0edd5d2f95c523f1e4c81466ae97b82e09939699efb720e9",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "453eeb5fb0b363d443865e61a1b6f41d8d225edf0a9069e111e14eb95b2dd92e",
            "container_config": {
                "Hostname": "453eeb5fb0b3",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:1a812c71096b811a0edd5d2f95c523f1e4c81466ae97b82e09939699efb720e9",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-01-12T20:20:23.348635342Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-01-12T00:45:18.261043324Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bc4af94773a01defa7a79adb22199dde2229843dae224d13d3385c522cb71652 in / "
                },
                {
                    "created": "2021-01-12T00:45:22.750263308Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-12T01:30:22.852274114Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-01-12T01:30:38.147013749Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2021-01-12T01:31:25.615398367Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-01-12T20:19:52.40155554Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-01-12T20:19:53.417433842Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-12T20:19:54.195337748Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.13",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-12T20:20:14.853482413Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\t'amd64') \t\t\tarch='linux-amd64'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.13.linux-amd64.tar.gz'; \t\t\tsha256='bfea0c8d7b70c1ad99b0266b321608db57df75820e8f4333efa448a43da01992'; \t\t\t;; \t\t'armhf') \t\t\tarch='linux-armv6l'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.13.linux-armv6l.tar.gz'; \t\t\tsha256='cee8785fad978693c7b68ea635e76412a0a44917c3d58efa82b2edbf538a2868'; \t\t\t;; \t\t'arm64') \t\t\tarch='linux-arm64'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.13.linux-arm64.tar.gz'; \t\t\tsha256='445b719ebf46d8825360dabad65226db154ca8053de60609bc20f80a17452cbb'; \t\t\t;; \t\t'i386') \t\t\tarch='linux-386'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.13.linux-386.tar.gz'; \t\t\tsha256='a168c7e03e305d33a5651acb5bfdbfb5141053a0d98f06af3e1e5081167af963'; \t\t\t;; \t\t'ppc64el') \t\t\tarch='linux-ppc64le'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.13.linux-ppc64le.tar.gz'; \t\t\tsha256='1bd057adc1004b22e530ac738ccb077b56f89e84209df9bb755aacb37668c547'; \t\t\t;; \t\t's390x') \t\t\tarch='linux-s390x'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.13.linux-s390x.tar.gz'; \t\t\tsha256='263a9bef1b8d695cc459b83fd7c4cee06f7e435adec0d0c948309b0655d0770e'; \t\t\t;; \t\t*) \t\t\tarch='src'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.13.src.tar.gz'; \t\t\tsha256='ba1d244c6b5c0ed04aa0d7856d06aceb89ed31b895de6ff783efb1cc8ab6b177'; \t\t\techo >&2; \t\t\techo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; \t\t\techo >&2; \t\t\t;; \tesac; \t\twget -O go.tgz.asc \"$url.asc\" --progress=dot:giga; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum --strict --check -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$arch\" = 'src' ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \t\teval \"$goEnv\"; \t\t[ -n \"$GOOS\" ]; \t\t[ -n \"$GOARCH\" ]; \t\t( \t\t\tcd /usr/local/go/src; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2021-01-12T20:20:18.896929283Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-12T20:20:19.872390545Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-12T20:20:22.375916296Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-01-12T20:20:23.348635342Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b1326e8463e2d86ca0d0f43d4f8d17d4f5876fda9a4da5db1a7b00760af4bba9",
                    "sha256:492856012062575e96c2a7d95b12df11777d452912e3d4dda3ea5a6a7d724202",
                    "sha256:e2017cbac1312ca39644eeedc721a13811541637f18943148881814f77e7274e",
                    "sha256:4573aeb4c99955a278b3c8615bb416ea1327374aeebfda108ecdb00793a5fd9a",
                    "sha256:553c5aa2d63594b84a32af27c8cb0389533000aeaaf08100d418faca4106b291",
                    "sha256:924c7374a3bd111c0b5af651814769b82ba7d386f6e98e2b5cc80b66e3831398",
                    "sha256:1e32bc4b22f3b2d21ad0043ada3f7b0d30121f9c962bf811cff3731ce61b703d"
                ]
            }
        },
        "1.14.14-alpine": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:a86134df8bcb29f183482678cd7c7637de9c23fc7dea9b401e4f8f0ac81613f3",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "be6eaeef11c26090a391b1535b55a40e8fa18ce07500e29aa82fb7f6837fcaaf",
            "container_config": {
                "Hostname": "be6eaeef11c2",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:a86134df8bcb29f183482678cd7c7637de9c23fc7dea9b401e4f8f0ac81613f3",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-01-29T00:33:31.476618848Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-01-28T23:39:33.173069025Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fecabe41deaeb72acdd63023566d87ae48b013ef80c97fdd993b55d6c727da93 in / "
                },
                {
                    "created": "2021-01-28T23:39:34.152729289Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-29T00:25:09.918160191Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2021-01-29T00:25:12.497748248Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2021-01-29T00:25:13.290262095Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-29T00:30:47.461100717Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.14",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-29T00:33:06.906509797Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\turl='https://storage.googleapis.com/golang/go1.14.14.src.tar.gz'; \tsha256='6204bf32f58fae0853f47f1bd0c51d9e0ac11f1ffb406bed07a0a8b016c8a76f'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \teval \"$goEnv\"; \t[ -n \"$GOOS\" ]; \t[ -n \"$GOARCH\" ]; \t( \t\tcd /usr/local/go/src; \t\t./make.bash; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2021-01-29T00:33:18.36802337Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-29T00:33:24.249521162Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-29T00:33:28.748345133Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-01-29T00:33:31.476618848Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:bc1660ee125400c1f1b66d87c5e65ba65e05b021e7e4e6b76a3e16e2e4b6fd3c",
                    "sha256:a96c0b17fff498a5a0a769fb636c6c2ed1e28a8c738158562401f27dbc1d32fb",
                    "sha256:ac7e341c4ea9a2f4e98edc06a702c76726cf8d6365ae52e43d2ed3452604a033",
                    "sha256:daf9b973518d4083069b5b92436f337e863e0364179efc3b6b4bb5c9749cc276",
                    "sha256:bb43a81874755b1d2db17c056756e92871acd20652a822d5ed9765888c98db8e"
                ]
            }
        },
        "1.14.14-alpine3.11": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:cc4be9ef0faf4c2e8b2ff051941e6290b2c638f85245ef288fa504f5a26f0168",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "9cca1136c6d22a0e80403b0e190a269f291f69dabfafe274eb1044838861f9a7",
            "container_config": {
                "Hostname": "9cca1136c6d2",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:cc4be9ef0faf4c2e8b2ff051941e6290b2c638f85245ef288fa504f5a26f0168",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-01-20T00:32:01.151885288Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-12-16T23:40:37.939971563Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:47bb1b85a4eb4d0b355ae89ec5c71c09e2c2b7e21e1851a2896365eb17134f57 in / "
                },
                {
                    "created": "2020-12-16T23:40:39.397059722Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-17T04:47:53.39179737Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-12-17T04:47:56.491386814Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-12-17T04:47:57.306953642Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-20T00:29:11.259711994Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.14",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-20T00:31:52.167009951Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\turl='https://storage.googleapis.com/golang/go1.14.14.src.tar.gz'; \tsha256='6204bf32f58fae0853f47f1bd0c51d9e0ac11f1ffb406bed07a0a8b016c8a76f'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \teval \"$goEnv\"; \t[ -n \"$GOOS\" ]; \t[ -n \"$GOARCH\" ]; \t( \t\tcd /usr/local/go/src; \t\t./make.bash; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2021-01-20T00:31:55.982738574Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-20T00:31:57.204736828Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-20T00:32:00.137546429Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-01-20T00:32:01.151885288Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4d0185f84beff0ee0f58428a2c2f0ad9f1ad6b9f0d41443df725ff2bb29a3fc0",
                    "sha256:fe5ed3126b5619ac0ec12b30c34d0b46e21521790a77a38a8cf37e1365166d3f",
                    "sha256:f275eb2a4f11a64cb1f22e25c33f310497bc8eb3a7148a62311abf47efd5233a",
                    "sha256:06e09b51dad9acc691c5b16f998426f99981fc08e42681076bd39341cbf7797e",
                    "sha256:86d9eb19077832413718270bb50266bb3971895848ffb6d788cff1e6c13c86a7"
                ]
            }
        },
        "1.14.14-alpine3.12": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:57459eaafd387cf01f160159af887006e9d07d0bfce0f01f14f1b7a337d4af92",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "82037634f0f315f0f26f31395577f0301df6b8846842e1f7126635b583ebfdd7",
            "container_config": {
                "Hostname": "82037634f0f3",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:57459eaafd387cf01f160159af887006e9d07d0bfce0f01f14f1b7a337d4af92",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-01-20T00:28:46.588892647Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-12-16T23:40:26.733219846Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a4845c3840a3fd0e41e4635a179cce20c81afc6c02e34e3fd5bd2d535698918b in / "
                },
                {
                    "created": "2020-12-16T23:40:29.16971129Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-17T04:41:45.854743048Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-12-17T04:41:48.375073413Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-12-17T04:41:49.288544943Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-20T00:26:33.380612243Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.14",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-20T00:28:35.97478158Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\turl='https://storage.googleapis.com/golang/go1.14.14.src.tar.gz'; \tsha256='6204bf32f58fae0853f47f1bd0c51d9e0ac11f1ffb406bed07a0a8b016c8a76f'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \teval \"$goEnv\"; \t[ -n \"$GOOS\" ]; \t[ -n \"$GOARCH\" ]; \t( \t\tcd /usr/local/go/src; \t\t./make.bash; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2021-01-20T00:28:38.193193224Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-20T00:28:39.32582862Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-20T00:28:42.485984702Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-01-20T00:28:46.588892647Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:379067d0cb5309d203a84fb900c950812df2089dedb822239d389ac45a20efe9",
                    "sha256:e9d38d210a8343fa45a8db0d774c9c38fba69b7807cd4816b80bf6356a925ddb",
                    "sha256:5746c35e32ecb5d07dec2dae715eac9b9e5096247ad0a5dcb36db3161aa5b0b4",
                    "sha256:574ec23af503c6b63e2a9456f54ef153cfe58525ed29ee7e14a4347b91dcfe2d",
                    "sha256:026365d7ea0a5d11cc81c6d25bf6480767db5926bb4bc4156b4be91544370ed7"
                ]
            }
        },
        "1.14.14-alpine3.13": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:a86134df8bcb29f183482678cd7c7637de9c23fc7dea9b401e4f8f0ac81613f3",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "be6eaeef11c26090a391b1535b55a40e8fa18ce07500e29aa82fb7f6837fcaaf",
            "container_config": {
                "Hostname": "be6eaeef11c2",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:a86134df8bcb29f183482678cd7c7637de9c23fc7dea9b401e4f8f0ac81613f3",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-01-29T00:33:31.476618848Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-01-28T23:39:33.173069025Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fecabe41deaeb72acdd63023566d87ae48b013ef80c97fdd993b55d6c727da93 in / "
                },
                {
                    "created": "2021-01-28T23:39:34.152729289Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-29T00:25:09.918160191Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2021-01-29T00:25:12.497748248Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2021-01-29T00:25:13.290262095Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-29T00:30:47.461100717Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.14",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-29T00:33:06.906509797Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\turl='https://storage.googleapis.com/golang/go1.14.14.src.tar.gz'; \tsha256='6204bf32f58fae0853f47f1bd0c51d9e0ac11f1ffb406bed07a0a8b016c8a76f'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \teval \"$goEnv\"; \t[ -n \"$GOOS\" ]; \t[ -n \"$GOARCH\" ]; \t( \t\tcd /usr/local/go/src; \t\t./make.bash; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2021-01-29T00:33:18.36802337Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-29T00:33:24.249521162Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-29T00:33:28.748345133Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-01-29T00:33:31.476618848Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:bc1660ee125400c1f1b66d87c5e65ba65e05b021e7e4e6b76a3e16e2e4b6fd3c",
                    "sha256:a96c0b17fff498a5a0a769fb636c6c2ed1e28a8c738158562401f27dbc1d32fb",
                    "sha256:ac7e341c4ea9a2f4e98edc06a702c76726cf8d6365ae52e43d2ed3452604a033",
                    "sha256:daf9b973518d4083069b5b92436f337e863e0364179efc3b6b4bb5c9749cc276",
                    "sha256:bb43a81874755b1d2db17c056756e92871acd20652a822d5ed9765888c98db8e"
                ]
            }
        },
        "1.14.14-buster": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:595244c0a4f2fa60cbc1a67f53eb22b570767659e91806225479129efa8dc751",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "b6752a4365523b6046118fb65e5b1225ab3b46d0bef4b39d64ff04d5bbc88ec3",
            "container_config": {
                "Hostname": "b6752a436552",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:595244c0a4f2fa60cbc1a67f53eb22b570767659e91806225479129efa8dc751",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-01-20T00:22:51.212834075Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-01-12T00:40:39.953186383Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:849d424ecc8572facb3ca68eff836dce211bc677cb32d3c3eaa129d364d33878 in / "
                },
                {
                    "created": "2021-01-12T00:40:43.460463354Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-12T01:23:26.100499084Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-01-12T01:23:41.997927053Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2021-01-12T01:24:24.232826775Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-01-12T20:17:26.707410789Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-01-12T20:17:29.504828433Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-20T00:22:08.102156131Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.14",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-20T00:22:35.105999628Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\t'amd64') \t\t\tarch='linux-amd64'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.14.linux-amd64.tar.gz'; \t\t\tsha256='6f1354c9040d65d1622b451f43c324c1e5197aa9242d00c5a117d0e2625f3e0d'; \t\t\t;; \t\t'armhf') \t\t\tarch='linux-armv6l'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.14.linux-armv6l.tar.gz'; \t\t\tsha256='e4d614c23b77a367becaeac3032cf4911793363a33efa299d29440be3d66234b'; \t\t\t;; \t\t'arm64') \t\t\tarch='linux-arm64'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.14.linux-arm64.tar.gz'; \t\t\tsha256='511d764197121f212d130724afb9c296f0cb4a22424e5ae956a5cc043b0f4a29'; \t\t\t;; \t\t'i386') \t\t\tarch='linux-386'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.14.linux-386.tar.gz'; \t\t\tsha256='b08e088ba99134035782c71aeaf139f36d2306eb88eddc22c1278b8b446f157e'; \t\t\t;; \t\t'ppc64el') \t\t\tarch='linux-ppc64le'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.14.linux-ppc64le.tar.gz'; \t\t\tsha256='f24eddfac754b48d9c28a459f0e4fc5af8f037dac0e9b3159b9bb98b6b1ab88c'; \t\t\t;; \t\t's390x') \t\t\tarch='linux-s390x'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.14.linux-s390x.tar.gz'; \t\t\tsha256='fcd84558e80257d3c308342964c10c1de8bd1c031c579bb02c5c07bf86fd86d7'; \t\t\t;; \t\t*) \t\t\tarch='src'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.14.src.tar.gz'; \t\t\tsha256='6204bf32f58fae0853f47f1bd0c51d9e0ac11f1ffb406bed07a0a8b016c8a76f'; \t\t\techo >&2; \t\t\techo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; \t\t\techo >&2; \t\t\t;; \tesac; \t\twget -O go.tgz.asc \"$url.asc\" --progress=dot:giga; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum --strict --check -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$arch\" = 'src' ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \t\teval \"$goEnv\"; \t\t[ -n \"$GOOS\" ]; \t\t[ -n \"$GOARCH\" ]; \t\t( \t\t\tcd /usr/local/go/src; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2021-01-20T00:22:44.847532645Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-20T00:22:46.78645111Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-20T00:22:49.794042319Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-01-20T00:22:51.212834075Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7ce7f234bab77e0253069b93abf52000e714b9fe82ad5e3b47d60bbde097781b",
                    "sha256:a09cc058b0610fd54c6ff3c907d4da1dcf5897f5f92cdfda08ddab5f941db2f6",
                    "sha256:5404989e9c63a2de36e58414ad8da02978eac80f5fffa1ceb5df9ab265f26b8d",
                    "sha256:d8af944d736329ab907bb507d5f9a691a6fe9ebf205b428c89a023908416d174",
                    "sha256:1637a90a9934fb2b8c12b50084ab0cbedb168a7e0a1d9d415fe31153dc0859df",
                    "sha256:a4ec74f2811fb82d44f868a470b854406452ef26276cc557446b9cfe65cb6d9c",
                    "sha256:624122cbe3aa2c16be1be120803e3760e3331b9e5581fe7f9f6b5b6f03e96d25"
                ]
            }
        },
        "1.14.14-stretch": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:391b40ff52aa5ea23d47e1fe19e29d700686a691f546cf10a40bb7f8394f7e7f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f5bb4a6e35f97a069a55c4e7fcb109190d33164a143fd2f812491708620fcbfc",
            "container_config": {
                "Hostname": "f5bb4a6e35f9",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:391b40ff52aa5ea23d47e1fe19e29d700686a691f546cf10a40bb7f8394f7e7f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-01-20T00:23:30.416258223Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-01-12T00:45:18.261043324Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bc4af94773a01defa7a79adb22199dde2229843dae224d13d3385c522cb71652 in / "
                },
                {
                    "created": "2021-01-12T00:45:22.750263308Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-12T01:30:22.852274114Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-01-12T01:30:38.147013749Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2021-01-12T01:31:25.615398367Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-01-12T20:19:52.40155554Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-01-12T20:19:53.417433842Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-20T00:23:01.028319339Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.14",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-20T00:23:21.383581555Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\t'amd64') \t\t\tarch='linux-amd64'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.14.linux-amd64.tar.gz'; \t\t\tsha256='6f1354c9040d65d1622b451f43c324c1e5197aa9242d00c5a117d0e2625f3e0d'; \t\t\t;; \t\t'armhf') \t\t\tarch='linux-armv6l'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.14.linux-armv6l.tar.gz'; \t\t\tsha256='e4d614c23b77a367becaeac3032cf4911793363a33efa299d29440be3d66234b'; \t\t\t;; \t\t'arm64') \t\t\tarch='linux-arm64'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.14.linux-arm64.tar.gz'; \t\t\tsha256='511d764197121f212d130724afb9c296f0cb4a22424e5ae956a5cc043b0f4a29'; \t\t\t;; \t\t'i386') \t\t\tarch='linux-386'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.14.linux-386.tar.gz'; \t\t\tsha256='b08e088ba99134035782c71aeaf139f36d2306eb88eddc22c1278b8b446f157e'; \t\t\t;; \t\t'ppc64el') \t\t\tarch='linux-ppc64le'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.14.linux-ppc64le.tar.gz'; \t\t\tsha256='f24eddfac754b48d9c28a459f0e4fc5af8f037dac0e9b3159b9bb98b6b1ab88c'; \t\t\t;; \t\t's390x') \t\t\tarch='linux-s390x'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.14.linux-s390x.tar.gz'; \t\t\tsha256='fcd84558e80257d3c308342964c10c1de8bd1c031c579bb02c5c07bf86fd86d7'; \t\t\t;; \t\t*) \t\t\tarch='src'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.14.src.tar.gz'; \t\t\tsha256='6204bf32f58fae0853f47f1bd0c51d9e0ac11f1ffb406bed07a0a8b016c8a76f'; \t\t\techo >&2; \t\t\techo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; \t\t\techo >&2; \t\t\t;; \tesac; \t\twget -O go.tgz.asc \"$url.asc\" --progress=dot:giga; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum --strict --check -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$arch\" = 'src' ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \t\teval \"$goEnv\"; \t\t[ -n \"$GOOS\" ]; \t\t[ -n \"$GOARCH\" ]; \t\t( \t\t\tcd /usr/local/go/src; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2021-01-20T00:23:23.873566689Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-20T00:23:25.07906554Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-20T00:23:29.061725716Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-01-20T00:23:30.416258223Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b1326e8463e2d86ca0d0f43d4f8d17d4f5876fda9a4da5db1a7b00760af4bba9",
                    "sha256:492856012062575e96c2a7d95b12df11777d452912e3d4dda3ea5a6a7d724202",
                    "sha256:e2017cbac1312ca39644eeedc721a13811541637f18943148881814f77e7274e",
                    "sha256:4573aeb4c99955a278b3c8615bb416ea1327374aeebfda108ecdb00793a5fd9a",
                    "sha256:553c5aa2d63594b84a32af27c8cb0389533000aeaaf08100d418faca4106b291",
                    "sha256:871cd5ee22ca29ebc6400bd16ad84486ca189ba49420556a076cb3bc6341d22d",
                    "sha256:df7373a5935f01b4ed184a13ae1fd2dc574df1ff6071a387673c8a551fb2056d"
                ]
            }
        },
        "1.14.15-alpine": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:c2af1ac720dca520a69c3ba86d312abe01095e5992302a36108384f10d669d40",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "e160f0ce24d1403c429fb3e3e9a7e32e33ddd4ae82041caf823e892ebcf19da1",
            "container_config": {
                "Hostname": "e160f0ce24d1",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:c2af1ac720dca520a69c3ba86d312abe01095e5992302a36108384f10d669d40",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-02-05T02:24:18.66803713Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-01-28T23:39:33.173069025Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fecabe41deaeb72acdd63023566d87ae48b013ef80c97fdd993b55d6c727da93 in / "
                },
                {
                    "created": "2021-01-28T23:39:34.152729289Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-29T00:25:09.918160191Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2021-01-29T00:25:12.497748248Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2021-01-29T00:25:13.290262095Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T02:22:02.018815183Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.15",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T02:24:07.622588443Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\turl='https://storage.googleapis.com/golang/go1.14.15.src.tar.gz'; \tsha256='7ed13b2209e54a451835997f78035530b331c5b6943cdcd68a3d815fdc009149'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \teval \"$goEnv\"; \t[ -n \"$GOOS\" ]; \t[ -n \"$GOARCH\" ]; \t( \t\tcd /usr/local/go/src; \t\t./make.bash; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2021-02-05T02:24:13.141993696Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T02:24:14.651330653Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T02:24:17.864393621Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-02-05T02:24:18.66803713Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:bc1660ee125400c1f1b66d87c5e65ba65e05b021e7e4e6b76a3e16e2e4b6fd3c",
                    "sha256:a96c0b17fff498a5a0a769fb636c6c2ed1e28a8c738158562401f27dbc1d32fb",
                    "sha256:ac7e341c4ea9a2f4e98edc06a702c76726cf8d6365ae52e43d2ed3452604a033",
                    "sha256:a7da2a36cc3a35006aa3f547646fec4864a1babf33e27d7881a9a75430d99759",
                    "sha256:2782d25976db03326acb8ddb0298ef02ccbbfd51b274dc0f151337ae23affd17"
                ]
            }
        },
        "1.14.15-alpine3.11": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:e8c82b0198b6e76d1cef3938733fde66bf9c4c79d037503ea31c4488d7eb1dbd",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "422c92f6281b2bbda2063bf85a367007950382d6f505139e7202a2e4b7a56c76",
            "container_config": {
                "Hostname": "422c92f6281b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:e8c82b0198b6e76d1cef3938733fde66bf9c4c79d037503ea31c4488d7eb1dbd",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-02-05T02:29:12.054621943Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-12-16T23:40:37.939971563Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:47bb1b85a4eb4d0b355ae89ec5c71c09e2c2b7e21e1851a2896365eb17134f57 in / "
                },
                {
                    "created": "2020-12-16T23:40:39.397059722Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-17T04:47:53.39179737Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-12-17T04:47:56.491386814Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-12-17T04:47:57.306953642Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T02:26:57.759444054Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.15",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T02:29:04.330047387Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\turl='https://storage.googleapis.com/golang/go1.14.15.src.tar.gz'; \tsha256='7ed13b2209e54a451835997f78035530b331c5b6943cdcd68a3d815fdc009149'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \teval \"$goEnv\"; \t[ -n \"$GOOS\" ]; \t[ -n \"$GOARCH\" ]; \t( \t\tcd /usr/local/go/src; \t\t./make.bash; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2021-02-05T02:29:07.515146924Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T02:29:08.735081102Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T02:29:11.029254829Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-02-05T02:29:12.054621943Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4d0185f84beff0ee0f58428a2c2f0ad9f1ad6b9f0d41443df725ff2bb29a3fc0",
                    "sha256:fe5ed3126b5619ac0ec12b30c34d0b46e21521790a77a38a8cf37e1365166d3f",
                    "sha256:f275eb2a4f11a64cb1f22e25c33f310497bc8eb3a7148a62311abf47efd5233a",
                    "sha256:26262b4919aa147a528abaf1d420da0aca4e819a83bdbaae30cfaef2549c9764",
                    "sha256:6650b000d5176a1fd97e205bf946cbed2da543ac497dc587defd6141f0c5b68d"
                ]
            }
        },
        "1.14.15-alpine3.12": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:3c10672b14a55a4cc9c286c620524682c35efb4cba420bfc1a6c38f7eee2718f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "9c5a15c3a560598dd91c059d074ec6073bc47fefa5a0c9919b1aa355bf3b6b2f",
            "container_config": {
                "Hostname": "9c5a15c3a560",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:3c10672b14a55a4cc9c286c620524682c35efb4cba420bfc1a6c38f7eee2718f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-02-05T02:26:43.86527883Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-12-16T23:40:26.733219846Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a4845c3840a3fd0e41e4635a179cce20c81afc6c02e34e3fd5bd2d535698918b in / "
                },
                {
                    "created": "2020-12-16T23:40:29.16971129Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-17T04:41:45.854743048Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-12-17T04:41:48.375073413Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-12-17T04:41:49.288544943Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T02:24:39.150101905Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.15",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T02:26:33.883035401Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\turl='https://storage.googleapis.com/golang/go1.14.15.src.tar.gz'; \tsha256='7ed13b2209e54a451835997f78035530b331c5b6943cdcd68a3d815fdc009149'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \teval \"$goEnv\"; \t[ -n \"$GOOS\" ]; \t[ -n \"$GOARCH\" ]; \t( \t\tcd /usr/local/go/src; \t\t./make.bash; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2021-02-05T02:26:38.022479452Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T02:26:39.060493079Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T02:26:41.854551626Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-02-05T02:26:43.86527883Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:379067d0cb5309d203a84fb900c950812df2089dedb822239d389ac45a20efe9",
                    "sha256:e9d38d210a8343fa45a8db0d774c9c38fba69b7807cd4816b80bf6356a925ddb",
                    "sha256:5746c35e32ecb5d07dec2dae715eac9b9e5096247ad0a5dcb36db3161aa5b0b4",
                    "sha256:2d9612d3847c5da714b1f72e758e1e781ab2801c7aec0ebc18e52977c40da084",
                    "sha256:1e2e179ad1c373ede037f6bf0ef01759f0fa04b9fb20cc56475ee943bba387d4"
                ]
            }
        },
        "1.14.15-alpine3.13": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:c2af1ac720dca520a69c3ba86d312abe01095e5992302a36108384f10d669d40",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "e160f0ce24d1403c429fb3e3e9a7e32e33ddd4ae82041caf823e892ebcf19da1",
            "container_config": {
                "Hostname": "e160f0ce24d1",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:c2af1ac720dca520a69c3ba86d312abe01095e5992302a36108384f10d669d40",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-02-05T02:24:18.66803713Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-01-28T23:39:33.173069025Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fecabe41deaeb72acdd63023566d87ae48b013ef80c97fdd993b55d6c727da93 in / "
                },
                {
                    "created": "2021-01-28T23:39:34.152729289Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-29T00:25:09.918160191Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2021-01-29T00:25:12.497748248Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2021-01-29T00:25:13.290262095Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T02:22:02.018815183Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.15",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T02:24:07.622588443Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\turl='https://storage.googleapis.com/golang/go1.14.15.src.tar.gz'; \tsha256='7ed13b2209e54a451835997f78035530b331c5b6943cdcd68a3d815fdc009149'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \teval \"$goEnv\"; \t[ -n \"$GOOS\" ]; \t[ -n \"$GOARCH\" ]; \t( \t\tcd /usr/local/go/src; \t\t./make.bash; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2021-02-05T02:24:13.141993696Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T02:24:14.651330653Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T02:24:17.864393621Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-02-05T02:24:18.66803713Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:bc1660ee125400c1f1b66d87c5e65ba65e05b021e7e4e6b76a3e16e2e4b6fd3c",
                    "sha256:a96c0b17fff498a5a0a769fb636c6c2ed1e28a8c738158562401f27dbc1d32fb",
                    "sha256:ac7e341c4ea9a2f4e98edc06a702c76726cf8d6365ae52e43d2ed3452604a033",
                    "sha256:a7da2a36cc3a35006aa3f547646fec4864a1babf33e27d7881a9a75430d99759",
                    "sha256:2782d25976db03326acb8ddb0298ef02ccbbfd51b274dc0f151337ae23affd17"
                ]
            }
        },
        "1.14.15-buster": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:30dfee8ee31347eafdf2af403564f583724d0c2cee8ac542c506bb92493b2c09",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "4626ad67e08416a476d61760f088c06d3a5b2f52ce05a415fddca40b786803e6",
            "container_config": {
                "Hostname": "4626ad67e084",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:30dfee8ee31347eafdf2af403564f583724d0c2cee8ac542c506bb92493b2c09",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-02-09T21:51:48.444106365Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-02-09T02:40:45.953725429Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:78412ee35e3dc6fb5fdfce41eb05dd273ba1d49328ab327465639bfa4821aa51 in / "
                },
                {
                    "created": "2021-02-09T02:40:50.212588912Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-09T04:43:43.898983099Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-02-09T04:43:54.867823571Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2021-02-09T04:44:26.980723568Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-02-09T21:49:51.728205337Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-02-09T21:49:54.122012674Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-09T21:51:26.166773056Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.15",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-09T21:51:41.587340605Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\t'amd64') \t\t\tarch='linux-amd64'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.15.linux-amd64.tar.gz'; \t\t\tsha256='c64a57b374a81f7cf1408d2c410a28c6f142414f1ffa9d1062de1d653b0ae0d6'; \t\t\t;; \t\t'armhf') \t\t\tarch='linux-armv6l'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.15.linux-armv6l.tar.gz'; \t\t\tsha256='a63960d9b9c14954e299ffe060c0574ffb91ab810837da5941853b664d0652da'; \t\t\t;; \t\t'arm64') \t\t\tarch='linux-arm64'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.15.linux-arm64.tar.gz'; \t\t\tsha256='4d964166a189c22032521c63935437c304bb7f01673b196898cff525897a1c27'; \t\t\t;; \t\t'i386') \t\t\tarch='linux-386'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.15.linux-386.tar.gz'; \t\t\tsha256='cab962eaf954378bbb5b24f703baf3b471e9690a109082dd688593fbb6f9008e'; \t\t\t;; \t\t'ppc64el') \t\t\tarch='linux-ppc64le'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.15.linux-ppc64le.tar.gz'; \t\t\tsha256='64d82004270bcd00948dbed9f1a123ef844ceb7633e6a87a5ca7ef8bdf59cfc1'; \t\t\t;; \t\t's390x') \t\t\tarch='linux-s390x'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.15.linux-s390x.tar.gz'; \t\t\tsha256='8e121c947ec531628d37ad0292623f22c8f9fecac6067192b5cce34b36cedd79'; \t\t\t;; \t\t*) \t\t\tarch='src'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.15.src.tar.gz'; \t\t\tsha256='7ed13b2209e54a451835997f78035530b331c5b6943cdcd68a3d815fdc009149'; \t\t\techo >&2; \t\t\techo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; \t\t\techo >&2; \t\t\t;; \tesac; \t\twget -O go.tgz.asc \"$url.asc\" --progress=dot:giga; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum --strict --check -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$arch\" = 'src' ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \t\teval \"$goEnv\"; \t\t[ -n \"$GOOS\" ]; \t\t[ -n \"$GOARCH\" ]; \t\t( \t\t\tcd /usr/local/go/src; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2021-02-09T21:51:44.852113428Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-09T21:51:45.592925951Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-09T21:51:47.671619465Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-02-09T21:51:48.444106365Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8b48d02fb3dba95b118eedf573f2597e68b023b573afba0f7d3d022916403fe2",
                    "sha256:a962cf2c9f2de76abccf25ff88b0e4ff5f57479c9ffd0cd9282ff927a7967bb8",
                    "sha256:cc76a08251e16bc5622f718892764d4a20324dff712fe0bd360d5d535277929e",
                    "sha256:7e651d61f4f6e7e9e8f2cba5b9285c02bb3491487d8cef1366b7b679b91b69c5",
                    "sha256:fc91257f3d3554ff917fe8e82da3f62e9e80534a8c942e88ed0777cb11ea449f",
                    "sha256:e0c5606e3b2f4c51afafac46da0f3d5b36237d734a8d4eeecec9c420f48703f4",
                    "sha256:6b25dbda83643b99ca3a6480eeb5e386fdd10782eec6cba0a58e2a3e21d9962e"
                ]
            }
        },
        "1.14.15-stretch": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:64785276c643aae4a1d99fd728c0d72470a1434f7f71b7aba7f710d29cc92f4f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "e4c7973c1bff6a6c844fdb5d73440e7e4d21ff10ce9e6cf24c8eaca3cad302d1",
            "container_config": {
                "Hostname": "e4c7973c1bff",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:64785276c643aae4a1d99fd728c0d72470a1434f7f71b7aba7f710d29cc92f4f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-02-09T21:52:40.527539924Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-02-09T02:43:17.215780489Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fb69ff7b2a28f793efbd16e04b74ffb4557d39e1844b3789075b4d3ff97a0eaa in / "
                },
                {
                    "created": "2021-02-09T02:43:20.032537103Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-09T04:50:24.605173051Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tapt-transport-https \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-02-09T04:50:35.219512446Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2021-02-09T04:51:15.494967404Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-02-09T21:52:14.626649885Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-02-09T21:52:16.312628939Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-09T21:52:16.984348612Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.15",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-09T21:52:34.033416623Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\t'amd64') \t\t\tarch='linux-amd64'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.15.linux-amd64.tar.gz'; \t\t\tsha256='c64a57b374a81f7cf1408d2c410a28c6f142414f1ffa9d1062de1d653b0ae0d6'; \t\t\t;; \t\t'armhf') \t\t\tarch='linux-armv6l'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.15.linux-armv6l.tar.gz'; \t\t\tsha256='a63960d9b9c14954e299ffe060c0574ffb91ab810837da5941853b664d0652da'; \t\t\t;; \t\t'arm64') \t\t\tarch='linux-arm64'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.15.linux-arm64.tar.gz'; \t\t\tsha256='4d964166a189c22032521c63935437c304bb7f01673b196898cff525897a1c27'; \t\t\t;; \t\t'i386') \t\t\tarch='linux-386'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.15.linux-386.tar.gz'; \t\t\tsha256='cab962eaf954378bbb5b24f703baf3b471e9690a109082dd688593fbb6f9008e'; \t\t\t;; \t\t'ppc64el') \t\t\tarch='linux-ppc64le'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.15.linux-ppc64le.tar.gz'; \t\t\tsha256='64d82004270bcd00948dbed9f1a123ef844ceb7633e6a87a5ca7ef8bdf59cfc1'; \t\t\t;; \t\t's390x') \t\t\tarch='linux-s390x'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.15.linux-s390x.tar.gz'; \t\t\tsha256='8e121c947ec531628d37ad0292623f22c8f9fecac6067192b5cce34b36cedd79'; \t\t\t;; \t\t*) \t\t\tarch='src'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.15.src.tar.gz'; \t\t\tsha256='7ed13b2209e54a451835997f78035530b331c5b6943cdcd68a3d815fdc009149'; \t\t\techo >&2; \t\t\techo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; \t\t\techo >&2; \t\t\t;; \tesac; \t\twget -O go.tgz.asc \"$url.asc\" --progress=dot:giga; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum --strict --check -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$arch\" = 'src' ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \t\teval \"$goEnv\"; \t\t[ -n \"$GOOS\" ]; \t\t[ -n \"$GOARCH\" ]; \t\t( \t\t\tcd /usr/local/go/src; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2021-02-09T21:52:36.791681837Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-09T21:52:37.555554842Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-09T21:52:39.804873455Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-02-09T21:52:40.527539924Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ffff308d208ea88d0d9952f38ebeca34d2f3300ae5cef0a5d1db0c4d5d921bd9",
                    "sha256:78e30c2fe499706708ade019b7b5562a04cab5f1a337c79c078f7d083a3a0472",
                    "sha256:71e69eecdf654c26f98fb1ade95bf990275f3d0221631f219633ffdbeacf9240",
                    "sha256:15af7dc952c03b28c96b12562f11cd3c064275c8d4d2eb41ef724c42a2d81aa6",
                    "sha256:f5099313dd660c29a3172140b3164d4c211a155be8ee0c25b46ec9756393ad38",
                    "sha256:2fe43ec8cb93cf0cae3c382de21dbeb0f38be67126bdeb5877b60aff2cf330f9",
                    "sha256:221364bce8fd9d05c963785a66d2f3b54983266189307a7c326578769448d347"
                ]
            }
        }
    }
}