{
    "manifests": {
        "latest": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 12186,
                "digest": "sha256:3333cca64032d9ac4f2c9876b9d1e2559b9ea7b079b1049e3c58835e9dc27a2f"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2065537,
                    "digest": "sha256:ff3a5c916c92643ff77519ffa742d3ec61b7f591b6b7504599d95a4a41134e28"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5821123,
                    "digest": "sha256:b430473be128c1302a75e8381dfbaa45182fec81db4f75b749e4896d7816c2ea"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 490,
                    "digest": "sha256:7d4e05a01906143afc15671a53151ea9755dac230db376a8b8364b21ca774dbc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 628,
                    "digest": "sha256:8aeac9a3205fce5e21ab65ccce330fe389a9aaf47e4b682970b1772ae25a1d73"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 99,
                    "digest": "sha256:e15d4abd4ac73df75b9cbaba9a2b4c5396066044fe98daaf9710d51e05311984"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 443,
                    "digest": "sha256:66cd74a0fe8c6ec08423a2e8f4cabed3d441a36cf36ae50e2bafcd2091bd897f"
                }
            ]
        }
    },
    "tags": [
        "latest"
    ],
    "configs": {
        "latest": {
            "architecture": "amd64",
            "author": "Eugene Cheah <eugene@picoded.com>",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.13.12",
                    "HTTPCODE=307"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "nginx -g \"daemon off;\""
                ],
                "ArgsEscaped": true,
                "Image": "sha256:35b637a39f17f331d343c7222828a4deb6979dd3ad94cab7ea5fb91993e869cb",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/entrypoint/primer.sh"
                ],
                "OnBuild": [],
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>"
                },
                "StopSignal": "SIGTERM"
            },
            "container": "3605e16da26cfc671908e618618b65022f13c9030dc55e2862e4aaa72d486609",
            "container_config": {
                "Hostname": "3605e16da26c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.13.12",
                    "HTTPCODE=307"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/bin/sh\" \"-c\" \"nginx -g \\\"daemon off;\\\"\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:35b637a39f17f331d343c7222828a4deb6979dd3ad94cab7ea5fb91993e869cb",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/entrypoint/primer.sh"
                ],
                "OnBuild": [],
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>"
                },
                "StopSignal": "SIGTERM"
            },
            "created": "2018-04-21T18:59:28.963276407Z",
            "docker_version": "17.06.1-ce",
            "history": [
                {
                    "created": "2018-01-09T21:10:58.365737589Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:093f0723fa46f6cdbd6f7bd146448bb70ecce54254c35701feeceb956414622f in / "
                },
                {
                    "created": "2018-01-09T21:10:58.579708634Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-20T22:54:03.35482938Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "empty_layer": true
                },
                {
                    "created": "2018-04-10T18:27:27.451937599Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NGINX_VERSION=1.13.12",
                    "empty_layer": true
                },
                {
                    "created": "2018-04-10T18:28:27.360274017Z",
                    "created_by": "/bin/sh -c GPG_KEYS=B0F4253373F8F6F510D42178520A9993A1C052F8 \t&& CONFIG=\"\t\t--prefix=/etc/nginx \t\t--sbin-path=/usr/sbin/nginx \t\t--modules-path=/usr/lib/nginx/modules \t\t--conf-path=/etc/nginx/nginx.conf \t\t--error-log-path=/var/log/nginx/error.log \t\t--http-log-path=/var/log/nginx/access.log \t\t--pid-path=/var/run/nginx.pid \t\t--lock-path=/var/run/nginx.lock \t\t--http-client-body-temp-path=/var/cache/nginx/client_temp \t\t--http-proxy-temp-path=/var/cache/nginx/proxy_temp \t\t--http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp \t\t--http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp \t\t--http-scgi-temp-path=/var/cache/nginx/scgi_temp \t\t--user=nginx \t\t--group=nginx \t\t--with-http_ssl_module \t\t--with-http_realip_module \t\t--with-http_addition_module \t\t--with-http_sub_module \t\t--with-http_dav_module \t\t--with-http_flv_module \t\t--with-http_mp4_module \t\t--with-http_gunzip_module \t\t--with-http_gzip_static_module \t\t--with-http_random_index_module \t\t--with-http_secure_link_module \t\t--with-http_stub_status_module \t\t--with-http_auth_request_module \t\t--with-http_xslt_module=dynamic \t\t--with-http_image_filter_module=dynamic \t\t--with-http_geoip_module=dynamic \t\t--with-threads \t\t--with-stream \t\t--with-stream_ssl_module \t\t--with-stream_ssl_preread_module \t\t--with-stream_realip_module \t\t--with-stream_geoip_module=dynamic \t\t--with-http_slice_module \t\t--with-mail \t\t--with-mail_ssl_module \t\t--with-compat \t\t--with-file-aio \t\t--with-http_v2_module \t\" \t&& addgroup -S nginx \t&& adduser -D -S -h /var/cache/nginx -s /sbin/nologin -G nginx nginx \t&& apk add --no-cache --virtual .build-deps \t\tgcc \t\tlibc-dev \t\tmake \t\topenssl-dev \t\tpcre-dev \t\tzlib-dev \t\tlinux-headers \t\tcurl \t\tgnupg \t\tlibxslt-dev \t\tgd-dev \t\tgeoip-dev \t&& curl -fSL https://nginx.org/download/nginx-$NGINX_VERSION.tar.gz -o nginx.tar.gz \t&& curl -fSL https://nginx.org/download/nginx-$NGINX_VERSION.tar.gz.asc  -o nginx.tar.gz.asc \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& found=''; \tfor server in \t\tha.pool.sks-keyservers.net \t\thkp://keyserver.ubuntu.com:80 \t\thkp://p80.pool.sks-keyservers.net:80 \t\tpgp.mit.edu \t; do \t\techo \"Fetching GPG key $GPG_KEYS from $server\"; \t\tgpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" && found=yes && break; \tdone; \ttest -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $GPG_KEYS\" && exit 1; \tgpg --batch --verify nginx.tar.gz.asc nginx.tar.gz \t&& rm -rf \"$GNUPGHOME\" nginx.tar.gz.asc \t&& mkdir -p /usr/src \t&& tar -zxC /usr/src -f nginx.tar.gz \t&& rm nginx.tar.gz \t&& cd /usr/src/nginx-$NGINX_VERSION \t&& ./configure $CONFIG --with-debug \t&& make -j$(getconf _NPROCESSORS_ONLN) \t&& mv objs/nginx objs/nginx-debug \t&& mv objs/ngx_http_xslt_filter_module.so objs/ngx_http_xslt_filter_module-debug.so \t&& mv objs/ngx_http_image_filter_module.so objs/ngx_http_image_filter_module-debug.so \t&& mv objs/ngx_http_geoip_module.so objs/ngx_http_geoip_module-debug.so \t&& mv objs/ngx_stream_geoip_module.so objs/ngx_stream_geoip_module-debug.so \t&& ./configure $CONFIG \t&& make -j$(getconf _NPROCESSORS_ONLN) \t&& make install \t&& rm -rf /etc/nginx/html/ \t&& mkdir /etc/nginx/conf.d/ \t&& mkdir -p /usr/share/nginx/html/ \t&& install -m644 html/index.html /usr/share/nginx/html/ \t&& install -m644 html/50x.html /usr/share/nginx/html/ \t&& install -m755 objs/nginx-debug /usr/sbin/nginx-debug \t&& install -m755 objs/ngx_http_xslt_filter_module-debug.so /usr/lib/nginx/modules/ngx_http_xslt_filter_module-debug.so \t&& install -m755 objs/ngx_http_image_filter_module-debug.so /usr/lib/nginx/modules/ngx_http_image_filter_module-debug.so \t&& install -m755 objs/ngx_http_geoip_module-debug.so /usr/lib/nginx/modules/ngx_http_geoip_module-debug.so \t&& install -m755 objs/ngx_stream_geoip_module-debug.so /usr/lib/nginx/modules/ngx_stream_geoip_module-debug.so \t&& ln -s ../../usr/lib/nginx/modules /etc/nginx/modules \t&& strip /usr/sbin/nginx* \t&& strip /usr/lib/nginx/modules/*.so \t&& rm -rf /usr/src/nginx-$NGINX_VERSION \t\t&& apk add --no-cache --virtual .gettext gettext \t&& mv /usr/bin/envsubst /tmp/ \t\t&& runDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' /usr/sbin/nginx /usr/lib/nginx/modules/*.so /tmp/envsubst \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t)\" \t&& apk add --no-cache --virtual .nginx-rundeps $runDeps \t&& apk del .build-deps \t&& apk del .gettext \t&& mv /tmp/envsubst /usr/local/bin/ \t\t&& apk add --no-cache tzdata \t\t&& ln -sf /dev/stdout /var/log/nginx/access.log \t&& ln -sf /dev/stderr /var/log/nginx/error.log"
                },
                {
                    "created": "2018-04-10T18:28:27.84388069Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:af94db45bb7e4b8ff4e699f1ff6f41c348f9876073ad91d6e803070415f8d9ce in /etc/nginx/nginx.conf "
                },
                {
                    "created": "2018-04-10T18:28:28.260335605Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:1d1ac3b9a14c94a709efa20da1c4268a931f1a234e782801ce5912fdcf53a7af in /etc/nginx/conf.d/default.conf "
                },
                {
                    "created": "2018-04-10T18:28:28.536568621Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 80/tcp",
                    "empty_layer": true
                },
                {
                    "created": "2018-04-10T18:28:28.80753809Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL [SIGTERM]",
                    "empty_layer": true
                },
                {
                    "created": "2018-04-10T18:28:29.068030039Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-04-21T18:59:25.776965776Z",
                    "author": "Eugene Cheah <eugene@picoded.com>",
                    "created_by": "/bin/sh -c #(nop)  MAINTAINER Eugene Cheah <eugene@picoded.com>",
                    "empty_layer": true
                },
                {
                    "created": "2018-04-21T18:59:26.051734835Z",
                    "author": "Eugene Cheah <eugene@picoded.com>",
                    "created_by": "/bin/sh -c #(nop)  ENV HTTPCODE=307",
                    "empty_layer": true
                },
                {
                    "created": "2018-04-21T18:59:26.386532825Z",
                    "author": "Eugene Cheah <eugene@picoded.com>",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 80/tcp",
                    "empty_layer": true
                },
                {
                    "created": "2018-04-21T18:59:27.397020726Z",
                    "author": "Eugene Cheah <eugene@picoded.com>",
                    "created_by": "/bin/sh -c mkdir /entrypoint;"
                },
                {
                    "created": "2018-04-21T18:59:28.389528048Z",
                    "author": "Eugene Cheah <eugene@picoded.com>",
                    "created_by": "/bin/sh -c echo '#!/bin/sh'                                                                   > /entrypoint/primer.sh && \techo ''                                                                             >> /entrypoint/primer.sh && \techo '# Goes into the nginx config folder'                                          >> /entrypoint/primer.sh && \techo 'cd /etc/nginx/conf.d/'                                                        >> /entrypoint/primer.sh && \techo ''                                                                             >> /entrypoint/primer.sh && \techo '# Setup the server config'                                                    >> /entrypoint/primer.sh && \techo 'echo \"server {\"                                          > default.conf'      >> /entrypoint/primer.sh && \techo 'echo \"   listen 80;\"                                     >> default.conf'     >> /entrypoint/primer.sh && \techo 'echo \"   return $HTTPCODE https://\\$host\\$request_uri;\"  >> default.conf'     >> /entrypoint/primer.sh && \techo 'echo \"}\"                                                 >> default.conf'     >> /entrypoint/primer.sh && \techo ''                                                                             >> /entrypoint/primer.sh && \techo '# Goes back to root folder'                                                   >> /entrypoint/primer.sh && \techo 'cd /'                                                                         >> /entrypoint/primer.sh && \techo ''                                                                             >> /entrypoint/primer.sh && \techo '# Chain the execution commands'                                               >> /entrypoint/primer.sh && \techo 'exec \"$@\"'                                                                    >> /entrypoint/primer.sh && \tchmod +x /entrypoint/primer.sh && \t/entrypoint/primer.sh;"
                },
                {
                    "created": "2018-04-21T18:59:28.683029688Z",
                    "author": "Eugene Cheah <eugene@picoded.com>",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/entrypoint/primer.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-04-21T18:59:28.963276407Z",
                    "author": "Eugene Cheah <eugene@picoded.com>",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\" \"-c\" \"nginx -g \\\"daemon off;\\\"\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd7100a72410606589a54b932cabd804a17f9ae5b42a1882bd56d263e02b6215",
                    "sha256:90c4db1d5ef5c1e76f8122c304e136efe277b4a26aaa6e7c8c8f32033291b2a4",
                    "sha256:87deea50885081d233ed23b5aa1644a0cea0c35d37cee1e37b2f318b7e697a74",
                    "sha256:a79fe6dff0725f35c095b5ecf898566df5f57f17ea28e25d9a980fcdc271eb7e",
                    "sha256:6adee648577fd65867d79c499831c5a94ad51626222b23ff46b40908922368a8",
                    "sha256:5028800fe8a4b60ac9fa2039b1274564f1b40612480debf293fc6d2183a5a16e"
                ]
            }
        }
    }
}